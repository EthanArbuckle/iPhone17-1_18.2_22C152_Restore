uint64_t sub_24D9A7E6C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  int v37;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  v46 = *(unsigned __int8 *)(v2 + 80);
  v47 = *(void *)(v2 + 64);
  v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  v6 = *(unsigned __int8 *)(v5 + 80);
  v7 = v4 | v6 | 7;
  v8 = (((*(void *)(v5 + 64) + ((v6 + ((*(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  v9 = *(void *)(sub_24DCC8CE8() - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v44 = *(_DWORD *)(v9 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  v45 = (((((v47 + v46) & ~v46) + v47 + v7) & ~v7) + v10 + 16 + v8 + 16) & v44;
  v11 = *(void *)(v9 + 64);
  v43 = *(_DWORD *)(v9 + 84);
  v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  v13 = *(void *)(v12 + 64);
  v14 = *(unsigned __int8 *)(v12 + 80);
  v15 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  v18 = (v47 & 0xFFFFFFFFFFFFFFF8) + 24;
  v19 = ((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  v20 = *(unsigned __int8 *)(v17 + 80);
  v21 = v16 & 0xF8 | v20 | 7;
  v22 = (((((v13 + v14) & ~v14) + v13 + v21) & ~v21)
       + v10
       + 16
       + ((((*(void *)(v17 + 64) + ((v20 + ((*(void *)(v15 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v20) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & v44;
  v23 = v14 | v10 | v21;
  v24 = (v13 & 0xFFFFFFFFFFFFFFF8) + 24;
  v25 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v43) {
    v26 = v11;
  }
  else {
    v26 = v11 + 1;
  }
  v27 = ((((((((((v26
                + ((v10
                  + ((((((v11 + ((v11 + v10 + ((v10 + 12) & ~v10)) & ~v10) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v10)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  v28 = (((v27 + v45) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v29 = ((((v28 + 23 + ((v28 + (v7 | v46 | v10) + 16) & ~(v7 | v46 | v10))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v29 <= ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    v29 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 > v29) {
    v29 = (v47 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v19 > v29) {
    v29 = ((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 <= v29) {
    v18 = v29;
  }
  if (v19 > v18) {
    v18 = ((v47 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  v30 = (((v27 + v22) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  v31 = ((v30 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  v32 = ((((v30 + 23 + ((v30 + v23 + 16) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v32 <= v31) {
    v32 = v31;
  }
  if (v24 > v32) {
    v32 = (v13 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v25 > v32) {
    v32 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v24 <= v32) {
    v24 = v32;
  }
  if (v25 > v24) {
    v24 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  v33 = v24 + 1;
  if (v33 <= v18 + 1) {
    v34 = v18 + 1;
  }
  else {
    v34 = v33;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_46;
  }
  v35 = v34 + 1;
  v36 = 8 * (v34 + 1);
  if ((v34 + 1) <= 3)
  {
    v39 = ((a2 + ~(-1 << v36) - 254) >> v36) + 1;
    if (HIWORD(v39))
    {
      v37 = *(_DWORD *)((char *)a1 + v35);
      if (!v37) {
        goto LABEL_46;
      }
      goto LABEL_38;
    }
    if (v39 > 0xFF)
    {
      v37 = *(unsigned __int16 *)((char *)a1 + v35);
      if (!*(unsigned __int16 *)((char *)a1 + v35)) {
        goto LABEL_46;
      }
      goto LABEL_38;
    }
    if (v39 < 2)
    {
LABEL_46:
      v41 = *((unsigned __int8 *)a1 + v34);
      if (v41 >= 2) {
        return (v41 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  v37 = *((unsigned __int8 *)a1 + v35);
  if (!*((unsigned char *)a1 + v35)) {
    goto LABEL_46;
  }
LABEL_38:
  v40 = (v37 - 1) << v36;
  if (v35 > 3) {
    v40 = 0;
  }
  if (v35)
  {
    if (v35 > 3) {
      LODWORD(v35) = 4;
    }
    switch((int)v35)
    {
      case 2:
        LODWORD(v35) = *a1;
        break;
      case 3:
        LODWORD(v35) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v35) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v35) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v35 | v40) + 255;
}

void sub_24D9A84E8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v44 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v45 = *(void *)(v3 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  unint64_t v9 = (((*(void *)(v6 + 64) + ((v7 + ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unint64_t v43 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v10 + 64);
  int v42 = *(_DWORD *)(v10 + 84);
  uint64_t v13 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v17 = *(_DWORD *)(v16 + 80);
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v19 = (v45 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v20 = ((v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v21 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v22 = v17 & 0xF8 | v21 | 7;
  unint64_t v23 = (((((v14 + v15) & ~v15) + v14 + v22) & ~v22)
       + v11
       + 16
       + ((((*(void *)(v18 + 64) + ((v21 + ((*(void *)(v16 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v21) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & v43;
  uint64_t v24 = v15 | v11 | v22;
  unint64_t v25 = (v14 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v26 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v42) {
    uint64_t v27 = v12;
  }
  else {
    uint64_t v27 = v12 + 1;
  }
  unint64_t v28 = ((((((((((v27
                + ((v11
                  + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v11)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v29 = (((v28 + ((((((v45 + v44) & ~v44) + v45 + v8) & ~v8) + v11 + 16 + v9 + 16) & v43)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = ((((v29 + 23 + ((v29 + (v8 | v44 | v11) + 16) & ~(v8 | v44 | v11))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v30 <= ((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v30 = ((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 > v30) {
    unint64_t v30 = (v45 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v20 > v30) {
    unint64_t v30 = ((v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 <= v30) {
    unint64_t v19 = v30;
  }
  if (v20 > v19) {
    unint64_t v19 = ((v45 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v31 = (((v28 + v23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = ((v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v33 = ((((v31 + 23 + ((v31 + v24 + 16) & ~v24)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v33 <= v32) {
    unint64_t v33 = v32;
  }
  if (v25 > v33) {
    unint64_t v33 = (v14 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v26 > v33) {
    unint64_t v33 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v25 <= v33) {
    unint64_t v25 = v33;
  }
  if (v26 > v25) {
    unint64_t v25 = ((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  unint64_t v34 = v25 + 1;
  if (v34 <= v19 + 1) {
    unint64_t v34 = v19 + 1;
  }
  size_t v35 = v34 + 1;
  if (a3 < 0xFF)
  {
    int v37 = 0;
    v36 = a1;
  }
  else
  {
    v36 = a1;
    if (v35 <= 3)
    {
      unsigned int v40 = ((a3 + ~(-1 << (8 * v35)) - 254) >> (8 * v35)) + 1;
      if (HIWORD(v40))
      {
        int v37 = 4;
      }
      else if (v40 >= 0x100)
      {
        int v37 = 2;
      }
      else
      {
        int v37 = v40 > 1;
      }
    }
    else
    {
      int v37 = 1;
    }
  }
  if (a2 > 0xFE)
  {
    unsigned int v38 = a2 - 255;
    if (v35 < 4)
    {
      int v39 = (v38 >> (8 * v35)) + 1;
      if (v34 != -1)
      {
        int v41 = v38 & ~(-1 << (8 * v35));
        bzero(v36, v35);
        if (v35 == 3)
        {
          *(_WORD *)v36 = v41;
          v36[2] = BYTE2(v41);
        }
        else if (v35 == 2)
        {
          *(_WORD *)v36 = v41;
        }
        else
        {
          unsigned char *v36 = v41;
        }
      }
    }
    else
    {
      bzero(v36, v34 + 1);
      *(_DWORD *)v36 = v38;
      int v39 = 1;
    }
    switch(v37)
    {
      case 1:
        v36[v35] = v39;
        break;
      case 2:
        *(_WORD *)&v36[v35] = v39;
        break;
      case 3:
LABEL_57:
        __break(1u);
        JUMPOUT(0x24D9A8BD4);
      case 4:
        *(_DWORD *)&v36[v35] = v39;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v37)
    {
      case 1:
        v36[v35] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_46;
      case 2:
        *(_WORD *)&v36[v35] = 0;
        goto LABEL_45;
      case 3:
        goto LABEL_57;
      case 4:
        *(_DWORD *)&v36[v35] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_46;
      default:
LABEL_45:
        if (a2) {
LABEL_46:
        }
          v36[v34] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24D9A8BFC(unsigned __int8 *a1)
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  unint64_t v9 = (((*(void *)(v6 + 64) + ((v7 + ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unint64_t v36 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    uint64_t v13 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v13 = v12 + 1;
  }
  unint64_t v34 = ((((((((((v13
                + ((v11
                  + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v11)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v14 = (((v34 + ((((((v2 + v3) & ~v3) + v2 + v8) & ~v8) + v11 + 16 + v9 + 16) & v36)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v16 = ((((v14 + 23 + ((v14 + (v8 | v3 | v11) + 16) & ~(v8 | v3 | v11))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v17 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v17 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v17 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v17 <= v15) {
    unint64_t v17 = v15;
  }
  if (v17 > v16) {
    unint64_t v16 = v17;
  }
  unint64_t v35 = v16 | 1;
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  uint64_t v23 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = v22 | v24 | 7;
  unint64_t v26 = (((v34
         + ((((((v19 + v20) & ~v20) + v19 + v25) & ~v25)
           + v11
           + 16
           + ((((*(void *)(v23 + 64) + ((v24 + ((*(void *)(v21 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16) & v36)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((v26 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v28 = ((((v26 + 23 + ((v26 + (v20 | v11 | v25) + 16) & ~(v20 | v11 | v25))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if ((v19 & 0xFFFFFFFFFFFFFFF8) + 24 <= ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v29 = ((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v29 = (v19 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v29 <= v27) {
    unint64_t v29 = v27;
  }
  if (v29 > v28) {
    unint64_t v28 = v29;
  }
  unint64_t v30 = v28 | 1;
  if (v30 <= v35) {
    unint64_t v30 = v35;
  }
  uint64_t result = a1[v30];
  if (result >= 2)
  {
    if (v30 <= 3) {
      uint64_t v32 = v30;
    }
    else {
      uint64_t v32 = 4;
    }
    switch(v32)
    {
      case 1:
        int v33 = *a1;
        if (v30 < 4) {
          goto LABEL_29;
        }
        goto LABEL_31;
      case 2:
        int v33 = *(unsigned __int16 *)a1;
        if (v30 >= 4) {
          goto LABEL_31;
        }
        goto LABEL_29;
      case 3:
        int v33 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v30 < 4) {
          goto LABEL_29;
        }
        goto LABEL_31;
      case 4:
        int v33 = *(_DWORD *)a1;
        if (v30 < 4) {
LABEL_29:
        }
          uint64_t result = (v33 | ((result - 2) << (8 * v30))) + 2;
        else {
LABEL_31:
        }
          uint64_t result = (v33 + 2);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24D9A91E0(unsigned char *a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 | v8 | 7;
  unint64_t v10 = (((*(void *)(v7 + 64) + ((v8 + ((*(void *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  unint64_t v44 = *(_DWORD *)(v11 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)(v11 + 64);
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v14 = v13 + 1;
  }
  unint64_t v42 = ((((((((((v14
                + ((v12
                  + ((((((v13 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v12)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v15 = (((v42 + ((((((v3 + v4) & ~v4) + v3 + v9) & ~v9) + v12 + 16 + v10 + 16) & v44)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = ((((v15 + 23 + ((v15 + (v9 | v4 | v12) + 16) & ~(v9 | v4 | v12))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v17 <= v16) {
    unint64_t v17 = v16;
  }
  unint64_t v18 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v18 > v17) {
    unint64_t v17 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v19 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v19 > v17) {
    unint64_t v17 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 > v17) {
    unint64_t v17 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v19 > v17) {
    unint64_t v17 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  size_t v43 = v17 + 1;
  uint64_t v20 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v23 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v24 = *(_DWORD *)(v23 + 80) & 0xF8;
  uint64_t v25 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v27 = v24 | v26 | 7;
  unint64_t v28 = (((v42
         + ((((((v21 + v22) & ~v22) + v21 + v27) & ~v27)
           + v12
           + 16
           + ((((*(void *)(v25 + 64) + ((v26 + ((*(void *)(v23 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v26) + 7) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16) & v44)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 23;
  unint64_t v30 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v31 = (v28 + (v22 | v12 | v27) + 16) & ~(v22 | v12 | v27);
  if (a2 > 1)
  {
    unint64_t v35 = ((((v29 + v31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v36 = (v21 & 0xFFFFFFFFFFFFFFF8) + 24;
    if (v36 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v36 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v36 > v35) {
      unint64_t v35 = v36;
    }
    if (v35 > v30) {
      unint64_t v30 = v35;
    }
    unint64_t v37 = v30 | 1;
    if (v37 <= v43) {
      size_t v38 = v43;
    }
    else {
      size_t v38 = v37;
    }
    if (v38 <= 3) {
      char v39 = ((a2 - 2) >> (8 * v38)) + 2;
    }
    else {
      char v39 = 2;
    }
    if (v38 <= 3) {
      int v40 = (a2 - 2) & ~(-1 << (8 * v38));
    }
    else {
      int v40 = a2 - 2;
    }
    a1[v38] = v39;
    if (v38 >= 4) {
      int v41 = 4;
    }
    else {
      int v41 = v38;
    }
    bzero(a1, v38);
    switch(v41)
    {
      case 2:
        *(_WORD *)a1 = v40;
        break;
      case 3:
        *(_WORD *)a1 = v40;
        a1[2] = BYTE2(v40);
        break;
      case 4:
        *(_DWORD *)a1 = v40;
        break;
      default:
        *a1 = v40;
        break;
    }
  }
  else
  {
    unint64_t v32 = ((((v29 + v31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v21 & 0xFFFFFFFFFFFFFFF8) + 24 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v33 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else {
      unint64_t v33 = (v21 & 0xFFFFFFFFFFFFFFF8) + 24;
    }
    if (v33 > v32) {
      unint64_t v32 = v33;
    }
    if (v32 > v30) {
      unint64_t v30 = v32;
    }
    unint64_t v34 = v30 | 1;
    if (v34 <= v43) {
      unint64_t v34 = v43;
    }
    a1[v34] = a2;
  }
}

uint64_t type metadata accessor for Mutation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D9A9850(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for SnapshotMutation();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v18 - v6;
  uint64_t v8 = type metadata accessor for SnapshotMutation();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v18 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v14, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v14, v4);
    uint64_t v16 = sub_24D9BD87C(v4);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v14, v8);
    uint64_t v16 = sub_24D9BD87C(v8);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  }
  return v16;
}

uint64_t sub_24D9A9AD0(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + 216);
  uint64_t v8 = swift_allocObject();
  *(_DWORD *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = v3;
  *(void *)(v8 + 32) = a2;
  *(void *)(v8 + 40) = a3;
  id v9 = v7;
  swift_retain();
  swift_retain();
  sub_24D3E29E4(0, (uint64_t)"performWithDiskDiagnosticAttributes(for:block:)", 47, 2, (uint64_t)sub_24D6D6ED8, v8);

  return swift_release();
}

uint64_t sub_24D9A9B94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void **)(v3 + 216);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = v3;
  v8[4] = a2;
  v8[5] = a3;
  id v9 = v7;
  swift_retain();
  swift_retain();
  sub_24D3E29E4(0, (uint64_t)"performWithDiskDiagnosticAttributes(by:block:)", 46, 2, (uint64_t)sub_24D6D6F7C, (uint64_t)v8);

  return swift_release();
}

id sub_24D9A9C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = (void *)v6;
  id v8 = v3;
  id result = (id)sub_24DCC8C88();
  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v11 = (uint64_t)v10;
  id result = objc_msgSend(v7, sel_integerValue);
  BOOL v12 = __OFSUB__(v11, result);
  uint64_t v13 = v11 - (void)result;
  if (v12)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((v13 & 0x8000000000000000) == 0)
  {
    id v14 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v13);
    id v15 = sub_24D9A9DF0(a2, a3);

    return v15;
  }
  BOOL v12 = __OFSUB__(0, v13);
  uint64_t v16 = -v13;
  if (v12) {
    goto LABEL_19;
  }
  id v17 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v16);
  id v18 = sub_24D9A9DF0(a2, a3);

  if (!v18)
  {

    return 0;
  }
  id result = objc_msgSend(v18, sel_integerValue);
  if (!__OFADD__(result, 1))
  {
    id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, -((uint64_t)result + 1));

    return v15;
  }
LABEL_20:
  __break(1u);
  return result;
}

id sub_24D9A9DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  self;
  uint64_t v6 = swift_dynamicCastObjCClass();
  if (!v6) {
    return 0;
  }
  uint64_t v7 = (void *)v6;
  id v8 = v3;
  if (!objc_msgSend(v7, sel_integerValue))
  {
    sub_24D3FB6F8(0, (unint64_t *)&qword_26B199EA0);
    id v13 = (id)sub_24DCCA378();
LABEL_15:
    id v12 = v13;

    return v12;
  }
  objc_msgSend(v7, sel_doubleValue);
  if (a1 < 2) {
LABEL_20:
  }
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/tree/VFSFileTree+DiagnosticCollection.swift", 144, 2, 13);
  double v10 = log(v9);
  double v11 = v10 / log((double)a1);
  if ((~*(void *)&v11 & 0x7FF0000000000000) != 0)
  {
    if (v11 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v11 < 9.22337204e18)
    {
      if (!__OFSUB__(a2, 1))
      {
        if (a2 - 1 >= ((uint64_t)v11 & ~((uint64_t)v11 >> 63))) {
          uint64_t v14 = (uint64_t)v11 & ~((uint64_t)v11 >> 63);
        }
        else {
          uint64_t v14 = a2 - 1;
        }
        id v13 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v14);
        goto LABEL_15;
      }
      goto LABEL_19;
    }
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }

  return 0;
}

void sub_24D9A9F60(int a1, void *a2, void (*a3)(void *, uint64_t))
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  swift_retain();
  if (objc_sync_enter(a2)) {
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  }
  swift_retain();
  if (objc_sync_exit(a2)) {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  }
  swift_release();
  swift_release();
  uint64_t v13 = 0;
  uint64_t v14 = 0;
  int v15 = a1;
  uint64_t v17 = 0;
  uint64_t v16 = 0;
  int v18 = 0;
  uint64_t v6 = fpfs_openfdbyhandle();
  if ((v6 & 0x80000000) != 0)
  {
    int v8 = MEMORY[0x253327160]();
    long double v9 = (void *)sub_24D90CF14(v8, 0, 0, 0xAu);
    swift_willThrow();
    id v10 = v9;
    LODWORD(v13) = sub_24DCC8348();
    sub_24D4C5C60();
    sub_24DCC86A8();

    id v11 = v9;
    a3(v9, 1);
  }
  else
  {
    uint64_t v7 = v6;
    sub_24D9AA33C(v6, a2, &v12);
    sub_24D40CB10(v7);
    a3(v12, 0);
    swift_bridgeObjectRelease();
  }
}

void sub_24D9AA150(uint64_t a1, void *a2, void (*a3)(void *, uint64_t))
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  swift_retain();
  if (objc_sync_enter(a2)) {
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  }
  swift_retain();
  if (objc_sync_exit(a2)) {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  }
  swift_release();
  swift_release();
  uint64_t v13 = a1;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v6 = fpfs_openfdbyhandle();
  if ((v6 & 0x80000000) != 0)
  {
    int v8 = MEMORY[0x253327160]();
    long double v9 = (void *)sub_24D90CF14(v8, 0, 0, 0xAu);
    swift_willThrow();
    id v10 = v9;
    LODWORD(v13) = sub_24DCC8348();
    sub_24D4C5C60();
    sub_24DCC86A8();

    id v11 = v9;
    a3(v9, 1);
  }
  else
  {
    uint64_t v7 = v6;
    sub_24D9AA33C(v6, a2, &v12);
    sub_24D40CB10(v7);
    a3(v12, 0);
    swift_bridgeObjectRelease();
  }
}

void sub_24D9AA33C(uint64_t a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  v23[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v6 - 8);
  int v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long double v9 = (void *)swift_retain();
  if (objc_sync_enter(v9)) {
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  }
  uint64_t v10 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  }
  swift_release();
  uint64_t v11 = v10 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL;
  uint64_t v12 = sub_24DCC8A58();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v8, v11, v12);
  swift_release();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
  long long v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v8, 1, v12) != 1)
  {
    long long v14 = (void *)sub_24DCC8948();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v12);
  }
  id v15 = objc_msgSend(objc_allocWithZone((Class)FPDiagnosticCollector), sel_initWithFD_trashURL_, a1, v14);

  v23[0] = 0;
  if (objc_msgSend(v15, sel_collectDiagnosticDiskAttributesWithError_, v23))
  {
    id v16 = v23[0];
    id v17 = objc_msgSend(v15, sel_diagnostic);
    if (v17)
    {
      int v18 = v17;
      type metadata accessor for FPDiagnosticAttributeKey(0);
      sub_24D3FB6F8(0, &qword_26B19A050);
      sub_24D9ABFE4((unint64_t *)&unk_26B194358, type metadata accessor for FPDiagnosticAttributeKey);
      uint64_t v19 = sub_24DCC9578();

      id v20 = sub_24D9AA70C(v19);
      swift_bridgeObjectRelease();

      *a3 = v20;
      return;
    }
    type metadata accessor for NSFileProviderError(0);
    v22[1] = -1005;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D9ABFE4(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
  }
  else
  {
    id v21 = v23[0];
    sub_24DCC8828();
  }
  swift_willThrow();
}

id sub_24D9AA70C(uint64_t a1)
{
  void (*v182)(void **__return_ptr, void **);
  void *v183;
  id v184;
  id v185;
  NSObject *v186;
  os_log_type_t v187;
  uint64_t v188;
  void *v189;
  uint64_t v190;
  unint64_t v191;
  void *v192;
  void *v193;
  void *v194;
  void *v195;
  void *v196;
  char isUniquelyReferenced_nonNull_native;
  char v198;
  unint64_t v199;
  uint64_t v200;
  BOOL v201;
  uint64_t v202;
  char v203;
  unint64_t v204;
  char v205;
  void *v206;
  uint64_t v207;
  id v208;
  id v209;
  void *v210;
  id v211;
  uint64_t v212;
  BOOL v213;
  uint64_t v214;
  id result;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  id v222;
  id v223;
  id v224;
  id v225;
  id v226;
  id v227;
  id v228;
  id v229;
  id v230;
  id v231;
  id v232;
  id v233;
  id v234;
  id v235;
  id v236;
  id v237;
  id v238;
  id v239;
  id v240;
  id v241;
  id v242;
  id v243;
  id v244;
  id v245;
  id v246;
  id v247;
  id v248;
  id v249;
  void *v250;
  uint64_t v251;
  uint64_t v252;
  id v253;
  long long v254;
  uint64_t v255;
  char *v256;
  id v257;
  void (**v258)(char *, uint64_t);
  uint64_t v259;
  id v260;
  void *v261;
  void *v262;

  uint64_t v2 = v1;
  v259 = sub_24DCC9078();
  uint64_t v4 = *(void *)(v259 - 8);
  MEMORY[0x270FA5388](v259);
  v256 = (char *)&v216 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v216 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v216 - v11;
  sub_24DCC8CD8();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, v10, v6);
  id v15 = (void *)*MEMORY[0x263F05250];
  uint64_t v16 = *(void *)(a1 + 16);
  swift_retain();
  v255 = a1;
  v252 = v2;
  v219 = v6;
  v218 = v7;
  v217 = v12;
  v220 = v4;
  if (!v16) {
    goto LABEL_7;
  }
  id v17 = v15;
  uint64_t v18 = sub_24D4060A4(v17);
  if ((v19 & 1) == 0)
  {

LABEL_7:
    v250 = 0;
    goto LABEL_8;
  }
  id v20 = *(id *)(*(void *)(a1 + 56) + 8 * v18);

  self;
  id v21 = (void *)swift_dynamicCastObjCClass();
  if (!v21)
  {

    goto LABEL_7;
  }
  v250 = v21;
LABEL_8:
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1943B0);
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = (id *)MEMORY[0x263F052B0];
  *(_OWORD *)(v22 + 16) = xmmword_24DCE1490;
  v233 = *v23;
  *(void *)(v22 + 32) = v233;
  *(void *)(v22 + 40) = sub_24D9ABE50;
  *(void *)(v22 + 48) = 0;
  v230 = (id)*MEMORY[0x263F052C0];
  *(void *)(v22 + 56) = v230;
  *(void *)(v22 + 64) = sub_24D9ABE50;
  int v24 = (void *)*MEMORY[0x263F052B8];
  *(void *)(v22 + 72) = 0;
  *(void *)(v22 + 80) = v24;
  v234 = v24;
  *(void *)(v22 + 88) = sub_24D9ABE50;
  *(void *)(v22 + 96) = 0;
  v238 = (id)*MEMORY[0x263F052A8];
  *(void *)(v22 + 104) = v238;
  *(void *)(v22 + 112) = sub_24D9ABE5C;
  *(void *)(v22 + 120) = 0;
  v237 = (id)*MEMORY[0x263F05278];
  *(void *)(v22 + 128) = v237;
  *(void *)(v22 + 136) = sub_24D9ABE50;
  *(void *)(v22 + 144) = 0;
  uint64_t v25 = (void *)*MEMORY[0x263F05210];
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_24D9AC0BC;
  *(void *)(v26 + 24) = v14;
  v240 = v25;
  *(void *)(v22 + 152) = v25;
  *(void *)(v22 + 160) = sub_24D9AC130;
  *(void *)(v22 + 168) = v26;
  v223 = (id)*MEMORY[0x263F05218];
  *(void *)(v22 + 176) = v223;
  *(void *)(v22 + 184) = sub_24D9ABE5C;
  *(void *)(v22 + 192) = 0;
  uint64_t v27 = (void *)*MEMORY[0x263F05280];
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_24D9AC0BC;
  *(void *)(v28 + 24) = v14;
  v225 = v27;
  *(void *)(v22 + 200) = v27;
  *(void *)(v22 + 208) = sub_24D9AC1B4;
  *(void *)(v22 + 216) = v28;
  unint64_t v29 = (void *)*MEMORY[0x263F05248];
  *(void *)(v22 + 224) = *MEMORY[0x263F05248];
  *(void *)(v22 + 232) = sub_24D9ABE50;
  v251 = v14;
  unint64_t v30 = (void *)*MEMORY[0x263F052A0];
  *(void *)(v22 + 240) = 0;
  *(void *)(v22 + 248) = v30;
  *(void *)(v22 + 256) = sub_24D9ABE64;
  *(void *)(v22 + 264) = 0;
  uint64_t v31 = (void *)*MEMORY[0x263F05208];
  *(void *)(v22 + 272) = *MEMORY[0x263F05208];
  *(void *)(v22 + 280) = sub_24D9ABE50;
  *(void *)(v22 + 288) = 0;
  *(void *)(v22 + 296) = v15;
  unint64_t v32 = v15;
  *(void *)(v22 + 304) = sub_24D42D87C;
  *(void *)(v22 + 312) = 0;
  v221 = (id)*MEMORY[0x263F05238];
  *(void *)(v22 + 320) = v221;
  *(void *)(v22 + 328) = sub_24D9ABE50;
  unint64_t v33 = (void *)*MEMORY[0x263F05268];
  *(void *)(v22 + 336) = 0;
  *(void *)(v22 + 344) = v33;
  v224 = v33;
  unint64_t v34 = (id *)MEMORY[0x263F05240];
  *(void *)(v22 + 352) = sub_24D9ABE90;
  *(void *)(v22 + 360) = 0;
  v222 = *v34;
  *(void *)(v22 + 368) = v222;
  *(void *)(v22 + 376) = sub_24D9ABE50;
  unint64_t v35 = (void *)*MEMORY[0x263F05228];
  *(void *)(v22 + 384) = 0;
  *(void *)(v22 + 392) = v35;
  v226 = v35;
  unint64_t v36 = (id *)MEMORY[0x263F05258];
  *(void *)(v22 + 400) = sub_24D9ABE50;
  *(void *)(v22 + 408) = 0;
  v227 = *v36;
  *(void *)(v22 + 416) = v227;
  *(void *)(v22 + 424) = sub_24D9ABE5C;
  unint64_t v37 = (void *)*MEMORY[0x263F05270];
  *(void *)(v22 + 432) = 0;
  *(void *)(v22 + 440) = v37;
  v229 = v37;
  *(void *)(v22 + 448) = sub_24D9ABEBC;
  *(void *)(v22 + 456) = 0;
  v228 = (id)*MEMORY[0x263F05290];
  *(void *)(v22 + 464) = v228;
  *(void *)(v22 + 472) = sub_24D9ABEBC;
  size_t v38 = (void *)*MEMORY[0x263F05298];
  *(void *)(v22 + 480) = 0;
  *(void *)(v22 + 488) = v38;
  v232 = v38;
  *(void *)(v22 + 496) = sub_24D9ABEBC;
  *(void *)(v22 + 504) = 0;
  v236 = (id)*MEMORY[0x263F05230];
  *(void *)(v22 + 512) = v236;
  *(void *)(v22 + 520) = sub_24D9ABEE8;
  *(void *)(v22 + 528) = 0;
  v235 = (id)*MEMORY[0x263F05260];
  *(void *)(v22 + 536) = v235;
  *(void *)(v22 + 544) = sub_24D9ABE5C;
  *(void *)(v22 + 552) = 0;
  char v39 = (void *)*MEMORY[0x263F05220];
  uint64_t v40 = swift_allocObject();
  uint64_t v41 = v252;
  *(void *)(v40 + 16) = sub_24D9AC128;
  *(void *)(v40 + 24) = v41;
  v239 = v39;
  *(void *)(v22 + 560) = v39;
  *(void *)(v22 + 568) = sub_24D9AC1B4;
  *(void *)(v22 + 576) = v40;
  v231 = (id)*MEMORY[0x263F05288];
  *(void *)(v22 + 584) = v231;
  *(void *)(v22 + 592) = sub_24D9ABE90;
  *(void *)(v22 + 600) = 0;
  unint64_t v42 = (void *)*MEMORY[0x263F051C0];
  *(void *)(v22 + 608) = *MEMORY[0x263F051C0];
  *(void *)(v22 + 616) = sub_24D9ABEE8;
  *(void *)(v22 + 624) = 0;
  size_t v43 = (void *)*MEMORY[0x263F051A8];
  *(void *)(v22 + 632) = *MEMORY[0x263F051A8];
  *(void *)(v22 + 640) = sub_24D9ABE5C;
  *(void *)(v22 + 648) = 0;
  v241 = (id)*MEMORY[0x263F051E0];
  *(void *)(v22 + 656) = v241;
  *(void *)(v22 + 664) = sub_24D9ABE50;
  *(void *)(v22 + 672) = 0;
  v242 = (id)*MEMORY[0x263F051D0];
  *(void *)(v22 + 680) = v242;
  *(void *)(v22 + 688) = sub_24D9ABEE8;
  *(void *)(v22 + 696) = 0;
  v243 = (id)*MEMORY[0x263F051C8];
  *(void *)(v22 + 704) = v243;
  *(void *)(v22 + 712) = sub_24D9ABEE8;
  *(void *)(v22 + 720) = 0;
  v245 = (id)*MEMORY[0x263F051A0];
  *(void *)(v22 + 728) = v245;
  *(void *)(v22 + 736) = sub_24D9ABF50;
  *(void *)(v22 + 744) = 0;
  v244 = (id)*MEMORY[0x263F051D8];
  *(void *)(v22 + 752) = v244;
  *(void *)(v22 + 760) = sub_24D9ABE50;
  *(void *)(v22 + 768) = 0;
  v246 = (id)*MEMORY[0x263F051B8];
  *(void *)(v22 + 776) = v246;
  *(void *)(v22 + 784) = sub_24D9ABE50;
  *(void *)(v22 + 792) = 0;
  v247 = (id)*MEMORY[0x263F051B0];
  *(void *)(v22 + 800) = v247;
  *(void *)(v22 + 808) = sub_24D9ABE50;
  *(void *)(v22 + 816) = 0;
  v248 = (id)*MEMORY[0x263F05198];
  *(void *)(v22 + 824) = v248;
  *(void *)(v22 + 832) = sub_24D9ABE50;
  *(void *)(v22 + 840) = 0;
  v249 = (id)*MEMORY[0x263F052F0];
  *(void *)(v22 + 848) = v249;
  *(void *)(v22 + 856) = sub_24D9ABE5C;
  *(void *)(v22 + 864) = 0;
  v253 = (id)*MEMORY[0x263F052E0];
  *(void *)(v22 + 872) = v253;
  *(void *)(v22 + 880) = sub_24D9ABE5C;
  *(void *)(v22 + 888) = 0;
  *(void *)&v254 = *MEMORY[0x263F052E8];
  *(void *)(v22 + 896) = v254;
  *(void *)(v22 + 904) = sub_24D9ABE5C;
  *(void *)(v22 + 912) = 0;
  v257 = (id)*MEMORY[0x263F052D8];
  *(void *)(v22 + 920) = v257;
  *(void *)(v22 + 928) = sub_24D9ABE5C;
  *(void *)(v22 + 936) = 0;
  unint64_t v44 = (void *)*MEMORY[0x263F052D0];
  *(void *)(v22 + 944) = *MEMORY[0x263F052D0];
  *(void *)(v22 + 952) = sub_24D9ABEE8;
  *(void *)(v22 + 960) = 0;
  uint64_t v45 = (void *)*MEMORY[0x263F052C8];
  *(void *)(v22 + 968) = *MEMORY[0x263F052C8];
  *(void *)(v22 + 976) = sub_24D9ABE50;
  *(void *)(v22 + 984) = 0;
  v258 = (void (**)(char *, uint64_t))*MEMORY[0x263F051F0];
  *(void *)(v22 + 992) = v258;
  *(void *)(v22 + 1000) = sub_24D9ABE50;
  *(void *)(v22 + 1008) = 0;
  v260 = (id)*MEMORY[0x263F051F8];
  v46 = v250;
  if (v250)
  {
    swift_retain_n();
    id v47 = v233;
    id v48 = v230;
    id v49 = v234;
    id v50 = v238;
    id v51 = v237;
    id v52 = v240;
    id v53 = v223;
    id v54 = v225;
    id v55 = v29;
    id v56 = v30;
    id v57 = v31;
    id v58 = v32;
    id v59 = v221;
    id v60 = v224;
    id v61 = v222;
    id v62 = v226;
    id v63 = v227;
    id v64 = v229;
    id v65 = v228;
    id v66 = v232;
    id v67 = v236;
    id v68 = v235;
    id v69 = v239;
    uint64_t v70 = v252;
    swift_retain();
    id v71 = v231;
    id v72 = v42;
    id v73 = v43;
    id v74 = v241;
    id v75 = v242;
    id v76 = v243;
    id v77 = v245;
    id v78 = v244;
    id v79 = v246;
    id v80 = v247;
    id v81 = v248;
    id v82 = v249;
    id v83 = v253;
    id v84 = (id)v254;
    id v85 = v257;
    id v86 = v44;
    id v87 = v45;
    v88 = v258;
    id v89 = v260;
    id v90 = v260;
    id v91 = objc_msgSend(v46, sel_unsignedLongLongValue);
    v46 = (void *)swift_allocObject();
    v46[2] = v91;
    v92 = sub_24D9AC1AC;
  }
  else
  {
    swift_retain_n();
    id v93 = v233;
    id v94 = v230;
    id v95 = v234;
    id v96 = v238;
    id v97 = v237;
    id v98 = v240;
    id v99 = v223;
    id v100 = v225;
    id v101 = v29;
    id v102 = v30;
    id v103 = v31;
    id v104 = v32;
    id v105 = v221;
    id v106 = v224;
    id v107 = v222;
    id v108 = v226;
    id v109 = v227;
    id v110 = v229;
    id v111 = v228;
    id v112 = v232;
    id v113 = v236;
    id v114 = v235;
    id v115 = v239;
    uint64_t v70 = v252;
    swift_retain();
    id v116 = v231;
    id v117 = v42;
    id v118 = v43;
    id v119 = v241;
    id v120 = v242;
    id v121 = v243;
    id v122 = v245;
    id v123 = v244;
    id v124 = v246;
    id v125 = v247;
    id v126 = v248;
    id v127 = v249;
    id v128 = v253;
    id v129 = (id)v254;
    id v130 = v257;
    id v131 = v44;
    id v132 = v45;
    v133 = v258;
    id v89 = v260;
    id v134 = v260;
    v92 = sub_24D42CEFC;
  }
  v135 = v92;
  uint64_t v136 = swift_allocObject();
  *(void *)(v136 + 16) = v135;
  *(void *)(v136 + 24) = v46;
  *(void *)(v22 + 1016) = v89;
  *(void *)(v22 + 1024) = sub_24D9AC1B4;
  *(void *)(v22 + 1032) = v136;
  v260 = (id)*MEMORY[0x263F051E8];
  id v137 = v260;
  uint64_t v138 = swift_allocObject();
  uint64_t v139 = v251;
  *(void *)(v138 + 16) = sub_24D9AC0BC;
  *(void *)(v138 + 24) = v139;
  *(void *)(v22 + 1040) = v137;
  *(void *)(v22 + 1048) = sub_24D9AC1B4;
  *(void *)(v22 + 1056) = v138;
  v258 = (void (**)(char *, uint64_t))*MEMORY[0x263F05200];
  v140 = v258;
  uint64_t v141 = swift_allocObject();
  *(void *)(v141 + 16) = sub_24D9AC128;
  *(void *)(v141 + 24) = v70;
  *(void *)(v22 + 1064) = v140;
  *(void *)(v22 + 1072) = sub_24D9AC1B4;
  *(void *)(v22 + 1080) = v141;
  v257 = (id)*MEMORY[0x263F05068];
  *(void *)(v22 + 1088) = v257;
  *(void *)(v22 + 1096) = sub_24D9ABEE8;
  *(void *)(v22 + 1104) = 0;
  *(void *)&v254 = *MEMORY[0x263F05080];
  *(void *)(v22 + 1112) = v254;
  *(void *)(v22 + 1120) = sub_24D9ABE50;
  *(void *)(v22 + 1128) = 0;
  v253 = (id)*MEMORY[0x263F05070];
  *(void *)(v22 + 1136) = v253;
  *(void *)(v22 + 1144) = sub_24D9ABE50;
  *(void *)(v22 + 1152) = 0;
  v142 = (void *)*MEMORY[0x263F05088];
  *(void *)(v22 + 1160) = *MEMORY[0x263F05088];
  *(void *)(v22 + 1168) = sub_24D9ABE50;
  *(void *)(v22 + 1176) = 0;
  v143 = (void *)*MEMORY[0x263F05078];
  *(void *)(v22 + 1184) = *MEMORY[0x263F05078];
  *(void *)(v22 + 1192) = sub_24D9ABE5C;
  *(void *)(v22 + 1200) = 0;
  v144 = (void *)*MEMORY[0x263F05180];
  *(void *)(v22 + 1208) = *MEMORY[0x263F05180];
  *(void *)(v22 + 1216) = sub_24D9ABE50;
  *(void *)(v22 + 1224) = 0;
  v145 = (void *)*MEMORY[0x263F05178];
  *(void *)(v22 + 1232) = *MEMORY[0x263F05178];
  *(void *)(v22 + 1240) = sub_24D9ABE50;
  *(void *)(v22 + 1248) = 0;
  v146 = (void *)*MEMORY[0x263F05170];
  *(void *)(v22 + 1256) = *MEMORY[0x263F05170];
  *(void *)(v22 + 1264) = sub_24D9ABE50;
  *(void *)(v22 + 1272) = 0;
  v147 = (void *)*MEMORY[0x263F05190];
  *(void *)(v22 + 1280) = *MEMORY[0x263F05190];
  *(void *)(v22 + 1288) = sub_24D9ABE50;
  *(void *)(v22 + 1296) = 0;
  v148 = (void *)*MEMORY[0x263F05188];
  *(void *)(v22 + 1304) = *MEMORY[0x263F05188];
  *(void *)(v22 + 1312) = sub_24D9ABE50;
  *(void *)(v22 + 1320) = 0;
  swift_retain();
  swift_retain();
  id v149 = v260;
  v150 = v258;
  id v151 = v257;
  id v152 = (id)v254;
  id v153 = v253;
  id v154 = v142;
  id v155 = v143;
  id v156 = v144;
  id v157 = v145;
  id v158 = v146;
  id v159 = v147;
  id v160 = v148;
  unint64_t v161 = sub_24D42BB58(v22);
  uint64_t v162 = v255;
  uint64_t v163 = *(void *)(v255 + 64);
  v257 = (id)(v255 + 64);
  uint64_t v164 = 1 << *(unsigned char *)(v255 + 32);
  uint64_t v165 = -1;
  if (v164 < 64) {
    uint64_t v165 = ~(-1 << v164);
  }
  unint64_t v166 = v165 & v163;
  v260 = (id)((unint64_t)(v164 + 63) >> 6);
  v258 = (void (**)(char *, uint64_t))(v220 + 8);
  swift_bridgeObjectRetain();
  uint64_t v167 = 0;
  v249 = (id)MEMORY[0x263F8EE80];
  *(void *)&long long v168 = 136315138;
  v254 = v168;
  v253 = (id)(MEMORY[0x263F8EE58] + 8);
  v169 = v256;
  while (1)
  {
    if (v166)
    {
      unint64_t v170 = __clz(__rbit64(v166));
      v166 &= v166 - 1;
      unint64_t v171 = v170 | (v167 << 6);
      goto LABEL_32;
    }
    uint64_t v172 = v167 + 1;
    if (__OFADD__(v167, 1))
    {
      __break(1u);
      goto LABEL_51;
    }
    if (v172 >= (uint64_t)v260) {
      goto LABEL_49;
    }
    unint64_t v173 = *((void *)v257 + v172);
    ++v167;
    if (!v173)
    {
      uint64_t v167 = v172 + 1;
      if (v172 + 1 >= (uint64_t)v260) {
        goto LABEL_49;
      }
      unint64_t v173 = *((void *)v257 + v167);
      if (!v173)
      {
        uint64_t v167 = v172 + 2;
        if (v172 + 2 >= (uint64_t)v260) {
          goto LABEL_49;
        }
        unint64_t v173 = *((void *)v257 + v167);
        if (!v173) {
          break;
        }
      }
    }
LABEL_31:
    unint64_t v166 = (v173 - 1) & v173;
    unint64_t v171 = __clz(__rbit64(v173)) + (v167 << 6);
LABEL_32:
    uint64_t v175 = 8 * v171;
    v176 = *(void **)(*(void *)(v162 + 56) + v175);
    uint64_t v177 = *(void *)(v161 + 16);
    id v178 = *(id *)(*(void *)(v162 + 48) + v175);
    v179 = v176;
    if (v177 && (uint64_t v180 = sub_24D4060A4(v178), (v181 & 1) != 0))
    {
      v182 = *(void (**)(void **__return_ptr, void **))(*(void *)(v161 + 56) + 16 * v180);
      v262 = v179;
      swift_retain();
      v182(&v261, &v262);
      swift_release();
      v183 = v261;
      if (v261)
      {
        v193 = (void *)sub_24DCC97E8();
        v195 = v194;
        v247 = v183;
        v196 = v249;
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v262 = v196;
        v246 = v193;
        v248 = v195;
        v199 = sub_24D4053BC((uint64_t)v193, (uint64_t)v195);
        v200 = v196[2];
        v201 = (v198 & 1) == 0;
        v202 = v200 + v201;
        if (__OFADD__(v200, v201)) {
          goto LABEL_52;
        }
        v203 = v198;
        if (v196[3] >= v202)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_24DC7C724();
          }
        }
        else
        {
          sub_24D7038B0(v202, isUniquelyReferenced_nonNull_native);
          v204 = sub_24D4053BC((uint64_t)v246, (uint64_t)v248);
          if ((v203 & 1) != (v205 & 1)) {
            goto LABEL_54;
          }
          v199 = v204;
        }
        v169 = v256;
        v206 = v262;
        v249 = v262;
        if (v203)
        {
          v207 = v262[7];

          v208 = v247;
          *(void *)(v207 + 8 * v199) = v247;
          v209 = v208;
        }
        else
        {
          v262[(v199 >> 6) + 8] |= 1 << v199;
          v210 = (void *)(v206[6] + 16 * v199);
          v209 = v247;
          v211 = v248;
          *v210 = v246;
          v210[1] = v211;
          *(void *)(v206[7] + 8 * v199) = v209;
          v212 = v206[2];
          v213 = __OFADD__(v212, 1);
          v214 = v212 + 1;
          if (v213) {
            goto LABEL_53;
          }
          v206[2] = v214;
          swift_bridgeObjectRetain();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    else
    {
      v184 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      v185 = v178;
      v186 = sub_24DCC9068();
      v187 = sub_24DCCA138();
      if (os_log_type_enabled(v186, v187))
      {
        v188 = swift_slowAlloc();
        v189 = (void *)swift_slowAlloc();
        v262 = v189;
        *(_DWORD *)v188 = v254;
        v190 = sub_24DCC97E8();
        *(void *)(v188 + 4) = sub_24D418FB4(v190, v191, (uint64_t *)&v262);

        uint64_t v162 = v255;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D3D0000, v186, v187, "Ignoring entry %s in telemetry: unknown entry", (uint8_t *)v188, 0xCu);
        swift_arrayDestroy();
        v192 = v189;
        v169 = v256;
        MEMORY[0x25332B030](v192, -1, -1);
        MEMORY[0x25332B030](v188, -1, -1);
      }
      else
      {
      }
      (*v258)(v169, v259);
    }
  }
  uint64_t v174 = v172 + 3;
  if (v174 >= (uint64_t)v260)
  {
LABEL_49:
    swift_bridgeObjectRelease();

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v218 + 8))(v217, v219);
    return v249;
  }
  unint64_t v173 = *((void *)v257 + v174);
  if (v173)
  {
    uint64_t v167 = v174;
    goto LABEL_31;
  }
  while (1)
  {
    uint64_t v167 = v174 + 1;
    if (__OFADD__(v174, 1)) {
      break;
    }
    if (v167 >= (uint64_t)v260) {
      goto LABEL_49;
    }
    unint64_t v173 = *((void *)v257 + v167);
    ++v174;
    if (v173) {
      goto LABEL_31;
    }
  }
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  id result = (id)sub_24DCCAF18();
  __break(1u);
  return result;
}

char *sub_24D9ABA0C(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)v2;
  id v4 = a1;
  if (!objc_msgSend(v3, sel_integerValue))
  {
    id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);

    return (char *)v8;
  }
  id v5 = sub_24D9A9DF0(16, 10);
  if (!v5)
  {

    return 0;
  }
  uint64_t v6 = v5;
  id result = (char *)objc_msgSend(v5, sel_integerValue);
  if (!__OFADD__(result, 1))
  {
    id v8 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, result + 1);

    return (char *)v8;
  }
  __break(1u);
  return result;
}

id sub_24D9ABAF4()
{
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (result)
  {
    uint64_t v1 = (uint64_t)objc_msgSend(result, sel_integerValue);
    if (v1 == getuid())
    {
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
    }
    else if (v1)
    {
      id v2 = objc_allocWithZone(NSNumber);
      if (v1 > 999) {
        uint64_t v3 = 3;
      }
      else {
        uint64_t v3 = 2;
      }
      return objc_msgSend(v2, sel_initWithInteger_, v3);
    }
    else
    {
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 1);
    }
  }
  return result;
}

id sub_24D9ABBA8(uint64_t a1, void *a2)
{
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (!result) {
    return result;
  }
  id v4 = objc_msgSend(result, sel_unsignedLongLongValue);
  id v5 = (void *)swift_retain();
  if (objc_sync_enter(v5)) {
    goto LABEL_13;
  }
  uint64_t v6 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    goto LABEL_14;
  }
  swift_release();
  id v7 = *(id *)(v6 + 24);
  swift_release();
  if (v4 == v7) {
    return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
  }
  id v8 = (void *)swift_retain();
  if (objc_sync_enter(v8)) {
LABEL_13:
  }
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  uint64_t v9 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
LABEL_14:
  }
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
  swift_release();
  uint64_t v10 = *(void *)(v9 + 32);
  swift_bridgeObjectRetain();
  swift_release();
  char v11 = sub_24D40BD0C((uint64_t)v4, v10);
  swift_bridgeObjectRelease();
  id v12 = objc_allocWithZone(NSNumber);
  if (v11) {
    uint64_t v13 = 1;
  }
  else {
    uint64_t v13 = 2;
  }
  return objc_msgSend(v12, sel_initWithInteger_, v13);
}

id sub_24D9ABD24(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)v2;
  id v4 = a1;
  if (objc_msgSend(v3, sel_integerValue) == (id)128)
  {

    id v5 = v4;
    return v4;
  }
  sub_24DBA51F0(2);
  uint64_t v8 = v7;

  return (id)v8;
}

id sub_24D9ABDB0(uint64_t a1, id a2)
{
  self;
  id result = (id)swift_dynamicCastObjCClass();
  if (result)
  {
    id v4 = objc_msgSend(result, sel_unsignedLongLongValue);
    if (v4 == a2)
    {
      return objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, 0);
    }
    else
    {
      id v5 = v4;
      id v6 = objc_allocWithZone(NSNumber);
      if (v5 <= a2) {
        uint64_t v7 = 2;
      }
      else {
        uint64_t v7 = 1;
      }
      return objc_msgSend(v6, sel_initWithInteger_, v7);
    }
  }
  return result;
}

id sub_24D9ABE50@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = v2;
  return v2;
}

void sub_24D9ABE5C(uint64_t *a1@<X8>)
{
}

id sub_24D9ABE64@<X0>(void *a1@<X8>)
{
  id result = sub_24D9ABAF4();
  *a1 = result;
  return result;
}

id sub_24D9ABE90@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = sub_24D9ABD24(*a1);
  *a2 = result;
  return result;
}

char *sub_24D9ABEBC@<X0>(void **a1@<X0>, char **a2@<X8>)
{
  id result = sub_24D9ABA0C(*a1);
  *a2 = result;
  return result;
}

void sub_24D9ABEE8(uint64_t *a1@<X8>)
{
}

void sub_24D9ABEF0(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  self;
  uint64_t v4 = swift_dynamicCastObjCClass();
  if (v4) {
    sub_24DBA51F0(a1);
  }
  *a2 = v4;
}

void *sub_24D9ABF50@<X0>(uint64_t *a1@<X8>)
{
  self;
  id result = (void *)swift_dynamicCastObjCClass();
  if (result)
  {
    id v3 = objc_msgSend(result, sel_fp_obfuscatedFilename);
    sub_24DCC97E8();

    uint64_t v4 = sub_24DCC97B8();
    id result = (void *)swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = 0;
  }
  *a1 = v4;
  return result;
}

uint64_t sub_24D9ABFE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D9AC02C()
{
  uint64_t v1 = sub_24DCC8CE8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

id sub_24D9AC0BC()
{
  uint64_t v1 = *(void *)(sub_24DCC8CE8() - 8);
  return sub_24D9A9C54(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)), 12, 8);
}

id sub_24D9AC128(uint64_t a1)
{
  return sub_24D9ABBA8(a1, v1);
}

uint64_t sub_24D9AC130@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 16))(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24D9AC164()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9AC19C()
{
  return swift_deallocObject();
}

id sub_24D9AC1AC(uint64_t a1)
{
  return sub_24D9ABDB0(a1, *(id *)(v1 + 16));
}

ValueMetadata *type metadata accessor for NSecTimestamp()
{
  return &type metadata for NSecTimestamp;
}

ValueMetadata *type metadata accessor for NSecTimeInterval()
{
  return &type metadata for NSecTimeInterval;
}

unint64_t sub_24D9AC1F0()
{
  unint64_t result = qword_26986FF00;
  if (!qword_26986FF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF00);
  }
  return result;
}

uint64_t sub_24D9AC244(uint64_t result, uint64_t a2)
{
  if (a2 == 0x7FFFFFFFFFFFFFFFLL) {
    return 0x726576656ELL;
  }
  uint64_t v2 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    sub_24D4E3A40();
    uint64_t v4 = sub_24DCCA518();
    unint64_t result = sub_24DCC9968();
    if ((v2 & 0x8000000000000000) == 0 || (BOOL v3 = __OFSUB__(0, v2), v2 = -v2, !v3))
    {
      sub_24D9AC74C(v2);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      return v4;
    }
  }
  __break(1u);
  return result;
}

void *sub_24D9AC358(void *result, void *a2)
{
  if (!__OFSUB__(*a2, *result)) {
    return (void *)(*a2 == *result);
  }
  __break(1u);
  return result;
}

void *sub_24D9AC374@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFSUB__(*result, *v2)) {
    __break(1u);
  }
  else {
    *a2 = *result - *v2;
  }
  return result;
}

void *sub_24D9AC390@<X0>(void *result@<X0>, void *a2@<X8>)
{
  if (__OFADD__(*v2, *result)) {
    __break(1u);
  }
  else {
    *a2 = *v2 + *result;
  }
  return result;
}

void *sub_24D9AC3AC(void *result, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  if (__OFADD__(*a4, *a6))
  {
    __break(1u);
  }
  else
  {
    *unint64_t result = *a4 + *a6;
    return 0;
  }
  return result;
}

uint64_t sub_24D9AC3D0()
{
  uint64_t result = *v0;
  if ((*v0 & 0x8000000000000000) == 0)
  {
    uint64_t v2 = 0;
LABEL_5:
    sub_24D9AC74C(result);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v2;
  }
  BOOL v3 = __OFSUB__(0, result);
  uint64_t result = -result;
  if (!v3)
  {
    uint64_t v2 = 45;
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

void *sub_24D9AC444(void *result, void *a2)
{
  if (!__OFSUB__(*a2, *result)) {
    return (void *)(*a2 - *result > 0);
  }
  __break(1u);
  return result;
}

void *sub_24D9AC464(void *result, void *a2)
{
  if (!__OFSUB__(*result, *a2)) {
    return (void *)(*result - *a2 < 1);
  }
  __break(1u);
  return result;
}

void *sub_24D9AC484(void *result, void *a2)
{
  if (!__OFSUB__(*a2, *result)) {
    return (void *)(*a2 - *result < 1);
  }
  __break(1u);
  return result;
}

void *sub_24D9AC4A4(void *result, void *a2)
{
  if (!__OFSUB__(*result, *a2)) {
    return (void *)(*result - *a2 > 0);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D9AC4C4()
{
  return MEMORY[0x263F8D748];
}

unint64_t sub_24D9AC4D4()
{
  unint64_t result = qword_26986FF08;
  if (!qword_26986FF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF08);
  }
  return result;
}

uint64_t sub_24D9AC528()
{
  return MEMORY[0x263F8D6E0];
}

uint64_t sub_24D9AC534()
{
  return MEMORY[0x263F8D720];
}

BOOL sub_24D9AC540(void *a1, void *a2)
{
  return *a1 < *a2;
}

BOOL sub_24D9AC554(void *a1, void *a2)
{
  return *a2 >= *a1;
}

BOOL sub_24D9AC568(void *a1, void *a2)
{
  return *a1 >= *a2;
}

BOOL sub_24D9AC57C(void *a1, void *a2)
{
  return *a2 < *a1;
}

uint64_t sub_24D9AC590()
{
  return sub_24DCCA518();
}

uint64_t sub_24D9AC5F0()
{
  return sub_24DCC9BD8();
}

uint64_t sub_24D9AC650()
{
  return sub_24DCC9B68();
}

unint64_t sub_24D9AC6A4()
{
  unint64_t result = qword_26986FF10;
  if (!qword_26986FF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF10);
  }
  return result;
}

unint64_t sub_24D9AC6F8()
{
  unint64_t result = qword_26B1958D8;
  if (!qword_26B1958D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1958D8);
  }
  return result;
}

uint64_t sub_24D9AC74C(uint64_t a1)
{
  if (a1 < 60000000000 && (uint64_t v1 = a1 / 1000000 % 1000, a1 <= 999999999))
  {
    uint64_t v3 = sub_24DCCAD78();
    if (v1 >= 1)
    {
      sub_24DCC9968();
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v3 = sub_24DCCAD78();
    sub_24DCC9968();
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24DCC9968();
  return v3;
}

uint64_t sub_24D9ACA64()
{
  uint64_t v0 = sub_24DCC8CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v7 < 9.22337204e18) {
    return (uint64_t)v7;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24D9ACB88(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v2 - 8);
  double v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  char v11 = (char *)&v18 - v10;
  sub_24D502A50(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_24D419088(a1);
    sub_24D419088((uint64_t)v4);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  sub_24DCC8C88();
  double v14 = v13;
  id v15 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t result = v15(v9, v5);
  double v17 = v14 * 1000000000.0;
  if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v17 < 9.22337204e18)
  {
    uint64_t v12 = (uint64_t)v17;
    sub_24D419088(a1);
    v15(v11, v5);
    return v12;
  }
LABEL_10:
  __break(1u);
  return result;
}

void *sub_24D9ACDDC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (void *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24DCC8D88();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    *(void *)((char *)a1 + v8) = *(void *)((char *)a2 + v8);
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_24D9ACEBC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24D9ACF4C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24D9ACFE0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24D9AD070(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(unsigned char *)(a1 + a3[7]) = *(unsigned char *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_24D9AD100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D9AD114);
}

uint64_t sub_24D9AD114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_24D9AD1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D9AD1F8);
}

uint64_t sub_24D9AD1F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_24DCC8D88();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 28)) = a2 + 1;
  }
  return result;
}

uint64_t type metadata accessor for FPFSPendingSetAnchor()
{
  uint64_t result = qword_26986FF18;
  if (!qword_26986FF18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24D9AD300()
{
  uint64_t result = sub_24DCC8D88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24D9AD3A4(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FF28);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9ADAD4();
  sub_24DCCB0D8();
  char v12 = 0;
  sub_24DCC8D88();
  sub_24D907174((unint64_t *)&unk_26B192360);
  sub_24DCCACF8();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + *(int *)(type metadata accessor for FPFSPendingSetAnchor() + 20));
    v10[15] = 1;
    sub_24D7852D0();
    sub_24DCCACF8();
    v10[14] = 2;
    sub_24DCCACD8();
    v10[13] = 3;
    sub_24DCCACB8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24D9AD5B8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = sub_24DCC8D88();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v22 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FF38);
  uint64_t v20 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (int *)type metadata accessor for FPFSPendingSetAnchor();
  MEMORY[0x270FA5388](v8);
  unsigned int v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9ADAD4();
  sub_24DCCB0B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v18 = a1;
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v21;
  char v28 = 0;
  sub_24D907174(&qword_26B192378);
  double v14 = v22;
  uint64_t v13 = v23;
  sub_24DCCAB98();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v11, v14, v4);
  char v27 = 1;
  sub_24D78527C();
  sub_24DCCAB98();
  *(void *)(v11 + v8[5]) = v24;
  char v26 = 2;
  *(void *)(v11 + v8[6]) = sub_24DCCAB88();
  char v25 = 3;
  char v15 = sub_24DCCAB68();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v13);
  *(unsigned char *)(v11 + v8[7]) = v15 & 1;
  sub_24D9ADB28(v11, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  return sub_24D9ADB8C(v11);
}

unint64_t sub_24D9AD960()
{
  unint64_t result = 0x53676E69646E6570;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x74657366666FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D9ADA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D9ADDF4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D9ADA2C(uint64_t a1)
{
  unint64_t v2 = sub_24D9ADAD4();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D9ADA68(uint64_t a1)
{
  unint64_t v2 = sub_24D9ADAD4();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D9ADAA4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D9AD5B8(a1, a2);
}

uint64_t sub_24D9ADABC(void *a1)
{
  return sub_24D9AD3A4(a1);
}

unint64_t sub_24D9ADAD4()
{
  unint64_t result = qword_26986FF30;
  if (!qword_26986FF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF30);
  }
  return result;
}

uint64_t sub_24D9ADB28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFSPendingSetAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D9ADB8C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FPFSPendingSetAnchor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for FPFSPendingSetAnchor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D9ADCB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPFSPendingSetAnchor.CodingKeys()
{
  return &type metadata for FPFSPendingSetAnchor.CodingKeys;
}

unint64_t sub_24D9ADCF0()
{
  unint64_t result = qword_26986FF40;
  if (!qword_26986FF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF40);
  }
  return result;
}

unint64_t sub_24D9ADD48()
{
  unint64_t result = qword_26986FF48;
  if (!qword_26986FF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF48);
  }
  return result;
}

unint64_t sub_24D9ADDA0()
{
  unint64_t result = qword_26986FF50;
  if (!qword_26986FF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF50);
  }
  return result;
}

uint64_t sub_24D9ADDF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x53676E69646E6570 && a2 == 0xEE00444955557465;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024DD13780 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74657366666FLL && a2 == 0xE600000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024DD137A0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24D9ADFC4@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(_DWORD *)(a7 + 16) = a3;
  *(_DWORD *)(a7 + 20) = a4;
  *(void *)(a7 + 24) = a5;
  *(void *)(a7 + 32) = a6;
  return result;
}

uint64_t sub_24D9ADFD4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_24D9ADFFC()
{
  return *(void *)v0;
}

uint64_t sub_24D9AE004()
{
  return *(void *)(v0 + 8);
}

uint64_t sub_24D9AE00C(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*sub_24D9AE014())()
{
  return nullsub_1;
}

uint64_t sub_24D9AE034()
{
  return *(unsigned int *)(v0 + 16);
}

uint64_t sub_24D9AE03C(uint64_t result)
{
  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*sub_24D9AE044())()
{
  return nullsub_1;
}

uint64_t sub_24D9AE064()
{
  return *(unsigned int *)(v0 + 20);
}

uint64_t sub_24D9AE06C(uint64_t result)
{
  *(_DWORD *)(v1 + 20) = result;
  return result;
}

uint64_t (*sub_24D9AE074())()
{
  return nullsub_1;
}

uint64_t sub_24D9AE094()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24D9AE0C4(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*sub_24D9AE0FC())()
{
  return nullsub_1;
}

BOOL sub_24D9AE11C()
{
  return *(void *)(v0 + 8) && *(void *)(v0 + 32) != 0;
}

uint64_t sub_24D9AE140()
{
  uint64_t result = 0x4449656C6966;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4449746E65726170;
      break;
    case 2:
      uint64_t result = 0x4449636F64;
      break;
    case 3:
      uint64_t result = 0x746E756F436E6567;
      break;
    case 4:
      uint64_t result = 1701667182;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D9AE1DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D9AEB68(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D9AE204(uint64_t a1)
{
  unint64_t v2 = sub_24D9AEAAC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D9AE240(uint64_t a1)
{
  unint64_t v2 = sub_24D9AEAAC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D9AE27C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194928);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9AEAAC();
  sub_24DCCB0D8();
  v11[0] = 0;
  sub_24DCCAD48();
  if (!v2)
  {
    v11[0] = 1;
    sub_24DCCAD48();
    v11[0] = 2;
    sub_24DCCAD38();
    v11[0] = 3;
    sub_24DCCAD38();
    sub_24D9AEB00(v3 + 24, (uint64_t)v12);
    sub_24D9AEB00((uint64_t)v12, (uint64_t)v11);
    v10[15] = 4;
    sub_24D4ED694();
    sub_24DCCAC58();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

double sub_24D9AE47C@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24D9AED68(a1, (uint64_t)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

uint64_t sub_24D9AE4C4(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a1 + 32);
  long long v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  uint64_t v8 = *(void *)(a2 + 32);
  return sub_24D9AE7B4((uint64_t)v5, (uint64_t)v7) & 1;
}

uint64_t sub_24D9AE510(void *a1)
{
  return sub_24D9AE27C(a1);
}

uint64_t sub_24D9AE54C@<X0>(uint64_t a1@<X2>, _DWORD *a2@<X8>)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_24D9AF384;
  *(void *)(v5 + 24) = v4;
  v10[4] = sub_24D3E1458;
  v10[5] = v5;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_24D3E1424;
  v10[3] = &block_descriptor_24;
  uint64_t v6 = _Block_copy(v10);
  swift_retain();
  swift_release();
  sub_24DCC9898();
  int v7 = fpfs_gethandle_at();
  swift_release();
  _Block_release(v6);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  else {
    *a2 = v7;
  }
  return result;
}

uint64_t sub_24D9AE6D4(long long *a1, uint64_t *a2)
{
  long long v3 = *a1;
  uint64_t v4 = *((void *)a1 + 2);
  if (*((void *)a1 + 3))
  {
    long long v14 = *a1;
    sub_24DCC9988();
    sub_24D3F0EB8();
    uint64_t v5 = sub_24DCCA478();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    long long v3 = v14;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = a2[2];
  uint64_t v11 = a2[3];
  uint64_t v12 = a2[4];
  *(_OWORD *)a2 = v3;
  a2[2] = v4;
  a2[3] = v5;
  a2[4] = v7;
  sub_24D9AF39C(v8, v9, v10, v11, v12);
  return 0;
}

uint64_t sub_24D9AE7B4(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2
    || *(void *)(a1 + 8) != *(void *)(a2 + 8)
    || *(_DWORD *)(a1 + 16) != *(_DWORD *)(a2 + 16)
    || *(_DWORD *)(a1 + 20) != *(_DWORD *)(a2 + 20))
  {
    return 0;
  }
  unint64_t v4 = *(void *)(a1 + 32);
  unint64_t v5 = *(void *)(a2 + 32);
  if (!v4) {
    return !v5;
  }
  if (!v5) {
    return 0;
  }
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 24);
  sub_24D9AF3B0(a1);
  sub_24D9AF3B0(a1);
  sub_24D9AF3B0(a2);
  uint64_t v8 = sub_24D40114C(v6, v4);
  if (v9)
  {
    if (v8 == 12565487 && v9 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_14:
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_24DCC9918();
      unint64_t v13 = sub_24D41824C(v12, v6, v4);
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      sub_24D5B22F8(a1);
      uint64_t v6 = MEMORY[0x253327950](v13, v15, v17, v19);
      unint64_t v4 = v20;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    char v11 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_14;
    }
  }
  swift_bridgeObjectRetain();
LABEL_16:
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_24D40114C(v7, v5);
  uint64_t v23 = v22;
  sub_24D5B22F8(a2);
  if (!v23) {
    goto LABEL_22;
  }
  if (v21 != 12565487 || v23 != 0xA300000000000000)
  {
    char v24 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v24) {
      goto LABEL_21;
    }
LABEL_22:
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  swift_bridgeObjectRelease();
LABEL_21:
  swift_bridgeObjectRetain();
  unint64_t v25 = sub_24DCC9918();
  unint64_t v26 = sub_24D41824C(v25, v7, v5);
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  sub_24D5B22F8(a2);
  uint64_t v7 = MEMORY[0x253327950](v26, v28, v30, v32);
  unint64_t v5 = v33;
  swift_bridgeObjectRelease();
LABEL_23:
  if (v6 == v7 && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
    sub_24D5B22F8(a2);
    sub_24D5B22F8(a1);
    sub_24D5B22F8(a1);
    return 1;
  }
  char v34 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D5B22F8(a2);
  sub_24D5B22F8(a1);
  sub_24D5B22F8(a1);
  return (v34 & 1) != 0;
}

unint64_t sub_24D9AEAAC()
{
  unint64_t result = qword_26B1945C8;
  if (!qword_26B1945C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1945C8);
  }
  return result;
}

uint64_t sub_24D9AEB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B199BD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D9AEB68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449656C6966 && a2 == 0xE600000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449746E65726170 && a2 == 0xE800000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449636F64 && a2 == 0xE500000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E756F436E6567 && a2 == 0xE800000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24D9AED68@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194900);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9AEAAC();
  sub_24DCCB0B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  LOBYTE(v17) = 0;
  uint64_t v9 = sub_24DCCABE8();
  LOBYTE(v17) = 1;
  uint64_t v10 = sub_24DCCABE8();
  LOBYTE(v17) = 2;
  int v19 = sub_24DCCABD8();
  LOBYTE(v17) = 3;
  int v16 = sub_24DCCABD8();
  char v20 = 4;
  sub_24D4ED88C();
  sub_24DCCAB08();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v17;
  uint64_t v12 = v18;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v10;
  int v14 = v16;
  *(_DWORD *)(a2 + 16) = v19;
  *(_DWORD *)(a2 + 20) = v14;
  *(void *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  return result;
}

uint64_t destroy for VFSItemHandle()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for VFSItemHandle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for VFSItemHandle(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for VFSItemHandle(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for VFSItemHandle(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 32);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSItemHandle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 32) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSItemHandle()
{
  return &type metadata for VFSItemHandle;
}

unsigned char *storeEnumTagSinglePayload for VFSItemHandle.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D9AF234);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSItemHandle.CodingKeys()
{
  return &type metadata for VFSItemHandle.CodingKeys;
}

unint64_t sub_24D9AF270()
{
  unint64_t result = qword_26986FF58;
  if (!qword_26986FF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF58);
  }
  return result;
}

unint64_t sub_24D9AF2C8()
{
  unint64_t result = qword_26B1945D8;
  if (!qword_26B1945D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1945D8);
  }
  return result;
}

unint64_t sub_24D9AF320()
{
  unint64_t result = qword_26B1945D0;
  if (!qword_26B1945D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1945D0);
  }
  return result;
}

uint64_t sub_24D9AF374()
{
  return swift_deallocObject();
}

uint64_t sub_24D9AF384(long long *a1)
{
  return sub_24D9AE6D4(a1, *(uint64_t **)(v1 + 16));
}

uint64_t sub_24D9AF38C()
{
  return swift_deallocObject();
}

uint64_t sub_24D9AF39C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24D9AF3B0(uint64_t a1)
{
  return a1;
}

double sub_24D9AF3DC@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_24D6AD6FC(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_24D3F7E8C(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_24D9AF440(uint64_t a1, uint64_t a2)
{
  return sub_24D9AF470(a1, a2, (uint64_t (*)(void))sub_24D6AE034);
}

uint64_t sub_24D9AF458(uint64_t a1, uint64_t a2)
{
  return sub_24D9AF470(a1, a2, (uint64_t (*)(void))sub_24D6AE04C);
}

uint64_t sub_24D9AF470(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  if (*(void *)(a2 + 16) && (uint64_t v4 = a3(), (v5 & 1) != 0)) {
    return *(void *)(*(void *)(a2 + 56) + 8 * v4);
  }
  else {
    return 0;
  }
}

uint64_t sub_24D9AF4BC(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a2 + 16) && (sub_24D4060A4(a1), (v2 & 1) != 0)) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t sub_24D9AF500@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  uint64_t v55 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_24DCC8FC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v13);
  id v47 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
  uint64_t aBlock = 0x2070756B6F6F6CLL;
  unint64_t v49 = 0xE700000000000000;
  uint64_t v45 = a1;
  uint64_t v54 = a1;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v16 = v49;
  uint64_t v43 = aBlock;
  unint64_t v44 = v12;
  sub_24D415FD0((uint64_t)v12, (uint64_t)v10, &qword_26B1990B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    id v17 = v15;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v10, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
  }
  uint64_t v18 = v47;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v47, v6, v3);
  uint64_t v41 = *(int *)(v13 + 20);
  *(void *)&v18[v41] = v15;
  int v19 = &v18[*(int *)(v13 + 24)];
  *(void *)int v19 = "SQLDB: Lookup item by fileID";
  *((void *)v19 + 1) = 28;
  unint64_t v42 = v19;
  v19[16] = 2;
  id v20 = v15;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_24DCCECE0;
  *(void *)(v21 + 56) = MEMORY[0x263F8D310];
  *(void *)(v21 + 64) = sub_24D3F7B98();
  *(void *)(v21 + 32) = v43;
  *(void *)(v21 + 40) = v16;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v44, &qword_26B1990B0);
  uint64_t v22 = v46;
  uint64_t v23 = *(void **)(v46 + qword_26B1A2590);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v45;
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = v25;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_24D9B22F8;
  *(void *)(v26 + 24) = v24;
  id v52 = sub_24D3E3974;
  uint64_t v53 = v26;
  uint64_t aBlock = MEMORY[0x263EF8330];
  unint64_t v49 = 1107296256;
  id v50 = sub_24D3E38DC;
  id v51 = &block_descriptor_25;
  uint64_t v27 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t aBlock = 0;
  id v28 = objc_msgSend(v23, sel_fetchSwift_error_, v27, &aBlock);
  _Block_release(v27);
  id v29 = (id)aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v28)
  {
    sub_24DCC8828();

    swift_willThrow();
    goto LABEL_15;
  }
  if ((objc_msgSend(v28, sel_next) & 1) == 0)
  {
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v39, 1, 1, v34);
LABEL_14:

    goto LABEL_15;
  }
  uint64_t v31 = sub_24D7872C8();
  uint64_t v33 = v39;
  uint64_t v32 = v40;
  sub_24D8C6918(v31, v28, 0, v39);
  if (!v32)
  {
    swift_bridgeObjectRelease();
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v33, 0, 1, v35);
    goto LABEL_14;
  }

  swift_bridgeObjectRelease();
LABEL_15:
  sub_24DCCA2C8();
  uint64_t v36 = (uint64_t)v47;
  sub_24DCC8F98();
  sub_24D5A2F00(v36);
  return swift_release();
}

uint64_t sub_24D9AFB94(void *a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  char v2 = (void *)sub_24DCCB088();
  id v3 = objc_msgSend(a1, sel_bindObjectParameter_, v2);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_24D9AFD54()
{
  void (*v4)(void **__return_ptr, uint64_t, const char *, uint64_t, uint64_t, void *(*)@<X0>(uint64_t@<X8>), uint64_t, uint64_t);
  uint64_t v5;
  void *v6;
  char v7;

  if (*(unsigned char *)(v0 + 72) != 1) {
    return *(void **)(v0 + 64);
  }
  swift_beginAccess();
  double result = sub_24D4E3CD8(*(void *)(v0 + 16));
  if (!result)
  {
LABEL_7:
    *(void *)(v0 + 64) = result;
    *(unsigned char *)(v0 + 72) = 0;
    return result;
  }
  uint64_t v3 = v2;

  double result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void (**)(void **__return_ptr, uint64_t, const char *, uint64_t, uint64_t, void *(*)@<X0>(uint64_t@<X8>), uint64_t, uint64_t))(*(void *)result + 432);
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199DF8);
    v4(&v6, 1, "itemCount", 9, 2, sub_24D9B2330, v3, v5);
    swift_release();
    swift_release();
    if (v7) {
      double result = 0;
    }
    else {
      double result = v6;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

void *sub_24D9AFE74@<X0>(uint64_t a1@<X8>)
{
  double result = sub_24DB2E068();
  if (v1)
  {

    double result = 0;
  }
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v1 != 0;
  return result;
}

uint64_t sub_24D9AFECC@<X0>(char **a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  v88 = (char *)a3;
  uint64_t v6 = sub_24DCC9078();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a1;
  id v86 = a2;
  id v87 = v13;
  uint64_t v14 = *((unsigned int *)a1 + 4);
  uint64_t v15 = a1[3];
  id v82 = a1[1];
  uint64_t v84 = v7;
  id v85 = (void *)v6;
  unint64_t v16 = v3;
  if (v15)
  {
    uint64_t v94 = sub_24DCC9988();
    uint64_t v95 = v17;
    uint64_t v92 = 58;
    unint64_t v93 = 0xE100000000000000;
    uint64_t v90 = 47;
    unint64_t v91 = 0xE100000000000000;
    sub_24D3F0EB8();
    uint64_t v83 = sub_24DCCA478();
    int v19 = v18;
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v83 = 0;
    int v19 = 0;
  }
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  v21(v12, 1, 1, v20);
  switch(*((_DWORD *)a1 + 10))
  {
    case 1:
    case 3:
      uint64_t v22 = (uint64_t)v87;
      if (v14)
      {
        id v85 = v19;
        char v23 = 0;
        uint64_t v96 = v14;
LABEL_9:
        char v97 = v23;
        uint64_t v24 = v16;
        swift_beginAccess();
        uint64_t v25 = v16[2];
        if (!*(void *)(v25 + 16)) {
          goto LABEL_48;
        }
        id v26 = v86;
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_24D4060A4(v26);
        if ((v28 & 1) == 0)
        {

          swift_bridgeObjectRelease();
LABEL_48:
          swift_beginAccess();
          sub_24D8140AC(&v98, v22);
          swift_endAccess();
          swift_bridgeObjectRelease();
          return sub_24D3F0BA0((uint64_t)v12, (uint64_t)v88, (uint64_t *)&unk_26B196F40);
        }
        id v29 = *(char **)(*(void *)(v25 + 56) + 8 * v27);
        swift_retain();

        swift_bridgeObjectRelease();
        swift_beginAccess();
        uint64_t v30 = v16[3];
        if (*(void *)(v30 + 16))
        {
          id v31 = v26;
          swift_bridgeObjectRetain();
          uint64_t v32 = sub_24D4060A4(v31);
          if ((v33 & 1) == 0)
          {

            swift_bridgeObjectRelease();
            __break(1u);
LABEL_53:
            __break(1u);
LABEL_54:
            sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v16);
          }
          unint64_t v16 = *(void **)(*(void *)(v30 + 56) + 8 * v32);
          swift_retain_n();

          swift_bridgeObjectRelease();
          if (objc_sync_enter(v16)) {
            goto LABEL_54;
          }
          uint64_t v34 = v16[20];
          swift_retain();
          if (objc_sync_exit(v16)) {
            sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v16);
          }
          swift_release();
          uint64_t v35 = *(char **)(v34 + 24);
          uint64_t v36 = swift_release();
          if ((char *)v22 == v35)
          {
            (*(void (**)(uint64_t *__return_ptr, uint64_t))(**((void **)v29 + 2) + 96))(&v92, v36);
            uint64_t v96 = v92;
            char v97 = v93;
          }
          if (v82 != v35) {
            goto LABEL_46;
          }
          uint64_t v37 = qword_26B197C70;
          id v26 = v85;
          swift_bridgeObjectRetain();
          if (v37 == -1)
          {
            if (!v26) {
              goto LABEL_46;
            }
            goto LABEL_20;
          }
        }
        else
        {
          __break(1u);
        }
        swift_once();
        if (!v26) {
          goto LABEL_46;
        }
LABEL_20:
        uint64_t v38 = (void *)*((void *)&xmmword_26B1A24D0 + 1);
        uint64_t v89 = xmmword_26B1A24D0;
        unint64_t v39 = (unint64_t)v85;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v40 = sub_24D40114C(v83, v39);
        uint64_t v42 = v41;
        swift_bridgeObjectRelease();
        v81[1] = v24;
        if (v42)
        {
          if (v40 == 12565487 && v42 == 0xA300000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_32:
            id v82 = v29;
            unint64_t v50 = (unint64_t)v85;
            swift_bridgeObjectRetain();
            uint64_t v51 = v83;
            unint64_t v52 = sub_24DCC9918();
            unint64_t v53 = sub_24D41824C(v52, v51, v50);
            uint64_t v55 = v54;
            uint64_t v57 = v56;
            uint64_t v59 = v58;
            id v29 = v82;
            swift_bridgeObjectRelease();
            uint64_t v83 = MEMORY[0x253327950](v53, v55, v57, v59);
            uint64_t v84 = v60;
            swift_bridgeObjectRelease();
            goto LABEL_34;
          }
          char v49 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          if (v49) {
            goto LABEL_32;
          }
        }
        uint64_t v84 = swift_bridgeObjectRetain();
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v61 = sub_24D40114C(v89, (unint64_t)v38);
        uint64_t v63 = v62;
        swift_bridgeObjectRelease();
        id v86 = v38;
        if (v63)
        {
          if (v61 == 12565487 && v63 == 0xA300000000000000)
          {
            swift_bridgeObjectRelease();
LABEL_39:
            swift_bridgeObjectRetain();
            uint64_t v65 = v89;
            unint64_t v66 = sub_24DCC9918();
            unint64_t v67 = sub_24D41824C(v66, v65, (unint64_t)v38);
            uint64_t v69 = v68;
            uint64_t v71 = v70;
            uint64_t v73 = v72;
            swift_bridgeObjectRelease();
            uint64_t v74 = MEMORY[0x253327950](v67, v69, v71, v73);
            id v76 = v75;
            swift_bridgeObjectRelease();
            uint64_t v22 = (uint64_t)v87;
            goto LABEL_41;
          }
          char v64 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          if (v64) {
            goto LABEL_39;
          }
        }
        swift_bridgeObjectRetain();
        id v76 = v38;
        uint64_t v22 = (uint64_t)v87;
        uint64_t v74 = v89;
LABEL_41:
        if (v83 == v74 && (void *)v84 == v76)
        {
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          uint64_t v77 = swift_bridgeObjectRelease_n();
        }
        else
        {
          char v78 = sub_24DCCAE28();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v77 = swift_bridgeObjectRelease();
          if ((v78 & 1) == 0) {
            goto LABEL_46;
          }
        }
        (*(void (**)(uint64_t *__return_ptr, uint64_t))(**((void **)v29 + 2) + 104))(&v92, v77);
        uint64_t v96 = v92;
        char v97 = v93;
LABEL_46:
        uint64_t Strong = swift_weakLoadStrong();
        if (Strong)
        {
          uint64_t v80 = *(void *)MEMORY[0x270FA5388](Strong);
          (*(void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)()))(v80 + 432))(1, "fetchItem(with:inDomainID:)", 27, 2, sub_24D9B2310);
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_48;
        }
        goto LABEL_53;
      }
      swift_bridgeObjectRelease();
      v21(v88, 1, 1, v20);
      uint64_t v47 = (uint64_t)v12;
      return sub_24D415F74(v47, (uint64_t *)&unk_26B196F40);
    case 2:
    case 4:
      uint64_t v22 = (uint64_t)v87;
      if (!v87)
      {
        swift_bridgeObjectRelease();
        v21(v88, 1, 1, v20);
        return sub_24D415F74((uint64_t)v12, (uint64_t *)&unk_26B196F40);
      }
      id v85 = v19;
      uint64_t v96 = (uint64_t)v87;
      char v23 = 1;
      goto LABEL_9;
    default:
      id v87 = v12;
      swift_bridgeObjectRelease();
      id v43 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      unint64_t v44 = sub_24DCC9068();
      os_log_type_t v45 = sub_24DCCA118();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl(&dword_24D3D0000, v44, v45, "Item kind undefined.", v46, 2u);
        MEMORY[0x25332B030](v46, -1, -1);
      }

      (*(void (**)(char *, void *))(v84 + 8))(v9, v85);
      v21(v88, 1, 1, v20);
      uint64_t v47 = (uint64_t)v87;
      return sub_24D415F74(v47, (uint64_t *)&unk_26B196F40);
  }
}

uint64_t sub_24D9B0870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC9078();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DB2CBD8(*(void *)a3, *(unsigned __int8 *)(a3 + 8), 0, (uint64_t)v12);
  if (!v3) {
    return sub_24D4C4A7C((uint64_t)v12, a1);
  }
  id v13 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v14 = v3;
  uint64_t v15 = sub_24DCC9068();
  os_log_type_t v16 = sub_24DCCA128();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v24 = v6;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    uint64_t v23 = v7;
    int v19 = (void *)v18;
    *(_DWORD *)uint64_t v17 = 138412290;
    swift_getErrorValue();
    id v20 = sub_24DBA2828(v26);
    id v25 = v20;
    uint64_t v6 = v24;
    sub_24DCCA428();
    *int v19 = v20;

    _os_log_impl(&dword_24D3D0000, v15, v16, "Error fetching the item in the FSSnapshot: %@", v17, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    uint64_t v21 = v19;
    uint64_t v7 = v23;
    MEMORY[0x25332B030](v21, -1, -1);
    MEMORY[0x25332B030](v17, -1, -1);
  }
  else
  {
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

BOOL sub_24D9B0B2C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, char a5)
{
  swift_beginAccess();
  if (sub_24D82CEC0(a1, *(void *)(v5 + 32))) {
    return 1;
  }
  swift_beginAccess();
  uint64_t v12 = sub_24D82CEC0(a1, *(void *)(v5 + 40));
  if (v12) {
    return 0;
  }
  uint64_t v13 = *(void *)(v5 + 48);
  int v14 = *(unsigned __int8 *)(v5 + 56);
  if (v14 == 1 && v13) {
    return 1;
  }
  int v15 = a3 & 1 & v14;
  if (a3) {
    a2 = *(void *)(v5 + 48);
  }
  if (v15 != 1)
  {
LABEL_13:
    if (a2 < 1) {
      return 0;
    }
    if (a5) {
      goto LABEL_15;
    }
    goto LABEL_16;
  }
  if (v13)
  {
    uint64_t v12 = (uint64_t)sub_24D9AFD54();
    a2 = v12;
    goto LABEL_13;
  }
  a2 = 0x7FFFFFFFLL;
  if (a5)
  {
LABEL_15:
    uint64_t v12 = (uint64_t)sub_24D9AFD54();
    a4 = v12;
  }
LABEL_16:
  if (a4 >= 1)
  {
    if (a4 >= (unint64_t)a2)
    {
      sub_24DBC77A4(v12, 0.0, 1.0);
      return v16 < (double)a2 / (double)a4;
    }
    return 1;
  }
  return 0;
}

uint64_t sub_24D9B0C50(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, uint64_t), uint64_t a5)
{
  uint64_t v48 = a3;
  uint64_t v49 = a5;
  unint64_t v50 = a4;
  uint64_t v55 = sub_24DCC9078();
  uint64_t v6 = *(void (***)(char *, uint64_t))(v55 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v55);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)v43 - v10;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v46 = (uint64_t)v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  id v20 = (char *)v43 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v43 - v21;
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v52 = v11;
  v23((char *)v43 - v21, 1, 1, v11);
  uint64_t v54 = a2;
  uint64_t v24 = v53;
  sub_24D9AF500(a2, (uint64_t)v20);
  if (v24)
  {
    os_log_type_t v45 = v22;
    unint64_t v53 = v6;
    id v25 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v26 = v24;
    uint64_t v27 = sub_24DCC9068();
    os_log_type_t v28 = sub_24DCCA128();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = swift_slowAlloc();
      unint64_t v44 = v9;
      uint64_t v30 = v29;
      id v31 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134349314;
      uint64_t v57 = v54;
      sub_24DCCA428();
      *(_WORD *)(v30 + 12) = 2114;
      v43[1] = v30 + 14;
      swift_getErrorValue();
      id v32 = sub_24DBA2828(v56);
      uint64_t v57 = (uint64_t)v32;
      sub_24DCCA428();
      *id v31 = v32;

      _os_log_impl(&dword_24D3D0000, v27, v28, "Error retrieving item %{public}llu error: %{public}@", (uint8_t *)v30, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v31, -1, -1);
      uint64_t v9 = v44;
      MEMORY[0x25332B030](v30, -1, -1);
    }
    else
    {
    }
    uint64_t v33 = v52;
    uint64_t v6 = v53;
    uint64_t v22 = v45;
    v53[1](v9, v55);
  }
  else
  {
    sub_24D415F74((uint64_t)v22, (uint64_t *)&unk_26B196F40);
    sub_24D3F0BA0((uint64_t)v20, (uint64_t)v22, (uint64_t *)&unk_26B196F40);
    uint64_t v33 = v52;
  }
  sub_24D415FD0((uint64_t)v22, (uint64_t)v17, (uint64_t *)&unk_26B196F40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v17, 1, v33) == 1)
  {
    sub_24D415F74((uint64_t)v17, (uint64_t *)&unk_26B196F40);
    id v34 = (id)fpfs_current_or_default_log();
    uint64_t v35 = v51;
    sub_24DCC9088();
    uint64_t v36 = sub_24DCC9068();
    os_log_type_t v37 = sub_24DCCA128();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 134349056;
      uint64_t v57 = v54;
      sub_24DCCA428();
      _os_log_impl(&dword_24D3D0000, v36, v37, "Enumeration returned a fileID for which no item can be found: %{public}llu", v38, 0xCu);
      MEMORY[0x25332B030](v38, -1, -1);
    }

    v6[1](v35, v55);
  }
  else
  {
    uint64_t v39 = v46;
    sub_24D3F0BA0((uint64_t)v17, v46, (uint64_t *)&unk_26B199410);
    uint64_t v40 = v47;
    swift_beginAccess();
    char v41 = sub_24D82CEC0(v54, *(void *)(v40 + 32));
    v50(v39, v41 & 1, v48);
    sub_24D415F74(v39, (uint64_t *)&unk_26B199410);
  }
  return sub_24D415F74((uint64_t)v22, (uint64_t *)&unk_26B196F40);
}

uint64_t sub_24D9B11F4(int a1, uint64_t a2, void *a3)
{
  uint64_t v5 = v4;
  uint64_t v6 = v3;
  uint64_t v52 = a3;
  uint64_t v51 = a2;
  uint64_t v8 = *(void *)(v3 + 48);
  int v42 = *(unsigned __int8 *)(v3 + 56);
  uint64_t v46 = v8;
  if (v42 == 1) {
    BOOL v9 = v8 == 0;
  }
  else {
    BOOL v9 = (uint64_t)sub_24D9AFD54() < v8;
  }
  swift_beginAccess();
  uint64_t v10 = *(void *)(v6 + 16);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v44 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  int64_t v45 = (unint64_t)(v12 + 63) >> 6;
  int v48 = a1 | v9;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v40 = v10;
  uint64_t v41 = MEMORY[0x263F8EE60] + 8;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      uint64_t v18 = (v14 - 1) & v14;
      unint64_t v19 = v17 | (v16 << 6);
    }
    else
    {
      if (__OFADD__(v16++, 1)) {
        goto LABEL_49;
      }
      if (v16 >= v45) {
        return swift_release();
      }
      unint64_t v21 = *(void *)(v44 + 8 * v16);
      if (!v21)
      {
        int64_t v22 = v16 + 1;
        if (v16 + 1 >= v45) {
          return swift_release();
        }
        unint64_t v21 = *(void *)(v44 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v16 + 2;
          if (v16 + 2 >= v45) {
            return swift_release();
          }
          unint64_t v21 = *(void *)(v44 + 8 * v22);
          if (!v21)
          {
            int64_t v22 = v16 + 3;
            if (v16 + 3 >= v45) {
              return swift_release();
            }
            unint64_t v21 = *(void *)(v44 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                int64_t v16 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_50;
                }
                if (v16 >= v45) {
                  return swift_release();
                }
                unint64_t v21 = *(void *)(v44 + 8 * v16);
                ++v22;
                if (v21) {
                  goto LABEL_20;
                }
              }
            }
          }
        }
        int64_t v16 = v22;
      }
LABEL_20:
      uint64_t v18 = (v21 - 1) & v21;
      unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
    }
    uint64_t v23 = 8 * v19;
    uint64_t v24 = *(void **)(*(void *)(v10 + 48) + v23);
    uint64_t v25 = *(void *)(*(void *)(v10 + 56) + v23);
    unint64_t v49 = v18;
    int64_t v50 = v16;
    if (v48)
    {
      uint64_t result = swift_weakLoadStrong();
      if (!result) {
        goto LABEL_52;
      }
      uint64_t v26 = (void *)MEMORY[0x270FA5388](result);
      uint64_t v35 = v25;
      uint64_t v36 = v51;
      id v37 = v52;
      uint64_t v38 = v6;
      uint64_t v39 = v24;
      uint64_t v47 = (void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)(), uint64_t *, uint64_t))(*v26 + 432);
      uint64_t v27 = *v47;
      os_log_type_t v28 = v24;
      id v29 = v24;
      swift_retain();
      v27(1, "enumerateItems(forceExhaustive:_:)", 34, 2, sub_24D9B1AD0, &v34, v41);
      if (v5)
      {
        swift_release();

        swift_release();
        return swift_release();
      }
      uint64_t v10 = v40;
      goto LABEL_7;
    }
    id v30 = v24;
    swift_retain();
    uint64_t result = v46;
    id v43 = v24;
    if (v42) {
      break;
    }
LABEL_28:
    if (result < -1) {
      goto LABEL_48;
    }
    if ((unint64_t)(result + 1) >= 3)
    {
      uint64_t v31 = (unint64_t)result >> 1;
      goto LABEL_36;
    }
LABEL_40:
    uint64_t result = swift_weakLoadStrong();
    os_log_type_t v28 = v43;
    if (!result) {
      goto LABEL_53;
    }
    uint64_t v33 = MEMORY[0x270FA5388](result);
    uint64_t v35 = v25;
    uint64_t v36 = v6;
    id v37 = v30;
    uint64_t v38 = v51;
    uint64_t v39 = v52;
    (*(void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)()))(*(void *)v33 + 432))(1, "enumerateItems(forceExhaustive:_:)", 34, 2, sub_24D9B1AA4);
    if (v5)
    {
      swift_release();
LABEL_43:

      swift_release();
      return swift_release();
    }
LABEL_7:
    swift_release();

    uint64_t result = swift_release();
    unint64_t v14 = v49;
    int64_t v16 = v50;
  }
  if (v46)
  {
    uint64_t result = (uint64_t)sub_24D9AFD54();
    goto LABEL_28;
  }
  uint64_t v31 = 0x3FFFFFFFLL;
LABEL_36:
  while (v31)
  {
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      goto LABEL_51;
    }
    uint64_t v32 = MEMORY[0x270FA5388](result);
    uint64_t v35 = v6;
    uint64_t v36 = v25;
    id v37 = v30;
    uint64_t v38 = v51;
    uint64_t v39 = v52;
    (*(void (**)(uint64_t, const char *, uint64_t, uint64_t, uint64_t (*)()))(*(void *)v32 + 432))(1, "enumerateItems(forceExhaustive:_:)", 34, 2, sub_24D9B1A78);
    uint64_t result = swift_release();
    if (v5) {
      goto LABEL_43;
    }
    if (!--v31) {
      goto LABEL_40;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
  return result;
}

void sub_24D9B1738(uint64_t a1, void (*a2)(char *, void, uint64_t), uint64_t a3, uint64_t a4, void *a5)
{
  swift_retain();
  swift_retain();
  id v10 = a5;
  sub_24D955948(a1, a2, a3, a4, (uint64_t)v10);
}

uint64_t sub_24D9B17BC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, void, uint64_t), uint64_t a5)
{
  uint64_t result = swift_beginAccess();
  uint64_t v11 = *(void *)(a1 + 32);
  unint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_24DA7E9FC(v12);
    uint64_t result = sub_24DC87F98(v11);
    if ((v13 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      char v16 = v15;
      uint64_t v30 = a2;
      uint64_t v31 = a3;
      uint64_t v17 = v15 & 1;
      if (v13)
      {
        os_log_type_t v28 = a4;
        uint64_t v29 = a5;
        uint64_t v18 = result;
        uint64_t v19 = v14;
        sub_24D4C6AA4(result, v14, v15 & 1);
        uint64_t v26 = v18;
        uint64_t v27 = v19;
        do
        {
          uint64_t v20 = v19;
          uint64_t v21 = v18;
          char v22 = v17 & 1;
          uint64_t v18 = sub_24DC8803C(v18, v19, v17 & 1, v11);
          uint64_t v19 = v23;
          uint64_t v17 = v24 & 1;
          sub_24D4C6A6C(v21, v20, v22);
          --v13;
        }
        while (v13);
        sub_24D4C6A6C(v26, v27, v16 & 1);
        a5 = v29;
        a4 = v28;
      }
      else
      {
        uint64_t v18 = result;
        uint64_t v19 = v14;
      }
      uint64_t v25 = sub_24DC88124(v18, v19, v17, v11);
      sub_24D4C6A6C(v18, v19, v17);
      swift_bridgeObjectRelease();
      return sub_24D9B0C50(v30, v25, v31, a4, a5);
    }
  }
  return result;
}

uint64_t sub_24D9B1944(uint64_t a1, uint64_t a2, void *a3, void (*a4)(char *, void, id), uint64_t a5)
{
  uint64_t v10 = *(void *)(a2 + 48);
  if (*(unsigned char *)(a2 + 56) == 1)
  {
    if (v10) {
      uint64_t v10 = (uint64_t)sub_24D9AFD54();
    }
    else {
      uint64_t v10 = 0x7FFFFFFFLL;
    }
  }
  if (v10 >= 0) {
    uint64_t v11 = v10;
  }
  else {
    uint64_t v11 = v10 + 1;
  }
  uint64_t v12 = v11 >> 1;
  swift_retain();
  id v13 = a3;
  swift_retain();
  sub_24D9554F0(v12, a1, (uint64_t *)a2, v13, a4, a5);
  return swift_release();
}

uint64_t sub_24D9B1A04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FSSnapshotChecker()
{
  return self;
}

uint64_t sub_24D9B1A78()
{
  return sub_24D9B1AFC((uint64_t (*)(void, void, void, void, void))sub_24D9B17BC);
}

uint64_t sub_24D9B1AA4()
{
  return sub_24D9B1AFC((uint64_t (*)(void, void, void, void, void))sub_24D9B1944);
}

uint64_t sub_24D9B1AD0()
{
  return sub_24D9B1AFC((uint64_t (*)(void, void, void, void, void))sub_24D9B1738);
}

uint64_t sub_24D9B1AFC(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_24D9B1B28(uint64_t a1, void *a2)
{
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24DCC9078();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v54 - v12;
  uint64_t v14 = *(void *)(a1 + 32);
  char v15 = (void *)swift_retain();
  if (objc_sync_enter(v15)) {
    goto LABEL_32;
  }
  swift_retain();
  if (objc_sync_exit(a2)) {
    goto LABEL_33;
  }
  swift_release();
  swift_release();
  uint64_t v62 = v14;
  long long v63 = 0u;
  long long v64 = 0u;
  uint64_t v16 = fpfs_openfdbyhandle();
  if ((v16 & 0x80000000) == 0)
  {
    sub_24D40CB10(v16);
    return 1;
  }
  uint64_t v56 = v5;
  int v18 = MEMORY[0x253327160]();
  uint64_t v19 = (void *)sub_24D90CF14(v18, 0, 0, 0xAu);
  swift_willThrow();
  id v20 = v19;
  LODWORD(v62) = sub_24DCC8348();
  sub_24D4C5C60();
  sub_24DCC86A8();

  id v21 = v19;
  LODWORD(v62) = sub_24DCC82F8();
  char v22 = sub_24DCC86A8();

  if ((v22 & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v23 = *(void *)a1;
  int v24 = *(unsigned __int8 *)(a1 + 8);
  sub_24D415FD0(a1, (uint64_t)v13, (uint64_t *)&unk_26B199410);
  if (v24 == 2 && !v23)
  {
    sub_24D415F74((uint64_t)v13, (uint64_t *)&unk_26B199410);
    goto LABEL_11;
  }
  uint64_t v25 = *(void *)v13;
  unsigned int v26 = v13[8];
  sub_24D415F74((uint64_t)v13, (uint64_t *)&unk_26B199410);
  if (v26 >= 2 && v25)
  {
LABEL_11:
    id v27 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    sub_24D415FD0(a1, (uint64_t)v11, (uint64_t *)&unk_26B199410);
    id v28 = v19;
    id v29 = v19;
    uint64_t v30 = sub_24DCC9068();
    os_log_type_t v31 = sub_24DCCA128();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v54 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v62 = v55;
      *(_DWORD *)uint64_t v32 = 136315394;
      uint64_t v33 = sub_24D82BF20();
      uint64_t v59 = sub_24D418FB4(v33, v34, &v62);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D415F74((uint64_t)v11, (uint64_t *)&unk_26B199410);
      *(_WORD *)(v32 + 12) = 2112;
      swift_getErrorValue();
      id v35 = sub_24DBA2828(v61);
      uint64_t v59 = (uint64_t)v35;
      sub_24DCCA428();
      uint64_t v36 = v54;
      *uint64_t v54 = v35;

      _os_log_impl(&dword_24D3D0000, v30, v31, "Error trying to access(%s): %@", (uint8_t *)v32, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v36, -1, -1);
      uint64_t v37 = v55;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v37, -1, -1);
      MEMORY[0x25332B030](v32, -1, -1);
    }
    else
    {

      sub_24D415F74((uint64_t)v11, (uint64_t *)&unk_26B199410);
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v7, v4);
    return 0;
  }

  uint64_t v38 = *(void *)(a1 + 16);
  int v39 = *(unsigned __int8 *)(a1 + 24);
  if (v39 == 1) {
    goto LABEL_27;
  }
  if (v39 != 2)
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
    return result;
  }
  uint64_t v40 = (void *)swift_retain();
  int v41 = objc_sync_enter(v40);
  if (!v38)
  {
    if (v41) {
      goto LABEL_32;
    }
    uint64_t v44 = a2[20];
    swift_retain();
    if (objc_sync_exit(a2)) {
      goto LABEL_33;
    }
    swift_release();
    uint64_t v38 = *(void *)(v44 + 24);
    swift_release();
    goto LABEL_27;
  }
  if (v41) {
    goto LABEL_32;
  }
  uint64_t v42 = a2[20];
  swift_retain();
  if (objc_sync_exit(a2)) {
    goto LABEL_33;
  }
  swift_release();
  uint64_t v38 = *(void *)(v42 + 40);
  char v43 = *(unsigned char *)(v42 + 48);
  swift_release();
  if ((v43 & 1) == 0)
  {
LABEL_27:
    int64_t v45 = (void *)swift_retain();
    if (!objc_sync_enter(v45))
    {
      swift_retain();
      if (!objc_sync_exit(a2))
      {
        swift_release();
        swift_release();
        uint64_t v62 = v38;
        long long v63 = 0u;
        long long v64 = 0u;
        uint64_t v46 = fpfs_openfdbyhandle();
        if ((v46 & 0x80000000) == 0)
        {
          uint64_t v47 = v46;
          uint64_t v48 = *(void *)(a1 + 136);
          uint64_t v62 = *(void *)(a1 + 128);
          *(void *)&long long v63 = v48;
          uint64_t v59 = 47;
          unint64_t v60 = 0xE100000000000000;
          uint64_t v57 = 58;
          unint64_t v58 = 0xE100000000000000;
          sub_24D3F0EB8();
          sub_24DCCA478();
          uint64_t v49 = sub_24DCC9898();
          swift_bridgeObjectRelease();
          int v50 = faccessat(v47, (const char *)(v49 + 32), 0, 32);
          swift_release();
          sub_24D40CB10(v47);
          return v50 == 0;
        }
        int v51 = MEMORY[0x253327160]();
        uint64_t v52 = (void *)sub_24D90CF14(v51, 0, 0, 0xAu);
        swift_willThrow();
        id v53 = v52;
        LODWORD(v62) = sub_24DCC8348();
        sub_24DCC86A8();

        return 0;
      }
LABEL_33:
      sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)a2);
    }
LABEL_32:
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)a2);
  }
  return 0;
}

uint64_t sub_24D9B22C0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9B22F8(void *a1)
{
  return sub_24D9AFB94(a1);
}

uint64_t sub_24D9B2300()
{
  return swift_deallocObject();
}

uint64_t sub_24D9B2310()
{
  return sub_24D9B0870(v0[2], v0[3], v0[4]);
}

void *sub_24D9B2330@<X0>(uint64_t a1@<X8>)
{
  return sub_24D9AFE74(a1);
}

void sub_24D9B234C()
{
  uint64_t v1 = v0;
  uint64_t v35 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24DCC9078();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v30 - v7;
  if ((*(unsigned char *)(v0 + 33) & 1) == 0)
  {
    id v9 = objc_msgSend(self, sel_defaultManager);
    uint64_t v11 = *(void **)(v1 + 16);
    uint64_t v10 = *(void *)(v1 + 24);
    uint64_t v12 = (void *)sub_24DCC97B8();
    id v32 = 0;
    unsigned int v13 = objc_msgSend(v9, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v12, 1, 0, &v32);

    id v14 = v32;
    if (v13)
    {
      id v32 = v11;
      uint64_t v33 = v10;
      swift_bridgeObjectRetain();
      sub_24DCC9968();
      sub_24DCC9898();
      id v15 = v14;
      swift_bridgeObjectRelease();
      fpfs_removeat();
      swift_release();
      id v32 = v11;
      uint64_t v33 = v10;
      swift_bridgeObjectRetain();
      sub_24DCC9968();
      sub_24DCC9898();
      swift_bridgeObjectRelease();
      fpfs_removeat();
      swift_release();
      id v32 = v11;
      uint64_t v33 = v10;
      swift_bridgeObjectRetain();
      sub_24DCC9968();
      sub_24DCC9898();
      swift_bridgeObjectRelease();
      int v16 = sub_24DCC90B8();
      swift_release();
      if ((v16 & 0x80000000) == 0)
      {
        fpfs_track_document();
        close(v16);
      }
      *(unsigned char *)(v1 + 33) = 1;
      if (*(unsigned char *)(v1 + 34) == 1)
      {
        id v17 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        int v18 = sub_24DCC9068();
        os_log_type_t v19 = sub_24DCCA148();
        if (os_log_type_enabled(v18, v19))
        {
          id v20 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)id v20 = 0;
          _os_log_impl(&dword_24D3D0000, v18, v19, "💀 tombstone slayer setup succeeded after previous failure", v20, 2u);
          MEMORY[0x25332B030](v20, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
        *(unsigned char *)(v1 + 34) = 0;
      }
    }
    else
    {
      id v21 = v32;
      char v22 = (void *)sub_24DCC8828();

      swift_willThrow();
      if (*(unsigned char *)(v1 + 34))
      {
      }
      else
      {
        id v23 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        id v24 = v22;
        uint64_t v25 = sub_24DCC9068();
        os_log_type_t v26 = sub_24DCCA138();
        if (os_log_type_enabled(v25, v26))
        {
          id v27 = (uint8_t *)swift_slowAlloc();
          id v28 = (void *)swift_slowAlloc();
          uint64_t v31 = v3;
          *(_DWORD *)id v27 = 138412290;
          uint64_t v30 = v27 + 4;
          swift_getErrorValue();
          id v29 = sub_24DBA2828(v34);
          id v32 = v29;
          uint64_t v3 = v31;
          sub_24DCCA428();
          *id v28 = v29;

          _os_log_impl(&dword_24D3D0000, v25, v26, "💀 cannot setup tombstone slayer: %@", v27, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v28, -1, -1);
          MEMORY[0x25332B030](v27, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
        *(unsigned char *)(v1 + 34) = 1;
      }
    }
  }
}

uint64_t sub_24D9B2820()
{
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  sub_24DCC9898();
  swift_bridgeObjectRelease();
  fpfs_removeat();
  swift_release();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  sub_24DCC9898();
  swift_bridgeObjectRelease();
  fpfs_removeat();
  swift_release();
  sub_24DCC9898();
  fpfs_removeat();
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24D9B290C()
{
  sub_24D9B2820();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DocumentTrackingTombstoneSlayer()
{
  return self;
}

uint64_t sub_24D9B2964()
{
  uint64_t v1 = sub_24DCC9078();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  MEMORY[0x270FA5388](v2);
  sub_24D9B234C();
  uint64_t result = sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D9B2E10);
  *(unsigned char *)(v0 + 32) = (*(unsigned char *)(v0 + 32) & 1) == 0;
  return result;
}

uint64_t sub_24D9B2CD4@<X0>(int *a1@<X8>)
{
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  uint64_t v2 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  int v4 = renameatx_np(-2, (const char *)(v2 + 32), -2, (const char *)(v3 + 32), 4u);
  swift_release();
  uint64_t result = swift_release();
  *a1 = v4;
  return result;
}

uint64_t sub_24D9B2E10@<X0>(int *a1@<X8>)
{
  return sub_24D9B2CD4(a1);
}

uint64_t sub_24D9B2E2C()
{
  uint64_t result = type metadata accessor for SnapshotItem();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    id v14 = &v13;
    uint64_t v8 = v2;
    uint64_t v9 = v2;
    uint64_t v10 = MEMORY[0x263F8CF70] + 64;
    uint64_t v11 = &unk_24DCE1B98;
    swift_getTupleTypeLayout();
    id v15 = &v12;
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v3 <= 0x3F)
    {
      swift_getTupleTypeLayout3();
      int v16 = &v7;
      swift_getTupleTypeLayout2();
      id v17 = &v6;
      swift_getTupleTypeLayout3();
      int v18 = &v5;
      swift_getTupleTypeLayout2();
      os_log_type_t v19 = &v4;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24D9B2FEC(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v360 = *(void *)(AssociatedTypeWitness - 8);
  int v362 = *(_DWORD *)(v360 + 80);
  uint64_t v3 = v362;
  uint64_t v353 = v2 + v362;
  uint64_t v355 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v355 - 8);
  uint64_t v358 = v4;
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v357 = swift_getAssociatedTypeWitness();
  uint64_t v359 = *(void *)(v357 - 8);
  int v6 = *(_DWORD *)(v359 + 80);
  uint64_t v7 = v5 & 0xF8 | v6 | 7u;
  uint64_t v351 = v2 + v7;
  uint64_t v352 = *(void *)(v4 + 64) + 7;
  uint64_t v354 = v6 + 8;
  uint64_t v356 = *(void *)(v359 + 64) + 7;
  unint64_t v8 = ((((v356 + ((v354 + (v352 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v6)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  unint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = *(void *)(v10 + 64);
  if (*(_DWORD *)(v10 + 84)) {
    size_t v13 = *(void *)(v10 + 64);
  }
  else {
    size_t v13 = v12 + 1;
  }
  unint64_t v14 = ((((((v11 | 7) + 16 + ((v2 + v7 + (v353 & ~(unint64_t)v362)) & ~v7) + v8) & ~(v11 | 7))
         + ((((((((((v13
                   + 7
                   + ((v11
                     + 10
                     + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 311) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = v14 + 23;
  unint64_t v16 = ((v14 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = v14 + 16;
  unint64_t v18 = v7 | v362 | v11;
  unint64_t v19 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v19 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v19 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 > v16) {
    unint64_t v16 = v19;
  }
  if (v16 <= ((((v15 + ((v17 + v18) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v20 = ((((v15 + ((v17 + v18) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v20 = v16;
  }
  if (v18 != 7 || ((v5 | v362 | v6 | *(_DWORD *)(v10 + 80)) & 0x100000) != 0 || (v20 | 1) > 0x18)
  {
    uint64_t v59 = *a2;
    *a1 = *a2;
    a1 = (void *)(v59 + ((v18 + 16) & ~v18));
    swift_retain();
  }
  else
  {
    unint64_t v363 = ((((v356
             + ((v6 + 8 + (v352 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v6)) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unsigned int v21 = *((unsigned __int8 *)a2 + v20);
    if (v21 >= 6 && v20 != 0) {
      unsigned int v21 = *(_DWORD *)a2 + 6;
    }
    unint64_t v349 = v17;
    uint64_t v23 = ~v3;
    switch(v21)
    {
      case 1u:
        size_t __na = v13;
        size_t v342 = v13 + 7;
        unint64_t v346 = ((((((((((v13
                       + 7
                       + ((v11
                         + 10
                         + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                     + 31) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        unint64_t v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v360 + 16);
        uint64_t v344 = v9;
        uint64_t v348 = *(void *)(v9 - 8);
        uint64_t v338 = ~v11;
        unint64_t v340 = v11 + 10;
        unint64_t v334 = v11 + 12;
        uint64_t v336 = v12 + v11;
        uint64_t v330 = ~(v11 | 7);
        uint64_t v332 = (v11 | 7) + 16;
        unint64_t v328 = ~(unint64_t)v6;
        uint64_t v350 = *(void *)(v10 + 64);
        v60((unint64_t)a1, (unint64_t)a2, AssociatedTypeWitness);
        unint64_t v61 = ((unint64_t)a1 + v353) & v23;
        uint64_t v321 = v23;
        unint64_t v62 = ((unint64_t)a2 + v353) & v23;
        v318 = v60;
        v60(v61, v62, AssociatedTypeWitness);
        unint64_t v63 = (v61 + v2 + v7) & ~v7;
        uint64_t v319 = ~v7;
        unint64_t v64 = (v62 + v2 + v7) & ~v7;
        v316 = *(void (**)(unint64_t, unint64_t, uint64_t))(v358 + 16);
        v316(v63, v64, v355);
        uint64_t v65 = (void *)((v352 + v63) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v66 = (void *)((v352 + v64) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v65 = *v66;
        unint64_t v67 = ((unint64_t)v65 + v354) & v328;
        unint64_t v68 = ((unint64_t)v66 + v354) & v328;
        uint64_t v69 = *(void (**)(unint64_t, unint64_t, uint64_t))(v359 + 16);
        swift_bridgeObjectRetain();
        v317 = v69;
        v69(v67, v68, v357);
        uint64_t v70 = (void *)((v356 + v68) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v71 = (void *)((v356 + v67) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v71 = *v70;
        uint64_t v72 = (void *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v73 = (void *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v72 = *v73;
        v72[1] = v73[1];
        uint64_t v74 = (void *)(v8 + v63);
        *uint64_t v74 = *(void *)(v8 + v64);
        v74[1] = *(void *)(v8 + v64 + 8);
        unint64_t v75 = (v332 + v8 + v63) & v330;
        unint64_t v76 = (v332 + v8 + v64) & v330;
        *(unsigned char *)unint64_t v75 = *(unsigned char *)v76;
        uint64_t v77 = v75 | 4;
        int v78 = *(_DWORD *)(v76 | 4);
        *(unsigned char *)(v77 + 4) = *(unsigned char *)((v76 | 4) + 4);
        *(_DWORD *)uint64_t v77 = v78;
        *(_WORD *)(v75 + 10) = *(_WORD *)(v76 + 0xA);
        unint64_t v313 = v75;
        unint64_t v314 = v76;
        unint64_t v79 = (v334 + v75) & v338;
        unint64_t v80 = (v334 + v76) & v338;
        id v81 = *(void (**)(unint64_t, unint64_t, uint64_t))(v348 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v81(v79, v80, v344);
        unint64_t v82 = (v336 + v79) & v338;
        unint64_t v83 = (v336 + v80) & v338;
        v81(v82, v83, v344);
        uint64_t v84 = (unsigned char *)(v82 + v12);
        *uint64_t v84 = *(unsigned char *)(v83 + v12);
        v84[1] = *(unsigned char *)(v83 + v12 + 1);
        v84[2] = *(unsigned char *)(v83 + v12 + 2);
        v84[3] = *(unsigned char *)(v83 + v12 + 3);
        v84[4] = *(unsigned char *)(v83 + v12 + 4);
        unint64_t v85 = (v82 + v12 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v86 = (v83 + v12 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v85 = *(void *)v86;
        *(void *)(v85 + 8) = *(void *)(v86 + 8);
        *(unsigned char *)(v85 + 16) = *(unsigned char *)(v86 + 16);
        *(unsigned char *)(v85 + 17) = *(unsigned char *)(v86 + 17);
        *(unsigned char *)(v85 + 18) = *(unsigned char *)(v86 + 18);
        *(unsigned char *)(v85 + 19) = *(unsigned char *)(v86 + 19);
        unint64_t v87 = (v85 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v88 = (v86 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v87 = *(void *)v88;
        *(unsigned char *)(v87 + 8) = *(unsigned char *)(v88 + 8);
        *(unsigned char *)(v87 + 9) = *(unsigned char *)(v88 + 9);
        *(unsigned char *)(v87 + 10) = *(unsigned char *)(v88 + 10);
        *(unsigned char *)(v87 + 11) = *(unsigned char *)(v88 + 11);
        *(unsigned char *)(v87 + 12) = *(unsigned char *)(v88 + 12);
        uint64_t v89 = (void *)((v86 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v90 = (void *)((v85 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v90 = *v89;
        unint64_t v91 = ((unint64_t)v90 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v92 = ((unint64_t)v89 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v91 = *(void *)v92;
        *(unsigned char *)(v91 + 8) = *(unsigned char *)(v92 + 8);
        *(unsigned char *)(v91 + 9) = *(unsigned char *)(v92 + 9);
        unint64_t v93 = (void *)((v340 + v91) & v338);
        uint64_t v94 = (const void *)((v340 + v92) & v338);
        uint64_t v95 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v348 + 48);
        swift_bridgeObjectRetain();
        v315 = v95;
        unint64_t v322 = v15;
        unint64_t v326 = v20;
        v320 = v81;
        if (v95(v94, 1, v344))
        {
          memcpy(v93, v94, __na);
        }
        else
        {
          v81((unint64_t)v93, (unint64_t)v94, v344);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v348 + 56))(v93, 0, 1, v344);
        }
        id v117 = (void *)(((unint64_t)v93 + v342) & 0xFFFFFFFFFFFFFFF8);
        id v118 = (void *)(((unint64_t)v94 + v342) & 0xFFFFFFFFFFFFFFF8);
        *id v117 = *v118;
        unint64_t v119 = ((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v120 = ((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v121 = *(void *)v120;
        *(unsigned char *)(v119 + 8) = *(unsigned char *)(v120 + 8);
        *(void *)unint64_t v119 = v121;
        id v122 = (void *)(((unint64_t)v117 + 31) & 0xFFFFFFFFFFFFFFF8);
        id v123 = (void *)(((unint64_t)v118 + 31) & 0xFFFFFFFFFFFFFFF8);
        *id v122 = *v123;
        unint64_t v124 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
        id v125 = (uint64_t *)(((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v126 = v125[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v127 = a2;
        if ((v126 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v124 = *(_OWORD *)v125;
        }
        else
        {
          uint64_t v155 = *v125;
          sub_24D3F9C18(*v125, v126);
          *(void *)unint64_t v124 = v155;
          *(void *)(v124 + 8) = v126;
        }
        uint64_t v156 = v321;
        unint64_t v157 = (v124 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v158 = ((unint64_t)v125 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v159 = *(void *)v158;
        *(unsigned char *)(v157 + 8) = *(unsigned char *)(v158 + 8);
        *(void *)unint64_t v157 = v159;
        *(unsigned char *)(v157 + 9) = *(unsigned char *)(v158 + 9);
        unint64_t v160 = (v157 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v161 = (v158 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v162 = *(_DWORD *)v161;
        *(unsigned char *)(v160 + 4) = *(unsigned char *)(v161 + 4);
        *(_DWORD *)unint64_t v160 = v162;
        uint64_t v163 = (void *)((v157 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v164 = (void *)((v158 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v163 = *v164;
        v163[1] = v164[1];
        unint64_t v165 = v346 + v313;
        unint64_t v166 = (long long *)(v346 + v314);
        unint64_t v167 = *(void *)(v346 + v314 + 16);
        if (v167 >= 0xFFFFFFFF) {
          LODWORD(v167) = -1;
        }
        int v168 = v167 - 1;
        swift_bridgeObjectRetain();
        if (v168 < 0)
        {
          *(void *)unint64_t v165 = *(void *)v166;
          *(unsigned char *)(v165 + 8) = *((unsigned char *)v166 + 8);
          *(unsigned char *)(v165 + 9) = *((unsigned char *)v166 + 9);
          v187 = (void *)*((void *)v166 + 2);
          id v188 = v187;
          *(void *)(v165 + 16) = v187;
          v189 = (void *)*((void *)v166 + 3);
          id v190 = v189;
          *(void *)(v165 + 24) = v189;
          *(unsigned char *)(v165 + 32) = *((unsigned char *)v166 + 32);
          *(unsigned char *)(v165 + 33) = *((unsigned char *)v166 + 33);
          *(unsigned char *)(v165 + 34) = *((unsigned char *)v166 + 34);
          *(void *)(v165 + 40) = *((void *)v166 + 5);
          *(void *)(v165 + 48) = *((void *)v166 + 6);
          *(void *)(v165 + 56) = *((void *)v166 + 7);
          *(void *)(v165 + 64) = *((void *)v166 + 8);
          *(unsigned char *)(v165 + 72) = *((unsigned char *)v166 + 72);
          *(void *)(v165 + 80) = *((void *)v166 + 10);
          *(void *)(v165 + 88) = *((void *)v166 + 11);
          v191 = (void *)*((void *)v166 + 12);
          *(void *)(v165 + 96) = v191;
          *(unsigned char *)(v165 + 104) = *((unsigned char *)v166 + 104);
          *(unsigned char *)(v165 + 105) = *((unsigned char *)v166 + 105);
          *(void *)(v165 + 112) = *((void *)v166 + 14);
          *(void *)(v165 + 120) = *((void *)v166 + 15);
          *(void *)(v165 + 128) = *((void *)v166 + 16);
          *(void *)(v165 + 136) = *((void *)v166 + 17);
          *(void *)(v165 + 144) = *((void *)v166 + 18);
          *(void *)(v165 + 152) = *((void *)v166 + 19);
          *(void *)(v165 + 160) = *((void *)v166 + 20);
          *(void *)(v165 + 168) = *((void *)v166 + 21);
          *(unsigned char *)(v165 + 176) = *((unsigned char *)v166 + 176);
          *(void *)(v165 + 184) = *((void *)v166 + 23);
          uint64_t v192 = *((void *)v166 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v193 = v191;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v192)
          {
            *(void *)(v165 + 192) = v192;
            *(void *)(v165 + 200) = *((void *)v166 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v165 + 192) = v166[12];
          }
          uint64_t v156 = v321;
          id v127 = a2;
          *(void *)(v165 + 208) = *((void *)v166 + 26);
          *(void *)(v165 + 216) = *((void *)v166 + 27);
          *(void *)(v165 + 224) = *((void *)v166 + 28);
          *(void *)(v165 + 232) = *((void *)v166 + 29);
          *(void *)(v165 + 240) = *((void *)v166 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v169 = *v166;
          long long v170 = v166[1];
          long long v171 = v166[3];
          *(_OWORD *)(v165 + 32) = v166[2];
          *(_OWORD *)(v165 + 48) = v171;
          *(_OWORD *)unint64_t v165 = v169;
          *(_OWORD *)(v165 + 16) = v170;
          long long v172 = v166[4];
          long long v173 = v166[5];
          long long v174 = v166[7];
          *(_OWORD *)(v165 + 96) = v166[6];
          *(_OWORD *)(v165 + 112) = v174;
          *(_OWORD *)(v165 + 64) = v172;
          *(_OWORD *)(v165 + 80) = v173;
          long long v175 = v166[8];
          long long v176 = v166[9];
          long long v177 = v166[11];
          *(_OWORD *)(v165 + 160) = v166[10];
          *(_OWORD *)(v165 + 176) = v177;
          *(_OWORD *)(v165 + 128) = v175;
          *(_OWORD *)(v165 + 144) = v176;
          long long v178 = v166[12];
          long long v179 = v166[13];
          long long v180 = v166[14];
          *(void *)(v165 + 240) = *((void *)v166 + 30);
          *(_OWORD *)(v165 + 208) = v179;
          *(_OWORD *)(v165 + 224) = v180;
          *(_OWORD *)(v165 + 192) = v178;
        }
        v208 = (_OWORD *)((v165 + 255) & 0xFFFFFFFFFFFFFFF8);
        v209 = (long long *)(((unint64_t)v166 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v210 = *v209;
        *(_OWORD *)((char *)v208 + 9) = *(long long *)((char *)v209 + 9);
        _OWORD *v208 = v210;
        unint64_t v211 = (v165 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v212 = ((unint64_t)v166 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v213 = *(_OWORD *)v212;
        *(unsigned char *)(v211 + 16) = *(unsigned char *)(v212 + 16);
        *(_OWORD *)unint64_t v211 = v213;
        v214 = (void *)((v165 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v215 = ((unint64_t)v166 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v216 = *(void *)v215;
        v215 += 15;
        void *v214 = v216;
        v217 = (void *)(((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v218 = *(void *)(v215 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v219 = *(void *)((v215 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v218, v219);
        void *v217 = v218;
        v217[1] = v219;
        unint64_t v220 = ((unint64_t)a1 + v15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v221 = ((unint64_t)v127 + v15) & 0xFFFFFFFFFFFFFFF8;
        v318(v220, v221, AssociatedTypeWitness);
        unint64_t v222 = (v353 + v220) & v156;
        unint64_t v368 = ((unint64_t)v127 + v322) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v223 = (v353 + v221) & v156;
        v318(v222, v223, AssociatedTypeWitness);
        unint64_t v224 = (v351 + v222) & v319;
        unint64_t v225 = (v351 + v223) & v319;
        v316(v224, v225, v355);
        v226 = (void *)((v352 + v224) & 0xFFFFFFFFFFFFFFF8);
        v227 = (void *)((v352 + v225) & 0xFFFFFFFFFFFFFFF8);
        void *v226 = *v227;
        unint64_t v228 = ((unint64_t)v226 + v354) & v328;
        unint64_t v229 = ((unint64_t)v227 + v354) & v328;
        swift_bridgeObjectRetain();
        v317(v228, v229, v357);
        v230 = (void *)((v356 + v228) & 0xFFFFFFFFFFFFFFF8);
        v231 = (void *)((v356 + v229) & 0xFFFFFFFFFFFFFFF8);
        void *v230 = *v231;
        v232 = (void *)(((unint64_t)v230 + 15) & 0xFFFFFFFFFFFFFFF8);
        v233 = (void *)(((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v232 = *v233;
        v232[1] = v233[1];
        v234 = (void *)(v224 + v363);
        void *v234 = *(void *)(v225 + v363);
        v234[1] = *(void *)(v225 + v363 + 8);
        unint64_t v235 = (v332 + v224 + v363) & v330;
        unint64_t v236 = (v332 + v225 + v363) & v330;
        *(unsigned char *)unint64_t v235 = *(unsigned char *)v236;
        uint64_t v237 = v235 | 4;
        int v238 = *(_DWORD *)(v236 | 4);
        *(unsigned char *)(v237 + 4) = *(unsigned char *)((v236 | 4) + 4);
        *(_DWORD *)uint64_t v237 = v238;
        *(_WORD *)(v235 + 10) = *(_WORD *)(v236 + 0xA);
        unint64_t v239 = (v334 + v235) & v338;
        unint64_t v240 = (v334 + v236) & v338;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v320(v239, v240, v344);
        unint64_t v241 = (v336 + v240) & v338;
        v320((v336 + v239) & v338, v241, v344);
        v242 = (unsigned char *)(((v336 + v239) & v338) + v350);
        unsigned char *v242 = *(unsigned char *)(v241 + v350);
        v242[1] = *(unsigned char *)(v241 + v350 + 1);
        v242[2] = *(unsigned char *)(v241 + v350 + 2);
        v242[3] = *(unsigned char *)(v241 + v350 + 3);
        v242[4] = *(unsigned char *)(v241 + v350 + 4);
        unint64_t v243 = (unint64_t)(v242 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v244 = (v241 + v350 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v243 = *(void *)v244;
        *(void *)(v243 + 8) = *(void *)(v244 + 8);
        *(unsigned char *)(v243 + 16) = *(unsigned char *)(v244 + 16);
        *(unsigned char *)(v243 + 17) = *(unsigned char *)(v244 + 17);
        *(unsigned char *)(v243 + 18) = *(unsigned char *)(v244 + 18);
        *(unsigned char *)(v243 + 19) = *(unsigned char *)(v244 + 19);
        unint64_t v245 = (v243 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v246 = (v244 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v245 = *(void *)v246;
        *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
        *(unsigned char *)(v245 + 9) = *(unsigned char *)(v246 + 9);
        *(unsigned char *)(v245 + 10) = *(unsigned char *)(v246 + 10);
        *(unsigned char *)(v245 + 11) = *(unsigned char *)(v246 + 11);
        *(unsigned char *)(v245 + 12) = *(unsigned char *)(v246 + 12);
        v247 = (void *)((v243 + 47) & 0xFFFFFFFFFFFFFFF8);
        v248 = (void *)((v244 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v247 = *v248;
        unint64_t v249 = ((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v250 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v249 = *(void *)v250;
        *(unsigned char *)(v249 + 8) = *(unsigned char *)(v250 + 8);
        *(unsigned char *)(v249 + 9) = *(unsigned char *)(v250 + 9);
        v251 = (void *)((v340 + v249) & v338);
        v252 = (const void *)((v340 + v250) & v338);
        swift_bridgeObjectRetain();
        if (v315(v252, 1, v344))
        {
          memcpy(v251, v252, __na);
        }
        else
        {
          v320((unint64_t)v251, (unint64_t)v252, v344);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v348 + 56))(v251, 0, 1, v344);
        }
        v253 = (void *)(((unint64_t)v251 + v342) & 0xFFFFFFFFFFFFFFF8);
        v254 = (void *)(((unint64_t)v252 + v342) & 0xFFFFFFFFFFFFFFF8);
        void *v253 = *v254;
        unint64_t v255 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v257 = *(void *)v256;
        *(unsigned char *)(v255 + 8) = *(unsigned char *)(v256 + 8);
        *(void *)unint64_t v255 = v257;
        v258 = (void *)(((unint64_t)v253 + 31) & 0xFFFFFFFFFFFFFFF8);
        v259 = (void *)(((unint64_t)v254 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v258 = *v259;
        unint64_t v260 = ((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8;
        v261 = (uint64_t *)(((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v262 = v261[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v262 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v260 = *(_OWORD *)v261;
        }
        else
        {
          uint64_t v263 = *v261;
          sub_24D3F9C18(*v261, v262);
          *(void *)unint64_t v260 = v263;
          *(void *)(v260 + 8) = v262;
        }
        unint64_t v264 = (v260 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v265 = ((unint64_t)v261 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v266 = *(void *)v265;
        *(unsigned char *)(v264 + 8) = *(unsigned char *)(v265 + 8);
        *(void *)unint64_t v264 = v266;
        *(unsigned char *)(v264 + 9) = *(unsigned char *)(v265 + 9);
        unint64_t v267 = (v264 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v268 = (v265 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v269 = *(_DWORD *)v268;
        *(unsigned char *)(v267 + 4) = *(unsigned char *)(v268 + 4);
        *(_DWORD *)unint64_t v267 = v269;
        v270 = (void *)((v264 + 25) & 0xFFFFFFFFFFFFFFF8);
        v271 = (void *)((v265 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v270 = *v271;
        v270[1] = v271[1];
        unint64_t v272 = v235 + v346;
        unint64_t v273 = v236 + v346;
        unint64_t v274 = *(void *)(v236 + v346 + 16);
        if (v274 >= 0xFFFFFFFF) {
          LODWORD(v274) = -1;
        }
        int v275 = v274 - 1;
        swift_bridgeObjectRetain();
        if (v275 < 0)
        {
          *(void *)unint64_t v272 = *(void *)v273;
          *(unsigned char *)(v272 + 8) = *(unsigned char *)(v273 + 8);
          *(unsigned char *)(v272 + 9) = *(unsigned char *)(v273 + 9);
          v291 = *(void **)(v273 + 16);
          id v292 = v291;
          *(void *)(v272 + 16) = v291;
          v293 = *(void **)(v273 + 24);
          id v294 = v293;
          *(void *)(v272 + 24) = v293;
          *(unsigned char *)(v272 + 32) = *(unsigned char *)(v273 + 32);
          *(unsigned char *)(v272 + 33) = *(unsigned char *)(v273 + 33);
          *(unsigned char *)(v272 + 34) = *(unsigned char *)(v273 + 34);
          *(void *)(v272 + 40) = *(void *)(v273 + 40);
          *(void *)(v272 + 48) = *(void *)(v273 + 48);
          *(void *)(v272 + 56) = *(void *)(v273 + 56);
          *(void *)(v272 + 64) = *(void *)(v273 + 64);
          *(unsigned char *)(v272 + 72) = *(unsigned char *)(v273 + 72);
          *(void *)(v272 + 80) = *(void *)(v273 + 80);
          *(void *)(v272 + 88) = *(void *)(v273 + 88);
          v366 = *(void **)(v273 + 96);
          *(void *)(v272 + 96) = v366;
          *(unsigned char *)(v272 + 104) = *(unsigned char *)(v273 + 104);
          *(unsigned char *)(v272 + 105) = *(unsigned char *)(v273 + 105);
          *(void *)(v272 + 112) = *(void *)(v273 + 112);
          *(void *)(v272 + 120) = *(void *)(v273 + 120);
          *(void *)(v272 + 128) = *(void *)(v273 + 128);
          *(void *)(v272 + 136) = *(void *)(v273 + 136);
          *(void *)(v272 + 144) = *(void *)(v273 + 144);
          *(void *)(v272 + 152) = *(void *)(v273 + 152);
          *(void *)(v272 + 160) = *(void *)(v273 + 160);
          *(void *)(v272 + 168) = *(void *)(v273 + 168);
          *(unsigned char *)(v272 + 176) = *(unsigned char *)(v273 + 176);
          *(void *)(v272 + 184) = *(void *)(v273 + 184);
          uint64_t v295 = *(void *)(v273 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v296 = v366;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v295)
          {
            *(void *)(v272 + 192) = v295;
            *(void *)(v272 + 200) = *(void *)(v273 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v272 + 192) = *(_OWORD *)(v273 + 192);
          }
          unint64_t v288 = v326;
          unint64_t v289 = v322;
          unint64_t v290 = ((unint64_t)a1 + v322) & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v272 + 208) = *(void *)(v273 + 208);
          *(void *)(v272 + 216) = *(void *)(v273 + 216);
          *(void *)(v272 + 224) = *(void *)(v273 + 224);
          *(void *)(v272 + 232) = *(void *)(v273 + 232);
          *(void *)(v272 + 240) = *(void *)(v273 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v276 = *(_OWORD *)v273;
          long long v277 = *(_OWORD *)(v273 + 16);
          long long v278 = *(_OWORD *)(v273 + 48);
          *(_OWORD *)(v272 + 32) = *(_OWORD *)(v273 + 32);
          *(_OWORD *)(v272 + 48) = v278;
          *(_OWORD *)unint64_t v272 = v276;
          *(_OWORD *)(v272 + 16) = v277;
          long long v279 = *(_OWORD *)(v273 + 64);
          long long v280 = *(_OWORD *)(v273 + 80);
          long long v281 = *(_OWORD *)(v273 + 112);
          *(_OWORD *)(v272 + 96) = *(_OWORD *)(v273 + 96);
          *(_OWORD *)(v272 + 112) = v281;
          *(_OWORD *)(v272 + 64) = v279;
          *(_OWORD *)(v272 + 80) = v280;
          long long v282 = *(_OWORD *)(v273 + 128);
          long long v283 = *(_OWORD *)(v273 + 144);
          long long v284 = *(_OWORD *)(v273 + 176);
          *(_OWORD *)(v272 + 160) = *(_OWORD *)(v273 + 160);
          *(_OWORD *)(v272 + 176) = v284;
          *(_OWORD *)(v272 + 128) = v282;
          *(_OWORD *)(v272 + 144) = v283;
          long long v285 = *(_OWORD *)(v273 + 192);
          long long v286 = *(_OWORD *)(v273 + 208);
          long long v287 = *(_OWORD *)(v273 + 224);
          *(void *)(v272 + 240) = *(void *)(v273 + 240);
          *(_OWORD *)(v272 + 208) = v286;
          *(_OWORD *)(v272 + 224) = v287;
          *(_OWORD *)(v272 + 192) = v285;
          unint64_t v288 = v326;
          unint64_t v289 = v322;
          unint64_t v290 = ((unint64_t)a1 + v322) & 0xFFFFFFFFFFFFFFF8;
        }
        v297 = (_OWORD *)((v272 + 255) & 0xFFFFFFFFFFFFFFF8);
        v298 = (long long *)((v273 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v299 = *v298;
        *(_OWORD *)((char *)v297 + 9) = *(long long *)((char *)v298 + 9);
        _OWORD *v297 = v299;
        unint64_t v300 = (v272 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v301 = (v273 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v302 = *(_OWORD *)v301;
        *(unsigned char *)(v300 + 16) = *(unsigned char *)(v301 + 16);
        *(_OWORD *)unint64_t v300 = v302;
        v303 = (void *)((v272 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v304 = (v273 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v305 = *(void *)v304;
        v304 += 15;
        void *v303 = v305;
        v306 = (void *)(((unint64_t)v303 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v307 = *(void *)(v304 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v308 = *(void *)((v304 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v307, v308);
        void *v306 = v307;
        v306[1] = v308;
        v309 = (void *)((v289 + v368) & 0xFFFFFFFFFFFFFFF8);
        v310 = (void *)((v289 + v290) & 0xFFFFFFFFFFFFFFF8);
        void *v310 = *v309;
        v311 = (void *)(((unint64_t)v310 + 15) & 0xFFFFFFFFFFFFFFF8);
        v312 = (void *)(((unint64_t)v309 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v311 = *v312;
        v311[1] = v312[1];
        *((unsigned char *)a1 + v288) = 1;
        break;
      case 2u:
        uint64_t v96 = a1;
        (*(void (**)(void *, void *, uint64_t))(v360 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v2) = *((unsigned char *)a2 + v2);
        unint64_t v97 = ((unint64_t)a1 + v2) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v98 = ((unint64_t)a2 + v2) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v97 + 8) = *(void *)(v98 + 8);
        *(void *)(v97 + 16) = *(void *)(v98 + 16);
        char v99 = 2;
        goto LABEL_29;
      case 3u:
        uint64_t v96 = a1;
        (*(void (**)(void *, void *, uint64_t))(v360 + 16))(a1, a2, AssociatedTypeWitness);
        id v100 = (void *)(((unint64_t)a1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        id v101 = (void *)(((unint64_t)a2 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        *id v100 = *v101;
        v100[1] = v101[1];
        char v99 = 3;
        goto LABEL_29;
      case 4u:
        uint64_t v96 = a1;
        (*(void (**)(void *, void *, uint64_t))(v360 + 16))(a1, a2, AssociatedTypeWitness);
        *((unsigned char *)a1 + v2) = *((unsigned char *)a2 + v2);
        unint64_t v102 = ((unint64_t)a1 + v2) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v103 = ((unint64_t)a2 + v2) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v102 + 8) = *(void *)(v103 + 8);
        *(void *)(v102 + 16) = *(void *)(v103 + 16);
        char v99 = 4;
        goto LABEL_29;
      case 5u:
        uint64_t v96 = a1;
        (*(void (**)(void *, void *, uint64_t))(v360 + 16))(a1, a2, AssociatedTypeWitness);
        id v104 = (void *)(((unint64_t)a1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        id v105 = (void *)(((unint64_t)a2 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        *id v104 = *v105;
        v104[1] = v105[1];
        char v99 = 5;
LABEL_29:
        *((unsigned char *)v96 + v20) = v99;
        break;
      default:
        size_t __n = v13;
        unint64_t v325 = v20;
        size_t v341 = v13 + 7;
        unint64_t v345 = ((((((((((v13
                       + 7
                       + ((v11
                         + 10
                         + ((((((v12 + ((v12 + v11 + ((v11 + 12) & ~v11)) & ~v11) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                     + 31) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 19) & 0xFFFFFFFFFFFFFFF8)
               + 25) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        id v24 = *(void (**)(void *, void *, uint64_t))(v360 + 16);
        uint64_t v343 = v9;
        uint64_t v347 = *(void *)(v9 - 8);
        uint64_t v337 = ~v11;
        unint64_t v339 = v11 + 10;
        unint64_t v333 = v11 + 12;
        uint64_t v335 = v12 + v11;
        uint64_t v329 = ~(v11 | 7);
        uint64_t v331 = (v11 | 7) + 16;
        unint64_t v327 = ~(unint64_t)v6;
        v24(a1, a2, AssociatedTypeWitness);
        unint64_t v25 = ((unint64_t)a1 + v353) & v23;
        unint64_t v26 = ((unint64_t)a2 + v353) & v23;
        v24((void *)v25, (void *)v26, AssociatedTypeWitness);
        unint64_t v27 = (v25 + v2 + v7) & ~v7;
        unint64_t v28 = (v26 + v2 + v7) & ~v7;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v358 + 16))(v27, v28, v355);
        id v29 = (void *)((v352 + v27) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v30 = (void *)((v352 + v28) & 0xFFFFFFFFFFFFFFF8);
        *id v29 = *v30;
        unint64_t v31 = ((unint64_t)v29 + v354) & v327;
        unint64_t v32 = ((unint64_t)v30 + v354) & v327;
        uint64_t v33 = *(void (**)(unint64_t, unint64_t, uint64_t))(v359 + 16);
        swift_bridgeObjectRetain();
        v33(v31, v32, v357);
        uint64_t v34 = (void *)((v356 + v32) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v35 = (void *)((v356 + v31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v35 = *v34;
        uint64_t v36 = (void *)(((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v37 = (void *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v36 = *v37;
        v36[1] = v37[1];
        uint64_t v38 = (void *)(v363 + v27);
        *uint64_t v38 = *(void *)(v363 + v28);
        v38[1] = *(void *)(v363 + v28 + 8);
        unint64_t v39 = (v331 + v363 + v27) & v329;
        unint64_t v40 = (v331 + v363 + v28) & v329;
        *(unsigned char *)unint64_t v39 = *(unsigned char *)v40;
        uint64_t v41 = v39 | 4;
        int v42 = *(_DWORD *)(v40 | 4);
        *(unsigned char *)(v41 + 4) = *(unsigned char *)((v40 | 4) + 4);
        *(_DWORD *)uint64_t v41 = v42;
        *(_WORD *)(v39 + 10) = *(_WORD *)(v40 + 0xA);
        unint64_t v364 = v39;
        unint64_t v43 = (v333 + v39) & v337;
        unint64_t v44 = (v333 + v40) & v337;
        int64_t v45 = *(void (**)(unint64_t, unint64_t, uint64_t))(v347 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v45(v43, v44, v343);
        unint64_t v46 = (v335 + v44) & v337;
        v45((v335 + v43) & v337, v46, v343);
        uint64_t v47 = (unsigned char *)(((v335 + v43) & v337) + v12);
        *uint64_t v47 = *(unsigned char *)(v46 + v12);
        v47[1] = *(unsigned char *)(v46 + v12 + 1);
        v47[2] = *(unsigned char *)(v46 + v12 + 2);
        v47[3] = *(unsigned char *)(v46 + v12 + 3);
        v47[4] = *(unsigned char *)(v46 + v12 + 4);
        unint64_t v48 = (unint64_t)(v47 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v49 = (v46 + v12 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v48 = *(void *)v49;
        *(void *)(v48 + 8) = *(void *)(v49 + 8);
        *(unsigned char *)(v48 + 16) = *(unsigned char *)(v49 + 16);
        *(unsigned char *)(v48 + 17) = *(unsigned char *)(v49 + 17);
        *(unsigned char *)(v48 + 18) = *(unsigned char *)(v49 + 18);
        *(unsigned char *)(v48 + 19) = *(unsigned char *)(v49 + 19);
        unint64_t v50 = (v48 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v51 = (v49 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v50 = *(void *)v51;
        *(unsigned char *)(v50 + 8) = *(unsigned char *)(v51 + 8);
        *(unsigned char *)(v50 + 9) = *(unsigned char *)(v51 + 9);
        *(unsigned char *)(v50 + 10) = *(unsigned char *)(v51 + 10);
        *(unsigned char *)(v50 + 11) = *(unsigned char *)(v51 + 11);
        *(unsigned char *)(v50 + 12) = *(unsigned char *)(v51 + 12);
        uint64_t v52 = (void *)((v49 + 47) & 0xFFFFFFFFFFFFFFF8);
        id v53 = (void *)((v48 + 47) & 0xFFFFFFFFFFFFFFF8);
        *id v53 = *v52;
        unint64_t v54 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v55 = ((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v54 = *(void *)v55;
        *(unsigned char *)(v54 + 8) = *(unsigned char *)(v55 + 8);
        *(unsigned char *)(v54 + 9) = *(unsigned char *)(v55 + 9);
        uint64_t v56 = (void *)((v339 + v54) & v337);
        uint64_t v57 = (const void *)((v339 + v55) & v337);
        unint64_t v58 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v347 + 48);
        swift_bridgeObjectRetain();
        if (v58(v57, 1, v343))
        {
          memcpy(v56, v57, __n);
        }
        else
        {
          v45((unint64_t)v56, (unint64_t)v57, v343);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v347 + 56))(v56, 0, 1, v343);
        }
        id v107 = (void *)(((unint64_t)v56 + v341) & 0xFFFFFFFFFFFFFFF8);
        id v108 = (void *)(((unint64_t)v57 + v341) & 0xFFFFFFFFFFFFFFF8);
        *id v107 = *v108;
        unint64_t v109 = ((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v110 = ((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v111 = *(void *)v110;
        *(unsigned char *)(v109 + 8) = *(unsigned char *)(v110 + 8);
        *(void *)unint64_t v109 = v111;
        id v112 = (void *)(((unint64_t)v107 + 31) & 0xFFFFFFFFFFFFFFF8);
        id v113 = (void *)(((unint64_t)v108 + 31) & 0xFFFFFFFFFFFFFFF8);
        *id v112 = *v113;
        unint64_t v114 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8;
        id v115 = (uint64_t *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v116 = v115[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v116 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v114 = *(_OWORD *)v115;
        }
        else
        {
          uint64_t v128 = *v115;
          sub_24D3F9C18(*v115, v116);
          *(void *)unint64_t v114 = v128;
          *(void *)(v114 + 8) = v116;
        }
        unint64_t v129 = (v114 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v130 = ((unint64_t)v115 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v131 = *(void *)v130;
        *(unsigned char *)(v129 + 8) = *(unsigned char *)(v130 + 8);
        *(void *)unint64_t v129 = v131;
        *(unsigned char *)(v129 + 9) = *(unsigned char *)(v130 + 9);
        unint64_t v132 = (v129 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v133 = (v130 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v134 = *(_DWORD *)v133;
        *(unsigned char *)(v132 + 4) = *(unsigned char *)(v133 + 4);
        *(_DWORD *)unint64_t v132 = v134;
        v135 = (void *)((v129 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v136 = (void *)((v130 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v135 = *v136;
        v135[1] = v136[1];
        unint64_t v137 = v345 + v364;
        unint64_t v138 = v345 + v40;
        unint64_t v139 = *(void *)(v138 + 16);
        if (v139 >= 0xFFFFFFFF) {
          LODWORD(v139) = -1;
        }
        int v140 = v139 - 1;
        swift_bridgeObjectRetain();
        uint64_t v141 = a2;
        if (v140 < 0)
        {
          *(void *)unint64_t v137 = *(void *)v138;
          *(unsigned char *)(v137 + 8) = *(unsigned char *)(v138 + 8);
          *(unsigned char *)(v137 + 9) = *(unsigned char *)(v138 + 9);
          char v181 = *(void **)(v138 + 16);
          id v182 = v181;
          *(void *)(v137 + 16) = v181;
          v183 = *(void **)(v138 + 24);
          id v184 = v183;
          *(void *)(v137 + 24) = v183;
          *(unsigned char *)(v137 + 32) = *(unsigned char *)(v138 + 32);
          *(unsigned char *)(v137 + 33) = *(unsigned char *)(v138 + 33);
          *(unsigned char *)(v137 + 34) = *(unsigned char *)(v138 + 34);
          *(void *)(v137 + 40) = *(void *)(v138 + 40);
          *(void *)(v137 + 48) = *(void *)(v138 + 48);
          *(void *)(v137 + 56) = *(void *)(v138 + 56);
          *(void *)(v137 + 64) = *(void *)(v138 + 64);
          *(unsigned char *)(v137 + 72) = *(unsigned char *)(v138 + 72);
          *(void *)(v137 + 80) = *(void *)(v138 + 80);
          *(void *)(v137 + 88) = *(void *)(v138 + 88);
          v365 = *(void **)(v138 + 96);
          *(void *)(v137 + 96) = v365;
          *(unsigned char *)(v137 + 104) = *(unsigned char *)(v138 + 104);
          *(unsigned char *)(v137 + 105) = *(unsigned char *)(v138 + 105);
          *(void *)(v137 + 112) = *(void *)(v138 + 112);
          *(void *)(v137 + 120) = *(void *)(v138 + 120);
          *(void *)(v137 + 128) = *(void *)(v138 + 128);
          *(void *)(v137 + 136) = *(void *)(v138 + 136);
          *(void *)(v137 + 144) = *(void *)(v138 + 144);
          *(void *)(v137 + 152) = *(void *)(v138 + 152);
          *(void *)(v137 + 160) = *(void *)(v138 + 160);
          *(void *)(v137 + 168) = *(void *)(v138 + 168);
          *(unsigned char *)(v137 + 176) = *(unsigned char *)(v138 + 176);
          *(void *)(v137 + 184) = *(void *)(v138 + 184);
          uint64_t v185 = *(void *)(v138 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v186 = v365;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v185)
          {
            *(void *)(v137 + 192) = v185;
            *(void *)(v137 + 200) = *(void *)(v138 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v137 + 192) = *(_OWORD *)(v138 + 192);
          }
          unint64_t v154 = v325;
          uint64_t v141 = a2;
          *(void *)(v137 + 208) = *(void *)(v138 + 208);
          *(void *)(v137 + 216) = *(void *)(v138 + 216);
          *(void *)(v137 + 224) = *(void *)(v138 + 224);
          *(void *)(v137 + 232) = *(void *)(v138 + 232);
          *(void *)(v137 + 240) = *(void *)(v138 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v142 = *(_OWORD *)v138;
          long long v143 = *(_OWORD *)(v138 + 16);
          long long v144 = *(_OWORD *)(v138 + 48);
          *(_OWORD *)(v137 + 32) = *(_OWORD *)(v138 + 32);
          *(_OWORD *)(v137 + 48) = v144;
          *(_OWORD *)unint64_t v137 = v142;
          *(_OWORD *)(v137 + 16) = v143;
          long long v145 = *(_OWORD *)(v138 + 64);
          long long v146 = *(_OWORD *)(v138 + 80);
          long long v147 = *(_OWORD *)(v138 + 112);
          *(_OWORD *)(v137 + 96) = *(_OWORD *)(v138 + 96);
          *(_OWORD *)(v137 + 112) = v147;
          *(_OWORD *)(v137 + 64) = v145;
          *(_OWORD *)(v137 + 80) = v146;
          long long v148 = *(_OWORD *)(v138 + 128);
          long long v149 = *(_OWORD *)(v138 + 144);
          long long v150 = *(_OWORD *)(v138 + 176);
          *(_OWORD *)(v137 + 160) = *(_OWORD *)(v138 + 160);
          *(_OWORD *)(v137 + 176) = v150;
          *(_OWORD *)(v137 + 128) = v148;
          *(_OWORD *)(v137 + 144) = v149;
          long long v151 = *(_OWORD *)(v138 + 192);
          long long v152 = *(_OWORD *)(v138 + 208);
          long long v153 = *(_OWORD *)(v138 + 224);
          *(void *)(v137 + 240) = *(void *)(v138 + 240);
          *(_OWORD *)(v137 + 208) = v152;
          *(_OWORD *)(v137 + 224) = v153;
          *(_OWORD *)(v137 + 192) = v151;
          unint64_t v154 = v325;
        }
        v194 = (_OWORD *)((v137 + 255) & 0xFFFFFFFFFFFFFFF8);
        v195 = (long long *)((v138 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v196 = *v195;
        *(_OWORD *)((char *)v194 + 9) = *(long long *)((char *)v195 + 9);
        _OWORD *v194 = v196;
        unint64_t v197 = (v137 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v198 = (v138 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v199 = *(_OWORD *)v198;
        *(unsigned char *)(v197 + 16) = *(unsigned char *)(v198 + 16);
        *(_OWORD *)unint64_t v197 = v199;
        v200 = (void *)((v137 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v201 = (v138 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v202 = *(void *)v201;
        v201 += 15;
        void *v200 = v202;
        v203 = (void *)(((unint64_t)v200 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v204 = *(void *)(v201 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v205 = *(void *)((v201 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v204, v205);
        void *v203 = v204;
        v203[1] = v205;
        v206 = (void *)(((unint64_t)a1 + v349 + 7) & 0xFFFFFFFFFFFFFFF8);
        v207 = (void *)(((unint64_t)v141 + v349 + 7) & 0xFFFFFFFFFFFFFFF8);
        void *v206 = *v207;
        v206[1] = v207[1];
        *((unsigned char *)a1 + v154) = 0;
        break;
    }
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24D9B4B90(_DWORD *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v109 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v109 + 80);
  uint64_t v105 = v2 + v3;
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v106 = v4;
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v107 = *(void *)(v7 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v107 + 80);
  uint64_t v9 = v6 | v8 | 7;
  uint64_t v101 = v2 + v9;
  uint64_t v10 = a1;
  uint64_t v103 = *(void *)(v5 + 64) + 7;
  uint64_t v104 = v8 + 8;
  unint64_t v11 = ((((*(void *)(v107 + 64) + 7 + ((v8 + 8 + (v103 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v102 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v102 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = (v13 | 7) + 16;
  uint64_t v15 = v13 + 12;
  uint64_t v16 = *(void *)(v12 + 64);
  uint64_t v17 = v16 + v13;
  uint64_t v18 = v16 + 12;
  uint64_t v19 = v13 + 10;
  unint64_t v20 = (v13
       + 10
       + ((((((v16 + 12 + ((v16 + v13 + ((v13 + 12) & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  if (!*(_DWORD *)(v12 + 84)) {
    ++v16;
  }
  uint64_t v21 = v16 + 7;
  unint64_t v22 = ((((((((((v16 + 7 + v20) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v23 = (((((v14 + v11 + ((v2 + v9 + ((v2 + v3) & ~v3)) & ~v9)) & ~(v13 | 7)) + v22 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = v23 + 23;
  unint64_t v25 = ((v23 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v26 = v23 + 16;
  uint64_t v27 = v9 | v3 | v13;
  unint64_t v28 = v26 + v27;
  unint64_t v29 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v30 = ((((v24 + ((v26 + v27) & ~v27)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v29 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v29 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v29 > v25) {
    unint64_t v25 = v29;
  }
  if (v25 > v30) {
    unint64_t v30 = v25;
  }
  unsigned int v31 = *((unsigned __int8 *)v10 + v30);
  if (v31 >= 6 && v30 != 0) {
    unsigned int v31 = *v10 + 6;
  }
  uint64_t v33 = ~(v13 | 7);
  uint64_t v34 = ~v13;
  uint64_t v35 = ~v27;
  switch(v31)
  {
    case 1u:
      uint64_t v75 = v35;
      unint64_t v79 = v28;
      unint64_t v84 = v22;
      uint64_t v100 = v21;
      uint64_t v76 = *(void *)(v102 - 8);
      unint64_t v48 = *(void (**)(_DWORD *, uint64_t))(v109 + 8);
      uint64_t v98 = v19;
      uint64_t v94 = v17;
      uint64_t v96 = v18;
      uint64_t v90 = v14;
      uint64_t v92 = v15;
      uint64_t v86 = v33;
      uint64_t v88 = v34;
      uint64_t v49 = ~v8;
      v48(v10, AssociatedTypeWitness);
      uint64_t v77 = ~v3;
      unint64_t v50 = ((unint64_t)v10 + v105) & ~v3;
      v48((_DWORD *)v50, AssociatedTypeWitness);
      uint64_t v78 = ~v9;
      unint64_t v51 = (v50 + v2 + v9) & ~v9;
      uint64_t v74 = *(void (**)(unint64_t, uint64_t))(v5 + 8);
      v74(v51, v106);
      swift_bridgeObjectRelease();
      uint64_t v82 = v49;
      uint64_t v80 = v7;
      uint64_t v73 = *(void (**)(unint64_t, uint64_t))(v107 + 8);
      v73((v104 + ((v103 + v51) & 0xFFFFFFFFFFFFFFF8)) & v49, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v52 = (v90 + v11 + v51) & v86;
      id v53 = *(void (**)(unint64_t, uint64_t))(v76 + 8);
      v53((v92 + v52) & v88, v102);
      unint64_t v54 = (v94 + ((v92 + v52) & v88)) & v88;
      v53(v54, v102);
      swift_bridgeObjectRelease();
      unint64_t v55 = (v98 + ((((((v96 + v54) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v88;
      uint64_t v72 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v76 + 48);
      if (!v72(v55, 1, v102)) {
        v53(v55, v102);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v56 = (uint64_t *)((((((v100 + v55) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v57 = v56[1];
      if ((v57 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v56, v57);
      }
      swift_bridgeObjectRelease();
      unint64_t v58 = v84 + v52;
      uint64_t v59 = *(void **)(v58 + 16);
      LODWORD(v60) = -1;
      if ((unint64_t)v59 < 0xFFFFFFFF) {
        uint64_t v60 = *(void *)(v58 + 16);
      }
      if ((int)v60 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v58 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_24D466534(*(void *)((((v58 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v58 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      unint64_t v61 = ((unint64_t)v10 + v79) & v75;
      v48((_DWORD *)v61, AssociatedTypeWitness);
      v48((_DWORD *)((v105 + v61) & v77), AssociatedTypeWitness);
      unint64_t v62 = (v101 + ((v105 + v61) & v77)) & v78;
      v74(v62, v106);
      swift_bridgeObjectRelease();
      v73((v104 + ((v103 + v62) & 0xFFFFFFFFFFFFFFF8)) & v82, v80);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v63 = (v90 + v62 + v11) & v86;
      v53((v92 + v63) & v88, v102);
      unint64_t v64 = (v94 + ((v92 + v63) & v88)) & v88;
      v53(v64, v102);
      swift_bridgeObjectRelease();
      unint64_t v65 = (v98 + ((((((v96 + v64) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v88;
      if (!v72(v65, 1, v102)) {
        v53(v65, v102);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v66 = (uint64_t *)((((((v100 + v65) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v67 = v66[1];
      if ((v67 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v66, v67);
      }
      swift_bridgeObjectRelease();
      unint64_t v68 = v63 + v84;
      uint64_t v69 = *(void **)(v68 + 16);
      LODWORD(v70) = -1;
      if ((unint64_t)v69 < 0xFFFFFFFF) {
        uint64_t v70 = *(void *)(v68 + 16);
      }
      if ((int)v70 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v68 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_24D466534(*(void *)((((v68 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v68 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      break;
    case 2u:
    case 4u:
      (*(void (**)(_DWORD *, uint64_t))(v109 + 8))(v10, AssociatedTypeWitness);
      break;
    case 3u:
    case 5u:
      (*(void (**)(_DWORD *, uint64_t))(v109 + 8))(v10, AssociatedTypeWitness);
      break;
    default:
      uint64_t v99 = v21;
      unint64_t v83 = v22;
      uint64_t v36 = *(void (**)(_DWORD *, uint64_t))(v109 + 8);
      uint64_t v97 = v19;
      uint64_t v93 = v17;
      uint64_t v95 = v18;
      uint64_t v89 = v14;
      uint64_t v91 = v15;
      uint64_t v85 = v33;
      uint64_t v87 = v34;
      uint64_t v81 = ~v8;
      v36(v10, AssociatedTypeWitness);
      unint64_t v37 = ((unint64_t)v10 + v105) & ~v3;
      v36((_DWORD *)v37, AssociatedTypeWitness);
      unint64_t v38 = (v37 + v2 + v9) & ~v9;
      (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v38, v106);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v107 + 8))((v104 + ((v103 + v38) & 0xFFFFFFFFFFFFFFF8)) & v81, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v39 = (v89 + v11 + v38) & v85;
      unint64_t v40 = *(void (**)(unint64_t, uint64_t))(v12 + 8);
      v40((v91 + v39) & v87, v102);
      unint64_t v41 = (v93 + ((v91 + v39) & v87)) & v87;
      v40(v41, v102);
      swift_bridgeObjectRelease();
      unint64_t v42 = (v97 + ((((((v95 + v41) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v87;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v12 + 48))(v42, 1, v102)) {
        v40(v42, v102);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v43 = (uint64_t *)((((((v99 + v42) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v44 = v43[1];
      if ((v44 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v43, v44);
      }
      swift_bridgeObjectRelease();
      unint64_t v45 = v83 + v39;
      unint64_t v46 = *(void **)(v45 + 16);
      LODWORD(v47) = -1;
      if ((unint64_t)v46 < 0xFFFFFFFF) {
        uint64_t v47 = *(void *)(v45 + 16);
      }
      if ((int)v47 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v45 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_24D466534(*(void *)((((v45 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v45 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      break;
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D9B582C(uint64_t a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v362 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v362 + 80);
  uint64_t v354 = v3 + v4;
  uint64_t v356 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v356 - 8);
  uint64_t v360 = v5;
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v358 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v358 - 8);
  uint64_t v8 = v5;
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = v6 | v9 | 7;
  uint64_t v352 = v3 + v10;
  unint64_t v11 = a2;
  uint64_t v353 = *(void *)(v8 + 64) + 7;
  uint64_t v355 = v9 + 8;
  uint64_t v357 = *(void *)(v7 + 64) + 7;
  unint64_t v359 = ((((v357 + ((v9 + 8 + (v353 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v12 = sub_24DCC8CE8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  uint64_t v16 = v15 + v14;
  if (*(_DWORD *)(v13 + 84)) {
    size_t v17 = *(void *)(v13 + 64);
  }
  else {
    size_t v17 = v15 + 1;
  }
  unint64_t v18 = ((((((v14 | 7) + 16 + v359 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v14 | 7))
         + ((((((((((v17
                   + 7
                   + ((v14
                     + 10
                     + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 311) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 23;
  unint64_t v20 = ((v18 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v21 = v18 + 16;
  uint64_t v22 = v10 | v4 | v14;
  unint64_t v23 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v23 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v23 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v23 > v20) {
    unint64_t v20 = v23;
  }
  if (v20 <= ((((v19 + ((v21 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v24 = ((((v19 + ((v21 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v24 = v20;
  }
  unsigned int v25 = *((unsigned __int8 *)v11 + v24);
  if (v25 >= 6 && v24 != 0) {
    unsigned int v25 = *v11 + 6;
  }
  uint64_t v27 = ~v9;
  switch(v25)
  {
    case 1u:
      uint64_t v317 = ~v22;
      unint64_t v319 = v21 + v22;
      size_t __na = v17;
      size_t v348 = v17 + 7;
      unint64_t v322 = v19;
      unint64_t v350 = ((((((((((v17
                     + 7
                     + ((v14
                       + 10
                       + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v330 = v24;
      uint64_t v323 = v12;
      unint64_t v66 = *(void (**)(unint64_t, unint64_t, uint64_t))(v362 + 16);
      uint64_t v332 = v13;
      uint64_t v346 = v14 + 10;
      uint64_t v340 = ~v14;
      uint64_t v342 = (v14 | 7) + 16;
      uint64_t v344 = v14 + 12;
      uint64_t v336 = ~(v14 | 7);
      uint64_t v338 = *(void *)(v13 + 64);
      uint64_t v334 = ~v9;
      uint64_t v67 = ~v4;
      v66(a1, (unint64_t)v11, AssociatedTypeWitness);
      uint64_t v68 = (v354 + a1) & v67;
      unint64_t v327 = v11;
      unint64_t v69 = ((unint64_t)v11 + v354) & v67;
      v318 = v66;
      v66(v68, v69, AssociatedTypeWitness);
      uint64_t v70 = (v68 + v3 + v10) & ~v10;
      uint64_t v320 = ~v10;
      unint64_t v71 = (v69 + v3 + v10) & ~v10;
      v315 = *(void (**)(uint64_t, unint64_t, uint64_t))(v360 + 16);
      v315(v70, v71, v356);
      uint64_t v72 = (void *)((v353 + v70) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v73 = (void *)((v353 + v71) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v72 = *v73;
      unint64_t v74 = ((unint64_t)v72 + v355) & v334;
      unint64_t v75 = ((unint64_t)v73 + v355) & v334;
      uint64_t v76 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      v316 = v76;
      v76(v74, v75, v358);
      uint64_t v77 = (void *)((v357 + v75) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v78 = (void *)((v357 + v74) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v78 = *v77;
      unint64_t v79 = (void *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v80 = (void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v79 = *v80;
      v79[1] = v80[1];
      uint64_t v81 = (void *)(v359 + v70);
      *uint64_t v81 = *(void *)(v359 + v71);
      v81[1] = *(void *)(v359 + v71 + 8);
      unint64_t v82 = (v342 + v359 + v70) & v336;
      unint64_t v83 = (v342 + v359 + v71) & v336;
      *(unsigned char *)unint64_t v82 = *(unsigned char *)v83;
      uint64_t v84 = v82 | 4;
      int v85 = *(_DWORD *)(v83 | 4);
      *(unsigned char *)(v84 + 4) = *(unsigned char *)((v83 | 4) + 4);
      *(_DWORD *)uint64_t v84 = v85;
      *(_WORD *)(v82 + 10) = *(_WORD *)(v83 + 0xA);
      unint64_t v86 = (v344 + v82) & v340;
      unint64_t v313 = v83;
      unint64_t v87 = (v344 + v83) & v340;
      uint64_t v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v332 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v88(v86, v87, v323);
      unint64_t v89 = (v16 + v87) & v340;
      v88((v16 + v86) & v340, v89, v323);
      uint64_t v90 = (unsigned char *)(((v16 + v86) & v340) + v338);
      *uint64_t v90 = *(unsigned char *)(v89 + v338);
      v90[1] = *(unsigned char *)(v89 + v338 + 1);
      v90[2] = *(unsigned char *)(v89 + v338 + 2);
      v90[3] = *(unsigned char *)(v89 + v338 + 3);
      v90[4] = *(unsigned char *)(v89 + v338 + 4);
      unint64_t v91 = (unint64_t)(v90 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v92 = (v89 + v338 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v91 = *(void *)v92;
      *(void *)(v91 + 8) = *(void *)(v92 + 8);
      *(unsigned char *)(v91 + 16) = *(unsigned char *)(v92 + 16);
      *(unsigned char *)(v91 + 17) = *(unsigned char *)(v92 + 17);
      *(unsigned char *)(v91 + 18) = *(unsigned char *)(v92 + 18);
      *(unsigned char *)(v91 + 19) = *(unsigned char *)(v92 + 19);
      unint64_t v93 = (v91 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v94 = (v92 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v93 = *(void *)v94;
      *(unsigned char *)(v93 + 8) = *(unsigned char *)(v94 + 8);
      *(unsigned char *)(v93 + 9) = *(unsigned char *)(v94 + 9);
      *(unsigned char *)(v93 + 10) = *(unsigned char *)(v94 + 10);
      *(unsigned char *)(v93 + 11) = *(unsigned char *)(v94 + 11);
      *(unsigned char *)(v93 + 12) = *(unsigned char *)(v94 + 12);
      uint64_t v95 = (void *)((v92 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v96 = (void *)((v91 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v96 = *v95;
      unint64_t v97 = ((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v98 = ((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v97 = *(void *)v98;
      *(unsigned char *)(v97 + 8) = *(unsigned char *)(v98 + 8);
      *(unsigned char *)(v97 + 9) = *(unsigned char *)(v98 + 9);
      uint64_t v99 = (void *)((v346 + v97) & v340);
      uint64_t v100 = (const void *)((v346 + v98) & v340);
      uint64_t v101 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v332 + 48);
      swift_bridgeObjectRetain();
      unint64_t v314 = v101;
      uint64_t v321 = v88;
      if (v101(v100, 1, v323))
      {
        memcpy(v99, v100, __na);
      }
      else
      {
        v88((unint64_t)v99, (unint64_t)v100, v323);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v332 + 56))(v99, 0, 1, v323);
      }
      id v122 = (void *)(((unint64_t)v99 + v348) & 0xFFFFFFFFFFFFFFF8);
      id v123 = (void *)(((unint64_t)v100 + v348) & 0xFFFFFFFFFFFFFFF8);
      *id v122 = *v123;
      unint64_t v124 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v125 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v126 = *(void *)v125;
      *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
      *(void *)unint64_t v124 = v126;
      id v127 = (void *)(((unint64_t)v122 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v128 = (void *)(((unint64_t)v123 + 31) & 0xFFFFFFFFFFFFFFF8);
      *id v127 = *v128;
      unint64_t v129 = ((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v130 = (uint64_t *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v131 = v130[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v131 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v129 = *(_OWORD *)v130;
      }
      else
      {
        uint64_t v158 = *v130;
        sub_24D3F9C18(*v130, v131);
        *(void *)unint64_t v129 = v158;
        *(void *)(v129 + 8) = v131;
      }
      unint64_t v159 = (v129 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v161 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(void *)unint64_t v159 = v161;
      *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
      unint64_t v162 = (v159 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v163 = (v160 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v164 = *(_DWORD *)v163;
      *(unsigned char *)(v162 + 4) = *(unsigned char *)(v163 + 4);
      *(_DWORD *)unint64_t v162 = v164;
      unint64_t v165 = (void *)((v159 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v166 = (void *)((v160 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v165 = *v166;
      v165[1] = v166[1];
      unint64_t v167 = v350 + v82;
      int v168 = (long long *)(v350 + v313);
      unint64_t v169 = *(void *)(v350 + v313 + 16);
      if (v169 >= 0xFFFFFFFF) {
        LODWORD(v169) = -1;
      }
      int v170 = v169 - 1;
      swift_bridgeObjectRetain();
      if (v170 < 0)
      {
        *(void *)unint64_t v167 = *(void *)v168;
        *(unsigned char *)(v167 + 8) = *((unsigned char *)v168 + 8);
        *(unsigned char *)(v167 + 9) = *((unsigned char *)v168 + 9);
        id v190 = (void *)*((void *)v168 + 2);
        id v191 = v190;
        *(void *)(v167 + 16) = v190;
        uint64_t v192 = (void *)*((void *)v168 + 3);
        id v193 = v192;
        *(void *)(v167 + 24) = v192;
        *(unsigned char *)(v167 + 32) = *((unsigned char *)v168 + 32);
        *(unsigned char *)(v167 + 33) = *((unsigned char *)v168 + 33);
        *(unsigned char *)(v167 + 34) = *((unsigned char *)v168 + 34);
        *(void *)(v167 + 40) = *((void *)v168 + 5);
        *(void *)(v167 + 48) = *((void *)v168 + 6);
        *(void *)(v167 + 56) = *((void *)v168 + 7);
        *(void *)(v167 + 64) = *((void *)v168 + 8);
        *(unsigned char *)(v167 + 72) = *((unsigned char *)v168 + 72);
        *(void *)(v167 + 80) = *((void *)v168 + 10);
        *(void *)(v167 + 88) = *((void *)v168 + 11);
        v194 = (void *)*((void *)v168 + 12);
        *(void *)(v167 + 96) = v194;
        *(unsigned char *)(v167 + 104) = *((unsigned char *)v168 + 104);
        *(unsigned char *)(v167 + 105) = *((unsigned char *)v168 + 105);
        *(void *)(v167 + 112) = *((void *)v168 + 14);
        *(void *)(v167 + 120) = *((void *)v168 + 15);
        *(void *)(v167 + 128) = *((void *)v168 + 16);
        *(void *)(v167 + 136) = *((void *)v168 + 17);
        *(void *)(v167 + 144) = *((void *)v168 + 18);
        *(void *)(v167 + 152) = *((void *)v168 + 19);
        *(void *)(v167 + 160) = *((void *)v168 + 20);
        *(void *)(v167 + 168) = *((void *)v168 + 21);
        *(unsigned char *)(v167 + 176) = *((unsigned char *)v168 + 176);
        *(void *)(v167 + 184) = *((void *)v168 + 23);
        uint64_t v195 = *((void *)v168 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v196 = v194;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v195)
        {
          *(void *)(v167 + 192) = v195;
          *(void *)(v167 + 200) = *((void *)v168 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v167 + 192) = v168[12];
        }
        v183 = v321;
        *(void *)(v167 + 208) = *((void *)v168 + 26);
        *(void *)(v167 + 216) = *((void *)v168 + 27);
        *(void *)(v167 + 224) = *((void *)v168 + 28);
        *(void *)(v167 + 232) = *((void *)v168 + 29);
        *(void *)(v167 + 240) = *((void *)v168 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v171 = *v168;
        long long v172 = v168[1];
        long long v173 = v168[3];
        *(_OWORD *)(v167 + 32) = v168[2];
        *(_OWORD *)(v167 + 48) = v173;
        *(_OWORD *)unint64_t v167 = v171;
        *(_OWORD *)(v167 + 16) = v172;
        long long v174 = v168[4];
        long long v175 = v168[5];
        long long v176 = v168[7];
        *(_OWORD *)(v167 + 96) = v168[6];
        *(_OWORD *)(v167 + 112) = v176;
        *(_OWORD *)(v167 + 64) = v174;
        *(_OWORD *)(v167 + 80) = v175;
        long long v177 = v168[8];
        long long v178 = v168[9];
        long long v179 = v168[11];
        *(_OWORD *)(v167 + 160) = v168[10];
        *(_OWORD *)(v167 + 176) = v179;
        *(_OWORD *)(v167 + 128) = v177;
        *(_OWORD *)(v167 + 144) = v178;
        long long v180 = v168[12];
        long long v181 = v168[13];
        long long v182 = v168[14];
        *(void *)(v167 + 240) = *((void *)v168 + 30);
        *(_OWORD *)(v167 + 208) = v181;
        *(_OWORD *)(v167 + 224) = v182;
        *(_OWORD *)(v167 + 192) = v180;
        v183 = v88;
      }
      unint64_t v211 = (_OWORD *)((v167 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v212 = (long long *)(((unint64_t)v168 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v213 = *v212;
      *(_OWORD *)((char *)v211 + 9) = *(long long *)((char *)v212 + 9);
      *unint64_t v211 = v213;
      unint64_t v214 = (v167 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v215 = ((unint64_t)v168 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v216 = *(_OWORD *)v215;
      *(unsigned char *)(v214 + 16) = *(unsigned char *)(v215 + 16);
      *(_OWORD *)unint64_t v214 = v216;
      v217 = (void *)((v167 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v218 = ((unint64_t)v168 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v219 = *(void *)v218;
      v218 += 15;
      void *v217 = v219;
      unint64_t v220 = (void *)(((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v221 = *(void *)(v218 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v222 = *(void *)((v218 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v221, v222);
      *unint64_t v220 = v221;
      v220[1] = v222;
      v318((v319 + a1) & v317, ((unint64_t)v327 + v319) & v317, AssociatedTypeWitness);
      uint64_t v351 = (v319 + a1) & v317;
      uint64_t v223 = (v354 + v351) & v67;
      unint64_t v328 = ((unint64_t)v327 + v319) & v317;
      unint64_t v224 = (v354 + v328) & v67;
      v318(v223, v224, AssociatedTypeWitness);
      uint64_t v225 = (v352 + v223) & v320;
      uint64_t v226 = (v352 + v224) & v320;
      v315(v225, v226, v356);
      v227 = (void *)((v353 + v225) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v228 = (void *)((v353 + v226) & 0xFFFFFFFFFFFFFFF8);
      void *v227 = *v228;
      unint64_t v229 = ((unint64_t)v227 + v355) & v334;
      unint64_t v230 = ((unint64_t)v228 + v355) & v334;
      swift_bridgeObjectRetain();
      v316(v229, v230, v358);
      v231 = (void *)((v357 + v229) & 0xFFFFFFFFFFFFFFF8);
      v232 = (void *)((v357 + v230) & 0xFFFFFFFFFFFFFFF8);
      void *v231 = *v232;
      v233 = (void *)(((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8);
      v234 = (void *)(((unint64_t)v232 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v233 = *v234;
      v233[1] = v234[1];
      unint64_t v235 = (void *)(v225 + v359);
      *unint64_t v235 = *(void *)(v226 + v359);
      v235[1] = *(void *)(v226 + v359 + 8);
      unint64_t v236 = (v342 + v225 + v359) & v336;
      unint64_t v237 = (v342 + v226 + v359) & v336;
      *(unsigned char *)unint64_t v236 = *(unsigned char *)v237;
      uint64_t v238 = v236 | 4;
      int v239 = *(_DWORD *)(v237 | 4);
      *(unsigned char *)(v238 + 4) = *(unsigned char *)((v237 | 4) + 4);
      *(_DWORD *)uint64_t v238 = v239;
      *(_WORD *)(v236 + 10) = *(_WORD *)(v237 + 0xA);
      unint64_t v240 = (v344 + v236) & v340;
      unint64_t v241 = (v344 + v237) & v340;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v183(v240, v241, v323);
      unint64_t v242 = (v16 + v240) & v340;
      unint64_t v243 = (v16 + v241) & v340;
      v183(v242, v243, v323);
      unint64_t v244 = (unsigned char *)(v242 + v338);
      *unint64_t v244 = *(unsigned char *)(v243 + v338);
      v244[1] = *(unsigned char *)(v243 + v338 + 1);
      v244[2] = *(unsigned char *)(v243 + v338 + 2);
      v244[3] = *(unsigned char *)(v243 + v338 + 3);
      v244[4] = *(unsigned char *)(v243 + v338 + 4);
      unint64_t v245 = (v242 + v338 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v246 = (v243 + v338 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v245 = *(void *)v246;
      *(void *)(v245 + 8) = *(void *)(v246 + 8);
      *(unsigned char *)(v245 + 16) = *(unsigned char *)(v246 + 16);
      *(unsigned char *)(v245 + 17) = *(unsigned char *)(v246 + 17);
      *(unsigned char *)(v245 + 18) = *(unsigned char *)(v246 + 18);
      *(unsigned char *)(v245 + 19) = *(unsigned char *)(v246 + 19);
      unint64_t v247 = (v245 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v248 = (v246 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v247 = *(void *)v248;
      *(unsigned char *)(v247 + 8) = *(unsigned char *)(v248 + 8);
      *(unsigned char *)(v247 + 9) = *(unsigned char *)(v248 + 9);
      *(unsigned char *)(v247 + 10) = *(unsigned char *)(v248 + 10);
      *(unsigned char *)(v247 + 11) = *(unsigned char *)(v248 + 11);
      *(unsigned char *)(v247 + 12) = *(unsigned char *)(v248 + 12);
      unint64_t v249 = (void *)((v245 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v250 = (void *)((v246 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v249 = *v250;
      unint64_t v251 = ((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v252 = ((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v251 = *(void *)v252;
      *(unsigned char *)(v251 + 8) = *(unsigned char *)(v252 + 8);
      *(unsigned char *)(v251 + 9) = *(unsigned char *)(v252 + 9);
      v253 = (void *)((v346 + v251) & v340);
      v254 = (const void *)((v346 + v252) & v340);
      swift_bridgeObjectRetain();
      if (v314(v254, 1, v323))
      {
        memcpy(v253, v254, __na);
      }
      else
      {
        v183((unint64_t)v253, (unint64_t)v254, v323);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v332 + 56))(v253, 0, 1, v323);
      }
      unint64_t v255 = (void *)(((unint64_t)v253 + v348) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v256 = (void *)(((unint64_t)v254 + v348) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v255 = *v256;
      unint64_t v257 = ((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v258 = ((unint64_t)v256 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v259 = *(void *)v258;
      *(unsigned char *)(v257 + 8) = *(unsigned char *)(v258 + 8);
      *(void *)unint64_t v257 = v259;
      unint64_t v260 = (void *)(((unint64_t)v255 + 31) & 0xFFFFFFFFFFFFFFF8);
      v261 = (void *)(((unint64_t)v256 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v260 = *v261;
      unint64_t v262 = ((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v263 = (uint64_t *)(((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v264 = v263[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v264 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v262 = *(_OWORD *)v263;
      }
      else
      {
        uint64_t v265 = *v263;
        sub_24D3F9C18(*v263, v264);
        *(void *)unint64_t v262 = v265;
        *(void *)(v262 + 8) = v264;
      }
      unint64_t v266 = (v262 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v267 = ((unint64_t)v263 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v268 = *(void *)v267;
      *(unsigned char *)(v266 + 8) = *(unsigned char *)(v267 + 8);
      *(void *)unint64_t v266 = v268;
      *(unsigned char *)(v266 + 9) = *(unsigned char *)(v267 + 9);
      unint64_t v269 = (v266 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v270 = (v267 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v271 = *(_DWORD *)v270;
      *(unsigned char *)(v269 + 4) = *(unsigned char *)(v270 + 4);
      *(_DWORD *)unint64_t v269 = v271;
      unint64_t v272 = (void *)((v266 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v273 = (void *)((v267 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v272 = *v273;
      v272[1] = v273[1];
      unint64_t v274 = v236 + v350;
      unint64_t v275 = v237 + v350;
      unint64_t v276 = *(void *)(v237 + v350 + 16);
      if (v276 >= 0xFFFFFFFF) {
        LODWORD(v276) = -1;
      }
      int v277 = v276 - 1;
      swift_bridgeObjectRetain();
      if (v277 < 0)
      {
        *(void *)unint64_t v274 = *(void *)v275;
        *(unsigned char *)(v274 + 8) = *(unsigned char *)(v275 + 8);
        *(unsigned char *)(v274 + 9) = *(unsigned char *)(v275 + 9);
        unint64_t v290 = *(void **)(v275 + 16);
        id v291 = v290;
        *(void *)(v274 + 16) = v290;
        id v292 = *(void **)(v275 + 24);
        id v293 = v292;
        *(void *)(v274 + 24) = v292;
        *(unsigned char *)(v274 + 32) = *(unsigned char *)(v275 + 32);
        *(unsigned char *)(v274 + 33) = *(unsigned char *)(v275 + 33);
        *(unsigned char *)(v274 + 34) = *(unsigned char *)(v275 + 34);
        *(void *)(v274 + 40) = *(void *)(v275 + 40);
        *(void *)(v274 + 48) = *(void *)(v275 + 48);
        *(void *)(v274 + 56) = *(void *)(v275 + 56);
        *(void *)(v274 + 64) = *(void *)(v275 + 64);
        *(unsigned char *)(v274 + 72) = *(unsigned char *)(v275 + 72);
        *(void *)(v274 + 80) = *(void *)(v275 + 80);
        *(void *)(v274 + 88) = *(void *)(v275 + 88);
        v365 = *(void **)(v275 + 96);
        *(void *)(v274 + 96) = v365;
        *(unsigned char *)(v274 + 104) = *(unsigned char *)(v275 + 104);
        *(unsigned char *)(v274 + 105) = *(unsigned char *)(v275 + 105);
        *(void *)(v274 + 112) = *(void *)(v275 + 112);
        *(void *)(v274 + 120) = *(void *)(v275 + 120);
        *(void *)(v274 + 128) = *(void *)(v275 + 128);
        *(void *)(v274 + 136) = *(void *)(v275 + 136);
        *(void *)(v274 + 144) = *(void *)(v275 + 144);
        *(void *)(v274 + 152) = *(void *)(v275 + 152);
        *(void *)(v274 + 160) = *(void *)(v275 + 160);
        *(void *)(v274 + 168) = *(void *)(v275 + 168);
        *(unsigned char *)(v274 + 176) = *(unsigned char *)(v275 + 176);
        *(void *)(v274 + 184) = *(void *)(v275 + 184);
        uint64_t v294 = *(void *)(v275 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v295 = v365;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v294)
        {
          *(void *)(v274 + 192) = v294;
          *(void *)(v274 + 200) = *(void *)(v275 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v274 + 192) = *(_OWORD *)(v275 + 192);
        }
        unint64_t v24 = v330;
        *(void *)(v274 + 208) = *(void *)(v275 + 208);
        *(void *)(v274 + 216) = *(void *)(v275 + 216);
        *(void *)(v274 + 224) = *(void *)(v275 + 224);
        *(void *)(v274 + 232) = *(void *)(v275 + 232);
        *(void *)(v274 + 240) = *(void *)(v275 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v278 = *(_OWORD *)v275;
        long long v279 = *(_OWORD *)(v275 + 16);
        long long v280 = *(_OWORD *)(v275 + 48);
        *(_OWORD *)(v274 + 32) = *(_OWORD *)(v275 + 32);
        *(_OWORD *)(v274 + 48) = v280;
        *(_OWORD *)unint64_t v274 = v278;
        *(_OWORD *)(v274 + 16) = v279;
        long long v281 = *(_OWORD *)(v275 + 64);
        long long v282 = *(_OWORD *)(v275 + 80);
        long long v283 = *(_OWORD *)(v275 + 112);
        *(_OWORD *)(v274 + 96) = *(_OWORD *)(v275 + 96);
        *(_OWORD *)(v274 + 112) = v283;
        *(_OWORD *)(v274 + 64) = v281;
        *(_OWORD *)(v274 + 80) = v282;
        long long v284 = *(_OWORD *)(v275 + 128);
        long long v285 = *(_OWORD *)(v275 + 144);
        long long v286 = *(_OWORD *)(v275 + 176);
        *(_OWORD *)(v274 + 160) = *(_OWORD *)(v275 + 160);
        *(_OWORD *)(v274 + 176) = v286;
        *(_OWORD *)(v274 + 128) = v284;
        *(_OWORD *)(v274 + 144) = v285;
        long long v287 = *(_OWORD *)(v275 + 192);
        long long v288 = *(_OWORD *)(v275 + 208);
        long long v289 = *(_OWORD *)(v275 + 224);
        *(void *)(v274 + 240) = *(void *)(v275 + 240);
        *(_OWORD *)(v274 + 208) = v288;
        *(_OWORD *)(v274 + 224) = v289;
        *(_OWORD *)(v274 + 192) = v287;
        unint64_t v24 = v330;
      }
      id v296 = (_OWORD *)((v274 + 255) & 0xFFFFFFFFFFFFFFF8);
      v297 = (long long *)((v275 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v298 = *v297;
      *(_OWORD *)((char *)v296 + 9) = *(long long *)((char *)v297 + 9);
      *id v296 = v298;
      unint64_t v299 = (v274 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v300 = (v275 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v301 = *(_OWORD *)v300;
      *(unsigned char *)(v299 + 16) = *(unsigned char *)(v300 + 16);
      *(_OWORD *)unint64_t v299 = v301;
      long long v302 = (void *)((v274 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v303 = (v275 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v304 = *(void *)v303;
      v303 += 15;
      *long long v302 = v304;
      uint64_t v305 = (void *)(((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v306 = *(void *)(v303 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v307 = *(void *)((v303 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v306, v307);
      *uint64_t v305 = v306;
      v305[1] = v307;
      unint64_t v308 = (void *)((v322 + v351) & 0xFFFFFFFFFFFFFFF8);
      v309 = (void *)((v322 + v328) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v308 = *v309;
      v310 = (void *)(((unint64_t)v308 + 15) & 0xFFFFFFFFFFFFFFF8);
      v311 = (void *)(((unint64_t)v309 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v310 = *v311;
      v310[1] = v311[1];
      char v105 = 1;
      uint64_t v102 = a1;
      break;
    case 2u:
      uint64_t v102 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v362 + 16))(a1, v11, AssociatedTypeWitness);
      *(unsigned char *)(v3 + a1) = *((unsigned char *)v11 + v3);
      unint64_t v103 = (v3 + a1) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v104 = ((unint64_t)v11 + v3) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v103 + 8) = *(void *)(v104 + 8);
      *(void *)(v103 + 16) = *(void *)(v104 + 16);
      char v105 = 2;
      break;
    case 3u:
      uint64_t v102 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v362 + 16))(a1, v11, AssociatedTypeWitness);
      uint64_t v106 = (void *)((a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v107 = (void *)(((unint64_t)v11 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v106 = *v107;
      v106[1] = v107[1];
      char v105 = 3;
      break;
    case 4u:
      uint64_t v102 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v362 + 16))(a1, v11, AssociatedTypeWitness);
      *(unsigned char *)(v3 + a1) = *((unsigned char *)v11 + v3);
      unint64_t v108 = (v3 + a1) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v109 = ((unint64_t)v11 + v3) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v108 + 8) = *(void *)(v109 + 8);
      *(void *)(v108 + 16) = *(void *)(v109 + 16);
      char v105 = 4;
      break;
    case 5u:
      uint64_t v102 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v362 + 16))(a1, v11, AssociatedTypeWitness);
      unint64_t v110 = (void *)((a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v111 = (void *)(((unint64_t)v11 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v110 = *v111;
      v110[1] = v111[1];
      char v105 = 5;
      break;
    default:
      size_t __n = v17;
      size_t v347 = v17 + 7;
      unint64_t v349 = ((((((((((v17
                     + 7
                     + ((v14
                       + 10
                       + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v329 = v24;
      unint64_t v28 = *(void (**)(uint64_t, unint64_t, uint64_t))(v362 + 16);
      uint64_t v331 = *(void *)(v12 - 8);
      uint64_t v345 = v14 + 10;
      uint64_t v339 = ~v14;
      uint64_t v341 = (v14 | 7) + 16;
      uint64_t v343 = v14 + 12;
      uint64_t v335 = ~(v14 | 7);
      uint64_t v337 = *(void *)(v13 + 64);
      uint64_t v333 = v27;
      uint64_t v29 = ~v4;
      v28(a1, (unint64_t)v11, AssociatedTypeWitness);
      unint64_t v30 = v28;
      uint64_t v31 = (v354 + a1) & v29;
      unint64_t v326 = v11;
      unint64_t v32 = ((unint64_t)v11 + v354) & v29;
      v30(v31, v32, AssociatedTypeWitness);
      uint64_t v33 = (v31 + v3 + v10) & ~v10;
      unint64_t v34 = (v32 + v3 + v10) & ~v10;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v360 + 16))(v33, v34, v356);
      uint64_t v35 = (void *)((v353 + v33) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v36 = (void *)((v353 + v34) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v35 = *v36;
      uint64_t v37 = v12;
      unint64_t v38 = ((unint64_t)v35 + v355) & v333;
      unint64_t v39 = ((unint64_t)v36 + v355) & v333;
      unint64_t v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      v40(v38, v39, v358);
      unint64_t v41 = (void *)((v357 + v39) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v42 = (void *)((v357 + v38) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v42 = *v41;
      unint64_t v43 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v44 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v43 = *v44;
      v43[1] = v44[1];
      unint64_t v45 = (void *)(v359 + v33);
      *unint64_t v45 = *(void *)(v359 + v34);
      v45[1] = *(void *)(v359 + v34 + 8);
      unint64_t v46 = (v341 + v359 + v33) & v335;
      unint64_t v47 = (v341 + v359 + v34) & v335;
      *(unsigned char *)unint64_t v46 = *(unsigned char *)v47;
      uint64_t v48 = v46 | 4;
      int v49 = *(_DWORD *)(v47 | 4);
      *(unsigned char *)(v48 + 4) = *(unsigned char *)((v47 | 4) + 4);
      *(_DWORD *)uint64_t v48 = v49;
      *(_WORD *)(v46 + 10) = *(_WORD *)(v47 + 0xA);
      unint64_t v50 = (v343 + v46) & v339;
      unint64_t v363 = v47;
      unint64_t v51 = (v343 + v47) & v339;
      unint64_t v52 = *(void (**)(unint64_t, unint64_t, uint64_t))(v331 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52(v50, v51, v37);
      unint64_t v53 = (v16 + v51) & v339;
      v52((v16 + v50) & v339, v53, v37);
      unint64_t v54 = (unsigned char *)(((v16 + v50) & v339) + v337);
      *unint64_t v54 = *(unsigned char *)(v53 + v337);
      v54[1] = *(unsigned char *)(v53 + v337 + 1);
      v54[2] = *(unsigned char *)(v53 + v337 + 2);
      v54[3] = *(unsigned char *)(v53 + v337 + 3);
      v54[4] = *(unsigned char *)(v53 + v337 + 4);
      unint64_t v55 = (unint64_t)(v54 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v56 = (v53 + v337 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v55 = *(void *)v56;
      *(void *)(v55 + 8) = *(void *)(v56 + 8);
      *(unsigned char *)(v55 + 16) = *(unsigned char *)(v56 + 16);
      *(unsigned char *)(v55 + 17) = *(unsigned char *)(v56 + 17);
      *(unsigned char *)(v55 + 18) = *(unsigned char *)(v56 + 18);
      *(unsigned char *)(v55 + 19) = *(unsigned char *)(v56 + 19);
      unint64_t v57 = (v55 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v58 = (v56 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v57 = *(void *)v58;
      *(unsigned char *)(v57 + 8) = *(unsigned char *)(v58 + 8);
      *(unsigned char *)(v57 + 9) = *(unsigned char *)(v58 + 9);
      *(unsigned char *)(v57 + 10) = *(unsigned char *)(v58 + 10);
      *(unsigned char *)(v57 + 11) = *(unsigned char *)(v58 + 11);
      *(unsigned char *)(v57 + 12) = *(unsigned char *)(v58 + 12);
      uint64_t v59 = (void *)((v56 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v60 = (void *)((v55 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v60 = *v59;
      unint64_t v61 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v62 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v61 = *(void *)v62;
      *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
      *(unsigned char *)(v61 + 9) = *(unsigned char *)(v62 + 9);
      unint64_t v63 = (void *)((v345 + v61) & v339);
      unint64_t v64 = (const void *)((v345 + v62) & v339);
      unint64_t v65 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v331 + 48);
      swift_bridgeObjectRetain();
      if (v65(v64, 1, v37))
      {
        memcpy(v63, v64, __n);
      }
      else
      {
        v52((unint64_t)v63, (unint64_t)v64, v37);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v331 + 56))(v63, 0, 1, v37);
      }
      id v112 = (void *)(((unint64_t)v63 + v347) & 0xFFFFFFFFFFFFFFF8);
      id v113 = (void *)(((unint64_t)v64 + v347) & 0xFFFFFFFFFFFFFFF8);
      *id v112 = *v113;
      unint64_t v114 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v115 = ((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v116 = *(void *)v115;
      *(unsigned char *)(v114 + 8) = *(unsigned char *)(v115 + 8);
      *(void *)unint64_t v114 = v116;
      id v117 = (void *)(((unint64_t)v112 + 31) & 0xFFFFFFFFFFFFFFF8);
      id v118 = (void *)(((unint64_t)v113 + 31) & 0xFFFFFFFFFFFFFFF8);
      *id v117 = *v118;
      unint64_t v119 = ((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v120 = (uint64_t *)(((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v121 = v120[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v121 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v119 = *(_OWORD *)v120;
      }
      else
      {
        uint64_t v132 = *v120;
        sub_24D3F9C18(*v120, v121);
        *(void *)unint64_t v119 = v132;
        *(void *)(v119 + 8) = v121;
      }
      unint64_t v133 = (v119 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v134 = ((unint64_t)v120 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v135 = *(void *)v134;
      *(unsigned char *)(v133 + 8) = *(unsigned char *)(v134 + 8);
      *(void *)unint64_t v133 = v135;
      *(unsigned char *)(v133 + 9) = *(unsigned char *)(v134 + 9);
      unint64_t v136 = (v133 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v137 = (v134 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v138 = *(_DWORD *)v137;
      *(unsigned char *)(v136 + 4) = *(unsigned char *)(v137 + 4);
      *(_DWORD *)unint64_t v136 = v138;
      unint64_t v139 = (void *)((v133 + 25) & 0xFFFFFFFFFFFFFFF8);
      int v140 = (void *)((v134 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v139 = *v140;
      v139[1] = v140[1];
      unint64_t v141 = v349 + v46;
      long long v142 = (long long *)(v349 + v363);
      unint64_t v143 = *(void *)(v349 + v363 + 16);
      if (v143 >= 0xFFFFFFFF) {
        LODWORD(v143) = -1;
      }
      int v144 = v143 - 1;
      swift_bridgeObjectRetain();
      if (v144 < 0)
      {
        *(void *)unint64_t v141 = *(void *)v142;
        *(unsigned char *)(v141 + 8) = *((unsigned char *)v142 + 8);
        *(unsigned char *)(v141 + 9) = *((unsigned char *)v142 + 9);
        id v184 = (void *)*((void *)v142 + 2);
        id v185 = v184;
        *(void *)(v141 + 16) = v184;
        id v186 = (void *)*((void *)v142 + 3);
        id v187 = v186;
        *(void *)(v141 + 24) = v186;
        *(unsigned char *)(v141 + 32) = *((unsigned char *)v142 + 32);
        *(unsigned char *)(v141 + 33) = *((unsigned char *)v142 + 33);
        *(unsigned char *)(v141 + 34) = *((unsigned char *)v142 + 34);
        *(void *)(v141 + 40) = *((void *)v142 + 5);
        *(void *)(v141 + 48) = *((void *)v142 + 6);
        *(void *)(v141 + 56) = *((void *)v142 + 7);
        *(void *)(v141 + 64) = *((void *)v142 + 8);
        *(unsigned char *)(v141 + 72) = *((unsigned char *)v142 + 72);
        *(void *)(v141 + 80) = *((void *)v142 + 10);
        *(void *)(v141 + 88) = *((void *)v142 + 11);
        unint64_t v364 = (void *)*((void *)v142 + 12);
        *(void *)(v141 + 96) = v364;
        *(unsigned char *)(v141 + 104) = *((unsigned char *)v142 + 104);
        *(unsigned char *)(v141 + 105) = *((unsigned char *)v142 + 105);
        *(void *)(v141 + 112) = *((void *)v142 + 14);
        *(void *)(v141 + 120) = *((void *)v142 + 15);
        *(void *)(v141 + 128) = *((void *)v142 + 16);
        *(void *)(v141 + 136) = *((void *)v142 + 17);
        *(void *)(v141 + 144) = *((void *)v142 + 18);
        *(void *)(v141 + 152) = *((void *)v142 + 19);
        *(void *)(v141 + 160) = *((void *)v142 + 20);
        *(void *)(v141 + 168) = *((void *)v142 + 21);
        *(unsigned char *)(v141 + 176) = *((unsigned char *)v142 + 176);
        *(void *)(v141 + 184) = *((void *)v142 + 23);
        uint64_t v188 = *((void *)v142 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v189 = v364;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v188)
        {
          *(void *)(v141 + 192) = v188;
          *(void *)(v141 + 200) = *((void *)v142 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v141 + 192) = v142[12];
        }
        unint64_t v157 = v326;
        unint64_t v24 = v329;
        *(void *)(v141 + 208) = *((void *)v142 + 26);
        *(void *)(v141 + 216) = *((void *)v142 + 27);
        *(void *)(v141 + 224) = *((void *)v142 + 28);
        *(void *)(v141 + 232) = *((void *)v142 + 29);
        *(void *)(v141 + 240) = *((void *)v142 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v145 = *v142;
        long long v146 = v142[1];
        long long v147 = v142[3];
        *(_OWORD *)(v141 + 32) = v142[2];
        *(_OWORD *)(v141 + 48) = v147;
        *(_OWORD *)unint64_t v141 = v145;
        *(_OWORD *)(v141 + 16) = v146;
        long long v148 = v142[4];
        long long v149 = v142[5];
        long long v150 = v142[7];
        *(_OWORD *)(v141 + 96) = v142[6];
        *(_OWORD *)(v141 + 112) = v150;
        *(_OWORD *)(v141 + 64) = v148;
        *(_OWORD *)(v141 + 80) = v149;
        long long v151 = v142[8];
        long long v152 = v142[9];
        long long v153 = v142[11];
        *(_OWORD *)(v141 + 160) = v142[10];
        *(_OWORD *)(v141 + 176) = v153;
        *(_OWORD *)(v141 + 128) = v151;
        *(_OWORD *)(v141 + 144) = v152;
        long long v154 = v142[12];
        long long v155 = v142[13];
        long long v156 = v142[14];
        *(void *)(v141 + 240) = *((void *)v142 + 30);
        *(_OWORD *)(v141 + 208) = v155;
        *(_OWORD *)(v141 + 224) = v156;
        *(_OWORD *)(v141 + 192) = v154;
        unint64_t v157 = v326;
        unint64_t v24 = v329;
      }
      unint64_t v197 = (_OWORD *)((v141 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v198 = (long long *)(((unint64_t)v142 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v199 = *v198;
      *(_OWORD *)((char *)v197 + 9) = *(long long *)((char *)v198 + 9);
      *unint64_t v197 = v199;
      unint64_t v200 = (v141 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v201 = ((unint64_t)v142 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v202 = *(_OWORD *)v201;
      *(unsigned char *)(v200 + 16) = *(unsigned char *)(v201 + 16);
      *(_OWORD *)unint64_t v200 = v202;
      v203 = (void *)((v141 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v204 = ((unint64_t)v142 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v205 = *(void *)v204;
      v204 += 15;
      void *v203 = v205;
      v206 = (void *)(((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v207 = *(void *)(v204 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v208 = *(void *)((v204 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v207, v208);
      char v105 = 0;
      void *v206 = v207;
      v206[1] = v208;
      uint64_t v102 = a1;
      v209 = (void *)((a1 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
      long long v210 = (void *)(((unint64_t)v157 + v21 + 7) & 0xFFFFFFFFFFFFFFF8);
      void *v209 = *v210;
      v209[1] = v210[1];
      break;
  }
  *(unsigned char *)(v102 + v24) = v105;
  swift_bridgeObjectRetain();
  return v102;
}

_DWORD *sub_24D9B7360(_DWORD *a1, _DWORD *a2)
{
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v400 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = *(unsigned __int8 *)(v400 + 80);
    uint64_t v381 = v3 + v4;
    uint64_t v5 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v383 = v6;
    uint64_t v384 = v5;
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v386 = *(void *)(v8 - 8);
    uint64_t v387 = v8;
    uint64_t v9 = *(unsigned __int8 *)(v386 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v370 = v3 + v10;
    uint64_t v380 = *(void *)(v6 + 64) + 7;
    uint64_t v382 = v9 + 8;
    uint64_t v385 = *(void *)(v386 + 64) + 7;
    unint64_t v389 = ((((v385 + ((v9 + 8 + (v380 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v395 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v395 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v388 = (v12 | 7) + 16;
    uint64_t v390 = v12 + 12;
    uint64_t v13 = *(void *)(v11 + 64);
    uint64_t v391 = v13 + v12;
    uint64_t v14 = v13 + 12;
    uint64_t v393 = v12 + 10;
    uint64_t v375 = v13;
    if (*(_DWORD *)(v11 + 84)) {
      size_t v15 = *(void *)(*(void *)(v395 - 8) + 64);
    }
    else {
      size_t v15 = v13 + 1;
    }
    size_t __n = v15;
    size_t v394 = v15 + 7;
    unint64_t v16 = ((((((((((v15
                  + 7
                  + ((v12
                    + 10
                    + ((((((v13 + 12 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v17 = (((((v388 + v389 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v12 | 7)) + v16 + 311) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = v17 + 23;
    unint64_t v19 = ((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v20 = v17 + 16;
    uint64_t v21 = v10 | v4 | v12;
    unint64_t v367 = v20;
    unint64_t v368 = v20 + v21;
    unint64_t v22 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
    unint64_t v23 = ((((v18 + ((v20 + v21) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v22 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v22 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v22 > v19) {
      unint64_t v19 = v22;
    }
    if (v19 <= v23) {
      unint64_t v24 = v23;
    }
    else {
      unint64_t v24 = v19;
    }
    unsigned int v25 = *((unsigned __int8 *)a1 + v24);
    if (v25 >= 6 && v24 != 0) {
      unsigned int v25 = *a1 + 6;
    }
    uint64_t v27 = ~v4;
    uint64_t v377 = ~v10;
    uint64_t v378 = ~v9;
    uint64_t v379 = ~(v12 | 7);
    uint64_t v392 = ~v12;
    uint64_t v28 = ~v21;
    uint64_t v376 = *(void *)(v395 - 8);
    switch(v25)
    {
      case 1u:
        uint64_t v361 = ~v21;
        unint64_t v373 = v24;
        unint64_t v356 = v18;
        unint64_t v365 = v16;
        uint64_t v81 = *(void (**)(_DWORD *, uint64_t))(v400 + 8);
        v81(a1, AssociatedTypeWitness);
        uint64_t v358 = v27;
        v81((_DWORD *)(((unint64_t)a1 + v381) & v27), AssociatedTypeWitness);
        unint64_t v82 = ((((unint64_t)a1 + v381) & v27) + v3 + v10) & v377;
        unint64_t v350 = *(void (**)(unint64_t, uint64_t))(v383 + 8);
        v350(v82, v384);
        swift_bridgeObjectRelease();
        size_t v347 = *(void (**)(unint64_t, uint64_t))(v386 + 8);
        v347((v382 + ((v380 + v82) & 0xFFFFFFFFFFFFFFF8)) & v378, v387);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v83 = (v388 + v389 + v82) & v379;
        uint64_t v84 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
        v84((v390 + v83) & v392, v395);
        unint64_t v85 = (v391 + ((v390 + v83) & v392)) & v392;
        v84(v85, v395);
        swift_bridgeObjectRelease();
        unint64_t v86 = (v393
             + ((((((v14 + v85) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v392;
        uint64_t v346 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
        if (!v346(v86, 1, v395)) {
          v84(v86, v395);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v87 = (uint64_t *)((((((v394 + v86) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v88 = v87[1];
        if ((v88 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v87, v88);
        }
        swift_bridgeObjectRelease();
        unint64_t v89 = v365 + v83;
        uint64_t v90 = *(void **)(v365 + v83 + 16);
        LODWORD(v91) = -1;
        if ((unint64_t)v90 < 0xFFFFFFFF) {
          uint64_t v91 = *(void *)(v365 + v83 + 16);
        }
        uint64_t v29 = v400;
        if ((int)v91 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v89 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v89 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v89 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        v81((_DWORD *)(((unint64_t)a1 + v368) & v361), AssociatedTypeWitness);
        unint64_t v92 = (v381 + (((unint64_t)a1 + v368) & v361)) & v358;
        v81((_DWORD *)v92, AssociatedTypeWitness);
        unint64_t v93 = (v370 + v92) & v377;
        v350(v93, v384);
        swift_bridgeObjectRelease();
        v347((v382 + ((v380 + v93) & 0xFFFFFFFFFFFFFFF8)) & v378, v387);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v94 = (v388 + v93 + v389) & v379;
        v84((v390 + v94) & v392, v395);
        unint64_t v95 = (v391 + ((v390 + v94) & v392)) & v392;
        v84(v95, v395);
        swift_bridgeObjectRelease();
        unint64_t v96 = (v393
             + ((((((v14 + v95) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v392;
        if (!v346(v96, 1, v395)) {
          v84(v96, v395);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v97 = (uint64_t *)((((((v394 + v96) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v98 = v97[1];
        if ((v98 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v97, v98);
        }
        swift_bridgeObjectRelease();
        unint64_t v99 = v94 + v365;
        unint64_t v16 = v365;
        uint64_t v100 = *(void **)(v99 + 16);
        LODWORD(v101) = -1;
        if ((unint64_t)v100 < 0xFFFFFFFF) {
          uint64_t v101 = *(void *)(v99 + 16);
        }
        uint64_t v27 = v358;
        uint64_t v28 = v361;
        if ((int)v101 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v99 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v99 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v99 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v18 = v356;
        unint64_t v42 = a2;
        unint64_t v24 = v373;
        break;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
        uint64_t v29 = v400;
        (*(void (**)(_DWORD *, uint64_t))(v400 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_30;
      default:
        uint64_t v360 = ~v21;
        unint64_t v371 = v24;
        unint64_t v355 = v18;
        unint64_t v364 = v16;
        unint64_t v30 = *(void (**)(_DWORD *, uint64_t))(v400 + 8);
        v30(a1, AssociatedTypeWitness);
        unint64_t v31 = ((unint64_t)a1 + v381) & v27;
        v30((_DWORD *)v31, AssociatedTypeWitness);
        unint64_t v32 = (v31 + v3 + v10) & v377;
        (*(void (**)(unint64_t, uint64_t))(v383 + 8))(v32, v384);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v386 + 8))((v382 + ((v380 + v32) & 0xFFFFFFFFFFFFFFF8)) & v378, v387);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v33 = (v388 + v389 + v32) & v379;
        unint64_t v34 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
        v34((v390 + v33) & v392, v395);
        unint64_t v35 = (v391 + ((v390 + v33) & v392)) & v392;
        v34(v35, v395);
        swift_bridgeObjectRelease();
        unint64_t v36 = (v393
             + ((((((v14 + v35) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v392;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v36, 1, v395)) {
          v34(v36, v395);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v37 = (uint64_t *)((((((v394 + v36) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v38 = v37[1];
        if ((v38 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v37, v38);
        }
        swift_bridgeObjectRelease();
        unint64_t v16 = v364;
        unint64_t v39 = v364 + v33;
        unint64_t v40 = *(void **)(v364 + v33 + 16);
        LODWORD(v41) = -1;
        if ((unint64_t)v40 < 0xFFFFFFFF) {
          uint64_t v41 = *(void *)(v364 + v33 + 16);
        }
        unint64_t v18 = v355;
        uint64_t v29 = v400;
        unint64_t v24 = v371;
        uint64_t v28 = v360;
        if ((int)v41 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v39 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v39 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v39 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
LABEL_30:
        unint64_t v42 = a2;
        break;
    }
    swift_bridgeObjectRelease();
    unsigned int v43 = *((unsigned __int8 *)v42 + v24);
    if (v43 >= 6 && v24 != 0) {
      unsigned int v43 = *v42 + 6;
    }
    switch(v43)
    {
      case 1u:
        uint64_t v362 = v28;
        unint64_t v374 = v24;
        unint64_t v357 = v18;
        unint64_t v366 = v16;
        uint64_t v102 = *(void (**)(unint64_t, unint64_t, uint64_t))(v29 + 16);
        v102((unint64_t)a1, (unint64_t)v42, AssociatedTypeWitness);
        unint64_t v103 = ((unint64_t)a1 + v381) & v27;
        uint64_t v359 = v27;
        unint64_t v104 = ((unint64_t)v42 + v381) & v27;
        uint64_t v354 = v102;
        v102(v103, v104, AssociatedTypeWitness);
        unint64_t v105 = (v103 + v3 + v10) & v377;
        unint64_t v106 = (v104 + v3 + v10) & v377;
        uint64_t v352 = *(void (**)(unint64_t, unint64_t, uint64_t))(v383 + 16);
        v352(v105, v106, v384);
        uint64_t v107 = (void *)((v380 + v105) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v108 = (void *)((v380 + v106) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v107 = *v108;
        unint64_t v109 = ((unint64_t)v107 + v382) & v378;
        unint64_t v110 = ((unint64_t)v108 + v382) & v378;
        uint64_t v111 = *(void (**)(unint64_t, unint64_t, uint64_t))(v386 + 16);
        swift_bridgeObjectRetain();
        uint64_t v353 = v111;
        v111(v109, v110, v387);
        id v112 = (void *)((v385 + v110) & 0xFFFFFFFFFFFFFFF8);
        id v113 = (void *)((v385 + v109) & 0xFFFFFFFFFFFFFFF8);
        *id v113 = *v112;
        unint64_t v114 = (void *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v115 = (void *)(((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v114 = *v115;
        v114[1] = v115[1];
        uint64_t v116 = (void *)(v389 + v105);
        *uint64_t v116 = *(void *)(v389 + v106);
        v116[1] = *(void *)(v389 + v106 + 8);
        unint64_t v117 = (v388 + v389 + v105) & v379;
        unint64_t v118 = (v388 + v389 + v106) & v379;
        *(unsigned char *)unint64_t v117 = *(unsigned char *)v118;
        uint64_t v119 = v117 | 4;
        int v120 = *(_DWORD *)(v118 | 4);
        *(unsigned char *)(v119 + 4) = *(unsigned char *)((v118 | 4) + 4);
        *(_DWORD *)uint64_t v119 = v120;
        *(_WORD *)(v117 + 10) = *(_WORD *)(v118 + 0xA);
        unint64_t v349 = v117;
        unint64_t v121 = (v390 + v117) & v392;
        unint64_t v348 = v118;
        unint64_t v122 = (v390 + v118) & v392;
        id v123 = *(void (**)(unint64_t, unint64_t, uint64_t))(v376 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v123(v121, v122, v395);
        unint64_t v124 = (v391 + v122) & v392;
        v123((v391 + v121) & v392, v124, v395);
        unint64_t v125 = (unsigned char *)(((v391 + v121) & v392) + v375);
        *unint64_t v125 = *(unsigned char *)(v124 + v375);
        v125[1] = *(unsigned char *)(v124 + v375 + 1);
        v125[2] = *(unsigned char *)(v124 + v375 + 2);
        v125[3] = *(unsigned char *)(v124 + v375 + 3);
        v125[4] = *(unsigned char *)(v124 + v375 + 4);
        unint64_t v126 = (unint64_t)(v125 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v127 = (v124 + v375 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v126 = *(void *)v127;
        *(void *)(v126 + 8) = *(void *)(v127 + 8);
        *(unsigned char *)(v126 + 16) = *(unsigned char *)(v127 + 16);
        *(unsigned char *)(v126 + 17) = *(unsigned char *)(v127 + 17);
        *(unsigned char *)(v126 + 18) = *(unsigned char *)(v127 + 18);
        *(unsigned char *)(v126 + 19) = *(unsigned char *)(v127 + 19);
        unint64_t v128 = (v126 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v129 = (v127 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v128 = *(void *)v129;
        *(unsigned char *)(v128 + 8) = *(unsigned char *)(v129 + 8);
        *(unsigned char *)(v128 + 9) = *(unsigned char *)(v129 + 9);
        *(unsigned char *)(v128 + 10) = *(unsigned char *)(v129 + 10);
        *(unsigned char *)(v128 + 11) = *(unsigned char *)(v129 + 11);
        *(unsigned char *)(v128 + 12) = *(unsigned char *)(v129 + 12);
        unint64_t v130 = (void *)((v127 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v131 = (void *)((v126 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v131 = *v130;
        unint64_t v132 = ((unint64_t)v131 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v133 = ((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v132 = *(void *)v133;
        *(unsigned char *)(v132 + 8) = *(unsigned char *)(v133 + 8);
        *(unsigned char *)(v132 + 9) = *(unsigned char *)(v133 + 9);
        unint64_t v134 = (void *)((v393 + v132) & v392);
        uint64_t v135 = (const void *)((v393 + v133) & v392);
        unint64_t v136 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v376 + 48);
        swift_bridgeObjectRetain();
        uint64_t v351 = v136;
        if (v136(v135, 1, v395))
        {
          memcpy(v134, v135, __n);
        }
        else
        {
          v123((unint64_t)v134, (unint64_t)v135, v395);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v376 + 56))(v134, 0, 1, v395);
        }
        long long v156 = (void *)(((unint64_t)v134 + v394) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v157 = (void *)(((unint64_t)v135 + v394) & 0xFFFFFFFFFFFFFFF8);
        *long long v156 = *v157;
        unint64_t v158 = ((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v159 = ((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v160 = *(void *)v159;
        *(unsigned char *)(v158 + 8) = *(unsigned char *)(v159 + 8);
        *(void *)unint64_t v158 = v160;
        uint64_t v161 = (void *)(((unint64_t)v156 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v162 = (void *)(((unint64_t)v157 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v161 = *v162;
        unint64_t v163 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
        int v164 = (uint64_t *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v165 = v164[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v165 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v163 = *(_OWORD *)v164;
        }
        else
        {
          uint64_t v191 = *v164;
          sub_24D3F9C18(*v164, v165);
          *(void *)unint64_t v163 = v191;
          *(void *)(v163 + 8) = v165;
        }
        unint64_t v192 = (v163 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v193 = ((unint64_t)v164 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v194 = *(void *)v193;
        *(unsigned char *)(v192 + 8) = *(unsigned char *)(v193 + 8);
        *(void *)unint64_t v192 = v194;
        *(unsigned char *)(v192 + 9) = *(unsigned char *)(v193 + 9);
        unint64_t v195 = (v192 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v196 = (v193 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v197 = *(_DWORD *)v196;
        *(unsigned char *)(v195 + 4) = *(unsigned char *)(v196 + 4);
        *(_DWORD *)unint64_t v195 = v197;
        unint64_t v198 = (void *)((v192 + 25) & 0xFFFFFFFFFFFFFFF8);
        long long v199 = (void *)((v193 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v198 = *v199;
        v198[1] = v199[1];
        unint64_t v200 = v366 + v349;
        unint64_t v201 = (long long *)(v366 + v348);
        unint64_t v202 = *(void *)(v366 + v348 + 16);
        if (v202 >= 0xFFFFFFFF) {
          LODWORD(v202) = -1;
        }
        int v203 = v202 - 1;
        swift_bridgeObjectRetain();
        if (v203 < 0)
        {
          *(void *)unint64_t v200 = *(void *)v201;
          *(unsigned char *)(v200 + 8) = *((unsigned char *)v201 + 8);
          *(unsigned char *)(v200 + 9) = *((unsigned char *)v201 + 9);
          unint64_t v222 = (void *)*((void *)v201 + 2);
          id v223 = v222;
          *(void *)(v200 + 16) = v222;
          unint64_t v224 = (void *)*((void *)v201 + 3);
          id v225 = v224;
          *(void *)(v200 + 24) = v224;
          *(unsigned char *)(v200 + 32) = *((unsigned char *)v201 + 32);
          *(unsigned char *)(v200 + 33) = *((unsigned char *)v201 + 33);
          *(unsigned char *)(v200 + 34) = *((unsigned char *)v201 + 34);
          *(void *)(v200 + 40) = *((void *)v201 + 5);
          *(void *)(v200 + 48) = *((void *)v201 + 6);
          *(void *)(v200 + 56) = *((void *)v201 + 7);
          *(void *)(v200 + 64) = *((void *)v201 + 8);
          *(unsigned char *)(v200 + 72) = *((unsigned char *)v201 + 72);
          *(void *)(v200 + 80) = *((void *)v201 + 10);
          *(void *)(v200 + 88) = *((void *)v201 + 11);
          uint64_t v226 = (void *)*((void *)v201 + 12);
          *(void *)(v200 + 96) = v226;
          *(unsigned char *)(v200 + 104) = *((unsigned char *)v201 + 104);
          *(unsigned char *)(v200 + 105) = *((unsigned char *)v201 + 105);
          *(void *)(v200 + 112) = *((void *)v201 + 14);
          *(void *)(v200 + 120) = *((void *)v201 + 15);
          *(void *)(v200 + 128) = *((void *)v201 + 16);
          *(void *)(v200 + 136) = *((void *)v201 + 17);
          *(void *)(v200 + 144) = *((void *)v201 + 18);
          *(void *)(v200 + 152) = *((void *)v201 + 19);
          *(void *)(v200 + 160) = *((void *)v201 + 20);
          *(void *)(v200 + 168) = *((void *)v201 + 21);
          *(unsigned char *)(v200 + 176) = *((unsigned char *)v201 + 176);
          *(void *)(v200 + 184) = *((void *)v201 + 23);
          uint64_t v227 = *((void *)v201 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v228 = v226;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v227)
          {
            *(void *)(v200 + 192) = v227;
            *(void *)(v200 + 200) = *((void *)v201 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v200 + 192) = v201[12];
          }
          uint64_t v216 = v362;
          *(void *)(v200 + 208) = *((void *)v201 + 26);
          *(void *)(v200 + 216) = *((void *)v201 + 27);
          *(void *)(v200 + 224) = *((void *)v201 + 28);
          *(void *)(v200 + 232) = *((void *)v201 + 29);
          *(void *)(v200 + 240) = *((void *)v201 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v204 = *v201;
          long long v205 = v201[1];
          long long v206 = v201[3];
          *(_OWORD *)(v200 + 32) = v201[2];
          *(_OWORD *)(v200 + 48) = v206;
          *(_OWORD *)unint64_t v200 = v204;
          *(_OWORD *)(v200 + 16) = v205;
          long long v207 = v201[4];
          long long v208 = v201[5];
          long long v209 = v201[7];
          *(_OWORD *)(v200 + 96) = v201[6];
          *(_OWORD *)(v200 + 112) = v209;
          *(_OWORD *)(v200 + 64) = v207;
          *(_OWORD *)(v200 + 80) = v208;
          long long v210 = v201[8];
          long long v211 = v201[9];
          long long v212 = v201[11];
          *(_OWORD *)(v200 + 160) = v201[10];
          *(_OWORD *)(v200 + 176) = v212;
          *(_OWORD *)(v200 + 128) = v210;
          *(_OWORD *)(v200 + 144) = v211;
          long long v213 = v201[12];
          long long v214 = v201[13];
          long long v215 = v201[14];
          *(void *)(v200 + 240) = *((void *)v201 + 30);
          *(_OWORD *)(v200 + 208) = v214;
          *(_OWORD *)(v200 + 224) = v215;
          *(_OWORD *)(v200 + 192) = v213;
          uint64_t v216 = v362;
        }
        unint64_t v243 = (_OWORD *)((v200 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v244 = (long long *)(((unint64_t)v201 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v245 = *v244;
        *(_OWORD *)((char *)v243 + 9) = *(long long *)((char *)v244 + 9);
        *unint64_t v243 = v245;
        unint64_t v246 = (v200 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v247 = ((unint64_t)v201 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v248 = *(_OWORD *)v247;
        *(unsigned char *)(v246 + 16) = *(unsigned char *)(v247 + 16);
        *(_OWORD *)unint64_t v246 = v248;
        unint64_t v249 = (void *)((v200 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v250 = ((unint64_t)v201 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v251 = *(void *)v250;
        v250 += 15;
        *unint64_t v249 = v251;
        unint64_t v252 = (void *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v253 = *(void *)(v250 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v254 = *(void *)((v250 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v253, v254);
        void *v252 = v253;
        v252[1] = v254;
        unint64_t v255 = ((unint64_t)a2 + v368) & v216;
        v354(((unint64_t)a1 + v368) & v216, v255, AssociatedTypeWitness);
        unint64_t v399 = ((unint64_t)a1 + v368) & v216;
        unint64_t v256 = (v381 + v399) & v359;
        unint64_t v369 = v255;
        unint64_t v257 = (v381 + v255) & v359;
        v354(v256, v257, AssociatedTypeWitness);
        unint64_t v258 = (v370 + v256) & v377;
        uint64_t v259 = (v370 + v257) & v377;
        v352(v258, v259, v384);
        unint64_t v260 = (void *)((v380 + v258) & 0xFFFFFFFFFFFFFFF8);
        v261 = (void *)((v380 + v259) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v260 = *v261;
        unint64_t v262 = ((unint64_t)v260 + v382) & v378;
        unint64_t v263 = ((unint64_t)v261 + v382) & v378;
        swift_bridgeObjectRetain();
        v353(v262, v263, v387);
        unint64_t v264 = (void *)((v385 + v262) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v265 = (void *)((v385 + v263) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v264 = *v265;
        unint64_t v266 = (void *)(((unint64_t)v264 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v267 = (void *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v266 = *v267;
        v266[1] = v267[1];
        uint64_t v268 = (void *)(v258 + v389);
        *uint64_t v268 = *(void *)(v259 + v389);
        v268[1] = *(void *)(v259 + v389 + 8);
        unint64_t v269 = (v388 + v258 + v389) & v379;
        unint64_t v270 = (v388 + v259 + v389) & v379;
        *(unsigned char *)unint64_t v269 = *(unsigned char *)v270;
        uint64_t v271 = v269 | 4;
        int v272 = *(_DWORD *)(v270 | 4);
        *(unsigned char *)(v271 + 4) = *(unsigned char *)((v270 | 4) + 4);
        *(_DWORD *)uint64_t v271 = v272;
        *(_WORD *)(v269 + 10) = *(_WORD *)(v270 + 0xA);
        unint64_t v405 = v269;
        unint64_t v273 = (v390 + v269) & v392;
        unint64_t v274 = (v390 + v270) & v392;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v123(v273, v274, v395);
        unint64_t v275 = (v391 + v273) & v392;
        unint64_t v276 = (v391 + v274) & v392;
        v123(v275, v276, v395);
        int v277 = (unsigned char *)(v275 + v375);
        *int v277 = *(unsigned char *)(v276 + v375);
        v277[1] = *(unsigned char *)(v276 + v375 + 1);
        v277[2] = *(unsigned char *)(v276 + v375 + 2);
        v277[3] = *(unsigned char *)(v276 + v375 + 3);
        v277[4] = *(unsigned char *)(v276 + v375 + 4);
        unint64_t v278 = (v275 + v375 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v279 = (v276 + v375 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v278 = *(void *)v279;
        *(void *)(v278 + 8) = *(void *)(v279 + 8);
        *(unsigned char *)(v278 + 16) = *(unsigned char *)(v279 + 16);
        *(unsigned char *)(v278 + 17) = *(unsigned char *)(v279 + 17);
        *(unsigned char *)(v278 + 18) = *(unsigned char *)(v279 + 18);
        *(unsigned char *)(v278 + 19) = *(unsigned char *)(v279 + 19);
        unint64_t v280 = (v278 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v281 = (v279 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v280 = *(void *)v281;
        *(unsigned char *)(v280 + 8) = *(unsigned char *)(v281 + 8);
        *(unsigned char *)(v280 + 9) = *(unsigned char *)(v281 + 9);
        *(unsigned char *)(v280 + 10) = *(unsigned char *)(v281 + 10);
        *(unsigned char *)(v280 + 11) = *(unsigned char *)(v281 + 11);
        *(unsigned char *)(v280 + 12) = *(unsigned char *)(v281 + 12);
        long long v282 = (void *)((v278 + 47) & 0xFFFFFFFFFFFFFFF8);
        long long v283 = (void *)((v279 + 47) & 0xFFFFFFFFFFFFFFF8);
        *long long v282 = *v283;
        unint64_t v284 = ((unint64_t)v282 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v285 = ((unint64_t)v283 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v284 = *(void *)v285;
        *(unsigned char *)(v284 + 8) = *(unsigned char *)(v285 + 8);
        *(unsigned char *)(v284 + 9) = *(unsigned char *)(v285 + 9);
        long long v286 = (void *)((v393 + v284) & v392);
        long long v287 = (const void *)((v393 + v285) & v392);
        swift_bridgeObjectRetain();
        if (v351(v287, 1, v395))
        {
          memcpy(v286, v287, __n);
        }
        else
        {
          v123((unint64_t)v286, (unint64_t)v287, v395);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v376 + 56))(v286, 0, 1, v395);
        }
        long long v288 = (void *)(((unint64_t)v286 + v394) & 0xFFFFFFFFFFFFFFF8);
        long long v289 = (void *)(((unint64_t)v287 + v394) & 0xFFFFFFFFFFFFFFF8);
        *long long v288 = *v289;
        unint64_t v290 = ((unint64_t)v288 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v291 = ((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v292 = *(void *)v291;
        *(unsigned char *)(v290 + 8) = *(unsigned char *)(v291 + 8);
        *(void *)unint64_t v290 = v292;
        id v293 = (void *)(((unint64_t)v288 + 31) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v294 = (void *)(((unint64_t)v289 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v293 = *v294;
        unint64_t v295 = ((unint64_t)v293 + 15) & 0xFFFFFFFFFFFFFFF8;
        id v296 = (uint64_t *)(((unint64_t)v294 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v297 = v296[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v297 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v295 = *(_OWORD *)v296;
        }
        else
        {
          uint64_t v298 = *v296;
          sub_24D3F9C18(*v296, v297);
          *(void *)unint64_t v295 = v298;
          *(void *)(v295 + 8) = v297;
        }
        unint64_t v299 = (v295 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v300 = ((unint64_t)v296 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v301 = *(void *)v300;
        *(unsigned char *)(v299 + 8) = *(unsigned char *)(v300 + 8);
        *(void *)unint64_t v299 = v301;
        *(unsigned char *)(v299 + 9) = *(unsigned char *)(v300 + 9);
        unint64_t v302 = (v299 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v303 = (v300 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v304 = *(_DWORD *)v303;
        *(unsigned char *)(v302 + 4) = *(unsigned char *)(v303 + 4);
        *(_DWORD *)unint64_t v302 = v304;
        uint64_t v305 = (void *)((v299 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v306 = (void *)((v300 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v305 = *v306;
        v305[1] = v306[1];
        unint64_t v307 = v405 + v366;
        unint64_t v308 = v270 + v366;
        unint64_t v309 = *(void *)(v270 + v366 + 16);
        if (v309 >= 0xFFFFFFFF) {
          LODWORD(v309) = -1;
        }
        int v310 = v309 - 1;
        swift_bridgeObjectRetain();
        if (v310 < 0)
        {
          *(void *)unint64_t v307 = *(void *)v308;
          *(unsigned char *)(v307 + 8) = *(unsigned char *)(v308 + 8);
          *(unsigned char *)(v307 + 9) = *(unsigned char *)(v308 + 9);
          v324 = *(void **)(v308 + 16);
          id v325 = v324;
          *(void *)(v307 + 16) = v324;
          unint64_t v326 = *(void **)(v308 + 24);
          id v327 = v326;
          *(void *)(v307 + 24) = v326;
          *(unsigned char *)(v307 + 32) = *(unsigned char *)(v308 + 32);
          *(unsigned char *)(v307 + 33) = *(unsigned char *)(v308 + 33);
          *(unsigned char *)(v307 + 34) = *(unsigned char *)(v308 + 34);
          *(void *)(v307 + 40) = *(void *)(v308 + 40);
          *(void *)(v307 + 48) = *(void *)(v308 + 48);
          *(void *)(v307 + 56) = *(void *)(v308 + 56);
          *(void *)(v307 + 64) = *(void *)(v308 + 64);
          *(unsigned char *)(v307 + 72) = *(unsigned char *)(v308 + 72);
          *(void *)(v307 + 80) = *(void *)(v308 + 80);
          *(void *)(v307 + 88) = *(void *)(v308 + 88);
          v406 = *(void **)(v308 + 96);
          *(void *)(v307 + 96) = v406;
          *(unsigned char *)(v307 + 104) = *(unsigned char *)(v308 + 104);
          *(unsigned char *)(v307 + 105) = *(unsigned char *)(v308 + 105);
          *(void *)(v307 + 112) = *(void *)(v308 + 112);
          *(void *)(v307 + 120) = *(void *)(v308 + 120);
          *(void *)(v307 + 128) = *(void *)(v308 + 128);
          *(void *)(v307 + 136) = *(void *)(v308 + 136);
          *(void *)(v307 + 144) = *(void *)(v308 + 144);
          *(void *)(v307 + 152) = *(void *)(v308 + 152);
          *(void *)(v307 + 160) = *(void *)(v308 + 160);
          *(void *)(v307 + 168) = *(void *)(v308 + 168);
          *(unsigned char *)(v307 + 176) = *(unsigned char *)(v308 + 176);
          *(void *)(v307 + 184) = *(void *)(v308 + 184);
          uint64_t v397 = *(void *)(v308 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v328 = v406;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v397)
          {
            *(void *)(v307 + 192) = v397;
            *(void *)(v307 + 200) = *(void *)(v308 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v307 + 192) = *(_OWORD *)(v308 + 192);
          }
          unint64_t v323 = v374;
          *(void *)(v307 + 208) = *(void *)(v308 + 208);
          *(void *)(v307 + 216) = *(void *)(v308 + 216);
          *(void *)(v307 + 224) = *(void *)(v308 + 224);
          *(void *)(v307 + 232) = *(void *)(v308 + 232);
          *(void *)(v307 + 240) = *(void *)(v308 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v311 = *(_OWORD *)v308;
          long long v312 = *(_OWORD *)(v308 + 16);
          long long v313 = *(_OWORD *)(v308 + 48);
          *(_OWORD *)(v307 + 32) = *(_OWORD *)(v308 + 32);
          *(_OWORD *)(v307 + 48) = v313;
          *(_OWORD *)unint64_t v307 = v311;
          *(_OWORD *)(v307 + 16) = v312;
          long long v314 = *(_OWORD *)(v308 + 64);
          long long v315 = *(_OWORD *)(v308 + 80);
          long long v316 = *(_OWORD *)(v308 + 112);
          *(_OWORD *)(v307 + 96) = *(_OWORD *)(v308 + 96);
          *(_OWORD *)(v307 + 112) = v316;
          *(_OWORD *)(v307 + 64) = v314;
          *(_OWORD *)(v307 + 80) = v315;
          long long v317 = *(_OWORD *)(v308 + 128);
          long long v318 = *(_OWORD *)(v308 + 144);
          long long v319 = *(_OWORD *)(v308 + 176);
          *(_OWORD *)(v307 + 160) = *(_OWORD *)(v308 + 160);
          *(_OWORD *)(v307 + 176) = v319;
          *(_OWORD *)(v307 + 128) = v317;
          *(_OWORD *)(v307 + 144) = v318;
          long long v320 = *(_OWORD *)(v308 + 192);
          long long v321 = *(_OWORD *)(v308 + 208);
          long long v322 = *(_OWORD *)(v308 + 224);
          *(void *)(v307 + 240) = *(void *)(v308 + 240);
          *(_OWORD *)(v307 + 208) = v321;
          *(_OWORD *)(v307 + 224) = v322;
          *(_OWORD *)(v307 + 192) = v320;
          unint64_t v323 = v374;
        }
        unint64_t v329 = (_OWORD *)((v307 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v330 = (long long *)((v308 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v331 = *v330;
        *(_OWORD *)((char *)v329 + 9) = *(long long *)((char *)v330 + 9);
        *unint64_t v329 = v331;
        unint64_t v332 = (v307 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v333 = (v308 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v334 = *(_OWORD *)v333;
        *(unsigned char *)(v332 + 16) = *(unsigned char *)(v333 + 16);
        *(_OWORD *)unint64_t v332 = v334;
        uint64_t v335 = (void *)((v307 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v336 = (v308 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v337 = *(void *)v336;
        v336 += 15;
        *uint64_t v335 = v337;
        uint64_t v338 = (void *)(((unint64_t)v335 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v339 = *(void *)(v336 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v340 = *(void *)((v336 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v339, v340);
        *uint64_t v338 = v339;
        v338[1] = v340;
        uint64_t v341 = (void *)((v357 + v399) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v342 = (void *)((v357 + v369) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v341 = *v342;
        uint64_t v343 = (void *)(((unint64_t)v341 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v344 = (void *)(((unint64_t)v342 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v343 = *v344;
        v343[1] = v344[1];
        char v139 = 1;
        unint64_t v24 = v323;
        break;
      case 2u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16))(a1, v42, AssociatedTypeWitness);
        *((unsigned char *)a1 + v3) = *((unsigned char *)v42 + v3);
        unint64_t v137 = ((unint64_t)a1 + v3) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v138 = ((unint64_t)v42 + v3) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v137 + 8) = *(void *)(v138 + 8);
        *(void *)(v137 + 16) = *(void *)(v138 + 16);
        char v139 = 2;
        break;
      case 3u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16))(a1, v42, AssociatedTypeWitness);
        int v140 = (void *)(((unint64_t)a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v141 = (void *)(((unint64_t)v42 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        *int v140 = *v141;
        v140[1] = v141[1];
        char v139 = 3;
        break;
      case 4u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16))(a1, v42, AssociatedTypeWitness);
        *((unsigned char *)a1 + v3) = *((unsigned char *)v42 + v3);
        unint64_t v142 = ((unint64_t)a1 + v3) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v143 = ((unint64_t)v42 + v3) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v142 + 8) = *(void *)(v143 + 8);
        *(void *)(v142 + 16) = *(void *)(v143 + 16);
        char v139 = 4;
        break;
      case 5u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16))(a1, v42, AssociatedTypeWitness);
        int v144 = (void *)(((unint64_t)a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v145 = (void *)(((unint64_t)v42 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        void *v144 = *v145;
        v144[1] = v145[1];
        char v139 = 5;
        break;
      default:
        unint64_t v372 = v24;
        unint64_t v45 = v42;
        unint64_t v46 = *(void (**)(_DWORD *, _DWORD *, uint64_t))(v29 + 16);
        v46(a1, v45, AssociatedTypeWitness);
        unint64_t v47 = ((unint64_t)a1 + v381) & v27;
        unint64_t v48 = ((unint64_t)v45 + v381) & v27;
        v46((_DWORD *)v47, (_DWORD *)v48, AssociatedTypeWitness);
        unint64_t v49 = (v47 + v3 + v10) & v377;
        unint64_t v50 = (v48 + v3 + v10) & v377;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v383 + 16))(v49, v50, v384);
        unint64_t v51 = (void *)((v380 + v49) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v52 = (void *)((v380 + v50) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v51 = *v52;
        unint64_t v53 = ((unint64_t)v51 + v382) & v378;
        unint64_t v54 = ((unint64_t)v52 + v382) & v378;
        unint64_t v55 = *(void (**)(unint64_t, unint64_t, uint64_t))(v386 + 16);
        swift_bridgeObjectRetain();
        v55(v53, v54, v387);
        unint64_t v56 = (void *)((v385 + v54) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v57 = (void *)((v385 + v53) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v57 = *v56;
        unint64_t v58 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v59 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v58 = *v59;
        v58[1] = v59[1];
        uint64_t v60 = (void *)(v389 + v49);
        *uint64_t v60 = *(void *)(v389 + v50);
        v60[1] = *(void *)(v389 + v50 + 8);
        unint64_t v61 = (v388 + v389 + v49) & v379;
        unint64_t v62 = (v388 + v389 + v50) & v379;
        *(unsigned char *)unint64_t v61 = *(unsigned char *)v62;
        uint64_t v63 = v61 | 4;
        int v64 = *(_DWORD *)(v62 | 4);
        *(unsigned char *)(v63 + 4) = *(unsigned char *)((v62 | 4) + 4);
        *(_DWORD *)uint64_t v63 = v64;
        *(_WORD *)(v61 + 10) = *(_WORD *)(v62 + 0xA);
        unint64_t v401 = v62;
        unint64_t v403 = v61;
        unint64_t v65 = (v390 + v61) & v392;
        unint64_t v66 = (v390 + v62) & v392;
        uint64_t v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v376 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v67(v65, v66, v395);
        unint64_t v68 = (v391 + v66) & v392;
        v67((v391 + v65) & v392, v68, v395);
        unint64_t v69 = (unsigned char *)(((v391 + v65) & v392) + v375);
        *unint64_t v69 = *(unsigned char *)(v68 + v375);
        v69[1] = *(unsigned char *)(v68 + v375 + 1);
        v69[2] = *(unsigned char *)(v68 + v375 + 2);
        v69[3] = *(unsigned char *)(v68 + v375 + 3);
        v69[4] = *(unsigned char *)(v68 + v375 + 4);
        unint64_t v70 = (unint64_t)(v69 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v71 = (v68 + v375 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v70 = *(void *)v71;
        *(void *)(v70 + 8) = *(void *)(v71 + 8);
        *(unsigned char *)(v70 + 16) = *(unsigned char *)(v71 + 16);
        *(unsigned char *)(v70 + 17) = *(unsigned char *)(v71 + 17);
        *(unsigned char *)(v70 + 18) = *(unsigned char *)(v71 + 18);
        *(unsigned char *)(v70 + 19) = *(unsigned char *)(v71 + 19);
        unint64_t v72 = (v70 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v73 = (v71 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v72 = *(void *)v73;
        *(unsigned char *)(v72 + 8) = *(unsigned char *)(v73 + 8);
        *(unsigned char *)(v72 + 9) = *(unsigned char *)(v73 + 9);
        *(unsigned char *)(v72 + 10) = *(unsigned char *)(v73 + 10);
        *(unsigned char *)(v72 + 11) = *(unsigned char *)(v73 + 11);
        *(unsigned char *)(v72 + 12) = *(unsigned char *)(v73 + 12);
        unint64_t v74 = (void *)((v71 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v75 = (void *)((v70 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v75 = *v74;
        unint64_t v76 = ((unint64_t)v75 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v77 = ((unint64_t)v74 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v76 = *(void *)v77;
        *(unsigned char *)(v76 + 8) = *(unsigned char *)(v77 + 8);
        *(unsigned char *)(v76 + 9) = *(unsigned char *)(v77 + 9);
        uint64_t v78 = (void *)((v393 + v76) & v392);
        unint64_t v79 = (const void *)((v393 + v77) & v392);
        uint64_t v80 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v376 + 48);
        swift_bridgeObjectRetain();
        if (v80(v79, 1, v395))
        {
          memcpy(v78, v79, __n);
        }
        else
        {
          v67((unint64_t)v78, (unint64_t)v79, v395);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v376 + 56))(v78, 0, 1, v395);
        }
        long long v146 = (void *)(((unint64_t)v78 + v394) & 0xFFFFFFFFFFFFFFF8);
        long long v147 = (void *)(((unint64_t)v79 + v394) & 0xFFFFFFFFFFFFFFF8);
        void *v146 = *v147;
        unint64_t v148 = ((unint64_t)v146 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v149 = ((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v150 = *(void *)v149;
        *(unsigned char *)(v148 + 8) = *(unsigned char *)(v149 + 8);
        *(void *)unint64_t v148 = v150;
        long long v151 = (void *)(((unint64_t)v146 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v152 = (void *)(((unint64_t)v147 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v151 = *v152;
        unint64_t v153 = ((unint64_t)v151 + 15) & 0xFFFFFFFFFFFFFFF8;
        long long v154 = (uint64_t *)(((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v155 = v154[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v155 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v153 = *(_OWORD *)v154;
        }
        else
        {
          uint64_t v166 = *v154;
          sub_24D3F9C18(*v154, v155);
          *(void *)unint64_t v153 = v166;
          *(void *)(v153 + 8) = v155;
        }
        unint64_t v167 = (v153 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v168 = ((unint64_t)v154 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v169 = *(void *)v168;
        *(unsigned char *)(v167 + 8) = *(unsigned char *)(v168 + 8);
        *(void *)unint64_t v167 = v169;
        *(unsigned char *)(v167 + 9) = *(unsigned char *)(v168 + 9);
        unint64_t v170 = (v167 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v171 = (v168 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v172 = *(_DWORD *)v171;
        *(unsigned char *)(v170 + 4) = *(unsigned char *)(v171 + 4);
        *(_DWORD *)unint64_t v170 = v172;
        long long v173 = (void *)((v167 + 25) & 0xFFFFFFFFFFFFFFF8);
        long long v174 = (void *)((v168 + 25) & 0xFFFFFFFFFFFFFFF8);
        *long long v173 = *v174;
        v173[1] = v174[1];
        unint64_t v175 = v16 + v403;
        long long v176 = (long long *)(v16 + v401);
        unint64_t v177 = *(void *)(v16 + v401 + 16);
        if (v177 >= 0xFFFFFFFF) {
          LODWORD(v177) = -1;
        }
        int v178 = v177 - 1;
        swift_bridgeObjectRetain();
        unint64_t v24 = v372;
        if (v178 < 0)
        {
          *(void *)unint64_t v175 = *(void *)v176;
          *(unsigned char *)(v175 + 8) = *((unsigned char *)v176 + 8);
          *(unsigned char *)(v175 + 9) = *((unsigned char *)v176 + 9);
          v217 = (void *)*((void *)v176 + 2);
          id v218 = v217;
          *(void *)(v175 + 16) = v217;
          uint64_t v219 = (void *)*((void *)v176 + 3);
          id v220 = v219;
          *(void *)(v175 + 24) = v219;
          *(unsigned char *)(v175 + 32) = *((unsigned char *)v176 + 32);
          *(unsigned char *)(v175 + 33) = *((unsigned char *)v176 + 33);
          *(unsigned char *)(v175 + 34) = *((unsigned char *)v176 + 34);
          *(void *)(v175 + 40) = *((void *)v176 + 5);
          *(void *)(v175 + 48) = *((void *)v176 + 6);
          *(void *)(v175 + 56) = *((void *)v176 + 7);
          *(void *)(v175 + 64) = *((void *)v176 + 8);
          *(unsigned char *)(v175 + 72) = *((unsigned char *)v176 + 72);
          *(void *)(v175 + 80) = *((void *)v176 + 10);
          *(void *)(v175 + 88) = *((void *)v176 + 11);
          v404 = (void *)*((void *)v176 + 12);
          *(void *)(v175 + 96) = v404;
          *(unsigned char *)(v175 + 104) = *((unsigned char *)v176 + 104);
          *(unsigned char *)(v175 + 105) = *((unsigned char *)v176 + 105);
          *(void *)(v175 + 112) = *((void *)v176 + 14);
          *(void *)(v175 + 120) = *((void *)v176 + 15);
          *(void *)(v175 + 128) = *((void *)v176 + 16);
          *(void *)(v175 + 136) = *((void *)v176 + 17);
          *(void *)(v175 + 144) = *((void *)v176 + 18);
          *(void *)(v175 + 152) = *((void *)v176 + 19);
          *(void *)(v175 + 160) = *((void *)v176 + 20);
          *(void *)(v175 + 168) = *((void *)v176 + 21);
          *(unsigned char *)(v175 + 176) = *((unsigned char *)v176 + 176);
          *(void *)(v175 + 184) = *((void *)v176 + 23);
          uint64_t v396 = *((void *)v176 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v221 = v404;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v396)
          {
            *(void *)(v175 + 192) = v396;
            *(void *)(v175 + 200) = *((void *)v176 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v175 + 192) = v176[12];
          }
          unint64_t v24 = v372;
          *(void *)(v175 + 208) = *((void *)v176 + 26);
          *(void *)(v175 + 216) = *((void *)v176 + 27);
          *(void *)(v175 + 224) = *((void *)v176 + 28);
          *(void *)(v175 + 232) = *((void *)v176 + 29);
          *(void *)(v175 + 240) = *((void *)v176 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v179 = *v176;
          long long v180 = v176[1];
          long long v181 = v176[3];
          *(_OWORD *)(v175 + 32) = v176[2];
          *(_OWORD *)(v175 + 48) = v181;
          *(_OWORD *)unint64_t v175 = v179;
          *(_OWORD *)(v175 + 16) = v180;
          long long v182 = v176[4];
          long long v183 = v176[5];
          long long v184 = v176[7];
          *(_OWORD *)(v175 + 96) = v176[6];
          *(_OWORD *)(v175 + 112) = v184;
          *(_OWORD *)(v175 + 64) = v182;
          *(_OWORD *)(v175 + 80) = v183;
          long long v185 = v176[8];
          long long v186 = v176[9];
          long long v187 = v176[11];
          *(_OWORD *)(v175 + 160) = v176[10];
          *(_OWORD *)(v175 + 176) = v187;
          *(_OWORD *)(v175 + 128) = v185;
          *(_OWORD *)(v175 + 144) = v186;
          long long v188 = v176[12];
          long long v189 = v176[13];
          long long v190 = v176[14];
          *(void *)(v175 + 240) = *((void *)v176 + 30);
          *(_OWORD *)(v175 + 208) = v189;
          *(_OWORD *)(v175 + 224) = v190;
          *(_OWORD *)(v175 + 192) = v188;
        }
        unint64_t v229 = (_OWORD *)((v175 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v230 = (long long *)(((unint64_t)v176 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v231 = *v230;
        *(_OWORD *)((char *)v229 + 9) = *(long long *)((char *)v230 + 9);
        *unint64_t v229 = v231;
        unint64_t v232 = (v175 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v233 = ((unint64_t)v176 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v234 = *(_OWORD *)v233;
        *(unsigned char *)(v232 + 16) = *(unsigned char *)(v233 + 16);
        *(_OWORD *)unint64_t v232 = v234;
        unint64_t v235 = (void *)((v175 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v236 = ((unint64_t)v176 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v237 = *(void *)v236;
        v236 += 15;
        *unint64_t v235 = v237;
        uint64_t v238 = (void *)(((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v239 = *(void *)(v236 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v240 = *(void *)((v236 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v239, v240);
        char v139 = 0;
        *uint64_t v238 = v239;
        v238[1] = v240;
        unint64_t v241 = (void *)(((unint64_t)a1 + v367 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v242 = (void *)(((unint64_t)a2 + v367 + 7) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v241 = *v242;
        v241[1] = v242[1];
        break;
    }
    *((unsigned char *)a1 + v24) = v139;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_24D9B9778(uint64_t a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v278 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(unsigned __int8 *)(v278 + 80);
  uint64_t v271 = v3 + v4;
  uint64_t v273 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v273 - 8);
  uint64_t v275 = v5;
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = v5;
  uint64_t v9 = a2;
  uint64_t v276 = *(void *)(v7 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v276 + 80);
  uint64_t v11 = v6 | v10 | 7;
  uint64_t v269 = v3 + v11;
  uint64_t v270 = *(void *)(v8 + 64) + 7;
  uint64_t v272 = v10 + 8;
  uint64_t v274 = *(void *)(v276 + 64) + 7;
  unint64_t v12 = ((((v274 + ((v10 + 8 + (v270 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v13 = sub_24DCC8CE8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = *(void *)(v14 + 64);
  if (*(_DWORD *)(v14 + 84)) {
    size_t v17 = *(void *)(v14 + 64);
  }
  else {
    size_t v17 = v16 + 1;
  }
  unint64_t v18 = ((((((v15 | 7) + 16 + v12 + ((v3 + v11 + ((v3 + v4) & ~v4)) & ~v11)) & ~(v15 | 7))
         + ((((((((((v17
                   + 7
                   + ((v15
                     + 10
                     + ((((((v16 + ((v16 + v15 + ((v15 + 12) & ~v15)) & ~v15) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16
         + 311) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = v18 + 23;
  unint64_t v20 = ((v18 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v21 = v18 + 16;
  uint64_t v22 = v11 | v4 | v15;
  unint64_t v267 = v21;
  unint64_t v23 = v21 + v22;
  unint64_t v24 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v25 = ((((v19 + ((v21 + v22) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v24 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v24 > v20) {
    unint64_t v20 = v24;
  }
  if (v20 <= v25) {
    unint64_t v26 = v25;
  }
  else {
    unint64_t v26 = v20;
  }
  unsigned int v27 = *((unsigned __int8 *)v9 + v26);
  if (v27 >= 6 && v26 != 0) {
    unsigned int v27 = *v9 + 6;
  }
  uint64_t v29 = ~v4;
  switch(v27)
  {
    case 1u:
      unint64_t v246 = v26;
      uint64_t v233 = ~v22;
      unint64_t v237 = v19;
      size_t __na = v17;
      size_t v264 = v17 + 7;
      unint64_t v266 = ((((((((((v17
                     + 7
                     + ((v15
                       + 10
                       + ((((((v16 + ((v16 + v15 + ((v15 + 12) & ~v15)) & ~v15) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v268 = *(void *)(v14 + 64);
      unint64_t v249 = ((((v274 + ((v10 + 8 + (v270 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v60 = *(void (**)(uint64_t, unint64_t, uint64_t))(v278 + 32);
      uint64_t v254 = v7;
      uint64_t v241 = v13;
      uint64_t v248 = *(void *)(v13 - 8);
      uint64_t v256 = ~v15;
      uint64_t v260 = v16 + v15;
      uint64_t v262 = v15 + 10;
      uint64_t v258 = v15 + 12;
      uint64_t v251 = ~(v15 | 7);
      uint64_t v253 = (v15 | 7) + 16;
      v60(a1, (unint64_t)v9, AssociatedTypeWitness);
      unint64_t v61 = v9;
      uint64_t v62 = (v271 + a1) & v29;
      unint64_t v244 = v61;
      uint64_t v235 = v29;
      unint64_t v63 = ((unint64_t)v61 + v271) & v29;
      long long v234 = v60;
      v60(v62, v63, AssociatedTypeWitness);
      uint64_t v64 = (v62 + v3 + v11) & ~v11;
      uint64_t v236 = ~v11;
      unint64_t v65 = (v63 + v3 + v11) & ~v11;
      unint64_t v232 = *(void (**)(uint64_t, unint64_t, uint64_t))(v275 + 32);
      v232(v64, v65, v273);
      unint64_t v66 = (void *)((v270 + v64) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v67 = (void *)((v270 + v65) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v66 = *v67;
      unint64_t v68 = ((unint64_t)v66 + v272) & ~v10;
      uint64_t v242 = ~v10;
      unint64_t v69 = ((unint64_t)v67 + v272) & ~v10;
      long long v231 = *(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 32);
      v231(v68, v69, v254);
      unint64_t v70 = (void *)((v274 + v68) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v71 = (void *)((v274 + v69) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v70 = *v71;
      *(_OWORD *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v12 + v64) = *(_OWORD *)(v12 + v65);
      unint64_t v72 = (v253 + v12 + v64) & v251;
      unint64_t v73 = (v253 + v12 + v65) & v251;
      *(unsigned char *)unint64_t v72 = *(unsigned char *)v73;
      uint64_t v74 = v72 | 4;
      int v75 = *(_DWORD *)(v73 | 4);
      *(unsigned char *)(v74 + 4) = *(unsigned char *)((v73 | 4) + 4);
      *(_DWORD *)uint64_t v74 = v75;
      *(_WORD *)(v72 + 10) = *(_WORD *)(v73 + 0xA);
      unint64_t v76 = *(void (**)(unint64_t, unint64_t, uint64_t))(v248 + 32);
      v76((v258 + v72) & v256, (v258 + v73) & v256, v241);
      unint64_t v77 = (v260 + ((v258 + v72) & v256)) & v256;
      unint64_t v78 = (v260 + ((v258 + v73) & v256)) & v256;
      v76(v77, v78, v241);
      unint64_t v79 = (unsigned char *)(v77 + v268);
      *unint64_t v79 = *(unsigned char *)(v78 + v268);
      v79[1] = *(unsigned char *)(v78 + v268 + 1);
      v79[2] = *(unsigned char *)(v78 + v268 + 2);
      v79[3] = *(unsigned char *)(v78 + v268 + 3);
      v79[4] = *(unsigned char *)(v78 + v268 + 4);
      unint64_t v80 = (v77 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v81 = (v78 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v80 = *(_OWORD *)v81;
      *(unsigned char *)(v80 + 16) = *(unsigned char *)(v81 + 16);
      *(unsigned char *)(v80 + 17) = *(unsigned char *)(v81 + 17);
      *(unsigned char *)(v80 + 18) = *(unsigned char *)(v81 + 18);
      *(unsigned char *)(v80 + 19) = *(unsigned char *)(v81 + 19);
      unint64_t v82 = (v80 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v83 = (v81 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v82 = *(void *)v83;
      *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
      *(unsigned char *)(v82 + 9) = *(unsigned char *)(v83 + 9);
      *(unsigned char *)(v82 + 10) = *(unsigned char *)(v83 + 10);
      *(unsigned char *)(v82 + 11) = *(unsigned char *)(v83 + 11);
      *(unsigned char *)(v82 + 12) = *(unsigned char *)(v83 + 12);
      uint64_t v84 = (void *)((v81 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v85 = (void *)((v80 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v85 = *v84;
      unint64_t v86 = ((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v87 = ((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v86 = *(void *)v87;
      *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
      *(unsigned char *)(v86 + 9) = *(unsigned char *)(v87 + 9);
      unint64_t v88 = (void *)((v262 + v86) & v256);
      unint64_t v89 = (const void *)((v262 + v87) & v256);
      unint64_t v230 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v248 + 48);
      unint64_t v229 = v76;
      if (v230(v89, 1, v241))
      {
        memcpy(v88, v89, __na);
      }
      else
      {
        v76((unint64_t)v88, (unint64_t)v89, v241);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v248 + 56))(v88, 0, 1, v241);
      }
      unint64_t v129 = (void *)(((unint64_t)v88 + v264) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v130 = (void *)(((unint64_t)v89 + v264) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v129 = *v130;
      unint64_t v131 = ((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v132 = ((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v133 = *(void *)v132;
      *(unsigned char *)(v131 + 8) = *(unsigned char *)(v132 + 8);
      *(void *)unint64_t v131 = v133;
      unint64_t v134 = (void *)(((unint64_t)v129 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v135 = (void *)(((unint64_t)v130 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v134 = *v135;
      unint64_t v136 = (_OWORD *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v137 = (_OWORD *)(((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v136 = *v137;
      unint64_t v138 = ((unint64_t)v136 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v139 = ((unint64_t)v137 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v140 = *(void *)v139;
      *(unsigned char *)(v138 + 8) = *(unsigned char *)(v139 + 8);
      *(void *)unint64_t v138 = v140;
      *(unsigned char *)(v138 + 9) = *(unsigned char *)(v139 + 9);
      unint64_t v141 = (v138 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v142 = (v139 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v133) = *(_DWORD *)v142;
      *(unsigned char *)(v141 + 4) = *(unsigned char *)(v142 + 4);
      *(_DWORD *)unint64_t v141 = v133;
      *(_OWORD *)((v138 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v139 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v143 = v266 + v72;
      long long v144 = *(_OWORD *)(v266 + v73 + 112);
      long long v146 = *(_OWORD *)(v266 + v73 + 64);
      long long v145 = *(_OWORD *)(v266 + v73 + 80);
      *(_OWORD *)(v143 + 96) = *(_OWORD *)(v266 + v73 + 96);
      *(_OWORD *)(v143 + 112) = v144;
      *(_OWORD *)(v143 + 64) = v146;
      *(_OWORD *)(v143 + 80) = v145;
      long long v147 = *(_OWORD *)(v266 + v73 + 176);
      long long v149 = *(_OWORD *)(v266 + v73 + 128);
      long long v148 = *(_OWORD *)(v266 + v73 + 144);
      *(_OWORD *)(v143 + 160) = *(_OWORD *)(v266 + v73 + 160);
      *(_OWORD *)(v143 + 176) = v147;
      *(_OWORD *)(v143 + 128) = v149;
      *(_OWORD *)(v143 + 144) = v148;
      long long v151 = *(_OWORD *)(v266 + v73 + 208);
      long long v150 = *(_OWORD *)(v266 + v73 + 224);
      long long v152 = *(_OWORD *)(v266 + v73 + 192);
      *(void *)(v143 + 240) = *(void *)(v266 + v73 + 240);
      *(_OWORD *)(v143 + 208) = v151;
      *(_OWORD *)(v143 + 224) = v150;
      *(_OWORD *)(v143 + 192) = v152;
      long long v153 = *(_OWORD *)(v266 + v73);
      long long v154 = *(_OWORD *)(v266 + v73 + 16);
      long long v155 = *(_OWORD *)(v266 + v73 + 48);
      *(_OWORD *)(v143 + 32) = *(_OWORD *)(v266 + v73 + 32);
      *(_OWORD *)(v143 + 48) = v155;
      *(_OWORD *)unint64_t v143 = v153;
      *(_OWORD *)(v143 + 16) = v154;
      long long v156 = (_OWORD *)((v266 + v72 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v157 = (long long *)((v266 + v73 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v158 = *v157;
      *(_OWORD *)((char *)v156 + 9) = *(long long *)((char *)v157 + 9);
      *long long v156 = v158;
      unint64_t v159 = (v266 + v72 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v266 + v73 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v161 = *(_OWORD *)v160;
      *(unsigned char *)(v159 + 16) = *(unsigned char *)(v160 + 16);
      *(_OWORD *)unint64_t v159 = v161;
      unint64_t v162 = (void *)((v266 + v72 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v163 = (void *)((v266 + v73 + 311) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v162 = *v163;
      *(_OWORD *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v164 = (v23 + a1) & v233;
      unint64_t v165 = ((unint64_t)v244 + v23) & v233;
      v234(v164, v165, AssociatedTypeWitness);
      v234((v271 + v164) & v235, (v271 + v165) & v235, AssociatedTypeWitness);
      uint64_t v166 = (v269 + ((v271 + v164) & v235)) & v236;
      uint64_t v167 = (v269 + ((v271 + v165) & v235)) & v236;
      v232(v166, v167, v273);
      unint64_t v168 = (void *)((v270 + v166) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v169 = (void *)((v270 + v167) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v168 = *v169;
      unint64_t v170 = ((unint64_t)v168 + v272) & v242;
      unint64_t v171 = ((unint64_t)v169 + v272) & v242;
      v231(v170, v171, v254);
      int v172 = (void *)((v274 + v170) & 0xFFFFFFFFFFFFFFF8);
      long long v173 = (void *)((v274 + v171) & 0xFFFFFFFFFFFFFFF8);
      *int v172 = *v173;
      *(_OWORD *)(((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v166 + v249) = *(_OWORD *)(v167 + v249);
      unint64_t v174 = (v253 + v166 + v249) & v251;
      unint64_t v175 = (v253 + v167 + v249) & v251;
      *(unsigned char *)unint64_t v174 = *(unsigned char *)v175;
      uint64_t v176 = v174 | 4;
      int v177 = *(_DWORD *)(v175 | 4);
      *(unsigned char *)(v176 + 4) = *(unsigned char *)((v175 | 4) + 4);
      *(_DWORD *)uint64_t v176 = v177;
      *(_WORD *)(v174 + 10) = *(_WORD *)(v175 + 0xA);
      v229((v258 + v174) & v256, (v258 + v175) & v256, v241);
      unint64_t v178 = (v260 + ((v258 + v174) & v256)) & v256;
      unint64_t v179 = (v260 + ((v258 + v175) & v256)) & v256;
      v229(v178, v179, v241);
      long long v180 = (unsigned char *)(v178 + v268);
      *long long v180 = *(unsigned char *)(v179 + v268);
      v180[1] = *(unsigned char *)(v179 + v268 + 1);
      v180[2] = *(unsigned char *)(v179 + v268 + 2);
      v180[3] = *(unsigned char *)(v179 + v268 + 3);
      v180[4] = *(unsigned char *)(v179 + v268 + 4);
      unint64_t v181 = (v178 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v182 = (v179 + v268 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v181 = *(_OWORD *)v182;
      *(unsigned char *)(v181 + 16) = *(unsigned char *)(v182 + 16);
      *(unsigned char *)(v181 + 17) = *(unsigned char *)(v182 + 17);
      *(unsigned char *)(v181 + 18) = *(unsigned char *)(v182 + 18);
      *(unsigned char *)(v181 + 19) = *(unsigned char *)(v182 + 19);
      unint64_t v183 = (v181 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v184 = (v182 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v183 = *(void *)v184;
      *(unsigned char *)(v183 + 8) = *(unsigned char *)(v184 + 8);
      *(unsigned char *)(v183 + 9) = *(unsigned char *)(v184 + 9);
      *(unsigned char *)(v183 + 10) = *(unsigned char *)(v184 + 10);
      *(unsigned char *)(v183 + 11) = *(unsigned char *)(v184 + 11);
      *(unsigned char *)(v183 + 12) = *(unsigned char *)(v184 + 12);
      long long v185 = (void *)((v181 + 47) & 0xFFFFFFFFFFFFFFF8);
      long long v186 = (void *)((v182 + 47) & 0xFFFFFFFFFFFFFFF8);
      *long long v185 = *v186;
      unint64_t v187 = ((unint64_t)v185 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v188 = ((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v187 = *(void *)v188;
      *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
      *(unsigned char *)(v187 + 9) = *(unsigned char *)(v188 + 9);
      long long v189 = (void *)((v262 + v187) & v256);
      long long v190 = (const void *)((v262 + v188) & v256);
      if (v230(v190, 1, v241))
      {
        memcpy(v189, v190, __na);
      }
      else
      {
        v229((unint64_t)v189, (unint64_t)v190, v241);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v248 + 56))(v189, 0, 1, v241);
      }
      uint64_t v191 = (void *)(((unint64_t)v189 + v264) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v192 = (void *)(((unint64_t)v190 + v264) & 0xFFFFFFFFFFFFFFF8);
      void *v191 = *v192;
      unint64_t v193 = ((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v194 = ((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v195 = *(void *)v194;
      *(unsigned char *)(v193 + 8) = *(unsigned char *)(v194 + 8);
      *(void *)unint64_t v193 = v195;
      unint64_t v196 = (void *)(((unint64_t)v191 + 31) & 0xFFFFFFFFFFFFFFF8);
      int v197 = (void *)(((unint64_t)v192 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v196 = *v197;
      unint64_t v198 = (_OWORD *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v199 = (_OWORD *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v198 = *v199;
      unint64_t v200 = ((unint64_t)v198 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v201 = ((unint64_t)v199 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v202 = *(void *)v201;
      *(unsigned char *)(v200 + 8) = *(unsigned char *)(v201 + 8);
      *(void *)unint64_t v200 = v202;
      *(unsigned char *)(v200 + 9) = *(unsigned char *)(v201 + 9);
      unint64_t v203 = (v200 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v204 = (v201 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v195) = *(_DWORD *)v204;
      *(unsigned char *)(v203 + 4) = *(unsigned char *)(v204 + 4);
      *(_DWORD *)unint64_t v203 = v195;
      *(_OWORD *)((v200 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v201 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v205 = v174 + v266;
      long long v206 = *(_OWORD *)(v175 + v266 + 112);
      long long v208 = *(_OWORD *)(v175 + v266 + 64);
      long long v207 = *(_OWORD *)(v175 + v266 + 80);
      *(_OWORD *)(v205 + 96) = *(_OWORD *)(v175 + v266 + 96);
      *(_OWORD *)(v205 + 112) = v206;
      *(_OWORD *)(v205 + 64) = v208;
      *(_OWORD *)(v205 + 80) = v207;
      long long v209 = *(_OWORD *)(v175 + v266 + 176);
      long long v211 = *(_OWORD *)(v175 + v266 + 128);
      long long v210 = *(_OWORD *)(v175 + v266 + 144);
      *(_OWORD *)(v205 + 160) = *(_OWORD *)(v175 + v266 + 160);
      *(_OWORD *)(v205 + 176) = v209;
      *(_OWORD *)(v205 + 128) = v211;
      *(_OWORD *)(v205 + 144) = v210;
      long long v213 = *(_OWORD *)(v175 + v266 + 208);
      long long v212 = *(_OWORD *)(v175 + v266 + 224);
      long long v214 = *(_OWORD *)(v175 + v266 + 192);
      *(void *)(v205 + 240) = *(void *)(v175 + v266 + 240);
      *(_OWORD *)(v205 + 208) = v213;
      *(_OWORD *)(v205 + 224) = v212;
      *(_OWORD *)(v205 + 192) = v214;
      long long v215 = *(_OWORD *)(v175 + v266);
      long long v216 = *(_OWORD *)(v175 + v266 + 16);
      long long v217 = *(_OWORD *)(v175 + v266 + 48);
      *(_OWORD *)(v205 + 32) = *(_OWORD *)(v175 + v266 + 32);
      *(_OWORD *)(v205 + 48) = v217;
      *(_OWORD *)unint64_t v205 = v215;
      *(_OWORD *)(v205 + 16) = v216;
      id v218 = (_OWORD *)((v174 + v266 + 255) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v219 = (long long *)((v175 + v266 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v220 = *v219;
      *(_OWORD *)((char *)v218 + 9) = *(long long *)((char *)v219 + 9);
      *id v218 = v220;
      unint64_t v221 = (v174 + v266 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v222 = (v175 + v266 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v223 = *(_OWORD *)v222;
      *(unsigned char *)(v221 + 16) = *(unsigned char *)(v222 + 16);
      *(_OWORD *)unint64_t v221 = v223;
      unint64_t v224 = (void *)((v175 + v266 + 311) & 0xFFFFFFFFFFFFFFF8);
      id v225 = (void *)((v174 + v266 + 311) & 0xFFFFFFFFFFFFFFF8);
      *id v225 = *v224;
      *(_OWORD *)(((unint64_t)v225 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v226 = (void *)((v237 + v165) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v227 = (void *)((v237 + v164) & 0xFFFFFFFFFFFFFFF8);
      void *v227 = *v226;
      uint64_t v91 = (_OWORD *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v92 = (_OWORD *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v93 = 1;
      uint64_t v90 = a1;
      unint64_t v26 = v246;
      break;
    case 2u:
      uint64_t v90 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32))(a1, v9, AssociatedTypeWitness);
      *(unsigned char *)(v3 + a1) = *((unsigned char *)v9 + v3);
      uint64_t v91 = (_OWORD *)(((v3 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
      unint64_t v92 = (_OWORD *)((((unint64_t)v9 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
      char v93 = 2;
      break;
    case 3u:
      uint64_t v90 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32))(a1, v9, AssociatedTypeWitness);
      uint64_t v91 = (_OWORD *)((a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v92 = (_OWORD *)(((unint64_t)v9 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      char v93 = 3;
      break;
    case 4u:
      uint64_t v90 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32))(a1, v9, AssociatedTypeWitness);
      *(unsigned char *)(v3 + a1) = *((unsigned char *)v9 + v3);
      uint64_t v91 = (_OWORD *)(((v3 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
      unint64_t v92 = (_OWORD *)((((unint64_t)v9 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
      char v93 = 4;
      break;
    case 5u:
      uint64_t v90 = a1;
      (*(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32))(a1, v9, AssociatedTypeWitness);
      uint64_t v91 = (_OWORD *)((a1 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v92 = (_OWORD *)(((unint64_t)v9 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
      char v93 = 5;
      break;
    default:
      size_t __n = v17;
      size_t v263 = v17 + 7;
      unint64_t v265 = ((((((((((v17
                     + 7
                     + ((v15
                       + 10
                       + ((((((v16 + ((v16 + v15 + ((v15 + 12) & ~v15)) & ~v15) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v15)) & 0xFFFFFFFFFFFFFFF8)
                   + 31) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 19) & 0xFFFFFFFFFFFFFFF8)
             + 25) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v245 = v26;
      unint64_t v30 = *(void (**)(uint64_t, _DWORD *, uint64_t))(v278 + 32);
      uint64_t v240 = v13;
      uint64_t v247 = *(void *)(v13 - 8);
      uint64_t v259 = v16 + v15;
      uint64_t v261 = v15 + 10;
      uint64_t v255 = ~v15;
      uint64_t v257 = v15 + 12;
      uint64_t v250 = ~(v15 | 7);
      uint64_t v252 = (v15 | 7) + 16;
      v30(a1, v9, AssociatedTypeWitness);
      unint64_t v31 = v9;
      uint64_t v32 = (v271 + a1) & v29;
      unint64_t v243 = v31;
      unint64_t v33 = ((unint64_t)v31 + v271) & v29;
      v30(v32, (_DWORD *)v33, AssociatedTypeWitness);
      uint64_t v34 = (v32 + v3 + v11) & ~v11;
      unint64_t v35 = (v33 + v3 + v11) & ~v11;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v275 + 32))(v34, v35, v273);
      unint64_t v36 = (void *)((v270 + v34) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v37 = (void *)((v270 + v35) & 0xFFFFFFFFFFFFFFF8);
      void *v36 = *v37;
      unint64_t v38 = ((unint64_t)v36 + v272) & ~v10;
      unint64_t v39 = ((unint64_t)v37 + v272) & ~v10;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v276 + 32))(v38, v39, v7);
      unint64_t v40 = (void *)((v274 + v38) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v41 = (void *)((v274 + v39) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v40 = *v41;
      *(_OWORD *)(((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v12 + v34) = *(_OWORD *)(v12 + v35);
      unint64_t v42 = (v252 + v12 + v34) & v250;
      unint64_t v43 = (v252 + v12 + v35) & v250;
      *(unsigned char *)unint64_t v42 = *(unsigned char *)v43;
      uint64_t v44 = v42 | 4;
      int v45 = *(_DWORD *)(v43 | 4);
      *(unsigned char *)(v44 + 4) = *(unsigned char *)((v43 | 4) + 4);
      *(_DWORD *)uint64_t v44 = v45;
      *(_WORD *)(v42 + 10) = *(_WORD *)(v43 + 0xA);
      unint64_t v46 = *(void (**)(unint64_t, unint64_t, uint64_t))(v247 + 32);
      v46((v257 + v42) & v255, (v257 + v43) & v255, v240);
      unint64_t v47 = (v259 + ((v257 + v42) & v255)) & v255;
      unint64_t v48 = (v259 + ((v257 + v43) & v255)) & v255;
      v46(v47, v48, v240);
      unint64_t v49 = (unsigned char *)(v47 + v16);
      *unint64_t v49 = *(unsigned char *)(v48 + v16);
      v49[1] = *(unsigned char *)(v48 + v16 + 1);
      v49[2] = *(unsigned char *)(v48 + v16 + 2);
      v49[3] = *(unsigned char *)(v48 + v16 + 3);
      v49[4] = *(unsigned char *)(v48 + v16 + 4);
      unint64_t v50 = (v47 + v16 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v51 = (v48 + v16 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v50 = *(_OWORD *)v51;
      *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
      *(unsigned char *)(v50 + 17) = *(unsigned char *)(v51 + 17);
      *(unsigned char *)(v50 + 18) = *(unsigned char *)(v51 + 18);
      *(unsigned char *)(v50 + 19) = *(unsigned char *)(v51 + 19);
      unint64_t v52 = (v50 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v53 = (v51 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v52 = *(void *)v53;
      *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
      *(unsigned char *)(v52 + 9) = *(unsigned char *)(v53 + 9);
      *(unsigned char *)(v52 + 10) = *(unsigned char *)(v53 + 10);
      *(unsigned char *)(v52 + 11) = *(unsigned char *)(v53 + 11);
      *(unsigned char *)(v52 + 12) = *(unsigned char *)(v53 + 12);
      unint64_t v54 = (void *)((v51 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v55 = (void *)((v50 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v55 = *v54;
      unint64_t v56 = ((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v57 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v56 = *(void *)v57;
      *(unsigned char *)(v56 + 8) = *(unsigned char *)(v57 + 8);
      *(unsigned char *)(v56 + 9) = *(unsigned char *)(v57 + 9);
      unint64_t v58 = (void *)((v261 + v56) & v255);
      uint64_t v59 = (const void *)((v261 + v57) & v255);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v247 + 48))(v59, 1, v240))
      {
        memcpy(v58, v59, __n);
      }
      else
      {
        v46((unint64_t)v58, (unint64_t)v59, v240);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v247 + 56))(v58, 0, 1, v240);
      }
      char v93 = 0;
      unint64_t v94 = (void *)(((unint64_t)v58 + v263) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v95 = (void *)(((unint64_t)v59 + v263) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v94 = *v95;
      unint64_t v96 = ((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v97 = ((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v98 = *(void *)v97;
      *(unsigned char *)(v96 + 8) = *(unsigned char *)(v97 + 8);
      *(void *)unint64_t v96 = v98;
      unint64_t v99 = (void *)(((unint64_t)v94 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v100 = (void *)(((unint64_t)v95 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v99 = *v100;
      uint64_t v101 = (_OWORD *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v102 = (_OWORD *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v101 = *v102;
      unint64_t v103 = ((unint64_t)v101 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v104 = ((unint64_t)v102 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v105 = *(void *)v104;
      *(unsigned char *)(v103 + 8) = *(unsigned char *)(v104 + 8);
      *(void *)unint64_t v103 = v105;
      *(unsigned char *)(v103 + 9) = *(unsigned char *)(v104 + 9);
      unint64_t v106 = (v103 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v107 = (v104 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v98) = *(_DWORD *)v107;
      *(unsigned char *)(v106 + 4) = *(unsigned char *)(v107 + 4);
      *(_DWORD *)unint64_t v106 = v98;
      *(_OWORD *)((v103 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v104 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v108 = v265 + v42;
      long long v109 = *(_OWORD *)(v265 + v43 + 112);
      long long v111 = *(_OWORD *)(v265 + v43 + 64);
      long long v110 = *(_OWORD *)(v265 + v43 + 80);
      *(_OWORD *)(v108 + 96) = *(_OWORD *)(v265 + v43 + 96);
      *(_OWORD *)(v108 + 112) = v109;
      *(_OWORD *)(v108 + 64) = v111;
      *(_OWORD *)(v108 + 80) = v110;
      long long v112 = *(_OWORD *)(v265 + v43 + 176);
      long long v114 = *(_OWORD *)(v265 + v43 + 128);
      long long v113 = *(_OWORD *)(v265 + v43 + 144);
      *(_OWORD *)(v108 + 160) = *(_OWORD *)(v265 + v43 + 160);
      *(_OWORD *)(v108 + 176) = v112;
      *(_OWORD *)(v108 + 128) = v114;
      *(_OWORD *)(v108 + 144) = v113;
      long long v116 = *(_OWORD *)(v265 + v43 + 208);
      long long v115 = *(_OWORD *)(v265 + v43 + 224);
      long long v117 = *(_OWORD *)(v265 + v43 + 192);
      *(void *)(v108 + 240) = *(void *)(v265 + v43 + 240);
      *(_OWORD *)(v108 + 208) = v116;
      *(_OWORD *)(v108 + 224) = v115;
      *(_OWORD *)(v108 + 192) = v117;
      long long v118 = *(_OWORD *)(v265 + v43);
      long long v119 = *(_OWORD *)(v265 + v43 + 16);
      long long v120 = *(_OWORD *)(v265 + v43 + 48);
      *(_OWORD *)(v108 + 32) = *(_OWORD *)(v265 + v43 + 32);
      *(_OWORD *)(v108 + 48) = v120;
      *(_OWORD *)unint64_t v108 = v118;
      *(_OWORD *)(v108 + 16) = v119;
      unint64_t v121 = (_OWORD *)((v265 + v42 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v122 = (long long *)((v265 + v43 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v123 = *v122;
      *(_OWORD *)((char *)v121 + 9) = *(long long *)((char *)v122 + 9);
      *unint64_t v121 = v123;
      unint64_t v124 = (v265 + v42 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v125 = (v265 + v43 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v126 = *(_OWORD *)v125;
      *(unsigned char *)(v124 + 16) = *(unsigned char *)(v125 + 16);
      *(_OWORD *)unint64_t v124 = v126;
      unint64_t v127 = (void *)((v265 + v42 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v128 = (void *)((v265 + v43 + 311) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v127 = *v128;
      *(_OWORD *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v90 = a1;
      uint64_t v91 = (_OWORD *)((a1 + v267 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v26 = v245;
      unint64_t v92 = (_OWORD *)(((unint64_t)v243 + v267 + 7) & 0xFFFFFFFFFFFFFFF8);
      break;
  }
  *uint64_t v91 = *v92;
  *(unsigned char *)(v90 + v26) = v93;
  return v90;
}

_DWORD *sub_24D9BAB50(_DWORD *a1, _DWORD *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v309 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = *(unsigned __int8 *)(v309 + 80);
    uint64_t v293 = v3 + v4;
    uint64_t v5 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v295 = v6;
    uint64_t v296 = v5;
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v299 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v299 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v279 = v3 + v10;
    uint64_t v292 = *(void *)(v6 + 64) + 7;
    uint64_t v294 = v9 + 8;
    uint64_t v297 = *(void *)(v8 + 64) + 7;
    unint64_t v300 = ((((v297 + ((v9 + 8 + (v292 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v305 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v305 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v298 = (v12 | 7) + 16;
    uint64_t v301 = v12 + 12;
    uint64_t v13 = *(void *)(v11 + 64);
    uint64_t v302 = v13 + v12;
    uint64_t v304 = v12 + 10;
    if (*(_DWORD *)(v11 + 84)) {
      size_t v14 = *(void *)(*(void *)(v305 - 8) + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    size_t __n = v14;
    size_t v15 = v14 + 7;
    unint64_t v16 = ((((((((((v14
                  + 7
                  + ((v12
                    + 10
                    + ((((((v13 + 12 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v17 = (((((v298 + v300 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v12 | 7)) + v16 + 311) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = v17 + 23;
    unint64_t v19 = ((v17 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v20 = v17 + 16;
    uint64_t v21 = v10 | v4 | v12;
    unint64_t v277 = v20;
    unint64_t v278 = v20 + v21;
    unint64_t v22 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
    unint64_t v280 = v18;
    unint64_t v23 = ((((v18 + ((v20 + v21) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v22 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v22 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v22 > v19) {
      unint64_t v19 = v22;
    }
    if (v19 > v23) {
      unint64_t v23 = v19;
    }
    unsigned int v24 = *((unsigned __int8 *)v2 + v23);
    unint64_t v308 = v23;
    if (v24 >= 6 && v23 != 0) {
      unsigned int v24 = *v2 + 6;
    }
    uint64_t v288 = ~v4;
    uint64_t v289 = ~v10;
    uint64_t v290 = ~v9;
    uint64_t v291 = ~(v12 | 7);
    uint64_t v303 = ~v12;
    uint64_t v276 = ~v21;
    unint64_t v27 = v23;
    uint64_t v26 = v309;
    uint64_t v283 = v8;
    switch(v24)
    {
      case 1u:
        size_t v285 = v15;
        uint64_t v41 = *(void (**)(unint64_t, uint64_t))(v309 + 8);
        v41((unint64_t)v2, AssociatedTypeWitness);
        unint64_t v265 = v41;
        v41(((unint64_t)v2 + v293) & v288, AssociatedTypeWitness);
        unint64_t v42 = ((((unint64_t)v2 + v293) & v288) + v3 + v10) & v289;
        uint64_t v262 = *(void (**)(unint64_t, uint64_t))(v295 + 8);
        v262(v42, v296);
        swift_bridgeObjectRelease();
        uint64_t v261 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
        v261((v294 + ((v292 + v42) & 0xFFFFFFFFFFFFFFF8)) & v290, v299);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v258 = (v298 + v300 + v42) & v291;
        unint64_t v43 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
        v43((v301 + v258) & v303, v305);
        unint64_t v44 = (v302 + ((v301 + v258) & v303)) & v303;
        uint64_t v268 = v43;
        v43(v44, v305);
        swift_bridgeObjectRelease();
        unint64_t v45 = (v304
             + ((((((v13 + 12 + v44) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v303;
        uint64_t v272 = v11;
        uint64_t v260 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48);
        if (!v260(v45, 1, v305)) {
          v43(v45, v305);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v46 = (uint64_t *)((((((v285 + v45) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v47 = v46[1];
        if ((v47 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v46, v47);
        }
        swift_bridgeObjectRelease();
        unint64_t v48 = v16 + v258;
        unint64_t v49 = *(void **)(v16 + v258 + 16);
        LODWORD(v50) = -1;
        if ((unint64_t)v49 < 0xFFFFFFFF) {
          uint64_t v50 = *(void *)(v16 + v258 + 16);
        }
        if ((int)v50 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v48 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v48 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v48 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        v265(((unint64_t)v2 + v278) & v276, AssociatedTypeWitness);
        unint64_t v259 = ((unint64_t)v2 + v278) & v276;
        v265((v293 + v259) & v288, AssociatedTypeWitness);
        unint64_t v51 = (v279 + ((v293 + v259) & v288)) & v289;
        v262(v51, v296);
        swift_bridgeObjectRelease();
        v261((v294 + ((v292 + v51) & 0xFFFFFFFFFFFFFFF8)) & v290, v299);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v52 = (v298 + v51 + v300) & v291;
        v268((v301 + v52) & v303, v305);
        unint64_t v53 = (v302 + ((v301 + v52) & v303)) & v303;
        v268(v53, v305);
        swift_bridgeObjectRelease();
        unint64_t v54 = (v304
             + ((((((v13 + 12 + v53) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v303;
        if (!v260(v54, 1, v305)) {
          v268(v54, v305);
        }
        size_t v15 = v285;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v55 = (uint64_t *)((((((v285 + v54) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v56 = v55[1];
        uint64_t v28 = a2;
        if ((v56 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v55, v56);
        }
        swift_bridgeObjectRelease();
        unint64_t v38 = v52 + v16;
        unint64_t v57 = *(void **)(v52 + v16 + 16);
        LODWORD(v58) = -1;
        if ((unint64_t)v57 < 0xFFFFFFFF) {
          uint64_t v58 = *(void *)(v52 + v16 + 16);
        }
        uint64_t v11 = v272;
        unint64_t v27 = v308;
        if ((int)v58 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v38 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_49;
      case 2u:
      case 3u:
      case 4u:
      case 5u:
        (*(void (**)(_DWORD *, uint64_t))(v309 + 8))(v2, AssociatedTypeWitness);
        uint64_t v28 = a2;
        break;
      default:
        size_t v284 = v15;
        unint64_t v281 = v16;
        uint64_t v29 = *(void (**)(_DWORD *, uint64_t))(v309 + 8);
        v29(v2, AssociatedTypeWitness);
        v29((_DWORD *)(((unint64_t)v2 + v293) & v288), AssociatedTypeWitness);
        unint64_t v30 = ((((unint64_t)v2 + v293) & v288) + v3 + v10) & v289;
        (*(void (**)(unint64_t, uint64_t))(v295 + 8))(v30, v296);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v8 + 8))((v294 + ((v292 + v30) & 0xFFFFFFFFFFFFFFF8)) & v290, v299);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v269 = (v298 + v300 + v30) & v291;
        unint64_t v31 = *(void (**)(unint64_t, uint64_t))(v11 + 8);
        v31((v301 + v269) & v303, v305);
        unint64_t v32 = (v302 + ((v301 + v269) & v303)) & v303;
        v31(v32, v305);
        swift_bridgeObjectRelease();
        unint64_t v33 = (v304
             + ((((((v13 + 12 + v32) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v303;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v33, 1, v305)) {
          v31(v33, v305);
        }
        size_t v34 = v284 + v33;
        size_t v15 = v284;
        unint64_t v35 = (v34 & 0xFFFFFFFFFFFFFFF8) + 31;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v36 = (uint64_t *)(((v35 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v37 = v36[1];
        if ((v37 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v36, v37);
        }
        swift_bridgeObjectRelease();
        unint64_t v16 = v281;
        unint64_t v38 = v281 + v269;
        unint64_t v39 = *(void **)(v281 + v269 + 16);
        LODWORD(v40) = -1;
        if ((unint64_t)v39 < 0xFFFFFFFF) {
          uint64_t v40 = *(void *)(v281 + v269 + 16);
        }
        uint64_t v28 = a2;
        unint64_t v27 = v308;
        if ((int)v40 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v38 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_49:
        sub_24D466534(*(void *)((((v38 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v38 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v26 = v309;
        break;
    }
    swift_bridgeObjectRelease();
    unsigned int v59 = *((unsigned __int8 *)v28 + v27);
    if (v59 >= 6 && v27 != 0) {
      unsigned int v59 = *v28 + 6;
    }
    switch(v59)
    {
      case 1u:
        size_t v287 = v15;
        uint64_t v91 = *(void (**)(unint64_t, unint64_t, uint64_t))(v26 + 32);
        v91((unint64_t)v2, (unint64_t)v28, AssociatedTypeWitness);
        size_t v264 = v2;
        unint64_t v92 = ((unint64_t)v2 + v293) & v288;
        unint64_t v266 = v91;
        v91(v92, ((unint64_t)v28 + v293) & v288, AssociatedTypeWitness);
        unint64_t v93 = (v92 + v3 + v10) & v289;
        unint64_t v94 = ((((unint64_t)v28 + v293) & v288) + v3 + v10) & v289;
        size_t v263 = *(void (**)(unint64_t, unint64_t, uint64_t))(v295 + 32);
        v263(v93, v94, v296);
        unint64_t v95 = (void *)((v292 + v93) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v96 = (void *)((v292 + v94) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v95 = *v96;
        uint64_t v97 = v11;
        unint64_t v98 = ((unint64_t)v95 + v294) & v290;
        unint64_t v99 = ((unint64_t)v96 + v294) & v290;
        uint64_t v270 = *(void (**)(unint64_t, unint64_t, uint64_t))(v283 + 32);
        v270(v98, v99, v299);
        uint64_t v100 = (void *)((v297 + v98) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v101 = (void *)((v297 + v99) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v100 = *v101;
        *(_OWORD *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v101 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v300 + v93) = *(_OWORD *)(v300 + v94);
        unint64_t v102 = (v298 + v300 + v93) & v291;
        unint64_t v103 = (v298 + v300 + v94) & v291;
        *(unsigned char *)unint64_t v102 = *(unsigned char *)v103;
        uint64_t v104 = v102 | 4;
        int v105 = *(_DWORD *)(v103 | 4);
        *(unsigned char *)(v104 + 4) = *(unsigned char *)((v103 | 4) + 4);
        *(_DWORD *)uint64_t v104 = v105;
        *(_WORD *)(v102 + 10) = *(_WORD *)(v103 + 0xA);
        unint64_t v106 = *(void (**)(unint64_t, unint64_t, uint64_t))(v97 + 32);
        v106((v301 + v102) & v303, (v301 + v103) & v303, v305);
        unint64_t v107 = (v302 + ((v301 + v102) & v303)) & v303;
        unint64_t v108 = (v302 + ((v301 + v103) & v303)) & v303;
        v106(v107, v108, v305);
        long long v109 = (unsigned char *)(v107 + v13);
        *long long v109 = *(unsigned char *)(v108 + v13);
        v109[1] = *(unsigned char *)(v108 + v13 + 1);
        v109[2] = *(unsigned char *)(v108 + v13 + 2);
        v109[3] = *(unsigned char *)(v108 + v13 + 3);
        v109[4] = *(unsigned char *)(v108 + v13 + 4);
        unint64_t v110 = (v107 + v13 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v111 = (v108 + v13 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v110 = *(_OWORD *)v111;
        *(unsigned char *)(v110 + 16) = *(unsigned char *)(v111 + 16);
        *(unsigned char *)(v110 + 17) = *(unsigned char *)(v111 + 17);
        *(unsigned char *)(v110 + 18) = *(unsigned char *)(v111 + 18);
        *(unsigned char *)(v110 + 19) = *(unsigned char *)(v111 + 19);
        unint64_t v112 = (v110 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v113 = (v111 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v112 = *(void *)v113;
        *(unsigned char *)(v112 + 8) = *(unsigned char *)(v113 + 8);
        *(unsigned char *)(v112 + 9) = *(unsigned char *)(v113 + 9);
        *(unsigned char *)(v112 + 10) = *(unsigned char *)(v113 + 10);
        *(unsigned char *)(v112 + 11) = *(unsigned char *)(v113 + 11);
        *(unsigned char *)(v112 + 12) = *(unsigned char *)(v113 + 12);
        long long v114 = (void *)((v111 + 47) & 0xFFFFFFFFFFFFFFF8);
        long long v115 = (void *)((v110 + 47) & 0xFFFFFFFFFFFFFFF8);
        *long long v115 = *v114;
        unint64_t v116 = ((unint64_t)v115 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v117 = ((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v116 = *(void *)v117;
        *(unsigned char *)(v116 + 8) = *(unsigned char *)(v117 + 8);
        *(unsigned char *)(v116 + 9) = *(unsigned char *)(v117 + 9);
        long long v118 = (void *)((v304 + v116) & v303);
        long long v119 = (const void *)((v304 + v117) & v303);
        uint64_t v271 = v13;
        uint64_t v274 = v97;
        unint64_t v267 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v97 + 48);
        if (v267(v119, 1, v305))
        {
          memcpy(v118, v119, __n);
        }
        else
        {
          v106((unint64_t)v118, (unint64_t)v119, v305);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v97 + 56))(v118, 0, 1, v305);
        }
        uint64_t v2 = v264;
        long long v158 = (void *)(((unint64_t)v118 + v287) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v159 = (void *)(((unint64_t)v119 + v287) & 0xFFFFFFFFFFFFFFF8);
        *long long v158 = *v159;
        unint64_t v160 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v162 = *(void *)v161;
        *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
        *(void *)unint64_t v160 = v162;
        unint64_t v163 = (void *)(((unint64_t)v158 + 31) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v164 = (void *)(((unint64_t)v159 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v163 = *v164;
        unint64_t v165 = (_OWORD *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v166 = (_OWORD *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v165 = *v166;
        unint64_t v167 = ((unint64_t)v165 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v168 = ((unint64_t)v166 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v169 = *(void *)v168;
        *(unsigned char *)(v167 + 8) = *(unsigned char *)(v168 + 8);
        *(void *)unint64_t v167 = v169;
        *(unsigned char *)(v167 + 9) = *(unsigned char *)(v168 + 9);
        unint64_t v170 = (v167 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v171 = (v168 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v162) = *(_DWORD *)v171;
        *(unsigned char *)(v170 + 4) = *(unsigned char *)(v171 + 4);
        *(_DWORD *)unint64_t v170 = v162;
        *(_OWORD *)((v167 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v168 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v172 = v16 + v102;
        long long v173 = *(_OWORD *)(v16 + v103 + 112);
        long long v175 = *(_OWORD *)(v16 + v103 + 64);
        long long v174 = *(_OWORD *)(v16 + v103 + 80);
        *(_OWORD *)(v172 + 96) = *(_OWORD *)(v16 + v103 + 96);
        *(_OWORD *)(v172 + 112) = v173;
        *(_OWORD *)(v172 + 64) = v175;
        *(_OWORD *)(v172 + 80) = v174;
        long long v176 = *(_OWORD *)(v16 + v103 + 176);
        long long v178 = *(_OWORD *)(v16 + v103 + 128);
        long long v177 = *(_OWORD *)(v16 + v103 + 144);
        *(_OWORD *)(v172 + 160) = *(_OWORD *)(v16 + v103 + 160);
        *(_OWORD *)(v172 + 176) = v176;
        *(_OWORD *)(v172 + 128) = v178;
        *(_OWORD *)(v172 + 144) = v177;
        long long v180 = *(_OWORD *)(v16 + v103 + 208);
        long long v179 = *(_OWORD *)(v16 + v103 + 224);
        long long v181 = *(_OWORD *)(v16 + v103 + 192);
        *(void *)(v172 + 240) = *(void *)(v16 + v103 + 240);
        *(_OWORD *)(v172 + 208) = v180;
        *(_OWORD *)(v172 + 224) = v179;
        *(_OWORD *)(v172 + 192) = v181;
        long long v182 = *(_OWORD *)(v16 + v103);
        long long v183 = *(_OWORD *)(v16 + v103 + 16);
        long long v184 = *(_OWORD *)(v16 + v103 + 48);
        *(_OWORD *)(v172 + 32) = *(_OWORD *)(v16 + v103 + 32);
        *(_OWORD *)(v172 + 48) = v184;
        *(_OWORD *)unint64_t v172 = v182;
        *(_OWORD *)(v172 + 16) = v183;
        long long v185 = (_OWORD *)((v16 + v102 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v186 = (long long *)((v16 + v103 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v187 = *v186;
        *(_OWORD *)((char *)v185 + 9) = *(long long *)((char *)v186 + 9);
        *long long v185 = v187;
        unint64_t v188 = (v16 + v102 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v189 = (v16 + v103 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v190 = *(_OWORD *)v189;
        *(unsigned char *)(v188 + 16) = *(unsigned char *)(v189 + 16);
        *(_OWORD *)unint64_t v188 = v190;
        uint64_t v191 = (void *)((v16 + v102 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v192 = (void *)((v16 + v103 + 311) & 0xFFFFFFFFFFFFFFF8);
        void *v191 = *v192;
        *(_OWORD *)(((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v193 = ((unint64_t)v264 + v278) & v276;
        v266(v193, ((unint64_t)a2 + v278) & v276, AssociatedTypeWitness);
        unint64_t v307 = ((unint64_t)a2 + v278) & v276;
        unint64_t v194 = (v293 + v307) & v288;
        v266((v293 + v193) & v288, v194, AssociatedTypeWitness);
        unint64_t v195 = (v279 + ((v293 + v193) & v288)) & v289;
        uint64_t v196 = (v279 + v194) & v289;
        v263(v195, v196, v296);
        int v197 = (void *)((v292 + v195) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v198 = (void *)((v292 + v196) & 0xFFFFFFFFFFFFFFF8);
        *int v197 = *v198;
        unint64_t v199 = ((unint64_t)v197 + v294) & v290;
        unint64_t v200 = ((unint64_t)v198 + v294) & v290;
        v270(v199, v200, v299);
        unint64_t v201 = (void *)((v297 + v199) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v202 = (void *)((v297 + v200) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v201 = *v202;
        *(_OWORD *)(((unint64_t)v201 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v195 + v300) = *(_OWORD *)(v196 + v300);
        unint64_t v203 = (v298 + v195 + v300) & v291;
        unint64_t v204 = (v298 + v196 + v300) & v291;
        *(unsigned char *)unint64_t v203 = *(unsigned char *)v204;
        uint64_t v205 = v203 | 4;
        int v206 = *(_DWORD *)(v204 | 4);
        *(unsigned char *)(v205 + 4) = *(unsigned char *)((v204 | 4) + 4);
        *(_DWORD *)uint64_t v205 = v206;
        *(_WORD *)(v203 + 10) = *(_WORD *)(v204 + 0xA);
        v106((v301 + v203) & v303, (v301 + v204) & v303, v305);
        unint64_t v207 = (v302 + ((v301 + v203) & v303)) & v303;
        unint64_t v208 = (v302 + ((v301 + v204) & v303)) & v303;
        v106(v207, v208, v305);
        long long v209 = (unsigned char *)(v207 + v271);
        unsigned char *v209 = *(unsigned char *)(v208 + v271);
        v209[1] = *(unsigned char *)(v208 + v271 + 1);
        v209[2] = *(unsigned char *)(v208 + v271 + 2);
        v209[3] = *(unsigned char *)(v208 + v271 + 3);
        v209[4] = *(unsigned char *)(v208 + v271 + 4);
        unint64_t v210 = (v207 + v271 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v211 = (v208 + v271 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v210 = *(_OWORD *)v211;
        *(unsigned char *)(v210 + 16) = *(unsigned char *)(v211 + 16);
        *(unsigned char *)(v210 + 17) = *(unsigned char *)(v211 + 17);
        *(unsigned char *)(v210 + 18) = *(unsigned char *)(v211 + 18);
        *(unsigned char *)(v210 + 19) = *(unsigned char *)(v211 + 19);
        unint64_t v212 = (v210 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v213 = (v211 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v212 = *(void *)v213;
        *(unsigned char *)(v212 + 8) = *(unsigned char *)(v213 + 8);
        *(unsigned char *)(v212 + 9) = *(unsigned char *)(v213 + 9);
        *(unsigned char *)(v212 + 10) = *(unsigned char *)(v213 + 10);
        *(unsigned char *)(v212 + 11) = *(unsigned char *)(v213 + 11);
        *(unsigned char *)(v212 + 12) = *(unsigned char *)(v213 + 12);
        long long v214 = (void *)((v210 + 47) & 0xFFFFFFFFFFFFFFF8);
        long long v215 = (void *)((v211 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v214 = *v215;
        unint64_t v216 = ((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v217 = ((unint64_t)v215 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v216 = *(void *)v217;
        *(unsigned char *)(v216 + 8) = *(unsigned char *)(v217 + 8);
        *(unsigned char *)(v216 + 9) = *(unsigned char *)(v217 + 9);
        id v218 = (void *)((v304 + v216) & v303);
        uint64_t v219 = (const void *)((v304 + v217) & v303);
        if (v267(v219, 1, v305))
        {
          memcpy(v218, v219, __n);
        }
        else
        {
          v106((unint64_t)v218, (unint64_t)v219, v305);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v274 + 56))(v218, 0, 1, v305);
        }
        long long v220 = (void *)(((unint64_t)v218 + v287) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v221 = (void *)(((unint64_t)v219 + v287) & 0xFFFFFFFFFFFFFFF8);
        *long long v220 = *v221;
        unint64_t v222 = ((unint64_t)v220 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v223 = ((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v224 = *(void *)v223;
        *(unsigned char *)(v222 + 8) = *(unsigned char *)(v223 + 8);
        *(void *)unint64_t v222 = v224;
        id v225 = (void *)(((unint64_t)v220 + 31) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v226 = (void *)(((unint64_t)v221 + 31) & 0xFFFFFFFFFFFFFFF8);
        *id v225 = *v226;
        uint64_t v227 = (_OWORD *)(((unint64_t)v225 + 15) & 0xFFFFFFFFFFFFFFF8);
        id v228 = (_OWORD *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v227 = *v228;
        unint64_t v229 = ((unint64_t)v227 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v230 = ((unint64_t)v228 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v231 = *(void *)v230;
        *(unsigned char *)(v229 + 8) = *(unsigned char *)(v230 + 8);
        *(void *)unint64_t v229 = v231;
        *(unsigned char *)(v229 + 9) = *(unsigned char *)(v230 + 9);
        unint64_t v232 = (v229 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v233 = (v230 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v224) = *(_DWORD *)v233;
        *(unsigned char *)(v232 + 4) = *(unsigned char *)(v233 + 4);
        *(_DWORD *)unint64_t v232 = v224;
        *(_OWORD *)((v229 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v230 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v234 = v203 + v16;
        long long v235 = *(_OWORD *)(v204 + v16 + 112);
        long long v237 = *(_OWORD *)(v204 + v16 + 64);
        long long v236 = *(_OWORD *)(v204 + v16 + 80);
        *(_OWORD *)(v234 + 96) = *(_OWORD *)(v204 + v16 + 96);
        *(_OWORD *)(v234 + 112) = v235;
        *(_OWORD *)(v234 + 64) = v237;
        *(_OWORD *)(v234 + 80) = v236;
        long long v238 = *(_OWORD *)(v204 + v16 + 176);
        long long v240 = *(_OWORD *)(v204 + v16 + 128);
        long long v239 = *(_OWORD *)(v204 + v16 + 144);
        *(_OWORD *)(v234 + 160) = *(_OWORD *)(v204 + v16 + 160);
        *(_OWORD *)(v234 + 176) = v238;
        *(_OWORD *)(v234 + 128) = v240;
        *(_OWORD *)(v234 + 144) = v239;
        long long v242 = *(_OWORD *)(v204 + v16 + 208);
        long long v241 = *(_OWORD *)(v204 + v16 + 224);
        long long v243 = *(_OWORD *)(v204 + v16 + 192);
        *(void *)(v234 + 240) = *(void *)(v204 + v16 + 240);
        *(_OWORD *)(v234 + 208) = v242;
        *(_OWORD *)(v234 + 224) = v241;
        *(_OWORD *)(v234 + 192) = v243;
        long long v244 = *(_OWORD *)(v204 + v16);
        long long v245 = *(_OWORD *)(v204 + v16 + 16);
        long long v246 = *(_OWORD *)(v204 + v16 + 48);
        *(_OWORD *)(v234 + 32) = *(_OWORD *)(v204 + v16 + 32);
        *(_OWORD *)(v234 + 48) = v246;
        *(_OWORD *)unint64_t v234 = v244;
        *(_OWORD *)(v234 + 16) = v245;
        uint64_t v247 = (_OWORD *)((v203 + v16 + 255) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v248 = (long long *)((v204 + v16 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v249 = *v248;
        *(_OWORD *)((char *)v247 + 9) = *(long long *)((char *)v248 + 9);
        _OWORD *v247 = v249;
        unint64_t v250 = (v203 + v16 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v251 = (v204 + v16 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v252 = *(_OWORD *)v251;
        *(unsigned char *)(v250 + 16) = *(unsigned char *)(v251 + 16);
        *(_OWORD *)unint64_t v250 = v252;
        uint64_t v253 = (void *)((v204 + v16 + 311) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v254 = (void *)((v203 + v16 + 311) & 0xFFFFFFFFFFFFFFF8);
        void *v254 = *v253;
        *(_OWORD *)(((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v255 = (void *)((v280 + v307) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v256 = (void *)((v280 + v193) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v256 = *v255;
        long long v120 = (_OWORD *)(((unint64_t)v256 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v121 = (_OWORD *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v122 = 1;
        unint64_t v27 = v308;
        break;
      case 2u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32))(v2, v28, AssociatedTypeWitness);
        *((unsigned char *)v2 + v3) = *((unsigned char *)v28 + v3);
        long long v120 = (_OWORD *)((((unint64_t)v2 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
        unint64_t v121 = (_OWORD *)((((unint64_t)v28 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
        char v122 = 2;
        break;
      case 3u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32))(v2, v28, AssociatedTypeWitness);
        long long v120 = (_OWORD *)(((unint64_t)v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v121 = (_OWORD *)(((unint64_t)v28 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        char v122 = 3;
        break;
      case 4u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32))(v2, v28, AssociatedTypeWitness);
        *((unsigned char *)v2 + v3) = *((unsigned char *)v28 + v3);
        long long v120 = (_OWORD *)((((unint64_t)v2 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
        unint64_t v121 = (_OWORD *)((((unint64_t)v28 + v3) & 0xFFFFFFFFFFFFFFF8) + 8);
        char v122 = 4;
        break;
      case 5u:
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32))(v2, v28, AssociatedTypeWitness);
        long long v120 = (_OWORD *)(((unint64_t)v2 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v121 = (_OWORD *)(((unint64_t)v28 + v3 + 7) & 0xFFFFFFFFFFFFFFF8);
        char v122 = 5;
        break;
      default:
        size_t v286 = v15;
        unint64_t v282 = v16;
        uint64_t v273 = v11;
        unint64_t v61 = *(void (**)(_DWORD *, _DWORD *, uint64_t))(v26 + 32);
        v61(v2, v28, AssociatedTypeWitness);
        v61((_DWORD *)(((unint64_t)v2 + v293) & v288), (_DWORD *)(((unint64_t)v28 + v293) & v288), AssociatedTypeWitness);
        uint64_t v62 = (((unint64_t)v28 + v293) & v288) + v3;
        unint64_t v63 = ((((unint64_t)v2 + v293) & v288) + v3 + v10) & v289;
        uint64_t v64 = (v62 + v10) & v289;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v295 + 32))(v63, v64, v296);
        unint64_t v65 = (void *)((v292 + v63) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v66 = (void *)((v292 + v64) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v65 = *v66;
        uint64_t v67 = v13;
        unint64_t v68 = ((unint64_t)v65 + v294) & v290;
        unint64_t v69 = ((unint64_t)v66 + v294) & v290;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v283 + 32))(v68, v69, v299);
        unint64_t v70 = (void *)((v297 + v68) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v71 = (void *)((v297 + v69) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v70 = *v71;
        *(_OWORD *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v300 + v63) = *(_OWORD *)(v300 + v64);
        unint64_t v72 = (v298 + v300 + v63) & v291;
        unint64_t v73 = (v298 + v300 + v64) & v291;
        *(unsigned char *)unint64_t v72 = *(unsigned char *)v73;
        uint64_t v74 = v72 | 4;
        int v75 = *(_DWORD *)(v73 | 4);
        *(unsigned char *)(v74 + 4) = *(unsigned char *)((v73 | 4) + 4);
        *(_DWORD *)uint64_t v74 = v75;
        *(_WORD *)(v72 + 10) = *(_WORD *)(v73 + 0xA);
        unint64_t v311 = v72;
        unint64_t v76 = (v301 + v72) & v303;
        unint64_t v77 = *(void (**)(unint64_t, unint64_t, uint64_t))(v273 + 32);
        v77(v76, (v301 + v73) & v303, v305);
        unint64_t v78 = (v302 + v76) & v303;
        unint64_t v79 = (v302 + ((v301 + v73) & v303)) & v303;
        v77(v78, v79, v305);
        unint64_t v80 = (unsigned char *)(v78 + v67);
        *unint64_t v80 = *(unsigned char *)(v79 + v67);
        v80[1] = *(unsigned char *)(v79 + v67 + 1);
        v80[2] = *(unsigned char *)(v79 + v67 + 2);
        v80[3] = *(unsigned char *)(v79 + v67 + 3);
        v80[4] = *(unsigned char *)(v79 + v67 + 4);
        unint64_t v81 = (v78 + v67 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v82 = (v79 + v67 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v81 = *(_OWORD *)v82;
        *(unsigned char *)(v81 + 16) = *(unsigned char *)(v82 + 16);
        *(unsigned char *)(v81 + 17) = *(unsigned char *)(v82 + 17);
        *(unsigned char *)(v81 + 18) = *(unsigned char *)(v82 + 18);
        *(unsigned char *)(v81 + 19) = *(unsigned char *)(v82 + 19);
        unint64_t v83 = (v81 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v84 = (v82 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v83 = *(void *)v84;
        *(unsigned char *)(v83 + 8) = *(unsigned char *)(v84 + 8);
        *(unsigned char *)(v83 + 9) = *(unsigned char *)(v84 + 9);
        *(unsigned char *)(v83 + 10) = *(unsigned char *)(v84 + 10);
        *(unsigned char *)(v83 + 11) = *(unsigned char *)(v84 + 11);
        *(unsigned char *)(v83 + 12) = *(unsigned char *)(v84 + 12);
        unint64_t v85 = (void *)((v82 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v86 = (void *)((v81 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v86 = *v85;
        unint64_t v87 = ((unint64_t)v86 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v88 = ((unint64_t)v85 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v87 = *(void *)v88;
        *(unsigned char *)(v87 + 8) = *(unsigned char *)(v88 + 8);
        *(unsigned char *)(v87 + 9) = *(unsigned char *)(v88 + 9);
        unint64_t v89 = (void *)((v304 + v87) & v303);
        uint64_t v90 = (const void *)((v304 + v88) & v303);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v273 + 48))(v90, 1, v305))
        {
          memcpy(v89, v90, __n);
        }
        else
        {
          v77((unint64_t)v89, (unint64_t)v90, v305);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v273 + 56))(v89, 0, 1, v305);
        }
        unint64_t v27 = v308;
        char v122 = 0;
        long long v123 = (void *)(((unint64_t)v89 + v286) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v124 = (void *)(((unint64_t)v90 + v286) & 0xFFFFFFFFFFFFFFF8);
        *long long v123 = *v124;
        unint64_t v125 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v126 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v127 = *(void *)v126;
        *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
        *(void *)unint64_t v125 = v127;
        unint64_t v128 = (void *)(((unint64_t)v123 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v129 = (void *)(((unint64_t)v124 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v128 = *v129;
        unint64_t v130 = (_OWORD *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v131 = (_OWORD *)(((unint64_t)v129 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v130 = *v131;
        unint64_t v132 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v133 = ((unint64_t)v131 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v134 = *(void *)v133;
        *(unsigned char *)(v132 + 8) = *(unsigned char *)(v133 + 8);
        *(void *)unint64_t v132 = v134;
        *(unsigned char *)(v132 + 9) = *(unsigned char *)(v133 + 9);
        unint64_t v135 = (v132 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v136 = (v133 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v127) = *(_DWORD *)v136;
        *(unsigned char *)(v135 + 4) = *(unsigned char *)(v136 + 4);
        *(_DWORD *)unint64_t v135 = v127;
        *(_OWORD *)((v132 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v133 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v137 = v282 + v311;
        long long v138 = *(_OWORD *)(v282 + v73 + 112);
        long long v140 = *(_OWORD *)(v282 + v73 + 64);
        long long v139 = *(_OWORD *)(v282 + v73 + 80);
        *(_OWORD *)(v137 + 96) = *(_OWORD *)(v282 + v73 + 96);
        *(_OWORD *)(v137 + 112) = v138;
        *(_OWORD *)(v137 + 64) = v140;
        *(_OWORD *)(v137 + 80) = v139;
        long long v141 = *(_OWORD *)(v282 + v73 + 176);
        long long v143 = *(_OWORD *)(v282 + v73 + 128);
        long long v142 = *(_OWORD *)(v282 + v73 + 144);
        *(_OWORD *)(v137 + 160) = *(_OWORD *)(v282 + v73 + 160);
        *(_OWORD *)(v137 + 176) = v141;
        *(_OWORD *)(v137 + 128) = v143;
        *(_OWORD *)(v137 + 144) = v142;
        long long v145 = *(_OWORD *)(v282 + v73 + 208);
        long long v144 = *(_OWORD *)(v282 + v73 + 224);
        long long v146 = *(_OWORD *)(v282 + v73 + 192);
        *(void *)(v137 + 240) = *(void *)(v282 + v73 + 240);
        *(_OWORD *)(v137 + 208) = v145;
        *(_OWORD *)(v137 + 224) = v144;
        *(_OWORD *)(v137 + 192) = v146;
        long long v147 = *(_OWORD *)(v282 + v73);
        long long v148 = *(_OWORD *)(v282 + v73 + 16);
        long long v149 = *(_OWORD *)(v282 + v73 + 48);
        *(_OWORD *)(v137 + 32) = *(_OWORD *)(v282 + v73 + 32);
        *(_OWORD *)(v137 + 48) = v149;
        *(_OWORD *)unint64_t v137 = v147;
        *(_OWORD *)(v137 + 16) = v148;
        long long v150 = (_OWORD *)((v282 + v311 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v151 = (long long *)((v282 + v73 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v152 = *v151;
        *(_OWORD *)((char *)v150 + 9) = *(long long *)((char *)v151 + 9);
        *long long v150 = v152;
        unint64_t v153 = (v282 + v311 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v154 = (v282 + v73 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v155 = *(_OWORD *)v154;
        *(unsigned char *)(v153 + 16) = *(unsigned char *)(v154 + 16);
        *(_OWORD *)unint64_t v153 = v155;
        long long v156 = (void *)((v282 + v311 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v157 = (void *)((v282 + v73 + 311) & 0xFFFFFFFFFFFFFFF8);
        *long long v156 = *v157;
        *(_OWORD *)(((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v120 = (_OWORD *)(((unint64_t)v2 + v277 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v121 = (_OWORD *)(((unint64_t)a2 + v277 + 7) & 0xFFFFFFFFFFFFFFF8);
        break;
    }
    *long long v120 = *v121;
    *((unsigned char *)v2 + v27) = v122;
  }
  return v2;
}

uint64_t sub_24D9BC848(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v11 = (((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  unint64_t v14 = (((((v4 + v5) & ~v5) + v4 + v10) & ~v10) + v13 + v11 + 32) & (*(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(void *)(v12 + 64);
  unint64_t v16 = (v13
       + ((((((v15 + ((v15 + v13 + ((v13 + 12) & ~v13)) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v13;
  uint64_t v17 = v10 | v5 | v13;
  unint64_t v18 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v19 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (!*(_DWORD *)(v12 + 84)) {
    ++v15;
  }
  unint64_t v20 = (((v14
         + ((((((((((v15 + v16 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 327) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((v20 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v22 = ((((v20 + 23 + ((v20 + v17 + 16) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v22 <= v21) {
    unint64_t v22 = v21;
  }
  if (v18 > v22) {
    unint64_t v22 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v19 > v22) {
    unint64_t v22 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v18 > v22) {
    unint64_t v22 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v19 <= v22) {
    unint64_t v23 = v22;
  }
  else {
    unint64_t v23 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_33;
  }
  unint64_t v24 = v23 + 1;
  char v25 = 8 * (v23 + 1);
  if ((v23 + 1) <= 3)
  {
    unsigned int v28 = ((a2 + ~(-1 << v25) - 250) >> v25) + 1;
    if (HIWORD(v28))
    {
      int v26 = *(_DWORD *)((char *)a1 + v24);
      if (!v26) {
        goto LABEL_33;
      }
      goto LABEL_25;
    }
    if (v28 > 0xFF)
    {
      int v26 = *(unsigned __int16 *)((char *)a1 + v24);
      if (!*(unsigned __int16 *)((char *)a1 + v24)) {
        goto LABEL_33;
      }
      goto LABEL_25;
    }
    if (v28 < 2)
    {
LABEL_33:
      unsigned int v30 = *((unsigned __int8 *)a1 + v23);
      if (v30 >= 6) {
        return (v30 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v26 = *((unsigned __int8 *)a1 + v24);
  if (!*((unsigned char *)a1 + v24)) {
    goto LABEL_33;
  }
LABEL_25:
  int v29 = (v26 - 1) << v25;
  if (v24 > 3) {
    int v29 = 0;
  }
  if (v24)
  {
    if (v24 > 3) {
      LODWORD(v24) = 4;
    }
    switch((int)v24)
    {
      case 2:
        LODWORD(v24) = *a1;
        break;
      case 3:
        LODWORD(v24) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v24) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v24) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v24 | v29) + 251;
}

void sub_24D9BCC78(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  unint64_t v12 = (((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  unint64_t v15 = (((((v5 + v6) & ~v6) + v5 + v11) & ~v11) + v14 + v12 + 32) & (*(_DWORD *)(v13 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = *(void *)(v13 + 64);
  unint64_t v17 = (v14
       + ((((((v16 + ((v16 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v14;
  uint64_t v18 = v11 | v6 | v14;
  unint64_t v19 = (v5 & 0xFFFFFFFFFFFFFFF8) + 24;
  unint64_t v20 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (!*(_DWORD *)(v13 + 84)) {
    ++v16;
  }
  unint64_t v21 = (((v15
         + ((((((((((v16 + v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 327) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v23 = ((((v21 + 23 + ((v21 + v18 + 16) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 <= v22) {
    unint64_t v23 = v22;
  }
  if (v19 > v23) {
    unint64_t v23 = (v5 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v20 > v23) {
    unint64_t v23 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v19 > v23) {
    unint64_t v23 = (v5 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v20 > v23) {
    unint64_t v23 = ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  size_t v24 = v23 + 1;
  if (a3 < 0xFB)
  {
    int v26 = 0;
    char v25 = a1;
  }
  else
  {
    char v25 = a1;
    if (v24 <= 3)
    {
      unsigned int v29 = ((a3 + ~(-1 << (8 * v24)) - 250) >> (8 * v24)) + 1;
      if (HIWORD(v29))
      {
        int v26 = 4;
      }
      else if (v29 >= 0x100)
      {
        int v26 = 2;
      }
      else
      {
        int v26 = v29 > 1;
      }
    }
    else
    {
      int v26 = 1;
    }
  }
  if (a2 > 0xFA)
  {
    unsigned int v27 = a2 - 251;
    if (v24 < 4)
    {
      int v28 = (v27 >> (8 * v24)) + 1;
      if (v23 != -1)
      {
        int v30 = v27 & ~(-1 << (8 * v24));
        bzero(v25, v24);
        if (v24 == 3)
        {
          *(_WORD *)char v25 = v30;
          v25[2] = BYTE2(v30);
        }
        else if (v24 == 2)
        {
          *(_WORD *)char v25 = v30;
        }
        else
        {
          *char v25 = v30;
        }
      }
    }
    else
    {
      bzero(v25, v23 + 1);
      *(_DWORD *)char v25 = v27;
      int v28 = 1;
    }
    switch(v26)
    {
      case 1:
        v25[v24] = v28;
        break;
      case 2:
        *(_WORD *)&v25[v24] = v28;
        break;
      case 3:
LABEL_44:
        __break(1u);
        JUMPOUT(0x24D9BD11CLL);
      case 4:
        *(_DWORD *)&v25[v24] = v28;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v26)
    {
      case 1:
        v25[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_33;
      case 2:
        *(_WORD *)&v25[v24] = 0;
        goto LABEL_32;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&v25[v24] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_33;
      default:
LABEL_32:
        if (a2) {
LABEL_33:
        }
          v25[v23] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24D9BD144(_DWORD *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 | v8 | 7;
  unint64_t v10 = (((*(void *)(v7 + 64) + ((v8 + ((*(void *)(v5 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = *(void *)(v11 + 64);
  if (*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = *(void *)(v11 + 64);
  }
  else {
    uint64_t v14 = v13 + 1;
  }
  unint64_t v15 = (((((((((v3 + v4) & ~v4) + v3 + v9) & ~v9) + v12 + v10 + 32) & (*(_DWORD *)(v11 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
         + ((((((((((v14
                   + ((v12
                     + ((((((v13 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 10) & ~v12)
                   + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 327) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = ((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = ((((v15 + 23 + ((v15 + (v9 | v4 | v12) + 16) & ~(v9 | v4 | v12))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if ((v3 & 0xFFFFFFFFFFFFFFF8) + 24 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v18 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v18 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  if (v18 <= v16) {
    unint64_t v18 = v16;
  }
  if (v18 > v17) {
    unint64_t v17 = v18;
  }
  uint64_t result = *((unsigned __int8 *)a1 + v17);
  if (result >= 6 && v17 != 0) {
    return (*a1 + 6);
  }
  return result;
}

void sub_24D9BD460(unsigned char *a1, unsigned int a2)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v11 = (((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  uint64_t v14 = *(void *)(v12 + 64);
  if (*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = *(void *)(v12 + 64);
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  unint64_t v16 = (((((((((v4 + v5) & ~v5) + v4 + v10) & ~v10) + v13 + v11 + 32) & (*(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8))
         + ((((((((((v15
                   + ((v13
                     + ((((((v14 + ((v14 + v13 + ((v13 + 12) & ~v13)) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 10) & ~v13)
                   + 7) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 327) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v17 = v16 + 23;
  unint64_t v18 = ((v16 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v19 = (v16 + (v10 | v5 | v13) + 16) & ~(v10 | v5 | v13);
  if (a2 > 5)
  {
    unint64_t v22 = ((((v17 + v19) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v23 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
    if (v23 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v23 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v23 > v22) {
      unint64_t v22 = v23;
    }
    if (v22 <= v18) {
      size_t v24 = ((v16 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else {
      size_t v24 = v22;
    }
    if (v24) {
      char v25 = 6;
    }
    else {
      char v25 = ((a2 - 6) >> (8 * v24)) + 6;
    }
    if (v24) {
      unsigned int v26 = a2 - 6;
    }
    else {
      unsigned int v26 = 0;
    }
    a1[v24] = v25;
    if (v24 >= 4) {
      int v27 = 4;
    }
    else {
      int v27 = v24;
    }
    bzero(a1, v24);
    switch(v27)
    {
      case 2:
        *(_WORD *)a1 = v26;
        break;
      case 3:
        *(_WORD *)a1 = v26;
        a1[2] = BYTE2(v26);
        break;
      case 4:
        *(_DWORD *)a1 = v26;
        break;
      default:
        *a1 = v26;
        break;
    }
  }
  else
  {
    unint64_t v20 = ((((v17 + v19) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v4 & 0xFFFFFFFFFFFFFFF8) + 24 <= ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v21 = ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    else {
      unint64_t v21 = (v4 & 0xFFFFFFFFFFFFFFF8) + 24;
    }
    if (v21 > v20) {
      unint64_t v20 = v21;
    }
    if (v20 > v18) {
      unint64_t v18 = v20;
    }
    a1[v18] = a2;
  }
}

uint64_t type metadata accessor for SnapshotMutation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D9BD87C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  int v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  unint64_t v32 = (char *)&v31 - v9;
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for SnapshotItem();
  uint64_t v33 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v31 - v14;
  MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v17, v2, a1);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v31 - 32, "from to  reason ");
      uint64_t v35 = v12;
      unint64_t v36 = v12;
      unint64_t v37 = &type metadata for Fields;
      uint64_t v38 = MEMORY[0x263F8D310];
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v23 = *(void *)&v17[*(int *)(TupleTypeMetadata + 64)];
      uint64_t v24 = v33;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v15, &v17[*(int *)(TupleTypeMetadata + 48)], v12);
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24D97C4E0(v23);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v21 = v35;
      char v25 = *(void (**)(char *, uint64_t))(v24 + 8);
      v25(v15, v12);
      v25(v17, v12);
      break;
    case 2:
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
      swift_getTupleTypeMetadata3();
      uint64_t v26 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v11, v17, AssociatedTypeWitness);
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v21 = v35;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v11, AssociatedTypeWitness);
      break;
    case 3:
    case 5:
      swift_getTupleTypeMetadata2();
      uint64_t v28 = v34;
      unsigned int v29 = v32;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v32, v17, AssociatedTypeWitness);
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v21 = v35;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, AssociatedTypeWitness);
      break;
    case 4:
      swift_getTupleTypeMetadata3();
      uint64_t v27 = v34;
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v7, v17, AssociatedTypeWitness);
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v21 = v35;
      (*(void (**)(char *, uint64_t))(v27 + 8))(v7, AssociatedTypeWitness);
      break;
    default:
      swift_getTupleTypeMetadata2();
      uint64_t v20 = v33;
      (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v15, v17, v12);
      uint64_t v35 = 0;
      unint64_t v36 = 0xE000000000000000;
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v21 = v35;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v15, v12);
      break;
  }
  return v21;
}

uint64_t sub_24D9BE1D0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (char *)v22 - v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v22 - v9;
  unint64_t v11 = *(void (**)(char *))(v2 + 16);
  v11((char *)v22 - v9);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    uint64_t v14 = ((uint64_t (*)(char *, char *, uint64_t))v11)(v5, v10, a1);
    MEMORY[0x270FA5388](v14);
    strcpy((char *)&v22[-4], "from to  reason ");
    v22[0] = type metadata accessor for SnapshotItem();
    v22[1] = v22[0];
    void v22[2] = &type metadata for Fields;
    v22[3] = MEMORY[0x263F8D310];
    uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v16 = &v5[*(int *)(TupleTypeMetadata + 48)];
    uint64_t v17 = *(void *)&v5[*(int *)(TupleTypeMetadata + 64)];
    swift_bridgeObjectRelease();
    uint64_t v18 = type metadata accessor for SnapshotItem();
    uint64_t v19 = *(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8);
    v19(v16, v18);
    v19(v5, v18);
    if (!v17) {
      goto LABEL_6;
    }
  }
  else if (EnumCaseMultiPayload == 5)
  {
    ((void (*)(char *, char *, uint64_t))v11)(v8, v10, a1);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getTupleTypeMetadata2();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v8, AssociatedTypeWitness);
LABEL_6:
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, a1);
    return sub_24DCCA118();
  }
  uint64_t v20 = sub_24DCCA148();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v10, a1);
  return v20;
}

uint64_t sub_24D9BE524()
{
  uint64_t result = type metadata accessor for ReconciliationID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D9BE5CC(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24D9BE60C(a1);
  return v2;
}

uint64_t sub_24D9BE60C(uint64_t a1)
{
  *(unsigned char *)(v1 + *(void *)(*(void *)v1 + 128)) = 0;
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 120);
  uint64_t v4 = type metadata accessor for ReconciliationID();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v1 + *(void *)(*(void *)v1 + 112), a1, v4);
  return v1;
}

uint64_t sub_24D9BE738@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  LODWORD(v49) = a2;
  uint64_t v47 = a1;
  uint64_t v50 = a3;
  uint64_t v4 = *v3;
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 80);
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v43 = *(void *)(v7 - 8);
  uint64_t v44 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v48 = (char *)&v38 - v9;
  uint64_t v45 = *(void *)(v6 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v42 = (char *)&v38 - v11;
  uint64_t v12 = *(void *)(v4 + 88);
  uint64_t v46 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v38 - v13;
  uint64_t v51 = v6;
  uint64_t v52 = v12;
  long long v53 = *(_OWORD *)(v5 + 96);
  uint64_t v15 = type metadata accessor for ReconciliationID();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  MEMORY[0x270FA5388](v18);
  unint64_t v22 = (char *)&v38 - v21;
  uint64_t v23 = *(void *)(v4 + 128);
  if (*((unsigned char *)v3 + v23) == 1 && (v49 & 1) == 0)
  {
    uint64_t v24 = (uint64_t)v3 + *(void *)(v5 + 120);
    swift_beginAccess();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v50, v24, v15);
  }
  uint64_t v40 = v20;
  uint64_t v41 = v19;
  *((unsigned char *)v3 + v23) = 1;
  uint64_t v26 = (uint64_t)v3 + *(void *)(*v3 + 120);
  swift_beginAccess();
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v16 + 16);
  uint64_t v49 = v26;
  v27(v22, v26, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v39 = v27;
    uint64_t v28 = v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v14, v22, v12);
    unsigned int v29 = v48;
    uint64_t v30 = v54;
    (*(void (**)(char *))(**(void **)(v47 + 16) + 152))(v14);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v14, v12);
    if (v30) {
      return result;
    }
    uint64_t v31 = v45;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v29, 1, v6) == 1)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v44);
      uint64_t v33 = v49;
      uint64_t v32 = v50;
    }
    else
    {
      uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v31 + 32);
      uint64_t v35 = v42;
      v34(v42, v29, v6);
      unint64_t v36 = v40;
      v34(v40, v35, v6);
      swift_storeEnumTagMultiPayload();
      uint64_t v37 = v41;
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v41, v36, v15);
      uint64_t v33 = v49;
      swift_beginAccess();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 40))(v33, v37, v15);
      swift_endAccess();
      uint64_t v32 = v50;
    }
    uint64_t v27 = v39;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v22, v15);
    uint64_t v33 = v49;
    uint64_t v32 = v50;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v27)(v32, v33, v15);
}

uint64_t sub_24D9BEC88(uint64_t a1)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)v21 - v5;
  uint64_t v7 = v2[10];
  uint64_t v22 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = v2[12];
  uint64_t v11 = v2[13];
  uint64_t v26 = v7;
  uint64_t v27 = v3;
  v21[1] = v10;
  uint64_t v28 = v10;
  uint64_t v29 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationID();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v21 - v14;
  uint64_t v16 = v1 + v2[15];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v23;
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v6, v15, v3);
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_24DCCADC8();
    uint64_t v18 = v24;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v6, v3);
  }
  else
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v9, v15, v7);
    uint64_t v24 = 0;
    unint64_t v25 = 0xE000000000000000;
    sub_24DCCADC8();
    uint64_t v18 = v24;
    (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v7);
  }
  return v18;
}

uint64_t sub_24D9BEF98(uint64_t a1)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v23 = (char *)&v21 - v5;
  uint64_t v6 = v2[10];
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = v2[12];
  uint64_t v10 = v2[13];
  uint64_t v25 = v6;
  uint64_t v26 = v3;
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  uint64_t v11 = type metadata accessor for ReconciliationID();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = v1 + v2[15];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v23;
    uint64_t v16 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v14, v3);
    char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 64))(v3, v10);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v3);
  }
  else
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v8, v14, v6);
    char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 64))(v6, v9);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  }
  return v18 & 1;
}

uint64_t sub_24D9BF2A8(uint64_t a1)
{
  uint64_t v2 = *(void **)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v24 = *(void *)(v3 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v23 = (char *)&v21 - v5;
  uint64_t v6 = v2[10];
  uint64_t v22 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v21 - v7;
  uint64_t v9 = v2[12];
  uint64_t v10 = v2[13];
  uint64_t v25 = v6;
  uint64_t v26 = v3;
  uint64_t v27 = v9;
  uint64_t v28 = v10;
  uint64_t v11 = type metadata accessor for ReconciliationID();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v21 - v13;
  uint64_t v15 = v1 + v2[15];
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v15, v11);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v17 = v23;
    uint64_t v16 = v24;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v23, v14, v3);
    char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 72))(v3, v10);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v3);
  }
  else
  {
    uint64_t v19 = v22;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v8, v14, v6);
    char v18 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 72))(v6, v9);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
  }
  return v18 & 1;
}

uint64_t sub_24D9BF5B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 104);
  uint64_t v16 = *(void *)(*v1 + 80);
  long long v15 = *(_OWORD *)(v4 + 88);
  long long v17 = v15;
  uint64_t v18 = v5;
  uint64_t v6 = type metadata accessor for ReconciliationID();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v15 - v8, (uint64_t)v1 + *(void *)(v3 + 112), v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = v15;
  uint64_t v12 = *(void *)(v15 - 8);
  uint64_t v13 = v12;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, char *, void))(v12 + 32))(a1, v9, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v11);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v12 + 56))(a1, 1, 1, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_24D9BF7C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  long long v4 = *(_OWORD *)(*v1 + 96);
  v15[0] = *(_OWORD *)(*v1 + 80);
  v15[1] = v15[0];
  v15[2] = v4;
  uint64_t v5 = type metadata accessor for ReconciliationID();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v15 - v7;
  uint64_t v9 = (uint64_t)v1 + *(void *)(v3 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v9, v5);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = *(void *)&v15[0];
  uint64_t v12 = *(void *)(*(void *)&v15[0] - 8);
  uint64_t v13 = v12;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v12 + 56))(a1, 1, 1, *(void *)&v15[0]);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    (*(void (**)(uint64_t, char *, void))(v12 + 32))(a1, v8, *(void *)&v15[0]);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v11);
  }
}

uint64_t sub_24D9BF9BC(uint64_t a1, uint64_t a2)
{
  return sub_24D3EC388(a1 + *(void *)(*(void *)a1 + 112), a2 + *(void *)(*(void *)a2 + 112), *(void *)(v2 + 80), *(void *)(v2 + 88));
}

uint64_t sub_24D9BF9F8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return sub_24D3E0C18(a1, v2);
}

uint64_t type metadata accessor for FPFSID()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D9BFA9C()
{
  sub_24DCCAFF8();
  sub_24D9BF9F8((uint64_t)v1);
  return sub_24DCCB048();
}

uint64_t sub_24D9BFADC()
{
  return sub_24D9BFA9C();
}

uint64_t sub_24D9BFB00(uint64_t a1)
{
  return sub_24D9BF9F8(a1);
}

uint64_t sub_24D9BFB24()
{
  sub_24DCCAFF8();
  sub_24D9BF9F8((uint64_t)v1);
  return sub_24DCCB048();
}

uint64_t sub_24D9BFB64(uint64_t a1)
{
  return sub_24D9BEC88(a1);
}

uint64_t sub_24D9BFB88(uint64_t *a1, uint64_t *a2)
{
  return sub_24D9BF9BC(*a1, *a2);
}

uint64_t sub_24D9BFB94()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D9BFBB0(uint64_t result, uint64_t a2)
{
  if (!(_BYTE)result) {
    return 0;
  }
  if (!(_BYTE)a2) {
    return a2;
  }
  if (a2 == 1)
  {
    if (result <= 4u) {
      return 4;
    }
    else {
      return result;
    }
  }
  else if (result <= a2)
  {
    return a2;
  }
  else
  {
    return result;
  }
}

uint64_t sub_24D9BFBFC(char a1)
{
  return qword_24DCE1E38[a1];
}

uint64_t sub_24D9BFC14(uint64_t a1)
{
  if (a1 == 1002 || a1 == 3) {
    unsigned int v2 = 5;
  }
  else {
    unsigned int v2 = 4;
  }
  if (a1 == 500) {
    return 0;
  }
  else {
    return v2;
  }
}

uint64_t sub_24D9BFC30(char a1)
{
  uint64_t result = 0x74636976456E6F6ELL;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t result = 7827308;
      break;
    case 3:
      uint64_t result = 6579565;
      break;
    case 4:
      uint64_t result = 1751607656;
      break;
    case 5:
      uint64_t result = 21843;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D9BFCE0()
{
  uint64_t result = 0x74636976456E6F6ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E776F6E6B6E75;
      break;
    case 2:
      uint64_t result = 7827308;
      break;
    case 3:
      uint64_t result = 6579565;
      break;
    case 4:
      uint64_t result = 1751607656;
      break;
    case 5:
      uint64_t result = 21843;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D9BFD8C()
{
  return sub_24DCC9BD8();
}

uint64_t sub_24D9BFDEC()
{
  return sub_24DCC9B68();
}

unint64_t sub_24D9BFE40()
{
  unint64_t result = qword_26986FF60;
  if (!qword_26986FF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF60);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EvictionUrgency(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D9BFF60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EvictionUrgency()
{
  return &type metadata for EvictionUrgency;
}

unint64_t sub_24D9BFF98()
{
  unint64_t result = qword_26986FF68;
  if (!qword_26986FF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF68);
  }
  return result;
}

uint64_t sub_24D9BFFEC(uint64_t (*a1)(uint64_t, uint64_t))
{
  unsigned int v2 = (const char *)fpfs_fileattrs_fullpath();
  if (!v2) {
    return a1(0, 0);
  }
  int v3 = v2;
  int64_t v4 = strlen(v2);
  if (v4 < 1) {
    return a1(0, 0);
  }
  int64_t v5 = v4;
  id v6 = objc_msgSend(self, sel_defaultManager);
  id v7 = objc_msgSend(v6, sel_stringWithFileSystemRepresentation_length_, v3, v5);

  uint64_t v8 = sub_24DCC97E8();
  uint64_t v10 = v9;

  a1(v8, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D9C00FC(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  if (!v4) {
    return a1(0, 0);
  }
  int64_t v5 = strlen(*(const char **)(a3 + 24));
  if (v5 < 1) {
    return a1(0, 0);
  }
  int64_t v6 = v5;
  id v7 = objc_msgSend(self, sel_defaultManager);
  id v8 = objc_msgSend(v7, sel_stringWithFileSystemRepresentation_length_, v4, v6);

  uint64_t v9 = sub_24DCC97E8();
  uint64_t v11 = v10;

  a1(v9, v11);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D9C0200(uint64_t a1, unsigned char *a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5, void **a6)
{
  uint64_t v11 = (const char *)fpfs_fileattrs_fullpath();
  if (v11 && (uint64_t v12 = v11, v13 = strlen(v11), v13 > 0))
  {
    int64_t v14 = v13;
    id v15 = objc_msgSend(self, sel_defaultManager);
    id v16 = objc_msgSend(v15, sel_stringWithFileSystemRepresentation_length_, v12, v14);

    uint64_t v17 = sub_24DCC97E8();
    uint64_t v19 = v18;

    a3(&v22, a5, v17, v19);
    if (v6)
    {
      uint64_t v20 = *a6;
      *a6 = v6;
    }
    else
    {
      *a2 = 0;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9C0374(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  uint64_t v9 = (const char *)fpfs_fileattrs_fullpath();
  if (v9 && (uint64_t v10 = v9, v11 = strlen(v9), v11 > 0))
  {
    int64_t v12 = v11;
    id v13 = objc_msgSend(self, sel_defaultManager);
    id v14 = objc_msgSend(v13, sel_stringWithFileSystemRepresentation_length_, v10, v12);

    uint64_t v15 = sub_24DCC97E8();
    uint64_t v17 = v16;

    a3(&v25, a5, v15, v17);
    if (v5) {
      uint64_t v18 = v5;
    }
    else {
      uint64_t v18 = v25;
    }
    uint64_t v22 = *(void **)a2;
    char v23 = *(unsigned char *)(a2 + 8);
    *(void *)a2 = v18;
    *(unsigned char *)(a2 + 8) = v5 != 0;
    sub_24D6DF9B0(v22, v23);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24D40CFDC();
    uint64_t v19 = swift_allocError();
    *(_OWORD *)uint64_t v20 = xmmword_24DCDE190;
    *(unsigned char *)(v20 + 16) = 10;
    uint64_t v21 = *(void **)a2;
    LOBYTE(v20) = *(unsigned char *)(a2 + 8);
    *(void *)a2 = v19;
    *(unsigned char *)(a2 + 8) = 1;
    sub_24D6DF9B0(v21, v20);
  }
  return 0;
}

uint64_t sub_24D9C04EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  return sub_24D3E14E4(a1, a2, a3, a4, a5, &qword_26B194250);
}

ValueMetadata *type metadata accessor for JobReason()
{
  return &type metadata for JobReason;
}

uint64_t sub_24D9C051C(uint64_t a1)
{
  uint64_t result = 0;
  if (a1 < 0x400000)
  {
    if (a1 <= 1023)
    {
      if (a1 <= 127)
      {
        switch(a1)
        {
          case 1:
            uint64_t result = 0x6C6169726574616DLL;
            break;
          case 2:
            uint64_t result = 0x6E6F697463697665;
            break;
          case 4:
          case 8:
            uint64_t result = 0xD000000000000013;
            break;
          case 16:
            uint64_t result = 0x6F4E7265646C6F66;
            break;
          case 32:
            uint64_t result = 0xD000000000000014;
            break;
          case 64:
            uint64_t result = 0xD000000000000016;
            break;
          default:
            return result;
        }
        return result;
      }
      unint64_t v22 = 0xD000000000000012;
      uint64_t v27 = 0x697665526D657469;
      if (a1 != 512) {
        uint64_t v27 = 0;
      }
      if (a1 == 256) {
        unint64_t v23 = 0xD000000000000014;
      }
      else {
        unint64_t v23 = v27;
      }
      BOOL v25 = a1 == 128;
    }
    else
    {
      if (a1 < 0x8000)
      {
        if (a1 <= 4095)
        {
          if (a1 == 2048) {
            unint64_t v28 = 0xD000000000000011;
          }
          else {
            unint64_t v28 = 0;
          }
          if (a1 == 1024) {
            return 0xD000000000000011;
          }
          else {
            return v28;
          }
        }
        else
        {
          unint64_t v15 = 0xD00000000000001FLL;
          unint64_t v16 = 0xD000000000000011;
          if (a1 != 0x4000) {
            unint64_t v16 = 0;
          }
          if (a1 != 0x2000) {
            unint64_t v15 = v16;
          }
          if (a1 == 4096) {
            return 0xD000000000000013;
          }
          else {
            return v15;
          }
        }
      }
      if (a1 < 0x40000)
      {
        uint64_t v4 = 0x6F706D496B736964;
        uint64_t v5 = 0x6F706D496B736964;
        if (a1 != 0x20000) {
          uint64_t v5 = 0;
        }
        if (a1 != 0x10000) {
          uint64_t v4 = v5;
        }
        if (a1 == 0x8000) {
          return 0x65526D6165727473;
        }
        else {
          return v4;
        }
      }
      unint64_t v22 = 0xD000000000000010;
      unint64_t v23 = 0xD000000000000015;
      uint64_t v24 = 0x6165726C4179616DLL;
      if (a1 != 0x200000) {
        uint64_t v24 = 0;
      }
      if (a1 != 0x80000) {
        unint64_t v23 = v24;
      }
      BOOL v25 = a1 == 0x40000;
    }
    if (v25) {
      return v22;
    }
    else {
      return v23;
    }
  }
  if (a1 <= 0x1FFFFFFFFLL)
  {
    if (a1 <= 0x7FFFFFF)
    {
      uint64_t v10 = 0x67696E556D657469;
      if (a1 != 0x4000000) {
        uint64_t v10 = 0;
      }
      if (a1 == 0x2000000) {
        uint64_t v11 = 0x6F6E67496D657469;
      }
      else {
        uint64_t v11 = v10;
      }
      if (a1 == 0x1000000) {
        uint64_t v12 = 0x756F72676B636162;
      }
      else {
        uint64_t v12 = v11;
      }
      uint64_t v13 = 0x72654D736D657469;
      uint64_t v14 = 0x7571655272657375;
      if (a1 != 0x800000) {
        uint64_t v14 = 0;
      }
      if (a1 != 0x400000) {
        uint64_t v13 = v14;
      }
      if (a1 <= 0xFFFFFF) {
        return v13;
      }
      else {
        return v12;
      }
    }
    else if (a1 > 0x3FFFFFFF)
    {
      switch(a1)
      {
        case 0x40000000:
          return 0xD00000000000001BLL;
        case 0x80000000:
          return 0x65766F4D6D657469;
        case 0x100000000:
          return 0xD00000000000001BLL;
      }
    }
    else if (a1 == 0x8000000)
    {
      return 0x55746E65746E6F63;
    }
    else
    {
      if (a1 == 0x20000000) {
        unint64_t v3 = 0xD000000000000014;
      }
      else {
        unint64_t v3 = 0;
      }
      if (a1 == 0x10000000) {
        return 0xD000000000000012;
      }
      else {
        return v3;
      }
    }
    return result;
  }
  if (a1 <= 0x3FFFFFFFFFLL)
  {
    if (a1 <= 0x7FFFFFFFFLL)
    {
      uint64_t v6 = 0x200000000;
      unint64_t v7 = 0xD00000000000001ALL;
      BOOL v8 = a1 == 0x400000000;
      uint64_t v9 = 0x74616C7563657073;
LABEL_89:
      if (!v8) {
        uint64_t v9 = 0;
      }
      if (a1 == v6) {
        return v7;
      }
      else {
        return v9;
      }
    }
    uint64_t v17 = 0x800000000;
    unint64_t v18 = 0xD00000000000001ALL;
    uint64_t v19 = 0x1000000000;
    BOOL v20 = a1 == 0x2000000000;
    uint64_t v21 = 0x64616F6C70756572;
  }
  else
  {
    if (a1 <= 0x1FFFFFFFFFFLL)
    {
      if (a1 == 0x4000000000) {
        return 0x74616C7563657073;
      }
      uint64_t v6 = 0x8000000000;
      unint64_t v7 = 0xD00000000000001ELL;
      BOOL v8 = a1 == 0x10000000000;
      uint64_t v9 = 0x684364656E6E6970;
      goto LABEL_89;
    }
    uint64_t v17 = 0x20000000000;
    unint64_t v18 = 0xD000000000000011;
    uint64_t v19 = 0x40000000000;
    BOOL v20 = a1 == 0x80000000000;
    uint64_t v21 = 0x446D7269666E6F63;
  }
  if (!v20) {
    uint64_t v21 = 0;
  }
  if (a1 == v19) {
    unint64_t v26 = 0xD000000000000013;
  }
  else {
    unint64_t v26 = v21;
  }
  if (a1 == v17) {
    return v18;
  }
  else {
    return v26;
  }
}

uint64_t sub_24D9C0D60()
{
  return sub_24D9C051C(*v0);
}

uint64_t sub_24D9C0D68()
{
  return sub_24D97C4AC(*v0);
}

uint64_t sub_24D9C0D70()
{
  return sub_24DA605D0(*v0);
}

unint64_t sub_24D9C0D7C()
{
  unint64_t result = qword_26986FF70;
  if (!qword_26986FF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF70);
  }
  return result;
}

unint64_t sub_24D9C0DD4()
{
  unint64_t result = qword_26986FF78;
  if (!qword_26986FF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF78);
  }
  return result;
}

unint64_t sub_24D9C0E2C()
{
  unint64_t result = qword_26986FF80;
  if (!qword_26986FF80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26986FF88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF80);
  }
  return result;
}

unint64_t sub_24D9C0E8C()
{
  unint64_t result = qword_26986FF90;
  if (!qword_26986FF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF90);
  }
  return result;
}

unint64_t sub_24D9C0EE4()
{
  unint64_t result = qword_26986FF98;
  if (!qword_26986FF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FF98);
  }
  return result;
}

uint64_t sub_24D9C0F38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D9C1038(a1, a2, a3, (uint64_t (*)(void))sub_24D9C0F64, (uint64_t (*)(void))sub_24D9C0FB8);
}

unint64_t sub_24D9C0F64()
{
  unint64_t result = qword_26986FFA0;
  if (!qword_26986FFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FFA0);
  }
  return result;
}

unint64_t sub_24D9C0FB8()
{
  unint64_t result = qword_26986FFA8;
  if (!qword_26986FFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FFA8);
  }
  return result;
}

uint64_t sub_24D9C100C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D9C1038(a1, a2, a3, (uint64_t (*)(void))sub_24D9C1074, (uint64_t (*)(void))sub_24D9C10C8);
}

uint64_t sub_24D9C1038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24D9C1074()
{
  unint64_t result = qword_26986FFB0;
  if (!qword_26986FFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FFB0);
  }
  return result;
}

unint64_t sub_24D9C10C8()
{
  unint64_t result = qword_26986FFB8;
  if (!qword_26986FFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26986FFB8);
  }
  return result;
}

unint64_t sub_24D9C111C()
{
  return 0xD000000000000021;
}

uint64_t sub_24D9C1138(uint64_t a1, char a2)
{
  uint64_t result = 1;
  switch(a2)
  {
    case 1:
      uint64_t result = 2;
      break;
    case 2:
      uint64_t result = 6;
      break;
    case 3:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 8;
      break;
    case 5:
      uint64_t result = 9;
      break;
    case 6:
      uint64_t result = 14;
      break;
    case 7:
      uint64_t result = 15;
      break;
    case 8:
      uint64_t result = 5;
      break;
    case 9:
      uint64_t result = 13;
      break;
    case 10:
      uint64_t result = 12;
      break;
    case 11:
      uint64_t result = qword_24DCE2190[a1];
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D9C11F4(uint64_t a1, uint64_t a2)
{
  if (*(unsigned char *)(a1 + 112) == 2)
  {
    uint64_t v4 = *(void **)(a1 + 96);
    unint64_t v3 = *(void **)(a1 + 104);
    swift_retain();
    uint64_t v5 = sub_24D9C1290(a2, (void *)0x12, 0xBu);
    sub_24D3E380C(v4, v3, 2);
    return v5;
  }
  else
  {
    return sub_24D9C1290(a2, (void *)0x13, 0xBu);
  }
}

uint64_t sub_24D9C1290(uint64_t a1, void *a2, unsigned __int8 a3)
{
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v11 = v10;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  double v13 = v11 * 1000000000.0;
  if ((~COERCE__INT64(v11 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (__OFADD__((uint64_t)v13, -86400000000000))
  {
LABEL_11:
    __break(1u);
    return result;
  }
  uint64_t v14 = (uint64_t)a2;
  if ((uint64_t)v13 - 86400000000000 >= a1)
  {
    sub_24D823284();
    uint64_t v14 = swift_allocError();
    *(void *)uint64_t v15 = a2;
    *(unsigned char *)(v15 + 8) = a3;
  }
  sub_24D9C1718(a2, a3);
  return v14;
}

unint64_t sub_24D9C1430(void *a1, unsigned __int8 a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  *(void *)(inited + 32) = sub_24DCC97E8();
  *(void *)(inited + 40) = v5;
  *(void *)&long long v18 = a1;
  BYTE8(v18) = a2;
  sub_24D9C1718(a1, a2);
  uint64_t v6 = sub_24DCC9868();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v7;
  unint64_t v8 = sub_24D428D08(inited);
  if (a2 < 8u) {
    goto LABEL_2;
  }
  if (a2 - 8 >= 2)
  {
    if (a2 != 10) {
      return v8;
    }
LABEL_2:
    if (!a1) {
      return v8;
    }
  }
  uint64_t v9 = sub_24DCC97E8();
  uint64_t v11 = v10;
  swift_getErrorValue();
  uint64_t v19 = v17;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v18);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_0, v16, v17);
  sub_24D3F7E7C(&v18, v15);
  sub_24D9C1718(a1, a2);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_24D706588(v15, v9, v11, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v8;
}

uint64_t sub_24D9C15D8()
{
  uint64_t result = 1;
  switch(*(unsigned char *)(v0 + 8))
  {
    case 1:
      uint64_t result = 2;
      break;
    case 2:
      uint64_t result = 6;
      break;
    case 3:
      uint64_t result = 7;
      break;
    case 4:
      uint64_t result = 8;
      break;
    case 5:
      uint64_t result = 9;
      break;
    case 6:
      uint64_t result = 14;
      break;
    case 7:
      uint64_t result = 15;
      break;
    case 8:
      uint64_t result = 5;
      break;
    case 9:
      uint64_t result = 13;
      break;
    case 0xA:
      uint64_t result = 12;
      break;
    case 0xB:
      uint64_t result = qword_24DCE2190[*(void *)v0];
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24D9C1694()
{
  return sub_24D9C1430(*(void **)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_24D9C16A0(uint64_t a1)
{
  unint64_t v2 = sub_24D9C1AB8();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24D9C16DC(uint64_t a1)
{
  unint64_t v2 = sub_24D9C1AB8();

  return MEMORY[0x270EF2668](a1, v2);
}

id sub_24D9C1718(id result, unsigned __int8 a2)
{
  if (a2 <= 0xAu) {
    return result;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for FPCKPendingSetInternalError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_24D9C1718(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for FPCKPendingSetInternalError(uint64_t a1)
{
}

void sub_24D9C1788(id a1, unsigned __int8 a2)
{
  if (a2 <= 0xAu) {
}
  }

uint64_t assignWithCopy for FPCKPendingSetInternalError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_24D9C1718(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_24D9C1788(v5, v6);
  return a1;
}

uint64_t assignWithTake for FPCKPendingSetInternalError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_24D9C1788(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for FPCKPendingSetInternalError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 245);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 0xB) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for FPCKPendingSetInternalError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF4)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 245;
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF5) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24D9C18BC(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 0xAu) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 11);
  }
}

uint64_t sub_24D9C18D4(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xB)
  {
    *(void *)uint64_t result = a2 - 11;
    LOBYTE(a2) = 11;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for FPCKPendingSetInternalError()
{
  return &type metadata for FPCKPendingSetInternalError;
}

id sub_24D9C18FC(uint64_t a1, id a2)
{
  switch(a1)
  {
    case 2:
      sub_24D823284();
      uint64_t v3 = swift_allocError();
      *(void *)uint64_t v4 = a2;
      *(unsigned char *)(v4 + 8) = 0;
      goto LABEL_11;
    case 3:
    case 5:
    case 6:
    case 7:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
      goto LABEL_5;
    case 4:
      sub_24D823284();
      uint64_t v3 = swift_allocError();
      *(void *)uint64_t v5 = a2;
      char v6 = 6;
      goto LABEL_10;
    case 8:
      sub_24D823284();
      uint64_t v3 = swift_allocError();
      *(void *)uint64_t v5 = a2;
      char v6 = 5;
      goto LABEL_10;
    case 16:
      sub_24D823284();
      uint64_t v3 = swift_allocError();
      *(void *)uint64_t v5 = a2;
      char v6 = 7;
      goto LABEL_10;
    default:
      if (a1 == 1024)
      {
        sub_24D823284();
        uint64_t v3 = swift_allocError();
        *(void *)uint64_t v5 = a2;
        char v6 = 1;
LABEL_10:
        *(unsigned char *)(v5 + 8) = v6;
LABEL_11:
        id v8 = a2;
      }
      else
      {
LABEL_5:
        if (a2)
        {
          id v7 = a2;
          return a2;
        }
        else
        {
          sub_24D823284();
          uint64_t v3 = swift_allocError();
          *(void *)uint64_t v10 = 0;
          *(unsigned char *)(v10 + 8) = 11;
        }
      }
      return (id)v3;
  }
}

unint64_t sub_24D9C1AB8()
{
  unint64_t result = qword_26B194300;
  if (!qword_26B194300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194300);
  }
  return result;
}

uint64_t sub_24D9C1B10()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D9C1B98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  sub_24DCC9DB8();
  if ((swift_task_isCurrentExecutor() & 1) == 0) {
    goto LABEL_6;
  }
  uint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a7;
  _OWORD v15[3] = a8;
  v15[4] = a9;
  v15[5] = a1;
  v15[6] = a2;
  sub_24D9C29B4((uint64_t)sub_24D9C298C, (uint64_t)v15, v9, a7, a8, a9);
  if (v10) {
    return swift_release();
  }
  int isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_6:
    sub_24DCCA728();
    sub_24DCC9968();
    sub_24DCCADB8();
    sub_24DCC9968();
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9C1D50()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190800);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC9DF8();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  id v7 = (void *)swift_allocObject();
  _OWORD v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_24D9C2C0C((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_24DCC9DE8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_24DCC9DB8();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_26986FFC8;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_24D9C1F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 48) = a4;
  long long v5 = *(_OWORD *)(*(void *)a4 + 96);
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(*(void *)a4 + 80);
  *(_OWORD *)(v4 + 32) = v5;
  type metadata accessor for StuckDeletionMonitor();
  swift_getWitnessTable();
  uint64_t v7 = sub_24DCC9DB8();
  return MEMORY[0x270FA2498](sub_24D9C2064, v7, v6);
}

uint64_t sub_24D9C2064()
{
  *(void *)(v0 + 56) = *(void *)(*(void *)(v0 + 48) + 64);
  swift_retain();
  return MEMORY[0x270FA2498](sub_24D9C20D8, 0, 0);
}

uint64_t sub_24D9C20D8()
{
  if (*(void *)(v0 + 56))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    sub_24DCC9E08();
    swift_release();
  }
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24D9C216C(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v8 = a1;
  uint64_t v9 = v1;
  long long v3 = *(_OWORD *)(v2 + 96);
  long long v10 = *(_OWORD *)(v2 + 80);
  long long v11 = v3;
  uint64_t v4 = type metadata accessor for StuckDeletionMonitor();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_24D9C1B98((uint64_t)sub_24D9C2960, (uint64_t)v7, (uint64_t)"libfssync/StuckDeletionMonitor.swift", 36, 2, 73, v4, MEMORY[0x263F8EE60] + 8, WitnessTable);
}

uint64_t sub_24D9C223C(uint64_t *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = *a1;
  __swift_project_boxed_opaque_existential_1(a2, v6);
  sub_24D90FFEC(0xD000000000000021, 0x800000024DD09660, v6, v7);
  uint64_t v9 = a1[7];
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v10);
  long long v12 = *(_OWORD *)(v8 + 96);
  v19[1] = *(_OWORD *)(v8 + 80);
  v19[2] = v12;
  uint64_t v20 = v9;
  swift_bridgeObjectRetain();
  uint64_t v13 = MEMORY[0x263F8EE60] + 8;
  sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24D9C2AC8, (uint64_t)v19, v10, MEMORY[0x263F8EE60] + 8, v11);
  swift_bridgeObjectRelease();
  uint64_t v14 = a2[3];
  uint64_t v15 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v14);
  sub_24D90FFEC(0xD00000000000001DLL, 0x800000024DD09690, v14, v15);
  uint64_t v16 = a2[3];
  uint64_t v17 = a2[4];
  __swift_project_boxed_opaque_existential_1(a2, v16);
  return sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24D9C2AEC, a3, v16, v13, v17);
}

uint64_t sub_24D9C23F4(void *a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v30 - v7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  if (sub_24DCC9EE8())
  {
    uint64_t v10 = a1[3];
    uint64_t v11 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v10);
    return sub_24D90FFEC(0xD000000000000013, 0x800000024DD096E0, v10, v11);
  }
  uint64_t v36 = AssociatedConformanceWitness;
  uint64_t v37 = a1;
  uint64_t v33 = v2;
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_24DCCA5F8();
    uint64_t result = sub_24DCC9EF8();
    a2 = v41;
    uint64_t v32 = v42;
    uint64_t v13 = v43;
    uint64_t v35 = v44;
    unint64_t v14 = v45;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
    uint64_t v16 = *(void *)(a2 + 56);
    uint64_t v32 = a2 + 56;
    uint64_t v17 = ~v15;
    uint64_t v18 = -v15;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v14 = v19 & v16;
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v13 = v17;
    uint64_t v35 = 0;
  }
  uint64_t v34 = a2 & 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v46 = AssociatedTypeWitness - 8;
  uint64_t v30 = v13;
  int64_t v31 = (unint64_t)(v13 + 64) >> 6;
  uint64_t v38 = a2;
  while (a2 < 0)
  {
    if (!sub_24DCCA628()) {
      goto LABEL_29;
    }
    sub_24DCCADE8();
    swift_unknownObjectRelease();
    uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
LABEL_12:
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v8, 0, 1, AssociatedTypeWitness);
    uint64_t v25 = v37[3];
    uint64_t v24 = v37[4];
    __swift_project_boxed_opaque_existential_1(v37, v25);
    uint64_t v39 = 0;
    uint64_t v40 = 0xE000000000000000;
    sub_24DCCADC8();
    sub_24D90FFEC(v39, v40, v25, v24);
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v8, AssociatedTypeWitness);
    a2 = v38;
  }
  if (v14)
  {
    unint64_t v20 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v21 = v20 | (v35 << 6);
LABEL_11:
    uint64_t v22 = *(void *)(a2 + 48);
    uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v23 + 16))(v8, v22 + *(void *)(v23 + 72) * v21, AssociatedTypeWitness);
    goto LABEL_12;
  }
  int64_t v26 = v35 + 1;
  if (!__OFADD__(v35, 1))
  {
    if (v26 >= v31) {
      goto LABEL_29;
    }
    unint64_t v27 = *(void *)(v32 + 8 * v26);
    uint64_t v28 = v35 + 1;
    if (!v27)
    {
      uint64_t v28 = v35 + 2;
      if (v35 + 2 >= v31) {
        goto LABEL_29;
      }
      unint64_t v27 = *(void *)(v32 + 8 * v28);
      if (!v27)
      {
        uint64_t v28 = v35 + 3;
        if (v35 + 3 >= v31) {
          goto LABEL_29;
        }
        unint64_t v27 = *(void *)(v32 + 8 * v28);
        if (!v27)
        {
          uint64_t v29 = v35 + 4;
          while (v31 != v29)
          {
            unint64_t v27 = *(void *)(v32 + 8 * v29++);
            if (v27)
            {
              uint64_t v28 = v29 - 1;
              goto LABEL_26;
            }
          }
LABEL_29:
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v8, 1, 1, AssociatedTypeWitness);
          return sub_24D3E6690();
        }
      }
    }
LABEL_26:
    unint64_t v14 = (v27 - 1) & v27;
    unint64_t v21 = __clz(__rbit64(v27)) + (v28 << 6);
    uint64_t v35 = v28;
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D9C28AC()
{
  return sub_24DCCA368();
}

uint64_t sub_24D9C28D0()
{
  swift_weakDestroy();

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_24D9C2910()
{
  sub_24D9C28D0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StuckDeletionMonitor()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D9C2960(uint64_t *a1)
{
  return sub_24D9C223C(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D9C297C()
{
  return swift_deallocObject();
}

uint64_t sub_24D9C298C()
{
  return (*(uint64_t (**)(void))(v0 + 40))();
}

uint64_t sub_24D9C29B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = a6;
  v12[5] = a1;
  v12[6] = a2;
  swift_retain();
  uint64_t v14 = a3;
  sub_24D9C2A9C(&v14);
  return swift_release();
}

uint64_t sub_24D9C2A64()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9C2A9C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 40))(*a1);
}

uint64_t sub_24D9C2AC8(void *a1)
{
  return sub_24D9C23F4(a1, *(void *)(v1 + 48));
}

uint64_t sub_24D9C2AEC(uint64_t a1)
{
  return sub_24D43D6EC(a1);
}

uint64_t sub_24D9C2B18()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9C2B58(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24D3D369C;
  return sub_24D9C1F8C(a1, v4, v5, v6);
}

uint64_t sub_24D9C2C0C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D9C2C6C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9C2CA4()
{
  return swift_initClassMetadata2();
}

unint64_t sub_24D9C2D2C()
{
  return 0xD000000000000221;
}

unint64_t sub_24D9C2D48()
{
  return 0xD000000000000073;
}

unint64_t sub_24D9C2D64()
{
  return 0xD000000000000092;
}

unint64_t sub_24D9C2D80()
{
  return 0xD000000000000086;
}

unint64_t sub_24D9C2D9C()
{
  return 0xD00000000000006ELL;
}

unint64_t sub_24D9C2DB8()
{
  return 0xD00000000000003CLL;
}

void sub_24D9C2DD8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24DCC8288();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8178();
  uint64_t v7 = sub_24DCC8A58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
  uint64_t v8 = (void *)sub_24DCC8298();
  sub_24D415F74((uint64_t)v2, (uint64_t *)&unk_26B199050);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

  qword_26B1A2360 = (uint64_t)&unk_26FFA3718;
}

void sub_24D9C2F64()
{
  qword_26B1A24B8 = (uint64_t)&unk_26FFA24A8;
}

void sub_24D9C2F78()
{
  qword_26B1A2398 = (uint64_t)&unk_26FFA3278;
}

uint64_t sub_24D9C2F90()
{
  return 74;
}

uint64_t sub_24D9C3000()
{
  return 1280267850;
}

BOOL sub_24D9C3010()
{
  return sub_24D506A58() || sub_24D506A58();
}

void sub_24D9C3058(uint64_t a1, uint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6 = v4;
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v11 = *(void **)(v4 + 16);
  long long v12 = (void *)swift_allocObject();
  v12[2] = v6;
  v12[3] = a1;
  v12[4] = a2;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = sub_24D900624;
  v13[3] = v12;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v13;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_114_1;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v15 = objc_msgSend(v11, sel_fetchSwift_error_, v14, aBlock);
  _Block_release(v14);
  id v17 = aBlock[0];
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6) {
    __break(1u);
  }
  if (v15)
  {
    if (objc_msgSend(v15, sel_next, v17))
    {
      while (1)
      {
        uint64_t v16 = (void *)MEMORY[0x253329610]();
        sub_24D9C32E4(a3, a4, v15);
        if (v5) {
          break;
        }
        if ((objc_msgSend(v15, sel_next) & 1) == 0) {
          goto LABEL_9;
        }
      }
    }
LABEL_9:
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_24D9C32E4(void (*a1)(uint64_t), uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for FSOrFPJob();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_24DA6D518(a3, 0, v6, WitnessTable, (uint64_t)&v9);
  if (!v3)
  {
    a1(v9);
    return swift_release();
  }
  return result;
}

uint64_t sub_24D9C33AC(uint64_t a1, uint64_t a2)
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v2 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  uint64_t v7 = (void *)swift_allocObject();
  unsigned __int8 v8 = v7;
  _OWORD v7[2] = sub_24D9CEDF4;
  v7[3] = v6;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v7;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_104_2;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v10 = objc_msgSend(v5, sel_fetchSwift_error_, v9, aBlock);
  _Block_release(v9);
  id v11 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v10)
  {
    unsigned __int8 v8 = objc_msgSend(v10, sel_next);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return v8 & 1;
}

unint64_t sub_24D9C359C(uint64_t a1, void (*a2)(uint64_t))
{
  return 0xD00000000000001CLL;
}

uint64_t sub_24D9C3654(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *v2;
  uint64_t v10 = 0xF000000000000007;
  long long v5 = *(_OWORD *)(v4 + 560);
  v8[1] = *(_OWORD *)(v4 + 544);
  v8[2] = v5;
  uint64_t v9 = &v10;
  sub_24D9C3058(a1, a2, (void (*)(uint64_t))sub_24D9CEDA0, (uint64_t)v8);
  uint64_t v6 = v10;
  if (v3) {
    sub_24D4A4444(v10);
  }
  return v6;
}

uint64_t sub_24D9C36EC(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24D9C3654(a1, a2);
  if (!v2)
  {
    if ((~result & 0xF000000000000007) != 0)
    {
      if (result < 0)
      {
        uint64_t result = sub_24DCCA978();
        __break(1u);
      }
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D9C3774(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_24D9C3654(a1, a2);
  if (v2) {
    return v4;
  }
  if ((~v3 & 0xF000000000000007) == 0) {
    return 0;
  }
  if (v3 < 0) {
    return v3 & 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24D9C3804@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = *(void **)(v3 + 16);
  objc_msgSend(v6, sel_assertOnQueue);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v3;
  *(void *)(v7 + 24) = a1;
  unsigned __int8 v8 = (void *)swift_allocObject();
  v8[2] = sub_24D9CED88;
  _OWORD v8[3] = v7;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v8;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_94_2;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v10 = objc_msgSend(v6, sel_executeSwift_error_, v9, aBlock);
  _Block_release(v9);
  id v11 = aBlock[0];
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v9) {
    __break(1u);
  }
  if (v10)
  {
    id v12 = objc_msgSend(v6, sel_lastInsertedRowID);
    a2[3] = &type metadata for SQLJobID;
    a2[4] = sub_24D900694();
    uint64_t result = swift_release();
    *a2 = v12;
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
  return result;
}

uint64_t sub_24D9C3A30(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (void *)*a2;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v5 = v4[68];
  unint64_t v6 = v4[69];
  uint64_t v7 = v4[70];
  uint64_t v8 = v4[71];
  sub_24D987CD0(a3);
  uint64_t v22 = MEMORY[0x263F8D6C8];
  uint64_t v19 = v9;
  sub_24D3E3EB4((uint64_t)&v19);
  uint64_t v11 = v10;
  sub_24D415F74((uint64_t)&v19, qword_26B197F50);
  if (!v11) {
    goto LABEL_4;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v12 = sub_24D987CD0(a3);
  uint64_t v22 = MEMORY[0x263F8D9D0];
  uint64_t v19 = v12;
  sub_24D3E3EB4((uint64_t)&v19);
  uint64_t v14 = v13;
  sub_24D415F74((uint64_t)&v19, qword_26B197F50);
  if (v14)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v18 = a3;
    swift_retain();
    uint64_t v19 = v5;
    unint64_t v20 = v6;
    uint64_t v21 = v7;
    uint64_t v22 = v8;
    uint64_t v15 = type metadata accessor for FSOrFPJob();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_24D734148((uint64_t)&v18, v15, WitnessTable);
    swift_release();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    return v23;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9C3D3C(uint64_t a1)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void **)v1;
  id v4 = *(id *)(v1 + 16);
  objc_msgSend(v4, sel_assertOnQueue);
  uint64_t v5 = v3[68];
  uint64_t v6 = v3[69];
  uint64_t v7 = v3[70];
  uint64_t v8 = v3[71];
  sub_24D987E98(a1, (uint64_t)&aBlock);
  if (!v45)
  {
    sub_24D415F74((uint64_t)&aBlock, &qword_26B1937B8);
LABEL_36:
    sub_24DA84470((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLJobRegistry.swift", 133, 2, 187);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1937B0);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_36;
  }
  id v9 = v41;
  uint64_t v10 = sub_24D9882BC(a1);
  if (v12 == 3 || (v12 == 4 ? (BOOL v13 = (v10 & 0xFFFFFFFFFFFFFFFELL | v11) == 0) : (BOOL v13 = 0), v13))
  {
    if (*(unsigned char *)(v1 + 48) == 1)
    {
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = v41;
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = sub_24D9009AC;
      *(void *)(v8 + 24) = v14;
      uint64_t v46 = sub_24D3E3980;
      uint64_t v47 = v8;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v43 = 1107296256;
      uint64_t v44 = sub_24D3E38DC;
      unint64_t v45 = &block_descriptor_84_0;
      uint64_t v15 = _Block_copy(&aBlock);
      swift_retain();
      swift_release();
      id aBlock = 0;
      id v9 = objc_msgSend(v4, sel_executeSwift_error_, v15, &aBlock);
      _Block_release(v15);
      a1 = (uint64_t)aBlock;
      id v4 = aBlock;
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((isEscapingClosureAtFileLocation & 1) == 0)
      {
LABEL_24:
        if (v9) {
          return swift_release();
        }
        sub_24DCC8828();

        swift_willThrow();
        return swift_release();
      }
      __break(1u);
    }
  }
  id v17 = (void *)sub_24D9882BC(a1);
  if (v19 != 1) {
    goto LABEL_23;
  }
  unint64_t v20 = v17;
  if (!v17)
  {
    sub_24D3F1C98(0, v18, 1);
    goto LABEL_23;
  }
  id v39 = v9;
  id v40 = v4;
  uint64_t v21 = *(uint64_t (**)(id))(*(void *)v17 + 88);
  uint64_t v22 = v18;
  id v23 = sub_24D3F1C98(v17, v18, 1);
  uint64_t v24 = v21(v23);
  if (v26 != 3 || v24 != 1 || v25 != 0)
  {
    sub_24D512AEC(v24, v25, v26);
    sub_24D3E380C(v20, v22, 1);
    id v9 = v39;
    id v4 = v40;
LABEL_23:
    uint64_t v29 = (void *)swift_allocObject();
    v29[2] = v5;
    v29[3] = v6;
    v29[4] = v7;
    v29[5] = v8;
    v29[6] = a1;
    v29[7] = v9;
    uint64_t v30 = swift_allocObject();
    *(void *)(v30 + 16) = sub_24D9CEC7C;
    *(void *)(v30 + 24) = v29;
    uint64_t v46 = sub_24D3E3980;
    uint64_t v47 = v30;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_24D3E38DC;
    unint64_t v45 = &block_descriptor_64_0;
    int64_t v31 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    LODWORD(v9) = objc_msgSend(v4, sel_executeSwift_error_, v31, &aBlock);
    _Block_release(v31);
    id v4 = aBlock;
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v31 & 1) == 0) {
      goto LABEL_24;
    }
    __break(1u);
LABEL_34:
    __break(1u);
  }
  uint64_t v33 = v20;
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = v5;
  v34[3] = v6;
  v34[4] = v7;
  v34[5] = v8;
  v34[6] = a1;
  v34[7] = v39;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_24D9CECE4;
  *(void *)(v35 + 24) = v34;
  uint64_t v46 = sub_24D3E3980;
  uint64_t v47 = v35;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  uint64_t v44 = sub_24D3E38DC;
  unint64_t v45 = &block_descriptor_74;
  uint64_t v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v37 = objc_msgSend(v40, sel_executeSwift_error_, v36, &aBlock);
  _Block_release(v36);
  id v38 = aBlock;
  LOBYTE(v36) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v36) {
    goto LABEL_34;
  }
  if (v37)
  {
    sub_24D3E380C(v33, v22, 1);
    return swift_release();
  }
  sub_24DCC8828();

  swift_willThrow();
  sub_24D3E380C(v33, v22, 1);
  return swift_release();
}

unint64_t sub_24D9C439C(uint64_t a1, uint64_t a2)
{
  return 0xD000000000000022;
}

uint64_t sub_24D9C4430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v17[1] = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_24DCC9968();
  id v4 = (void *)sub_24D9882BC(a2);
  uint64_t v6 = v5;
  char v8 = v7;
  sub_24D3F1C98(v4, v5, v7);
  sub_24D833860((unint64_t)v4, (unint64_t)v6, v8, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_24D3E380C(v4, v6, v8);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D987CD0(a2);
  uint64_t v18 = MEMORY[0x263F8D6C8];
  v17[0] = v9;
  sub_24D3E3EB4((uint64_t)v17);
  uint64_t v11 = v10;
  sub_24D415F74((uint64_t)v17, qword_26B197F50);
  if (!v11) {
    goto LABEL_4;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v12 = sub_24D987CD0(a2);
  uint64_t v18 = MEMORY[0x263F8D9D0];
  v17[0] = v12;
  sub_24D3E3EB4((uint64_t)v17);
  uint64_t v14 = v13;
  sub_24D415F74((uint64_t)v17, qword_26B197F50);
  if (v14)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24D5F1F74(a3, 0);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

unint64_t sub_24D9C4728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v5 = (void *)sub_24D9882BC(a2);
  char v7 = v6;
  char v9 = v8;
  sub_24D3F1C98(v5, v6, v8);
  sub_24D833860((unint64_t)v5, (unint64_t)v7, v9, 0x696C756465686373, 0xEB000000005F676ELL);
  sub_24D3E380C(v5, v7, v9);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D5F1F74(a3, 0);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0xD000000000000013;
}

uint64_t sub_24D9C4890(uint64_t a1, void (**a2)(char *, uint64_t))
{
  unint64_t v76 = a2;
  uint64_t v82 = a1;
  uint64_t v3 = *(void *)(*(void *)v2 + 544);
  uint64_t v4 = *(void *)(*(void *)v2 + 560);
  uint64_t v5 = *(ValueMetadata **)(*(void *)v2 + 568);
  uint64_t v79 = *(void *)(*(void *)v2 + 552);
  uint64_t v80 = v3;
  uint64_t v83 = v3;
  uint64_t v84 = v79;
  uint64_t v85 = v4;
  unint64_t v86 = v5;
  uint64_t v68 = type metadata accessor for PersistenceTrigger();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  unint64_t v66 = (uint64_t *)((char *)&v65 - v6);
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v81 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v65 - v14;
  uint64_t v16 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v16);
  unint64_t v78 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v15, 1, 1, v7);
  uint64_t v88 = 0;
  unint64_t v89 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v90 = v82;
  uint64_t v83 = v80;
  uint64_t v84 = v79;
  unint64_t v70 = v5;
  uint64_t v71 = v4;
  uint64_t v85 = v4;
  unint64_t v86 = v5;
  uint64_t v19 = type metadata accessor for FSOrFPJob();
  swift_getWitnessTable();
  sub_24DCCADC8();
  unint64_t v20 = v89;
  uint64_t v73 = v88;
  uint64_t v74 = v15;
  sub_24D409D24((uint64_t)v15, (uint64_t)v13);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  uint64_t v69 = v19;
  if (v21 == 1)
  {
    id v22 = v18;
    id v23 = v81;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
  }
  else
  {
    id v23 = v81;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v81, v13, v7);
  }
  uint64_t v24 = (uint64_t)v78;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v78, v23, v7);
  uint64_t v72 = *(int *)(v16 + 20);
  *(void *)(v24 + v72) = v18;
  uint64_t v25 = (char *)(v24 + *(int *)(v16 + 24));
  *(void *)uint64_t v25 = "SQLDB: Persist Job";
  *((void *)v25 + 1) = 18;
  v25[16] = 2;
  id v26 = v18;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_24DCCECE0;
  *(void *)(v27 + 56) = MEMORY[0x263F8D310];
  *(void *)(v27 + 64) = sub_24D3F7B98();
  *(void *)(v27 + 32) = v73;
  *(void *)(v27 + 40) = v20;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v81, v7);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v74, &qword_26B1990B0);
  uint64_t v28 = *(void *)(v77 + 24);
  swift_retain();
  uint64_t v29 = v82;
  uint64_t v30 = v75;
  int64_t v31 = v76;
  sub_24D50D7F4(v82, v76);
  if (!v30)
  {
    uint64_t v75 = v28;
    unint64_t v81 = v25;
    swift_release();
    uint64_t v32 = v70;
    unint64_t v33 = sub_24D9882B4(v29);
    swift_retain();
    swift_retain();
    sub_24D50D7F4(v33, v31);
    swift_release();
    swift_release();
    uint64_t Strong = (void **)swift_weakLoadStrong();
    if (Strong)
    {
      sub_24D5862B0(v29, Strong);
      swift_release();
      char v36 = sub_24D9882BC(v29);
      if (v37) {
        goto LABEL_19;
      }
      char v38 = v36;
      if ((v36 & 1) == 0)
      {
LABEL_16:
        if (v38 < 0)
        {
          if (swift_weakLoadStrong())
          {
            sub_24DA39044();
            swift_release();
            goto LABEL_19;
          }
          goto LABEL_68;
        }
LABEL_19:
        uint64_t v83 = v80;
        uint64_t v84 = v79;
        uint64_t v85 = v71;
        unint64_t v86 = v32;
        type metadata accessor for ItemJob();
        uint64_t v44 = swift_dynamicCastClass();
        if (v44)
        {
          uint64_t v45 = v44;
          int v46 = *(unsigned __int8 *)(v44 + 112);
          if ((v46 == 3 || v46 == 4 && !(*(void *)(v44 + 96) & 0xFFFFFFFFFFFFFFFELL | *(void *)(v44 + 104)))
            && (uint64_t v83 = v80,
                uint64_t v84 = v79,
                uint64_t v85 = v71,
                unint64_t v86 = v70,
                type metadata accessor for Materialization.MaterializeItem(),
                (uint64_t v47 = swift_dynamicCastClass()) != 0))
          {
            uint64_t v48 = v47;
            swift_retain();
            sub_24DCBBADC(v48, v76);
          }
          else
          {
            swift_retain();
          }
          sub_24D5949A8(v45);
          uint64_t v24 = (uint64_t)v78;
LABEL_64:
          sub_24DCCA2C8();
          goto LABEL_8;
        }
        sub_24D987E98(v29, (uint64_t)&v83);
        uint64_t v49 = v86;
        sub_24D415F74((uint64_t)&v83, &qword_26B1937B8);
        if (v49)
        {
          sub_24D9C3D3C(v29);
          uint64_t v50 = (void *)sub_24D9882BC(v29);
          uint64_t v24 = (uint64_t)v78;
          switch(v52)
          {
            case 1:
              if (v50) {
                goto LABEL_39;
              }
              char v56 = 1;
              goto LABEL_45;
            case 2:
              goto LABEL_46;
            case 3:
            case 4:
              if (!swift_weakLoadStrong()) {
                goto LABEL_70;
              }
              uint64_t v61 = (uint64_t)v66;
              *unint64_t v66 = v29;
              uint64_t v62 = v68;
              swift_storeEnumTagMultiPayload();
              swift_retain();
              sub_24DA38760(v61);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v61, v62);
              if (!swift_weakLoadStrong()) {
                goto LABEL_58;
              }
              uint64_t v63 = sub_24DA38488();
              swift_release();
              if (!v63) {
                goto LABEL_59;
              }
              if (!swift_weakLoadStrong()) {
                goto LABEL_73;
              }
              uint64_t v29 = v82;
              (*(void (**)(void))(*(void *)v63 + 128))();
              goto LABEL_57;
            default:
              if (!v51)
              {
                char v56 = 0;
LABEL_45:
                sub_24D3E380C(v50, v51, v56);
LABEL_46:
                swift_retain();
                goto LABEL_61;
              }
LABEL_39:
              if (!swift_weakLoadStrong()) {
                goto LABEL_72;
              }
              uint64_t v57 = (uint64_t)v66;
              *unint64_t v66 = v29;
              uint64_t v58 = v68;
              swift_storeEnumTagMultiPayload();
              swift_retain();
              sub_24DA38760(v57);
              swift_release();
              (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v57, v58);
              if (!swift_weakLoadStrong())
              {
LABEL_58:
                swift_retain();
                uint64_t v29 = v82;
                uint64_t v24 = (uint64_t)v78;
LABEL_61:
                sub_24D9882BC(v29);
                if (v64 == 1 && swift_weakLoadStrong())
                {
                  sub_24DA30ACC();
                  swift_release();
                }
                goto LABEL_64;
              }
              uint64_t v59 = sub_24DA38488();
              swift_release();
              if (v59)
              {
                if (swift_weakLoadStrong())
                {
                  uint64_t v29 = v82;
                  (*(void (**)(void))(*(void *)v59 + 136))();
LABEL_57:
                  swift_release();
                  swift_release();
                  swift_retain();
                  break;
                }
LABEL_74:
                __break(1u);
                JUMPOUT(0x24D9C573CLL);
              }
LABEL_59:
              swift_retain();
              uint64_t v29 = v82;
              break;
          }
LABEL_60:
          uint64_t v24 = (uint64_t)v78;
          goto LABEL_61;
        }
        uint64_t v88 = v29;
        uint64_t v53 = sub_24D9882BC(v29);
        if (v55 == 3 || v55 == 4 && !(v53 & 0xFFFFFFFFFFFFFFFELL | v54)) && (*(unsigned char *)(v77 + 48))
        {
          unint64_t v86 = &type metadata for SQLVolatileJobID;
          unint64_t v87 = sub_24D9CE9C4();
          uint64_t v83 = 0x7FFFFFFFFFFFFFFFLL;
          swift_retain();
        }
        else
        {
          swift_retain();
          sub_24D9C3804(v29, &v83);
        }
        sub_24D987EF4((uint64_t)&v83);
        swift_retain();
        if (!swift_weakLoadStrong() || (uint64_t v60 = sub_24DA38488(), swift_release(), !v60))
        {
LABEL_51:
          swift_release();
          goto LABEL_60;
        }
        if (swift_weakLoadStrong())
        {
          (*(void (**)(void))(*(void *)v60 + 120))();
          swift_release();
          swift_release();
          goto LABEL_51;
        }
LABEL_71:
        swift_release();
        __break(1u);
LABEL_72:
        __break(1u);
        __break(1u);
LABEL_73:
        __break(1u);
        __break(1u);
        goto LABEL_74;
      }
      if (!swift_weakLoadStrong())
      {
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
LABEL_70:
        __break(1u);
        goto LABEL_71;
      }
      uint64_t v39 = sub_24DA6384C();
      swift_retain();
      swift_release();
      uint64_t v40 = *(void *)(v39 + 16);
      BOOL v41 = __OFADD__(v40, 1);
      uint64_t v42 = v40 + 1;
      if (!v41)
      {
        *(void *)(v39 + 16) = v42;
        swift_release();
        uint64_t v43 = swift_weakLoadStrong();
        uint64_t v32 = v70;
        if (!v43) {
          goto LABEL_69;
        }
        sub_24D8754CC();
        swift_release();
        goto LABEL_16;
      }
      __break(1u);
    }
    __break(1u);
    goto LABEL_67;
  }
  swift_release();
  sub_24DCCA2C8();
LABEL_8:
  sub_24DCC8F98();
  sub_24D5A2F00(v24);
  return v29;
}

void sub_24D9C5750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v8 = (void *)*v6;
  uint64_t v9 = a3 + a4;
  if (__OFADD__(a3, a4))
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v10 = a5;
  if (__OFADD__(v9, a5))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v9 + a5)
  {
    uint64_t v34 = a5;
    uint64_t v35 = a3;
    uint64_t v39 = a4;
    uint64_t v12 = MEMORY[0x270FA5388](a1);
    char v31 = v13;
    uint64_t v32 = v14;
    uint64_t v33 = v15;
    MEMORY[0x270FA5388](v12);
    uint64_t v17 = v16[68];
    uint64_t v18 = v16[69];
    v30[2] = v17;
    v30[3] = v18;
    uint64_t v19 = v16[70];
    uint64_t v20 = v16[71];
    v30[4] = v19;
    v30[5] = v20;
    v30[6] = a6;
    v30[7] = &v35;
    v30[8] = v21;
    v30[9] = &v39;
    sub_24D9C3058((uint64_t)sub_24D9CEBFC, v22, (void (*)(uint64_t))sub_24D9CEC08, (uint64_t)v30);
    if (v7) {
      return;
    }
    uint64_t v10 = v34;
  }
  else
  {
    uint64_t v17 = v8[68];
    uint64_t v18 = v8[69];
    uint64_t v19 = v8[70];
    uint64_t v20 = v8[71];
  }
  uint64_t v39 = *a6;
  uint64_t v35 = v17;
  uint64_t v36 = v18;
  uint64_t v37 = v19;
  uint64_t v38 = v20;
  uint64_t v23 = type metadata accessor for SchedulableJob();
  sub_24DCC9D48();
  swift_getWitnessTable();
  if ((sub_24DCC9FE8() & 1) == 0)
  {
    swift_getWitnessTable();
    swift_getWitnessTable();
    swift_getWitnessTable();
    sub_24DCC9788();
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = MEMORY[0x253327D80](v24, v23);
    swift_bridgeObjectRelease();
    if (v25 >= v10) {
      uint64_t v26 = v10;
    }
    else {
      uint64_t v26 = v25;
    }
    if ((v26 & 0x8000000000000000) == 0)
    {
      uint64_t v35 = sub_24DCC9D88();
      uint64_t v36 = v27;
      uint64_t v37 = v28;
      uint64_t v38 = v29;
      sub_24DCCA578();
      swift_getWitnessTable();
      swift_getWitnessTable();
      sub_24DCCA038();
      swift_unknownObjectRelease();
      return;
    }
LABEL_16:
    __break(1u);
  }
}

uint64_t sub_24D9C5A5C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  *(void *)(swift_allocObject() + 16) = a1;
  swift_bridgeObjectRetain();
  id v6 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1908C0);
  sub_24D3E4A9C((unint64_t *)&unk_26B194108, &qword_26B1908C0);
  sub_24D3F0EB8();
  sub_24DCC9B28();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v7 = objc_msgSend(v6, sel_bindLongParameter_, a4);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D9C5D0C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v32 = a4;
  uint64_t v15 = sub_24DCC9078();
  uint64_t v33 = *(void *)(v15 - 8);
  uint64_t v34 = v15;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(sub_24D987D0C(a1))
  {
    case 2u:
    case 3u:
      if ((uint64_t)*a3 < 1) {
        return 1;
      }
      uint64_t v35 = a6;
      uint64_t v36 = a7;
      uint64_t v37 = a8;
      uint64_t v38 = a9;
      type metadata accessor for SchedulableJob();
      uint64_t v35 = sub_24D57EDE4(a1);
      sub_24DCC9D48();
      swift_retain();
      sub_24DCC9D08();
      if (__OFSUB__(*a3, 1))
      {
        __break(1u);
LABEL_15:
        __break(1u);
        JUMPOUT(0x24D9C60FCLL);
      }
      --*a3;
      break;
    case 4u:
    case 5u:
      if ((uint64_t)*a5 < 1) {
        return 1;
      }
      uint64_t v35 = a6;
      uint64_t v36 = a7;
      uint64_t v37 = a8;
      uint64_t v38 = a9;
      type metadata accessor for SchedulableJob();
      uint64_t v35 = sub_24D57EDE4(a1);
      sub_24DCC9D48();
      swift_retain();
      sub_24DCC9D08();
      if (__OFSUB__(*a5, 1)) {
        goto LABEL_15;
      }
      --*a5;
      break;
    case 6u:
    case 7u:
      uint64_t v35 = a6;
      uint64_t v36 = a7;
      uint64_t v37 = a8;
      uint64_t v38 = a9;
      type metadata accessor for SchedulableJob();
      uint64_t v35 = sub_24D57EDE4(a1);
      sub_24DCC9D48();
      swift_retain();
      sub_24DCC9D08();
      return 1;
    default:
      id v18 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      swift_retain_n();
      uint64_t v19 = sub_24DCC9068();
      os_log_type_t v20 = sub_24DCCA138();
      int v21 = v20;
      if (os_log_type_enabled(v19, v20))
      {
        uint64_t v22 = swift_slowAlloc();
        int v31 = v21;
        uint64_t v23 = (uint8_t *)v22;
        uint64_t v32 = swift_slowAlloc();
        uint64_t v35 = v32;
        uint64_t v30 = v23;
        *(_DWORD *)uint64_t v23 = 136315138;
        v29[1] = v23 + 4;
        LOBYTE(v39) = sub_24D987D0C(a1);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26986FFD8);
        uint64_t v24 = sub_24DCC9868();
        uint64_t v39 = sub_24D418FB4(v24, v25, &v35);
        sub_24DCCA428();
        swift_release_n();
        swift_bridgeObjectRelease();
        uint64_t v26 = v30;
        _os_log_impl(&dword_24D3D0000, v19, (os_log_type_t)v31, "unexpected %s job in fetchRunnableJobs", v30, 0xCu);
        uint64_t v27 = v32;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v27, -1, -1);
        MEMORY[0x25332B030](v26, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v17, v34);
      return 1;
  }
  return 1;
}

uint64_t sub_24D9C6124(unsigned int a1, char a2, uint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v7 = *(void *)(*(void *)v5 + 560);
  uint64_t v8 = *(void *)(*(void *)v5 + 568);
  uint64_t v95 = *(void *)(*(void *)v5 + 552);
  uint64_t v96 = *(void *)(*(void *)v5 + 544);
  uint64_t v100 = v96;
  uint64_t v101 = v95;
  uint64_t v93 = v8;
  uint64_t v94 = v7;
  uint64_t v102 = v7;
  uint64_t v103 = v8;
  uint64_t v9 = type metadata accessor for SchedulableJob();
  uint64_t v104 = sub_24DCC9C98();
  uint64_t v10 = *(void *)(a3 + 16);
  uint64_t v11 = MEMORY[0x263F8EE78];
  uint64_t v92 = a3;
  if (v10)
  {
    uint64_t v12 = a3 + 32;
    swift_bridgeObjectRetain();
    char v13 = (void *)MEMORY[0x263F8EE78];
    do
    {
      sub_24D433858(v12, (uint64_t)&v100);
      sub_24D433858((uint64_t)&v100, (uint64_t)v97);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1937B0);
      char v14 = swift_dynamicCast();
      if ((v14 & 1) == 0) {
        uint64_t v98 = 0;
      }
      char v99 = v14 ^ 1;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v100);
      if ((v99 & 1) == 0)
      {
        uint64_t v15 = v98;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v13 = sub_24DA15C80(0, v13[2] + 1, 1, v13);
        }
        unint64_t v17 = v13[2];
        unint64_t v16 = v13[3];
        if (v17 >= v16 >> 1) {
          char v13 = sub_24DA15C80((void *)(v16 > 1), v17 + 1, 1, v13);
        }
        v13[2] = v17 + 1;
        v13[v17 + 4] = v15;
      }
      v12 += 40;
      --v10;
    }
    while (v10);
    swift_bridgeObjectRelease();
    uint64_t v11 = MEMORY[0x263F8EE78];
    int64_t v18 = v13[2];
    if (v18) {
      goto LABEL_13;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v20 = MEMORY[0x263F8EE78];
    goto LABEL_20;
  }
  char v13 = (void *)MEMORY[0x263F8EE78];
  int64_t v18 = *(void *)(MEMORY[0x263F8EE78] + 16);
  if (!v18) {
    goto LABEL_19;
  }
LABEL_13:
  uint64_t v100 = v11;
  sub_24D7C720C(0, v18, 0);
  uint64_t v19 = 0;
  uint64_t v20 = v100;
  unint64_t v21 = *(void *)(v100 + 16);
  do
  {
    uint64_t v22 = v13[v19 + 4];
    uint64_t v100 = v20;
    unint64_t v23 = *(void *)(v20 + 24);
    if (v21 >= v23 >> 1)
    {
      sub_24D7C720C(v23 > 1, v21 + 1, 1);
      uint64_t v20 = v100;
    }
    ++v19;
    *(void *)(v20 + 16) = v21 + 1;
    *(void *)(v20 + 8 * v21++ + 32) = v22;
  }
  while (v18 != v19);
  swift_bridgeObjectRelease();
LABEL_20:
  uint64_t v24 = sub_24D58F340(v20);
  swift_bridgeObjectRelease();
  uint64_t v25 = v85;
  uint64_t v26 = v91;
  uint64_t v27 = a4;
  uint64_t v87 = v24;
  if (a1) {
    goto LABEL_37;
  }
  uint64_t v28 = a4(0);
  uint64_t v30 = *(void *)(v28 + 16);
  uint64_t v29 = *(void *)(v28 + 24);
  uint64_t result = swift_release();
  BOOL v32 = __OFSUB__(v29, v30);
  uint64_t v33 = v29 - v30;
  if (v32)
  {
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v34 = a4(6);
  uint64_t v35 = *(void *)(v34 + 16);
  uint64_t v36 = *(void *)(v34 + 24);
  uint64_t result = swift_release();
  uint64_t v37 = v36 - v35;
  if (__OFSUB__(v36, v35))
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v38 = a4(2);
  uint64_t v39 = *(void *)(v38 + 16);
  uint64_t v40 = *(void *)(v38 + 24);
  uint64_t result = swift_release();
  if (__OFSUB__(v40, v39))
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v82 = v40 - v39;
  uint64_t v41 = a4(4);
  uint64_t v43 = *(void *)(v41 + 16);
  uint64_t v42 = *(void *)(v41 + 24);
  uint64_t result = swift_release();
  uint64_t v44 = v42 - v43;
  if (__OFSUB__(v42, v43))
  {
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v100 = sub_24DCC9C98();
  uint64_t v45 = *(void *)(v91 + 24);
  uint64_t v46 = v37;
  uint64_t v47 = sub_24D598D84(v92, v33, v37);
  if (v85)
  {
LABEL_42:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v45;
  }
  uint64_t v48 = v47;
  if (!MEMORY[0x253327DC0](v47, v9)) {
    goto LABEL_35;
  }
  uint64_t v49 = 4;
  while (1)
  {
    uint64_t v50 = v49 - 4;
    char v51 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if ((v51 & 1) == 0) {
      break;
    }
    uint64_t v52 = *(void *)(v48 + 8 * v49);
    swift_retain();
    uint64_t v53 = v49 - 3;
    if (__OFADD__(v50, 1)) {
      goto LABEL_34;
    }
LABEL_31:
    sub_24D987D0C(*(void *)(v52 + 40));
    v97[0] = v52;
    sub_24DCC9D48();
    sub_24DCC9D08();
    ++v49;
    if (v53 == MEMORY[0x253327DC0](v48, v9)) {
      goto LABEL_35;
    }
  }
  uint64_t v52 = sub_24DCCA778();
  uint64_t v53 = v49 - 3;
  if (!__OFADD__(v50, 1)) {
    goto LABEL_31;
  }
LABEL_34:
  __break(1u);
LABEL_35:
  swift_bridgeObjectRelease();
  uint64_t v54 = v46;
  uint64_t v26 = v91;
  sub_24D9C5750(0, v87, v82, v44, v54, &v100);
  swift_bridgeObjectRelease();
  if (a1 != 2) {
    goto LABEL_54;
  }
  uint64_t v27 = a4;
LABEL_37:
  uint64_t v55 = v27(1);
  uint64_t v57 = *(void *)(v55 + 16);
  uint64_t v56 = *(void *)(v55 + 24);
  uint64_t result = swift_release();
  BOOL v32 = __OFSUB__(v56, v57);
  uint64_t v58 = v56 - v57;
  if (v32) {
    goto LABEL_63;
  }
  uint64_t v59 = v27(7);
  uint64_t v60 = *(void *)(v59 + 16);
  uint64_t v61 = *(void *)(v59 + 24);
  uint64_t result = swift_release();
  uint64_t v62 = v61 - v60;
  if (__OFSUB__(v61, v60))
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v63 = v27(3);
  uint64_t v64 = *(void *)(v63 + 16);
  uint64_t v65 = *(void *)(v63 + 24);
  uint64_t result = swift_release();
  BOOL v32 = __OFSUB__(v65, v64);
  uint64_t v66 = v65 - v64;
  if (v32)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v67 = v27(5);
  uint64_t v69 = *(void *)(v67 + 16);
  uint64_t v68 = *(void *)(v67 + 24);
  uint64_t result = swift_release();
  uint64_t v70 = v68 - v69;
  if (__OFSUB__(v68, v69))
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v86 = v66;
  v97[0] = sub_24DCC9C98();
  uint64_t v45 = *(void *)(v26 + 32);
  uint64_t v71 = v62;
  uint64_t v72 = sub_24D598D84(v92, v58, v62);
  if (v25) {
    goto LABEL_42;
  }
  uint64_t v73 = v72;
  uint64_t v83 = v70;
  uint64_t v100 = v95;
  uint64_t v101 = v96;
  uint64_t v102 = v93;
  uint64_t v103 = v94;
  uint64_t v74 = type metadata accessor for SchedulableJob();
  if (!MEMORY[0x253327DC0](v73, v74)) {
    goto LABEL_53;
  }
  uint64_t v75 = 4;
  while (2)
  {
    uint64_t v76 = v75 - 4;
    char v77 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v77)
    {
      uint64_t v78 = *(void *)(v73 + 8 * v75);
      swift_retain();
      uint64_t v79 = v75 - 3;
      if (__OFADD__(v76, 1)) {
        break;
      }
      goto LABEL_49;
    }
    uint64_t v78 = sub_24DCCA778();
    uint64_t v79 = v75 - 3;
    if (!__OFADD__(v76, 1))
    {
LABEL_49:
      sub_24D987D0C(*(void *)(v78 + 40));
      uint64_t v100 = sub_24D57EF08();
      sub_24DCC9D48();
      sub_24DCC9D08();
      swift_release();
      ++v75;
      if (v79 == MEMORY[0x253327DC0](v73, v74)) {
        goto LABEL_53;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_53:
  swift_bridgeObjectRelease();
  sub_24D9C5750(1, v87, v86, v83, v71, v97);
  swift_bridgeObjectRelease();
LABEL_54:
  swift_bridgeObjectRelease();
  if ((a2 & 1) == 0) {
    return v104;
  }
  uint64_t v80 = swift_bridgeObjectRetain();
  uint64_t v81 = MEMORY[0x253327D80](v80, v9);
  swift_bridgeObjectRelease();
  if (v81 || sub_24DCB9EAC() < 1) {
    return v104;
  }
  swift_bridgeObjectRetain();
  sub_24D9C6124(a1, 0, v92, a4, a5);
  uint64_t v45 = sub_24DCC9C88();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return v45;
}

uint64_t sub_24D9C6950(unsigned int a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  return sub_24D9C6124(a1, 1, a2, a3, a4);
}

char *sub_24D9C6978(uint64_t a1, char a2, uint64_t a3, char a4)
{
  return sub_24D59CAF8(a2, a3, a4 & 1);
}

void *sub_24D9C69BC(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_24D59ABBC(a1, a2, a3 & 1, a4);
}

void *sub_24D9C69E4(char a1, uint64_t a2, char a3, uint64_t a4)
{
  return sub_24D59ABBC(a1, a2, a3 & 1, a4);
}

uint64_t sub_24D9C6A0C()
{
  uint64_t v2 = *(void *)(*(void *)v0 + 544);
  uint64_t v3 = *(void *)(*(void *)v0 + 552);
  uint64_t v4 = *(void *)(*(void *)v0 + 560);
  uint64_t v5 = *(void *)(*(void *)v0 + 568);
  uint64_t v17 = v2;
  uint64_t v18 = v3;
  uint64_t v19 = v4;
  uint64_t v20 = v5;
  uint64_t v6 = type metadata accessor for TestingOperation();
  uint64_t v21 = sub_24DCC9C98();
  uint64_t v14 = v0;
  uint64_t v15 = &v21;
  sub_24D9C3058((uint64_t)sub_24D59BC6C, 0, (void (*)(uint64_t))sub_24D9CE94C, (uint64_t)v13);
  if (v1) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v17 = sub_24D59BB98();
  sub_24DCC9D48();
  swift_getWitnessTable();
  sub_24DCC9CF8();
  uint64_t v16 = sub_24D59BB98();
  MEMORY[0x270FA5388](v16);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = v3;
  uint64_t v18 = v2;
  uint64_t v19 = v5;
  uint64_t v20 = v4;
  type metadata accessor for TestingOperation();
  uint64_t v8 = sub_24DCC9D48();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v11 = sub_24D7854B0((void (*)(char *, char *))sub_24D9CE988, KeyPath, v8, v6, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v10);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v17 = v11;
  sub_24DCC9CF8();
  return v21;
}

uint64_t sub_24D9C6CA0(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v78 = a3;
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 552);
  uint64_t v6 = *(ValueMetadata **)(*a2 + 568);
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v86 = sub_24DCCA3F8();
  uint64_t v81 = *(char **)(v86 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v86);
  uint64_t v85 = (uint64_t)&v73 - v9;
  uint64_t v83 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v82 = (char *)&v73 - v10;
  uint64_t v12 = *(ValueMetadata **)(v4 + 560);
  uint64_t AssociatedTypeWitness = *(void *)(v4 + 544);
  uint64_t v11 = AssociatedTypeWitness;
  uint64_t v88 = (char *)v5;
  unint64_t v89 = v12;
  uint64_t v90 = v6;
  uint64_t v76 = type metadata accessor for TestingOperation();
  MEMORY[0x270FA5388](v76);
  char v77 = (char *)&v73 - v13;
  uint64_t v14 = type metadata accessor for SnapshotItem();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v84 = (char *)v14;
  uint64_t v19 = *(void *)(v14 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v16);
  unint64_t v23 = (char *)&v73 - v22;
  uint64_t v79 = (char *)v5;
  uint64_t v80 = v6;
  uint64_t v74 = (char *)v11;
  uint64_t v75 = v12;
  if (a1 < 0)
  {
    uint64_t v29 = (char *)v85;
    uint64_t AssociatedTypeWitness = v5;
    uint64_t v88 = (char *)v11;
    unint64_t v89 = v6;
    uint64_t v90 = v12;
    uint64_t v30 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    type metadata accessor for Bouncing.BounceItem();
    uint64_t Strong = swift_dynamicCastClass();
    if (!Strong) {
      goto LABEL_25;
    }
    uint64_t v31 = Strong;
    uint64_t Strong = swift_weakLoadStrong();
    a1 = v86;
    if (Strong)
    {
      uint64_t v32 = *(void *)(Strong + 40);
      swift_retain();
      swift_retain();
      swift_release();
      uint64_t v33 = v31 + *(void *)(*(void *)v31 + 576);
      uint64_t v34 = v91;
      (*(void (**)(uint64_t, uint64_t))(*(void *)v32 + 240))(v33, 1);
      if (v34) {
        goto LABEL_5;
      }
      uint64_t v36 = v7;
      uint64_t v37 = v83;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v83 + 48))(v29, 1, v36) == 1)
      {
        swift_release();
        swift_release();
        (*((void (**)(char *, uint64_t))v81 + 1))(v29, a1);
      }
      else
      {
        uint64_t v42 = v82;
        (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v82, v29, v36);
        uint64_t v43 = (*(uint64_t (**)(uint64_t))(*(void *)v32 + 296))(v33);
        uint64_t v91 = v36;
        if (v44)
        {
          (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v91);
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v57 = v43;
          uint64_t v85 = v30;
          MEMORY[0x270FA5388](v43);
          strcpy((char *)&v73 - 32, " item newName version ");
          uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
          uint64_t v88 = (char *)v86;
          unint64_t v89 = &type metadata for Filename;
          uint64_t v90 = (ValueMetadata *)MEMORY[0x263F8D9D0];
          uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
          uint64_t v59 = v77;
          uint64_t v60 = &v77[TupleTypeMetadata[12]];
          uint64_t v84 = &v77[TupleTypeMetadata[16]];
          uint64_t v86 = TupleTypeMetadata[20];
          uint64_t v61 = (uint64_t)v79;
          uint64_t v62 = swift_getAssociatedTypeWitness();
          (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v62 - 8) + 16))(v59, v33, v62);
          uint64_t v63 = v83;
          uint64_t v64 = v42;
          uint64_t v65 = v91;
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v60, v64, v91);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v63 + 56))(v60, 0, 1, v65);
          uint64_t v66 = (uint64_t *)(v31 + *(void *)(*(void *)v31 + 592));
          uint64_t v67 = *v66;
          uint64_t v68 = v66[1];
          uint64_t v69 = v84;
          *(void *)uint64_t v84 = v67;
          *((void *)v69 + 1) = v68;
          *(void *)&v59[v86] = v57;
          uint64_t AssociatedTypeWitness = v61;
          uint64_t v88 = v74;
          unint64_t v89 = v80;
          uint64_t v90 = v75;
          type metadata accessor for DirectionalTestingOperation();
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          sub_24DCC9D48();
          swift_bridgeObjectRetain();
          sub_24DCC9D08();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v63 + 8))(v82, v65);
        }
      }
      return 1;
    }
LABEL_24:
    __break(1u);
LABEL_25:
    MEMORY[0x270FA5388](Strong);
    uint64_t v71 = v79;
    *(&v73 - 6) = (uint64_t)v74;
    *(&v73 - 5) = (uint64_t)v71;
    uint64_t v72 = v80;
    *(&v73 - 4) = (uint64_t)v75;
    *(&v73 - 3) = (uint64_t)v72;
    *(&v73 - 2) = a1;
    sub_24DA89268((uint64_t (*)(uint64_t))sub_24D9CE9B4, (uint64_t)(&v73 - 8), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLJobRegistry.swift", 133, 2, 520);
  }
  uint64_t v83 = v21;
  uint64_t v85 = v20;
  uint64_t v86 = (uint64_t)v23;
  uint64_t AssociatedTypeWitness = v11;
  uint64_t v88 = (char *)v5;
  unint64_t v89 = v12;
  uint64_t v90 = v6;
  type metadata accessor for Bouncing.BounceItem();
  uint64_t Strong = swift_dynamicCastClass();
  if (!Strong) {
    goto LABEL_25;
  }
  uint64_t v25 = Strong;
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v26 = *(void *)(Strong + 32);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v27 = v25 + *(void *)(*(void *)v25 + 576);
  uint64_t v28 = v91;
  (*(void (**)(uint64_t, uint64_t))(*(void *)v26 + 240))(v27, 1);
  if (v28)
  {
LABEL_5:
    swift_release();
    swift_release();
    return 1;
  }
  uint64_t v35 = v84;
  if ((*(unsigned int (**)(char *, uint64_t, char *))(v19 + 48))(v18, 1, v84) == 1)
  {
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v18, v85);
  }
  else
  {
    (*(void (**)(uint64_t, char *, char *))(v19 + 32))(v86, v18, v35);
    uint64_t v38 = (*(uint64_t (**)(uint64_t))(*(void *)v26 + 296))(v27);
    uint64_t v91 = 0;
    uint64_t v40 = v19;
    uint64_t v41 = v35;
    uint64_t v83 = v40;
    if (v39)
    {
      (*(void (**)(uint64_t, char *))(v83 + 8))(v86, v35);
      swift_release();
      swift_release();
    }
    else
    {
      uint64_t v45 = v38;
      MEMORY[0x270FA5388](v38);
      strcpy((char *)&v73 - 32, " item newName version ");
      uint64_t v46 = v75;
      uint64_t v82 = (char *)a1;
      uint64_t v47 = (uint64_t)v74;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v88 = (char *)v85;
      unint64_t v89 = &type metadata for Filename;
      uint64_t v90 = (ValueMetadata *)MEMORY[0x263F8D9D0];
      uint64_t v48 = (int *)swift_getTupleTypeMetadata();
      uint64_t v49 = v77;
      uint64_t v50 = &v77[v48[12]];
      uint64_t v81 = &v77[v48[16]];
      uint64_t v85 = v48[20];
      uint64_t v51 = swift_getAssociatedTypeWitness();
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v51 - 8) + 16))(v49, v27, v51);
      uint64_t v52 = v83;
      (*(void (**)(char *, uint64_t, char *))(v83 + 16))(v50, v86, v41);
      (*(void (**)(char *, void, uint64_t, char *))(v52 + 56))(v50, 0, 1, v41);
      uint64_t v53 = (uint64_t *)(v25 + *(void *)(*(void *)v25 + 592));
      uint64_t v54 = *v53;
      uint64_t v55 = v53[1];
      uint64_t v56 = v81;
      *(void *)uint64_t v81 = v54;
      *((void *)v56 + 1) = v55;
      *(void *)&v49[v85] = v45;
      uint64_t AssociatedTypeWitness = v47;
      uint64_t v88 = v79;
      unint64_t v89 = v46;
      uint64_t v90 = v80;
      type metadata accessor for DirectionalTestingOperation();
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      sub_24DCC9D48();
      swift_bridgeObjectRetain();
      sub_24DCC9D08();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, char *))(v52 + 8))(v86, v41);
    }
  }
  return 1;
}

uint64_t sub_24D9C789C()
{
  return 0;
}

uint64_t sub_24D9C7980@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)type metadata accessor for TestingOperation();
  return sub_24DA02614(v2, a1);
}

uint64_t sub_24D9C79D4(char a1)
{
  uint64_t v3 = v1;
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *(void **)(v1 + 16);
  uint64_t v6 = (void *)swift_allocObject();
  LOBYTE(v1) = (_BYTE)v6;
  _OWORD v6[2] = sub_24D9CE934;
  v6[3] = v3;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v6;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_45_1;
  uint64_t v7 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v8 = objc_msgSend(v5, sel_fetchSwift_error_, v7, aBlock);
  _Block_release(v7);
  id v9 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v8)
  {
    if (objc_msgSend(v8, sel_next)) {
      goto LABEL_4;
    }
    uint64_t v1 = *(void *)(v3 + 24);
    char v11 = sub_24D59C120();
    if (v2)
    {
      swift_release();

      return v1 & 1;
    }
    if (v11 & 1) != 0 || (char v13 = sub_24D59C120(), (v13))
    {
LABEL_4:
      swift_release();

      LOBYTE(v1) = 1;
    }
    else if (a1)
    {
      LOBYTE(v1) = sub_24DCBDC80();
      swift_release();
    }
    else
    {
      swift_release();

      LOBYTE(v1) = 0;
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return v1 & 1;
}

uint64_t sub_24D9C7C34()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v1 = sub_24DA38478();
    swift_release();
    sub_24DCCA728();
    if (v1 < 0)
    {
      swift_bridgeObjectRelease();
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24DCC9968();
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
    }
    sub_24DCCA728();
    sub_24DCC9968();
    if (qword_26B194628 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
    sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
    sub_24D3F0EB8();
    sub_24DCC9B28();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    return 0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t (*sub_24D9C7F70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  char v7 = a1 & 1;
  id v8 = (void *)*v4;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](a1);
  char v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v8[68];
  *(void *)(v14 + 24) = v8[69];
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = v8[70];
  *(void *)(v14 + 48) = v8[71];
  *(void *)(v14 + 56) = a4;
  *(unsigned char *)(v14 + 64) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v12, v11, a3);
  *(void *)(v14 + v13) = v4;
  swift_retain();
  return sub_24D9CEB6C;
}

uint64_t sub_24D9C8118(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)())0xE000000000000000;
  sub_24DCCA728();
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v18 = (uint64_t (*)@<X0>(uint64_t *@<X8>))MEMORY[0x263F8D6C8];
  uint64_t v15 = a2 & 1;
  sub_24D3E3EB4((uint64_t)&v15);
  uint64_t v12 = v11;
  sub_24D415F74((uint64_t)&v15, qword_26B197F50);
  if (v12)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a6 + 40) + 32))(a1, a5);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v13 = *(void *)(a4 + 96);
    uint64_t v20 = 40;
    unint64_t v21 = 0xE100000000000000;
    uint64_t v15 = v13;
    uint64_t v16 = (uint64_t (*)())sub_24D9CE4EC;
    uint64_t v17 = 0;
    uint64_t v18 = sub_24D9CE504;
    uint64_t v19 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1908A0);
    sub_24D3E4A9C(&qword_26B1940D8, &qword_26B1908A0);
    sub_24D3F0EB8();
    sub_24DCC9B28();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    if (qword_26B197990 != -1) {
      swift_once();
    }
    uint64_t v20 = 40;
    unint64_t v21 = 0xE100000000000000;
    uint64_t v15 = qword_26B1A24B8;
    uint64_t v16 = sub_24DAFB0AC;
    uint64_t v17 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
    sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
    sub_24DCC9B28();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_24D9C84D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1)
{
  char v7 = a1 & 1;
  id v8 = (void *)*v4;
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v8[68];
  *(void *)(v14 + 24) = v8[69];
  *(void *)(v14 + 32) = a3;
  *(void *)(v14 + 40) = v8[70];
  *(void *)(v14 + 48) = v8[71];
  *(void *)(v14 + 56) = a4;
  *(unsigned char *)(v14 + 64) = v7;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v12, v11, a3);
  *(void *)(v14 + v13) = v4;
  swift_retain();
  return sub_24D9CEAB4;
}

uint64_t sub_24D9C8678(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v16 = (uint64_t (*)())0xE000000000000000;
  sub_24DCCA728();
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v18 = (uint64_t (*)@<X0>(uint64_t *@<X8>))MEMORY[0x263F8D6C8];
  uint64_t v15 = a2 & 1;
  sub_24D3E3EB4((uint64_t)&v15);
  uint64_t v12 = v11;
  sub_24D415F74((uint64_t)&v15, qword_26B197F50);
  if (v12)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(a6 + 40) + 32))(a1, a5);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v13 = *(void *)(a4 + 96);
    uint64_t v20 = 40;
    unint64_t v21 = 0xE100000000000000;
    uint64_t v15 = v13;
    uint64_t v16 = (uint64_t (*)())sub_24D9CE4EC;
    uint64_t v17 = 0;
    uint64_t v18 = sub_24D9CE504;
    uint64_t v19 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1908A0);
    sub_24D3E4A9C(&qword_26B1940D8, &qword_26B1908A0);
    sub_24D3F0EB8();
    sub_24DCC9B28();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    if (qword_26B197990 != -1) {
      swift_once();
    }
    uint64_t v20 = 40;
    unint64_t v21 = 0xE100000000000000;
    uint64_t v15 = qword_26B1A24B8;
    uint64_t v16 = sub_24DAFB0AC;
    uint64_t v17 = 0;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
    sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
    sub_24DCC9B28();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v15 = 3;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v15 = 8;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v15 = 1;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    return v22;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9C8B30(uint64_t a1)
{
  return sub_24D9C8D3C(a1, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_24D9C7F70, (uint64_t)sub_24D9CEB6C) & 1;
}

uint64_t sub_24D9C8B74(uint64_t a1)
{
  return sub_24D9C8BFC(a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24D9C7F70, (uint64_t)sub_24D9CEB6C) & 1;
}

uint64_t sub_24D9C8BB8(uint64_t a1)
{
  return sub_24D9C8BFC(a1, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24D9C84D0, (uint64_t)sub_24D9CEAB4) & 1;
}

uint64_t sub_24D9C8BFC(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  a2(1, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  char v9 = sub_24D9C33AC(a3, v8);
  swift_release();
  return v9 & 1;
}

uint64_t sub_24D9C8CF8(uint64_t a1)
{
  return sub_24D9C8D3C(a1, (void (*)(void, uint64_t, uint64_t, uint64_t))sub_24D9C84D0, (uint64_t)sub_24D9CEAB4) & 1;
}

uint64_t sub_24D9C8D3C(uint64_t a1, void (*a2)(void, uint64_t, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  a2(0, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  char v9 = sub_24D9C33AC(a3, v8);
  swift_release();
  return v9 & 1;
}

uint64_t sub_24D9C8E38(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24D9C7F70(0, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v6 = sub_24D9C36EC((uint64_t)sub_24D9CEB6C, v5);
  if (v1) {
    return swift_release();
  }
  uint64_t v8 = v6;
  swift_release();
  if (v8)
  {
    type metadata accessor for Propagation.PropagationJob();
    uint64_t result = swift_dynamicCastClass();
    if (result) {
      return result;
    }
    swift_release();
  }
  return 0;
}

uint64_t sub_24D9C8FA8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24D9C7F70(1, a1, AssociatedTypeWitness, AssociatedConformanceWitness);
  uint64_t v6 = sub_24D9C3774((uint64_t)sub_24D9CEB6C, v5);
  if (v1) {
    return swift_release();
  }
  uint64_t v8 = v6;
  swift_release();
  if (v8)
  {
    type metadata accessor for Propagation.PropagationJob();
    uint64_t result = swift_dynamicCastClass();
    if (result) {
      return result;
    }
    swift_release();
  }
  return 0;
}

uint64_t sub_24D9C9118(uint64_t a1, char a2)
{
  return sub_24D59D294(a2) & 1;
}

uint64_t sub_24D9C9154(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = sub_24DCCA3F8();
  uint64_t v16 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  char v7 = (char *)&v15 - v6;
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v15 - v9;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = *(void *)(result + 16);
    swift_retain();
    swift_release();
    uint64_t v13 = a1;
    uint64_t v14 = v12;
    (*(void (**)(uint64_t))(*(void *)v12 + 152))(v13);
    swift_release();
    if (!v1)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, AssociatedTypeWitness) == 1)
      {
        (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v4);
        return 0;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v7, AssociatedTypeWitness);
        uint64_t v14 = sub_24DCBD754((uint64_t)v10);
        (*(void (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
      }
    }
    return v14;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9C940C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v2;
  v14[5] = a2;
  uint64_t v10 = v4[68];
  uint64_t v11 = v4[69];
  uint64_t v12 = v4[70];
  uint64_t v13 = v4[71];
  v14[0] = v10;
  v14[1] = v11;
  v14[2] = v12;
  v14[3] = v13;
  type metadata accessor for ItemJob();
  swift_getMetatypeMetadata();
  sub_24DCC9D48();
  sub_24DCCA3F8();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193F98);
  sub_24DB86C94((void (*)(char *, char *))sub_24D9CE910, (uint64_t)&v9, MEMORY[0x263F8E628], v5, v6, (uint64_t)v14);
  uint64_t v7 = sub_24D597A24(a1, v14[0]);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24D9C9560@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  v11[11] = *a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v11[7] = a2;
  v11[8] = a3;
  v11[9] = a4;
  v11[10] = a5;
  type metadata accessor for ItemJob();
  swift_getMetatypeMetadata();
  uint64_t v7 = sub_24DCC9D48();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_24D7854B0((void (*)(char *, char *))sub_24D9CEF6C, (uint64_t)v11, v7, (uint64_t)&type metadata for JobCode, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v9);
  *a6 = result;
  return result;
}

uint64_t sub_24D9C9630(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v2;
  v14[5] = a2;
  uint64_t v10 = v4[68];
  uint64_t v11 = v4[69];
  uint64_t v12 = v4[70];
  uint64_t v13 = v4[71];
  v14[0] = v11;
  v14[1] = v10;
  v14[2] = v13;
  v14[3] = v12;
  type metadata accessor for ItemJob();
  swift_getMetatypeMetadata();
  sub_24DCC9D48();
  sub_24DCCA3F8();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193F98);
  sub_24DB86C94((void (*)(char *, char *))sub_24D9CE8B0, (uint64_t)&v9, MEMORY[0x263F8E628], v5, v6, (uint64_t)v14);
  uint64_t v7 = sub_24D597A24(a1, v14[0]);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24D9C9784@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  v11[11] = *a1;
  v11[2] = a2;
  v11[3] = a3;
  v11[4] = a4;
  v11[5] = a5;
  v11[7] = a3;
  v11[8] = a2;
  v11[9] = a5;
  v11[10] = a4;
  type metadata accessor for ItemJob();
  swift_getMetatypeMetadata();
  uint64_t v7 = sub_24DCC9D48();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = sub_24D7854B0((void (*)(char *, char *))sub_24D9CE8D4, (uint64_t)v11, v7, (uint64_t)&type metadata for JobCode, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v9);
  *a6 = result;
  return result;
}

uint64_t sub_24D9C9854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = sub_24DB17B64();
  return sub_24D597FF4(a1, v5, a3) & 1;
}

uint64_t sub_24D9C98B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v5 = sub_24DB17B64();
  return sub_24D597FF4(a1, v5, a3) & 1;
}

uint64_t sub_24D9C9914(int a1, uint64_t a2, unint64_t a3, int a4)
{
  LOBYTE(a4) = sub_24D50EE90(a1, a2, a3, a4);
  swift_release();
  return a4 & 1;
}

uint64_t sub_24D9C998C(int a1, uint64_t a2, unint64_t a3, int a4)
{
  LOBYTE(a4) = sub_24D50EE90(a1, a2, a3, a4);
  swift_release();
  return a4 & 1;
}

uint64_t sub_24D9C9A04(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_24DCCA3F8();
  uint64_t v5 = *(void *)(v18 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v18);
  uint64_t v17 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v15 - v8;
  v15[1] = *(void *)(v1 + 24);
  uint64_t v16 = a1;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11((char *)v15 - v8, a1, AssociatedTypeWitness);
  uint64_t v12 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
  v12(v9, 0, 1, AssociatedTypeWitness);
  swift_retain();
  sub_24D504AA8(5, 0, 0, (uint64_t)v9);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v18);
  }
  else
  {
    v15[0] = *(void *)(v5 + 8);
    ((void (*)(char *, uint64_t))v15[0])(v9, v18);
    swift_release();
    uint64_t v13 = (uint64_t)v17;
    v11(v17, v16, AssociatedTypeWitness);
    v12((char *)v13, 0, 1, AssociatedTypeWitness);
    swift_retain();
    sub_24D504AA8(6, 0, 0, v13);
    ((void (*)(char *, uint64_t))v15[0])(v17, v18);
  }
  return swift_release();
}

uint64_t sub_24D9C9C90(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = sub_24DCCA3F8();
  uint64_t v5 = *(void *)(v18 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v18);
  uint64_t v17 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v15 - v8;
  v15[1] = *(void *)(v1 + 32);
  uint64_t v16 = a1;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v11((char *)v15 - v8, a1, AssociatedTypeWitness);
  uint64_t v12 = *(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56);
  v12(v9, 0, 1, AssociatedTypeWitness);
  swift_retain();
  sub_24D504AA8(5, 0, 0, (uint64_t)v9);
  if (v2)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v18);
  }
  else
  {
    v15[0] = *(void *)(v5 + 8);
    ((void (*)(char *, uint64_t))v15[0])(v9, v18);
    swift_release();
    uint64_t v13 = (uint64_t)v17;
    v11(v17, v16, AssociatedTypeWitness);
    v12((char *)v13, 0, 1, AssociatedTypeWitness);
    swift_retain();
    sub_24D504AA8(6, 0, 0, v13);
    ((void (*)(char *, uint64_t))v15[0])(v17, v18);
  }
  return swift_release();
}

uint64_t sub_24D9C9F1C(uint64_t a1)
{
  return sub_24D9C9F74(a1, (void (*)(uint64_t))sub_24D50FB3C);
}

uint64_t sub_24D9C9F48(uint64_t a1)
{
  return sub_24D9C9F74(a1, (void (*)(uint64_t))sub_24D50F908);
}

uint64_t sub_24D9C9F74(uint64_t a1, void (*a2)(uint64_t))
{
  return swift_release();
}

void sub_24D9C9FCC(uint64_t a1, unint64_t a2, unint64_t a3)
{
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v12 = v11;
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    double v13 = v12 * 1000000000.0;
    if ((~COERCE__INT64(v12 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v13 > -9.22337204e18)
      {
        if (v13 < 9.22337204e18)
        {
          sub_24DCB6FB0(a1, a3, (uint64_t)v13);
          if (v3) {
            return;
          }
          goto LABEL_6;
        }
LABEL_11:
        __break(1u);
        return;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
LABEL_6:
  if (a2) {
    sub_24DCB8728(a1, a2);
  }
}

void sub_24D9CA160()
{
}

uint64_t sub_24D9CA1BC()
{
  swift_retain();
  char v1 = sub_24D50A604();
  swift_release();
  if (!v0)
  {
    if (v1)
    {
      char v1 = 1;
    }
    else
    {
      swift_retain();
      char v1 = sub_24D50A604();
      swift_release();
    }
  }
  return v1 & 1;
}

uint64_t sub_24D9CA258()
{
  swift_retain();
  sub_24D50A080();
  uint64_t result = swift_release();
  if (!v0)
  {
    swift_retain();
    sub_24D50A080();
    return swift_release();
  }
  return result;
}

uint64_t sub_24D9CA2CC()
{
  swift_retain();
  sub_24D504C5C();
  swift_release();
  swift_retain();
  sub_24D504C5C();

  return swift_release();
}

uint64_t sub_24D9CA330(uint64_t a1, char a2)
{
  uint64_t v6 = *(void *)(*(void *)v2 + 544);
  uint64_t v8 = *(void *)(*(void *)v2 + 560);
  uint64_t v9 = *(void *)(*(void *)v2 + 568);
  uint64_t v19 = *(void *)(*(void *)v2 + 552);
  uint64_t v7 = v19;
  uint64_t v20 = v8;
  uint64_t v21 = v9;
  uint64_t v10 = type metadata accessor for FSOrFPJob();
  uint64_t v22 = sub_24DCC9C98();
  uint64_t v18 = 0;
  LOBYTE(v19) = 1;
  uint64_t v15 = a1;
  char v16 = a2 & 1;
  uint64_t v17 = 100;
  v13[2] = v6;
  v13[3] = v7;
  v13[4] = v8;
  v13[5] = v9;
  v13[6] = &v22;
  v13[7] = &v18;
  sub_24D9C3058((uint64_t)sub_24D5A3554, (uint64_t)v14, (void (*)(uint64_t))sub_24D9CE888, (uint64_t)v13);
  if (!v3)
  {
    uint64_t v2 = v22;
    uint64_t v11 = swift_bridgeObjectRetain();
    MEMORY[0x253327D80](v11, v10);
  }
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_24D9CA4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v18 = a1;
  swift_retain();
  v16[0] = a4;
  v16[1] = a5;
  v16[2] = a6;
  uint64_t v17 = a7;
  type metadata accessor for FSOrFPJob();
  sub_24DCC9D48();
  sub_24DCC9D08();
  sub_24D987E98(a1, (uint64_t)v16);
  if (!v17)
  {
    sub_24D415F74((uint64_t)v16, &qword_26B1937B8);
    goto LABEL_5;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1937B0);
  if (!swift_dynamicCast())
  {
LABEL_5:
    uint64_t v14 = 0;
    char v13 = 1;
    goto LABEL_6;
  }
  char v13 = 0;
  uint64_t v14 = v18;
LABEL_6:
  *(void *)a3 = v14;
  *(unsigned char *)(a3 + 8) = v13;
  return 1;
}

uint64_t sub_24D9CA5DC(uint64_t a1, char a2)
{
  uint64_t result = sub_24D599CE8(a1, a2 & 1);
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t sub_24D9CA614(uint64_t a1, char a2)
{
  uint64_t result = sub_24D599CE8(a1, a2 & 1);
  if (v2) {
    return v4;
  }
  return result;
}

uint64_t sub_24D9CA64C(char a1, char a2)
{
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v6 = *(void **)(*v2 + 544);
  uint64_t v7 = *(void *)(*v2 + 552);
  uint64_t v8 = *(id (**)(uint64_t, void *))(*v2 + 560);
  uint64_t v9 = *(void **)(*v2 + 568);
  if (a2)
  {
    type metadata accessor for Job();
    sub_24DB16820(a1);
    id aBlock = v6;
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    uint64_t v22 = v9;
    type metadata accessor for ItemJob();
    if (swift_dynamicCastMetatype()) {
      goto LABEL_5;
    }
  }
  else
  {
    type metadata accessor for Job();
    sub_24DB16820(a1);
    id aBlock = v6;
    uint64_t v20 = v7;
    uint64_t v21 = v8;
    uint64_t v22 = v9;
    type metadata accessor for ItemJob();
    if (swift_dynamicCastMetatype())
    {
LABEL_5:
      char v10 = sub_24D59C71C(a1);
      if (!v3) {
        a1 = v10;
      }
      return a1 & 1;
    }
  }
  uint64_t v11 = (void *)v2[2];
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 16) = a1;
  *(unsigned char *)(v12 + 17) = a2 & 1;
  uint64_t v13 = swift_allocObject();
  a1 = v13;
  *(void *)(v13 + 16) = sub_24D9CE86C;
  *(void *)(v13 + 24) = v12;
  unint64_t v23 = sub_24D3E3980;
  uint64_t v24 = v13;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v20 = 1107296256;
  uint64_t v21 = sub_24D3E38DC;
  uint64_t v22 = &block_descriptor_38_1;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v15 = objc_msgSend(v11, sel_fetchSwift_error_, v14, &aBlock);
  _Block_release(v14);
  id v16 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v15)
  {
    a1 = objc_msgSend(v15, sel_next);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return a1 & 1;
}

uint64_t sub_24D9CA960(uint64_t a1, char a2, char a3)
{
  v12[1] = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_24DCC9968();
  v12[0] = 2;
  uint64_t v5 = MEMORY[0x263F8D6C8];
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v6 = qword_24DCE24F8[a2];
  uint64_t v13 = v5;
  v12[0] = v6;
  sub_24D3E3EB4((uint64_t)v12);
  uint64_t v8 = v7;
  sub_24D415F74((uint64_t)v12, qword_26B197F50);
  if (!v8) {
    goto LABEL_4;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v13 = v5;
  v12[0] = a3 & 1;
  sub_24D3E3EB4((uint64_t)v12);
  uint64_t v10 = v9;
  sub_24D415F74((uint64_t)v12, qword_26B197F50);
  if (v10)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v14;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9CAB60()
{
  return sub_24D59F3EC() & 1;
}

uint64_t sub_24D9CAB88()
{
  char v1 = sub_24D59F9DC();
  if (!v0)
  {
    if (v1) {
      char v1 = 1;
    }
    else {
      char v1 = sub_24D59F9DC();
    }
  }
  return v1 & 1;
}

void *sub_24D9CABD4()
{
  return sub_24D59A17C();
}

void *sub_24D9CABFC(uint64_t a1)
{
  return sub_24D59A5CC(a1);
}

uint64_t sub_24D9CAC24(void *a1, uint64_t a2)
{
  return sub_24D59B244(a1, a2);
}

uint64_t sub_24D9CAC4C(int a1, uint64_t a2)
{
  uint64_t v20 = a2;
  int v19 = a1;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24DA637B0();
    swift_retain();
    swift_release();
    sub_24D57AC18();
    swift_release();
    long long v29 = v31;
    uint64_t v30 = v32;
    type metadata accessor for JobLockRule();
    swift_getWitnessTable();
    sub_24DCC95E8();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B193F80);
    swift_getWitnessTable();
    sub_24DCCA8B8();
    swift_getWitnessTable();
    sub_24D3E4A9C((unint64_t *)&qword_26B193F88, &qword_26B193F80);
    sub_24DCCA898();
    swift_getWitnessTable();
    uint64_t v3 = sub_24DCCA758();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v4 = swift_getWitnessTable();
    uint64_t v5 = sub_24D3E4A9C(&qword_26B193F90, &qword_26B193F80);
    uint64_t v27 = v4;
    uint64_t v28 = v5;
    uint64_t v26 = swift_getWitnessTable();
    uint64_t v6 = swift_getWitnessTable();
    uint64_t v8 = sub_24D7854B0((void (*)(char *, char *))sub_24D9CB21C, 0, v3, MEMORY[0x263F8D310], MEMORY[0x263F8E628], v6, MEMORY[0x263F8E658], v7);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_24DA637B8();
      swift_retain();
      swift_release();
      sub_24D57AC18();
      swift_release();
      long long v29 = v31;
      uint64_t v30 = v32;
      type metadata accessor for JobLockRule();
      swift_getWitnessTable();
      sub_24DCC95E8();
      swift_getWitnessTable();
      sub_24DCCA8B8();
      swift_getWitnessTable();
      sub_24DCCA898();
      swift_getWitnessTable();
      uint64_t v9 = sub_24DCCA758();
      uint64_t v25 = swift_getWitnessTable();
      uint64_t v23 = swift_getWitnessTable();
      uint64_t v24 = v5;
      uint64_t v22 = swift_getWitnessTable();
      uint64_t v10 = swift_getWitnessTable();
      uint64_t v12 = sub_24D7854B0((void (*)(char *, char *))sub_24D9CB21C, 0, v9, MEMORY[0x263F8D310], MEMORY[0x263F8E628], v10, MEMORY[0x263F8E658], v11);
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)&long long v31 = v8;
      sub_24D785A3C(v12);
      uint64_t v13 = sub_24D58F3B4(v8);
      uint64_t v14 = swift_bridgeObjectRelease();
      uint64_t v15 = MEMORY[0x270FA5388](v14);
      char v18 = v19 & 1;
      MEMORY[0x270FA5388](v15);
      v17[2] = v13;
      void v17[3] = v21;
      v17[4] = v20;
      sub_24D9C3058((uint64_t)sub_24D9CEA84, v16, (void (*)(uint64_t))sub_24D9CEA8C, (uint64_t)v17);
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D9CB21C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24D5A1EC0(a1, a2);
}

uint64_t sub_24D9CB234(uint64_t a1, char a2)
{
  v6[1] = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  sub_24DCC9968();
  v6[3] = MEMORY[0x263F8D6C8];
  v6[0] = a2 & 1;
  sub_24D3E3EB4((uint64_t)v6);
  uint64_t v4 = v3;
  sub_24D415F74((uint64_t)v6, qword_26B197F50);
  if (v4)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    return v7;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9CB368(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = *(void *)(*(void *)a3 + 552);
  uint64_t v8 = *(void *)(*(void *)a3 + 568);
  uint64_t v18 = *(void *)(*(void *)a3 + 560);
  uint64_t v19 = *(void *)(*(void *)a3 + 544);
  sub_24D987E98(a1, (uint64_t)&v20);
  uint64_t v9 = v23;
  if (v23)
  {
    uint64_t v10 = v24;
    __swift_project_boxed_opaque_existential_1(&v20, v23);
    uint64_t v11 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
    uint64_t v13 = v12;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v20);
    sub_24D3E12EC(v11, v13, a2);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24D415F74((uint64_t)&v20, &qword_26B1937B8);
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = sub_24DA39670(a1);
    swift_release();
    uint64_t v16 = a4[3];
    uint64_t v17 = a4[4];
    __swift_project_boxed_opaque_existential_1(a4, v16);
    sub_24DCC9968();
    if (v15 < 0)
    {
      uint64_t v25 = v15 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v20 = v7;
      uint64_t v21 = v19;
      uint64_t v22 = v8;
      uint64_t v23 = v18;
    }
    else
    {
      uint64_t v25 = v15;
      uint64_t v20 = v19;
      uint64_t v21 = v7;
      uint64_t v22 = v18;
      uint64_t v23 = v8;
    }
    type metadata accessor for Job();
    swift_getWitnessTable();
    sub_24DCCADC8();
    sub_24DCCA768();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D90FFEC(0, 0xE000000000000000, v16, v17);
    swift_release();
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9CB630(char a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t result = swift_weakLoadStrong();
  uint64_t v7 = MEMORY[0x263F8EE60];
  if (a1)
  {
    if (result)
    {
      sub_24DA637B8();
      swift_retain();
      swift_release();
      char v17 = sub_24D57AF4C();
      swift_release();
      if ((v17 & 1) == 0)
      {
        uint64_t v18 = a2[3];
        uint64_t v19 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v18);
        sub_24D90FFEC(0xD000000000000018, 0x800000024DD14470, v18, v19);
        uint64_t v20 = a2[3];
        uint64_t v21 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v20);
        sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24D9CE7A0, v3, v20, v7 + 8, v21);
      }
      goto LABEL_9;
    }
  }
  else
  {
    if (result)
    {
      sub_24DA637B0();
      swift_retain();
      swift_release();
      char v8 = sub_24D57AF4C();
      swift_release();
      if ((v8 & 1) == 0)
      {
        uint64_t v9 = a2[3];
        uint64_t v10 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v9);
        sub_24D90FFEC(0xD000000000000018, 0x800000024DD14470, v9, v10);
        uint64_t v11 = a2[3];
        uint64_t v12 = a2[4];
        __swift_project_boxed_opaque_existential_1(a2, v11);
        sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24D9CE800, v3, v11, v7 + 8, v12);
      }
      uint64_t v13 = a2[3];
      uint64_t v14 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v13);
      sub_24D90FFEC(0x72676B636162202BLL, 0xEC000000646E756FLL, v13, v14);
      uint64_t v15 = a2[3];
      uint64_t v16 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v15);
      sub_24D9100BC(8224, 0xE200000000000000, sub_24D9CE830, v3, v15, v7 + 8, v16);
LABEL_9:
      char v22 = a1 & 1;
      swift_retain();
      sub_24D50FD70(a2);
      swift_release();
      uint64_t v23 = a2[3];
      uint64_t v24 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v23);
      sub_24D90FFEC(0xD000000000000012, 0x800000024DD14490, v23, v24);
      uint64_t v25 = a2[3];
      uint64_t v26 = a2[4];
      uint64_t v27 = __swift_project_boxed_opaque_existential_1(a2, v25);
      MEMORY[0x270FA5388](v27);
      v30[2] = v3;
      char v31 = v22;
      sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24D9CE7D0, (uint64_t)v30, v25, v7 + 8, v26);
      uint64_t v28 = a2[3];
      uint64_t v29 = a2[4];
      __swift_project_boxed_opaque_existential_1(a2, v28);
      sub_24D90FFEC(0x6A206D657469202BLL, 0xEB0000000073626FLL, v28, v29);
      return sub_24D5A1B04((uint64_t)a2);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D9CBA74(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a3();
    swift_retain();
    swift_release();
    sub_24D57B2CC();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24D9CBAEC(uint64_t a1, char a2, unsigned __int8 a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v9 = *(_OWORD *)(*(void *)v7 + 560);
  long long v14 = *(_OWORD *)(*(void *)v7 + 544);
  uint64_t v23 = 0;
  char v22 = a2 & 1 ^ (a3 < 3u);
  uint64_t v15 = a6;
  long long v16 = v9;
  uint64_t v17 = a7;
  uint64_t v18 = &v22;
  uint64_t v19 = a4;
  unsigned __int8 v20 = a3;
  uint64_t v21 = a5;
  v10[2] = a6;
  v10[3] = a7;
  v10[4] = a1;
  v10[5] = a5;
  uint64_t v11 = v7;
  uint64_t v12 = &v23;
  sub_24D9C3058((uint64_t)sub_24D9CEA18, (uint64_t)v13, (void (*)(uint64_t))sub_24D9CEA5C, (uint64_t)v10);
  if (!v8 && v23 >= 1)
  {
    if (swift_weakLoadStrong())
    {
      sub_24DA30ACC();
      swift_release();
    }
  }
}

uint64_t sub_24D9CBBFC(uint64_t a1, unsigned __int8 *a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  v26[0] = 0;
  v26[1] = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v15 = *a2;
  uint64_t v16 = MEMORY[0x263F8D6C8];
  uint64_t v27 = MEMORY[0x263F8D6C8];
  v26[0] = v15;
  sub_24D3E3EB4((uint64_t)v26);
  uint64_t v18 = v17;
  sub_24D415F74((uint64_t)v26, qword_26B197F50);
  if (!v18) {
    goto LABEL_5;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a11 + 40) + 32))(a1, a8);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v19 = qword_24DCE24F8[a4];
  uint64_t v27 = v16;
  v26[0] = v19;
  sub_24D3E3EB4((uint64_t)v26);
  uint64_t v21 = v20;
  sub_24D415F74((uint64_t)v26, qword_26B197F50);
  if (!v21) {
    goto LABEL_5;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v26[0] = 0;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v27 = v16;
  v26[0] = a5;
  sub_24D3E3EB4((uint64_t)v26);
  uint64_t v23 = v22;
  sub_24D415F74((uint64_t)v26, qword_26B197F50);
  if (v23)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v28;
  }
  else
  {
LABEL_5:
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9CBEC0(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v90 = a3;
  uint64_t v86 = a5;
  unint64_t v95 = a2;
  unint64_t v8 = *(void *)(*(void *)a4 + 544);
  uint64_t v9 = *(void *)(*(void *)a4 + 568);
  uint64_t v10 = *(void *)(*(void *)a4 + 560);
  unint64_t v96 = *(void *)(*(void *)a4 + 552);
  unint64_t v7 = v96;
  unint64_t v97 = v8;
  uint64_t v98 = v9;
  uint64_t v99 = v10;
  uint64_t v11 = type metadata accessor for PersistenceTrigger();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v88 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  long long v14 = (_OWORD *)((char *)&v84 - v13);
  unint64_t v92 = v8;
  uint64_t v93 = v9;
  unint64_t v96 = v8;
  unint64_t v97 = v7;
  unint64_t v94 = v7;
  uint64_t v100 = v10;
  uint64_t v98 = v10;
  uint64_t v99 = v9;
  uint64_t v15 = (void *)type metadata accessor for PersistenceTrigger();
  uint64_t v16 = sub_24DCCA3F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v84 - v18;
  uint64_t v89 = a1;
  uint64_t v87 = a4;
  if (a1 < 0)
  {
    uint64_t v85 = v12;
    swift_retain();
    sub_24D55DE68(v15, v14);
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v14, 0, 1, v11);
    if (!swift_weakLoadStrong())
    {
LABEL_70:
      __break(1u);
      JUMPOUT(0x24D9CC96CLL);
    }
    unint64_t v96 = v94;
    unint64_t v97 = v92;
    uint64_t v98 = v93;
    uint64_t v99 = v100;
    uint64_t v29 = type metadata accessor for JobRegistry();
    uint64_t v30 = (void **)sub_24DA2A924(v29);
    swift_release();
    unint64_t v31 = v91;
    sub_24D586144(a1 & 0x7FFFFFFFFFFFFFFFLL, (uint64_t)v14, v90, v30);
    if (v31)
    {
      (*(void (**)(_OWORD *, uint64_t))(v88 + 8))(v14, v85);
      goto LABEL_8;
    }
    unint64_t v91 = v32;
    unint64_t v95 = v33;
    uint64_t v45 = v14;
    char v46 = v34;
    (*(void (**)(_OWORD *, uint64_t))(v88 + 8))(v45, v85);
    swift_release();
    uint64_t v47 = sub_24D9882BC(v89);
    char v50 = v46;
    uint64_t v51 = (void *)v47;
    uint64_t v52 = (void *)v48;
    switch(v46)
    {
      case 1:
        uint64_t v53 = (void *)v95;
        uint64_t v54 = (void *)v91;
        if (v49 != 1) {
          goto LABEL_64;
        }
        uint64_t v55 = (void *)v91;
        uint64_t v56 = (void *)v95;
        char v57 = 1;
        goto LABEL_51;
      case 2:
        uint64_t v53 = (void *)v95;
        uint64_t v54 = (void *)v91;
        if (v49 != 2) {
          goto LABEL_64;
        }
        uint64_t v55 = (void *)v91;
        uint64_t v56 = (void *)v95;
        char v57 = 2;
        goto LABEL_51;
      case 3:
        uint64_t v53 = (void *)v95;
        uint64_t v54 = (void *)v91;
        if (v49 != 3) {
          goto LABEL_64;
        }
        unint64_t v96 = v91;
        uint64_t v64 = (void *)v95;
        sub_24D3F1C98((id)v47, (id)v48, 3);
        sub_24D3F1C98(v54, v64, 3);
        sub_24D3F1C98(v51, v52, 3);
        sub_24D3F1C98(v54, v64, 3);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
        uint64_t v65 = sub_24DCC9868();
        uint64_t v67 = v66;
        unint64_t v96 = (unint64_t)v51;
        id v68 = v51;
        if (v65 == sub_24DCC9868() && v67 == v69)
        {
          swift_bridgeObjectRelease_n();
          sub_24D3E380C(v51, v52, 3);
          uint64_t v54 = (void *)v91;
          unint64_t v70 = v95;
          sub_24D3E380C((void *)v91, (id)v95, 3);
          sub_24D3E380C(v51, v52, 3);
          uint64_t v53 = (void *)v70;
          char v50 = v46;
          goto LABEL_63;
        }
        char v78 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24D3E380C(v51, v52, 3);
        uint64_t v54 = (void *)v91;
        unint64_t v79 = v95;
        sub_24D3E380C((void *)v91, (id)v95, 3);
        sub_24D3E380C(v51, v52, 3);
        uint64_t v53 = (void *)v79;
        char v50 = v46;
        if (v78)
        {
LABEL_63:
          uint64_t v55 = v54;
          uint64_t v56 = v53;
          char v57 = v50;
LABEL_51:
          sub_24D3E380C(v55, v56, v57);
          goto LABEL_9;
        }
        goto LABEL_64;
      case 4:
        uint64_t v53 = (void *)v95;
        uint64_t v54 = (void *)v91;
        if (v91 | v95)
        {
          if (v49 == 4 && v47 == 1 && !v48)
          {
            uint64_t v58 = 1;
LABEL_48:
            sub_24D3F1C98((id)v58, 0, 4);
            goto LABEL_9;
          }
        }
        else if (v49 == 4 && !(v47 | v48))
        {
          uint64_t v58 = 0;
          goto LABEL_48;
        }
LABEL_64:
        uint64_t v80 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
        uint64_t v81 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68);
        *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60) = v54;
        *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68) = v53;
        char v82 = *(unsigned char *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x70);
        *(unsigned char *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x70) = v50;
        char v83 = v50;
        sub_24D3F1C98(v54, v53, v50);
        sub_24D3E380C(v80, v81, v82);
        sub_24D9C3D3C(v89);
        swift_release();
        if (v83 != 1)
        {
          sub_24D3E380C((void *)v91, (id)v95, v83);
          return 1;
        }
        sub_24D3E380C((void *)v91, (id)v95, 1);
        uint64_t v76 = v86;
        uint64_t v77 = *v86 + 1;
        if (!__OFADD__(*v86, 1))
        {
LABEL_66:
          *uint64_t v76 = v77;
          return 1;
        }
        __break(1u);
        goto LABEL_69;
      default:
        uint64_t v53 = (void *)v95;
        uint64_t v54 = (void *)v91;
        if (v49 || v91 != v47) {
          goto LABEL_64;
        }
        goto LABEL_63;
    }
  }
  uint64_t v20 = *(v15 - 1);
  (*(void (**)(char *, unint64_t, void *))(v20 + 16))(v19, v95, v15);
  (*(void (**)(char *, void, uint64_t, void *))(v20 + 56))(v19, 0, 1, v15);
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  uint64_t v22 = (void **)Strong;
  unint64_t v96 = v92;
  unint64_t v97 = v94;
  uint64_t v98 = v100;
  uint64_t v99 = v93;
  type metadata accessor for JobRegistry();
  uint64_t v23 = v89;
  uint64_t v24 = swift_retain();
  unint64_t v25 = v91;
  sub_24D586144(v24, (uint64_t)v19, v90, v22);
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
LABEL_8:
    swift_release();
LABEL_9:
    swift_release();
    return 1;
  }
  unint64_t v95 = v26;
  uint64_t v90 = v27;
  unint64_t v91 = 0;
  char v36 = v28;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_release();
  uint64_t v37 = sub_24D9882BC(v23);
  uint64_t v40 = (void *)v37;
  uint64_t v41 = (void *)v38;
  uint64_t v42 = v23;
  switch(v36)
  {
    case 1:
      uint64_t v43 = (void *)v90;
      char v44 = (void *)v95;
      if (v39 != 1) {
        goto LABEL_52;
      }
      uint64_t v55 = (void *)v95;
      uint64_t v56 = (void *)v90;
      char v57 = 1;
      goto LABEL_51;
    case 2:
      uint64_t v43 = (void *)v90;
      char v44 = (void *)v95;
      if (v39 != 2) {
        goto LABEL_52;
      }
      uint64_t v55 = (void *)v95;
      uint64_t v56 = (void *)v90;
      char v57 = 2;
      goto LABEL_51;
    case 3:
      uint64_t v43 = (void *)v90;
      char v44 = (void *)v95;
      if (v39 != 3) {
        goto LABEL_52;
      }
      unint64_t v96 = v95;
      sub_24D3F1C98((id)v37, (id)v38, 3);
      sub_24D3F1C98(v44, v43, 3);
      sub_24D3F1C98(v40, v41, 3);
      sub_24D3F1C98(v44, v43, 3);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      uint64_t v59 = sub_24DCC9868();
      uint64_t v61 = v60;
      unint64_t v96 = (unint64_t)v40;
      id v62 = v40;
      if (v59 == sub_24DCC9868() && v61 == v63)
      {
        swift_bridgeObjectRelease_n();
        sub_24D3E380C(v40, v41, 3);
        char v44 = (void *)v95;
        sub_24D3E380C((void *)v95, v43, 3);
        sub_24D3E380C(v40, v41, 3);
      }
      else
      {
        char v71 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24D3E380C(v40, v41, 3);
        char v44 = (void *)v95;
        sub_24D3E380C((void *)v95, v43, 3);
        sub_24D3E380C(v40, v41, 3);
        uint64_t v42 = v89;
        if ((v71 & 1) == 0) {
          goto LABEL_52;
        }
      }
LABEL_50:
      uint64_t v55 = v44;
      uint64_t v56 = v43;
      char v57 = v36;
      goto LABEL_51;
    case 4:
      uint64_t v43 = (void *)v90;
      char v44 = (void *)v95;
      if (v95 | v90)
      {
        if (v39 == 4 && v37 == 1 && !v38)
        {
          uint64_t v58 = 1;
          goto LABEL_48;
        }
      }
      else if (v39 == 4 && !(v37 | v38))
      {
        uint64_t v58 = 0;
        goto LABEL_48;
      }
LABEL_52:
      uint64_t v72 = *(void **)(v42 + 96);
      uint64_t v73 = *(void **)(v42 + 104);
      *(void *)(v42 + 96) = v44;
      *(void *)(v42 + 104) = v43;
      char v74 = *(unsigned char *)(v42 + 112);
      *(unsigned char *)(v42 + 112) = v36;
      sub_24D3F1C98(v44, v43, v36);
      sub_24D3E380C(v72, v73, v74);
      unint64_t v75 = v91;
      sub_24D9C3D3C(v42);
      if (v75)
      {
        sub_24D3E380C(v44, v43, v36);
        goto LABEL_9;
      }
      swift_release();
      if (v36 != 1) {
        goto LABEL_58;
      }
      sub_24D3E380C((void *)v95, v43, 1);
      uint64_t v76 = v86;
      uint64_t v77 = *v86 + 1;
      if (!__OFADD__(*v86, 1)) {
        goto LABEL_66;
      }
      __break(1u);
LABEL_58:
      sub_24D3E380C((void *)v95, v43, v36);
      break;
    default:
      uint64_t v43 = (void *)v90;
      char v44 = (void *)v95;
      if (v39 || v95 != v37) {
        goto LABEL_52;
      }
      goto LABEL_50;
  }
  return 1;
}

uint64_t sub_24D9CC994(uint64_t a1)
{
  uint64_t v69 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void **)(*(void *)v1 + 544);
  uint64_t v5 = *(id (**)(uint64_t, void *))(*(void *)v1 + 568);
  uint64_t v6 = *(id (**)(uint64_t, void *))(*(void *)v1 + 560);
  id aBlock = *(id *)(*(void *)v1 + 552);
  uint64_t v3 = (uint64_t)aBlock;
  uint64_t v64 = (uint64_t)v4;
  uint64_t v65 = v5;
  uint64_t v66 = v6;
  uint64_t v7 = type metadata accessor for PersistenceTrigger();
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v59 = (char *)&v50 - v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v55 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v53 = (char *)&v50 - v10;
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v51 = *(void *)(v11 - 8);
  uint64_t v52 = v11;
  MEMORY[0x270FA5388](v11);
  char v50 = (char *)&v50 - v12;
  id aBlock = v4;
  uint64_t v64 = v3;
  uint64_t v65 = v6;
  uint64_t v66 = v5;
  type metadata accessor for PersistenceTrigger.AffectedGlobalJobs();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (uint64_t *)((char *)&v50 - v15);
  id aBlock = v4;
  uint64_t v64 = v3;
  uint64_t v65 = v6;
  uint64_t v66 = v5;
  uint64_t v58 = (void *)type metadata accessor for PersistenceTrigger();
  uint64_t v60 = a1;
  sub_24D56A0EC(v58, v16);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 48))(v16, 1, TupleTypeMetadata2) != 1)
  {
    uint64_t v21 = *v16;
    uint64_t v22 = (unsigned __int8 *)v16 + *(int *)(TupleTypeMetadata2 + 48);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (!EnumCaseMultiPayload)
    {
      unsigned __int8 v32 = *v22;
      uint64_t v33 = v52;
      char v34 = &v22[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v36 = (uint64_t)v50;
      uint64_t v35 = v51;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v51 + 32))(v50, v34, v33);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v19 = v60;
      uint64_t v38 = v61;
      sub_24D9CBAEC(v60, 0, v32, v36, v21, v33, AssociatedConformanceWitness);
      uint64_t v18 = v38;
      if (v38) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v36, v33);
      }
      (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v33);
      goto LABEL_25;
    }
    if (EnumCaseMultiPayload == 1)
    {
      unsigned __int8 v24 = *v22;
      uint64_t v25 = v55;
      unint64_t v26 = &v22[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v28 = (uint64_t)v53;
      uint64_t v27 = v54;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v54 + 32))(v53, v26, v25);
      uint64_t v29 = swift_getAssociatedConformanceWitness();
      uint64_t v19 = v60;
      uint64_t v30 = v61;
      sub_24D9CBAEC(v60, 1, v24, v28, v21, v25, v29);
      uint64_t v18 = v30;
      if (v30) {
        return (*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8))(v28, v25);
      }
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v28, v25);
LABEL_25:
      uint64_t v17 = 0;
      goto LABEL_3;
    }
    char v39 = *(void **)(v62 + 16);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v21;
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_24D900598;
    *(void *)(v41 + 24) = v40;
    uint64_t v67 = sub_24D3E3974;
    uint64_t v68 = v41;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v64 = 1107296256;
    uint64_t v65 = sub_24D3E38DC;
    uint64_t v66 = (id (*)(uint64_t, void *))&block_descriptor_25;
    uint64_t v42 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v43 = objc_msgSend(v39, sel_executeSwift_error_, v42, &aBlock);
    _Block_release(v42);
    id v44 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      if (!v43)
      {
        sub_24DCC8828();

        goto LABEL_28;
      }
      if (!objc_msgSend(v39, sel_changes))
      {
LABEL_26:
        uint64_t v17 = sub_24D900598;
        uint64_t v19 = v60;
        uint64_t v18 = v61;
        goto LABEL_3;
      }
      uint64_t v67 = (uint64_t (*)(uint64_t))sub_24D82F564;
      uint64_t v68 = 0;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v64 = 1107296256;
      uint64_t v65 = sub_24D3E38DC;
      uint64_t v66 = (id (*)(uint64_t, void *))&block_descriptor_28_1;
      char v46 = _Block_copy(&aBlock);
      swift_release();
      id aBlock = 0;
      unsigned int v47 = objc_msgSend(v39, sel_executeSwift_error_, v46, &aBlock);
      _Block_release(v46);
      id v48 = aBlock;
      if ((swift_isEscapingClosureAtFileLocation() & 1) == 0)
      {
        if (v47)
        {
          if (objc_msgSend(v39, sel_changes))
          {
            uint64_t Strong = swift_weakLoadStrong();
            uint64_t v19 = v60;
            uint64_t v18 = v61;
            uint64_t v20 = v59;
            if (Strong)
            {
              sub_24DA30ACC();
              swift_release();
            }
            uint64_t v17 = sub_24D900598;
            goto LABEL_4;
          }
          goto LABEL_26;
        }
        sub_24DCC8828();

LABEL_28:
        swift_willThrow();
        return swift_release();
      }
    }
    __break(1u);
  }
  uint64_t v17 = 0;
  uint64_t v19 = v60;
  uint64_t v18 = v61;
LABEL_3:
  uint64_t v20 = v59;
LABEL_4:
  sub_24D59DCC8(v19);
  if (!v18)
  {
    sub_24D55DE68(v58, v20);
    sub_24D59DCC8((uint64_t)v20);
    (*(void (**)(_OWORD *, uint64_t))(v56 + 8))(v20, v57);
    sub_24DCBDE5C(v19);
  }
  return sub_24D43DD74((uint64_t)v17);
}

uint64_t sub_24D9CD228(uint64_t a1, uint64_t a2)
{
  v9[1] = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v3 = MEMORY[0x263F8D6C8];
  uint64_t v10 = MEMORY[0x263F8D6C8];
  v9[0] = a2;
  sub_24D3E3EB4((uint64_t)v9);
  uint64_t v5 = v4;
  sub_24D415F74((uint64_t)v9, qword_26B197F50);
  if (!v5) {
    goto LABEL_4;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v9[0] = 0;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v10 = v3;
  v9[0] = a2;
  sub_24D3E3EB4((uint64_t)v9);
  uint64_t v7 = v6;
  sub_24D415F74((uint64_t)v9, qword_26B197F50);
  if (v7)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v11;
  }
  else
  {
LABEL_4:
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

void sub_24D9CD3F8()
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  sub_24D59EC6C();
  if (!v1)
  {
    sub_24D59EC6C();
    sub_24DCB3470();
    sub_24D9C3058((uint64_t)sub_24D59EE74, 0, (void (*)(uint64_t))sub_24D9CE668, v0);
    uint64_t v2 = *(void **)(v0 + 16);
    aBlock[4] = sub_24D9C2DD4;
    aBlock[5] = 0;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_19;
    uint64_t v3 = _Block_copy(aBlock);
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = objc_msgSend(v2, sel_executeSwift_error_, v3, aBlock);
    _Block_release(v3);
    id v5 = aBlock[0];
    if (swift_isEscapingClosureAtFileLocation()) {
      __break(1u);
    }
    if (!v4)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
  }
}

uint64_t sub_24D9CD5BC(uint64_t a1, void *a2)
{
  uint64_t v3 = *a2;
  char v46 = a2;
  uint64_t v4 = v3;
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unsigned int v47 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24DCC9078();
  uint64_t v45 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  swift_retain();
  unint64_t v12 = sub_24DCC9068();
  os_log_type_t v13 = sub_24DCCA108();
  BOOL v14 = os_log_type_enabled(v12, v13);
  uint64_t v43 = v4;
  if (v14)
  {
    uint64_t v40 = v8;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v42 = v5;
    uint64_t v16 = (uint8_t *)v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v41 = v6;
    uint64_t v18 = v17;
    *(_DWORD *)uint64_t v16 = 136446210;
    uint64_t v49 = v17;
    v39[1] = v16 + 4;
    uint64_t v19 = sub_24D987D50();
    uint64_t v48 = sub_24D418FB4(v19, v20, &v49);
    sub_24DCCA428();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v12, v13, "recovering running job %{public}s", v16, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v18;
    uint64_t v6 = v41;
    MEMORY[0x25332B030](v21, -1, -1);
    uint64_t v22 = v16;
    uint64_t v5 = v42;
    MEMORY[0x25332B030](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v40);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v8);
  }
  sub_24D5129BC();
  uint64_t v23 = swift_allocError();
  *(void *)uint64_t v24 = 0;
  *(void *)(v24 + 8) = 0;
  *(unsigned char *)(v24 + 16) = -1;
  if (a1 < 0)
  {
    unint64_t v26 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
    uint64_t v25 = *(void **)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68);
    *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60) = v23;
    *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x68) = 0;
    char v27 = *(unsigned char *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x70);
    *(unsigned char *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x70) = 3;
  }
  else
  {
    unint64_t v26 = *(void **)(a1 + 96);
    uint64_t v25 = *(void **)(a1 + 104);
    *(void *)(a1 + 96) = v23;
    *(void *)(a1 + 104) = 0;
    char v27 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = 3;
  }
  sub_24D3E380C(v26, v25, v27);
  swift_retain();
  uint64_t v28 = v47;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v30 = v29;
  unint64_t v31 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t result = v31(v28, v5);
  double v33 = v30 * 1000000000.0;
  if ((~COERCE__INT64(v30 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v33 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v33 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v34 = v44;
  sub_24D50D7F4(a1, (void (**)(char *, uint64_t))(uint64_t)v33);
  swift_release();
  if (v34) {
    return 1;
  }
  unint64_t v35 = sub_24D9882B4(a1);
  swift_retain();
  swift_retain();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v37 = v36;
  uint64_t result = v31(v28, v5);
  double v38 = v37 * 1000000000.0;
  if ((~COERCE__INT64(v37 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_19;
  }
  if (v38 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v38 < 9.22337204e18)
  {
    sub_24D50D7F4(v35, (void (**)(char *, uint64_t))(uint64_t)v38);
    swift_release();
    swift_release();
    return 1;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_24D9CDAE0()
{
  return sub_24DCB4050();
}

void sub_24D9CDB18()
{
  uint64_t v0 = sub_24DCC93F8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (uint64_t *)((char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (swift_weakLoadStrong())
  {
    id v4 = (id)sub_24DA637A8();
    swift_release();
    *uint64_t v3 = v4;
    (*(void (**)(void *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F8F0E0], v0);
    char v5 = sub_24DCC9418();
    (*(void (**)(void *, uint64_t))(v1 + 8))(v3, v0);
    if (v5)
    {
      sub_24DCB4720();
      return;
    }
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_24D9CDC60()
{
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D9CDCC8()
{
  uint64_t v0 = sub_24D580378();

  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_weakDestroy();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24D9CDD38()
{
  sub_24D9CDCC8();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLJobRegistry()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D9CDD80()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941D0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24DCD6E80;
  uint64_t v2 = v0[3];
  *(void *)(v1 + 56) = type metadata accessor for SQLItemJobRegistry();
  *(void *)(v1 + 64) = &off_26FFAB250;
  *(void *)(v1 + 32) = v2;
  uint64_t v3 = v0[4];
  *(void *)(v1 + 96) = type metadata accessor for SQLItemJobRegistry();
  *(void *)(v1 + 104) = &off_26FFAB250;
  *(void *)(v1 + 72) = v3;
  uint64_t v4 = v0[5];
  *(void *)(v1 + 136) = type metadata accessor for SQLBackgroundDownloader();
  *(void *)(v1 + 144) = &off_26FFDCFA8;
  *(void *)(v1 + 112) = v4;
  swift_retain();
  swift_retain();
  swift_retain();
  return v1;
}

uint64_t sub_24D9CDECC()
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v19 = sub_24D9C2D2C;
  uint64_t v20 = 0;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_24D3E38DC;
  uint64_t v18 = &block_descriptor_3;
  uint64_t v2 = _Block_copy(&aBlock);
  swift_release();
  id aBlock = 0;
  unsigned int v3 = objc_msgSend(v1, sel_executeSwift_error_, v2, &aBlock);
  _Block_release(v2);
  id v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v3)
  {
LABEL_12:
    sub_24DCC8828();

    return swift_willThrow();
  }
  uint64_t v19 = sub_24D9C2D48;
  uint64_t v20 = 0;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_24D3E38DC;
  uint64_t v18 = &block_descriptor_6;
  char v5 = _Block_copy(&aBlock);
  swift_release();
  id aBlock = 0;
  unsigned int v6 = objc_msgSend(v1, sel_executeSwift_error_, v5, &aBlock);
  _Block_release(v5);
  id v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v6) {
    goto LABEL_12;
  }
  uint64_t v19 = sub_24D9C2D64;
  uint64_t v20 = 0;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_24D3E38DC;
  uint64_t v18 = &block_descriptor_9_0;
  uint64_t v7 = _Block_copy(&aBlock);
  swift_release();
  id aBlock = 0;
  unsigned int v8 = objc_msgSend(v1, sel_executeSwift_error_, v7, &aBlock);
  _Block_release(v7);
  id v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (!v8) {
    goto LABEL_12;
  }
  uint64_t v19 = sub_24D9C2D80;
  uint64_t v20 = 0;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_24D3E38DC;
  uint64_t v18 = &block_descriptor_12;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_release();
  id aBlock = 0;
  unsigned int v10 = objc_msgSend(v1, sel_executeSwift_error_, v9, &aBlock);
  _Block_release(v9);
  id v4 = aBlock;
  if (swift_isEscapingClosureAtFileLocation())
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
  }
  if (!v10) {
    goto LABEL_12;
  }
  uint64_t v19 = sub_24D9C2D9C;
  uint64_t v20 = 0;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v16 = 1107296256;
  uint64_t v17 = sub_24D3E38DC;
  uint64_t v18 = &block_descriptor_15;
  id v11 = _Block_copy(&aBlock);
  swift_release();
  id aBlock = 0;
  unsigned int v12 = objc_msgSend(v1, sel_executeSwift_error_, v11, &aBlock);
  _Block_release(v11);
  id v13 = aBlock;
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    goto LABEL_19;
  }
  if (v12) {
    return result;
  }
  sub_24DCC8828();

  return swift_willThrow();
}

uint64_t sub_24D9CE338()
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 16);
  aBlock[4] = sub_24D9C2DB8;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_26;
  uint64_t v2 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v3 = objc_msgSend(v1, sel_executeSwift_error_, v2, aBlock);
  _Block_release(v2);
  id v4 = aBlock[0];
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  if (!v3)
  {
    sub_24DCC8828();

    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24D9CE480()
{
  return sub_24D9CDD80();
}

uint64_t sub_24D9CE4A4()
{
  return sub_24D9CDECC();
}

uint64_t sub_24D9CE4C8()
{
  return sub_24D9CE338();
}

char *sub_24D9CE4EC@<X0>(char *result@<X0>, void *a2@<X8>)
{
  *a2 = qword_24DCE24F8[*result];
  return result;
}

uint64_t sub_24D9CE504@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24DCCAD78();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24D9CE550()
{
  return 0;
}

uint64_t sub_24D9CE668(uint64_t a1)
{
  return sub_24D9CD5BC(a1, v1) & 1;
}

uint64_t sub_24D9CE688()
{
  return 0;
}

uint64_t sub_24D9CE780()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CE790()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CE7A0(uint64_t a1)
{
  return sub_24D9CBA74(a1, v1, (void (*)(void))sub_24DA637B8);
}

uint64_t sub_24D9CE7D0(uint64_t a1)
{
  return sub_24D9CAC4C(*(unsigned __int8 *)(v1 + 24), a1);
}

uint64_t sub_24D9CE800(uint64_t a1)
{
  return sub_24D9CBA74(a1, v1, (void (*)(void))sub_24DA637B0);
}

void sub_24D9CE830(void *a1)
{
}

uint64_t sub_24D9CE85C()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CE86C(uint64_t a1)
{
  return sub_24D9CA960(a1, *(unsigned char *)(v1 + 16), *(unsigned char *)(v1 + 17));
}

uint64_t sub_24D9CE878()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CE888(uint64_t a1)
{
  return sub_24D9CA4C4(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]) & 1;
}

uint64_t sub_24D9CE8B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24D9C9784(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_24D9CE8D4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24DB17B64();
  *a1 = result;
  return result;
}

uint64_t sub_24D9CE910@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24D9C9560(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_24D9CE934()
{
  return sub_24D9C7C34();
}

uint64_t sub_24D9CE93C()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CE94C(uint64_t a1)
{
  return sub_24D9C6CA0(a1, *(uint64_t **)(v1 + 16), *(void *)(v1 + 24)) & 1;
}

uint64_t sub_24D9CE970()
{
  return 32;
}

__n128 sub_24D9CE97C(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_24D9CE988()
{
  return swift_getAtKeyPath();
}

uint64_t sub_24D9CE9B4()
{
  return sub_24D9C789C();
}

unint64_t sub_24D9CE9C4()
{
  unint64_t result = qword_26986FFD0;
  if (!qword_26986FFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FFD0);
  }
  return result;
}

uint64_t sub_24D9CEA18(uint64_t a1)
{
  return sub_24D9CBBFC(a1, *(unsigned __int8 **)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(void *)(v1 + 88), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24D9CEA5C(uint64_t a1)
{
  return sub_24D9CBEC0(a1, *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(uint64_t **)(v1 + 56)) & 1;
}

uint64_t sub_24D9CEA84(uint64_t a1)
{
  return sub_24D9CB234(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_24D9CEA8C(uint64_t a1)
{
  return sub_24D9CB368(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32)) & 1;
}

uint64_t sub_24D9CEAB4(uint64_t a1)
{
  return sub_24D9CEB84(a1, (uint64_t (*)(uint64_t, void, unint64_t, void))sub_24D9C8678);
}

uint64_t objectdestroy_47Tm()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9CEB6C(uint64_t a1)
{
  return sub_24D9CEB84(a1, (uint64_t (*)(uint64_t, void, unint64_t, void))sub_24D9C8118);
}

uint64_t sub_24D9CEB84(uint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t, void))
{
  uint64_t v3 = *(void *)(*(void *)(v2 + 32) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return a2(a1, *(unsigned __int8 *)(v2 + 64), v2 + v4, *(void *)(v2 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D9CEBFC(void *a1)
{
  return sub_24D9C5A5C(a1, *(unsigned __int8 *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24D9CEC08(uint64_t a1)
{
  return sub_24D9C5D0C(a1, *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40)) & 1;
}

uint64_t sub_24D9CEC40()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CEC7C(uint64_t a1)
{
  return sub_24D9CECFC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24D9C4728);
}

uint64_t sub_24D9CEC94()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_56Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9CECE4(uint64_t a1)
{
  return sub_24D9CECFC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24D9C4430);
}

uint64_t sub_24D9CECFC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t sub_24D9CED14()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CED24()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CED34()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CED44()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9CED88(uint64_t a1)
{
  return sub_24D9C3A30(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D9CED90()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CEDA0(uint64_t a1)
{
  uint64_t v2 = *(uint64_t **)(v1 + 48);
  uint64_t v3 = *v2;
  *uint64_t v2 = a1;
  swift_retain();
  sub_24D4A4444(v3);
  return 0;
}

uint64_t sub_24D9CEDE4()
{
  return swift_deallocObject();
}

unint64_t sub_24D9CEDF4(uint64_t a1)
{
  return sub_24D9C359C(a1, *(void (**)(uint64_t))(v1 + 16));
}

uint64_t sub_24D9CEDFC()
{
  return swift_deallocObject();
}

uint64_t sub_24D9CEE0C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9CEE44()
{
  return swift_deallocObject();
}

ValueMetadata *type metadata accessor for SQLVolatileJobID()
{
  return &type metadata for SQLVolatileJobID;
}

ValueMetadata *type metadata accessor for SQLJobID()
{
  return &type metadata for SQLJobID;
}

unint64_t sub_24D9CEE74(uint64_t a1)
{
  unint64_t result = sub_24D9CEE9C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24D9CEE9C()
{
  unint64_t result = qword_26986FFE0;
  if (!qword_26986FFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FFE0);
  }
  return result;
}

unint64_t sub_24D9CEEF0(uint64_t a1)
{
  unint64_t result = sub_24D9CEF18();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24D9CEF18()
{
  unint64_t result = qword_26B195CF8;
  if (!qword_26B195CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B195CF8);
  }
  return result;
}

uint64_t sub_24D9CEF6C@<X0>(unsigned char *a1@<X8>)
{
  return sub_24D9CE8D4(a1);
}

char *sub_24D9CEFFC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = (char *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v4 + 80) - 8) + 56))(&v4[*(void *)(*(void *)v4 + 96)], 1, 1);
  *((void *)v4 + 2) = a1;
  *((void *)v4 + 3) = a2;
  return v4;
}

uint64_t sub_24D9CF0A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = &v17[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v7);
  id v11 = &v17[-v10];
  unsigned int v12 = (char *)v1 + *(void *)(v3 + 96);
  swift_beginAccess();
  (*(void (**)(unsigned char *, char *, uint64_t))(v6 + 16))(v11, v12, v5);
  uint64_t v13 = *(void *)(v4 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v4) != 1) {
    return (*(uint64_t (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(a1, v11, v4);
  }
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
  BOOL v14 = (void (*)(uint64_t))v1[2];
  uint64_t v15 = swift_retain();
  v14(v15);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v9, a1, v4);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v4);
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v6 + 40))(v12, v9, v5);
  return swift_endAccess();
}

uint64_t sub_24D9CF314(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  uint64_t v4 = sub_24DCCA3F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = *(void *)(v3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 32))((char *)&v11 - v6, a1, v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v3);
  uint64_t v9 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v7, v4);
  return swift_endAccess();
}

void (*sub_24D9CF49C(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  *uint64_t v3 = v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  v3[1] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[2] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[3] = malloc(v6);
  uint64_t v7 = malloc(v6);
  v3[4] = v7;
  sub_24D9CF0A4((uint64_t)v7);
  return sub_24D9CF570;
}

void sub_24D9CF570(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void **)(*(void *)a1 + 24);
  uint64_t v4 = *(void **)(*(void *)a1 + 32);
  if (a2)
  {
    uint64_t v5 = v2[1];
    uint64_t v6 = v2[2];
    (*(void (**)(void, void *, uint64_t))(v6 + 16))(*(void *)(*(void *)a1 + 24), v4, v5);
    sub_24D9CF314((uint64_t)v3);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    sub_24D9CF314(*(void *)(*(void *)a1 + 32));
  }
  free(v4);
  free(v3);

  free(v2);
}

char *sub_24D9CF624(uint64_t a1, uint64_t a2)
{
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(*(void *)v2 + 80) - 8) + 56))(&v2[*(void *)(*(void *)v2 + 96)], 1, 1);
  *((void *)v2 + 2) = a1;
  *((void *)v2 + 3) = a2;
  return v2;
}

uint64_t sub_24D9CF6B8()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_24D9CF748()
{
  sub_24D9CF6B8();

  return swift_deallocClassInstance();
}

uint64_t sub_24D9CF7A0()
{
  uint64_t result = sub_24DCCA3F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for Lazy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D9CF85C()
{
  uint64_t result = type metadata accessor for DirectionalTestingOperation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DirectionalTestingOperation();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24D9CF950(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v965 = *(void *)(v4 + 64);
  int v907 = *(_DWORD *)(v4 + 80);
  uint64_t v932 = v3;
  uint64_t v864 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v864 - 8);
  int v901 = *(_DWORD *)(v5 + 80);
  uint64_t v853 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v853 - 8);
  int v896 = *(_DWORD *)(v6 + 80);
  uint64_t v7 = v901 & 0xF8 | v896 | 7u;
  uint64_t v971 = v7 | v907;
  uint64_t v861 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v861 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v851 = v8;
  int v891 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v891 | 7;
  uint64_t v879 = v4;
  uint64_t v865 = v5;
  uint64_t v854 = v6;
  unsigned int v11 = *(_DWORD *)(v6 + 84);
  unsigned int v835 = v11;
  unsigned int v875 = *(_DWORD *)(v5 + 84);
  if (v875 > v11) {
    unsigned int v11 = *(_DWORD *)(v5 + 84);
  }
  unsigned int v844 = v11;
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  unsigned int v941 = *(_DWORD *)(v4 + 84);
  unsigned int v867 = v11;
  if (v11 <= v941) {
    unsigned int v11 = *(_DWORD *)(v4 + 84);
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v920 = v12;
  if (v11 <= v12) {
    unsigned int v11 = v12;
  }
  unsigned int v837 = v11;
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v11 = 0x7FFFFFFF;
  }
  unsigned int v859 = v11;
  unsigned int v873 = *(_DWORD *)(v8 + 84);
  uint64_t v957 = v907;
  unint64_t v868 = v965 + v907;
  uint64_t v930 = v901 & 0xF8 | v896 | 7u;
  uint64_t v869 = v965 + v7;
  uint64_t v872 = *(void *)(v5 + 64) + 7;
  uint64_t v852 = v896 + 8;
  uint64_t v847 = *(void *)(v6 + 64) + 7;
  size_t v947 = ((((v847 + ((v852 + (v872 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v896)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v928 = *(_DWORD *)(v8 + 80) | 7;
  uint64_t v938 = v10 + 16;
  uint64_t v856 = v891 + 12;
  size_t v13 = *(void *)(*(void *)(v861 - 8) + 64);
  size_t v850 = v13 + v891;
  size_t v832 = v13 + 12;
  uint64_t v849 = v891 + 10;
  unint64_t v14 = (v849
       + ((((((v13
             + 12
             + ((v850 + (v856 & ~(unint64_t)v891)) & ~(unint64_t)v891)) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v891;
  unint64_t v923 = *(_DWORD *)(v8 + 80);
  size_t v874 = v13;
  if (!v9) {
    ++v13;
  }
  size_t v876 = v13;
  unint64_t v877 = v14;
  size_t v848 = v13 + 7;
  unint64_t v937 = ((((((((((v13 + 7 + v14) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v860 = (v10
        + 16
        + ((v965 + v7 + ((v965 + v907) & ~(unint64_t)v907)) & ~v7)
        + v947) & ~v10;
  unint64_t v858 = (v971 | v891) + v965;
  uint64_t v878 = v971 | v891;
  unint64_t v846 = ((((v860 + v937 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v15 = v846 + ((v878 + v965) & ~v878);
  unint64_t v913 = (v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(a3 + 24);
  uint64_t v882 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(v882 - 8);
  unsigned int v18 = *(_DWORD *)(v17 + 84);
  uint64_t v880 = v17;
  int v887 = *(_DWORD *)(v17 + 80);
  unint64_t v19 = *(void *)(v17 + 64);
  if (v18) {
    size_t v20 = *(void *)(v17 + 64);
  }
  else {
    size_t v20 = v19 + 1;
  }
  uint64_t v862 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v862 - 8);
  int __dst = *(_DWORD *)(v21 + 80);
  uint64_t v22 = v16;
  uint64_t v866 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v866 - 8);
  unsigned int v24 = *(_DWORD *)(v23 + 84);
  uint64_t v25 = *(_DWORD *)(v23 + 80);
  uint64_t v26 = __dst & 0xF8 | v25 | 7;
  uint64_t v863 = v21;
  unsigned int v855 = *(_DWORD *)(v21 + 84);
  if (v855 > v24) {
    unsigned int v24 = *(_DWORD *)(v21 + 84);
  }
  unsigned int v843 = v24;
  if (v24 <= 0x7FFFFFFE) {
    unsigned int v27 = 2147483646;
  }
  else {
    unsigned int v27 = v24;
  }
  uint64_t v871 = *(void *)(v21 + 64) + 7;
  uint64_t v870 = v25 + 8;
  unint64_t v28 = ((((*(void *)(*(void *)(v866 - 8) + 64) + 7 + ((v25 + 8 + (v871 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t v842 = v20;
  uint64_t v29 = v20 + v26;
  unint64_t v30 = ((((((v29 + ((v15 + v887) & ~(unint64_t)v887)) & ~v26) + v28 + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v839 = v965 + v887;
  uint64_t v31 = *(void *)(v932 - 8);
  uint64_t v32 = *(_DWORD *)(v31 + 80);
  size_t v33 = *(void *)(v31 + 64);
  uint64_t v838 = v965 + v32;
  if (!*(_DWORD *)(v31 + 84)) {
    ++v33;
  }
  size_t v834 = v33;
  unint64_t v34 = ((v965 + v32) & ~v32) + v33;
  unint64_t v35 = ((v913 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v965 > v35) {
    unint64_t v35 = v965;
  }
  if (v30 <= v28 + ((v29 + ((v965 + v887) & ~(unint64_t)v887)) & ~v26) + 16) {
    unint64_t v30 = v28 + ((v29 + ((v965 + v887) & ~(unint64_t)v887)) & ~v26) + 16;
  }
  if (((v913 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v34) {
    unint64_t v34 = ((v913 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v35 > v30) {
    unint64_t v30 = v35;
  }
  if (v30 <= v34) {
    unint64_t v36 = v34;
  }
  else {
    unint64_t v36 = v30;
  }
  unsigned int v919 = v27;
  unsigned int v914 = v18;
  if (v27 <= v18) {
    unsigned int v37 = v18;
  }
  else {
    unsigned int v37 = v27;
  }
  if (v37 <= v920) {
    unsigned int v37 = v920;
  }
  unsigned int v836 = v37;
  if (v37 <= 0x7FFFFFFF) {
    unsigned int v37 = 0x7FFFFFFF;
  }
  unsigned int v857 = v37;
  if (v941) {
    size_t v38 = v965;
  }
  else {
    size_t v38 = v965 + 1;
  }
  uint64_t v840 = v22;
  uint64_t v39 = *(void *)(v22 - 8);
  unint64_t v40 = v26 | v887 | v923;
  unint64_t v916 = v19 + v887;
  uint64_t v921 = v19 + v26;
  uint64_t v41 = v928;
  unint64_t v42 = (v938 + ((v19 + v26 + (v916 & ~(unint64_t)v887)) & ~v26) + v28) & ~v928;
  unint64_t v43 = v40 + v19;
  unint64_t v845 = ((((v42 + v937 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v44 = v845 + ((v40 + v19) & ~v40);
  unint64_t v45 = (v44 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v46 = ((v45 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v47 = v907;
  size_t __n = v38;
  uint64_t v48 = v38 + v930;
  unint64_t v49 = ((((((v38 + v930 + ((v44 + v47) & ~v47)) & ~v930) + v947 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v50 = v19 + v907;
  unint64_t v51 = ((v38 + v930 + ((v19 + v47) & ~v47)) & ~v930) + v947 + 16;
  if (*(_DWORD *)(v39 + 84)) {
    uint64_t v52 = *(void *)(v39 + 64);
  }
  else {
    uint64_t v52 = *(void *)(v39 + 64) + 1;
  }
  if (v19 > v46) {
    unint64_t v46 = v19;
  }
  if (v49 <= v51) {
    unint64_t v49 = v51;
  }
  unint64_t v53 = ((v45 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v54 = *(_DWORD *)(v39 + 80);
  uint64_t v55 = v19 + v54;
  size_t v833 = v52;
  if (v53 <= ((v19 + v54) & ~v54) + v52) {
    unint64_t v53 = (v55 & ~(unint64_t)*(_DWORD *)(v39 + 80)) + v52;
  }
  if (v46 > v49) {
    unint64_t v49 = v46;
  }
  if (v49 > v53) {
    unint64_t v53 = v49;
  }
  unint64_t v56 = v53;
  unint64_t v57 = v53 + 1;
  uint64_t v58 = v971 | v40 | v32 | v54;
  if (v57 <= v36 + 1) {
    unint64_t v59 = v36 + 1;
  }
  else {
    unint64_t v59 = v57;
  }
  if (v58 != 7
    || ((v901 | v907 | v896 | v891 | v887 | __dst | *(_DWORD *)(v23 + 80) | *(_DWORD *)(v31 + 80) | *(_DWORD *)(v39 + 80)) & 0x100000) != 0
    || v59 + 1 > 0x18)
  {
    uint64_t v64 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v65 = (void *)(v64 + ((v58 + 16) & ~v58));
    swift_retain();
    return v65;
  }
  unsigned int v60 = a2[v59];
  unsigned int v61 = v60 - 2;
  if (v60 >= 2)
  {
    if (v59 <= 3) {
      uint64_t v62 = v59;
    }
    else {
      uint64_t v62 = 4;
    }
    switch(v62)
    {
      case 1:
        int v63 = *a2;
        if (v59 < 4) {
          goto LABEL_79;
        }
        goto LABEL_80;
      case 2:
        int v63 = *(unsigned __int16 *)a2;
        if (v59 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_79;
      case 3:
        int v63 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v59 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_79;
      case 4:
        int v63 = *(_DWORD *)a2;
        if (v59 < 4) {
LABEL_79:
        }
          v63 |= v61 << (8 * v59);
LABEL_80:
        unsigned int v60 = v63 + 2;
        break;
      default:
        break;
    }
  }
  unint64_t v972 = v59;
  uint64_t v66 = ~v930;
  uint64_t v929 = ~v923;
  unint64_t v931 = ~(unint64_t)v887;
  uint64_t v67 = ~v25;
  if (v60 != 1)
  {
    unsigned int v74 = a2[v36];
    unsigned int v75 = v74 - 8;
    if (v74 < 8)
    {
      uint64_t v77 = AssociatedTypeWitness;
      char v78 = a1;
      uint64_t v79 = v878;
    }
    else
    {
      if (v36 <= 3) {
        uint64_t v76 = v36;
      }
      else {
        uint64_t v76 = 4;
      }
      uint64_t v77 = AssociatedTypeWitness;
      char v78 = a1;
      uint64_t v79 = v878;
      switch(v76)
      {
        case 1:
          int v80 = *a2;
          if (v36 < 4) {
            goto LABEL_120;
          }
          goto LABEL_124;
        case 2:
          int v80 = *(unsigned __int16 *)a2;
          if (v36 < 4) {
            goto LABEL_120;
          }
          goto LABEL_124;
        case 3:
          int v80 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v36 < 4) {
            goto LABEL_120;
          }
          goto LABEL_124;
        case 4:
          int v80 = *(_DWORD *)a2;
          if (v36 < 4) {
LABEL_120:
          }
            unsigned int v74 = (v80 | (v75 << (8 * v36))) + 8;
          else {
LABEL_124:
          }
            unsigned int v74 = v80 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v114 = ~v79;
    uint64_t v115 = ~v32;
    switch(v74)
    {
      case 1u:
        uint64_t v922 = v29;
        unint64_t v935 = ~(unint64_t)v907;
        uint64_t v911 = *(void *)(v866 - 8);
        uint64_t v915 = ~v26;
        uint64_t v121 = v66;
        uint64_t v926 = ~v41;
        uint64_t v895 = v67;
        unint64_t v899 = ~(unint64_t)v896;
        uint64_t v905 = *(void *)(v911 + 64) + 7;
        size_t v830 = v28;
        unint64_t v959 = v36;
        char v122 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v879 + 16);
        uint64_t v65 = v78;
        v122(v78, a2, v77);
        v917 = (void *)(((unint64_t)v65 + v858) & v114);
        long long v123 = (void *)((unint64_t)&a2[v858] & v114);
        if (v941 == v859)
        {
          int v124 = (*(uint64_t (**)(void *))(v879 + 48))(v123);
LABEL_317:
          uint64_t v152 = v121;
LABEL_318:
          uint64_t v540 = v922;
          v541 = v917;
          if (v124)
          {
LABEL_319:
            memcpy(v541, v123, v846);
            uint64_t v542 = v882;
            goto LABEL_320;
          }
          unint64_t v151 = ((unint64_t)v123 + v868) & v935;
          unint64_t v153 = (v869 + v151) & v152;
LABEL_322:
          v977 = v123;
          v544 = (unsigned __int8 *)v123;
          uint64_t v545 = v152;
          v122(v541, v544, v77);
          v122((void *)(((unint64_t)v541 + v868) & v935), (unsigned __int8 *)v151, v77);
          unint64_t v546 = (v869 + (((unint64_t)v541 + v868) & v935)) & v545;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v865 + 16))(v546, v153, v864);
          v547 = (void *)((v872 + v546) & 0xFFFFFFFFFFFFFFF8);
          v548 = (void *)((v872 + v153) & 0xFFFFFFFFFFFFFFF8);
          void *v547 = *v548;
          unint64_t v549 = ((unint64_t)v547 + v852) & v899;
          unint64_t v550 = ((unint64_t)v548 + v852) & v899;
          v551 = *(void (**)(unint64_t, unint64_t, uint64_t))(v854 + 16);
          swift_bridgeObjectRetain();
          v551(v549, v550, v853);
          v552 = (void *)((v847 + v550) & 0xFFFFFFFFFFFFFFF8);
          v553 = (void *)((v847 + v549) & 0xFFFFFFFFFFFFFFF8);
          void *v553 = *v552;
          v554 = (void *)(((unint64_t)v553 + 15) & 0xFFFFFFFFFFFFFFF8);
          v555 = (void *)(((unint64_t)v552 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v554 = *v555;
          v554[1] = v555[1];
          v556 = (void *)(v947 + v546);
          void *v556 = *(void *)(v947 + v153);
          v556[1] = *(void *)(v947 + v153 + 8);
          size_t v557 = (v938 + v947 + v546) & v926;
          size_t v558 = (v938 + v947 + v153) & v926;
          *(unsigned char *)size_t v557 = *(unsigned char *)v558;
          uint64_t v559 = v557 | 4;
          int v560 = *(_DWORD *)(v558 | 4);
          *(unsigned char *)(v559 + 4) = *(unsigned char *)((v558 | 4) + 4);
          *(_DWORD *)uint64_t v559 = v560;
          *(_WORD *)(v557 + 10) = *(_WORD *)(v558 + 0xA);
          size_t v952 = v557;
          uint64_t v561 = (v856 + v557) & v929;
          uint64_t v562 = (v856 + v558) & v929;
          v563 = *(void (**)(uint64_t, uint64_t, uint64_t))(v851 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v563(v561, v562, v861);
          uint64_t v564 = (v850 + v561) & v929;
          uint64_t v565 = (v850 + v562) & v929;
          v563(v564, v565, v861);
          v566 = (unsigned char *)(v564 + v874);
          unsigned char *v566 = *(unsigned char *)(v565 + v874);
          v566[1] = *(unsigned char *)(v565 + v874 + 1);
          v566[2] = *(unsigned char *)(v565 + v874 + 2);
          v566[3] = *(unsigned char *)(v565 + v874 + 3);
          v566[4] = *(unsigned char *)(v565 + v874 + 4);
          unint64_t v567 = (v564 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v568 = (v565 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v567 = *(void *)v568;
          *(void *)(v567 + 8) = *(void *)(v568 + 8);
          *(unsigned char *)(v567 + 16) = *(unsigned char *)(v568 + 16);
          *(unsigned char *)(v567 + 17) = *(unsigned char *)(v568 + 17);
          *(unsigned char *)(v567 + 18) = *(unsigned char *)(v568 + 18);
          *(unsigned char *)(v567 + 19) = *(unsigned char *)(v568 + 19);
          unint64_t v569 = (v567 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v570 = (v568 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v569 = *(void *)v570;
          *(unsigned char *)(v569 + 8) = *(unsigned char *)(v570 + 8);
          *(unsigned char *)(v569 + 9) = *(unsigned char *)(v570 + 9);
          *(unsigned char *)(v569 + 10) = *(unsigned char *)(v570 + 10);
          *(unsigned char *)(v569 + 11) = *(unsigned char *)(v570 + 11);
          *(unsigned char *)(v569 + 12) = *(unsigned char *)(v570 + 12);
          v571 = (void *)((v568 + 47) & 0xFFFFFFFFFFFFFFF8);
          v572 = (void *)((v567 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v572 = *v571;
          unint64_t v573 = ((unint64_t)v572 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v574 = ((unint64_t)v571 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v573 = *(void *)v574;
          *(unsigned char *)(v573 + 8) = *(unsigned char *)(v574 + 8);
          *(unsigned char *)(v573 + 9) = *(unsigned char *)(v574 + 9);
          v575 = (void *)((v849 + v573) & v929);
          v576 = (const void *)((v849 + v574) & v929);
          v577 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v851 + 48);
          swift_bridgeObjectRetain();
          if (v577(v576, 1, v861))
          {
            memcpy(v575, v576, v876);
          }
          else
          {
            v563((uint64_t)v575, (uint64_t)v576, v861);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v851 + 56))(v575, 0, 1, v861);
          }
          v578 = (void *)(((unint64_t)v575 + v848) & 0xFFFFFFFFFFFFFFF8);
          v579 = (void *)(((unint64_t)v576 + v848) & 0xFFFFFFFFFFFFFFF8);
          void *v578 = *v579;
          unint64_t v580 = ((unint64_t)v578 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v581 = ((unint64_t)v579 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v582 = *(void *)v581;
          *(unsigned char *)(v580 + 8) = *(unsigned char *)(v581 + 8);
          *(void *)unint64_t v580 = v582;
          v583 = (void *)(((unint64_t)v578 + 31) & 0xFFFFFFFFFFFFFFF8);
          v584 = (void *)(((unint64_t)v579 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v583 = *v584;
          unint64_t v585 = ((unint64_t)v583 + 15) & 0xFFFFFFFFFFFFFFF8;
          v586 = (uint64_t *)(((unint64_t)v584 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v587 = v586[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v587 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v585 = *(_OWORD *)v586;
          }
          else
          {
            uint64_t v588 = *v586;
            sub_24D3F9C18(*v586, v587);
            *(void *)unint64_t v585 = v588;
            *(void *)(v585 + 8) = v587;
          }
          uint64_t v542 = v882;
          long long v123 = v977;
          unint64_t v589 = (v585 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v590 = ((unint64_t)v586 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v591 = *(void *)v590;
          *(unsigned char *)(v589 + 8) = *(unsigned char *)(v590 + 8);
          *(void *)unint64_t v589 = v591;
          *(unsigned char *)(v589 + 9) = *(unsigned char *)(v590 + 9);
          unint64_t v592 = (v589 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v593 = (v590 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v594 = *(_DWORD *)v593;
          *(unsigned char *)(v592 + 4) = *(unsigned char *)(v593 + 4);
          *(_DWORD *)unint64_t v592 = v594;
          v595 = (void *)((v589 + 25) & 0xFFFFFFFFFFFFFFF8);
          v596 = (void *)((v590 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v595 = *v596;
          v595[1] = v596[1];
          unint64_t v597 = v937 + v952;
          unint64_t v598 = v937 + v558;
          unint64_t v599 = *(void *)(v937 + v558 + 16);
          if (v599 >= 0xFFFFFFFF) {
            LODWORD(v599) = -1;
          }
          int v600 = v599 - 1;
          swift_bridgeObjectRetain();
          if (v600 < 0)
          {
            *(void *)unint64_t v597 = *(void *)v598;
            *(unsigned char *)(v597 + 8) = *(unsigned char *)(v598 + 8);
            *(unsigned char *)(v597 + 9) = *(unsigned char *)(v598 + 9);
            v613 = *(void **)(v598 + 16);
            id v614 = v613;
            *(void *)(v597 + 16) = v613;
            v615 = *(void **)(v598 + 24);
            id v616 = v615;
            *(void *)(v597 + 24) = v615;
            *(unsigned char *)(v597 + 32) = *(unsigned char *)(v598 + 32);
            *(unsigned char *)(v597 + 33) = *(unsigned char *)(v598 + 33);
            *(unsigned char *)(v597 + 34) = *(unsigned char *)(v598 + 34);
            *(void *)(v597 + 40) = *(void *)(v598 + 40);
            *(void *)(v597 + 48) = *(void *)(v598 + 48);
            *(void *)(v597 + 56) = *(void *)(v598 + 56);
            *(void *)(v597 + 64) = *(void *)(v598 + 64);
            *(unsigned char *)(v597 + 72) = *(unsigned char *)(v598 + 72);
            *(void *)(v597 + 80) = *(void *)(v598 + 80);
            *(void *)(v597 + 88) = *(void *)(v598 + 88);
            v953 = *(void **)(v598 + 96);
            *(void *)(v597 + 96) = v953;
            *(unsigned char *)(v597 + 104) = *(unsigned char *)(v598 + 104);
            *(unsigned char *)(v597 + 105) = *(unsigned char *)(v598 + 105);
            *(void *)(v597 + 112) = *(void *)(v598 + 112);
            *(void *)(v597 + 120) = *(void *)(v598 + 120);
            *(void *)(v597 + 128) = *(void *)(v598 + 128);
            *(void *)(v597 + 136) = *(void *)(v598 + 136);
            *(void *)(v597 + 144) = *(void *)(v598 + 144);
            *(void *)(v597 + 152) = *(void *)(v598 + 152);
            *(void *)(v597 + 160) = *(void *)(v598 + 160);
            *(void *)(v597 + 168) = *(void *)(v598 + 168);
            *(unsigned char *)(v597 + 176) = *(unsigned char *)(v598 + 176);
            *(void *)(v597 + 184) = *(void *)(v598 + 184);
            uint64_t v617 = *(void *)(v598 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v618 = v953;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v617)
            {
              *(void *)(v597 + 192) = v617;
              *(void *)(v597 + 200) = *(void *)(v598 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v597 + 192) = *(_OWORD *)(v598 + 192);
            }
            uint64_t v542 = v882;
            long long v123 = v977;
            *(void *)(v597 + 208) = *(void *)(v598 + 208);
            *(void *)(v597 + 216) = *(void *)(v598 + 216);
            *(void *)(v597 + 224) = *(void *)(v598 + 224);
            *(void *)(v597 + 232) = *(void *)(v598 + 232);
            *(void *)(v597 + 240) = *(void *)(v598 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v601 = *(_OWORD *)v598;
            long long v602 = *(_OWORD *)(v598 + 16);
            long long v603 = *(_OWORD *)(v598 + 48);
            *(_OWORD *)(v597 + 32) = *(_OWORD *)(v598 + 32);
            *(_OWORD *)(v597 + 48) = v603;
            *(_OWORD *)unint64_t v597 = v601;
            *(_OWORD *)(v597 + 16) = v602;
            long long v604 = *(_OWORD *)(v598 + 64);
            long long v605 = *(_OWORD *)(v598 + 80);
            long long v606 = *(_OWORD *)(v598 + 112);
            *(_OWORD *)(v597 + 96) = *(_OWORD *)(v598 + 96);
            *(_OWORD *)(v597 + 112) = v606;
            *(_OWORD *)(v597 + 64) = v604;
            *(_OWORD *)(v597 + 80) = v605;
            long long v607 = *(_OWORD *)(v598 + 128);
            long long v608 = *(_OWORD *)(v598 + 144);
            long long v609 = *(_OWORD *)(v598 + 176);
            *(_OWORD *)(v597 + 160) = *(_OWORD *)(v598 + 160);
            *(_OWORD *)(v597 + 176) = v609;
            *(_OWORD *)(v597 + 128) = v607;
            *(_OWORD *)(v597 + 144) = v608;
            long long v610 = *(_OWORD *)(v598 + 192);
            long long v611 = *(_OWORD *)(v598 + 208);
            long long v612 = *(_OWORD *)(v598 + 224);
            *(void *)(v597 + 240) = *(void *)(v598 + 240);
            *(_OWORD *)(v597 + 208) = v611;
            *(_OWORD *)(v597 + 224) = v612;
            *(_OWORD *)(v597 + 192) = v610;
          }
          v778 = (_OWORD *)((v597 + 255) & 0xFFFFFFFFFFFFFFF8);
          v779 = (long long *)((v598 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v780 = *v779;
          *(_OWORD *)((char *)v778 + 9) = *(long long *)((char *)v779 + 9);
          _OWORD *v778 = v780;
          unint64_t v781 = (v597 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v782 = (v598 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v783 = *(_OWORD *)v782;
          *(unsigned char *)(v781 + 16) = *(unsigned char *)(v782 + 16);
          *(_OWORD *)unint64_t v781 = v783;
          v784 = (void *)((v597 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v785 = (v598 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v786 = *(void *)v785;
          v785 += 15;
          void *v784 = v786;
          v787 = (void *)(((unint64_t)v784 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v788 = *(void *)(v785 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v789 = *(void *)((v785 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v788, v789);
          void *v787 = v788;
          v787[1] = v789;
          uint64_t v65 = a1;
          size_t v543 = v874;
          uint64_t v540 = v922;
          v541 = v917;
          if (v873)
          {
LABEL_388:
            unint64_t v790 = ((((v860
                     + ((((((((((v877 + v543 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            v791 = (void *)(((unint64_t)v541 + v887 + v790) & v931);
            v792 = (const void *)(((unint64_t)v123 + v887 + v790) & v931);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v880 + 48))(v792, 1, v542))
            {
              memcpy(v791, v792, v842);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v880 + 16))(v791, v792, v542);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v880 + 56))(v791, 0, 1, v542);
            }
            v793 = (char *)(((unint64_t)v791 + v540) & v915);
            v794 = (char *)(((unint64_t)v792 + v540) & v915);
            if (v855 == v919)
            {
              int v795 = (*(uint64_t (**)(unint64_t))(v863 + 48))(((unint64_t)v792 + v540) & v915);
            }
            else
            {
              v796 = (uint64_t *)((unint64_t)&v794[v871] & 0xFFFFFFFFFFFFFFF8);
              if (v843 <= 0x7FFFFFFE)
              {
                uint64_t v797 = *v796;
                if ((unint64_t)*v796 >= 0xFFFFFFFF) {
                  LODWORD(v797) = -1;
                }
                size_t v798 = v830;
                if ((v797 + 1) >= 2) {
                  goto LABEL_400;
                }
                goto LABEL_402;
              }
              int v795 = (*(uint64_t (**)(unint64_t))(v911 + 48))(((unint64_t)v796 + v870) & v895);
            }
            size_t v798 = v830;
            if (v795)
            {
LABEL_400:
              size_t v799 = v798;
              memcpy(v793, v794, v798);
LABEL_403:
              *(void *)&v793[v799] = *(void *)&v794[v799];
              v808 = (void *)((unint64_t)&v793[v799 + 15] & 0xFFFFFFFFFFFFFFF8);
              v809 = (void *)((unint64_t)&v794[v799 + 15] & 0xFFFFFFFFFFFFFFF8);
              void *v808 = *v809;
              int v206 = *(void **)(((unint64_t)v809 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v808 + 15) & 0xFFFFFFFFFFFFFFF8) = v206;
              char v207 = 1;
              goto LABEL_404;
            }
            v796 = (uint64_t *)((unint64_t)&v794[v871] & 0xFFFFFFFFFFFFFFF8);
LABEL_402:
            size_t v799 = v798;
            (*(void (**)(char *, char *, uint64_t))(v863 + 16))(v793, v794, v862);
            v800 = (void *)((unint64_t)&v793[v871] & 0xFFFFFFFFFFFFFFF8);
            void *v800 = *v796;
            unint64_t v801 = ((unint64_t)v800 + v870) & v895;
            unint64_t v802 = ((unint64_t)v796 + v870) & v895;
            v803 = *(void (**)(unint64_t, unint64_t, uint64_t))(v911 + 16);
            swift_bridgeObjectRetain();
            v803(v801, v802, v866);
            v804 = (void *)((v905 + v801) & 0xFFFFFFFFFFFFFFF8);
            v805 = (void *)((v905 + v802) & 0xFFFFFFFFFFFFFFF8);
            void *v804 = *v805;
            v806 = (void *)(((unint64_t)v804 + 15) & 0xFFFFFFFFFFFFFFF8);
            v807 = (void *)(((unint64_t)v805 + 15) & 0xFFFFFFFFFFFFFFF8);
            void *v806 = *v807;
            v806[1] = v807[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            goto LABEL_403;
          }
LABEL_320:
          size_t v543 = v876;
          goto LABEL_388;
        }
        unint64_t v151 = ((unint64_t)v123 + v868) & v935;
        uint64_t v152 = v121;
        unint64_t v153 = (v869 + v151) & v121;
        if (v867 == v859)
        {
          if (v875 == v867)
          {
            int v124 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v865 + 48))((v869 + v151) & v121, v875, v864);
            goto LABEL_317;
          }
          unint64_t v216 = (unint64_t *)((v872 + v153) & 0xFFFFFFFFFFFFFFF8);
          if (v844 > 0x7FFFFFFE)
          {
            int v124 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v854 + 48))(((unint64_t)v216 + v852) & v899, v835, v853);
            goto LABEL_317;
          }
          unint64_t v217 = *v216;
        }
        else
        {
          size_t v178 = v947 + v153;
          if ((v837 & 0x80000000) == 0)
          {
            unint64_t v179 = *(void *)(v178 + 8);
            if (v179 >= 0xFFFFFFFF) {
              LODWORD(v179) = -1;
            }
            int v124 = v179 + 1;
            goto LABEL_318;
          }
          uint64_t v223 = (v856 + ((v938 + v178) & v926)) & v929;
          if (v873 > 0x7FFFFFFD)
          {
            int v124 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v851 + 48))(v223, v873, v861);
            goto LABEL_317;
          }
          unint64_t v217 = *(void *)(((v832 + ((v850 + v223) & v929)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v217 >= 0xFFFFFFFF) {
          LODWORD(v217) = -1;
        }
        uint64_t v540 = v922;
        v541 = v917;
        if ((v217 + 1) >= 2) {
          goto LABEL_319;
        }
        goto LABEL_322;
      case 2u:
        uint64_t v125 = v29;
        uint64_t v126 = ~v26;
        uint64_t v127 = v67;
        uint64_t v906 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
        uint64_t v912 = *(void *)(v866 - 8);
        uint64_t v128 = v77;
        size_t v129 = v28;
        unint64_t v959 = v36;
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v879 + 16))(v78, a2, v128);
        unint64_t v130 = (void *)(((unint64_t)v65 + v839) & v931);
        unint64_t v131 = (const void *)((unint64_t)&a2[v839] & v931);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v880 + 48))(v131, 1, v882))
        {
          memcpy(v130, v131, v842);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v880 + 16))(v130, v131, v882);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v880 + 56))(v130, 0, 1, v882);
        }
        uint64_t v162 = (char *)(((unint64_t)v130 + v125) & v126);
        unint64_t v163 = ((unint64_t)v131 + v125) & v126;
        if (v855 == v919)
        {
          int v164 = (*(uint64_t (**)(unint64_t))(v863 + 48))(((unint64_t)v131 + v125) & v126);
        }
        else
        {
          unint64_t v165 = (uint64_t *)((v871 + v163) & 0xFFFFFFFFFFFFFFF8);
          if (v843 <= 0x7FFFFFFE)
          {
            uint64_t v166 = *v165;
            if ((unint64_t)*v165 >= 0xFFFFFFFF) {
              LODWORD(v166) = -1;
            }
            size_t v167 = v129;
            if ((v166 + 1) >= 2) {
              goto LABEL_210;
            }
LABEL_212:
            unint64_t v196 = ((unint64_t)v131 + v125) & v126;
            size_t v195 = v167;
            (*(void (**)(char *, unint64_t, uint64_t))(v863 + 16))(v162, v196, v862);
            int v197 = (void *)((unint64_t)&v162[v871] & 0xFFFFFFFFFFFFFFF8);
            *int v197 = *v165;
            unint64_t v198 = ((unint64_t)v197 + v870) & v127;
            unint64_t v199 = ((unint64_t)v165 + v870) & v127;
            unint64_t v200 = *(void (**)(unint64_t, unint64_t, uint64_t))(v912 + 16);
            swift_bridgeObjectRetain();
            v200(v198, v199, v866);
            unint64_t v201 = (void *)((v906 + v198) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v202 = (void *)((v906 + v199) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v201 = *v202;
            unint64_t v203 = (void *)(((unint64_t)v201 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v204 = (void *)(((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8);
            void *v203 = *v204;
            v203[1] = v204[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_213:
            uint64_t v205 = &v162[v195];
            *uint64_t v205 = *(unsigned char *)(v195 + v163);
            int v206 = *(void **)(v195 + v163 + 8);
            *((void *)v205 + 1) = v206;
            char v207 = 2;
LABEL_404:
            *((unsigned char *)v65 + v959) = v207;
            id v810 = v206;
            goto LABEL_409;
          }
          int v164 = (*(uint64_t (**)(unint64_t))(v912 + 48))(((unint64_t)v165 + v870) & v127);
        }
        size_t v167 = v129;
        if (v164)
        {
LABEL_210:
          unint64_t v194 = (const void *)(((unint64_t)v131 + v125) & v126);
          size_t v195 = v167;
          memcpy(v162, v194, v167);
          goto LABEL_213;
        }
        unint64_t v165 = (uint64_t *)((v871 + v163) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_212;
      case 3u:
        unint64_t v936 = ~(unint64_t)v907;
        uint64_t v132 = v66;
        uint64_t v927 = ~v41;
        unint64_t v900 = ~(unint64_t)v896;
        unint64_t v960 = v36;
        unint64_t v133 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v879 + 16);
        uint64_t v65 = v78;
        v133(v78, a2, v77);
        uint64_t v134 = (void *)(((unint64_t)v65 + v858) & v114);
        unint64_t v135 = (void *)((unint64_t)&a2[v858] & v114);
        if (v941 == v859)
        {
          int v136 = (*(uint64_t (**)(void *))(v879 + 48))(v135);
LABEL_335:
          uint64_t v155 = v132;
LABEL_336:
          if (v136)
          {
LABEL_337:
            memcpy(v134, v135, v846);
LABEL_338:
            size_t v619 = v876;
            goto LABEL_408;
          }
          unint64_t v154 = ((unint64_t)v135 + v868) & v936;
          unint64_t v156 = (v869 + v154) & v155;
          goto LABEL_340;
        }
        unint64_t v154 = ((unint64_t)v135 + v868) & v936;
        uint64_t v155 = v132;
        unint64_t v156 = (v869 + v154) & v132;
        if (v867 == v859)
        {
          if (v875 == v867)
          {
            int v136 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v865 + 48))((v869 + v154) & v132, v875, v864);
            goto LABEL_335;
          }
          id v218 = (unint64_t *)((v872 + v156) & 0xFFFFFFFFFFFFFFF8);
          if (v844 > 0x7FFFFFFE)
          {
            int v136 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v854 + 48))(((unint64_t)v218 + v852) & v900, v835, v853);
            goto LABEL_335;
          }
          unint64_t v219 = *v218;
        }
        else
        {
          size_t v180 = v947 + v156;
          if ((v837 & 0x80000000) == 0)
          {
            unint64_t v181 = *(void *)(v180 + 8);
            if (v181 >= 0xFFFFFFFF) {
              LODWORD(v181) = -1;
            }
            int v136 = v181 + 1;
            goto LABEL_336;
          }
          uint64_t v224 = (v856 + ((v938 + v180) & v927)) & v929;
          if (v873 > 0x7FFFFFFD)
          {
            int v136 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v851 + 48))(v224, v873, v861);
            goto LABEL_335;
          }
          unint64_t v219 = *(void *)(((v832 + ((v850 + v224) & v929)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v219 >= 0xFFFFFFFF) {
          LODWORD(v219) = -1;
        }
        if ((v219 + 1) >= 2) {
          goto LABEL_337;
        }
LABEL_340:
        v970 = v135;
        v620 = (unsigned __int8 *)v135;
        uint64_t v621 = v155;
        v133(v134, v620, v77);
        v978 = v134;
        unint64_t v622 = ((unint64_t)v134 + v868) & v936;
        v133((void *)v622, (unsigned __int8 *)v154, v77);
        unint64_t v623 = (v869 + v622) & v621;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v865 + 16))(v623, v156, v864);
        v624 = (void *)((v872 + v623) & 0xFFFFFFFFFFFFFFF8);
        v625 = (void *)((v872 + v156) & 0xFFFFFFFFFFFFFFF8);
        void *v624 = *v625;
        unint64_t v626 = ((unint64_t)v624 + v852) & v900;
        unint64_t v627 = ((unint64_t)v625 + v852) & v900;
        v628 = *(void (**)(unint64_t, unint64_t, uint64_t))(v854 + 16);
        swift_bridgeObjectRetain();
        v628(v626, v627, v853);
        v629 = (void *)((v847 + v627) & 0xFFFFFFFFFFFFFFF8);
        v630 = (void *)((v847 + v626) & 0xFFFFFFFFFFFFFFF8);
        void *v630 = *v629;
        v631 = (void *)(((unint64_t)v630 + 15) & 0xFFFFFFFFFFFFFFF8);
        v632 = (void *)(((unint64_t)v629 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v631 = *v632;
        v631[1] = v632[1];
        v633 = (void *)(v947 + v623);
        void *v633 = *(void *)(v947 + v156);
        v633[1] = *(void *)(v947 + v156 + 8);
        size_t v634 = (v938 + v947 + v623) & v927;
        size_t v635 = (v938 + v947 + v156) & v927;
        *(unsigned char *)size_t v634 = *(unsigned char *)v635;
        uint64_t v636 = v634 | 4;
        int v637 = *(_DWORD *)(v635 | 4);
        *(unsigned char *)(v636 + 4) = *(unsigned char *)((v635 | 4) + 4);
        *(_DWORD *)uint64_t v636 = v637;
        *(_WORD *)(v634 + 10) = *(_WORD *)(v635 + 0xA);
        size_t v946 = v635;
        size_t v954 = v634;
        uint64_t v638 = (v856 + v634) & v929;
        uint64_t v639 = (v856 + v635) & v929;
        v640 = *(void (**)(uint64_t, uint64_t, uint64_t))(v851 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v640(v638, v639, v861);
        uint64_t v641 = (v850 + v638) & v929;
        uint64_t v642 = (v850 + v639) & v929;
        v640(v641, v642, v861);
        v643 = (unsigned char *)(v641 + v874);
        unsigned char *v643 = *(unsigned char *)(v642 + v874);
        v643[1] = *(unsigned char *)(v642 + v874 + 1);
        v643[2] = *(unsigned char *)(v642 + v874 + 2);
        v643[3] = *(unsigned char *)(v642 + v874 + 3);
        v643[4] = *(unsigned char *)(v642 + v874 + 4);
        unint64_t v644 = (v641 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v645 = (v642 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v644 = *(void *)v645;
        *(void *)(v644 + 8) = *(void *)(v645 + 8);
        *(unsigned char *)(v644 + 16) = *(unsigned char *)(v645 + 16);
        *(unsigned char *)(v644 + 17) = *(unsigned char *)(v645 + 17);
        *(unsigned char *)(v644 + 18) = *(unsigned char *)(v645 + 18);
        *(unsigned char *)(v644 + 19) = *(unsigned char *)(v645 + 19);
        unint64_t v646 = (v644 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v647 = (v645 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v646 = *(void *)v647;
        *(unsigned char *)(v646 + 8) = *(unsigned char *)(v647 + 8);
        *(unsigned char *)(v646 + 9) = *(unsigned char *)(v647 + 9);
        *(unsigned char *)(v646 + 10) = *(unsigned char *)(v647 + 10);
        *(unsigned char *)(v646 + 11) = *(unsigned char *)(v647 + 11);
        *(unsigned char *)(v646 + 12) = *(unsigned char *)(v647 + 12);
        v648 = (void *)((v645 + 47) & 0xFFFFFFFFFFFFFFF8);
        v649 = (void *)((v644 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v649 = *v648;
        unint64_t v650 = ((unint64_t)v649 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v651 = ((unint64_t)v648 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v650 = *(void *)v651;
        *(unsigned char *)(v650 + 8) = *(unsigned char *)(v651 + 8);
        *(unsigned char *)(v650 + 9) = *(unsigned char *)(v651 + 9);
        v652 = (void *)((v849 + v650) & v929);
        v653 = (const void *)((v849 + v651) & v929);
        v654 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v851 + 48);
        swift_bridgeObjectRetain();
        if (v654(v653, 1, v861))
        {
          memcpy(v652, v653, v876);
        }
        else
        {
          v640((uint64_t)v652, (uint64_t)v653, v861);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v851 + 56))(v652, 0, 1, v861);
        }
        unint64_t v135 = v970;
        v655 = (void *)(((unint64_t)v652 + v848) & 0xFFFFFFFFFFFFFFF8);
        v656 = (void *)(((unint64_t)v653 + v848) & 0xFFFFFFFFFFFFFFF8);
        void *v655 = *v656;
        unint64_t v657 = ((unint64_t)v655 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v658 = ((unint64_t)v656 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v659 = *(void *)v658;
        *(unsigned char *)(v657 + 8) = *(unsigned char *)(v658 + 8);
        *(void *)unint64_t v657 = v659;
        v660 = (void *)(((unint64_t)v655 + 31) & 0xFFFFFFFFFFFFFFF8);
        v661 = (void *)(((unint64_t)v656 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v660 = *v661;
        unint64_t v662 = ((unint64_t)v660 + 15) & 0xFFFFFFFFFFFFFFF8;
        v663 = (uint64_t *)(((unint64_t)v661 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v664 = v663[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v664 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v662 = *(_OWORD *)v663;
        }
        else
        {
          uint64_t v665 = *v663;
          sub_24D3F9C18(*v663, v664);
          *(void *)unint64_t v662 = v665;
          *(void *)(v662 + 8) = v664;
        }
        uint64_t v134 = v978;
        unint64_t v666 = (v662 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v667 = ((unint64_t)v663 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v668 = *(void *)v667;
        *(unsigned char *)(v666 + 8) = *(unsigned char *)(v667 + 8);
        *(void *)unint64_t v666 = v668;
        *(unsigned char *)(v666 + 9) = *(unsigned char *)(v667 + 9);
        unint64_t v669 = (v666 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v670 = (v667 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v671 = *(_DWORD *)v670;
        *(unsigned char *)(v669 + 4) = *(unsigned char *)(v670 + 4);
        *(_DWORD *)unint64_t v669 = v671;
        v672 = (void *)((v666 + 25) & 0xFFFFFFFFFFFFFFF8);
        v673 = (void *)((v667 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v672 = *v673;
        v672[1] = v673[1];
        unint64_t v674 = v937 + v954;
        v675 = (long long *)(v937 + v946);
        unint64_t v676 = *(void *)(v937 + v946 + 16);
        if (v676 >= 0xFFFFFFFF) {
          LODWORD(v676) = -1;
        }
        int v677 = v676 - 1;
        swift_bridgeObjectRetain();
        if (v677 < 0)
        {
          *(void *)unint64_t v674 = *(void *)v675;
          *(unsigned char *)(v674 + 8) = *((unsigned char *)v675 + 8);
          *(unsigned char *)(v674 + 9) = *((unsigned char *)v675 + 9);
          v690 = (void *)*((void *)v675 + 2);
          id v691 = v690;
          *(void *)(v674 + 16) = v690;
          v692 = (void *)*((void *)v675 + 3);
          id v693 = v692;
          *(void *)(v674 + 24) = v692;
          *(unsigned char *)(v674 + 32) = *((unsigned char *)v675 + 32);
          *(unsigned char *)(v674 + 33) = *((unsigned char *)v675 + 33);
          *(unsigned char *)(v674 + 34) = *((unsigned char *)v675 + 34);
          *(void *)(v674 + 40) = *((void *)v675 + 5);
          *(void *)(v674 + 48) = *((void *)v675 + 6);
          *(void *)(v674 + 56) = *((void *)v675 + 7);
          *(void *)(v674 + 64) = *((void *)v675 + 8);
          *(unsigned char *)(v674 + 72) = *((unsigned char *)v675 + 72);
          *(void *)(v674 + 80) = *((void *)v675 + 10);
          *(void *)(v674 + 88) = *((void *)v675 + 11);
          v955 = (void *)*((void *)v675 + 12);
          *(void *)(v674 + 96) = v955;
          *(unsigned char *)(v674 + 104) = *((unsigned char *)v675 + 104);
          *(unsigned char *)(v674 + 105) = *((unsigned char *)v675 + 105);
          *(void *)(v674 + 112) = *((void *)v675 + 14);
          *(void *)(v674 + 120) = *((void *)v675 + 15);
          *(void *)(v674 + 128) = *((void *)v675 + 16);
          *(void *)(v674 + 136) = *((void *)v675 + 17);
          *(void *)(v674 + 144) = *((void *)v675 + 18);
          *(void *)(v674 + 152) = *((void *)v675 + 19);
          *(void *)(v674 + 160) = *((void *)v675 + 20);
          *(void *)(v674 + 168) = *((void *)v675 + 21);
          *(unsigned char *)(v674 + 176) = *((unsigned char *)v675 + 176);
          *(void *)(v674 + 184) = *((void *)v675 + 23);
          uint64_t v694 = *((void *)v675 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v695 = v955;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v694)
          {
            *(void *)(v674 + 192) = v694;
            *(void *)(v674 + 200) = *((void *)v675 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v674 + 192) = v675[12];
          }
          uint64_t v65 = a1;
          size_t v619 = v874;
          uint64_t v134 = v978;
          unint64_t v135 = v970;
          *(void *)(v674 + 208) = *((void *)v675 + 26);
          *(void *)(v674 + 216) = *((void *)v675 + 27);
          *(void *)(v674 + 224) = *((void *)v675 + 28);
          *(void *)(v674 + 232) = *((void *)v675 + 29);
          *(void *)(v674 + 240) = *((void *)v675 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v678 = *v675;
          long long v679 = v675[1];
          long long v680 = v675[3];
          *(_OWORD *)(v674 + 32) = v675[2];
          *(_OWORD *)(v674 + 48) = v680;
          *(_OWORD *)unint64_t v674 = v678;
          *(_OWORD *)(v674 + 16) = v679;
          long long v681 = v675[4];
          long long v682 = v675[5];
          long long v683 = v675[7];
          *(_OWORD *)(v674 + 96) = v675[6];
          *(_OWORD *)(v674 + 112) = v683;
          *(_OWORD *)(v674 + 64) = v681;
          *(_OWORD *)(v674 + 80) = v682;
          long long v684 = v675[8];
          long long v685 = v675[9];
          long long v686 = v675[11];
          *(_OWORD *)(v674 + 160) = v675[10];
          *(_OWORD *)(v674 + 176) = v686;
          *(_OWORD *)(v674 + 128) = v684;
          *(_OWORD *)(v674 + 144) = v685;
          long long v687 = v675[12];
          long long v688 = v675[13];
          long long v689 = v675[14];
          *(void *)(v674 + 240) = *((void *)v675 + 30);
          *(_OWORD *)(v674 + 208) = v688;
          *(_OWORD *)(v674 + 224) = v689;
          *(_OWORD *)(v674 + 192) = v687;
          size_t v619 = v874;
        }
        v811 = (_OWORD *)((v674 + 255) & 0xFFFFFFFFFFFFFFF8);
        v812 = (long long *)(((unint64_t)v675 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v813 = *v812;
        *(_OWORD *)((char *)v811 + 9) = *(long long *)((char *)v812 + 9);
        _OWORD *v811 = v813;
        unint64_t v814 = (v674 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v815 = ((unint64_t)v675 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v816 = *(_OWORD *)v815;
        *(unsigned char *)(v814 + 16) = *(unsigned char *)(v815 + 16);
        *(_OWORD *)unint64_t v814 = v816;
        v817 = (void *)((v674 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v818 = ((unint64_t)v675 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v819 = *(void *)v818;
        v818 += 15;
        void *v817 = v819;
        v820 = (void *)(((unint64_t)v817 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v821 = *(void *)(v818 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v822 = *(void *)((v818 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v821, v822);
        void *v820 = v821;
        v820[1] = v822;
        if (!v873) {
          goto LABEL_338;
        }
LABEL_408:
        unint64_t v823 = ((((v860
                 + ((((((((((v877 + v619 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v824 = (void *)(((unint64_t)v134 + v823) & 0xFFFFFFFFFFFFFFF8);
        v825 = (void *)(((unint64_t)v135 + v823) & 0xFFFFFFFFFFFFFFF8);
        void *v824 = *v825;
        v824[1] = v825[1];
        *(void *)(((unint64_t)v824 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v825 + 23) & 0xFFFFFFFFFFFFFFF8);
        *((unsigned char *)v65 + v960) = 3;
        swift_bridgeObjectRetain();
LABEL_409:
        unint64_t v169 = v972;
LABEL_410:
        *((unsigned char *)v65 + v169) = 0;
        return v65;
      case 4u:
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v879 + 16))(v78, a2, v77);
        char v137 = 4;
        goto LABEL_139;
      case 5u:
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v879 + 16))(v78, a2, v77);
        char v137 = 5;
        goto LABEL_139;
      case 6u:
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v879 + 16))(v78, a2, v77);
        long long v138 = (void *)(((unint64_t)v65 + v838) & v115);
        long long v139 = (const void *)((unint64_t)&a2[v838] & v115);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v31 + 48))(v139, 1, v932))
        {
          memcpy(v138, v139, v834);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v31 + 16))(v138, v139, v932);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v31 + 56))(v138, 0, 1, v932);
        }
        unint64_t v169 = v972;
        *((unsigned char *)v65 + v36) = 6;
        goto LABEL_410;
      case 7u:
        uint64_t v65 = v78;
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v879 + 16))(v78, a2, v77);
        char v137 = 7;
LABEL_139:
        *((unsigned char *)v65 + v36) = v137;
        goto LABEL_409;
      default:
        unint64_t v934 = ~(unint64_t)v907;
        uint64_t v116 = v66;
        uint64_t v925 = ~v41;
        unint64_t v898 = ~(unint64_t)v896;
        unint64_t v958 = v36;
        unint64_t v117 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v879 + 16);
        uint64_t v65 = v78;
        v117(v78, a2, v77);
        long long v118 = (void *)(((unint64_t)v65 + v858) & v114);
        long long v119 = (void *)((unint64_t)&a2[v858] & v114);
        if (v941 == v859)
        {
          int v120 = (*(uint64_t (**)(void *))(v879 + 48))(v119);
LABEL_299:
          uint64_t v149 = v116;
LABEL_300:
          if (v120)
          {
LABEL_301:
            memcpy(v118, v119, v846);
            goto LABEL_302;
          }
          unint64_t v148 = ((unint64_t)v119 + v868) & v934;
          unint64_t v150 = (v869 + v148) & v149;
LABEL_304:
          v969 = v119;
          v464 = (unsigned __int8 *)v119;
          uint64_t v465 = v149;
          v117(v118, v464, v77);
          v976 = v118;
          unint64_t v466 = ((unint64_t)v118 + v868) & v934;
          v117((void *)v466, (unsigned __int8 *)v148, v77);
          unint64_t v467 = (v869 + v466) & v465;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v865 + 16))(v467, v150, v864);
          v468 = (void *)((v872 + v467) & 0xFFFFFFFFFFFFFFF8);
          v469 = (void *)((v872 + v150) & 0xFFFFFFFFFFFFFFF8);
          void *v468 = *v469;
          unint64_t v470 = ((unint64_t)v468 + v852) & v898;
          unint64_t v471 = ((unint64_t)v469 + v852) & v898;
          v472 = *(void (**)(unint64_t, unint64_t, uint64_t))(v854 + 16);
          swift_bridgeObjectRetain();
          v472(v470, v471, v853);
          v473 = (void *)((v847 + v471) & 0xFFFFFFFFFFFFFFF8);
          v474 = (void *)((v847 + v470) & 0xFFFFFFFFFFFFFFF8);
          void *v474 = *v473;
          v475 = (void *)(((unint64_t)v474 + 15) & 0xFFFFFFFFFFFFFFF8);
          v476 = (void *)(((unint64_t)v473 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v475 = *v476;
          v475[1] = v476[1];
          v477 = (void *)(v947 + v467);
          void *v477 = *(void *)(v947 + v150);
          v477[1] = *(void *)(v947 + v150 + 8);
          size_t v478 = (v938 + v947 + v467) & v925;
          size_t v479 = (v938 + v947 + v150) & v925;
          *(unsigned char *)size_t v478 = *(unsigned char *)v479;
          uint64_t v480 = v478 | 4;
          int v481 = *(_DWORD *)(v479 | 4);
          *(unsigned char *)(v480 + 4) = *(unsigned char *)((v479 | 4) + 4);
          *(_DWORD *)uint64_t v480 = v481;
          *(_WORD *)(v478 + 10) = *(_WORD *)(v479 + 0xA);
          size_t v945 = v479;
          size_t v950 = v478;
          uint64_t v482 = (v856 + v478) & v929;
          uint64_t v483 = (v856 + v479) & v929;
          v484 = *(void (**)(uint64_t, uint64_t, uint64_t))(v851 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v484(v482, v483, v861);
          uint64_t v485 = (v850 + v482) & v929;
          uint64_t v486 = (v850 + v483) & v929;
          v484(v485, v486, v861);
          v487 = (unsigned char *)(v485 + v874);
          unsigned char *v487 = *(unsigned char *)(v486 + v874);
          v487[1] = *(unsigned char *)(v486 + v874 + 1);
          v487[2] = *(unsigned char *)(v486 + v874 + 2);
          v487[3] = *(unsigned char *)(v486 + v874 + 3);
          v487[4] = *(unsigned char *)(v486 + v874 + 4);
          unint64_t v488 = (v485 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v489 = (v486 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v488 = *(void *)v489;
          *(void *)(v488 + 8) = *(void *)(v489 + 8);
          *(unsigned char *)(v488 + 16) = *(unsigned char *)(v489 + 16);
          *(unsigned char *)(v488 + 17) = *(unsigned char *)(v489 + 17);
          *(unsigned char *)(v488 + 18) = *(unsigned char *)(v489 + 18);
          *(unsigned char *)(v488 + 19) = *(unsigned char *)(v489 + 19);
          unint64_t v490 = (v488 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v491 = (v489 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v490 = *(void *)v491;
          *(unsigned char *)(v490 + 8) = *(unsigned char *)(v491 + 8);
          *(unsigned char *)(v490 + 9) = *(unsigned char *)(v491 + 9);
          *(unsigned char *)(v490 + 10) = *(unsigned char *)(v491 + 10);
          *(unsigned char *)(v490 + 11) = *(unsigned char *)(v491 + 11);
          *(unsigned char *)(v490 + 12) = *(unsigned char *)(v491 + 12);
          v492 = (void *)((v489 + 47) & 0xFFFFFFFFFFFFFFF8);
          v493 = (void *)((v488 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v493 = *v492;
          unint64_t v494 = ((unint64_t)v493 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v495 = ((unint64_t)v492 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v494 = *(void *)v495;
          *(unsigned char *)(v494 + 8) = *(unsigned char *)(v495 + 8);
          *(unsigned char *)(v494 + 9) = *(unsigned char *)(v495 + 9);
          v496 = (void *)((v849 + v494) & v929);
          v497 = (const void *)((v849 + v495) & v929);
          v498 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v851 + 48);
          swift_bridgeObjectRetain();
          if (v498(v497, 1, v861))
          {
            memcpy(v496, v497, v876);
          }
          else
          {
            v484((uint64_t)v496, (uint64_t)v497, v861);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v851 + 56))(v496, 0, 1, v861);
          }
          long long v119 = v969;
          v499 = (void *)(((unint64_t)v496 + v848) & 0xFFFFFFFFFFFFFFF8);
          v500 = (void *)(((unint64_t)v497 + v848) & 0xFFFFFFFFFFFFFFF8);
          void *v499 = *v500;
          unint64_t v501 = ((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v502 = ((unint64_t)v500 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v503 = *(void *)v502;
          *(unsigned char *)(v501 + 8) = *(unsigned char *)(v502 + 8);
          *(void *)unint64_t v501 = v503;
          v504 = (void *)(((unint64_t)v499 + 31) & 0xFFFFFFFFFFFFFFF8);
          v505 = (void *)(((unint64_t)v500 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v504 = *v505;
          unint64_t v506 = ((unint64_t)v504 + 15) & 0xFFFFFFFFFFFFFFF8;
          v507 = (uint64_t *)(((unint64_t)v505 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v508 = v507[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v508 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v506 = *(_OWORD *)v507;
          }
          else
          {
            uint64_t v509 = *v507;
            sub_24D3F9C18(*v507, v508);
            *(void *)unint64_t v506 = v509;
            *(void *)(v506 + 8) = v508;
          }
          long long v118 = v976;
          unint64_t v510 = (v506 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v511 = ((unint64_t)v507 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v512 = *(void *)v511;
          *(unsigned char *)(v510 + 8) = *(unsigned char *)(v511 + 8);
          *(void *)unint64_t v510 = v512;
          *(unsigned char *)(v510 + 9) = *(unsigned char *)(v511 + 9);
          unint64_t v513 = (v510 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v514 = (v511 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v515 = *(_DWORD *)v514;
          *(unsigned char *)(v513 + 4) = *(unsigned char *)(v514 + 4);
          *(_DWORD *)unint64_t v513 = v515;
          v516 = (void *)((v510 + 25) & 0xFFFFFFFFFFFFFFF8);
          v517 = (void *)((v511 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v516 = *v517;
          v516[1] = v517[1];
          unint64_t v518 = v937 + v950;
          v519 = (long long *)(v937 + v945);
          unint64_t v520 = *(void *)(v937 + v945 + 16);
          if (v520 >= 0xFFFFFFFF) {
            LODWORD(v520) = -1;
          }
          int v521 = v520 - 1;
          swift_bridgeObjectRetain();
          if (v521 < 0)
          {
            *(void *)unint64_t v518 = *(void *)v519;
            *(unsigned char *)(v518 + 8) = *((unsigned char *)v519 + 8);
            *(unsigned char *)(v518 + 9) = *((unsigned char *)v519 + 9);
            v534 = (void *)*((void *)v519 + 2);
            id v535 = v534;
            *(void *)(v518 + 16) = v534;
            v536 = (void *)*((void *)v519 + 3);
            id v537 = v536;
            *(void *)(v518 + 24) = v536;
            *(unsigned char *)(v518 + 32) = *((unsigned char *)v519 + 32);
            *(unsigned char *)(v518 + 33) = *((unsigned char *)v519 + 33);
            *(unsigned char *)(v518 + 34) = *((unsigned char *)v519 + 34);
            *(void *)(v518 + 40) = *((void *)v519 + 5);
            *(void *)(v518 + 48) = *((void *)v519 + 6);
            *(void *)(v518 + 56) = *((void *)v519 + 7);
            *(void *)(v518 + 64) = *((void *)v519 + 8);
            *(unsigned char *)(v518 + 72) = *((unsigned char *)v519 + 72);
            *(void *)(v518 + 80) = *((void *)v519 + 10);
            *(void *)(v518 + 88) = *((void *)v519 + 11);
            v951 = (void *)*((void *)v519 + 12);
            *(void *)(v518 + 96) = v951;
            *(unsigned char *)(v518 + 104) = *((unsigned char *)v519 + 104);
            *(unsigned char *)(v518 + 105) = *((unsigned char *)v519 + 105);
            *(void *)(v518 + 112) = *((void *)v519 + 14);
            *(void *)(v518 + 120) = *((void *)v519 + 15);
            *(void *)(v518 + 128) = *((void *)v519 + 16);
            *(void *)(v518 + 136) = *((void *)v519 + 17);
            *(void *)(v518 + 144) = *((void *)v519 + 18);
            *(void *)(v518 + 152) = *((void *)v519 + 19);
            *(void *)(v518 + 160) = *((void *)v519 + 20);
            *(void *)(v518 + 168) = *((void *)v519 + 21);
            *(unsigned char *)(v518 + 176) = *((unsigned char *)v519 + 176);
            *(void *)(v518 + 184) = *((void *)v519 + 23);
            uint64_t v538 = *((void *)v519 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v539 = v951;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v538)
            {
              *(void *)(v518 + 192) = v538;
              *(void *)(v518 + 200) = *((void *)v519 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v518 + 192) = v519[12];
            }
            uint64_t v65 = a1;
            size_t v463 = v874;
            long long v118 = v976;
            long long v119 = v969;
            *(void *)(v518 + 208) = *((void *)v519 + 26);
            *(void *)(v518 + 216) = *((void *)v519 + 27);
            *(void *)(v518 + 224) = *((void *)v519 + 28);
            *(void *)(v518 + 232) = *((void *)v519 + 29);
            *(void *)(v518 + 240) = *((void *)v519 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v522 = *v519;
            long long v523 = v519[1];
            long long v524 = v519[3];
            *(_OWORD *)(v518 + 32) = v519[2];
            *(_OWORD *)(v518 + 48) = v524;
            *(_OWORD *)unint64_t v518 = v522;
            *(_OWORD *)(v518 + 16) = v523;
            long long v525 = v519[4];
            long long v526 = v519[5];
            long long v527 = v519[7];
            *(_OWORD *)(v518 + 96) = v519[6];
            *(_OWORD *)(v518 + 112) = v527;
            *(_OWORD *)(v518 + 64) = v525;
            *(_OWORD *)(v518 + 80) = v526;
            long long v528 = v519[8];
            long long v529 = v519[9];
            long long v530 = v519[11];
            *(_OWORD *)(v518 + 160) = v519[10];
            *(_OWORD *)(v518 + 176) = v530;
            *(_OWORD *)(v518 + 128) = v528;
            *(_OWORD *)(v518 + 144) = v529;
            long long v531 = v519[12];
            long long v532 = v519[13];
            long long v533 = v519[14];
            *(void *)(v518 + 240) = *((void *)v519 + 30);
            *(_OWORD *)(v518 + 208) = v532;
            *(_OWORD *)(v518 + 224) = v533;
            *(_OWORD *)(v518 + 192) = v531;
            size_t v463 = v874;
          }
          v761 = (_OWORD *)((v518 + 255) & 0xFFFFFFFFFFFFFFF8);
          v762 = (long long *)(((unint64_t)v519 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v763 = *v762;
          *(_OWORD *)((char *)v761 + 9) = *(long long *)((char *)v762 + 9);
          _OWORD *v761 = v763;
          unint64_t v764 = (v518 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v765 = ((unint64_t)v519 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v766 = *(_OWORD *)v765;
          *(unsigned char *)(v764 + 16) = *(unsigned char *)(v765 + 16);
          *(_OWORD *)unint64_t v764 = v766;
          v767 = (void *)((v518 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v768 = ((unint64_t)v519 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v769 = *(void *)v768;
          v768 += 15;
          void *v767 = v769;
          v770 = (void *)(((unint64_t)v767 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v771 = *(void *)(v768 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v772 = *(void *)((v768 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v771, v772);
          void *v770 = v771;
          v770[1] = v772;
          if (v873)
          {
LABEL_384:
            unint64_t v773 = ((((v860
                     + ((((((((((v877 + v463 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            v774 = (void *)(((unint64_t)v118 + v773) & 0xFFFFFFFFFFFFFFF8);
            v775 = (void *)(((unint64_t)v119 + v773) & 0xFFFFFFFFFFFFFFF8);
            void *v774 = *v775;
            v776 = *(void **)(((unint64_t)v775 + 15) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(((unint64_t)v774 + 15) & 0xFFFFFFFFFFFFFFF8) = v776;
            *((unsigned char *)v65 + v958) = 0;
            id v777 = v776;
            goto LABEL_409;
          }
LABEL_302:
          size_t v463 = v876;
          goto LABEL_384;
        }
        unint64_t v148 = ((unint64_t)v119 + v868) & v934;
        uint64_t v149 = v116;
        unint64_t v150 = (v869 + v148) & v116;
        if (v867 == v859)
        {
          if (v875 == v867)
          {
            int v120 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v865 + 48))((v869 + v148) & v116, v875, v864);
            goto LABEL_299;
          }
          long long v214 = (unint64_t *)((v872 + v150) & 0xFFFFFFFFFFFFFFF8);
          if (v844 > 0x7FFFFFFE)
          {
            int v120 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v854 + 48))(((unint64_t)v214 + v852) & v898, v835, v853);
            goto LABEL_299;
          }
          unint64_t v215 = *v214;
        }
        else
        {
          size_t v176 = v947 + v150;
          if ((v837 & 0x80000000) == 0)
          {
            unint64_t v177 = *(void *)(v176 + 8);
            if (v177 >= 0xFFFFFFFF) {
              LODWORD(v177) = -1;
            }
            int v120 = v177 + 1;
            goto LABEL_300;
          }
          uint64_t v222 = (v856 + ((v938 + v176) & v925)) & v929;
          if (v873 > 0x7FFFFFFD)
          {
            int v120 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v851 + 48))(v222, v873, v861);
            goto LABEL_299;
          }
          unint64_t v215 = *(void *)(((v832 + ((v850 + v222) & v929)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v215 >= 0xFFFFFFFF) {
          LODWORD(v215) = -1;
        }
        if ((v215 + 1) >= 2) {
          goto LABEL_301;
        }
        goto LABEL_304;
    }
  }
  unint64_t v68 = v56;
  unsigned int v69 = a2[v56];
  unsigned int v70 = v69 - 8;
  if (v69 < 8)
  {
    uint64_t v72 = v882;
  }
  else
  {
    if (v56 <= 3) {
      uint64_t v71 = v56;
    }
    else {
      uint64_t v71 = 4;
    }
    uint64_t v72 = v882;
    switch(v71)
    {
      case 1:
        int v73 = *a2;
        if (v56 < 4) {
          goto LABEL_99;
        }
        goto LABEL_103;
      case 2:
        int v73 = *(unsigned __int16 *)a2;
        if (v56 < 4) {
          goto LABEL_99;
        }
        goto LABEL_103;
      case 3:
        int v73 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v56 < 4) {
          goto LABEL_99;
        }
        goto LABEL_103;
      case 4:
        int v73 = *(_DWORD *)a2;
        if (v56 < 4) {
LABEL_99:
        }
          unsigned int v69 = (v73 | (v70 << (8 * v56))) + 8;
        else {
LABEL_103:
        }
          unsigned int v69 = v73 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v966 = v48;
  unint64_t v933 = ~(unint64_t)v907;
  uint64_t v924 = ~v41;
  uint64_t v81 = ~v40;
  uint64_t v82 = ~v54;
  switch(v69)
  {
    case 1u:
      uint64_t v90 = ~v26;
      uint64_t v884 = v66;
      uint64_t v893 = v67;
      unint64_t v897 = ~(unint64_t)v896;
      uint64_t v903 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
      uint64_t v909 = *(void *)(v866 - 8);
      unint64_t v91 = v28;
      unint64_t v943 = v42;
      v883 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v880 + 16);
      v883(a1, a2, v72);
      __dsta = (void *)(((unint64_t)a1 + v43) & v81);
      unint64_t v92 = (void *)((unint64_t)&a2[v43] & v81);
      v974 = v92;
      if (v914 == v857)
      {
        int v93 = (*(uint64_t (**)(void))(v880 + 48))();
        unint64_t v94 = v91;
        uint64_t v95 = v90;
        uint64_t v96 = v921;
        unint64_t v97 = v916;
      }
      else
      {
        unint64_t v97 = v916;
        unint64_t v142 = ((unint64_t)v92 + v916) & v931;
        uint64_t v96 = v921;
        uint64_t v95 = v90;
        unint64_t v143 = (v921 + v142) & v90;
        if (v919 == v857)
        {
          if (v855 == v919)
          {
            int v93 = (*(uint64_t (**)(unint64_t))(v863 + 48))((v921 + v142) & v90);
          }
          else
          {
            unint64_t v210 = (unint64_t *)((v871 + v143) & 0xFFFFFFFFFFFFFFF8);
            if (v843 <= 0x7FFFFFFE)
            {
              unint64_t v211 = *v210;
              if (v211 >= 0xFFFFFFFF) {
                LODWORD(v211) = -1;
              }
              unint64_t v94 = v91;
              if ((v211 + 1) >= 2) {
                goto LABEL_265;
              }
              goto LABEL_268;
            }
            int v93 = (*(uint64_t (**)(unint64_t))(v909 + 48))(((unint64_t)v210 + v870) & v893);
          }
        }
        else
        {
          unint64_t v94 = v91;
          unint64_t v172 = v91 + v143;
          if ((v836 & 0x80000000) == 0)
          {
            unint64_t v173 = *(void *)(v172 + 8);
            if (v173 >= 0xFFFFFFFF) {
              LODWORD(v173) = -1;
            }
            int v93 = v173 + 1;
            goto LABEL_264;
          }
          uint64_t v221 = (v856 + ((v938 + v172) & v924)) & v929;
          if (v873 <= 0x7FFFFFFD)
          {
            unint64_t v827 = *(void *)(((v832 + ((v850 + v221) & v929)) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v827 >= 0xFFFFFFFF) {
              LODWORD(v827) = -1;
            }
            if ((v827 + 1) >= 2) {
              goto LABEL_265;
            }
            goto LABEL_268;
          }
          int v93 = (*(uint64_t (**)(uint64_t))(v851 + 48))(v221);
        }
        uint64_t v95 = v90;
        unint64_t v94 = v91;
      }
LABEL_264:
      if (v93)
      {
LABEL_265:
        uint64_t v302 = __dsta;
        uint64_t v303 = v974;
        memcpy(__dsta, v974, v845);
        uint64_t v304 = AssociatedTypeWitness;
        uint64_t v305 = v879;
        goto LABEL_266;
      }
      unint64_t v142 = ((unint64_t)v974 + v97) & v931;
      unint64_t v143 = (v96 + v142) & v95;
LABEL_268:
      unint64_t v890 = v68;
      unint64_t v307 = v94;
      uint64_t v308 = v95;
      v883(__dsta, (unsigned __int8 *)v974, v72);
      uint64_t v309 = v72;
      unint64_t v310 = ((unint64_t)__dsta + v97) & v931;
      v883((void *)v310, (unsigned __int8 *)v142, v309);
      unint64_t v311 = (v96 + v310) & v308;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v863 + 16))(v311, v143, v862);
      long long v312 = (void *)((v871 + v311) & 0xFFFFFFFFFFFFFFF8);
      long long v313 = (void *)((v871 + v143) & 0xFFFFFFFFFFFFFFF8);
      void *v312 = *v313;
      unint64_t v314 = ((unint64_t)v312 + v870) & v893;
      unint64_t v315 = ((unint64_t)v313 + v870) & v893;
      long long v316 = *(void (**)(unint64_t, unint64_t, uint64_t))(v909 + 16);
      swift_bridgeObjectRetain();
      v316(v314, v315, v866);
      long long v317 = (void *)((v903 + v315) & 0xFFFFFFFFFFFFFFF8);
      long long v318 = (void *)((v903 + v314) & 0xFFFFFFFFFFFFFFF8);
      *long long v318 = *v317;
      long long v319 = (void *)(((unint64_t)v318 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v320 = (void *)(((unint64_t)v317 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v319 = *v320;
      v319[1] = v320[1];
      long long v321 = (void *)(v307 + v311);
      *long long v321 = *(void *)(v307 + v143);
      v321[1] = *(void *)(v307 + v143 + 8);
      uint64_t v322 = (v938 + v307 + v311) & v924;
      uint64_t v323 = (v938 + v307 + v143) & v924;
      *(unsigned char *)uint64_t v322 = *(unsigned char *)v323;
      uint64_t v324 = v322 | 4;
      int v325 = *(_DWORD *)(v323 | 4);
      *(unsigned char *)(v324 + 4) = *(unsigned char *)((v323 | 4) + 4);
      *(_DWORD *)uint64_t v324 = v325;
      *(_WORD *)(v322 + 10) = *(_WORD *)(v323 + 0xA);
      uint64_t v326 = (v856 + v322) & v929;
      uint64_t v939 = v323;
      uint64_t v327 = (v856 + v323) & v929;
      id v328 = *(void (**)(uint64_t, uint64_t, uint64_t))(v851 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v328(v326, v327, v861);
      uint64_t v329 = (v850 + v326) & v929;
      uint64_t v330 = (v850 + v327) & v929;
      v328(v329, v330, v861);
      long long v331 = (unsigned char *)(v329 + v874);
      *long long v331 = *(unsigned char *)(v330 + v874);
      v331[1] = *(unsigned char *)(v330 + v874 + 1);
      v331[2] = *(unsigned char *)(v330 + v874 + 2);
      v331[3] = *(unsigned char *)(v330 + v874 + 3);
      v331[4] = *(unsigned char *)(v330 + v874 + 4);
      unint64_t v332 = (v329 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v333 = (v330 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v332 = *(void *)v333;
      *(void *)(v332 + 8) = *(void *)(v333 + 8);
      *(unsigned char *)(v332 + 16) = *(unsigned char *)(v333 + 16);
      *(unsigned char *)(v332 + 17) = *(unsigned char *)(v333 + 17);
      *(unsigned char *)(v332 + 18) = *(unsigned char *)(v333 + 18);
      *(unsigned char *)(v332 + 19) = *(unsigned char *)(v333 + 19);
      unint64_t v334 = (v332 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v335 = (v333 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v334 = *(void *)v335;
      *(unsigned char *)(v334 + 8) = *(unsigned char *)(v335 + 8);
      *(unsigned char *)(v334 + 9) = *(unsigned char *)(v335 + 9);
      *(unsigned char *)(v334 + 10) = *(unsigned char *)(v335 + 10);
      *(unsigned char *)(v334 + 11) = *(unsigned char *)(v335 + 11);
      *(unsigned char *)(v334 + 12) = *(unsigned char *)(v335 + 12);
      unint64_t v336 = (void *)((v333 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v337 = (void *)((v332 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v337 = *v336;
      unint64_t v338 = ((unint64_t)v337 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v339 = ((unint64_t)v336 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v338 = *(void *)v339;
      *(unsigned char *)(v338 + 8) = *(unsigned char *)(v339 + 8);
      *(unsigned char *)(v338 + 9) = *(unsigned char *)(v339 + 9);
      unint64_t v340 = (void *)((v849 + v338) & v929);
      uint64_t v341 = (const void *)((v849 + v339) & v929);
      uint64_t v342 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v851 + 48);
      swift_bridgeObjectRetain();
      if (v342(v341, 1, v861))
      {
        memcpy(v340, v341, v876);
      }
      else
      {
        v328((uint64_t)v340, (uint64_t)v341, v861);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v851 + 56))(v340, 0, 1, v861);
      }
      uint64_t v343 = (void *)(((unint64_t)v340 + v848) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v344 = (void *)(((unint64_t)v341 + v848) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v343 = *v344;
      unint64_t v345 = ((unint64_t)v343 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v346 = ((unint64_t)v344 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v347 = *(void *)v346;
      *(unsigned char *)(v345 + 8) = *(unsigned char *)(v346 + 8);
      *(void *)unint64_t v345 = v347;
      unint64_t v348 = (void *)(((unint64_t)v343 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v349 = (void *)(((unint64_t)v344 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v348 = *v349;
      unint64_t v350 = ((unint64_t)v348 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v351 = (uint64_t *)(((unint64_t)v349 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v352 = v351[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v352 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v350 = *(_OWORD *)v351;
      }
      else
      {
        uint64_t v353 = *v351;
        sub_24D3F9C18(*v351, v352);
        *(void *)unint64_t v350 = v353;
        *(void *)(v350 + 8) = v352;
      }
      uint64_t v304 = AssociatedTypeWitness;
      unint64_t v354 = (v350 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v355 = ((unint64_t)v351 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v356 = *(void *)v355;
      *(unsigned char *)(v354 + 8) = *(unsigned char *)(v355 + 8);
      *(void *)unint64_t v354 = v356;
      *(unsigned char *)(v354 + 9) = *(unsigned char *)(v355 + 9);
      unint64_t v357 = (v354 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v358 = (v355 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v359 = *(_DWORD *)v358;
      *(unsigned char *)(v357 + 4) = *(unsigned char *)(v358 + 4);
      *(_DWORD *)unint64_t v357 = v359;
      uint64_t v360 = (void *)((v354 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v361 = (void *)((v355 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v360 = *v361;
      v360[1] = v361[1];
      unint64_t v362 = v322 + v937;
      unint64_t v363 = (long long *)(v939 + v937);
      unint64_t v364 = *(void *)(v939 + v937 + 16);
      if (v364 >= 0xFFFFFFFF) {
        LODWORD(v364) = -1;
      }
      int v365 = v364 - 1;
      swift_bridgeObjectRetain();
      if (v365 < 0)
      {
        *(void *)unint64_t v362 = *(void *)v363;
        *(unsigned char *)(v362 + 8) = *((unsigned char *)v363 + 8);
        *(unsigned char *)(v362 + 9) = *((unsigned char *)v363 + 9);
        uint64_t v378 = (void *)*((void *)v363 + 2);
        id v379 = v378;
        *(void *)(v362 + 16) = v378;
        uint64_t v380 = (void *)*((void *)v363 + 3);
        id v381 = v380;
        *(void *)(v362 + 24) = v380;
        *(unsigned char *)(v362 + 32) = *((unsigned char *)v363 + 32);
        *(unsigned char *)(v362 + 33) = *((unsigned char *)v363 + 33);
        *(unsigned char *)(v362 + 34) = *((unsigned char *)v363 + 34);
        *(void *)(v362 + 40) = *((void *)v363 + 5);
        *(void *)(v362 + 48) = *((void *)v363 + 6);
        *(void *)(v362 + 56) = *((void *)v363 + 7);
        *(void *)(v362 + 64) = *((void *)v363 + 8);
        *(unsigned char *)(v362 + 72) = *((unsigned char *)v363 + 72);
        *(void *)(v362 + 80) = *((void *)v363 + 10);
        *(void *)(v362 + 88) = *((void *)v363 + 11);
        v940 = (void *)*((void *)v363 + 12);
        *(void *)(v362 + 96) = v940;
        *(unsigned char *)(v362 + 104) = *((unsigned char *)v363 + 104);
        *(unsigned char *)(v362 + 105) = *((unsigned char *)v363 + 105);
        *(void *)(v362 + 112) = *((void *)v363 + 14);
        *(void *)(v362 + 120) = *((void *)v363 + 15);
        *(void *)(v362 + 128) = *((void *)v363 + 16);
        *(void *)(v362 + 136) = *((void *)v363 + 17);
        *(void *)(v362 + 144) = *((void *)v363 + 18);
        *(void *)(v362 + 152) = *((void *)v363 + 19);
        *(void *)(v362 + 160) = *((void *)v363 + 20);
        *(void *)(v362 + 168) = *((void *)v363 + 21);
        *(unsigned char *)(v362 + 176) = *((unsigned char *)v363 + 176);
        *(void *)(v362 + 184) = *((void *)v363 + 23);
        uint64_t v382 = *((void *)v363 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v383 = v940;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v382)
        {
          *(void *)(v362 + 192) = v382;
          *(void *)(v362 + 200) = *((void *)v363 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v362 + 192) = v363[12];
        }
        unint64_t v68 = v890;
        uint64_t v304 = AssociatedTypeWitness;
        uint64_t v305 = v879;
        *(void *)(v362 + 208) = *((void *)v363 + 26);
        *(void *)(v362 + 216) = *((void *)v363 + 27);
        *(void *)(v362 + 224) = *((void *)v363 + 28);
        *(void *)(v362 + 232) = *((void *)v363 + 29);
        *(void *)(v362 + 240) = *((void *)v363 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v366 = *v363;
        long long v367 = v363[1];
        long long v368 = v363[3];
        *(_OWORD *)(v362 + 32) = v363[2];
        *(_OWORD *)(v362 + 48) = v368;
        *(_OWORD *)unint64_t v362 = v366;
        *(_OWORD *)(v362 + 16) = v367;
        long long v369 = v363[4];
        long long v370 = v363[5];
        long long v371 = v363[7];
        *(_OWORD *)(v362 + 96) = v363[6];
        *(_OWORD *)(v362 + 112) = v371;
        *(_OWORD *)(v362 + 64) = v369;
        *(_OWORD *)(v362 + 80) = v370;
        long long v372 = v363[8];
        long long v373 = v363[9];
        long long v374 = v363[11];
        *(_OWORD *)(v362 + 160) = v363[10];
        *(_OWORD *)(v362 + 176) = v374;
        *(_OWORD *)(v362 + 128) = v372;
        *(_OWORD *)(v362 + 144) = v373;
        long long v375 = v363[12];
        long long v376 = v363[13];
        long long v377 = v363[14];
        *(void *)(v362 + 240) = *((void *)v363 + 30);
        *(_OWORD *)(v362 + 208) = v376;
        *(_OWORD *)(v362 + 224) = v377;
        *(_OWORD *)(v362 + 192) = v375;
        unint64_t v68 = v890;
        uint64_t v305 = v879;
      }
      v713 = (_OWORD *)((v362 + 255) & 0xFFFFFFFFFFFFFFF8);
      v714 = (long long *)(((unint64_t)v363 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v715 = *v714;
      *(_OWORD *)((char *)v713 + 9) = *(long long *)((char *)v714 + 9);
      _OWORD *v713 = v715;
      unint64_t v716 = (v362 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v717 = ((unint64_t)v363 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v718 = *(_OWORD *)v717;
      *(unsigned char *)(v716 + 16) = *(unsigned char *)(v717 + 16);
      *(_OWORD *)unint64_t v716 = v718;
      v719 = (void *)((v362 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v720 = ((unint64_t)v363 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v721 = *(void *)v720;
      v720 += 15;
      void *v719 = v721;
      v722 = (void *)(((unint64_t)v719 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v723 = *(void *)(v720 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v724 = *(void *)((v720 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v723, v724);
      void *v722 = v723;
      v722[1] = v724;
      size_t v306 = v874;
      uint64_t v303 = v974;
      uint64_t v302 = __dsta;
      if (v873)
      {
LABEL_359:
        unint64_t v725 = ((((v943
                 + ((((((((((v877 + v306 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v726 = (void *)(((unint64_t)v302 + v957 + v725) & v933);
        v727 = (const void *)(((unint64_t)v303 + v957 + v725) & v933);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v305 + 48))(v727, 1, v304))
        {
          memcpy(v726, v727, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v305 + 16))(v726, v727, v304);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v305 + 56))(v726, 0, 1, v304);
        }
        v728 = (char *)(((unint64_t)v726 + v966) & v884);
        v729 = (char *)(((unint64_t)v727 + v966) & v884);
        if (v875 == v867)
        {
          int v730 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v865 + 48))(((unint64_t)v727 + v966) & v884, v875, v864);
          uint64_t v65 = a1;
        }
        else
        {
          v731 = (uint64_t *)((unint64_t)&v729[v872] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v65 = a1;
          if (v844 <= 0x7FFFFFFE)
          {
            uint64_t v732 = *v731;
            if ((unint64_t)*v731 >= 0xFFFFFFFF) {
              LODWORD(v732) = -1;
            }
            if ((v732 + 1) >= 2) {
              goto LABEL_371;
            }
            goto LABEL_373;
          }
          int v730 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v854 + 48))(((unint64_t)v731 + v852) & v897, v835, v853);
        }
        if (v730)
        {
LABEL_371:
          size_t v733 = v947;
          memcpy(v728, v729, v947);
LABEL_374:
          *(void *)&v728[v733] = *(void *)&v729[v733];
          v742 = (void *)((unint64_t)&v728[v733 + 15] & 0xFFFFFFFFFFFFFFF8);
          v743 = (void *)((unint64_t)&v729[v733 + 15] & 0xFFFFFFFFFFFFFFF8);
          void *v742 = *v743;
          v744 = *(void **)(((unint64_t)v743 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(void *)(((unint64_t)v742 + 15) & 0xFFFFFFFFFFFFFFF8) = v744;
          *((unsigned char *)v65 + v68) = 1;
          id v745 = v744;
          goto LABEL_379;
        }
        v731 = (uint64_t *)((unint64_t)&v729[v872] & 0xFFFFFFFFFFFFFFF8);
LABEL_373:
        (*(void (**)(char *, char *, uint64_t))(v865 + 16))(v728, v729, v864);
        v734 = (void *)((unint64_t)&v728[v872] & 0xFFFFFFFFFFFFFFF8);
        void *v734 = *v731;
        unint64_t v735 = ((unint64_t)v734 + v852) & v897;
        unint64_t v736 = ((unint64_t)v731 + v852) & v897;
        v737 = *(void (**)(unint64_t, unint64_t, uint64_t))(v854 + 16);
        swift_bridgeObjectRetain();
        v737(v735, v736, v853);
        v738 = (void *)((v847 + v735) & 0xFFFFFFFFFFFFFFF8);
        v739 = (void *)((v847 + v736) & 0xFFFFFFFFFFFFFFF8);
        void *v738 = *v739;
        v740 = (void *)(((unint64_t)v738 + 15) & 0xFFFFFFFFFFFFFFF8);
        v741 = (void *)(((unint64_t)v739 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v740 = *v741;
        v740[1] = v741[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        size_t v733 = v947;
        goto LABEL_374;
      }
LABEL_266:
      size_t v306 = v876;
      goto LABEL_359;
    case 2u:
      uint64_t v98 = v66;
      unint64_t v99 = ~(unint64_t)v896;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v880 + 16))(a1, a2, v72);
      uint64_t v100 = (void *)(((unint64_t)a1 + v50) & v933);
      uint64_t v101 = (const void *)((unint64_t)&a2[v50] & v933);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v879 + 48))(v101, 1, AssociatedTypeWitness))
      {
        memcpy(v100, v101, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v879 + 16))(v100, v101, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v879 + 56))(v100, 0, 1, AssociatedTypeWitness);
      }
      unint64_t v157 = (char *)(((unint64_t)v100 + v966) & v98);
      long long v158 = (char *)(((unint64_t)v101 + v966) & v98);
      if (v875 == v867)
      {
        int v159 = (*(uint64_t (**)(unint64_t))(v865 + 48))(((unint64_t)v101 + v966) & v98);
        uint64_t v65 = a1;
      }
      else
      {
        unint64_t v160 = (uint64_t *)((unint64_t)&v158[v872] & 0xFFFFFFFFFFFFFFF8);
        uint64_t v65 = a1;
        if (v844 <= 0x7FFFFFFE)
        {
          uint64_t v161 = *v160;
          if ((unint64_t)*v160 >= 0xFFFFFFFF) {
            LODWORD(v161) = -1;
          }
          if ((v161 + 1) >= 2) {
            goto LABEL_204;
          }
          goto LABEL_206;
        }
        int v159 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v854 + 48))(((unint64_t)v160 + v852) & v99, v835, v853);
      }
      if (v159)
      {
LABEL_204:
        unint64_t v182 = ((((v847
                 + ((v896 + 8 + (v872 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v896)) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        memcpy(v157, v158, v947);
        goto LABEL_207;
      }
      unint64_t v160 = (uint64_t *)((unint64_t)&v158[v872] & 0xFFFFFFFFFFFFFFF8);
LABEL_206:
      (*(void (**)(char *, char *, uint64_t))(v865 + 16))(v157, v158, v864);
      long long v183 = (void *)((unint64_t)&v157[v872] & 0xFFFFFFFFFFFFFFF8);
      void *v183 = *v160;
      unint64_t v184 = ((unint64_t)v183 + v852) & v99;
      unint64_t v185 = ((unint64_t)v160 + v852) & v99;
      long long v186 = *(void (**)(unint64_t, unint64_t, uint64_t))(v854 + 16);
      swift_bridgeObjectRetain();
      v186(v184, v185, v853);
      long long v187 = (void *)((v847 + v184) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v188 = (void *)((v847 + v185) & 0xFFFFFFFFFFFFFFF8);
      void *v187 = *v188;
      unint64_t v189 = (void *)(((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v190 = (void *)(((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v189 = *v190;
      v189[1] = v190[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v182 = ((((v847
               + ((v896 + 8 + (v872 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v896)) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
LABEL_207:
      uint64_t v191 = &v157[v182];
      char *v191 = v158[v182];
      unint64_t v192 = *(void **)&v158[v182 + 8];
      *((void *)v191 + 1) = v192;
      *((unsigned char *)v65 + v68) = 2;
      id v193 = v192;
      goto LABEL_379;
    case 3u:
      uint64_t v102 = ~v26;
      uint64_t v894 = v67;
      uint64_t v904 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
      uint64_t v910 = *(void *)(v866 - 8);
      unint64_t v103 = v28;
      unint64_t v944 = v42;
      unint64_t v889 = v56;
      uint64_t v104 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v880 + 16);
      uint64_t v65 = a1;
      v104(a1, a2, v72);
      v968 = (void *)(((unint64_t)a1 + v43) & v81);
      int v105 = (void *)((unint64_t)&a2[v43] & v81);
      if (v914 == v857)
      {
        int v106 = (*(uint64_t (**)(void *))(v880 + 48))(v105);
        size_t v107 = v103;
        uint64_t v108 = v102;
        uint64_t v109 = v921;
        unint64_t v110 = v916;
        goto LABEL_282;
      }
      unint64_t v110 = v916;
      unint64_t v144 = ((unint64_t)v105 + v916) & v931;
      uint64_t v109 = v921;
      uint64_t v108 = v102;
      unint64_t v145 = (v921 + v144) & v102;
      if (v919 == v857)
      {
        if (v855 == v919)
        {
          long long v146 = *(uint64_t (**)(unint64_t))(v863 + 48);
          unint64_t v147 = (v921 + v144) & v102;
        }
        else
        {
          unint64_t v212 = (unint64_t *)((v871 + v145) & 0xFFFFFFFFFFFFFFF8);
          if (v843 <= 0x7FFFFFFE)
          {
            unint64_t v213 = *v212;
            if (v213 >= 0xFFFFFFFF) {
              LODWORD(v213) = -1;
            }
            size_t v107 = v103;
            if ((v213 + 1) >= 2) {
              goto LABEL_283;
            }
            goto LABEL_286;
          }
          unint64_t v147 = ((unint64_t)v212 + v870) & v894;
          long long v146 = *(uint64_t (**)(unint64_t))(v910 + 48);
        }
        goto LABEL_281;
      }
      size_t v107 = v103;
      unint64_t v174 = v103 + v145;
      if ((v836 & 0x80000000) != 0)
      {
        unint64_t v147 = (v856 + ((v938 + v174) & v924)) & v929;
        if (v873 <= 0x7FFFFFFD)
        {
          unint64_t v828 = *(void *)(((v832 + ((v850 + v147) & v929)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v828 >= 0xFFFFFFFF) {
            LODWORD(v828) = -1;
          }
          if ((v828 + 1) >= 2) {
            goto LABEL_283;
          }
          goto LABEL_286;
        }
        long long v146 = *(uint64_t (**)(unint64_t))(v851 + 48);
LABEL_281:
        int v106 = v146(v147);
        uint64_t v109 = v921;
        uint64_t v108 = v102;
        size_t v107 = v103;
        goto LABEL_282;
      }
      unint64_t v175 = *(void *)(v174 + 8);
      if (v175 >= 0xFFFFFFFF) {
        LODWORD(v175) = -1;
      }
      int v106 = v175 + 1;
LABEL_282:
      if (v106)
      {
LABEL_283:
        uint64_t v384 = v968;
        memcpy(v968, v105, v845);
LABEL_284:
        size_t v385 = v876;
        goto LABEL_378;
      }
      unint64_t v144 = ((unint64_t)v105 + v110) & v931;
      unint64_t v145 = (v109 + v144) & v108;
LABEL_286:
      size_t v831 = v107;
      v975 = v105;
      uint64_t v386 = (unsigned __int8 *)v105;
      uint64_t v387 = v108;
      uint64_t v388 = v109;
      v104(v968, v386, v882);
      unint64_t v389 = ((unint64_t)v968 + v110) & v931;
      v104((void *)v389, (unsigned __int8 *)v144, v882);
      unint64_t v390 = (v388 + v389) & v387;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v863 + 16))(v390, v145, v862);
      uint64_t v391 = (void *)((v871 + v390) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v392 = (void *)((v871 + v145) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v391 = *v392;
      unint64_t v393 = ((unint64_t)v391 + v870) & v894;
      unint64_t v394 = ((unint64_t)v392 + v870) & v894;
      uint64_t v395 = *(void (**)(unint64_t, unint64_t, uint64_t))(v910 + 16);
      swift_bridgeObjectRetain();
      v395(v393, v394, v866);
      uint64_t v396 = (void *)((v904 + v394) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v397 = (void *)((v904 + v393) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v397 = *v396;
      v398 = (void *)(((unint64_t)v397 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v399 = (void *)(((unint64_t)v396 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v398 = *v399;
      v398[1] = v399[1];
      uint64_t v400 = (void *)(v831 + v390);
      *uint64_t v400 = *(void *)(v831 + v145);
      v400[1] = *(void *)(v831 + v145 + 8);
      size_t v401 = (v938 + v831 + v390) & v924;
      size_t v402 = (v938 + v831 + v145) & v924;
      *(unsigned char *)size_t v401 = *(unsigned char *)v402;
      uint64_t v403 = v401 | 4;
      int v404 = *(_DWORD *)(v402 | 4);
      *(unsigned char *)(v403 + 4) = *(unsigned char *)((v402 | 4) + 4);
      *(_DWORD *)uint64_t v403 = v404;
      *(_WORD *)(v401 + 10) = *(_WORD *)(v402 + 0xA);
      size_t v963 = v401;
      uint64_t v405 = (v856 + v401) & v929;
      size_t v949 = v402;
      uint64_t v406 = (v856 + v402) & v929;
      v407 = *(void (**)(uint64_t, uint64_t, uint64_t))(v851 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v407(v405, v406, v861);
      uint64_t v408 = (v850 + v405) & v929;
      uint64_t v409 = (v850 + v406) & v929;
      v407(v408, v409, v861);
      v410 = (unsigned char *)(v408 + v874);
      unsigned char *v410 = *(unsigned char *)(v409 + v874);
      v410[1] = *(unsigned char *)(v409 + v874 + 1);
      v410[2] = *(unsigned char *)(v409 + v874 + 2);
      v410[3] = *(unsigned char *)(v409 + v874 + 3);
      v410[4] = *(unsigned char *)(v409 + v874 + 4);
      unint64_t v411 = (v408 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v412 = (v409 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v411 = *(void *)v412;
      *(void *)(v411 + 8) = *(void *)(v412 + 8);
      *(unsigned char *)(v411 + 16) = *(unsigned char *)(v412 + 16);
      *(unsigned char *)(v411 + 17) = *(unsigned char *)(v412 + 17);
      *(unsigned char *)(v411 + 18) = *(unsigned char *)(v412 + 18);
      *(unsigned char *)(v411 + 19) = *(unsigned char *)(v412 + 19);
      unint64_t v413 = (v411 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v414 = (v412 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v413 = *(void *)v414;
      *(unsigned char *)(v413 + 8) = *(unsigned char *)(v414 + 8);
      *(unsigned char *)(v413 + 9) = *(unsigned char *)(v414 + 9);
      *(unsigned char *)(v413 + 10) = *(unsigned char *)(v414 + 10);
      *(unsigned char *)(v413 + 11) = *(unsigned char *)(v414 + 11);
      *(unsigned char *)(v413 + 12) = *(unsigned char *)(v414 + 12);
      v415 = (void *)((v412 + 47) & 0xFFFFFFFFFFFFFFF8);
      v416 = (void *)((v411 + 47) & 0xFFFFFFFFFFFFFFF8);
      void *v416 = *v415;
      unint64_t v417 = ((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v418 = ((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v417 = *(void *)v418;
      *(unsigned char *)(v417 + 8) = *(unsigned char *)(v418 + 8);
      *(unsigned char *)(v417 + 9) = *(unsigned char *)(v418 + 9);
      v419 = (void *)((v849 + v417) & v929);
      v420 = (const void *)((v849 + v418) & v929);
      v421 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v851 + 48);
      swift_bridgeObjectRetain();
      if (v421(v420, 1, v861))
      {
        memcpy(v419, v420, v876);
      }
      else
      {
        v407((uint64_t)v419, (uint64_t)v420, v861);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v851 + 56))(v419, 0, 1, v861);
      }
      int v105 = v975;
      v422 = (void *)(((unint64_t)v419 + v848) & 0xFFFFFFFFFFFFFFF8);
      v423 = (void *)(((unint64_t)v420 + v848) & 0xFFFFFFFFFFFFFFF8);
      void *v422 = *v423;
      unint64_t v424 = ((unint64_t)v422 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v425 = ((unint64_t)v423 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v426 = *(void *)v425;
      *(unsigned char *)(v424 + 8) = *(unsigned char *)(v425 + 8);
      *(void *)unint64_t v424 = v426;
      v427 = (void *)(((unint64_t)v422 + 31) & 0xFFFFFFFFFFFFFFF8);
      v428 = (void *)(((unint64_t)v423 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v427 = *v428;
      unint64_t v429 = ((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8;
      v430 = (uint64_t *)(((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v431 = v430[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v431 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v429 = *(_OWORD *)v430;
      }
      else
      {
        uint64_t v432 = *v430;
        sub_24D3F9C18(*v430, v431);
        *(void *)unint64_t v429 = v432;
        *(void *)(v429 + 8) = v431;
      }
      unint64_t v433 = (v429 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v434 = ((unint64_t)v430 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v435 = *(void *)v434;
      *(unsigned char *)(v433 + 8) = *(unsigned char *)(v434 + 8);
      *(void *)unint64_t v433 = v435;
      *(unsigned char *)(v433 + 9) = *(unsigned char *)(v434 + 9);
      unint64_t v436 = (v433 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v437 = (v434 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v438 = *(_DWORD *)v437;
      *(unsigned char *)(v436 + 4) = *(unsigned char *)(v437 + 4);
      *(_DWORD *)unint64_t v436 = v438;
      v439 = (void *)((v433 + 25) & 0xFFFFFFFFFFFFFFF8);
      v440 = (void *)((v434 + 25) & 0xFFFFFFFFFFFFFFF8);
      void *v439 = *v440;
      v439[1] = v440[1];
      size_t v441 = v963 + v937;
      v442 = (long long *)(v949 + v937);
      unint64_t v443 = *(void *)(v949 + v937 + 16);
      if (v443 >= 0xFFFFFFFF) {
        LODWORD(v443) = -1;
      }
      int v444 = v443 - 1;
      swift_bridgeObjectRetain();
      if (v444 < 0)
      {
        *(void *)size_t v441 = *(void *)v442;
        *(unsigned char *)(v441 + 8) = *((unsigned char *)v442 + 8);
        *(unsigned char *)(v441 + 9) = *((unsigned char *)v442 + 9);
        v457 = (void *)*((void *)v442 + 2);
        id v458 = v457;
        *(void *)(v441 + 16) = v457;
        v459 = (void *)*((void *)v442 + 3);
        id v460 = v459;
        *(void *)(v441 + 24) = v459;
        *(unsigned char *)(v441 + 32) = *((unsigned char *)v442 + 32);
        *(unsigned char *)(v441 + 33) = *((unsigned char *)v442 + 33);
        *(unsigned char *)(v441 + 34) = *((unsigned char *)v442 + 34);
        *(void *)(v441 + 40) = *((void *)v442 + 5);
        *(void *)(v441 + 48) = *((void *)v442 + 6);
        *(void *)(v441 + 56) = *((void *)v442 + 7);
        *(void *)(v441 + 64) = *((void *)v442 + 8);
        *(unsigned char *)(v441 + 72) = *((unsigned char *)v442 + 72);
        *(void *)(v441 + 80) = *((void *)v442 + 10);
        *(void *)(v441 + 88) = *((void *)v442 + 11);
        v964 = (void *)*((void *)v442 + 12);
        *(void *)(v441 + 96) = v964;
        *(unsigned char *)(v441 + 104) = *((unsigned char *)v442 + 104);
        *(unsigned char *)(v441 + 105) = *((unsigned char *)v442 + 105);
        *(void *)(v441 + 112) = *((void *)v442 + 14);
        *(void *)(v441 + 120) = *((void *)v442 + 15);
        *(void *)(v441 + 128) = *((void *)v442 + 16);
        *(void *)(v441 + 136) = *((void *)v442 + 17);
        *(void *)(v441 + 144) = *((void *)v442 + 18);
        *(void *)(v441 + 152) = *((void *)v442 + 19);
        *(void *)(v441 + 160) = *((void *)v442 + 20);
        *(void *)(v441 + 168) = *((void *)v442 + 21);
        *(unsigned char *)(v441 + 176) = *((unsigned char *)v442 + 176);
        *(void *)(v441 + 184) = *((void *)v442 + 23);
        uint64_t v461 = *((void *)v442 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v462 = v964;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v461)
        {
          *(void *)(v441 + 192) = v461;
          *(void *)(v441 + 200) = *((void *)v442 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v441 + 192) = v442[12];
        }
        uint64_t v65 = a1;
        size_t v385 = v874;
        int v105 = v975;
        *(void *)(v441 + 208) = *((void *)v442 + 26);
        *(void *)(v441 + 216) = *((void *)v442 + 27);
        *(void *)(v441 + 224) = *((void *)v442 + 28);
        *(void *)(v441 + 232) = *((void *)v442 + 29);
        *(void *)(v441 + 240) = *((void *)v442 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v445 = *v442;
        long long v446 = v442[1];
        long long v447 = v442[3];
        *(_OWORD *)(v441 + 32) = v442[2];
        *(_OWORD *)(v441 + 48) = v447;
        *(_OWORD *)size_t v441 = v445;
        *(_OWORD *)(v441 + 16) = v446;
        long long v448 = v442[4];
        long long v449 = v442[5];
        long long v450 = v442[7];
        *(_OWORD *)(v441 + 96) = v442[6];
        *(_OWORD *)(v441 + 112) = v450;
        *(_OWORD *)(v441 + 64) = v448;
        *(_OWORD *)(v441 + 80) = v449;
        long long v451 = v442[8];
        long long v452 = v442[9];
        long long v453 = v442[11];
        *(_OWORD *)(v441 + 160) = v442[10];
        *(_OWORD *)(v441 + 176) = v453;
        *(_OWORD *)(v441 + 128) = v451;
        *(_OWORD *)(v441 + 144) = v452;
        long long v454 = v442[12];
        long long v455 = v442[13];
        long long v456 = v442[14];
        *(void *)(v441 + 240) = *((void *)v442 + 30);
        *(_OWORD *)(v441 + 208) = v455;
        *(_OWORD *)(v441 + 224) = v456;
        *(_OWORD *)(v441 + 192) = v454;
        size_t v385 = v874;
      }
      v746 = (_OWORD *)((v441 + 255) & 0xFFFFFFFFFFFFFFF8);
      v747 = (long long *)(((unint64_t)v442 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v748 = *v747;
      *(_OWORD *)((char *)v746 + 9) = *(long long *)((char *)v747 + 9);
      _OWORD *v746 = v748;
      unint64_t v749 = (v441 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v750 = ((unint64_t)v442 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v751 = *(_OWORD *)v750;
      *(unsigned char *)(v749 + 16) = *(unsigned char *)(v750 + 16);
      *(_OWORD *)unint64_t v749 = v751;
      v752 = (void *)((v441 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v753 = ((unint64_t)v442 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v754 = *(void *)v753;
      v753 += 15;
      void *v752 = v754;
      v755 = (void *)(((unint64_t)v752 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v756 = *(void *)(v753 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v757 = *(void *)((v753 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v756, v757);
      void *v755 = v756;
      v755[1] = v757;
      uint64_t v384 = v968;
      if (!v873) {
        goto LABEL_284;
      }
LABEL_378:
      unint64_t v758 = ((((v944
               + ((((((((((v877 + v385 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v759 = (void *)(((unint64_t)v384 + v758) & 0xFFFFFFFFFFFFFFF8);
      v760 = (void *)(((unint64_t)v105 + v758) & 0xFFFFFFFFFFFFFFF8);
      void *v759 = *v760;
      v759[1] = v760[1];
      *(void *)(((unint64_t)v759 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v760 + 23) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v65 + v889) = 3;
      swift_bridgeObjectRetain();
      goto LABEL_379;
    case 4u:
      uint64_t v65 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v880 + 16))(a1, a2, v72);
      char v111 = 4;
      goto LABEL_118;
    case 5u:
      uint64_t v65 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v880 + 16))(a1, a2, v72);
      char v111 = 5;
      goto LABEL_118;
    case 6u:
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v880 + 16))(a1, a2, v72);
      unint64_t v112 = (void *)(((unint64_t)a1 + v55) & v82);
      unint64_t v113 = (const void *)((unint64_t)&a2[v55] & v82);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v113, 1, v840))
      {
        memcpy(v112, v113, v833);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v39 + 16))(v112, v113, v840);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v112, 0, 1, v840);
      }
      unint64_t v168 = v972;
      uint64_t v65 = a1;
      *((unsigned char *)a1 + v68) = 6;
      goto LABEL_380;
    case 7u:
      uint64_t v65 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v880 + 16))(a1, a2, v72);
      char v111 = 7;
LABEL_118:
      *((unsigned char *)v65 + v68) = v111;
      goto LABEL_379;
    default:
      uint64_t v83 = ~v26;
      uint64_t v892 = v67;
      uint64_t v902 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
      uint64_t v908 = *(void *)(v866 - 8);
      size_t v829 = v28;
      unint64_t v942 = v42;
      unint64_t v888 = v56;
      uint64_t v84 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v880 + 16);
      uint64_t v65 = a1;
      v84(a1, a2, v72);
      v967 = (void *)(((unint64_t)a1 + v43) & v81);
      uint64_t v85 = (void *)((unint64_t)&a2[v43] & v81);
      if (v914 == v857)
      {
        int v86 = (*(uint64_t (**)(void *))(v880 + 48))(v85);
        uint64_t v87 = v83;
        uint64_t v88 = v921;
        unint64_t v89 = v916;
        goto LABEL_246;
      }
      unint64_t v89 = v916;
      unint64_t v140 = ((unint64_t)v85 + v916) & v931;
      uint64_t v88 = v921;
      uint64_t v87 = v83;
      unint64_t v141 = (v921 + v140) & v83;
      if (v919 == v857)
      {
        if (v855 == v919)
        {
          int v86 = (*(uint64_t (**)(unint64_t))(v863 + 48))((v921 + v140) & v83);
LABEL_245:
          uint64_t v87 = v83;
          goto LABEL_246;
        }
        unint64_t v208 = (unint64_t *)((v871 + v141) & 0xFFFFFFFFFFFFFFF8);
        if (v843 > 0x7FFFFFFE)
        {
          int v86 = (*(uint64_t (**)(unint64_t))(v908 + 48))(((unint64_t)v208 + v870) & v892);
          goto LABEL_245;
        }
        unint64_t v209 = *v208;
        goto LABEL_413;
      }
      size_t v170 = v829 + v141;
      if ((v836 & 0x80000000) != 0)
      {
        uint64_t v220 = (v856 + ((v938 + v170) & v924)) & v929;
        if (v873 > 0x7FFFFFFD)
        {
          int v86 = (*(uint64_t (**)(uint64_t))(v851 + 48))(v220);
          goto LABEL_245;
        }
        unint64_t v209 = *(void *)(((v832 + ((v850 + v220) & v929)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_413:
        if (v209 >= 0xFFFFFFFF) {
          LODWORD(v209) = -1;
        }
        if ((v209 + 1) >= 2) {
          goto LABEL_247;
        }
        goto LABEL_250;
      }
      unint64_t v171 = *(void *)(v170 + 8);
      if (v171 >= 0xFFFFFFFF) {
        LODWORD(v171) = -1;
      }
      int v86 = v171 + 1;
LABEL_246:
      if (v86)
      {
LABEL_247:
        id v225 = v967;
        memcpy(v967, v85, v845);
LABEL_248:
        size_t v226 = v876;
        goto LABEL_355;
      }
      unint64_t v140 = ((unint64_t)v85 + v89) & v931;
      unint64_t v141 = (v88 + v140) & v87;
LABEL_250:
      uint64_t v227 = v87;
      v84(v967, (unsigned __int8 *)v85, v882);
      unint64_t v228 = ((unint64_t)v967 + v89) & v931;
      v84((void *)v228, (unsigned __int8 *)v140, v882);
      unint64_t v229 = (v88 + v228) & v227;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v863 + 16))(v229, v141, v862);
      unint64_t v230 = (void *)((v871 + v229) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v231 = (void *)((v871 + v141) & 0xFFFFFFFFFFFFFFF8);
      void *v230 = *v231;
      unint64_t v232 = ((unint64_t)v230 + v870) & v892;
      unint64_t v233 = ((unint64_t)v231 + v870) & v892;
      unint64_t v234 = *(void (**)(unint64_t, unint64_t, uint64_t))(v908 + 16);
      swift_bridgeObjectRetain();
      v234(v232, v233, v866);
      long long v235 = (void *)((v902 + v233) & 0xFFFFFFFFFFFFFFF8);
      long long v236 = (void *)((v902 + v232) & 0xFFFFFFFFFFFFFFF8);
      *long long v236 = *v235;
      long long v237 = (void *)(((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v238 = (void *)(((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v237 = *v238;
      v237[1] = v238[1];
      long long v239 = (void *)(v829 + v229);
      *long long v239 = *(void *)(v829 + v141);
      v239[1] = *(void *)(v829 + v141 + 8);
      size_t v240 = (v938 + v829 + v229) & v924;
      size_t v241 = (v938 + v829 + v141) & v924;
      *(unsigned char *)size_t v240 = *(unsigned char *)v241;
      uint64_t v242 = v240 | 4;
      int v243 = *(_DWORD *)(v241 | 4);
      *(unsigned char *)(v242 + 4) = *(unsigned char *)((v241 | 4) + 4);
      *(_DWORD *)uint64_t v242 = v243;
      *(_WORD *)(v240 + 10) = *(_WORD *)(v241 + 0xA);
      size_t v961 = v240;
      uint64_t v244 = (v856 + v240) & v929;
      size_t v948 = v241;
      uint64_t v245 = (v856 + v241) & v929;
      long long v246 = *(void (**)(uint64_t, uint64_t, uint64_t))(v851 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v246(v244, v245, v861);
      uint64_t v247 = (v850 + v244) & v929;
      uint64_t v248 = (v850 + v245) & v929;
      v246(v247, v248, v861);
      long long v249 = (unsigned char *)(v247 + v874);
      *long long v249 = *(unsigned char *)(v248 + v874);
      v249[1] = *(unsigned char *)(v248 + v874 + 1);
      v249[2] = *(unsigned char *)(v248 + v874 + 2);
      v249[3] = *(unsigned char *)(v248 + v874 + 3);
      v249[4] = *(unsigned char *)(v248 + v874 + 4);
      unint64_t v250 = (v247 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v251 = (v248 + v874 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v250 = *(void *)v251;
      *(void *)(v250 + 8) = *(void *)(v251 + 8);
      *(unsigned char *)(v250 + 16) = *(unsigned char *)(v251 + 16);
      *(unsigned char *)(v250 + 17) = *(unsigned char *)(v251 + 17);
      *(unsigned char *)(v250 + 18) = *(unsigned char *)(v251 + 18);
      *(unsigned char *)(v250 + 19) = *(unsigned char *)(v251 + 19);
      unint64_t v252 = (v250 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v253 = (v251 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v252 = *(void *)v253;
      *(unsigned char *)(v252 + 8) = *(unsigned char *)(v253 + 8);
      *(unsigned char *)(v252 + 9) = *(unsigned char *)(v253 + 9);
      *(unsigned char *)(v252 + 10) = *(unsigned char *)(v253 + 10);
      *(unsigned char *)(v252 + 11) = *(unsigned char *)(v253 + 11);
      *(unsigned char *)(v252 + 12) = *(unsigned char *)(v253 + 12);
      uint64_t v254 = (void *)((v251 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v255 = (void *)((v250 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v255 = *v254;
      unint64_t v256 = ((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v257 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v256 = *(void *)v257;
      *(unsigned char *)(v256 + 8) = *(unsigned char *)(v257 + 8);
      *(unsigned char *)(v256 + 9) = *(unsigned char *)(v257 + 9);
      unint64_t v258 = (void *)((v849 + v256) & v929);
      unint64_t v259 = (const void *)((v849 + v257) & v929);
      uint64_t v260 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v851 + 48);
      swift_bridgeObjectRetain();
      if (v260(v259, 1, v861))
      {
        memcpy(v258, v259, v876);
      }
      else
      {
        v246((uint64_t)v258, (uint64_t)v259, v861);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v851 + 56))(v258, 0, 1, v861);
      }
      uint64_t v261 = (void *)(((unint64_t)v258 + v848) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v262 = (void *)(((unint64_t)v259 + v848) & 0xFFFFFFFFFFFFFFF8);
      void *v261 = *v262;
      unint64_t v263 = ((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v264 = ((unint64_t)v262 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v265 = *(void *)v264;
      *(unsigned char *)(v263 + 8) = *(unsigned char *)(v264 + 8);
      *(void *)unint64_t v263 = v265;
      unint64_t v266 = (void *)(((unint64_t)v261 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v267 = (void *)(((unint64_t)v262 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v266 = *v267;
      unint64_t v268 = ((unint64_t)v266 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v269 = (uint64_t *)(((unint64_t)v267 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v270 = v269[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v270 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v268 = *(_OWORD *)v269;
      }
      else
      {
        uint64_t v271 = *v269;
        sub_24D3F9C18(*v269, v270);
        *(void *)unint64_t v268 = v271;
        *(void *)(v268 + 8) = v270;
      }
      unint64_t v272 = (v268 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v273 = ((unint64_t)v269 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v274 = *(void *)v273;
      *(unsigned char *)(v272 + 8) = *(unsigned char *)(v273 + 8);
      *(void *)unint64_t v272 = v274;
      *(unsigned char *)(v272 + 9) = *(unsigned char *)(v273 + 9);
      unint64_t v275 = (v272 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v276 = (v273 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v277 = *(_DWORD *)v276;
      *(unsigned char *)(v275 + 4) = *(unsigned char *)(v276 + 4);
      *(_DWORD *)unint64_t v275 = v277;
      unint64_t v278 = (void *)((v272 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v279 = (void *)((v273 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v278 = *v279;
      v278[1] = v279[1];
      size_t v280 = v961 + v937;
      unint64_t v281 = (long long *)(v948 + v937);
      unint64_t v282 = *(void *)(v948 + v937 + 16);
      if (v282 >= 0xFFFFFFFF) {
        LODWORD(v282) = -1;
      }
      int v283 = v282 - 1;
      swift_bridgeObjectRetain();
      if (v283 < 0)
      {
        *(void *)size_t v280 = *(void *)v281;
        *(unsigned char *)(v280 + 8) = *((unsigned char *)v281 + 8);
        *(unsigned char *)(v280 + 9) = *((unsigned char *)v281 + 9);
        uint64_t v296 = (void *)*((void *)v281 + 2);
        id v297 = v296;
        *(void *)(v280 + 16) = v296;
        uint64_t v298 = (void *)*((void *)v281 + 3);
        id v299 = v298;
        *(void *)(v280 + 24) = v298;
        *(unsigned char *)(v280 + 32) = *((unsigned char *)v281 + 32);
        *(unsigned char *)(v280 + 33) = *((unsigned char *)v281 + 33);
        *(unsigned char *)(v280 + 34) = *((unsigned char *)v281 + 34);
        *(void *)(v280 + 40) = *((void *)v281 + 5);
        *(void *)(v280 + 48) = *((void *)v281 + 6);
        *(void *)(v280 + 56) = *((void *)v281 + 7);
        *(void *)(v280 + 64) = *((void *)v281 + 8);
        *(unsigned char *)(v280 + 72) = *((unsigned char *)v281 + 72);
        *(void *)(v280 + 80) = *((void *)v281 + 10);
        *(void *)(v280 + 88) = *((void *)v281 + 11);
        v962 = (void *)*((void *)v281 + 12);
        *(void *)(v280 + 96) = v962;
        *(unsigned char *)(v280 + 104) = *((unsigned char *)v281 + 104);
        *(unsigned char *)(v280 + 105) = *((unsigned char *)v281 + 105);
        *(void *)(v280 + 112) = *((void *)v281 + 14);
        *(void *)(v280 + 120) = *((void *)v281 + 15);
        *(void *)(v280 + 128) = *((void *)v281 + 16);
        *(void *)(v280 + 136) = *((void *)v281 + 17);
        *(void *)(v280 + 144) = *((void *)v281 + 18);
        *(void *)(v280 + 152) = *((void *)v281 + 19);
        *(void *)(v280 + 160) = *((void *)v281 + 20);
        *(void *)(v280 + 168) = *((void *)v281 + 21);
        *(unsigned char *)(v280 + 176) = *((unsigned char *)v281 + 176);
        *(void *)(v280 + 184) = *((void *)v281 + 23);
        uint64_t v300 = *((void *)v281 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v301 = v962;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v300)
        {
          *(void *)(v280 + 192) = v300;
          *(void *)(v280 + 200) = *((void *)v281 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v280 + 192) = v281[12];
        }
        uint64_t v65 = a1;
        size_t v226 = v874;
        *(void *)(v280 + 208) = *((void *)v281 + 26);
        *(void *)(v280 + 216) = *((void *)v281 + 27);
        *(void *)(v280 + 224) = *((void *)v281 + 28);
        *(void *)(v280 + 232) = *((void *)v281 + 29);
        *(void *)(v280 + 240) = *((void *)v281 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v284 = *v281;
        long long v285 = v281[1];
        long long v286 = v281[3];
        *(_OWORD *)(v280 + 32) = v281[2];
        *(_OWORD *)(v280 + 48) = v286;
        *(_OWORD *)size_t v280 = v284;
        *(_OWORD *)(v280 + 16) = v285;
        long long v287 = v281[4];
        long long v288 = v281[5];
        long long v289 = v281[7];
        *(_OWORD *)(v280 + 96) = v281[6];
        *(_OWORD *)(v280 + 112) = v289;
        *(_OWORD *)(v280 + 64) = v287;
        *(_OWORD *)(v280 + 80) = v288;
        long long v290 = v281[8];
        long long v291 = v281[9];
        long long v292 = v281[11];
        *(_OWORD *)(v280 + 160) = v281[10];
        *(_OWORD *)(v280 + 176) = v292;
        *(_OWORD *)(v280 + 128) = v290;
        *(_OWORD *)(v280 + 144) = v291;
        long long v293 = v281[12];
        long long v294 = v281[13];
        long long v295 = v281[14];
        *(void *)(v280 + 240) = *((void *)v281 + 30);
        *(_OWORD *)(v280 + 208) = v294;
        *(_OWORD *)(v280 + 224) = v295;
        *(_OWORD *)(v280 + 192) = v293;
        size_t v226 = v874;
      }
      v696 = (_OWORD *)((v280 + 255) & 0xFFFFFFFFFFFFFFF8);
      v697 = (long long *)(((unint64_t)v281 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v698 = *v697;
      *(_OWORD *)((char *)v696 + 9) = *(long long *)((char *)v697 + 9);
      _OWORD *v696 = v698;
      unint64_t v699 = (v280 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v700 = ((unint64_t)v281 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v701 = *(_OWORD *)v700;
      *(unsigned char *)(v699 + 16) = *(unsigned char *)(v700 + 16);
      *(_OWORD *)unint64_t v699 = v701;
      v702 = (void *)((v280 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v703 = ((unint64_t)v281 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v704 = *(void *)v703;
      v703 += 15;
      void *v702 = v704;
      v705 = (void *)(((unint64_t)v702 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v706 = *(void *)(v703 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v707 = *(void *)((v703 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v706, v707);
      void *v705 = v706;
      v705[1] = v707;
      id v225 = v967;
      if (!v873) {
        goto LABEL_248;
      }
LABEL_355:
      unint64_t v708 = ((((v942
               + ((((((((((v877 + v226 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v709 = (void *)(((unint64_t)v225 + v708) & 0xFFFFFFFFFFFFFFF8);
      v710 = (void *)(((unint64_t)v85 + v708) & 0xFFFFFFFFFFFFFFF8);
      void *v709 = *v710;
      v711 = *(void **)(((unint64_t)v710 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v709 + 15) & 0xFFFFFFFFFFFFFFF8) = v711;
      *((unsigned char *)v65 + v888) = 0;
      id v712 = v711;
LABEL_379:
      unint64_t v168 = v972;
LABEL_380:
      *((unsigned char *)v65 + v168) = 1;
      return v65;
  }
}

void sub_24D9D4B6C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v336 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v337 = *(void *)(v336 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v336 + 80);
  uint64_t v324 = v2;
  uint64_t v292 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v292 - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v281 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v281 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v279 = sub_24DCC8CE8();
  uint64_t v9 = *(void *)(v279 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = v8 | v3 | v10;
  uint64_t v293 = v4;
  uint64_t v282 = v6;
  unsigned int v13 = *(_DWORD *)(v6 + 84);
  unsigned int v254 = v13;
  unsigned int v284 = *(_DWORD *)(v4 + 84);
  if (v284 > v13) {
    unsigned int v13 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v268 = v13;
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  unsigned int v331 = *(_DWORD *)(v336 + 84);
  unsigned int v294 = v13;
  if (v13 <= v331) {
    unsigned int v13 = *(_DWORD *)(v336 + 84);
  }
  uint64_t v278 = *(void *)(v279 - 8);
  unsigned int v14 = *(_DWORD *)(v9 + 84);
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v9 + 84);
  }
  unsigned int v315 = v15;
  if (v13 <= v15) {
    unsigned int v13 = v15;
  }
  unsigned int v255 = v13;
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  unsigned int v288 = v13;
  unsigned int v253 = *(_DWORD *)(v9 + 84);
  uint64_t v308 = v3;
  uint64_t v275 = v337 + v3;
  uint64_t v312 = v8;
  uint64_t v329 = v337 + v8;
  uint64_t v295 = *(void *)(v4 + 64) + 7;
  uint64_t v280 = v7 + 8;
  uint64_t v322 = v7;
  unint64_t v335 = ((((*(void *)(v6 + 64) + 7 + ((v7 + 8 + (v295 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v317 = v10 | 7;
  uint64_t v330 = v11 + 16;
  uint64_t v285 = v10 + 12;
  uint64_t v16 = *(void *)(*(void *)(v279 - 8) + 64);
  uint64_t v276 = v16 + v10;
  uint64_t v277 = v16 + 12;
  unint64_t v17 = (v10
       + 10
       + ((((((v16 + 12 + ((v16 + v10 + ((v10 + 12) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  if (!v14) {
    ++v16;
  }
  uint64_t v271 = v10 + 10;
  uint64_t v272 = v16 + 7;
  unint64_t v319 = (((((((((v16 + 7 + v17) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v297 = v8 | v3 | v10;
  unint64_t v287 = v12 + v337;
  unint64_t v289 = ((((v319 + 327 + ((v11 + 16 + v335 + ((v337 + v8 + ((v337 + v3) & ~v3)) & ~v8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v18 = v289 + ((v12 + v337) & ~v12);
  unint64_t v305 = (v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(void *)(a2 + 24);
  uint64_t v303 = swift_getAssociatedTypeWitness();
  uint64_t v20 = *(void *)(v303 - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  unint64_t v310 = (v18 + v21) & ~v21;
  uint64_t v304 = v20;
  unsigned int v22 = *(_DWORD *)(v20 + 84);
  unint64_t v23 = *(void *)(v20 + 64);
  uint64_t v290 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v290 - 8);
  int v25 = *(_DWORD *)(v24 + 80);
  uint64_t v286 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v286 - 8);
  uint64_t v27 = v26;
  uint64_t v291 = v24;
  unsigned int v28 = *(_DWORD *)(v26 + 84);
  unsigned int v283 = *(_DWORD *)(v24 + 84);
  if (v283 > v28) {
    unsigned int v28 = *(_DWORD *)(v24 + 84);
  }
  unsigned int v267 = v28;
  if (v28 <= 0x7FFFFFFE) {
    unsigned int v29 = 2147483646;
  }
  else {
    unsigned int v29 = v28;
  }
  uint64_t v30 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v31 = v25 & 0xF8 | v30 | 7;
  uint64_t v296 = *(void *)(v24 + 64) + 7;
  uint64_t v32 = v30 + 8;
  unint64_t v33 = ((((*(void *)(*(void *)(v286 - 8) + 64) + 7 + ((v30 + 8 + (v296 & 0xFFFFFFFFFFFFFFF8)) & ~v30)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v34 = v23 + v31;
  if (v22) {
    uint64_t v35 = v23 + v31;
  }
  else {
    uint64_t v35 = v34 + 1;
  }
  unint64_t v36 = ((((((v35 + v310) & ~v31) + v33 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v256 = v337 + v21;
  uint64_t v270 = v35;
  unint64_t v37 = v33 + ((v35 + ((v337 + v21) & ~v21)) & ~v31) + 16;
  uint64_t v38 = *(void *)(v324 - 8);
  uint64_t v39 = *(unsigned __int8 *)(v38 + 80);
  uint64_t v40 = v337 + v39;
  uint64_t v262 = v38;
  uint64_t v41 = *(void *)(v38 + 64);
  if (!*(_DWORD *)(v38 + 84)) {
    ++v41;
  }
  unint64_t v42 = v41 + ((v337 + v39) & ~v39);
  if (v337 <= ((v305 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v43 = ((v305 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v43 = v337;
  }
  if (v36 <= v37) {
    unint64_t v36 = v37;
  }
  if (((v305 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v42) {
    unint64_t v42 = ((v305 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v43 > v36) {
    unint64_t v36 = v43;
  }
  if (v36 <= v42) {
    unint64_t v36 = v42;
  }
  unsigned int v311 = v29;
  unsigned int v307 = v22;
  if (v29 <= v22) {
    unsigned int v44 = v22;
  }
  else {
    unsigned int v44 = v29;
  }
  uint64_t v45 = v19;
  if (v44 <= v315) {
    unsigned int v46 = v315;
  }
  else {
    unsigned int v46 = v44;
  }
  if (v46 <= 0x7FFFFFFF) {
    int v47 = 0x7FFFFFFF;
  }
  else {
    int v47 = v46;
  }
  int v306 = v47;
  if (v331) {
    uint64_t v48 = v329;
  }
  else {
    uint64_t v48 = v329 + 1;
  }
  uint64_t v49 = *(void *)(v19 - 8);
  uint64_t v50 = *(unsigned __int8 *)(v49 + 80);
  uint64_t v261 = v49;
  uint64_t v51 = *(void *)(v49 + 64);
  uint64_t v52 = v21 | v10 | v31;
  uint64_t v338 = v21;
  uint64_t v273 = v23 + v21;
  uint64_t v274 = v23 + v31;
  uint64_t v53 = v23 + v50;
  if (!*(_DWORD *)(v49 + 84)) {
    ++v51;
  }
  unint64_t v54 = v51 + ((v23 + v50) & ~v50);
  unint64_t v55 = v52 + v23;
  unint64_t v56 = ((((v319 + 327 + ((v330 + v33 + ((v34 + ((v23 + v21) & ~v21)) & ~v31)) & ~v317)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v57 = v56 + ((v52 + v23) & ~v52);
  unint64_t v58 = ((v57 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v59 = ((((((v48 + ((v57 + v308) & ~v308)) & ~v312) + v335 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v23 > v58) {
    unint64_t v58 = v23;
  }
  uint64_t v60 = v23 + v308;
  uint64_t v269 = v48;
  if (v59 <= ((v48 + (v60 & ~v308)) & ~v312) + v335 + 16) {
    unint64_t v59 = ((v48 + (v60 & ~v308)) & ~v312) + v335 + 16;
  }
  unint64_t v61 = ((v57 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v61 > v54) {
    unint64_t v54 = v61;
  }
  if (v58 <= v59) {
    unint64_t v62 = v59;
  }
  else {
    unint64_t v62 = v58;
  }
  if (v62 > v54) {
    unint64_t v54 = v62;
  }
  if (v54 + 1 <= v36 + 1) {
    unint64_t v63 = v36 + 1;
  }
  else {
    unint64_t v63 = v54 + 1;
  }
  unsigned int v64 = a1[v63];
  unsigned int v65 = v64 - 2;
  if (v64 >= 2)
  {
    if (v63 <= 3) {
      uint64_t v66 = v63;
    }
    else {
      uint64_t v66 = 4;
    }
    switch(v66)
    {
      case 1:
        int v67 = *a1;
        if (v63 < 4) {
          goto LABEL_77;
        }
        goto LABEL_78;
      case 2:
        int v67 = *(unsigned __int16 *)a1;
        if (v63 >= 4) {
          goto LABEL_78;
        }
        goto LABEL_77;
      case 3:
        int v67 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v63 >= 4) {
          goto LABEL_78;
        }
        goto LABEL_77;
      case 4:
        int v67 = *(_DWORD *)a1;
        if (v63 < 4) {
LABEL_77:
        }
          v67 |= v65 << (8 * v63);
LABEL_78:
        unsigned int v64 = v67 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v314 = ~v308;
  uint64_t v316 = ~v312;
  uint64_t v313 = ~v322;
  uint64_t v318 = ~v317;
  unint64_t v68 = v319 + 16;
  uint64_t v320 = ~v21;
  uint64_t v323 = ~v31;
  uint64_t v69 = ~v30;
  if (v64 == 1)
  {
    unsigned int v70 = a1[v54];
    unsigned int v71 = v70 - 8;
    if (v70 >= 8)
    {
      if (v54 <= 3) {
        uint64_t v72 = v54;
      }
      else {
        uint64_t v72 = 4;
      }
      switch(v72)
      {
        case 1:
          int v73 = *a1;
          if (v54 < 4) {
            goto LABEL_98;
          }
          goto LABEL_100;
        case 2:
          int v73 = *(unsigned __int16 *)a1;
          if (v54 >= 4) {
            goto LABEL_100;
          }
          goto LABEL_98;
        case 3:
          int v73 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v54 < 4) {
            goto LABEL_98;
          }
          goto LABEL_100;
        case 4:
          int v73 = *(_DWORD *)a1;
          if (v54 < 4) {
LABEL_98:
          }
            unsigned int v70 = (v73 | (v71 << (8 * v54))) + 8;
          else {
LABEL_100:
          }
            unsigned int v70 = v73 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v80 = ~v52;
    uint64_t v81 = ~v50;
    switch(v70)
    {
      case 1u:
        uint64_t v299 = v69;
        uint64_t v264 = v32;
        uint64_t v326 = v27;
        uint64_t v333 = ~v10;
        unint64_t v89 = v33;
        unint64_t v258 = v68;
        uint64_t v90 = *(void (**)(unsigned __int8 *, uint64_t))(v304 + 8);
        v90(a1, v303);
        unint64_t v91 = (unint64_t)&a1[v55] & v80;
        if (v307 == v306)
        {
          int v92 = (*(uint64_t (**)(unint64_t))(v304 + 48))((unint64_t)&a1[v55] & v80);
          unint64_t v93 = v89;
          uint64_t v94 = AssociatedTypeWitness;
          unint64_t v95 = v56;
          uint64_t v96 = v308;
          if (v92) {
            goto LABEL_265;
          }
LABEL_253:
          unint64_t v128 = (v273 + v91) & v320;
          unint64_t v129 = (v274 + v128) & v323;
          goto LABEL_254;
        }
        unint64_t v128 = (v273 + v91) & v320;
        unint64_t v129 = (v274 + v128) & v323;
        if (v311 == v306)
        {
          uint64_t v96 = v308;
          if (v283 == v311)
          {
            int v130 = (*(uint64_t (**)(unint64_t))(v291 + 48))((v274 + v128) & v323);
LABEL_251:
            unint64_t v93 = v89;
            goto LABEL_252;
          }
          uint64_t v161 = (unint64_t *)((v296 + v129) & 0xFFFFFFFFFFFFFFF8);
          if (v267 > 0x7FFFFFFE)
          {
            int v130 = (*(uint64_t (**)(unint64_t))(v326 + 48))(((unint64_t)v161 + v264) & v299);
            goto LABEL_251;
          }
          unint64_t v162 = *v161;
          if (v162 >= 0xFFFFFFFF) {
            LODWORD(v162) = -1;
          }
          BOOL v163 = (v162 + 1) >= 2;
          unint64_t v93 = v89;
        }
        else
        {
          unint64_t v93 = v89;
          unint64_t v146 = v89 + v129;
          uint64_t v96 = v308;
          if ((v46 & 0x80000000) == 0)
          {
            unint64_t v147 = *(void *)(v146 + 8);
            if (v147 >= 0xFFFFFFFF) {
              LODWORD(v147) = -1;
            }
            int v130 = v147 + 1;
LABEL_252:
            uint64_t v94 = AssociatedTypeWitness;
            unint64_t v95 = v56;
            if (v130) {
              goto LABEL_265;
            }
            goto LABEL_253;
          }
          uint64_t v176 = (v285 + ((v330 + v146) & v318)) & v333;
          if (v253 > 0x7FFFFFFD)
          {
            int v130 = (*(uint64_t (**)(uint64_t))(v278 + 48))(v176);
            goto LABEL_251;
          }
          unint64_t v252 = *(void *)(((v277 + ((v276 + v176) & v333)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v252 >= 0xFFFFFFFF) {
            LODWORD(v252) = -1;
          }
          BOOL v163 = (v252 + 1) >= 2;
        }
        uint64_t v94 = AssociatedTypeWitness;
        unint64_t v95 = v56;
        if (v163) {
          goto LABEL_265;
        }
LABEL_254:
        unint64_t v190 = v93;
        v90((unsigned __int8 *)v91, v303);
        v90((unsigned __int8 *)v128, v303);
        (*(void (**)(unint64_t, uint64_t))(v291 + 8))(v129, v290);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v326 + 8))((v264 + ((v296 + v129) & 0xFFFFFFFFFFFFFFF8)) & v299, v286);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v191 = (v330 + v190 + v129) & v318;
        unint64_t v192 = *(void (**)(uint64_t, uint64_t))(v278 + 8);
        v192((v285 + v191) & v333, v279);
        uint64_t v193 = (v276 + ((v285 + v191) & v333)) & v333;
        v192(v193, v279);
        swift_bridgeObjectRelease();
        unint64_t v194 = (v271
              + ((((((v277 + v193) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v333;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v278 + 48))(v194, 1, v279)) {
          v192(v194, v279);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        size_t v195 = (uint64_t *)((((((v272 + v194) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v196 = v195[1];
        if ((v196 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v195, v196);
        }
        swift_bridgeObjectRelease();
        unint64_t v197 = v191 + v258;
        unint64_t v198 = *(void **)(v191 + v258 + 16);
        LODWORD(v199) = -1;
        if ((unint64_t)v198 < 0xFFFFFFFF) {
          uint64_t v199 = *(void *)(v191 + v258 + 16);
        }
        uint64_t v96 = v308;
        if ((int)v199 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v197 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v197 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v197 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v95 = v56;
LABEL_265:
        unint64_t v200 = (v91 + v96 + v95) & v314;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v336 + 48))(v200, 1, v94)) {
          (*(void (**)(unint64_t, uint64_t))(v336 + 8))(v200, v94);
        }
        unint64_t v201 = (v269 + v200) & v316;
        if (v284 == v294)
        {
          if ((*(unsigned int (**)(unint64_t))(v293 + 48))(v201)) {
            goto LABEL_278;
          }
LABEL_276:
          uint64_t v202 = (uint64_t *)((v295 + v201) & 0xFFFFFFFFFFFFFFF8);
LABEL_277:
          (*(void (**)(unint64_t, uint64_t))(v293 + 8))(v201, v292);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v282 + 8))(((unint64_t)v202 + v280) & v313, v281);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_278;
        }
        uint64_t v202 = (uint64_t *)((v295 + v201) & 0xFFFFFFFFFFFFFFF8);
        if (v268 > 0x7FFFFFFE)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v282 + 48))(((unint64_t)v202 + v280) & v313, v254, v281))
          {
            goto LABEL_278;
          }
          goto LABEL_276;
        }
        uint64_t v203 = *v202;
        if ((unint64_t)*v202 >= 0xFFFFFFFF) {
          LODWORD(v203) = -1;
        }
        if ((v203 + 1) < 2) {
          goto LABEL_277;
        }
LABEL_278:
        unint64_t v204 = v201 + v335;
LABEL_339:
        unint64_t v189 = v204 + 15;
        goto LABEL_340;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v304 + 8))(a1, v303);
        unint64_t v97 = (unint64_t)&a1[v60] & v314;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v336 + 48))(v97, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v336 + 8))(v97, AssociatedTypeWitness); {
        unint64_t v98 = (v269 + v97) & v316;
        }
        if (v284 == v294)
        {
          if ((*(unsigned int (**)(unint64_t))(v293 + 48))(v98)) {
            goto LABEL_184;
          }
LABEL_182:
          unint64_t v131 = (uint64_t *)((v295 + v98) & 0xFFFFFFFFFFFFFFF8);
LABEL_183:
          (*(void (**)(unint64_t, uint64_t))(v293 + 8))(v98, v292);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v282 + 8))(((unint64_t)v131 + v280) & v313, v281);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_184;
        }
        unint64_t v131 = (uint64_t *)((v295 + v98) & 0xFFFFFFFFFFFFFFF8);
        if (v268 > 0x7FFFFFFE)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v282 + 48))(((unint64_t)v131 + v280) & v313, v254, v281))
          {
            goto LABEL_184;
          }
          goto LABEL_182;
        }
        uint64_t v132 = *v131;
        if ((unint64_t)*v131 >= 0xFFFFFFFF) {
          LODWORD(v132) = -1;
        }
        if ((v132 + 1) < 2) {
          goto LABEL_183;
        }
LABEL_184:
        unint64_t v148 = v98 + v335;
        goto LABEL_202;
      case 3u:
        uint64_t v300 = v69;
        uint64_t v265 = v32;
        uint64_t v327 = v27;
        uint64_t v334 = ~v10;
        unint64_t v99 = v33;
        unint64_t v259 = v68;
        uint64_t v100 = *(void (**)(unsigned __int8 *, uint64_t))(v304 + 8);
        v100(a1, v303);
        unint64_t v101 = (unint64_t)&a1[v55] & v80;
        if (v307 == v306)
        {
          int v102 = (*(uint64_t (**)(unint64_t))(v304 + 48))(v101);
LABEL_280:
          unint64_t v149 = v99;
LABEL_281:
          if (v102) {
            goto LABEL_358;
          }
          unint64_t v133 = (v273 + v101) & v320;
          unint64_t v134 = (v274 + v133) & v323;
          goto LABEL_283;
        }
        unint64_t v133 = (v273 + v101) & v320;
        unint64_t v134 = (v274 + v133) & v323;
        if (v311 == v306)
        {
          if (v283 == v311)
          {
            int v102 = (*(uint64_t (**)(unint64_t))(v291 + 48))((v274 + v133) & v323);
            goto LABEL_280;
          }
          int v164 = (unint64_t *)((v296 + v134) & 0xFFFFFFFFFFFFFFF8);
          if (v267 > 0x7FFFFFFE)
          {
            int v102 = (*(uint64_t (**)(unint64_t))(v327 + 48))(((unint64_t)v164 + v265) & v300);
            goto LABEL_280;
          }
          unint64_t v165 = *v164;
          if (v165 >= 0xFFFFFFFF) {
            LODWORD(v165) = -1;
          }
          BOOL v166 = (v165 + 1) >= 2;
          unint64_t v149 = v99;
        }
        else
        {
          unint64_t v149 = v99;
          unint64_t v150 = v99 + v134;
          if ((v46 & 0x80000000) == 0)
          {
            unint64_t v151 = *(void *)(v150 + 8);
            if (v151 >= 0xFFFFFFFF) {
              LODWORD(v151) = -1;
            }
            int v102 = v151 + 1;
            goto LABEL_281;
          }
          uint64_t v173 = (v285 + ((v330 + v150) & v318)) & v334;
          if (v253 > 0x7FFFFFFD)
          {
            int v102 = (*(uint64_t (**)(uint64_t))(v278 + 48))(v173);
            goto LABEL_280;
          }
          unint64_t v251 = *(void *)(((v277 + ((v276 + v173) & v334)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v251 >= 0xFFFFFFFF) {
            LODWORD(v251) = -1;
          }
          BOOL v166 = (v251 + 1) >= 2;
        }
        if (v166) {
          goto LABEL_358;
        }
LABEL_283:
        unint64_t v205 = v149;
        v100((unsigned __int8 *)v101, v303);
        v100((unsigned __int8 *)v133, v303);
        (*(void (**)(unint64_t, uint64_t))(v291 + 8))(v134, v290);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v327 + 8))((v265 + ((v296 + v134) & 0xFFFFFFFFFFFFFFF8)) & v300, v286);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v206 = (v330 + v205 + v134) & v318;
        char v207 = *(void (**)(uint64_t, uint64_t))(v278 + 8);
        v207((v285 + v206) & v334, v279);
        uint64_t v208 = (v276 + ((v285 + v206) & v334)) & v334;
        v207(v208, v279);
        swift_bridgeObjectRelease();
        unint64_t v209 = (v271
              + ((((((v277 + v208) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v334;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v278 + 48))(v209, 1, v279)) {
          v207(v209, v279);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v210 = (uint64_t *)((((((v272 + v209) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v211 = v210[1];
        if ((v211 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v210, v211);
        }
        swift_bridgeObjectRelease();
        unint64_t v212 = v206 + v259;
        unint64_t v213 = *(void **)(v206 + v259 + 16);
        LODWORD(v214) = -1;
        if ((unint64_t)v213 < 0xFFFFFFFF) {
          uint64_t v214 = *(void *)(v206 + v259 + 16);
        }
        if ((int)v214 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v212 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v212 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v212 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        goto LABEL_358;
      case 4u:
      case 5u:
      case 7u:
        uint64_t v82 = *(void (**)(unsigned __int8 *, uint64_t))(v304 + 8);
        uint64_t v83 = a1;
        uint64_t v84 = v303;
        goto LABEL_125;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v304 + 8))(a1, v303);
        unint64_t v103 = (unint64_t)&a1[v53] & v81;
        if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v261 + 48))(v103, 1, v45)) {
          return;
        }
        uint64_t v82 = *(void (**)(unsigned __int8 *, uint64_t))(v261 + 8);
        uint64_t v83 = (unsigned __int8 *)v103;
        uint64_t v84 = v45;
        goto LABEL_170;
      default:
        uint64_t v298 = v69;
        uint64_t v263 = v32;
        uint64_t v325 = v27;
        uint64_t v332 = ~v10;
        unint64_t v85 = v33;
        unint64_t v257 = v68;
        int v86 = *(void (**)(unsigned __int8 *, uint64_t))(v304 + 8);
        v86(a1, v303);
        unint64_t v87 = (unint64_t)&a1[v55] & v80;
        if (v307 == v306)
        {
          int v88 = (*(uint64_t (**)(unint64_t))(v304 + 48))(v87);
LABEL_236:
          unint64_t v179 = v56;
          if (v88) {
            goto LABEL_249;
          }
          unint64_t v126 = (v273 + v87) & v320;
          unint64_t v127 = (v274 + v126) & v323;
          goto LABEL_238;
        }
        unint64_t v126 = (v273 + v87) & v320;
        unint64_t v127 = (v274 + v126) & v323;
        if (v311 == v306)
        {
          if (v283 == v311)
          {
            int v88 = (*(uint64_t (**)(unint64_t))(v291 + 48))((v274 + v126) & v323);
            goto LABEL_236;
          }
          int v159 = (unint64_t *)((v296 + v127) & 0xFFFFFFFFFFFFFFF8);
          if (v267 > 0x7FFFFFFE)
          {
            int v88 = (*(uint64_t (**)(unint64_t))(v325 + 48))(((unint64_t)v159 + v263) & v298);
            goto LABEL_236;
          }
          unint64_t v160 = *v159;
        }
        else
        {
          unint64_t v144 = v85 + v127;
          if ((v46 & 0x80000000) == 0)
          {
            unint64_t v145 = *(void *)(v144 + 8);
            if (v145 >= 0xFFFFFFFF) {
              LODWORD(v145) = -1;
            }
            int v88 = v145 + 1;
            goto LABEL_236;
          }
          uint64_t v175 = (v285 + ((v330 + v144) & v318)) & v332;
          if (v253 > 0x7FFFFFFD)
          {
            int v88 = (*(uint64_t (**)(uint64_t))(v278 + 48))(v175);
            goto LABEL_236;
          }
          unint64_t v160 = *(void *)(((v277 + ((v276 + v175) & v332)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v160 >= 0xFFFFFFFF) {
          LODWORD(v160) = -1;
        }
        BOOL v163 = (v160 + 1) >= 2;
        unint64_t v179 = v56;
        if (!v163)
        {
LABEL_238:
          v86((unsigned __int8 *)v87, v303);
          v86((unsigned __int8 *)v126, v303);
          (*(void (**)(unint64_t, uint64_t))(v291 + 8))(v127, v290);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v325 + 8))((v263 + ((v296 + v127) & 0xFFFFFFFFFFFFFFF8)) & v298, v286);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v180 = (v330 + v85 + v127) & v318;
          unint64_t v181 = *(void (**)(unint64_t, uint64_t))(v278 + 8);
          v181((v285 + v180) & v332, v279);
          unint64_t v182 = (v276 + ((v285 + v180) & v332)) & v332;
          v181(v182, v279);
          swift_bridgeObjectRelease();
          unint64_t v183 = (v271
                + ((((((v277 + v182) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v332;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v278 + 48))(v183, 1, v279)) {
            v181(v183, v279);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v184 = (uint64_t *)((((((v272 + v183) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v185 = v184[1];
          if ((v185 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v184, v185);
          }
          swift_bridgeObjectRelease();
          unint64_t v186 = v180 + v257;
          long long v187 = *(void **)(v180 + v257 + 16);
          LODWORD(v188) = -1;
          if ((unint64_t)v187 < 0xFFFFFFFF) {
            uint64_t v188 = *(void *)(v180 + v257 + 16);
          }
          if ((int)v188 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v186 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v186 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v186 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          unint64_t v179 = v56;
        }
LABEL_249:
        unint64_t v189 = v87 + v179;
        break;
    }
    goto LABEL_340;
  }
  unsigned int v74 = a1[v36];
  unsigned int v75 = v74 - 8;
  if (v74 < 8)
  {
    uint64_t v77 = AssociatedTypeWitness;
    uint64_t v78 = v297;
  }
  else
  {
    if (v36 <= 3) {
      uint64_t v76 = v36;
    }
    else {
      uint64_t v76 = 4;
    }
    uint64_t v77 = AssociatedTypeWitness;
    uint64_t v78 = v297;
    switch(v76)
    {
      case 1:
        int v79 = *a1;
        if (v36 < 4) {
          goto LABEL_120;
        }
        goto LABEL_122;
      case 2:
        int v79 = *(unsigned __int16 *)a1;
        if (v36 >= 4) {
          goto LABEL_122;
        }
        goto LABEL_120;
      case 3:
        int v79 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v36 < 4) {
          goto LABEL_120;
        }
        goto LABEL_122;
      case 4:
        int v79 = *(_DWORD *)a1;
        if (v36 < 4) {
LABEL_120:
        }
          unsigned int v74 = (v79 | (v75 << (8 * v36))) + 8;
        else {
LABEL_122:
        }
          unsigned int v74 = v79 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v301 = v69;
  uint64_t v104 = ~v78;
  uint64_t v105 = ~v39;
  uint64_t v106 = ~v10;
  switch(v74)
  {
    case 1u:
      uint64_t v266 = v32;
      uint64_t v328 = v27;
      uint64_t v111 = v77;
      unint64_t v112 = v33;
      unint64_t v260 = v68;
      unint64_t v113 = *(void (**)(unsigned __int8 *, uint64_t))(v336 + 8);
      v113(a1, v111);
      unint64_t v114 = (unint64_t)&a1[v287] & v104;
      if (v331 == v288)
      {
        int v115 = (*(uint64_t (**)(unint64_t))(v336 + 48))(v114);
LABEL_311:
        if (v115) {
          goto LABEL_324;
        }
        unint64_t v137 = (v275 + v114) & v314;
        unint64_t v138 = (v329 + v137) & v316;
        goto LABEL_313;
      }
      unint64_t v137 = (v275 + v114) & v314;
      unint64_t v138 = (v329 + v137) & v316;
      if (v294 == v288)
      {
        if (v284 == v294)
        {
          int v115 = (*(uint64_t (**)(unint64_t))(v293 + 48))((v329 + v137) & v316);
          goto LABEL_311;
        }
        unint64_t v169 = (unint64_t *)((v295 + v138) & 0xFFFFFFFFFFFFFFF8);
        if (v268 > 0x7FFFFFFE)
        {
          int v115 = (*(uint64_t (**)(unint64_t))(v282 + 48))(((unint64_t)v169 + v280) & v313);
          goto LABEL_311;
        }
        unint64_t v170 = *v169;
      }
      else
      {
        unint64_t v154 = v335 + v138;
        if ((v255 & 0x80000000) == 0)
        {
          unint64_t v155 = *(void *)(v154 + 8);
          if (v155 >= 0xFFFFFFFF) {
            LODWORD(v155) = -1;
          }
          int v115 = v155 + 1;
          goto LABEL_311;
        }
        uint64_t v178 = (v285 + ((v330 + v154) & v318)) & v106;
        if (v253 > 0x7FFFFFFD)
        {
          int v115 = (*(uint64_t (**)(uint64_t))(v278 + 48))(v178);
          goto LABEL_311;
        }
        unint64_t v170 = *(void *)(((v277 + ((v276 + v178) & v106)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v170 >= 0xFFFFFFFF) {
        LODWORD(v170) = -1;
      }
      if ((v170 + 1) >= 2)
      {
LABEL_324:
        unint64_t v235 = (v114 + v338 + v289) & v320;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v304 + 48))(v235, 1, v303)) {
          (*(void (**)(unint64_t, uint64_t))(v304 + 8))(v235, v303);
        }
        unint64_t v236 = (v270 + v235) & v323;
        if (v283 == v311)
        {
          int v237 = (*(uint64_t (**)(unint64_t))(v291 + 48))(v236);
        }
        else
        {
          long long v238 = (uint64_t *)((v296 + v236) & 0xFFFFFFFFFFFFFFF8);
          if (v267 <= 0x7FFFFFFE)
          {
            uint64_t v239 = *v238;
            if ((unint64_t)*v238 >= 0xFFFFFFFF) {
              LODWORD(v239) = -1;
            }
            BOOL v163 = (v239 + 1) >= 2;
            unint64_t v240 = v112;
            if (v163) {
              goto LABEL_338;
            }
            goto LABEL_337;
          }
          int v237 = (*(uint64_t (**)(unint64_t))(v328 + 48))(((unint64_t)v238 + v266) & v301);
        }
        unint64_t v240 = v112;
        if (v237)
        {
LABEL_338:
          unint64_t v204 = v236 + v240;
          goto LABEL_339;
        }
        long long v238 = (uint64_t *)((v296 + v236) & 0xFFFFFFFFFFFFFFF8);
LABEL_337:
        (*(void (**)(unint64_t, uint64_t))(v291 + 8))(v236, v290);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v328 + 8))(((unint64_t)v238 + v266) & v301, v286);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v240 = v112;
        goto LABEL_338;
      }
LABEL_313:
      v113((unsigned __int8 *)v114, AssociatedTypeWitness);
      v113((unsigned __int8 *)v137, AssociatedTypeWitness);
      (*(void (**)(unint64_t, uint64_t))(v293 + 8))(v138, v292);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v282 + 8))((v280 + ((v295 + v138) & 0xFFFFFFFFFFFFFFF8)) & v313, v281);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v225 = (v330 + v335 + v138) & v318;
      unint64_t v226 = (v285 + v225) & v106;
      uint64_t v227 = *(void (**)(unint64_t, uint64_t))(v278 + 8);
      v227(v226, v279);
      unint64_t v228 = (v276 + v226) & v106;
      v227(v228, v279);
      swift_bridgeObjectRelease();
      unint64_t v229 = (v271
            + ((((((v277 + v228) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v106;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v278 + 48))(v229, 1, v279)) {
        v227(v229, v279);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v230 = (uint64_t *)((((((v272 + v229) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v231 = v230[1];
      if ((v231 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v230, v231);
      }
      swift_bridgeObjectRelease();
      unint64_t v232 = v260 + v225;
      unint64_t v233 = *(void **)(v232 + 16);
      LODWORD(v234) = -1;
      if ((unint64_t)v233 < 0xFFFFFFFF) {
        uint64_t v234 = *(void *)(v232 + 16);
      }
      if ((int)v234 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v232 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_24D466534(*(void *)((((v232 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v232 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      goto LABEL_324;
    case 2u:
      uint64_t v116 = v32;
      uint64_t v117 = v27;
      unint64_t v118 = v33;
      (*(void (**)(unsigned __int8 *, uint64_t))(v336 + 8))(a1, v77);
      unint64_t v119 = (unint64_t)&a1[v256] & v320;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v304 + 48))(v119, 1, v303)) {
        (*(void (**)(unint64_t, uint64_t))(v304 + 8))(v119, v303);
      }
      unint64_t v120 = (v270 + v119) & v323;
      if (v283 == v311)
      {
        int v121 = (*(uint64_t (**)(unint64_t))(v291 + 48))(v120);
      }
      else
      {
        long long v139 = (uint64_t *)((v296 + v120) & 0xFFFFFFFFFFFFFFF8);
        if (v267 <= 0x7FFFFFFE)
        {
          uint64_t v140 = *v139;
          if ((unint64_t)*v139 >= 0xFFFFFFFF) {
            LODWORD(v140) = -1;
          }
          BOOL v163 = (v140 + 1) >= 2;
          unint64_t v141 = v118;
          if (v163)
          {
LABEL_201:
            unint64_t v148 = v141 + v120;
LABEL_202:
            unint64_t v156 = *(void **)(v148 + 8);
            goto LABEL_341;
          }
LABEL_200:
          (*(void (**)(unint64_t, uint64_t))(v291 + 8))(v120, v290);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v117 + 8))(((unint64_t)v139 + v116) & v301, v286);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v141 = v118;
          goto LABEL_201;
        }
        int v121 = (*(uint64_t (**)(unint64_t))(v117 + 48))(((unint64_t)v139 + v116) & v301);
      }
      unint64_t v141 = v118;
      if (v121) {
        goto LABEL_201;
      }
      long long v139 = (uint64_t *)((v296 + v120) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_200;
    case 3u:
      unint64_t v122 = v68;
      long long v123 = *(void (**)(unsigned __int8 *, uint64_t))(v336 + 8);
      v123(a1, v77);
      unint64_t v124 = (unint64_t)&a1[v287] & v104;
      if (v331 == v288)
      {
        int v125 = (*(uint64_t (**)(unint64_t))(v336 + 48))(v124);
LABEL_345:
        if (v125) {
          goto LABEL_358;
        }
        unint64_t v142 = (v275 + v124) & v314;
        unint64_t v143 = (v329 + v142) & v316;
        goto LABEL_347;
      }
      unint64_t v142 = (v275 + v124) & v314;
      unint64_t v143 = (v329 + v142) & v316;
      if (v294 == v288)
      {
        if (v284 == v294)
        {
          int v125 = (*(uint64_t (**)(unint64_t))(v293 + 48))((v329 + v142) & v316);
          goto LABEL_345;
        }
        unint64_t v171 = (unint64_t *)((v295 + v143) & 0xFFFFFFFFFFFFFFF8);
        if (v268 > 0x7FFFFFFE)
        {
          int v125 = (*(uint64_t (**)(unint64_t))(v282 + 48))(((unint64_t)v171 + v280) & v313);
          goto LABEL_345;
        }
        unint64_t v172 = *v171;
      }
      else
      {
        unint64_t v157 = v335 + v143;
        if ((v255 & 0x80000000) == 0)
        {
          unint64_t v158 = *(void *)(v157 + 8);
          if (v158 >= 0xFFFFFFFF) {
            LODWORD(v158) = -1;
          }
          int v125 = v158 + 1;
          goto LABEL_345;
        }
        uint64_t v174 = (v285 + ((v330 + v157) & v318)) & v106;
        if (v253 > 0x7FFFFFFD)
        {
          int v125 = (*(uint64_t (**)(uint64_t))(v278 + 48))(v174);
          goto LABEL_345;
        }
        unint64_t v172 = *(void *)(((v277 + ((v276 + v174) & v106)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v172 >= 0xFFFFFFFF) {
        LODWORD(v172) = -1;
      }
      if ((v172 + 1) < 2)
      {
LABEL_347:
        v123((unsigned __int8 *)v124, v77);
        v123((unsigned __int8 *)v142, v77);
        (*(void (**)(unint64_t, uint64_t))(v293 + 8))(v143, v292);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v282 + 8))((v280 + ((v295 + v143) & 0xFFFFFFFFFFFFFFF8)) & v313, v281);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v241 = (v330 + v335 + v143) & v318;
        unint64_t v242 = (v285 + v241) & v106;
        int v243 = *(void (**)(unint64_t, uint64_t))(v278 + 8);
        v243(v242, v279);
        unint64_t v244 = (v276 + v242) & v106;
        v243(v244, v279);
        swift_bridgeObjectRelease();
        unint64_t v245 = (v271
              + ((((((v277 + v244) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v106;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v278 + 48))(v245, 1, v279)) {
          v243(v245, v279);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v246 = (uint64_t *)((((((v272 + v245) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v247 = v246[1];
        if ((v247 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v246, v247);
        }
        swift_bridgeObjectRelease();
        unint64_t v248 = v122 + v241;
        long long v249 = *(void **)(v122 + v241 + 16);
        LODWORD(v250) = -1;
        if ((unint64_t)v249 < 0xFFFFFFFF) {
          uint64_t v250 = *(void *)(v122 + v241 + 16);
        }
        if ((int)v250 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v248 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v248 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v248 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      }
LABEL_358:
      swift_bridgeObjectRelease();
      return;
    case 4u:
    case 5u:
    case 7u:
      uint64_t v82 = *(void (**)(unsigned __int8 *, uint64_t))(v336 + 8);
      uint64_t v83 = a1;
      uint64_t v84 = v77;
LABEL_125:
      goto LABEL_127;
    case 6u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v336 + 8))(a1, v77);
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v262 + 48))((unint64_t)&a1[v40] & v105, 1, v324))
      {
        return;
      }
      uint64_t v82 = *(void (**)(unsigned __int8 *, uint64_t))(v262 + 8);
      uint64_t v83 = (unsigned __int8 *)((unint64_t)&a1[v40] & v105);
      uint64_t v84 = v324;
LABEL_170:
LABEL_127:
      v82(v83, v84);
      return;
    default:
      unint64_t v107 = v68;
      uint64_t v108 = *(void (**)(unsigned __int8 *, uint64_t))(v336 + 8);
      v108(a1, v77);
      unint64_t v109 = (unint64_t)&a1[v287] & v104;
      if (v331 == v288)
      {
        int v110 = (*(uint64_t (**)(unint64_t))(v336 + 48))(v109);
LABEL_296:
        if (v110) {
          goto LABEL_309;
        }
        unint64_t v135 = (v275 + v109) & v314;
        unint64_t v136 = (v329 + v135) & v316;
        goto LABEL_298;
      }
      unint64_t v135 = (v275 + v109) & v314;
      unint64_t v136 = (v329 + v135) & v316;
      if (v294 == v288)
      {
        if (v284 == v294)
        {
          int v110 = (*(uint64_t (**)(unint64_t))(v293 + 48))((v329 + v135) & v316);
          goto LABEL_296;
        }
        size_t v167 = (unint64_t *)((v295 + v136) & 0xFFFFFFFFFFFFFFF8);
        if (v268 > 0x7FFFFFFE)
        {
          int v110 = (*(uint64_t (**)(unint64_t))(v282 + 48))(((unint64_t)v167 + v280) & v313);
          goto LABEL_296;
        }
        unint64_t v168 = *v167;
      }
      else
      {
        unint64_t v152 = v335 + v136;
        if ((v255 & 0x80000000) == 0)
        {
          unint64_t v153 = *(void *)(v152 + 8);
          if (v153 >= 0xFFFFFFFF) {
            LODWORD(v153) = -1;
          }
          int v110 = v153 + 1;
          goto LABEL_296;
        }
        uint64_t v177 = (v285 + ((v330 + v152) & v318)) & v106;
        if (v253 > 0x7FFFFFFD)
        {
          int v110 = (*(uint64_t (**)(uint64_t))(v278 + 48))(v177);
          goto LABEL_296;
        }
        unint64_t v168 = *(void *)(((v277 + ((v276 + v177) & v106)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v168 >= 0xFFFFFFFF) {
        LODWORD(v168) = -1;
      }
      if ((v168 + 1) >= 2)
      {
LABEL_309:
        unint64_t v189 = v109 + v289;
LABEL_340:
        unint64_t v156 = *(void **)(((v189 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_341:

        return;
      }
LABEL_298:
      v108((unsigned __int8 *)v109, v77);
      v108((unsigned __int8 *)v135, v77);
      (*(void (**)(unint64_t, uint64_t))(v293 + 8))(v136, v292);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v282 + 8))((v280 + ((v295 + v136) & 0xFFFFFFFFFFFFFFF8)) & v313, v281);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v215 = (v330 + v335 + v136) & v318;
      unint64_t v216 = (v285 + v215) & v106;
      unint64_t v217 = *(void (**)(unint64_t, uint64_t))(v278 + 8);
      v217(v216, v279);
      unint64_t v218 = (v276 + v216) & v106;
      v217(v218, v279);
      swift_bridgeObjectRelease();
      unint64_t v219 = (v271
            + ((((((v277 + v218) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v106;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v278 + 48))(v219, 1, v279)) {
        v217(v219, v279);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v220 = (uint64_t *)((((((v272 + v219) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v221 = v220[1];
      if ((v221 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v220, v221);
      }
      swift_bridgeObjectRelease();
      unint64_t v222 = v107 + v215;
      uint64_t v223 = *(void **)(v107 + v215 + 16);
      LODWORD(v224) = -1;
      if ((unint64_t)v223 < 0xFFFFFFFF) {
        uint64_t v224 = *(void *)(v107 + v215 + 16);
      }
      if ((int)v224 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v222 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_24D466534(*(void *)((((v222 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v222 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      goto LABEL_309;
  }
}

uint64_t sub_24D9D7860(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v961 = *(void *)(v4 + 64);
  uint64_t v963 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v923 = v3;
  uint64_t v880 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v880 - 8);
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v868 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v868 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 | v8 | 7;
  uint64_t v888 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v888 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = v9 | v963 | v11;
  uint64_t v901 = v4;
  uint64_t v881 = v5;
  uint64_t v869 = v7;
  unsigned int v14 = *(_DWORD *)(v7 + 84);
  unsigned int v836 = v14;
  unsigned int v871 = *(_DWORD *)(v5 + 84);
  if (v871 > v14) {
    unsigned int v14 = *(_DWORD *)(v5 + 84);
  }
  unsigned int v857 = v14;
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  unsigned int v943 = *(_DWORD *)(v4 + 84);
  unsigned int v883 = v14;
  if (v14 <= v943) {
    unsigned int v14 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v865 = *(void *)(v888 - 8);
  unsigned int v15 = *(_DWORD *)(v10 + 84);
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  unsigned int v929 = v16;
  if (v14 <= v16) {
    unsigned int v14 = v16;
  }
  unsigned int v838 = v14;
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  unsigned int v876 = v14;
  unsigned int v890 = v15;
  uint64_t v885 = v961 + v963;
  uint64_t v917 = v9;
  uint64_t v886 = v961 + v9;
  uint64_t v887 = *(void *)(v5 + 64) + 7;
  uint64_t v867 = v8 + 8;
  uint64_t v921 = v8;
  uint64_t v860 = *(void *)(v7 + 64) + 7;
  size_t v950 = ((((v860 + ((v8 + 8 + (v887 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v911 = v11 | 7;
  uint64_t v940 = v12 + 16;
  uint64_t v872 = v11 + 12;
  size_t v17 = *(void *)(*(void *)(v888 - 8) + 64);
  size_t v864 = v17 + v11;
  size_t v831 = v17 + 12;
  unint64_t v18 = (v11
       + 10
       + ((((((v17 + 12 + ((v17 + v11 + ((v11 + 12) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  size_t v889 = v17;
  if (!v15) {
    ++v17;
  }
  size_t v891 = v17;
  unint64_t v892 = v18;
  size_t v862 = v17 + 7;
  uint64_t v863 = v11 + 10;
  unint64_t v939 = ((((((((((v17 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v877 = (v12 + 16 + v950 + ((v961 + v9 + ((v961 + v963) & ~v963)) & ~v9)) & ~v12;
  uint64_t v893 = v9 | v963 | v11;
  unint64_t v874 = v13 + v961;
  unint64_t v859 = ((((v877 + v939 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v19 = v859 + ((v13 + v961) & ~v13);
  unint64_t v907 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)(a3 + 24);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v903 = v21;
  unint64_t v904 = (v19 + v23) & ~v23;
  uint64_t v899 = v22;
  unsigned int v24 = *(_DWORD *)(v22 + 84);
  unint64_t v25 = *(void *)(v22 + 64);
  if (v24) {
    size_t v26 = *(void *)(v22 + 64);
  }
  else {
    size_t v26 = v25 + 1;
  }
  size_t v935 = v26;
  uint64_t v878 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v878 - 8);
  int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v866 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v866 - 8);
  uint64_t v30 = v27;
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = v28 | v31 | 7;
  uint64_t v879 = v27;
  unsigned int v33 = *(_DWORD *)(v29 + 84);
  unsigned int v835 = v33;
  unsigned int v870 = *(_DWORD *)(v27 + 84);
  if (v870 > v33) {
    unsigned int v33 = *(_DWORD *)(v27 + 84);
  }
  unsigned int v856 = v33;
  if (v33 <= 0x7FFFFFFE) {
    unsigned int v34 = 2147483646;
  }
  else {
    unsigned int v34 = v33;
  }
  uint64_t v35 = *(void *)(v30 + 64) + 7;
  uint64_t v36 = v31 + 8;
  uint64_t v37 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
  unint64_t v38 = ((((v37 + ((v31 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v39 = ((((((v935 + v32 + v904) & ~v32) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v845 = v961 + v23;
  size_t v861 = v935 + v32;
  uint64_t v40 = *(void *)(v923 - 8);
  uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v839 = v961 + v41;
  size_t v42 = *(void *)(v40 + 64);
  if (!*(_DWORD *)(v40 + 84)) {
    ++v42;
  }
  size_t v832 = v42;
  unint64_t v43 = ((v961 + v41) & ~v41) + v42;
  unint64_t v44 = ((v907 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v961 > v44) {
    unint64_t v44 = v961;
  }
  if (v39 <= v38 + ((v935 + v32 + ((v961 + v23) & ~v23)) & ~v32) + 16) {
    unint64_t v39 = v38 + ((v935 + v32 + ((v961 + v23) & ~v23)) & ~v32) + 16;
  }
  if (((v907 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v43) {
    unint64_t v43 = ((v907 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v44 > v39) {
    unint64_t v39 = v44;
  }
  if (v39 <= v43) {
    unint64_t v45 = v43;
  }
  else {
    unint64_t v45 = v39;
  }
  uint64_t v46 = v11;
  uint64_t v47 = v23 | v11 | v32;
  unsigned int v882 = v34;
  unsigned int v875 = v24;
  if (v34 <= v24) {
    unsigned int v48 = v24;
  }
  else {
    unsigned int v48 = v34;
  }
  if (v48 <= v929) {
    unsigned int v48 = v929;
  }
  unsigned int v837 = v48;
  if (v48 <= 0x7FFFFFFF) {
    unsigned int v48 = 0x7FFFFFFF;
  }
  unsigned int v873 = v48;
  uint64_t v930 = v23;
  uint64_t v905 = v25 + v23;
  if (v943) {
    size_t v49 = v961;
  }
  else {
    size_t v49 = v961 + 1;
  }
  uint64_t v850 = v20;
  uint64_t v50 = v9;
  uint64_t v51 = *(void *)(v20 - 8);
  uint64_t v52 = *(unsigned __int8 *)(v51 + 80);
  uint64_t v884 = v25 + v32;
  unint64_t v53 = (v940 + v38 + ((v25 + v32 + ((v25 + v23) & ~v23)) & ~v32)) & ~v911;
  unint64_t v54 = v47 + v25;
  unint64_t v858 = ((((v53 + v939 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v55 = v858 + ((v47 + v25) & ~v47);
  uint64_t v56 = v963;
  size_t __n = v49;
  uint64_t v57 = v49 + v9;
  unint64_t v58 = ((((((v49 + v50 + ((v55 + v56) & ~v56)) & ~v50) + v950 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v59 = v25 + v963;
  unint64_t v60 = ((v49 + v50 + ((v25 + v56) & ~v56)) & ~v50) + v950 + 16;
  if (*(_DWORD *)(v51 + 84)) {
    size_t v61 = *(void *)(v51 + 64);
  }
  else {
    size_t v61 = *(void *)(v51 + 64) + 1;
  }
  if (v25 <= ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v62 = ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v62 = v25;
  }
  if (v58 <= v60) {
    unint64_t v63 = v60;
  }
  else {
    unint64_t v63 = v58;
  }
  unint64_t v64 = ((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v65 = v25 + v52;
  if (v64 <= (v65 & ~v52) + v61) {
    unint64_t v64 = (v65 & ~v52) + v61;
  }
  if (v62 <= v63) {
    unint64_t v62 = v63;
  }
  if (v62 <= v64) {
    unint64_t v66 = v64;
  }
  else {
    unint64_t v66 = v62;
  }
  unint64_t v909 = v45;
  if (v66 + 1 <= v45 + 1) {
    unint64_t v67 = v45 + 1;
  }
  else {
    unint64_t v67 = v66 + 1;
  }
  unsigned int v68 = a2[v67];
  unsigned int v69 = v68 - 2;
  if (v68 >= 2)
  {
    if (v67 <= 3) {
      uint64_t v70 = v67;
    }
    else {
      uint64_t v70 = 4;
    }
    switch(v70)
    {
      case 1:
        int v71 = *a2;
        if (v67 < 4) {
          goto LABEL_78;
        }
        goto LABEL_79;
      case 2:
        int v71 = *(unsigned __int16 *)a2;
        if (v67 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_78;
      case 3:
        int v71 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v67 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_78;
      case 4:
        int v71 = *(_DWORD *)a2;
        if (v67 < 4) {
LABEL_78:
        }
          v71 |= v69 << (8 * v67);
LABEL_79:
        unsigned int v68 = v71 + 2;
        break;
      default:
        break;
    }
  }
  unint64_t v962 = v67;
  uint64_t v908 = ~v963;
  uint64_t v72 = ~v917;
  uint64_t v73 = ~v921;
  uint64_t v918 = ~v911;
  size_t v74 = ~v46;
  uint64_t v922 = ~v930;
  uint64_t v75 = ~v32;
  uint64_t v76 = ~v31;
  if (v68 != 1)
  {
    unsigned int v81 = a2[v45];
    unsigned int v82 = v81 - 8;
    if (v81 < 8)
    {
      uint64_t v84 = v901;
      uint64_t v85 = a1;
      uint64_t v86 = v893;
    }
    else
    {
      if (v45 <= 3) {
        uint64_t v83 = v45;
      }
      else {
        uint64_t v83 = 4;
      }
      uint64_t v84 = v901;
      uint64_t v85 = a1;
      uint64_t v86 = v893;
      switch(v83)
      {
        case 1:
          int v87 = *a2;
          if (v45 < 4) {
            goto LABEL_118;
          }
          goto LABEL_122;
        case 2:
          int v87 = *(unsigned __int16 *)a2;
          if (v45 < 4) {
            goto LABEL_118;
          }
          goto LABEL_122;
        case 3:
          int v87 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v45 < 4) {
            goto LABEL_118;
          }
          goto LABEL_122;
        case 4:
          int v87 = *(_DWORD *)a2;
          if (v45 < 4) {
LABEL_118:
          }
            unsigned int v81 = (v87 | (v82 << (8 * v45))) + 8;
          else {
LABEL_122:
          }
            unsigned int v81 = v87 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v120 = ~v86;
    uint64_t v121 = ~v41;
    switch(v81)
    {
      case 1u:
        uint64_t v902 = v75;
        uint64_t v897 = v76;
        uint64_t v848 = v73;
        uint64_t v854 = v35;
        uint64_t v915 = v36;
        uint64_t v843 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
        uint64_t v927 = *(void *)(v866 - 8);
        size_t v967 = v38;
        size_t v834 = ~v46;
        int v125 = *(void (**)(uint64_t))(v84 + 16);
        v125(v85);
        uint64_t v906 = (void *)((v874 + v85) & v120);
        unint64_t v126 = (const void *)((unint64_t)&a2[v874] & v120);
        if (v943 == v876)
        {
          int v127 = (*(uint64_t (**)(const void *))(v84 + 48))(v126);
LABEL_317:
          uint64_t v150 = v72;
LABEL_318:
          if (v127)
          {
LABEL_319:
            v541 = v906;
            memcpy(v906, v126, v859);
            uint64_t v542 = v903;
LABEL_320:
            size_t v543 = v891;
            goto LABEL_387;
          }
          unint64_t v149 = ((unint64_t)v126 + v885) & v908;
          unint64_t v151 = (v886 + v149) & v150;
LABEL_322:
          size_t v948 = v126;
          uint64_t v544 = v150;
          ((void (*)(void *, const void *, uint64_t))v125)(v906, v126, AssociatedTypeWitness);
          unint64_t v545 = ((unint64_t)v906 + v885) & v908;
          ((void (*)(unint64_t, unint64_t, uint64_t))v125)(v545, v149, AssociatedTypeWitness);
          unint64_t v546 = (v886 + v545) & v544;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v881 + 16))(v546, v151, v880);
          v547 = (void *)((v887 + v546) & 0xFFFFFFFFFFFFFFF8);
          v548 = (void *)((v887 + v151) & 0xFFFFFFFFFFFFFFF8);
          void *v547 = *v548;
          unint64_t v549 = ((unint64_t)v547 + v867) & v848;
          unint64_t v550 = ((unint64_t)v548 + v867) & v848;
          v551 = *(void (**)(unint64_t, unint64_t, uint64_t))(v869 + 16);
          swift_bridgeObjectRetain();
          v551(v549, v550, v868);
          v552 = (void *)((v860 + v550) & 0xFFFFFFFFFFFFFFF8);
          v553 = (void *)((v860 + v549) & 0xFFFFFFFFFFFFFFF8);
          void *v553 = *v552;
          v554 = (void *)(((unint64_t)v553 + 15) & 0xFFFFFFFFFFFFFFF8);
          v555 = (void *)(((unint64_t)v552 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v554 = *v555;
          v554[1] = v555[1];
          v556 = (void *)(v950 + v546);
          void *v556 = *(void *)(v950 + v151);
          v556[1] = *(void *)(v950 + v151 + 8);
          size_t v557 = (v940 + v950 + v546) & v918;
          size_t v558 = (v940 + v950 + v151) & v918;
          *(unsigned char *)size_t v557 = *(unsigned char *)v558;
          uint64_t v559 = v557 | 4;
          int v560 = *(_DWORD *)(v558 | 4);
          *(unsigned char *)(v559 + 4) = *(unsigned char *)((v558 | 4) + 4);
          *(_DWORD *)uint64_t v559 = v560;
          *(_WORD *)(v557 + 10) = *(_WORD *)(v558 + 0xA);
          size_t v561 = (v872 + v557) & v834;
          size_t v562 = (v872 + v558) & v834;
          v563 = *(void (**)(size_t, size_t, uint64_t))(v865 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v563(v561, v562, v888);
          size_t v564 = (v864 + v561) & v834;
          size_t v565 = (v864 + v562) & v834;
          v563(v564, v565, v888);
          v566 = (unsigned char *)(v564 + v889);
          unsigned char *v566 = *(unsigned char *)(v565 + v889);
          v566[1] = *(unsigned char *)(v565 + v889 + 1);
          v566[2] = *(unsigned char *)(v565 + v889 + 2);
          v566[3] = *(unsigned char *)(v565 + v889 + 3);
          v566[4] = *(unsigned char *)(v565 + v889 + 4);
          unint64_t v567 = (v564 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v568 = (v565 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v567 = *(void *)v568;
          *(void *)(v567 + 8) = *(void *)(v568 + 8);
          *(unsigned char *)(v567 + 16) = *(unsigned char *)(v568 + 16);
          *(unsigned char *)(v567 + 17) = *(unsigned char *)(v568 + 17);
          *(unsigned char *)(v567 + 18) = *(unsigned char *)(v568 + 18);
          *(unsigned char *)(v567 + 19) = *(unsigned char *)(v568 + 19);
          unint64_t v569 = (v567 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v570 = (v568 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v569 = *(void *)v570;
          *(unsigned char *)(v569 + 8) = *(unsigned char *)(v570 + 8);
          *(unsigned char *)(v569 + 9) = *(unsigned char *)(v570 + 9);
          *(unsigned char *)(v569 + 10) = *(unsigned char *)(v570 + 10);
          *(unsigned char *)(v569 + 11) = *(unsigned char *)(v570 + 11);
          *(unsigned char *)(v569 + 12) = *(unsigned char *)(v570 + 12);
          v571 = (void *)((v568 + 47) & 0xFFFFFFFFFFFFFFF8);
          v572 = (void *)((v567 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v572 = *v571;
          unint64_t v573 = ((unint64_t)v572 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v574 = ((unint64_t)v571 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v573 = *(void *)v574;
          *(unsigned char *)(v573 + 8) = *(unsigned char *)(v574 + 8);
          *(unsigned char *)(v573 + 9) = *(unsigned char *)(v574 + 9);
          v575 = (void *)((v863 + v573) & v834);
          v576 = (const void *)((v863 + v574) & v834);
          v577 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v865 + 48);
          swift_bridgeObjectRetain();
          if (v577(v576, 1, v888))
          {
            memcpy(v575, v576, v891);
          }
          else
          {
            v563((size_t)v575, (size_t)v576, v888);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v865 + 56))(v575, 0, 1, v888);
          }
          v578 = (void *)(((unint64_t)v575 + v862) & 0xFFFFFFFFFFFFFFF8);
          v579 = (void *)(((unint64_t)v576 + v862) & 0xFFFFFFFFFFFFFFF8);
          void *v578 = *v579;
          unint64_t v580 = ((unint64_t)v578 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v581 = ((unint64_t)v579 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v582 = *(void *)v581;
          *(unsigned char *)(v580 + 8) = *(unsigned char *)(v581 + 8);
          *(void *)unint64_t v580 = v582;
          v583 = (void *)(((unint64_t)v578 + 31) & 0xFFFFFFFFFFFFFFF8);
          v584 = (void *)(((unint64_t)v579 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v583 = *v584;
          unint64_t v585 = ((unint64_t)v583 + 15) & 0xFFFFFFFFFFFFFFF8;
          v586 = (uint64_t *)(((unint64_t)v584 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v587 = v586[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v587 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v585 = *(_OWORD *)v586;
          }
          else
          {
            uint64_t v588 = *v586;
            sub_24D3F9C18(*v586, v587);
            *(void *)unint64_t v585 = v588;
            *(void *)(v585 + 8) = v587;
          }
          unint64_t v589 = (v585 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v590 = ((unint64_t)v586 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v591 = *(void *)v590;
          *(unsigned char *)(v589 + 8) = *(unsigned char *)(v590 + 8);
          *(void *)unint64_t v589 = v591;
          *(unsigned char *)(v589 + 9) = *(unsigned char *)(v590 + 9);
          unint64_t v592 = (v589 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v593 = (v590 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v594 = *(_DWORD *)v593;
          *(unsigned char *)(v592 + 4) = *(unsigned char *)(v593 + 4);
          *(_DWORD *)unint64_t v592 = v594;
          v595 = (void *)((v589 + 25) & 0xFFFFFFFFFFFFFFF8);
          v596 = (void *)((v590 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v595 = *v596;
          v595[1] = v596[1];
          unint64_t v597 = v939 + v557;
          unint64_t v598 = v939 + v558;
          unint64_t v599 = *(void *)(v939 + v558 + 16);
          if (v599 >= 0xFFFFFFFF) {
            LODWORD(v599) = -1;
          }
          int v600 = v599 - 1;
          swift_bridgeObjectRetain();
          if (v600 < 0)
          {
            *(void *)unint64_t v597 = *(void *)v598;
            *(unsigned char *)(v597 + 8) = *(unsigned char *)(v598 + 8);
            *(unsigned char *)(v597 + 9) = *(unsigned char *)(v598 + 9);
            id v614 = *(void **)(v598 + 16);
            id v615 = v614;
            *(void *)(v597 + 16) = v614;
            id v616 = *(void **)(v598 + 24);
            id v617 = v616;
            *(void *)(v597 + 24) = v616;
            *(unsigned char *)(v597 + 32) = *(unsigned char *)(v598 + 32);
            *(unsigned char *)(v597 + 33) = *(unsigned char *)(v598 + 33);
            *(unsigned char *)(v597 + 34) = *(unsigned char *)(v598 + 34);
            *(void *)(v597 + 40) = *(void *)(v598 + 40);
            *(void *)(v597 + 48) = *(void *)(v598 + 48);
            *(void *)(v597 + 56) = *(void *)(v598 + 56);
            *(void *)(v597 + 64) = *(void *)(v598 + 64);
            *(unsigned char *)(v597 + 72) = *(unsigned char *)(v598 + 72);
            *(void *)(v597 + 80) = *(void *)(v598 + 80);
            *(void *)(v597 + 88) = *(void *)(v598 + 88);
            uint64_t v957 = *(void **)(v598 + 96);
            *(void *)(v597 + 96) = v957;
            *(unsigned char *)(v597 + 104) = *(unsigned char *)(v598 + 104);
            *(unsigned char *)(v597 + 105) = *(unsigned char *)(v598 + 105);
            *(void *)(v597 + 112) = *(void *)(v598 + 112);
            *(void *)(v597 + 120) = *(void *)(v598 + 120);
            *(void *)(v597 + 128) = *(void *)(v598 + 128);
            *(void *)(v597 + 136) = *(void *)(v598 + 136);
            *(void *)(v597 + 144) = *(void *)(v598 + 144);
            *(void *)(v597 + 152) = *(void *)(v598 + 152);
            *(void *)(v597 + 160) = *(void *)(v598 + 160);
            *(void *)(v597 + 168) = *(void *)(v598 + 168);
            *(unsigned char *)(v597 + 176) = *(unsigned char *)(v598 + 176);
            *(void *)(v597 + 184) = *(void *)(v598 + 184);
            uint64_t v618 = *(void *)(v598 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v619 = v957;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v618)
            {
              *(void *)(v597 + 192) = v618;
              *(void *)(v597 + 200) = *(void *)(v598 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v597 + 192) = *(_OWORD *)(v598 + 192);
            }
            unsigned int v613 = v890;
            uint64_t v542 = v903;
            v541 = v906;
            *(void *)(v597 + 208) = *(void *)(v598 + 208);
            *(void *)(v597 + 216) = *(void *)(v598 + 216);
            *(void *)(v597 + 224) = *(void *)(v598 + 224);
            *(void *)(v597 + 232) = *(void *)(v598 + 232);
            *(void *)(v597 + 240) = *(void *)(v598 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v601 = *(_OWORD *)v598;
            long long v602 = *(_OWORD *)(v598 + 16);
            long long v603 = *(_OWORD *)(v598 + 48);
            *(_OWORD *)(v597 + 32) = *(_OWORD *)(v598 + 32);
            *(_OWORD *)(v597 + 48) = v603;
            *(_OWORD *)unint64_t v597 = v601;
            *(_OWORD *)(v597 + 16) = v602;
            long long v604 = *(_OWORD *)(v598 + 64);
            long long v605 = *(_OWORD *)(v598 + 80);
            long long v606 = *(_OWORD *)(v598 + 112);
            *(_OWORD *)(v597 + 96) = *(_OWORD *)(v598 + 96);
            *(_OWORD *)(v597 + 112) = v606;
            *(_OWORD *)(v597 + 64) = v604;
            *(_OWORD *)(v597 + 80) = v605;
            long long v607 = *(_OWORD *)(v598 + 128);
            long long v608 = *(_OWORD *)(v598 + 144);
            long long v609 = *(_OWORD *)(v598 + 176);
            *(_OWORD *)(v597 + 160) = *(_OWORD *)(v598 + 160);
            *(_OWORD *)(v597 + 176) = v609;
            *(_OWORD *)(v597 + 128) = v607;
            *(_OWORD *)(v597 + 144) = v608;
            long long v610 = *(_OWORD *)(v598 + 192);
            long long v611 = *(_OWORD *)(v598 + 208);
            long long v612 = *(_OWORD *)(v598 + 224);
            *(void *)(v597 + 240) = *(void *)(v598 + 240);
            *(_OWORD *)(v597 + 208) = v611;
            *(_OWORD *)(v597 + 224) = v612;
            *(_OWORD *)(v597 + 192) = v610;
            unsigned int v613 = v890;
            uint64_t v542 = v903;
            v541 = v906;
          }
          v779 = (_OWORD *)((v597 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v780 = (long long *)((v598 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v781 = *v780;
          *(_OWORD *)((char *)v779 + 9) = *(long long *)((char *)v780 + 9);
          _OWORD *v779 = v781;
          unint64_t v782 = (v597 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v783 = (v598 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v784 = *(_OWORD *)v783;
          *(unsigned char *)(v782 + 16) = *(unsigned char *)(v783 + 16);
          *(_OWORD *)unint64_t v782 = v784;
          unint64_t v785 = (void *)((v597 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v786 = (v598 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v787 = *(void *)v786;
          v786 += 15;
          *unint64_t v785 = v787;
          uint64_t v788 = (void *)(((unint64_t)v785 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v789 = *(void *)(v786 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v790 = *(void *)((v786 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v789, v790);
          *uint64_t v788 = v789;
          v788[1] = v790;
          uint64_t v85 = a1;
          size_t v543 = v889;
          unint64_t v126 = v948;
          if (!v613) {
            goto LABEL_320;
          }
LABEL_387:
          unint64_t v791 = ((((v877
                   + ((((((((((v892 + v543 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v792 = (void *)(((unint64_t)v541 + v930 + v791) & v922);
          v793 = (const void *)(((unint64_t)v126 + v930 + v791) & v922);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v899 + 48))(v793, 1, v542))
          {
            memcpy(v792, v793, v935);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v899 + 16))(v792, v793, v542);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v899 + 56))(v792, 0, 1, v542);
          }
          uint64_t v794 = v854;
          int v795 = (char *)(((unint64_t)v792 + v861) & v902);
          v796 = (char *)(((unint64_t)v793 + v861) & v902);
          if (v870 == v882)
          {
            int v797 = (*(uint64_t (**)(char *))(v879 + 48))(v796);
          }
          else
          {
            size_t v798 = (uint64_t *)((unint64_t)&v796[v854] & 0xFFFFFFFFFFFFFFF8);
            if (v856 <= 0x7FFFFFFE)
            {
              uint64_t v799 = *v798;
              if ((unint64_t)*v798 >= 0xFFFFFFFF) {
                LODWORD(v799) = -1;
              }
              size_t v800 = v967;
              if ((v799 + 1) >= 2) {
                goto LABEL_399;
              }
              goto LABEL_401;
            }
            int v797 = (*(uint64_t (**)(unint64_t))(v927 + 48))(((unint64_t)v798 + v915) & v897);
          }
          size_t v800 = v967;
          uint64_t v794 = v854;
          if (v797)
          {
LABEL_399:
            memcpy(v795, v796, v800);
LABEL_402:
            *(void *)&v795[v800] = *(void *)&v796[v800];
            id v810 = (void *)((unint64_t)&v795[v800 + 15] & 0xFFFFFFFFFFFFFFF8);
            v811 = (void *)((unint64_t)&v796[v800 + 15] & 0xFFFFFFFFFFFFFFF8);
            *id v810 = *v811;
            unint64_t v201 = *(void **)(((unint64_t)v811 + 15) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(((unint64_t)v810 + 15) & 0xFFFFFFFFFFFFFFF8) = v201;
            char v202 = 1;
LABEL_403:
            *(unsigned char *)(v85 + v909) = v202;
            id v812 = v201;
            goto LABEL_408;
          }
          size_t v798 = (uint64_t *)((unint64_t)&v796[v854] & 0xFFFFFFFFFFFFFFF8);
LABEL_401:
          uint64_t v801 = v794;
          (*(void (**)(char *, char *, uint64_t))(v879 + 16))(v795, v796, v878);
          unint64_t v802 = (void *)((unint64_t)&v795[v801] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v802 = *v798;
          unint64_t v803 = ((unint64_t)v802 + v915) & v897;
          unint64_t v804 = ((unint64_t)v798 + v915) & v897;
          v805 = *(void (**)(unint64_t, unint64_t, uint64_t))(v927 + 16);
          swift_bridgeObjectRetain();
          v805(v803, v804, v866);
          v806 = (void *)((v843 + v803) & 0xFFFFFFFFFFFFFFF8);
          v807 = (void *)((v843 + v804) & 0xFFFFFFFFFFFFFFF8);
          void *v806 = *v807;
          v808 = (void *)(((unint64_t)v806 + 15) & 0xFFFFFFFFFFFFFFF8);
          v809 = (void *)(((unint64_t)v807 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v808 = *v809;
          v808[1] = v809[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_402;
        }
        unint64_t v149 = ((unint64_t)v126 + v885) & v908;
        uint64_t v150 = v72;
        unint64_t v151 = (v886 + v149) & v72;
        if (v883 == v876)
        {
          if (v871 == v883)
          {
            int v127 = (*(uint64_t (**)(unint64_t))(v881 + 48))((v886 + v149) & v72);
            goto LABEL_317;
          }
          unint64_t v211 = (unint64_t *)((v887 + v151) & 0xFFFFFFFFFFFFFFF8);
          if (v857 > 0x7FFFFFFE)
          {
            int v127 = (*(uint64_t (**)(unint64_t))(v869 + 48))(((unint64_t)v211 + v867) & v848);
            goto LABEL_317;
          }
          unint64_t v212 = *v211;
        }
        else
        {
          size_t v175 = v950 + v151;
          if ((v838 & 0x80000000) == 0)
          {
            unint64_t v176 = *(void *)(v175 + 8);
            if (v176 >= 0xFFFFFFFF) {
              LODWORD(v176) = -1;
            }
            int v127 = v176 + 1;
            goto LABEL_318;
          }
          size_t v219 = (v872 + ((v940 + v175) & v918)) & v834;
          if (v890 > 0x7FFFFFFD)
          {
            int v127 = (*(uint64_t (**)(size_t))(v865 + 48))(v219);
            goto LABEL_317;
          }
          unint64_t v212 = *(void *)(((v831 + ((v864 + v219) & v834)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v212 >= 0xFFFFFFFF) {
          LODWORD(v212) = -1;
        }
        if ((v212 + 1) >= 2) {
          goto LABEL_319;
        }
        goto LABEL_322;
      case 2u:
        uint64_t v128 = v75;
        uint64_t v898 = v76;
        uint64_t v129 = v35;
        uint64_t v916 = v36;
        uint64_t v844 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
        uint64_t v928 = *(void *)(v866 - 8);
        size_t v130 = v38;
        (*(void (**)(uint64_t))(v84 + 16))(v85);
        uint64_t v131 = v85;
        uint64_t v132 = (void *)((v845 + v85) & v922);
        unint64_t v133 = (const void *)((unint64_t)&a2[v845] & v922);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v899 + 48))(v133, 1, v903))
        {
          memcpy(v132, v133, v935);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v899 + 16))(v132, v133, v903);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v899 + 56))(v132, 0, 1, v903);
        }
        int v159 = (char *)(((unint64_t)v132 + v861) & v128);
        unint64_t v160 = (unsigned char *)(((unint64_t)v133 + v861) & v128);
        if (v870 == v882)
        {
          int v161 = (*(uint64_t (**)(unsigned char *))(v879 + 48))(v160);
          size_t v162 = v130;
          uint64_t v163 = v129;
          if (!v161) {
            goto LABEL_210;
          }
        }
        else
        {
          int v164 = (uint64_t *)((unint64_t)&v160[v129] & 0xFFFFFFFFFFFFFFF8);
          if (v856 > 0x7FFFFFFE)
          {
            int v190 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v928 + 48))(((unint64_t)v164 + v916) & v898, v835, v866);
            uint64_t v163 = v129;
            size_t v162 = v130;
            if (!v190)
            {
LABEL_210:
              int v164 = (uint64_t *)((unint64_t)&v160[v163] & 0xFFFFFFFFFFFFFFF8);
              goto LABEL_211;
            }
          }
          else
          {
            uint64_t v163 = v129;
            uint64_t v165 = *v164;
            if ((unint64_t)*v164 >= 0xFFFFFFFF) {
              LODWORD(v165) = -1;
            }
            size_t v162 = v130;
            if ((v165 + 1) < 2)
            {
LABEL_211:
              uint64_t v191 = v163;
              (*(void (**)(char *, unsigned char *, uint64_t))(v879 + 16))(v159, v160, v878);
              unint64_t v192 = (void *)((unint64_t)&v159[v191] & 0xFFFFFFFFFFFFFFF8);
              *unint64_t v192 = *v164;
              unint64_t v193 = ((unint64_t)v192 + v916) & v898;
              unint64_t v194 = ((unint64_t)v164 + v916) & v898;
              size_t v195 = *(void (**)(unint64_t, unint64_t, uint64_t))(v928 + 16);
              swift_bridgeObjectRetain();
              v195(v193, v194, v866);
              uint64_t v85 = v131;
              unint64_t v196 = (void *)((v844 + v193) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v197 = (void *)((v844 + v194) & 0xFFFFFFFFFFFFFFF8);
              *unint64_t v196 = *v197;
              unint64_t v198 = (void *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v199 = (void *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
              *unint64_t v198 = *v199;
              v198[1] = v199[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
LABEL_212:
              unint64_t v200 = &v159[v162];
              char *v200 = v160[v162];
              unint64_t v201 = *(void **)&v160[v162 + 8];
              *((void *)v200 + 1) = v201;
              char v202 = 2;
              goto LABEL_403;
            }
          }
        }
        memcpy(v159, v160, v162);
        goto LABEL_212;
      case 3u:
        uint64_t v849 = v73;
        unint64_t v134 = *(void (**)(uint64_t))(v84 + 16);
        v134(v85);
        v968 = (void *)((v874 + v85) & v120);
        unint64_t v135 = (const void *)((unint64_t)&a2[v874] & v120);
        if (v943 == v876)
        {
          int v136 = (*(uint64_t (**)(const void *))(v84 + 48))(v135);
LABEL_335:
          uint64_t v153 = v72;
LABEL_336:
          v620 = v968;
          if (v136)
          {
LABEL_337:
            memcpy(v620, v135, v859);
            goto LABEL_338;
          }
          unint64_t v152 = ((unint64_t)v135 + v885) & v908;
          unint64_t v154 = (v886 + v152) & v153;
LABEL_340:
          size_t v949 = v135;
          unint64_t v622 = v135;
          uint64_t v623 = v153;
          ((void (*)(void *, const void *, uint64_t))v134)(v620, v622, AssociatedTypeWitness);
          uint64_t v624 = ~v46;
          ((void (*)(unint64_t, unint64_t, uint64_t))v134)(((unint64_t)v620 + v885) & v908, v152, AssociatedTypeWitness);
          unint64_t v625 = (v886 + (((unint64_t)v620 + v885) & v908)) & v623;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v881 + 16))(v625, v154, v880);
          unint64_t v626 = (void *)((v887 + v625) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v627 = (void *)((v887 + v154) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v626 = *v627;
          unint64_t v628 = ((unint64_t)v626 + v867) & v849;
          unint64_t v629 = ((unint64_t)v627 + v867) & v849;
          v630 = *(void (**)(unint64_t, unint64_t, uint64_t))(v869 + 16);
          swift_bridgeObjectRetain();
          v630(v628, v629, v868);
          v631 = (void *)((v860 + v629) & 0xFFFFFFFFFFFFFFF8);
          v632 = (void *)((v860 + v628) & 0xFFFFFFFFFFFFFFF8);
          void *v632 = *v631;
          v633 = (void *)(((unint64_t)v632 + 15) & 0xFFFFFFFFFFFFFFF8);
          size_t v634 = (void *)(((unint64_t)v631 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v633 = *v634;
          v633[1] = v634[1];
          size_t v635 = (void *)(v950 + v625);
          *size_t v635 = *(void *)(v950 + v154);
          v635[1] = *(void *)(v950 + v154 + 8);
          size_t v636 = (v940 + v950 + v625) & v918;
          size_t v637 = (v940 + v950 + v154) & v918;
          *(unsigned char *)size_t v636 = *(unsigned char *)v637;
          uint64_t v638 = v636 | 4;
          int v639 = *(_DWORD *)(v637 | 4);
          *(unsigned char *)(v638 + 4) = *(unsigned char *)((v637 | 4) + 4);
          *(_DWORD *)uint64_t v638 = v639;
          *(_WORD *)(v636 + 10) = *(_WORD *)(v637 + 0xA);
          size_t v640 = (v872 + v636) & v624;
          size_t v958 = v637;
          size_t v641 = (v872 + v637) & v624;
          uint64_t v642 = *(void (**)(size_t, size_t, uint64_t))(v865 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v642(v640, v641, v888);
          size_t v643 = (v864 + v640) & v624;
          size_t v644 = (v864 + v641) & v624;
          v642(v643, v644, v888);
          unint64_t v645 = (unsigned char *)(v643 + v889);
          *unint64_t v645 = *(unsigned char *)(v644 + v889);
          v645[1] = *(unsigned char *)(v644 + v889 + 1);
          v645[2] = *(unsigned char *)(v644 + v889 + 2);
          v645[3] = *(unsigned char *)(v644 + v889 + 3);
          v645[4] = *(unsigned char *)(v644 + v889 + 4);
          unint64_t v646 = (v643 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v647 = (v644 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v646 = *(void *)v647;
          *(void *)(v646 + 8) = *(void *)(v647 + 8);
          *(unsigned char *)(v646 + 16) = *(unsigned char *)(v647 + 16);
          *(unsigned char *)(v646 + 17) = *(unsigned char *)(v647 + 17);
          *(unsigned char *)(v646 + 18) = *(unsigned char *)(v647 + 18);
          *(unsigned char *)(v646 + 19) = *(unsigned char *)(v647 + 19);
          unint64_t v648 = (v646 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v649 = (v647 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v648 = *(void *)v649;
          *(unsigned char *)(v648 + 8) = *(unsigned char *)(v649 + 8);
          *(unsigned char *)(v648 + 9) = *(unsigned char *)(v649 + 9);
          *(unsigned char *)(v648 + 10) = *(unsigned char *)(v649 + 10);
          *(unsigned char *)(v648 + 11) = *(unsigned char *)(v649 + 11);
          *(unsigned char *)(v648 + 12) = *(unsigned char *)(v649 + 12);
          unint64_t v650 = (void *)((v647 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v651 = (void *)((v646 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v651 = *v650;
          unint64_t v652 = ((unint64_t)v651 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v653 = ((unint64_t)v650 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v652 = *(void *)v653;
          *(unsigned char *)(v652 + 8) = *(unsigned char *)(v653 + 8);
          *(unsigned char *)(v652 + 9) = *(unsigned char *)(v653 + 9);
          v654 = (void *)((v863 + v652) & v624);
          v655 = (const void *)((v863 + v653) & v624);
          v656 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v865 + 48);
          swift_bridgeObjectRetain();
          if (v656(v655, 1, v888))
          {
            memcpy(v654, v655, v891);
          }
          else
          {
            v642((size_t)v654, (size_t)v655, v888);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v865 + 56))(v654, 0, 1, v888);
          }
          unint64_t v135 = v949;
          unint64_t v657 = (void *)(((unint64_t)v654 + v862) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v658 = (void *)(((unint64_t)v655 + v862) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v657 = *v658;
          unint64_t v659 = ((unint64_t)v657 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v660 = ((unint64_t)v658 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v661 = *(void *)v660;
          *(unsigned char *)(v659 + 8) = *(unsigned char *)(v660 + 8);
          *(void *)unint64_t v659 = v661;
          unint64_t v662 = (void *)(((unint64_t)v657 + 31) & 0xFFFFFFFFFFFFFFF8);
          v663 = (void *)(((unint64_t)v658 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v662 = *v663;
          unint64_t v664 = ((unint64_t)v662 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v665 = (uint64_t *)(((unint64_t)v663 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v666 = v665[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v666 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v664 = *(_OWORD *)v665;
          }
          else
          {
            uint64_t v667 = *v665;
            sub_24D3F9C18(*v665, v666);
            *(void *)unint64_t v664 = v667;
            *(void *)(v664 + 8) = v666;
          }
          unsigned int v668 = v890;
          unint64_t v669 = (v664 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v670 = ((unint64_t)v665 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v671 = *(void *)v670;
          *(unsigned char *)(v669 + 8) = *(unsigned char *)(v670 + 8);
          *(void *)unint64_t v669 = v671;
          *(unsigned char *)(v669 + 9) = *(unsigned char *)(v670 + 9);
          unint64_t v672 = (v669 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v673 = (v670 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v674 = *(_DWORD *)v673;
          *(unsigned char *)(v672 + 4) = *(unsigned char *)(v673 + 4);
          *(_DWORD *)unint64_t v672 = v674;
          v675 = (void *)((v669 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v676 = (void *)((v670 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v675 = *v676;
          v675[1] = v676[1];
          unint64_t v677 = v939 + v636;
          long long v678 = (long long *)(v939 + v958);
          unint64_t v679 = *(void *)(v939 + v958 + 16);
          if (v679 >= 0xFFFFFFFF) {
            LODWORD(v679) = -1;
          }
          int v680 = v679 - 1;
          swift_bridgeObjectRetain();
          if (v680 < 0)
          {
            *(void *)unint64_t v677 = *(void *)v678;
            *(unsigned char *)(v677 + 8) = *((unsigned char *)v678 + 8);
            *(unsigned char *)(v677 + 9) = *((unsigned char *)v678 + 9);
            id v693 = (void *)*((void *)v678 + 2);
            id v694 = v693;
            *(void *)(v677 + 16) = v693;
            id v695 = (void *)*((void *)v678 + 3);
            id v696 = v695;
            *(void *)(v677 + 24) = v695;
            *(unsigned char *)(v677 + 32) = *((unsigned char *)v678 + 32);
            *(unsigned char *)(v677 + 33) = *((unsigned char *)v678 + 33);
            *(unsigned char *)(v677 + 34) = *((unsigned char *)v678 + 34);
            *(void *)(v677 + 40) = *((void *)v678 + 5);
            *(void *)(v677 + 48) = *((void *)v678 + 6);
            *(void *)(v677 + 56) = *((void *)v678 + 7);
            *(void *)(v677 + 64) = *((void *)v678 + 8);
            *(unsigned char *)(v677 + 72) = *((unsigned char *)v678 + 72);
            *(void *)(v677 + 80) = *((void *)v678 + 10);
            *(void *)(v677 + 88) = *((void *)v678 + 11);
            unint64_t v959 = (void *)*((void *)v678 + 12);
            *(void *)(v677 + 96) = v959;
            *(unsigned char *)(v677 + 104) = *((unsigned char *)v678 + 104);
            *(unsigned char *)(v677 + 105) = *((unsigned char *)v678 + 105);
            *(void *)(v677 + 112) = *((void *)v678 + 14);
            *(void *)(v677 + 120) = *((void *)v678 + 15);
            *(void *)(v677 + 128) = *((void *)v678 + 16);
            *(void *)(v677 + 136) = *((void *)v678 + 17);
            *(void *)(v677 + 144) = *((void *)v678 + 18);
            *(void *)(v677 + 152) = *((void *)v678 + 19);
            *(void *)(v677 + 160) = *((void *)v678 + 20);
            *(void *)(v677 + 168) = *((void *)v678 + 21);
            *(unsigned char *)(v677 + 176) = *((unsigned char *)v678 + 176);
            *(void *)(v677 + 184) = *((void *)v678 + 23);
            uint64_t v697 = *((void *)v678 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v698 = v959;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v697)
            {
              *(void *)(v677 + 192) = v697;
              *(void *)(v677 + 200) = *((void *)v678 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v677 + 192) = v678[12];
            }
            unsigned int v668 = v890;
            unint64_t v135 = v949;
            *(void *)(v677 + 208) = *((void *)v678 + 26);
            *(void *)(v677 + 216) = *((void *)v678 + 27);
            *(void *)(v677 + 224) = *((void *)v678 + 28);
            *(void *)(v677 + 232) = *((void *)v678 + 29);
            *(void *)(v677 + 240) = *((void *)v678 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v681 = *v678;
            long long v682 = v678[1];
            long long v683 = v678[3];
            *(_OWORD *)(v677 + 32) = v678[2];
            *(_OWORD *)(v677 + 48) = v683;
            *(_OWORD *)unint64_t v677 = v681;
            *(_OWORD *)(v677 + 16) = v682;
            long long v684 = v678[4];
            long long v685 = v678[5];
            long long v686 = v678[7];
            *(_OWORD *)(v677 + 96) = v678[6];
            *(_OWORD *)(v677 + 112) = v686;
            *(_OWORD *)(v677 + 64) = v684;
            *(_OWORD *)(v677 + 80) = v685;
            long long v687 = v678[8];
            long long v688 = v678[9];
            long long v689 = v678[11];
            *(_OWORD *)(v677 + 160) = v678[10];
            *(_OWORD *)(v677 + 176) = v689;
            *(_OWORD *)(v677 + 128) = v687;
            *(_OWORD *)(v677 + 144) = v688;
            long long v690 = v678[12];
            long long v691 = v678[13];
            long long v692 = v678[14];
            *(void *)(v677 + 240) = *((void *)v678 + 30);
            *(_OWORD *)(v677 + 208) = v691;
            *(_OWORD *)(v677 + 224) = v692;
            *(_OWORD *)(v677 + 192) = v690;
          }
          long long v813 = (_OWORD *)((v677 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v814 = (long long *)(((unint64_t)v678 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v815 = *v814;
          *(_OWORD *)((char *)v813 + 9) = *(long long *)((char *)v814 + 9);
          *long long v813 = v815;
          unint64_t v816 = (v677 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v817 = ((unint64_t)v678 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v818 = *(_OWORD *)v817;
          *(unsigned char *)(v816 + 16) = *(unsigned char *)(v817 + 16);
          *(_OWORD *)unint64_t v816 = v818;
          uint64_t v819 = (void *)((v677 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v820 = ((unint64_t)v678 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v821 = *(void *)v820;
          v820 += 15;
          *uint64_t v819 = v821;
          unint64_t v822 = (void *)(((unint64_t)v819 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v823 = *(void *)(v820 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v824 = *(void *)((v820 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v823, v824);
          *unint64_t v822 = v823;
          v822[1] = v824;
          size_t v621 = v889;
          v620 = v968;
          if (v668)
          {
LABEL_407:
            unint64_t v825 = ((((v877
                     + ((((((((((v892 + v621 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            v826 = (void *)(((unint64_t)v620 + v825) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v827 = (void *)(((unint64_t)v135 + v825) & 0xFFFFFFFFFFFFFFF8);
            void *v826 = *v827;
            v826[1] = v827[1];
            *(void *)(((unint64_t)v826 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v827 + 23) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v85 = a1;
            *(unsigned char *)(a1 + v909) = 3;
            swift_bridgeObjectRetain();
            goto LABEL_408;
          }
LABEL_338:
          size_t v621 = v891;
          goto LABEL_407;
        }
        unint64_t v152 = ((unint64_t)v135 + v885) & v908;
        uint64_t v153 = v72;
        unint64_t v154 = (v886 + v152) & v72;
        if (v883 == v876)
        {
          if (v871 == v883)
          {
            int v136 = (*(uint64_t (**)(unint64_t))(v881 + 48))((v886 + v152) & v72);
            goto LABEL_335;
          }
          unint64_t v213 = (unint64_t *)((v887 + v154) & 0xFFFFFFFFFFFFFFF8);
          if (v857 > 0x7FFFFFFE)
          {
            int v136 = (*(uint64_t (**)(unint64_t))(v869 + 48))(((unint64_t)v213 + v867) & v849);
            goto LABEL_335;
          }
          unint64_t v214 = *v213;
        }
        else
        {
          size_t v177 = v950 + v154;
          if ((v838 & 0x80000000) == 0)
          {
            unint64_t v178 = *(void *)(v177 + 8);
            if (v178 >= 0xFFFFFFFF) {
              LODWORD(v178) = -1;
            }
            int v136 = v178 + 1;
            goto LABEL_336;
          }
          size_t v220 = (v872 + ((v940 + v177) & v918)) & v74;
          if (v890 > 0x7FFFFFFD)
          {
            int v136 = (*(uint64_t (**)(size_t))(v865 + 48))(v220);
            goto LABEL_335;
          }
          unint64_t v214 = *(void *)(((v831 + ((v864 + v220) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v214 >= 0xFFFFFFFF) {
          LODWORD(v214) = -1;
        }
        v620 = v968;
        if ((v214 + 1) >= 2) {
          goto LABEL_337;
        }
        goto LABEL_340;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v84 + 16))(v85, a2, AssociatedTypeWitness);
        char v137 = 0;
        *(unsigned char *)(v85 + v909) = 4;
        goto LABEL_409;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v84 + 16))(v85, a2, AssociatedTypeWitness);
        char v137 = 0;
        *(unsigned char *)(v85 + v909) = 5;
        goto LABEL_409;
      case 6u:
        (*(void (**)(uint64_t))(v84 + 16))(v85);
        unint64_t v138 = (void *)((v839 + v85) & v121);
        long long v139 = (const void *)((unint64_t)&a2[v839] & v121);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v139, 1, v923))
        {
          memcpy(v138, v139, v832);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v138, v139, v923);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v138, 0, 1, v923);
        }
        unint64_t v166 = v962;
        char v137 = 0;
        *(unsigned char *)(v85 + v909) = 6;
        goto LABEL_410;
      case 7u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v84 + 16))(v85, a2, AssociatedTypeWitness);
        char v137 = 0;
        *(unsigned char *)(v85 + v909) = 7;
        goto LABEL_409;
      default:
        uint64_t v847 = v73;
        unint64_t v122 = *(void (**)(uint64_t))(v84 + 16);
        v122(v85);
        uint64_t v966 = (void *)((v874 + v85) & v120);
        long long v123 = (const void *)((unint64_t)&a2[v874] & v120);
        if (v943 == v876)
        {
          int v124 = (*(uint64_t (**)(const void *))(v84 + 48))(v123);
LABEL_299:
          uint64_t v147 = v72;
LABEL_300:
          id v462 = v966;
          if (v124)
          {
LABEL_301:
            memcpy(v462, v123, v859);
            goto LABEL_302;
          }
          unint64_t v146 = ((unint64_t)v123 + v885) & v908;
          unint64_t v148 = (v886 + v146) & v147;
LABEL_304:
          size_t v947 = v123;
          v464 = v123;
          uint64_t v465 = v147;
          ((void (*)(void *, const void *, uint64_t))v122)(v462, v464, AssociatedTypeWitness);
          uint64_t v466 = ~v46;
          ((void (*)(unint64_t, unint64_t, uint64_t))v122)(((unint64_t)v462 + v885) & v908, v146, AssociatedTypeWitness);
          unint64_t v467 = (v886 + (((unint64_t)v462 + v885) & v908)) & v465;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v881 + 16))(v467, v148, v880);
          v468 = (void *)((v887 + v467) & 0xFFFFFFFFFFFFFFF8);
          v469 = (void *)((v887 + v148) & 0xFFFFFFFFFFFFFFF8);
          void *v468 = *v469;
          unint64_t v470 = ((unint64_t)v468 + v867) & v847;
          unint64_t v471 = ((unint64_t)v469 + v867) & v847;
          v472 = *(void (**)(unint64_t, unint64_t, uint64_t))(v869 + 16);
          swift_bridgeObjectRetain();
          v472(v470, v471, v868);
          v473 = (void *)((v860 + v471) & 0xFFFFFFFFFFFFFFF8);
          v474 = (void *)((v860 + v470) & 0xFFFFFFFFFFFFFFF8);
          void *v474 = *v473;
          v475 = (void *)(((unint64_t)v474 + 15) & 0xFFFFFFFFFFFFFFF8);
          v476 = (void *)(((unint64_t)v473 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v475 = *v476;
          v475[1] = v476[1];
          v477 = (void *)(v950 + v467);
          void *v477 = *(void *)(v950 + v148);
          v477[1] = *(void *)(v950 + v148 + 8);
          size_t v478 = (v940 + v950 + v467) & v918;
          size_t v479 = (v940 + v950 + v148) & v918;
          *(unsigned char *)size_t v478 = *(unsigned char *)v479;
          uint64_t v480 = v478 | 4;
          int v481 = *(_DWORD *)(v479 | 4);
          *(unsigned char *)(v480 + 4) = *(unsigned char *)((v479 | 4) + 4);
          *(_DWORD *)uint64_t v480 = v481;
          *(_WORD *)(v478 + 10) = *(_WORD *)(v479 + 0xA);
          size_t v482 = (v872 + v478) & v466;
          size_t v955 = v479;
          size_t v483 = (v872 + v479) & v466;
          v484 = *(void (**)(size_t, size_t, uint64_t))(v865 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v484(v482, v483, v888);
          size_t v485 = (v864 + v482) & v466;
          size_t v486 = (v864 + v483) & v466;
          v484(v485, v486, v888);
          v487 = (unsigned char *)(v485 + v889);
          unsigned char *v487 = *(unsigned char *)(v486 + v889);
          v487[1] = *(unsigned char *)(v486 + v889 + 1);
          v487[2] = *(unsigned char *)(v486 + v889 + 2);
          v487[3] = *(unsigned char *)(v486 + v889 + 3);
          v487[4] = *(unsigned char *)(v486 + v889 + 4);
          unint64_t v488 = (v485 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v489 = (v486 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v488 = *(void *)v489;
          *(void *)(v488 + 8) = *(void *)(v489 + 8);
          *(unsigned char *)(v488 + 16) = *(unsigned char *)(v489 + 16);
          *(unsigned char *)(v488 + 17) = *(unsigned char *)(v489 + 17);
          *(unsigned char *)(v488 + 18) = *(unsigned char *)(v489 + 18);
          *(unsigned char *)(v488 + 19) = *(unsigned char *)(v489 + 19);
          unint64_t v490 = (v488 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v491 = (v489 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v490 = *(void *)v491;
          *(unsigned char *)(v490 + 8) = *(unsigned char *)(v491 + 8);
          *(unsigned char *)(v490 + 9) = *(unsigned char *)(v491 + 9);
          *(unsigned char *)(v490 + 10) = *(unsigned char *)(v491 + 10);
          *(unsigned char *)(v490 + 11) = *(unsigned char *)(v491 + 11);
          *(unsigned char *)(v490 + 12) = *(unsigned char *)(v491 + 12);
          v492 = (void *)((v489 + 47) & 0xFFFFFFFFFFFFFFF8);
          v493 = (void *)((v488 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v493 = *v492;
          unint64_t v494 = ((unint64_t)v493 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v495 = ((unint64_t)v492 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v494 = *(void *)v495;
          *(unsigned char *)(v494 + 8) = *(unsigned char *)(v495 + 8);
          *(unsigned char *)(v494 + 9) = *(unsigned char *)(v495 + 9);
          v496 = (void *)((v863 + v494) & v466);
          v497 = (const void *)((v863 + v495) & v466);
          v498 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v865 + 48);
          swift_bridgeObjectRetain();
          if (v498(v497, 1, v888))
          {
            memcpy(v496, v497, v891);
          }
          else
          {
            v484((size_t)v496, (size_t)v497, v888);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v865 + 56))(v496, 0, 1, v888);
          }
          long long v123 = v947;
          v499 = (void *)(((unint64_t)v496 + v862) & 0xFFFFFFFFFFFFFFF8);
          v500 = (void *)(((unint64_t)v497 + v862) & 0xFFFFFFFFFFFFFFF8);
          void *v499 = *v500;
          unint64_t v501 = ((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v502 = ((unint64_t)v500 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v503 = *(void *)v502;
          *(unsigned char *)(v501 + 8) = *(unsigned char *)(v502 + 8);
          *(void *)unint64_t v501 = v503;
          v504 = (void *)(((unint64_t)v499 + 31) & 0xFFFFFFFFFFFFFFF8);
          v505 = (void *)(((unint64_t)v500 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v504 = *v505;
          unint64_t v506 = ((unint64_t)v504 + 15) & 0xFFFFFFFFFFFFFFF8;
          v507 = (uint64_t *)(((unint64_t)v505 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v508 = v507[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v508 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v506 = *(_OWORD *)v507;
          }
          else
          {
            uint64_t v509 = *v507;
            sub_24D3F9C18(*v507, v508);
            *(void *)unint64_t v506 = v509;
            *(void *)(v506 + 8) = v508;
          }
          unsigned int v510 = v890;
          unint64_t v511 = (v506 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v512 = ((unint64_t)v507 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v513 = *(void *)v512;
          *(unsigned char *)(v511 + 8) = *(unsigned char *)(v512 + 8);
          *(void *)unint64_t v511 = v513;
          *(unsigned char *)(v511 + 9) = *(unsigned char *)(v512 + 9);
          unint64_t v514 = (v511 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v515 = (v512 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v516 = *(_DWORD *)v515;
          *(unsigned char *)(v514 + 4) = *(unsigned char *)(v515 + 4);
          *(_DWORD *)unint64_t v514 = v516;
          v517 = (void *)((v511 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v518 = (void *)((v512 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v517 = *v518;
          v517[1] = v518[1];
          unint64_t v519 = v939 + v478;
          unint64_t v520 = (long long *)(v939 + v955);
          unint64_t v521 = *(void *)(v939 + v955 + 16);
          if (v521 >= 0xFFFFFFFF) {
            LODWORD(v521) = -1;
          }
          int v522 = v521 - 1;
          swift_bridgeObjectRetain();
          if (v522 < 0)
          {
            *(void *)unint64_t v519 = *(void *)v520;
            *(unsigned char *)(v519 + 8) = *((unsigned char *)v520 + 8);
            *(unsigned char *)(v519 + 9) = *((unsigned char *)v520 + 9);
            id v535 = (void *)*((void *)v520 + 2);
            id v536 = v535;
            *(void *)(v519 + 16) = v535;
            id v537 = (void *)*((void *)v520 + 3);
            id v538 = v537;
            *(void *)(v519 + 24) = v537;
            *(unsigned char *)(v519 + 32) = *((unsigned char *)v520 + 32);
            *(unsigned char *)(v519 + 33) = *((unsigned char *)v520 + 33);
            *(unsigned char *)(v519 + 34) = *((unsigned char *)v520 + 34);
            *(void *)(v519 + 40) = *((void *)v520 + 5);
            *(void *)(v519 + 48) = *((void *)v520 + 6);
            *(void *)(v519 + 56) = *((void *)v520 + 7);
            *(void *)(v519 + 64) = *((void *)v520 + 8);
            *(unsigned char *)(v519 + 72) = *((unsigned char *)v520 + 72);
            *(void *)(v519 + 80) = *((void *)v520 + 10);
            *(void *)(v519 + 88) = *((void *)v520 + 11);
            v956 = (void *)*((void *)v520 + 12);
            *(void *)(v519 + 96) = v956;
            *(unsigned char *)(v519 + 104) = *((unsigned char *)v520 + 104);
            *(unsigned char *)(v519 + 105) = *((unsigned char *)v520 + 105);
            *(void *)(v519 + 112) = *((void *)v520 + 14);
            *(void *)(v519 + 120) = *((void *)v520 + 15);
            *(void *)(v519 + 128) = *((void *)v520 + 16);
            *(void *)(v519 + 136) = *((void *)v520 + 17);
            *(void *)(v519 + 144) = *((void *)v520 + 18);
            *(void *)(v519 + 152) = *((void *)v520 + 19);
            *(void *)(v519 + 160) = *((void *)v520 + 20);
            *(void *)(v519 + 168) = *((void *)v520 + 21);
            *(unsigned char *)(v519 + 176) = *((unsigned char *)v520 + 176);
            *(void *)(v519 + 184) = *((void *)v520 + 23);
            uint64_t v539 = *((void *)v520 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v540 = v956;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v539)
            {
              *(void *)(v519 + 192) = v539;
              *(void *)(v519 + 200) = *((void *)v520 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v519 + 192) = v520[12];
            }
            unsigned int v510 = v890;
            long long v123 = v947;
            *(void *)(v519 + 208) = *((void *)v520 + 26);
            *(void *)(v519 + 216) = *((void *)v520 + 27);
            *(void *)(v519 + 224) = *((void *)v520 + 28);
            *(void *)(v519 + 232) = *((void *)v520 + 29);
            *(void *)(v519 + 240) = *((void *)v520 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v523 = *v520;
            long long v524 = v520[1];
            long long v525 = v520[3];
            *(_OWORD *)(v519 + 32) = v520[2];
            *(_OWORD *)(v519 + 48) = v525;
            *(_OWORD *)unint64_t v519 = v523;
            *(_OWORD *)(v519 + 16) = v524;
            long long v526 = v520[4];
            long long v527 = v520[5];
            long long v528 = v520[7];
            *(_OWORD *)(v519 + 96) = v520[6];
            *(_OWORD *)(v519 + 112) = v528;
            *(_OWORD *)(v519 + 64) = v526;
            *(_OWORD *)(v519 + 80) = v527;
            long long v529 = v520[8];
            long long v530 = v520[9];
            long long v531 = v520[11];
            *(_OWORD *)(v519 + 160) = v520[10];
            *(_OWORD *)(v519 + 176) = v531;
            *(_OWORD *)(v519 + 128) = v529;
            *(_OWORD *)(v519 + 144) = v530;
            long long v532 = v520[12];
            long long v533 = v520[13];
            long long v534 = v520[14];
            *(void *)(v519 + 240) = *((void *)v520 + 30);
            *(_OWORD *)(v519 + 208) = v533;
            *(_OWORD *)(v519 + 224) = v534;
            *(_OWORD *)(v519 + 192) = v532;
          }
          v762 = (_OWORD *)((v519 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v763 = (long long *)(((unint64_t)v520 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v764 = *v763;
          *(_OWORD *)((char *)v762 + 9) = *(long long *)((char *)v763 + 9);
          _OWORD *v762 = v764;
          unint64_t v765 = (v519 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v766 = ((unint64_t)v520 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v767 = *(_OWORD *)v766;
          *(unsigned char *)(v765 + 16) = *(unsigned char *)(v766 + 16);
          *(_OWORD *)unint64_t v765 = v767;
          unint64_t v768 = (void *)((v519 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v769 = ((unint64_t)v520 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v770 = *(void *)v769;
          v769 += 15;
          *unint64_t v768 = v770;
          uint64_t v771 = (void *)(((unint64_t)v768 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v772 = *(void *)(v769 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v773 = *(void *)((v769 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v772, v773);
          *uint64_t v771 = v772;
          v771[1] = v773;
          size_t v463 = v889;
          id v462 = v966;
          if (v510)
          {
LABEL_383:
            unint64_t v774 = ((((v877
                     + ((((((((((v892 + v463 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            v775 = (void *)(((unint64_t)v462 + v774) & 0xFFFFFFFFFFFFFFF8);
            v776 = (void *)(((unint64_t)v123 + v774) & 0xFFFFFFFFFFFFFFF8);
            void *v775 = *v776;
            id v777 = *(void **)(((unint64_t)v776 + 15) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(((unint64_t)v775 + 15) & 0xFFFFFFFFFFFFFFF8) = v777;
            uint64_t v85 = a1;
            *(unsigned char *)(a1 + v909) = 0;
            id v778 = v777;
LABEL_408:
            char v137 = 0;
            goto LABEL_409;
          }
LABEL_302:
          size_t v463 = v891;
          goto LABEL_383;
        }
        unint64_t v146 = ((unint64_t)v123 + v885) & v908;
        uint64_t v147 = v72;
        unint64_t v148 = (v886 + v146) & v72;
        if (v883 == v876)
        {
          if (v871 == v883)
          {
            int v124 = (*(uint64_t (**)(unint64_t))(v881 + 48))((v886 + v146) & v72);
            goto LABEL_299;
          }
          unint64_t v209 = (unint64_t *)((v887 + v148) & 0xFFFFFFFFFFFFFFF8);
          if (v857 > 0x7FFFFFFE)
          {
            int v124 = (*(uint64_t (**)(unint64_t))(v869 + 48))(((unint64_t)v209 + v867) & v847);
            goto LABEL_299;
          }
          unint64_t v210 = *v209;
        }
        else
        {
          size_t v173 = v950 + v148;
          if ((v838 & 0x80000000) == 0)
          {
            unint64_t v174 = *(void *)(v173 + 8);
            if (v174 >= 0xFFFFFFFF) {
              LODWORD(v174) = -1;
            }
            int v124 = v174 + 1;
            goto LABEL_300;
          }
          size_t v218 = (v872 + ((v940 + v173) & v918)) & v74;
          if (v890 > 0x7FFFFFFD)
          {
            int v124 = (*(uint64_t (**)(size_t))(v865 + 48))(v218);
            goto LABEL_299;
          }
          unint64_t v210 = *(void *)(((v831 + ((v864 + v218) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v210 >= 0xFFFFFFFF) {
          LODWORD(v210) = -1;
        }
        id v462 = v966;
        if ((v210 + 1) >= 2) {
          goto LABEL_301;
        }
        goto LABEL_304;
    }
  }
  unsigned int v77 = a2[v66];
  unsigned int v78 = v77 - 8;
  if (v77 >= 8)
  {
    if (v66 <= 3) {
      uint64_t v79 = v66;
    }
    else {
      uint64_t v79 = 4;
    }
    switch(v79)
    {
      case 1:
        int v80 = *a2;
        if (v66 < 4) {
          goto LABEL_97;
        }
        goto LABEL_101;
      case 2:
        int v80 = *(unsigned __int16 *)a2;
        if (v66 < 4) {
          goto LABEL_97;
        }
        goto LABEL_101;
      case 3:
        int v80 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v66 < 4) {
          goto LABEL_97;
        }
        goto LABEL_101;
      case 4:
        int v80 = *(_DWORD *)a2;
        if (v66 < 4) {
LABEL_97:
        }
          unsigned int v77 = (v80 | (v78 << (8 * v66))) + 8;
        else {
LABEL_101:
        }
          unsigned int v77 = v80 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v944 = v57;
  uint64_t v88 = ~v47;
  uint64_t v89 = ~v52;
  switch(v77)
  {
    case 1u:
      uint64_t v96 = v75;
      uint64_t v895 = ~v31;
      uint64_t v846 = v73;
      uint64_t v852 = v35;
      uint64_t v913 = v31 + 8;
      uint64_t v841 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
      uint64_t v925 = *(void *)(v866 - 8);
      unint64_t v97 = ((((v37 + ((v31 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16;
      size_t v833 = v74;
      unint64_t v932 = v53;
      unint64_t v937 = v66;
      unint64_t v98 = *(void (**)(uint64_t))(v899 + 16);
      v98(a1);
      uint64_t v910 = (void *)((v54 + a1) & v88);
      unint64_t v99 = (const void *)((unint64_t)&a2[v54] & v88);
      if (v875 == v873)
      {
        int v100 = (*(uint64_t (**)(const void *))(v899 + 48))(v99);
        size_t v101 = v950;
        unint64_t v102 = v97;
        uint64_t v103 = v96;
LABEL_264:
        if (v100)
        {
LABEL_265:
          uint64_t v301 = v910;
          memcpy(v910, v99, v858);
          goto LABEL_266;
        }
        unint64_t v142 = ((unint64_t)v99 + v905) & v922;
        unint64_t v143 = (v884 + v142) & v103;
LABEL_268:
        unsigned int v920 = v99;
        uint64_t v303 = v99;
        unint64_t v304 = v102;
        uint64_t v305 = v103;
        ((void (*)(void *, const void *, uint64_t))v98)(v910, v303, v903);
        unint64_t v306 = ((unint64_t)v910 + v905) & v922;
        ((void (*)(unint64_t, unint64_t, uint64_t))v98)(v306, v142, v903);
        unint64_t v307 = (v884 + v306) & v305;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v879 + 16))(v307, v143, v878);
        uint64_t v308 = (void *)((v852 + v307) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v309 = (void *)((v852 + v143) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v308 = *v309;
        unint64_t v310 = ((unint64_t)v308 + v913) & v895;
        unint64_t v311 = ((unint64_t)v309 + v913) & v895;
        uint64_t v312 = *(void (**)(unint64_t, unint64_t, uint64_t))(v925 + 16);
        swift_bridgeObjectRetain();
        v312(v310, v311, v866);
        uint64_t v313 = (void *)((v841 + v311) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v314 = (void *)((v841 + v310) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v314 = *v313;
        unsigned int v315 = (void *)(((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v316 = (void *)(((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v315 = *v316;
        v315[1] = v316[1];
        uint64_t v317 = (void *)(v304 + v307);
        *uint64_t v317 = *(void *)(v304 + v143);
        v317[1] = *(void *)(v304 + v143 + 8);
        uint64_t v318 = (v940 + v304 + v307) & v918;
        uint64_t v319 = (v940 + v304 + v143) & v918;
        *(unsigned char *)uint64_t v318 = *(unsigned char *)v319;
        uint64_t v320 = v318 | 4;
        int v321 = *(_DWORD *)(v319 | 4);
        *(unsigned char *)(v320 + 4) = *(unsigned char *)((v319 | 4) + 4);
        *(_DWORD *)uint64_t v320 = v321;
        *(_WORD *)(v318 + 10) = *(_WORD *)(v319 + 0xA);
        size_t v322 = (v872 + v318) & v833;
        uint64_t v941 = v319;
        size_t v323 = (v872 + v319) & v833;
        uint64_t v324 = *(void (**)(size_t, size_t, uint64_t))(v865 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v324(v322, v323, v888);
        size_t v325 = (v864 + v322) & v833;
        size_t v326 = (v864 + v323) & v833;
        v324(v325, v326, v888);
        uint64_t v327 = (unsigned char *)(v325 + v889);
        *uint64_t v327 = *(unsigned char *)(v326 + v889);
        v327[1] = *(unsigned char *)(v326 + v889 + 1);
        v327[2] = *(unsigned char *)(v326 + v889 + 2);
        v327[3] = *(unsigned char *)(v326 + v889 + 3);
        v327[4] = *(unsigned char *)(v326 + v889 + 4);
        unint64_t v328 = (v325 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v329 = (v326 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v328 = *(void *)v329;
        *(void *)(v328 + 8) = *(void *)(v329 + 8);
        *(unsigned char *)(v328 + 16) = *(unsigned char *)(v329 + 16);
        *(unsigned char *)(v328 + 17) = *(unsigned char *)(v329 + 17);
        *(unsigned char *)(v328 + 18) = *(unsigned char *)(v329 + 18);
        *(unsigned char *)(v328 + 19) = *(unsigned char *)(v329 + 19);
        unint64_t v330 = (v328 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v331 = (v329 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v330 = *(void *)v331;
        *(unsigned char *)(v330 + 8) = *(unsigned char *)(v331 + 8);
        *(unsigned char *)(v330 + 9) = *(unsigned char *)(v331 + 9);
        *(unsigned char *)(v330 + 10) = *(unsigned char *)(v331 + 10);
        *(unsigned char *)(v330 + 11) = *(unsigned char *)(v331 + 11);
        *(unsigned char *)(v330 + 12) = *(unsigned char *)(v331 + 12);
        uint64_t v332 = (void *)((v329 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v333 = (void *)((v328 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v333 = *v332;
        unint64_t v334 = ((unint64_t)v333 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v335 = ((unint64_t)v332 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v334 = *(void *)v335;
        *(unsigned char *)(v334 + 8) = *(unsigned char *)(v335 + 8);
        *(unsigned char *)(v334 + 9) = *(unsigned char *)(v335 + 9);
        uint64_t v336 = (void *)((v863 + v334) & v833);
        unint64_t v337 = (const void *)((v863 + v335) & v833);
        uint64_t v338 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v865 + 48);
        swift_bridgeObjectRetain();
        if (v338(v337, 1, v888))
        {
          memcpy(v336, v337, v891);
        }
        else
        {
          v324((size_t)v336, (size_t)v337, v888);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v865 + 56))(v336, 0, 1, v888);
        }
        unint64_t v339 = (void *)(((unint64_t)v336 + v862) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v340 = (void *)(((unint64_t)v337 + v862) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v339 = *v340;
        unint64_t v341 = ((unint64_t)v339 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v342 = ((unint64_t)v340 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v343 = *(void *)v342;
        *(unsigned char *)(v341 + 8) = *(unsigned char *)(v342 + 8);
        *(void *)unint64_t v341 = v343;
        uint64_t v344 = (void *)(((unint64_t)v339 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v345 = (void *)(((unint64_t)v340 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v344 = *v345;
        unint64_t v346 = ((unint64_t)v344 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v347 = (uint64_t *)(((unint64_t)v345 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v348 = v347[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v348 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v346 = *(_OWORD *)v347;
        }
        else
        {
          uint64_t v349 = *v347;
          sub_24D3F9C18(*v347, v348);
          *(void *)unint64_t v346 = v349;
          *(void *)(v346 + 8) = v348;
        }
        unint64_t v99 = v920;
        unint64_t v350 = (v346 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v351 = ((unint64_t)v347 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v352 = *(void *)v351;
        *(unsigned char *)(v350 + 8) = *(unsigned char *)(v351 + 8);
        *(void *)unint64_t v350 = v352;
        *(unsigned char *)(v350 + 9) = *(unsigned char *)(v351 + 9);
        unint64_t v353 = (v350 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v354 = (v351 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v355 = *(_DWORD *)v354;
        *(unsigned char *)(v353 + 4) = *(unsigned char *)(v354 + 4);
        *(_DWORD *)unint64_t v353 = v355;
        uint64_t v356 = (void *)((v350 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v357 = (void *)((v351 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v356 = *v357;
        v356[1] = v357[1];
        unint64_t v358 = v318 + v939;
        int v359 = (long long *)(v941 + v939);
        unint64_t v360 = *(void *)(v941 + v939 + 16);
        if (v360 >= 0xFFFFFFFF) {
          LODWORD(v360) = -1;
        }
        int v361 = v360 - 1;
        swift_bridgeObjectRetain();
        if (v361 < 0)
        {
          *(void *)unint64_t v358 = *(void *)v359;
          *(unsigned char *)(v358 + 8) = *((unsigned char *)v359 + 8);
          *(unsigned char *)(v358 + 9) = *((unsigned char *)v359 + 9);
          long long v375 = (void *)*((void *)v359 + 2);
          id v376 = v375;
          *(void *)(v358 + 16) = v375;
          long long v377 = (void *)*((void *)v359 + 3);
          id v378 = v377;
          *(void *)(v358 + 24) = v377;
          *(unsigned char *)(v358 + 32) = *((unsigned char *)v359 + 32);
          *(unsigned char *)(v358 + 33) = *((unsigned char *)v359 + 33);
          *(unsigned char *)(v358 + 34) = *((unsigned char *)v359 + 34);
          *(void *)(v358 + 40) = *((void *)v359 + 5);
          *(void *)(v358 + 48) = *((void *)v359 + 6);
          *(void *)(v358 + 56) = *((void *)v359 + 7);
          *(void *)(v358 + 64) = *((void *)v359 + 8);
          *(unsigned char *)(v358 + 72) = *((unsigned char *)v359 + 72);
          *(void *)(v358 + 80) = *((void *)v359 + 10);
          *(void *)(v358 + 88) = *((void *)v359 + 11);
          unint64_t v942 = (void *)*((void *)v359 + 12);
          *(void *)(v358 + 96) = v942;
          *(unsigned char *)(v358 + 104) = *((unsigned char *)v359 + 104);
          *(unsigned char *)(v358 + 105) = *((unsigned char *)v359 + 105);
          *(void *)(v358 + 112) = *((void *)v359 + 14);
          *(void *)(v358 + 120) = *((void *)v359 + 15);
          *(void *)(v358 + 128) = *((void *)v359 + 16);
          *(void *)(v358 + 136) = *((void *)v359 + 17);
          *(void *)(v358 + 144) = *((void *)v359 + 18);
          *(void *)(v358 + 152) = *((void *)v359 + 19);
          *(void *)(v358 + 160) = *((void *)v359 + 20);
          *(void *)(v358 + 168) = *((void *)v359 + 21);
          *(unsigned char *)(v358 + 176) = *((unsigned char *)v359 + 176);
          *(void *)(v358 + 184) = *((void *)v359 + 23);
          uint64_t v379 = *((void *)v359 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v380 = v942;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v379)
          {
            *(void *)(v358 + 192) = v379;
            *(void *)(v358 + 200) = *((void *)v359 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v358 + 192) = v359[12];
          }
          unsigned int v374 = v890;
          size_t v101 = v950;
          unint64_t v99 = v920;
          *(void *)(v358 + 208) = *((void *)v359 + 26);
          *(void *)(v358 + 216) = *((void *)v359 + 27);
          *(void *)(v358 + 224) = *((void *)v359 + 28);
          *(void *)(v358 + 232) = *((void *)v359 + 29);
          *(void *)(v358 + 240) = *((void *)v359 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v362 = *v359;
          long long v363 = v359[1];
          long long v364 = v359[3];
          *(_OWORD *)(v358 + 32) = v359[2];
          *(_OWORD *)(v358 + 48) = v364;
          *(_OWORD *)unint64_t v358 = v362;
          *(_OWORD *)(v358 + 16) = v363;
          long long v365 = v359[4];
          long long v366 = v359[5];
          long long v367 = v359[7];
          *(_OWORD *)(v358 + 96) = v359[6];
          *(_OWORD *)(v358 + 112) = v367;
          *(_OWORD *)(v358 + 64) = v365;
          *(_OWORD *)(v358 + 80) = v366;
          long long v368 = v359[8];
          long long v369 = v359[9];
          long long v370 = v359[11];
          *(_OWORD *)(v358 + 160) = v359[10];
          *(_OWORD *)(v358 + 176) = v370;
          *(_OWORD *)(v358 + 128) = v368;
          *(_OWORD *)(v358 + 144) = v369;
          long long v371 = v359[12];
          long long v372 = v359[13];
          long long v373 = v359[14];
          *(void *)(v358 + 240) = *((void *)v359 + 30);
          *(_OWORD *)(v358 + 208) = v372;
          *(_OWORD *)(v358 + 224) = v373;
          *(_OWORD *)(v358 + 192) = v371;
          unsigned int v374 = v890;
          size_t v101 = v950;
        }
        unint64_t v716 = (_OWORD *)((v358 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v717 = (long long *)(((unint64_t)v359 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v718 = *v717;
        *(_OWORD *)((char *)v716 + 9) = *(long long *)((char *)v717 + 9);
        *unint64_t v716 = v718;
        unint64_t v719 = (v358 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v720 = ((unint64_t)v359 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v721 = *(_OWORD *)v720;
        *(unsigned char *)(v719 + 16) = *(unsigned char *)(v720 + 16);
        *(_OWORD *)unint64_t v719 = v721;
        v722 = (void *)((v358 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v723 = ((unint64_t)v359 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v724 = *(void *)v723;
        v723 += 15;
        void *v722 = v724;
        unint64_t v725 = (void *)(((unint64_t)v722 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v726 = *(void *)(v723 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v727 = *(void *)((v723 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v726, v727);
        *unint64_t v725 = v726;
        v725[1] = v727;
        size_t v302 = v889;
        uint64_t v301 = v910;
        if (v374)
        {
LABEL_359:
          unint64_t v728 = ((((v932
                   + ((((((((((v892 + v302 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          v729 = (void *)(((unint64_t)v301 + v963 + v728) & v908);
          int v730 = (const void *)(((unint64_t)v99 + v963 + v728) & v908);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v901 + 48))(v730, 1, AssociatedTypeWitness))
          {
            memcpy(v729, v730, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v901 + 16))(v729, v730, AssociatedTypeWitness);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v901 + 56))(v729, 0, 1, AssociatedTypeWitness);
          }
          uint64_t v85 = a1;
          v731 = (char *)(((unint64_t)v729 + v944) & v72);
          uint64_t v732 = (char *)(((unint64_t)v730 + v944) & v72);
          if (v871 == v883)
          {
            if (!(*(unsigned int (**)(char *))(v881 + 48))(v732)) {
              goto LABEL_372;
            }
          }
          else
          {
            size_t v733 = (void *)((unint64_t)&v732[v887] & 0xFFFFFFFFFFFFFFF8);
            if (v857 > 0x7FFFFFFE)
            {
              if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v869 + 48))(((unint64_t)v733 + v867) & v846, v836, v868))
              {
LABEL_372:
                size_t v733 = (void *)((unint64_t)&v732[v887] & 0xFFFFFFFFFFFFFFF8);
LABEL_373:
                (*(void (**)(char *, char *, uint64_t))(v881 + 16))(v731, v732, v880);
                unint64_t v735 = (void *)((unint64_t)&v731[v887] & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v735 = *v733;
                unint64_t v736 = ((unint64_t)v735 + v867) & v846;
                unint64_t v737 = ((unint64_t)v733 + v867) & v846;
                v738 = *(void (**)(unint64_t, unint64_t, uint64_t))(v869 + 16);
                swift_bridgeObjectRetain();
                v738(v736, v737, v868);
                v739 = (void *)((v860 + v736) & 0xFFFFFFFFFFFFFFF8);
                v740 = (void *)((v860 + v737) & 0xFFFFFFFFFFFFFFF8);
                void *v739 = *v740;
                v741 = (void *)(((unint64_t)v739 + 15) & 0xFFFFFFFFFFFFFFF8);
                v742 = (void *)(((unint64_t)v740 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v741 = *v742;
                v741[1] = v742[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_374;
              }
            }
            else
            {
              uint64_t v734 = *v733;
              if (*v733 >= 0xFFFFFFFFuLL) {
                LODWORD(v734) = -1;
              }
              if ((v734 + 1) < 2) {
                goto LABEL_373;
              }
            }
          }
          memcpy(v731, v732, v101);
LABEL_374:
          *(void *)&v731[v101] = *(void *)&v732[v101];
          v743 = (void *)((unint64_t)&v731[v101 + 15] & 0xFFFFFFFFFFFFFFF8);
          v744 = (void *)((unint64_t)&v732[v101 + 15] & 0xFFFFFFFFFFFFFFF8);
          void *v743 = *v744;
          id v745 = *(void **)(((unint64_t)v744 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(void *)(((unint64_t)v743 + 15) & 0xFFFFFFFFFFFFFFF8) = v745;
          char v137 = 1;
          *(unsigned char *)(a1 + v937) = 1;
          id v746 = v745;
          goto LABEL_409;
        }
LABEL_266:
        size_t v302 = v891;
        goto LABEL_359;
      }
      unint64_t v142 = ((unint64_t)v99 + v905) & v922;
      uint64_t v103 = v96;
      unint64_t v143 = (v884 + v142) & v96;
      if (v882 == v873)
      {
        if (v870 == v882)
        {
          int v100 = (*(uint64_t (**)(unint64_t))(v879 + 48))((v884 + v142) & v96);
          uint64_t v103 = v96;
          size_t v101 = v950;
LABEL_263:
          unint64_t v102 = v97;
          goto LABEL_264;
        }
        unint64_t v205 = (unint64_t *)((v852 + v143) & 0xFFFFFFFFFFFFFFF8);
        size_t v101 = v950;
        if (v856 <= 0x7FFFFFFE)
        {
          unint64_t v206 = *v205;
          if (v206 >= 0xFFFFFFFF) {
            LODWORD(v206) = -1;
          }
          unint64_t v102 = v97;
          if ((v206 + 1) >= 2) {
            goto LABEL_265;
          }
          goto LABEL_268;
        }
        int v100 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v925 + 48))(((unint64_t)v205 + v913) & v895, v835, v866);
      }
      else
      {
        unint64_t v102 = v97;
        unint64_t v169 = v97 + v143;
        if ((v837 & 0x80000000) == 0)
        {
          unint64_t v170 = *(void *)(v169 + 8);
          if (v170 >= 0xFFFFFFFF) {
            LODWORD(v170) = -1;
          }
          int v100 = v170 + 1;
          size_t v101 = v950;
          goto LABEL_264;
        }
        size_t v216 = (v872 + ((v940 + v169) & v918)) & v833;
        size_t v101 = v950;
        if (v890 <= 0x7FFFFFFD)
        {
          unint64_t v829 = *(void *)(((v831 + ((v864 + v216) & v833)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v829 >= 0xFFFFFFFF) {
            LODWORD(v829) = -1;
          }
          if ((v829 + 1) >= 2) {
            goto LABEL_265;
          }
          goto LABEL_268;
        }
        int v100 = (*(uint64_t (**)(size_t, void, uint64_t))(v865 + 48))(v216, v890, v888);
      }
      uint64_t v103 = v96;
      goto LABEL_263;
    case 2u:
      uint64_t v104 = v73;
      unint64_t v105 = v66;
      uint64_t v85 = a1;
      (*(void (**)(uint64_t))(v899 + 16))(a1);
      uint64_t v106 = (void *)((v59 + a1) & v908);
      unint64_t v107 = (const void *)((unint64_t)&a2[v59] & v908);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v901 + 48))(v107, 1, AssociatedTypeWitness))
      {
        memcpy(v106, v107, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v901 + 16))(v106, v107, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v901 + 56))(v106, 0, 1, AssociatedTypeWitness);
      }
      unint64_t v155 = (char *)(((unint64_t)v106 + v944) & v72);
      unint64_t v156 = (unsigned char *)(((unint64_t)v107 + v944) & v72);
      if (v871 == v883)
      {
        if (!(*(unsigned int (**)(unsigned char *))(v881 + 48))(v156)) {
          goto LABEL_205;
        }
      }
      else
      {
        unint64_t v157 = (uint64_t *)((unint64_t)&v156[v887] & 0xFFFFFFFFFFFFFFF8);
        if (v857 > 0x7FFFFFFE)
        {
          if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v869 + 48))(((unint64_t)v157 + v867) & v104, v836, v868))
          {
LABEL_205:
            unint64_t v157 = (uint64_t *)((unint64_t)&v156[v887] & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_206;
          }
        }
        else
        {
          uint64_t v158 = *v157;
          if ((unint64_t)*v157 >= 0xFFFFFFFF) {
            LODWORD(v158) = -1;
          }
          if ((v158 + 1) < 2)
          {
LABEL_206:
            (*(void (**)(char *, unsigned char *, uint64_t))(v881 + 16))(v155, v156, v880);
            unint64_t v179 = (void *)((unint64_t)&v155[v887] & 0xFFFFFFFFFFFFFFF8);
            void *v179 = *v157;
            unint64_t v180 = ((unint64_t)v179 + v867) & v104;
            unint64_t v181 = ((unint64_t)v157 + v867) & v104;
            unint64_t v182 = *(void (**)(unint64_t, unint64_t, uint64_t))(v869 + 16);
            swift_bridgeObjectRetain();
            v182(v180, v181, v868);
            unint64_t v183 = (void *)((v860 + v180) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v184 = (void *)((v860 + v181) & 0xFFFFFFFFFFFFFFF8);
            void *v183 = *v184;
            unint64_t v185 = (void *)(((unint64_t)v183 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v186 = (void *)(((unint64_t)v184 + 15) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v185 = *v186;
            v185[1] = v186[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
LABEL_207:
            long long v187 = &v155[v950];
            char *v187 = v156[v950];
            uint64_t v188 = *(void **)&v156[v950 + 8];
            *((void *)v187 + 1) = v188;
            *(unsigned char *)(a1 + v105) = 2;
            id v189 = v188;
            goto LABEL_379;
          }
        }
      }
      memcpy(v155, v156, v950);
      goto LABEL_207;
    case 3u:
      uint64_t v108 = v75;
      uint64_t v896 = ~v31;
      uint64_t v853 = v35;
      uint64_t v914 = v31 + 8;
      uint64_t v842 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
      uint64_t v926 = *(void *)(v866 - 8);
      unint64_t v933 = v53;
      unint64_t v109 = ((((v37 + ((v31 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v938 = v66;
      size_t v952 = *(void (**)(uint64_t))(v899 + 16);
      v952(a1);
      unint64_t v965 = (void *)((v54 + a1) & v88);
      int v110 = (const void *)((unint64_t)&a2[v54] & v88);
      if (v24 == v873)
      {
        int v111 = (*(uint64_t (**)(const void *))(v899 + 48))(v110);
        unint64_t v112 = v109;
        uint64_t v113 = v903;
        uint64_t v114 = v108;
        uint64_t v85 = a1;
        goto LABEL_282;
      }
      unint64_t v144 = ((unint64_t)v110 + v905) & v922;
      uint64_t v114 = v108;
      unint64_t v145 = (v884 + v144) & v108;
      if (v882 == v873)
      {
        if (v870 == v882)
        {
          int v111 = (*(uint64_t (**)(unint64_t))(v879 + 48))((v884 + v144) & v108);
          uint64_t v114 = v108;
          unint64_t v112 = v109;
LABEL_190:
          uint64_t v113 = v903;
          uint64_t v85 = a1;
          goto LABEL_282;
        }
        char v207 = (unint64_t *)((v853 + v145) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v113 = v903;
        uint64_t v85 = a1;
        if (v856 <= 0x7FFFFFFE)
        {
          unint64_t v208 = *v207;
          if (v208 >= 0xFFFFFFFF) {
            LODWORD(v208) = -1;
          }
          unint64_t v112 = v109;
          if ((v208 + 1) >= 2) {
            goto LABEL_283;
          }
          goto LABEL_286;
        }
        int v111 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v926 + 48))(((unint64_t)v207 + v914) & v896, v835, v866);
      }
      else
      {
        unint64_t v112 = v109;
        unint64_t v171 = v109 + v145;
        if ((v837 & 0x80000000) == 0)
        {
          unint64_t v172 = *(void *)(v171 + 8);
          if (v172 >= 0xFFFFFFFF) {
            LODWORD(v172) = -1;
          }
          int v111 = v172 + 1;
          goto LABEL_190;
        }
        size_t v217 = (v872 + ((v940 + v171) & v918)) & v74;
        uint64_t v113 = v903;
        uint64_t v85 = a1;
        if (v890 <= 0x7FFFFFFD)
        {
          unint64_t v830 = *(void *)(((v831 + ((v864 + v217) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v830 >= 0xFFFFFFFF) {
            LODWORD(v830) = -1;
          }
          if ((v830 + 1) >= 2) {
            goto LABEL_283;
          }
          goto LABEL_286;
        }
        int v111 = (*(uint64_t (**)(size_t, void, uint64_t))(v865 + 48))(v217, v890, v888);
      }
      uint64_t v114 = v108;
      unint64_t v112 = v109;
LABEL_282:
      if (v111)
      {
LABEL_283:
        id v381 = v965;
        memcpy(v965, v110, v858);
LABEL_284:
        size_t v382 = v891;
        goto LABEL_378;
      }
      unint64_t v144 = ((unint64_t)v110 + v905) & v922;
      unint64_t v145 = (v884 + v144) & v114;
LABEL_286:
      size_t v946 = v110;
      id v383 = v110;
      unint64_t v384 = v112;
      uint64_t v385 = v114;
      ((void (*)(void *, const void *, uint64_t))v952)(v965, v383, v113);
      size_t v386 = v74;
      unint64_t v387 = ((unint64_t)v965 + v905) & v922;
      ((void (*)(unint64_t, unint64_t, uint64_t))v952)(v387, v144, v113);
      unint64_t v388 = (v884 + v387) & v385;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v879 + 16))(v388, v145, v878);
      unint64_t v389 = (void *)((v853 + v388) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v390 = (void *)((v853 + v145) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v389 = *v390;
      unint64_t v391 = ((unint64_t)v389 + v914) & v896;
      unint64_t v392 = ((unint64_t)v390 + v914) & v896;
      unint64_t v393 = *(void (**)(unint64_t, unint64_t, uint64_t))(v926 + 16);
      swift_bridgeObjectRetain();
      v393(v391, v392, v866);
      unint64_t v394 = (void *)((v842 + v392) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v395 = (void *)((v842 + v391) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v395 = *v394;
      uint64_t v396 = (void *)(((unint64_t)v395 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v397 = (void *)(((unint64_t)v394 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v396 = *v397;
      v396[1] = v397[1];
      v398 = (void *)(v384 + v388);
      void *v398 = *(void *)(v384 + v145);
      v398[1] = *(void *)(v384 + v145 + 8);
      uint64_t v399 = (v940 + v384 + v388) & v918;
      uint64_t v400 = (v940 + v384 + v145) & v918;
      *(unsigned char *)uint64_t v399 = *(unsigned char *)v400;
      uint64_t v401 = v399 | 4;
      int v402 = *(_DWORD *)(v400 | 4);
      *(unsigned char *)(v401 + 4) = *(unsigned char *)((v400 | 4) + 4);
      *(_DWORD *)uint64_t v401 = v402;
      *(_WORD *)(v399 + 10) = *(_WORD *)(v400 + 0xA);
      size_t v403 = (v872 + v399) & v386;
      uint64_t v953 = v400;
      size_t v404 = (v872 + v400) & v386;
      uint64_t v405 = *(void (**)(size_t, size_t, uint64_t))(v865 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v405(v403, v404, v888);
      size_t v406 = (v864 + v403) & v386;
      size_t v407 = (v864 + v404) & v386;
      v405(v406, v407, v888);
      uint64_t v408 = (unsigned char *)(v406 + v889);
      *uint64_t v408 = *(unsigned char *)(v407 + v889);
      v408[1] = *(unsigned char *)(v407 + v889 + 1);
      v408[2] = *(unsigned char *)(v407 + v889 + 2);
      v408[3] = *(unsigned char *)(v407 + v889 + 3);
      v408[4] = *(unsigned char *)(v407 + v889 + 4);
      unint64_t v409 = (v406 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v410 = (v407 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v409 = *(void *)v410;
      *(void *)(v409 + 8) = *(void *)(v410 + 8);
      *(unsigned char *)(v409 + 16) = *(unsigned char *)(v410 + 16);
      *(unsigned char *)(v409 + 17) = *(unsigned char *)(v410 + 17);
      *(unsigned char *)(v409 + 18) = *(unsigned char *)(v410 + 18);
      *(unsigned char *)(v409 + 19) = *(unsigned char *)(v410 + 19);
      unint64_t v411 = (v409 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v412 = (v410 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v411 = *(void *)v412;
      *(unsigned char *)(v411 + 8) = *(unsigned char *)(v412 + 8);
      *(unsigned char *)(v411 + 9) = *(unsigned char *)(v412 + 9);
      *(unsigned char *)(v411 + 10) = *(unsigned char *)(v412 + 10);
      *(unsigned char *)(v411 + 11) = *(unsigned char *)(v412 + 11);
      *(unsigned char *)(v411 + 12) = *(unsigned char *)(v412 + 12);
      unint64_t v413 = (void *)((v410 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v414 = (void *)((v409 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v414 = *v413;
      unint64_t v415 = ((unint64_t)v414 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v416 = ((unint64_t)v413 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v415 = *(void *)v416;
      *(unsigned char *)(v415 + 8) = *(unsigned char *)(v416 + 8);
      *(unsigned char *)(v415 + 9) = *(unsigned char *)(v416 + 9);
      unint64_t v417 = (void *)((v863 + v415) & v386);
      unint64_t v418 = (const void *)((v863 + v416) & v386);
      v419 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v865 + 48);
      swift_bridgeObjectRetain();
      if (v419(v418, 1, v888))
      {
        memcpy(v417, v418, v891);
      }
      else
      {
        v405((size_t)v417, (size_t)v418, v888);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v865 + 56))(v417, 0, 1, v888);
      }
      v420 = (void *)(((unint64_t)v417 + v862) & 0xFFFFFFFFFFFFFFF8);
      v421 = (void *)(((unint64_t)v418 + v862) & 0xFFFFFFFFFFFFFFF8);
      void *v420 = *v421;
      unint64_t v422 = ((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v423 = ((unint64_t)v421 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v424 = *(void *)v423;
      *(unsigned char *)(v422 + 8) = *(unsigned char *)(v423 + 8);
      *(void *)unint64_t v422 = v424;
      unint64_t v425 = (void *)(((unint64_t)v420 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v426 = (void *)(((unint64_t)v421 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v425 = *v426;
      unint64_t v427 = ((unint64_t)v425 + 15) & 0xFFFFFFFFFFFFFFF8;
      v428 = (uint64_t *)(((unint64_t)v426 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v429 = v428[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v429 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v427 = *(_OWORD *)v428;
      }
      else
      {
        uint64_t v430 = *v428;
        sub_24D3F9C18(*v428, v429);
        *(void *)unint64_t v427 = v430;
        *(void *)(v427 + 8) = v429;
      }
      unsigned int v431 = v890;
      unint64_t v432 = (v427 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v433 = ((unint64_t)v428 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v434 = *(void *)v433;
      *(unsigned char *)(v432 + 8) = *(unsigned char *)(v433 + 8);
      *(void *)unint64_t v432 = v434;
      *(unsigned char *)(v432 + 9) = *(unsigned char *)(v433 + 9);
      unint64_t v435 = (v432 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v436 = (v433 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v437 = *(_DWORD *)v436;
      *(unsigned char *)(v435 + 4) = *(unsigned char *)(v436 + 4);
      *(_DWORD *)unint64_t v435 = v437;
      int v438 = (void *)((v432 + 25) & 0xFFFFFFFFFFFFFFF8);
      v439 = (void *)((v433 + 25) & 0xFFFFFFFFFFFFFFF8);
      *int v438 = *v439;
      v438[1] = v439[1];
      unint64_t v440 = v399 + v939;
      size_t v441 = (long long *)(v953 + v939);
      unint64_t v442 = *(void *)(v953 + v939 + 16);
      if (v442 >= 0xFFFFFFFF) {
        LODWORD(v442) = -1;
      }
      int v443 = v442 - 1;
      swift_bridgeObjectRetain();
      if (v443 < 0)
      {
        *(void *)unint64_t v440 = *(void *)v441;
        *(unsigned char *)(v440 + 8) = *((unsigned char *)v441 + 8);
        *(unsigned char *)(v440 + 9) = *((unsigned char *)v441 + 9);
        long long v456 = (void *)*((void *)v441 + 2);
        id v457 = v456;
        *(void *)(v440 + 16) = v456;
        id v458 = (void *)*((void *)v441 + 3);
        id v459 = v458;
        *(void *)(v440 + 24) = v458;
        *(unsigned char *)(v440 + 32) = *((unsigned char *)v441 + 32);
        *(unsigned char *)(v440 + 33) = *((unsigned char *)v441 + 33);
        *(unsigned char *)(v440 + 34) = *((unsigned char *)v441 + 34);
        *(void *)(v440 + 40) = *((void *)v441 + 5);
        *(void *)(v440 + 48) = *((void *)v441 + 6);
        *(void *)(v440 + 56) = *((void *)v441 + 7);
        *(void *)(v440 + 64) = *((void *)v441 + 8);
        *(unsigned char *)(v440 + 72) = *((unsigned char *)v441 + 72);
        *(void *)(v440 + 80) = *((void *)v441 + 10);
        *(void *)(v440 + 88) = *((void *)v441 + 11);
        size_t v954 = (void *)*((void *)v441 + 12);
        *(void *)(v440 + 96) = v954;
        *(unsigned char *)(v440 + 104) = *((unsigned char *)v441 + 104);
        *(unsigned char *)(v440 + 105) = *((unsigned char *)v441 + 105);
        *(void *)(v440 + 112) = *((void *)v441 + 14);
        *(void *)(v440 + 120) = *((void *)v441 + 15);
        *(void *)(v440 + 128) = *((void *)v441 + 16);
        *(void *)(v440 + 136) = *((void *)v441 + 17);
        *(void *)(v440 + 144) = *((void *)v441 + 18);
        *(void *)(v440 + 152) = *((void *)v441 + 19);
        *(void *)(v440 + 160) = *((void *)v441 + 20);
        *(void *)(v440 + 168) = *((void *)v441 + 21);
        *(unsigned char *)(v440 + 176) = *((unsigned char *)v441 + 176);
        *(void *)(v440 + 184) = *((void *)v441 + 23);
        uint64_t v460 = *((void *)v441 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v461 = v954;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v460)
        {
          *(void *)(v440 + 192) = v460;
          *(void *)(v440 + 200) = *((void *)v441 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v440 + 192) = v441[12];
        }
        unsigned int v431 = v890;
        id v381 = v965;
        *(void *)(v440 + 208) = *((void *)v441 + 26);
        *(void *)(v440 + 216) = *((void *)v441 + 27);
        *(void *)(v440 + 224) = *((void *)v441 + 28);
        *(void *)(v440 + 232) = *((void *)v441 + 29);
        *(void *)(v440 + 240) = *((void *)v441 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v444 = *v441;
        long long v445 = v441[1];
        long long v446 = v441[3];
        *(_OWORD *)(v440 + 32) = v441[2];
        *(_OWORD *)(v440 + 48) = v446;
        *(_OWORD *)unint64_t v440 = v444;
        *(_OWORD *)(v440 + 16) = v445;
        long long v447 = v441[4];
        long long v448 = v441[5];
        long long v449 = v441[7];
        *(_OWORD *)(v440 + 96) = v441[6];
        *(_OWORD *)(v440 + 112) = v449;
        *(_OWORD *)(v440 + 64) = v447;
        *(_OWORD *)(v440 + 80) = v448;
        long long v450 = v441[8];
        long long v451 = v441[9];
        long long v452 = v441[11];
        *(_OWORD *)(v440 + 160) = v441[10];
        *(_OWORD *)(v440 + 176) = v452;
        *(_OWORD *)(v440 + 128) = v450;
        *(_OWORD *)(v440 + 144) = v451;
        long long v453 = v441[12];
        long long v454 = v441[13];
        long long v455 = v441[14];
        *(void *)(v440 + 240) = *((void *)v441 + 30);
        *(_OWORD *)(v440 + 208) = v454;
        *(_OWORD *)(v440 + 224) = v455;
        *(_OWORD *)(v440 + 192) = v453;
        id v381 = v965;
      }
      v747 = (_OWORD *)((v440 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v748 = (long long *)(((unint64_t)v441 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v749 = *v748;
      *(_OWORD *)((char *)v747 + 9) = *(long long *)((char *)v748 + 9);
      _OWORD *v747 = v749;
      unint64_t v750 = (v440 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v751 = ((unint64_t)v441 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v752 = *(_OWORD *)v751;
      *(unsigned char *)(v750 + 16) = *(unsigned char *)(v751 + 16);
      *(_OWORD *)unint64_t v750 = v752;
      unint64_t v753 = (void *)((v440 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v754 = ((unint64_t)v441 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v755 = *(void *)v754;
      v754 += 15;
      *unint64_t v753 = v755;
      uint64_t v756 = (void *)(((unint64_t)v753 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v757 = *(void *)(v754 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v758 = *(void *)((v754 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v757, v758);
      *uint64_t v756 = v757;
      v756[1] = v758;
      size_t v382 = v889;
      int v110 = v946;
      uint64_t v85 = a1;
      if (!v431) {
        goto LABEL_284;
      }
LABEL_378:
      unint64_t v759 = ((((v933
               + ((((((((((v892 + v382 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      v760 = (void *)(((unint64_t)v381 + v759) & 0xFFFFFFFFFFFFFFF8);
      v761 = (void *)(((unint64_t)v110 + v759) & 0xFFFFFFFFFFFFFFF8);
      void *v760 = *v761;
      v760[1] = v761[1];
      *(void *)(((unint64_t)v760 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v761 + 23) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v85 + v938) = 3;
      swift_bridgeObjectRetain();
      goto LABEL_379;
    case 4u:
      unint64_t v115 = v66;
      uint64_t v85 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v899 + 16))(a1, a2, v903);
      char v116 = 4;
      goto LABEL_116;
    case 5u:
      unint64_t v115 = v66;
      uint64_t v85 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v899 + 16))(a1, a2, v903);
      char v116 = 5;
      goto LABEL_116;
    case 6u:
      unint64_t v117 = v66;
      uint64_t v85 = a1;
      (*(void (**)(uint64_t))(v899 + 16))(a1);
      unint64_t v118 = (void *)((v65 + a1) & v89);
      unint64_t v119 = (const void *)((unint64_t)&a2[v65] & v89);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v51 + 48))(v119, 1, v850))
      {
        memcpy(v118, v119, v61);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v51 + 16))(v118, v119, v850);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v118, 0, 1, v850);
      }
      unint64_t v166 = v962;
      *(unsigned char *)(a1 + v117) = 6;
      char v137 = 1;
      goto LABEL_410;
    case 7u:
      unint64_t v115 = v66;
      uint64_t v85 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v899 + 16))(a1, a2, v903);
      char v116 = 7;
LABEL_116:
      *(unsigned char *)(v85 + v115) = v116;
      goto LABEL_379;
    default:
      uint64_t v90 = v75;
      uint64_t v894 = ~v31;
      uint64_t v851 = v35;
      uint64_t v912 = v31 + 8;
      uint64_t v840 = *(void *)(*(void *)(v866 - 8) + 64) + 7;
      uint64_t v924 = *(void *)(v866 - 8);
      unint64_t v931 = v53;
      unint64_t v964 = ((((v37 + ((v31 + 8 + (v35 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v936 = v66;
      unint64_t v91 = *(void (**)(uint64_t))(v899 + 16);
      v91(a1);
      v951 = (void *)((v54 + a1) & v88);
      int v92 = (const void *)((unint64_t)&a2[v54] & v88);
      if (v24 != v873)
      {
        unint64_t v140 = ((unint64_t)v92 + v905) & v922;
        uint64_t v95 = v90;
        unint64_t v141 = (v884 + v140) & v90;
        if (v882 == v873)
        {
          if (v870 == v882)
          {
            int v93 = (*(uint64_t (**)(unint64_t))(v879 + 48))((v884 + v140) & v90);
            uint64_t v95 = v90;
LABEL_181:
            uint64_t v94 = v903;
            uint64_t v85 = a1;
            goto LABEL_245;
          }
          uint64_t v203 = (unint64_t *)((v851 + v141) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v94 = v903;
          uint64_t v85 = a1;
          if (v856 <= 0x7FFFFFFE)
          {
            unint64_t v204 = *v203;
            goto LABEL_412;
          }
          int v93 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v924 + 48))(((unint64_t)v203 + v912) & v894, v835, v866);
        }
        else
        {
          unint64_t v167 = v964 + v141;
          if ((v837 & 0x80000000) == 0)
          {
            unint64_t v168 = *(void *)(v167 + 8);
            if (v168 >= 0xFFFFFFFF) {
              LODWORD(v168) = -1;
            }
            int v93 = v168 + 1;
            goto LABEL_181;
          }
          size_t v215 = (v872 + ((v940 + v167) & v918)) & v74;
          uint64_t v94 = v903;
          uint64_t v85 = a1;
          if (v890 <= 0x7FFFFFFD)
          {
            unint64_t v204 = *(void *)(((v831 + ((v864 + v215) & v74)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_412:
            if (v204 >= 0xFFFFFFFF) {
              LODWORD(v204) = -1;
            }
            if ((v204 + 1) >= 2) {
              goto LABEL_246;
            }
            goto LABEL_249;
          }
          int v93 = (*(uint64_t (**)(size_t, void, uint64_t))(v865 + 48))(v215, v890, v888);
        }
        uint64_t v95 = v90;
        goto LABEL_245;
      }
      int v93 = (*(uint64_t (**)(const void *))(v899 + 48))(v92);
      uint64_t v94 = v903;
      uint64_t v95 = v90;
      uint64_t v85 = a1;
LABEL_245:
      if (v93)
      {
LABEL_246:
        unint64_t v221 = v951;
        memcpy(v951, v92, v858);
LABEL_247:
        size_t v222 = v891;
        goto LABEL_355;
      }
      unint64_t v140 = ((unint64_t)v92 + v905) & v922;
      unint64_t v141 = (v884 + v140) & v95;
LABEL_249:
      size_t v945 = v92;
      uint64_t v223 = v92;
      uint64_t v224 = v95;
      ((void (*)(void *, const void *, uint64_t))v91)(v951, v223, v94);
      size_t v225 = v74;
      unint64_t v226 = ((unint64_t)v951 + v905) & v922;
      ((void (*)(unint64_t, unint64_t, uint64_t))v91)(v226, v140, v94);
      unint64_t v227 = (v884 + v226) & v224;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v879 + 16))(v227, v141, v878);
      unint64_t v228 = (void *)((v851 + v227) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v229 = (void *)((v851 + v141) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v228 = *v229;
      unint64_t v230 = ((unint64_t)v228 + v912) & v894;
      unint64_t v231 = ((unint64_t)v229 + v912) & v894;
      unint64_t v232 = *(void (**)(unint64_t, unint64_t, uint64_t))(v924 + 16);
      swift_bridgeObjectRetain();
      v232(v230, v231, v866);
      unint64_t v233 = (void *)((v840 + v231) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v234 = (void *)((v840 + v230) & 0xFFFFFFFFFFFFFFF8);
      void *v234 = *v233;
      unint64_t v235 = (void *)(((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v236 = (void *)(((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v235 = *v236;
      v235[1] = v236[1];
      int v237 = (void *)(v964 + v227);
      *int v237 = *(void *)(v964 + v141);
      v237[1] = *(void *)(v964 + v141 + 8);
      unint64_t v238 = (v940 + v964 + v227) & v918;
      unint64_t v239 = (v940 + v964 + v141) & v918;
      *(unsigned char *)unint64_t v238 = *(unsigned char *)v239;
      uint64_t v240 = v238 | 4;
      int v241 = *(_DWORD *)(v239 | 4);
      *(unsigned char *)(v240 + 4) = *(unsigned char *)((v239 | 4) + 4);
      *(_DWORD *)uint64_t v240 = v241;
      *(_WORD *)(v238 + 10) = *(_WORD *)(v239 + 0xA);
      unint64_t v242 = (v872 + v238) & v225;
      unint64_t v969 = v239;
      unint64_t v243 = (v872 + v239) & v225;
      unint64_t v244 = *(void (**)(unint64_t, unint64_t, uint64_t))(v865 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v244(v242, v243, v888);
      size_t v245 = (v864 + v242) & v225;
      size_t v246 = (v864 + v243) & v225;
      v244(v245, v246, v888);
      unint64_t v247 = (unsigned char *)(v245 + v889);
      unsigned char *v247 = *(unsigned char *)(v246 + v889);
      v247[1] = *(unsigned char *)(v246 + v889 + 1);
      v247[2] = *(unsigned char *)(v246 + v889 + 2);
      v247[3] = *(unsigned char *)(v246 + v889 + 3);
      v247[4] = *(unsigned char *)(v246 + v889 + 4);
      unint64_t v248 = (v245 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v249 = (v246 + v889 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v248 = *(void *)v249;
      *(void *)(v248 + 8) = *(void *)(v249 + 8);
      *(unsigned char *)(v248 + 16) = *(unsigned char *)(v249 + 16);
      *(unsigned char *)(v248 + 17) = *(unsigned char *)(v249 + 17);
      *(unsigned char *)(v248 + 18) = *(unsigned char *)(v249 + 18);
      *(unsigned char *)(v248 + 19) = *(unsigned char *)(v249 + 19);
      unint64_t v250 = (v248 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v251 = (v249 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v250 = *(void *)v251;
      *(unsigned char *)(v250 + 8) = *(unsigned char *)(v251 + 8);
      *(unsigned char *)(v250 + 9) = *(unsigned char *)(v251 + 9);
      *(unsigned char *)(v250 + 10) = *(unsigned char *)(v251 + 10);
      *(unsigned char *)(v250 + 11) = *(unsigned char *)(v251 + 11);
      *(unsigned char *)(v250 + 12) = *(unsigned char *)(v251 + 12);
      unint64_t v252 = (void *)((v249 + 47) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v253 = (void *)((v248 + 47) & 0xFFFFFFFFFFFFFFF8);
      void *v253 = *v252;
      unint64_t v254 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v255 = ((unint64_t)v252 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v254 = *(void *)v255;
      *(unsigned char *)(v254 + 8) = *(unsigned char *)(v255 + 8);
      *(unsigned char *)(v254 + 9) = *(unsigned char *)(v255 + 9);
      uint64_t v256 = (void *)((v863 + v254) & v225);
      unint64_t v257 = (const void *)((v863 + v255) & v225);
      unint64_t v258 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v865 + 48);
      swift_bridgeObjectRetain();
      if (v258(v257, 1, v888))
      {
        memcpy(v256, v257, v891);
      }
      else
      {
        v244((unint64_t)v256, (unint64_t)v257, v888);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v865 + 56))(v256, 0, 1, v888);
      }
      unint64_t v259 = (void *)(((unint64_t)v256 + v862) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v260 = (void *)(((unint64_t)v257 + v862) & 0xFFFFFFFFFFFFFFF8);
      void *v259 = *v260;
      unint64_t v261 = ((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v262 = ((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v263 = *(void *)v262;
      *(unsigned char *)(v261 + 8) = *(unsigned char *)(v262 + 8);
      *(void *)unint64_t v261 = v263;
      uint64_t v264 = (void *)(((unint64_t)v259 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v265 = (void *)(((unint64_t)v260 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v264 = *v265;
      unint64_t v266 = ((unint64_t)v264 + 15) & 0xFFFFFFFFFFFFFFF8;
      unsigned int v267 = (uint64_t *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v268 = v267[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v268 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v266 = *(_OWORD *)v267;
      }
      else
      {
        uint64_t v269 = *v267;
        sub_24D3F9C18(*v267, v268);
        *(void *)unint64_t v266 = v269;
        *(void *)(v266 + 8) = v268;
      }
      unsigned int v270 = v890;
      unint64_t v271 = (v266 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v272 = ((unint64_t)v267 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v273 = *(void *)v272;
      *(unsigned char *)(v271 + 8) = *(unsigned char *)(v272 + 8);
      *(void *)unint64_t v271 = v273;
      *(unsigned char *)(v271 + 9) = *(unsigned char *)(v272 + 9);
      unint64_t v274 = (v271 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v275 = (v272 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v276 = *(_DWORD *)v275;
      *(unsigned char *)(v274 + 4) = *(unsigned char *)(v275 + 4);
      *(_DWORD *)unint64_t v274 = v276;
      uint64_t v277 = (void *)((v271 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v278 = (void *)((v272 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v277 = *v278;
      v277[1] = v278[1];
      unint64_t v279 = v238 + v939;
      uint64_t v280 = (long long *)(v969 + v939);
      unint64_t v281 = *(void *)(v969 + v939 + 16);
      if (v281 >= 0xFFFFFFFF) {
        LODWORD(v281) = -1;
      }
      int v282 = v281 - 1;
      swift_bridgeObjectRetain();
      if (v282 < 0)
      {
        *(void *)unint64_t v279 = *(void *)v280;
        *(unsigned char *)(v279 + 8) = *((unsigned char *)v280 + 8);
        *(unsigned char *)(v279 + 9) = *((unsigned char *)v280 + 9);
        uint64_t v295 = (void *)*((void *)v280 + 2);
        id v296 = v295;
        *(void *)(v279 + 16) = v295;
        uint64_t v297 = (void *)*((void *)v280 + 3);
        id v298 = v297;
        *(void *)(v279 + 24) = v297;
        *(unsigned char *)(v279 + 32) = *((unsigned char *)v280 + 32);
        *(unsigned char *)(v279 + 33) = *((unsigned char *)v280 + 33);
        *(unsigned char *)(v279 + 34) = *((unsigned char *)v280 + 34);
        *(void *)(v279 + 40) = *((void *)v280 + 5);
        *(void *)(v279 + 48) = *((void *)v280 + 6);
        *(void *)(v279 + 56) = *((void *)v280 + 7);
        *(void *)(v279 + 64) = *((void *)v280 + 8);
        *(unsigned char *)(v279 + 72) = *((unsigned char *)v280 + 72);
        *(void *)(v279 + 80) = *((void *)v280 + 10);
        *(void *)(v279 + 88) = *((void *)v280 + 11);
        v970 = (void *)*((void *)v280 + 12);
        *(void *)(v279 + 96) = v970;
        *(unsigned char *)(v279 + 104) = *((unsigned char *)v280 + 104);
        *(unsigned char *)(v279 + 105) = *((unsigned char *)v280 + 105);
        *(void *)(v279 + 112) = *((void *)v280 + 14);
        *(void *)(v279 + 120) = *((void *)v280 + 15);
        *(void *)(v279 + 128) = *((void *)v280 + 16);
        *(void *)(v279 + 136) = *((void *)v280 + 17);
        *(void *)(v279 + 144) = *((void *)v280 + 18);
        *(void *)(v279 + 152) = *((void *)v280 + 19);
        *(void *)(v279 + 160) = *((void *)v280 + 20);
        *(void *)(v279 + 168) = *((void *)v280 + 21);
        *(unsigned char *)(v279 + 176) = *((unsigned char *)v280 + 176);
        *(void *)(v279 + 184) = *((void *)v280 + 23);
        uint64_t v299 = *((void *)v280 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v300 = v970;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v299)
        {
          *(void *)(v279 + 192) = v299;
          *(void *)(v279 + 200) = *((void *)v280 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v279 + 192) = v280[12];
        }
        unsigned int v270 = v890;
        unint64_t v221 = v951;
        *(void *)(v279 + 208) = *((void *)v280 + 26);
        *(void *)(v279 + 216) = *((void *)v280 + 27);
        *(void *)(v279 + 224) = *((void *)v280 + 28);
        *(void *)(v279 + 232) = *((void *)v280 + 29);
        *(void *)(v279 + 240) = *((void *)v280 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v283 = *v280;
        long long v284 = v280[1];
        long long v285 = v280[3];
        *(_OWORD *)(v279 + 32) = v280[2];
        *(_OWORD *)(v279 + 48) = v285;
        *(_OWORD *)unint64_t v279 = v283;
        *(_OWORD *)(v279 + 16) = v284;
        long long v286 = v280[4];
        long long v287 = v280[5];
        long long v288 = v280[7];
        *(_OWORD *)(v279 + 96) = v280[6];
        *(_OWORD *)(v279 + 112) = v288;
        *(_OWORD *)(v279 + 64) = v286;
        *(_OWORD *)(v279 + 80) = v287;
        long long v289 = v280[8];
        long long v290 = v280[9];
        long long v291 = v280[11];
        *(_OWORD *)(v279 + 160) = v280[10];
        *(_OWORD *)(v279 + 176) = v291;
        *(_OWORD *)(v279 + 128) = v289;
        *(_OWORD *)(v279 + 144) = v290;
        long long v292 = v280[12];
        long long v293 = v280[13];
        long long v294 = v280[14];
        *(void *)(v279 + 240) = *((void *)v280 + 30);
        *(_OWORD *)(v279 + 208) = v293;
        *(_OWORD *)(v279 + 224) = v294;
        *(_OWORD *)(v279 + 192) = v292;
        unint64_t v221 = v951;
      }
      unint64_t v699 = (_OWORD *)((v279 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v700 = (long long *)(((unint64_t)v280 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v701 = *v700;
      *(_OWORD *)((char *)v699 + 9) = *(long long *)((char *)v700 + 9);
      *unint64_t v699 = v701;
      unint64_t v702 = (v279 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v703 = ((unint64_t)v280 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v704 = *(_OWORD *)v703;
      *(unsigned char *)(v702 + 16) = *(unsigned char *)(v703 + 16);
      *(_OWORD *)unint64_t v702 = v704;
      v705 = (void *)((v279 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v706 = ((unint64_t)v280 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v707 = *(void *)v706;
      v706 += 15;
      void *v705 = v707;
      unint64_t v708 = (void *)(((unint64_t)v705 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v709 = *(void *)(v706 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v710 = *(void *)((v706 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v709, v710);
      *unint64_t v708 = v709;
      v708[1] = v710;
      size_t v222 = v889;
      int v92 = v945;
      uint64_t v85 = a1;
      if (!v270) {
        goto LABEL_247;
      }
LABEL_355:
      unint64_t v711 = ((((v931
               + ((((((((((v892 + v222 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      id v712 = (void *)(((unint64_t)v221 + v711) & 0xFFFFFFFFFFFFFFF8);
      v713 = (void *)(((unint64_t)v92 + v711) & 0xFFFFFFFFFFFFFFF8);
      *id v712 = *v713;
      v714 = *(void **)(((unint64_t)v713 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v712 + 15) & 0xFFFFFFFFFFFFFFF8) = v714;
      *(unsigned char *)(v85 + v936) = 0;
      id v715 = v714;
LABEL_379:
      char v137 = 1;
LABEL_409:
      unint64_t v166 = v962;
LABEL_410:
      *(unsigned char *)(v85 + v166) = v137;
      return v85;
  }
}

unsigned __int8 *sub_24D9DC9A0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 != a2)
  {
    uint64_t v4 = *(void *)(a3 + 16);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v1054 = *(void *)(v5 + 64);
    uint64_t v1062 = *(unsigned __int8 *)(v5 + 80);
    uint64_t v1025 = v4;
    uint64_t v1001 = swift_getAssociatedTypeWitness();
    v1021 = v3;
    uint64_t v6 = *(void *)(v1001 - 8);
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v982 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v982 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v975 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v975 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = v12 | 7;
    uint64_t v14 = v10 | v1062 | v12;
    uint64_t v1049 = v5;
    uint64_t v1002 = v6;
    uint64_t v983 = v8;
    unsigned int v15 = *(_DWORD *)(v8 + 84);
    unsigned int v985 = *(_DWORD *)(v6 + 84);
    if (v985 > v15) {
      unsigned int v15 = *(_DWORD *)(v6 + 84);
    }
    unsigned int v960 = v15;
    if (v15 <= 0x7FFFFFFE) {
      unsigned int v15 = 2147483646;
    }
    unsigned int v1031 = *(_DWORD *)(v5 + 84);
    unsigned int v1003 = v15;
    if (v15 <= v1031) {
      unsigned int v15 = *(_DWORD *)(v5 + 84);
    }
    uint64_t v1006 = *(void *)(v975 - 8);
    unsigned int v16 = *(_DWORD *)(v11 + 84);
    if (v16 <= 0x7FFFFFFE) {
      unsigned int v17 = 2147483646;
    }
    else {
      unsigned int v17 = v16;
    }
    unsigned int v1023 = v17;
    if (v15 <= v17) {
      unsigned int v15 = v17;
    }
    unsigned int v952 = v15;
    if (v15 <= 0x7FFFFFFF) {
      unsigned int v15 = 0x7FFFFFFF;
    }
    unsigned int v994 = v15;
    unsigned int v966 = v16;
    uint64_t v997 = v1054 + v1062;
    uint64_t v1014 = v10;
    uint64_t v998 = v1054 + v10;
    uint64_t v1005 = *(void *)(v6 + 64) + 7;
    uint64_t v981 = v9 + 8;
    uint64_t v1018 = v9;
    uint64_t v965 = *(void *)(v8 + 64) + 7;
    unint64_t v1043 = ((((v965 + ((v9 + 8 + (v1005 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16;
    uint64_t v1009 = v12 | 7;
    uint64_t v1029 = v13 + 16;
    uint64_t v987 = v12 + 12;
    size_t v18 = *(void *)(*(void *)(v975 - 8) + 64);
    size_t v974 = v18 + v12;
    size_t v961 = v18 + 12;
    unint64_t v19 = (v12
         + 10
         + ((((((v18 + 12 + ((v18 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
    size_t v971 = v18;
    if (!v16) {
      ++v18;
    }
    size_t v995 = v18;
    unint64_t v989 = v19;
    uint64_t v969 = v12 + 10;
    size_t v970 = v18 + 7;
    unint64_t v1028 = ((((((((((v18 + 7 + v19) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 16;
    uint64_t v962 = (v13 + 16 + v1043 + ((v1054 + v10 + ((v1054 + v1062) & ~v1062)) & ~v10)) & ~v13;
    unint64_t v992 = v14 + v1054;
    uint64_t v1016 = v10 | v1062 | v12;
    unint64_t v973 = ((((v962 + v1028 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v20 = v973 + ((v14 + v1054) & ~v14);
    unint64_t v1011 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v21 = *(void *)(a3 + 24);
    uint64_t v1039 = swift_getAssociatedTypeWitness();
    uint64_t v22 = *(void *)(v1039 - 8);
    uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
    unint64_t v1007 = (v20 + v23) & ~v23;
    uint64_t v1027 = v22;
    unsigned int v24 = *(_DWORD *)(v22 + 84);
    unint64_t v25 = *(void *)(v22 + 64);
    if (v24) {
      size_t v26 = *(void *)(v22 + 64);
    }
    else {
      size_t v26 = v25 + 1;
    }
    size_t v1022 = v26;
    uint64_t v999 = swift_getAssociatedTypeWitness();
    uint64_t v27 = *(void *)(v999 - 8);
    int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
    uint64_t v29 = v21;
    uint64_t v30 = swift_getAssociatedTypeWitness();
    uint64_t v31 = v12;
    uint64_t v32 = *(void *)(v30 - 8);
    uint64_t v33 = *(unsigned __int8 *)(v32 + 80);
    uint64_t v34 = v28 | v33 | 7;
    uint64_t v1000 = v27;
    unsigned int v35 = *(_DWORD *)(v27 + 84);
    uint64_t v979 = v32;
    uint64_t v980 = v30;
    unsigned int v36 = *(_DWORD *)(v32 + 84);
    if (v35 > v36) {
      unsigned int v36 = *(_DWORD *)(v27 + 84);
    }
    unsigned int v959 = v36;
    if (v36 <= 0x7FFFFFFE) {
      unsigned int v37 = 2147483646;
    }
    else {
      unsigned int v37 = v36;
    }
    uint64_t v1004 = *(void *)(v27 + 64) + 7;
    uint64_t v978 = v33 + 8;
    uint64_t v964 = *(void *)(*(void *)(v30 - 8) + 64) + 7;
    unint64_t v38 = ((((v964 + ((v33 + 8 + (v1004 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v39 = ((((((v1022 + v34 + v1007) & ~v34) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    size_t v40 = v1054;
    uint64_t v41 = v1054 + v23;
    size_t v968 = v1022 + v34;
    uint64_t v42 = *(void *)(v1025 - 8);
    uint64_t v43 = *(unsigned __int8 *)(v42 + 80);
    uint64_t v957 = v1054 + v43;
    if (*(_DWORD *)(v42 + 84)) {
      uint64_t v44 = *(void *)(*(void *)(v1025 - 8) + 64);
    }
    else {
      uint64_t v44 = *(void *)(*(void *)(v1025 - 8) + 64) + 1;
    }
    unint64_t v45 = ((v1054 + v43) & ~v43) + v44;
    unint64_t v46 = ((v1011 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v1054 > v46) {
      unint64_t v46 = v1054;
    }
    if (v39 <= v38 + ((v1022 + v34 + ((v1054 + v23) & ~v23)) & ~v34) + 16) {
      unint64_t v39 = v38 + ((v1022 + v34 + ((v1054 + v23) & ~v23)) & ~v34) + 16;
    }
    if (((v1011 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v45) {
      unint64_t v45 = ((v1011 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v46 > v39) {
      unint64_t v39 = v46;
    }
    if (v39 <= v45) {
      unint64_t v47 = v45;
    }
    else {
      unint64_t v47 = v39;
    }
    uint64_t v48 = v23 | v12 | v34;
    unsigned int v993 = v24;
    if (v37 <= v24) {
      unsigned int v49 = v24;
    }
    else {
      unsigned int v49 = v37;
    }
    uint64_t v50 = v29;
    if (v49 <= v1023) {
      unsigned int v49 = v1023;
    }
    unsigned int v951 = v49;
    if (v49 <= 0x7FFFFFFF) {
      int v51 = 0x7FFFFFFF;
    }
    else {
      int v51 = v49;
    }
    uint64_t v1024 = v23;
    uint64_t v1008 = v25 + v23;
    if (!v1031) {
      size_t v40 = v1054 + 1;
    }
    uint64_t v52 = *(void *)(v29 - 8);
    uint64_t v53 = *(unsigned __int8 *)(v52 + 80);
    uint64_t v958 = v52;
    uint64_t v996 = v25 + v34;
    size_t v1013 = ((((v964 + ((v33 + 8 + (v1004 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16;
    unint64_t v54 = (v1029 + v38 + ((v25 + v34 + ((v25 + v23) & ~v23)) & ~v34)) & ~v1009;
    unint64_t v991 = v48 + v25;
    unint64_t __n = ((((v54 + v1028 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v55 = __n + ((v48 + v25) & ~v48);
    uint64_t v956 = v25 + v1062;
    size_t v967 = v40 + v1014;
    if (*(_DWORD *)(v52 + 84)) {
      uint64_t v56 = *(void *)(*(void *)(v29 - 8) + 64);
    }
    else {
      uint64_t v56 = *(void *)(*(void *)(v29 - 8) + 64) + 1;
    }
    if (v25 <= ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v57 = ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      unint64_t v57 = v25;
    }
    if (((((((v40 + v1014 + ((v55 + v1062) & ~v1062)) & ~v1014) + v1043 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8 <= ((v40 + v1014 + ((v25 + v1062) & ~v1062)) & ~v1014) + v1043 + 16)
      unint64_t v58 = ((v40 + v1014 + ((v25 + v1062) & ~v1062)) & ~v1014) + v1043 + 16;
    else {
      unint64_t v58 = ((((((v40 + v1014 + ((v55 + v1062) & ~v1062)) & ~v1014) + v1043 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
    }
          + 8;
    unint64_t v59 = ((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v60 = v25 + v53;
    uint64_t v3 = v1021;
    uint64_t v955 = v60;
    unint64_t v61 = (v60 & ~v53) + v56;
    if (v59 <= v61) {
      unint64_t v59 = v61;
    }
    if (v57 <= v58) {
      unint64_t v57 = v58;
    }
    if (v57 <= v59) {
      unint64_t v62 = v59;
    }
    else {
      unint64_t v62 = v57;
    }
    if (v62 + 1 <= v47 + 1) {
      unint64_t v63 = v47 + 1;
    }
    else {
      unint64_t v63 = v62 + 1;
    }
    unsigned int v64 = v1021[v63];
    unsigned int v65 = v64 - 2;
    if (v64 < 2)
    {
      uint64_t v67 = v1049;
    }
    else
    {
      if (v63 <= 3) {
        uint64_t v66 = v63;
      }
      else {
        uint64_t v66 = 4;
      }
      uint64_t v67 = v1049;
      switch(v66)
      {
        case 1:
          int v68 = *v1021;
          if (v63 < 4) {
            goto LABEL_81;
          }
          goto LABEL_82;
        case 2:
          int v68 = *(unsigned __int16 *)v1021;
          if (v63 >= 4) {
            goto LABEL_82;
          }
          goto LABEL_81;
        case 3:
          int v68 = *(unsigned __int16 *)v1021 | (v1021[2] << 16);
          if (v63 >= 4) {
            goto LABEL_82;
          }
          goto LABEL_81;
        case 4:
          int v68 = *(_DWORD *)v1021;
          if (v63 < 4) {
LABEL_81:
          }
            v68 |= v65 << (8 * v63);
LABEL_82:
          unsigned int v64 = v68 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v990 = ~v1016;
    uint64_t v1017 = ~v1062;
    uint64_t v1055 = ~v1014;
    uint64_t v977 = ~v1018;
    uint64_t v986 = ~v1009;
    uint64_t v988 = ~v31;
    uint64_t v1015 = ~v1024;
    uint64_t v1019 = ~v34;
    uint64_t v976 = ~v33;
    uint64_t v954 = ~v43;
    uint64_t v1010 = ~v48;
    uint64_t v953 = ~v53;
    unsigned int v984 = v35;
    unsigned int v1012 = v37;
    unint64_t v963 = v54;
    uint64_t v949 = v41;
    size_t v950 = v40;
    size_t v947 = v56;
    size_t v948 = v44;
    if (v64 == 1)
    {
      unsigned int v69 = v1021[v62];
      unsigned int v70 = v69 - 8;
      if (v69 >= 8)
      {
        if (v62 <= 3) {
          uint64_t v71 = v62;
        }
        else {
          uint64_t v71 = 4;
        }
        switch(v71)
        {
          case 1:
            int v72 = *v1021;
            if (v62 < 4) {
              goto LABEL_99;
            }
            goto LABEL_103;
          case 2:
            int v72 = *(unsigned __int16 *)v1021;
            if (v62 < 4) {
              goto LABEL_99;
            }
            goto LABEL_103;
          case 3:
            int v72 = *(unsigned __int16 *)v1021 | (v1021[2] << 16);
            if (v62 < 4) {
              goto LABEL_99;
            }
            goto LABEL_103;
          case 4:
            int v72 = *(_DWORD *)v1021;
            if (v62 < 4) {
LABEL_99:
            }
              unsigned int v69 = (v72 | (v70 << (8 * v62))) + 8;
            else {
LABEL_103:
            }
              unsigned int v69 = v72 + 8;
            break;
          default:
            break;
        }
      }
      switch(v69)
      {
        case 1u:
          uint64_t v946 = *(void *)(v1025 - 8);
          uint64_t v94 = *(void (**)(unsigned __int8 *, uint64_t))(v1027 + 8);
          v94(v1021, v1039);
          unint64_t v95 = (unint64_t)&v1021[v991] & v1010;
          if (v993 == v51)
          {
            uint64_t v96 = *(uint64_t (**)(unint64_t))(v1027 + 48);
            unint64_t v97 = (unint64_t)&v1021[v991] & v1010;
            goto LABEL_124;
          }
          unint64_t v99 = (v1008 + v95) & v1015;
          unint64_t v100 = (v996 + v99) & v1019;
          if (v1012 == v51)
          {
            if (v984 == v1012)
            {
              uint64_t v96 = *(uint64_t (**)(unint64_t))(v1000 + 48);
              unint64_t v97 = (v996 + v99) & v1019;
              goto LABEL_124;
            }
            uint64_t v320 = (unint64_t *)((v1004 + v100) & 0xFFFFFFFFFFFFFFF8);
            if (v959 <= 0x7FFFFFFE)
            {
              unint64_t v321 = *v320;
              goto LABEL_742;
            }
            unint64_t v97 = ((unint64_t)v320 + v978) & v976;
            uint64_t v96 = *(uint64_t (**)(unint64_t))(v979 + 48);
          }
          else
          {
            size_t v199 = v1013 + v100;
            if ((v951 & 0x80000000) == 0)
            {
              unint64_t v200 = *(void *)(v199 + 8);
              if (v200 >= 0xFFFFFFFF) {
                LODWORD(v200) = -1;
              }
              if (v200 == -1)
              {
LABEL_125:
                unint64_t v99 = (v1008 + v95) & v1015;
                unint64_t v100 = (v996 + v99) & v1019;
LABEL_126:
                unint64_t v936 = v95;
                v94((unsigned __int8 *)v95, v1039);
                v94((unsigned __int8 *)v99, v1039);
                (*(void (**)(unint64_t, uint64_t))(v1000 + 8))(v100, v999);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v979 + 8))((v978 + ((v1004 + v100) & 0xFFFFFFFFFFFFFFF8)) & v976, v980);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v101 = (v1029 + v1013 + v100) & v986;
                unint64_t v102 = *(void (**)(size_t, uint64_t))(v1006 + 8);
                v102((v987 + v101) & v988, v975);
                size_t v103 = (v974 + ((v987 + v101) & v988)) & v988;
                v102(v103, v975);
                swift_bridgeObjectRelease();
                unint64_t v104 = (v969
                      + ((((((v961 + v103) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v988;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1006 + 48))(v104, 1, v975)) {
                  v102(v104, v975);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v105 = (uint64_t *)((((((v970 + v104) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v106 = v105[1];
                if ((v106 & 0x3000000000000000) == 0) {
                  sub_24D400DCC(*v105, v106);
                }
                swift_bridgeObjectRelease();
                size_t v107 = v101 + v1028;
                uint64_t v108 = *(void **)(v107 + 16);
                LODWORD(v109) = -1;
                if ((unint64_t)v108 < 0xFFFFFFFF) {
                  uint64_t v109 = *(void *)(v107 + 16);
                }
                if ((int)v109 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v107 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_24D466534(*(void *)((((v107 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v107 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                unint64_t v95 = v936;
                goto LABEL_137;
              }
              goto LABEL_137;
            }
            unint64_t v97 = (v987 + ((v1029 + v199) & v986)) & v988;
            if (v966 <= 0x7FFFFFFD)
            {
              unint64_t v321 = *(void *)(((v961 + ((v974 + v97) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_742:
              if (v321 >= 0xFFFFFFFF) {
                LODWORD(v321) = -1;
              }
              if ((v321 + 1) < 2) {
                goto LABEL_126;
              }
LABEL_137:
              unint64_t v110 = (v95 + v1062 + __n) & v1017;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1049 + 48))(v110, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v1049 + 8))(v110, AssociatedTypeWitness); {
              unint64_t v111 = (v967 + v110) & v1055;
              }
              if (v985 == v1003)
              {
                int v112 = (*(uint64_t (**)(size_t))(v1002 + 48))((v967 + v110) & v1055);
LABEL_281:
                unint64_t v189 = v1043;
                if (v112) {
                  goto LABEL_309;
                }
                unint64_t v186 = (uint64_t *)((v1005 + v111) & 0xFFFFFFFFFFFFFFF8);
                goto LABEL_283;
              }
              unint64_t v186 = (uint64_t *)((v1005 + v111) & 0xFFFFFFFFFFFFFFF8);
              if (v960 > 0x7FFFFFFE)
              {
                int v112 = (*(uint64_t (**)(unint64_t))(v983 + 48))(((unint64_t)v186 + v981) & v977);
                goto LABEL_281;
              }
              uint64_t v187 = *v186;
              if ((unint64_t)*v186 >= 0xFFFFFFFF) {
                LODWORD(v187) = -1;
              }
              BOOL v188 = (v187 + 1) >= 2;
              unint64_t v189 = v1043;
              if (!v188)
              {
LABEL_283:
                (*(void (**)(unint64_t, uint64_t))(v1002 + 8))(v111, v1001);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v983 + 8))(((unint64_t)v186 + v981) & v977, v982);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                unint64_t v189 = v1043;
              }
LABEL_309:
              uint64_t v148 = v111 + v189 + 15;
              goto LABEL_310;
            }
            uint64_t v96 = *(uint64_t (**)(unint64_t))(v1006 + 48);
          }
LABEL_124:
          int v98 = v96(v97);
          unint64_t v95 = (unint64_t)&v1021[v991] & v1010;
          if (v98) {
            goto LABEL_137;
          }
          goto LABEL_125;
        case 2u:
          int v939 = v51;
          (*(void (**)(unsigned __int8 *, uint64_t))(v1027 + 8))(v1021, v1039);
          unint64_t v113 = (unint64_t)&v1021[v956] & v1017;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v67 + 48))(v113, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v67 + 8))(v113, AssociatedTypeWitness); {
          uint64_t v114 = v42;
          }
          unint64_t v115 = (v967 + v113) & v1055;
          if (v985 == v1003)
          {
            int v116 = (*(uint64_t (**)(size_t))(v1002 + 48))((v967 + v113) & v1055);
LABEL_285:
            unint64_t v192 = v1043;
            if (v116) {
              goto LABEL_288;
            }
            int v190 = (uint64_t *)((v1005 + v115) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_287;
          }
          int v190 = (uint64_t *)((v1005 + v115) & 0xFFFFFFFFFFFFFFF8);
          if (v960 > 0x7FFFFFFE)
          {
            int v116 = (*(uint64_t (**)(unint64_t))(v983 + 48))(((unint64_t)v190 + v981) & v977);
            goto LABEL_285;
          }
          uint64_t v191 = *v190;
          if ((unint64_t)*v190 >= 0xFFFFFFFF) {
            LODWORD(v191) = -1;
          }
          BOOL v188 = (v191 + 1) >= 2;
          unint64_t v192 = v1043;
          if (!v188)
          {
LABEL_287:
            (*(void (**)(unint64_t, uint64_t))(v1002 + 8))(v115, v1001);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v983 + 8))(((unint64_t)v190 + v981) & v977, v982);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v192 = v1043;
          }
LABEL_288:
          size_t v201 = v115 + v192;
          goto LABEL_317;
        case 3u:
          uint64_t v946 = *(void *)(v1025 - 8);
          unint64_t v117 = *(void (**)(unsigned __int8 *, uint64_t))(v1027 + 8);
          v117(v1021, v1039);
          unint64_t v118 = (unint64_t)&v1021[v991] & v1010;
          if (v993 == v51)
          {
            unint64_t v119 = *(uint64_t (**)(unint64_t))(v1027 + 48);
            unint64_t v120 = (unint64_t)&v1021[v991] & v1010;
            goto LABEL_147;
          }
          unint64_t v122 = (v1008 + v118) & v1015;
          unint64_t v123 = (v996 + v122) & v1019;
          if (v1012 == v51)
          {
            if (v984 == v1012)
            {
              unint64_t v119 = *(uint64_t (**)(unint64_t))(v1000 + 48);
              unint64_t v120 = (v996 + v122) & v1019;
              goto LABEL_147;
            }
            size_t v322 = (unint64_t *)((v1004 + v123) & 0xFFFFFFFFFFFFFFF8);
            if (v959 <= 0x7FFFFFFE)
            {
              unint64_t v323 = *v322;
              goto LABEL_687;
            }
            unint64_t v120 = ((unint64_t)v322 + v978) & v976;
            unint64_t v119 = *(uint64_t (**)(unint64_t))(v979 + 48);
          }
          else
          {
            size_t v202 = v1013 + v123;
            if ((v951 & 0x80000000) == 0)
            {
              unint64_t v203 = *(void *)(v202 + 8);
              if (v203 >= 0xFFFFFFFF) {
                LODWORD(v203) = -1;
              }
              if (v203 == -1)
              {
LABEL_148:
                unint64_t v122 = (v1008 + v118) & v1015;
                unint64_t v123 = (v996 + v122) & v1019;
LABEL_149:
                v117((unsigned __int8 *)v118, v1039);
                v117((unsigned __int8 *)v122, v1039);
                (*(void (**)(unint64_t, uint64_t))(v1000 + 8))(v123, v999);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v979 + 8))((v978 + ((v1004 + v123) & 0xFFFFFFFFFFFFFFF8)) & v976, v980);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v124 = (v1029 + v1013 + v123) & v986;
                int v125 = *(void (**)(size_t, uint64_t))(v1006 + 8);
                v125((v987 + v124) & v988, v975);
                size_t v126 = (v974 + ((v987 + v124) & v988)) & v988;
                v125(v126, v975);
                swift_bridgeObjectRelease();
                unint64_t v127 = (v969
                      + ((((((v961 + v126) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v988;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1006 + 48))(v127, 1, v975)) {
                  v125(v127, v975);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v128 = (uint64_t *)((((((v970 + v127) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v129 = v128[1];
                if ((v129 & 0x3000000000000000) == 0) {
                  sub_24D400DCC(*v128, v129);
                }
                swift_bridgeObjectRelease();
                size_t v130 = v124 + v1028;
                uint64_t v131 = *(void **)(v130 + 16);
                LODWORD(v132) = -1;
                if ((unint64_t)v131 < 0xFFFFFFFF) {
                  uint64_t v132 = *(void *)(v130 + 16);
                }
                if ((int)v132 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v130 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_24D466534(*(void *)((((v130 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v130 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              }
LABEL_227:
              swift_bridgeObjectRelease();
LABEL_311:
              uint64_t v67 = v1049;
              uint64_t v42 = v946;
              goto LABEL_318;
            }
            unint64_t v120 = (v987 + ((v1029 + v202) & v986)) & v988;
            if (v966 <= 0x7FFFFFFD)
            {
              unint64_t v323 = *(void *)(((v961 + ((v974 + v120) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_687:
              if (v323 >= 0xFFFFFFFF) {
                LODWORD(v323) = -1;
              }
              if ((v323 + 1) < 2) {
                goto LABEL_149;
              }
              goto LABEL_227;
            }
            unint64_t v119 = *(uint64_t (**)(unint64_t))(v1006 + 48);
          }
LABEL_147:
          int v121 = v119(v120);
          unint64_t v118 = (unint64_t)&v1021[v991] & v1010;
          if (v121) {
            goto LABEL_227;
          }
          goto LABEL_148;
        case 4u:
        case 5u:
        case 7u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v1027 + 8))(v1021, v1039);
          goto LABEL_318;
        case 6u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v1027 + 8))(v1021, v1039);
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v958 + 48))((unint64_t)&v1021[v955] & v953, 1, v29))(*(void (**)(unint64_t, uint64_t))(v958 + 8))((unint64_t)&v1021[v955] & v953, v29); {
          goto LABEL_318;
          }
        default:
          uint64_t v946 = *(void *)(v1025 - 8);
          unsigned int v77 = *(void (**)(unsigned __int8 *, uint64_t))(v1027 + 8);
          v77(v1021, v1039);
          unint64_t v78 = (unint64_t)&v1021[v991] & v1010;
          if (v993 == v51)
          {
            uint64_t v79 = *(uint64_t (**)(unint64_t))(v1027 + 48);
            unint64_t v80 = (unint64_t)&v1021[v991] & v1010;
            goto LABEL_108;
          }
          unint64_t v82 = (v1008 + v78) & v1015;
          unint64_t v83 = (v996 + v82) & v1019;
          if (v1012 == v51)
          {
            if (v984 == v1012)
            {
              uint64_t v79 = *(uint64_t (**)(unint64_t))(v1000 + 48);
              unint64_t v80 = (v996 + v82) & v1019;
              goto LABEL_108;
            }
            uint64_t v318 = (unint64_t *)((v1004 + v83) & 0xFFFFFFFFFFFFFFF8);
            if (v959 <= 0x7FFFFFFE)
            {
              unint64_t v319 = *v318;
              goto LABEL_737;
            }
            unint64_t v80 = ((unint64_t)v318 + v978) & v976;
            uint64_t v79 = *(uint64_t (**)(unint64_t))(v979 + 48);
          }
          else
          {
            size_t v197 = v1013 + v83;
            if ((v951 & 0x80000000) == 0)
            {
              unint64_t v198 = *(void *)(v197 + 8);
              if (v198 >= 0xFFFFFFFF) {
                LODWORD(v198) = -1;
              }
              if (v198 == -1)
              {
LABEL_109:
                unint64_t v82 = (v1008 + v78) & v1015;
                unint64_t v83 = (v996 + v82) & v1019;
LABEL_110:
                unint64_t v935 = v78;
                v77((unsigned __int8 *)v78, v1039);
                v77((unsigned __int8 *)v82, v1039);
                (*(void (**)(unint64_t, uint64_t))(v1000 + 8))(v83, v999);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v979 + 8))((v978 + ((v1004 + v83) & 0xFFFFFFFFFFFFFFF8)) & v976, v980);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v84 = (v1029 + v1013 + v83) & v986;
                uint64_t v85 = *(void (**)(size_t, uint64_t))(v1006 + 8);
                v85((v987 + v84) & v988, v975);
                size_t v86 = (v974 + ((v987 + v84) & v988)) & v988;
                v85(v86, v975);
                swift_bridgeObjectRelease();
                unint64_t v87 = (v969
                     + ((((((v961 + v86) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v988;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1006 + 48))(v87, 1, v975)) {
                  v85(v87, v975);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v88 = (uint64_t *)((((((v970 + v87) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v89 = v88[1];
                if ((v89 & 0x3000000000000000) == 0) {
                  sub_24D400DCC(*v88, v89);
                }
                swift_bridgeObjectRelease();
                size_t v90 = v84 + v1028;
                unint64_t v91 = *(void **)(v90 + 16);
                LODWORD(v92) = -1;
                if ((unint64_t)v91 < 0xFFFFFFFF) {
                  uint64_t v92 = *(void *)(v90 + 16);
                }
                if ((int)v92 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v90 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_24D466534(*(void *)((((v90 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v90 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                unint64_t v78 = v935;
                goto LABEL_121;
              }
              goto LABEL_121;
            }
            unint64_t v80 = (v987 + ((v1029 + v197) & v986)) & v988;
            if (v966 <= 0x7FFFFFFD)
            {
              unint64_t v319 = *(void *)(((v961 + ((v974 + v80) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_737:
              if (v319 >= 0xFFFFFFFF) {
                LODWORD(v319) = -1;
              }
              if ((v319 + 1) < 2) {
                goto LABEL_110;
              }
LABEL_121:
              unint64_t v93 = __n;
LABEL_188:
              uint64_t v148 = v78 + v93;
LABEL_310:

              goto LABEL_311;
            }
            uint64_t v79 = *(uint64_t (**)(unint64_t))(v1006 + 48);
          }
LABEL_108:
          int v81 = v79(v80);
          unint64_t v78 = (unint64_t)&v1021[v991] & v1010;
          if (v81) {
            goto LABEL_121;
          }
          goto LABEL_109;
      }
    }
    unsigned int v73 = v1021[v47];
    unsigned int v74 = v73 - 8;
    if (v73 >= 8)
    {
      if (v47 <= 3) {
        uint64_t v75 = v47;
      }
      else {
        uint64_t v75 = 4;
      }
      switch(v75)
      {
        case 1:
          int v76 = *v1021;
          if (v47 < 4) {
            goto LABEL_164;
          }
          goto LABEL_168;
        case 2:
          int v76 = *(unsigned __int16 *)v1021;
          if (v47 < 4) {
            goto LABEL_164;
          }
          goto LABEL_168;
        case 3:
          int v76 = *(unsigned __int16 *)v1021 | (v1021[2] << 16);
          if (v47 < 4) {
            goto LABEL_164;
          }
          goto LABEL_168;
        case 4:
          int v76 = *(_DWORD *)v1021;
          if (v47 < 4) {
LABEL_164:
          }
            unsigned int v73 = (v76 | (v74 << (8 * v47))) + 8;
          else {
LABEL_168:
          }
            unsigned int v73 = v76 + 8;
          break;
        default:
          break;
      }
    }
    switch(v73)
    {
      case 1u:
        uint64_t v946 = *(void *)(v1025 - 8);
        unint64_t v149 = *(void (**)(unsigned __int8 *, uint64_t))(v67 + 8);
        v149(v1021, AssociatedTypeWitness);
        unint64_t v150 = (unint64_t)&v1021[v992] & v990;
        if (v1031 == v994)
        {
          unint64_t v151 = *(uint64_t (**)(unint64_t))(v67 + 48);
          unint64_t v152 = (unint64_t)&v1021[v992] & v990;
          goto LABEL_191;
        }
        unint64_t v154 = (v997 + v150) & v1017;
        unint64_t v155 = (v998 + v154) & v1055;
        if (v1003 == v994)
        {
          if (v985 == v1003)
          {
            unint64_t v151 = *(uint64_t (**)(unint64_t))(v1002 + 48);
            unint64_t v152 = (v998 + v154) & v1055;
            goto LABEL_191;
          }
          size_t v326 = (unint64_t *)((v1005 + v155) & 0xFFFFFFFFFFFFFFF8);
          if (v960 <= 0x7FFFFFFE)
          {
            unint64_t v327 = *v326;
            goto LABEL_697;
          }
          unint64_t v152 = ((unint64_t)v326 + v981) & v977;
          unint64_t v151 = *(uint64_t (**)(unint64_t))(v983 + 48);
        }
        else
        {
          unint64_t v206 = v1043 + v155;
          if ((v952 & 0x80000000) == 0)
          {
            unint64_t v207 = *(void *)(v206 + 8);
            if (v207 >= 0xFFFFFFFF) {
              LODWORD(v207) = -1;
            }
            if (v207 == -1)
            {
LABEL_192:
              unint64_t v154 = (v997 + v150) & v1017;
              unint64_t v155 = (v998 + v154) & v1055;
LABEL_193:
              unint64_t v938 = v150;
              v149((unsigned __int8 *)v150, AssociatedTypeWitness);
              v149((unsigned __int8 *)v154, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v1002 + 8))(v155, v1001);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v983 + 8))((v981 + ((v1005 + v155) & 0xFFFFFFFFFFFFFFF8)) & v977, v982);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v156 = (v1029 + v1043 + v155) & v986;
              unint64_t v157 = *(void (**)(unint64_t, uint64_t))(v1006 + 8);
              v157((v987 + v156) & v988, v975);
              unint64_t v158 = (v974 + ((v987 + v156) & v988)) & v988;
              v157(v158, v975);
              swift_bridgeObjectRelease();
              unint64_t v159 = (v969
                    + ((((((v961 + v158) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v988;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1006 + 48))(v159, 1, v975)) {
                v157(v159, v975);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v160 = (uint64_t *)((((((v970 + v159) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v161 = v160[1];
              if ((v161 & 0x3000000000000000) == 0) {
                sub_24D400DCC(*v160, v161);
              }
              swift_bridgeObjectRelease();
              unint64_t v162 = v1028 + v156;
              uint64_t v163 = *(void **)(v162 + 16);
              LODWORD(v164) = -1;
              if ((unint64_t)v163 < 0xFFFFFFFF) {
                uint64_t v164 = *(void *)(v162 + 16);
              }
              if ((int)v164 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v162 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_24D466534(*(void *)((((v162 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v162 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              unint64_t v150 = v938;
            }
LABEL_204:
            unint64_t v165 = (v150 + v1024 + v973) & v1015;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1027 + 48))(v165, 1, v1039)) {
              (*(void (**)(unint64_t, uint64_t))(v1027 + 8))(v165, v1039);
            }
            unint64_t v111 = (v968 + v165) & v1019;
            if (v984 == v1012)
            {
              int v166 = (*(uint64_t (**)(size_t))(v1000 + 48))((v968 + v165) & v1019);
            }
            else
            {
              unint64_t v193 = (uint64_t *)((v1004 + v111) & 0xFFFFFFFFFFFFFFF8);
              if (v959 <= 0x7FFFFFFE)
              {
                uint64_t v194 = *v193;
                if ((unint64_t)*v193 >= 0xFFFFFFFF) {
                  LODWORD(v194) = -1;
                }
                if ((v194 + 1) >= 2) {
                  goto LABEL_308;
                }
                goto LABEL_307;
              }
              int v166 = (*(uint64_t (**)(unint64_t))(v979 + 48))(((unint64_t)v193 + v978) & v976);
            }
            if (v166)
            {
LABEL_308:
              unint64_t v189 = v1013;
              goto LABEL_309;
            }
            unint64_t v193 = (uint64_t *)((v1004 + v111) & 0xFFFFFFFFFFFFFFF8);
LABEL_307:
            (*(void (**)(unint64_t, uint64_t))(v1000 + 8))(v111, v999);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v979 + 8))(((unint64_t)v193 + v978) & v976, v980);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_308;
          }
          unint64_t v152 = (v987 + ((v1029 + v206) & v986)) & v988;
          if (v966 <= 0x7FFFFFFD)
          {
            unint64_t v327 = *(void *)(((v961 + ((v974 + v152) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_697:
            if (v327 >= 0xFFFFFFFF) {
              LODWORD(v327) = -1;
            }
            if ((v327 + 1) < 2) {
              goto LABEL_193;
            }
            goto LABEL_204;
          }
          unint64_t v151 = *(uint64_t (**)(unint64_t))(v1006 + 48);
        }
LABEL_191:
        int v153 = v151(v152);
        unint64_t v150 = (unint64_t)&v1021[v992] & v990;
        if (v153) {
          goto LABEL_204;
        }
        goto LABEL_192;
      case 2u:
        int v939 = v51;
        uint64_t v114 = *(void *)(v1025 - 8);
        (*(void (**)(unsigned __int8 *, uint64_t))(v67 + 8))(v1021, AssociatedTypeWitness);
        unint64_t v167 = (unint64_t)&v1021[v41] & v1015;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1027 + 48))(v167, 1, v1039)) {
          (*(void (**)(unint64_t, uint64_t))(v1027 + 8))(v167, v1039);
        }
        size_t v168 = (v968 + v167) & v1019;
        if (v984 == v1012)
        {
          int v169 = (*(uint64_t (**)(size_t))(v1000 + 48))((v968 + v167) & v1019);
        }
        else
        {
          size_t v195 = (uint64_t *)((v1004 + v168) & 0xFFFFFFFFFFFFFFF8);
          if (v959 <= 0x7FFFFFFE)
          {
            uint64_t v196 = *v195;
            if ((unint64_t)*v195 >= 0xFFFFFFFF) {
              LODWORD(v196) = -1;
            }
            if ((v196 + 1) >= 2)
            {
LABEL_316:
              size_t v201 = v1013 + v168;
LABEL_317:

              uint64_t v67 = v1049;
              uint64_t v42 = v114;
              int v51 = v939;
LABEL_318:
              unsigned int v208 = a2[v63];
              unsigned int v209 = v208 - 2;
              if (v208 >= 2)
              {
                if (v63 <= 3) {
                  uint64_t v210 = v63;
                }
                else {
                  uint64_t v210 = 4;
                }
                switch(v210)
                {
                  case 1:
                    int v211 = *a2;
                    if (v63 >= 4) {
                      goto LABEL_338;
                    }
                    goto LABEL_326;
                  case 2:
                    int v211 = *(unsigned __int16 *)a2;
                    if (v63 < 4) {
                      goto LABEL_326;
                    }
                    goto LABEL_338;
                  case 3:
                    int v211 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                    if (v63 < 4) {
                      goto LABEL_326;
                    }
                    goto LABEL_338;
                  case 4:
                    int v211 = *(_DWORD *)a2;
                    if (v63 >= 4)
                    {
LABEL_338:
                      if (v211 != -1)
                      {
LABEL_339:
                        unsigned int v216 = a2[v47];
                        unsigned int v217 = v216 - 8;
                        if (v216 < 8)
                        {
                          uint64_t v219 = v1006;
                          uint64_t v220 = AssociatedTypeWitness;
                        }
                        else
                        {
                          if (v47 <= 3) {
                            uint64_t v218 = v47;
                          }
                          else {
                            uint64_t v218 = 4;
                          }
                          uint64_t v219 = v1006;
                          uint64_t v220 = AssociatedTypeWitness;
                          switch(v218)
                          {
                            case 1:
                              int v221 = *a2;
                              if (v47 < 4) {
                                goto LABEL_372;
                              }
                              goto LABEL_376;
                            case 2:
                              int v221 = *(unsigned __int16 *)a2;
                              if (v47 < 4) {
                                goto LABEL_372;
                              }
                              goto LABEL_376;
                            case 3:
                              int v221 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                              if (v47 < 4) {
                                goto LABEL_372;
                              }
                              goto LABEL_376;
                            case 4:
                              int v221 = *(_DWORD *)a2;
                              if (v47 < 4) {
LABEL_372:
                              }
                                unsigned int v216 = (v221 | (v217 << (8 * v47))) + 8;
                              else {
LABEL_376:
                              }
                                unsigned int v216 = v221 + 8;
                              break;
                            default:
                              break;
                          }
                        }
                        switch(v216)
                        {
                          case 1u:
                            unint64_t v944 = v47;
                            unint64_t v247 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16);
                            v247(v1021, a2, v220);
                            v1063 = (void *)((unint64_t)&v1021[v992] & v990);
                            unint64_t v248 = (void *)((unint64_t)&a2[v992] & v990);
                            if (v1031 == v994)
                            {
                              int v249 = (*(uint64_t (**)(unint64_t))(v67 + 48))((unint64_t)&a2[v992] & v990);
LABEL_595:
                              if (v249)
                              {
LABEL_596:
                                unint64_t v651 = (unint64_t)&v1021[v992] & v990;
                                memcpy(v1063, v248, v973);
                                uint64_t v652 = v962;
                                size_t v653 = v1013;
                                goto LABEL_597;
                              }
                              unint64_t v267 = ((unint64_t)v248 + v997) & v1017;
                              unint64_t v268 = (v998 + v267) & v1055;
LABEL_599:
                              unint64_t v1036 = v63;
                              v247((unsigned __int8 *)v1063, (unsigned __int8 *)v248, v220);
                              unint64_t v655 = ((unint64_t)v1063 + v997) & v1017;
                              v247((unsigned __int8 *)v655, (unsigned __int8 *)v267, v220);
                              unint64_t v656 = (v998 + v655) & v1055;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1002 + 16))(v656, v268, v1001);
                              unint64_t v657 = (void *)((v1005 + v656) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v658 = (void *)((v1005 + v268) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v657 = *v658;
                              unint64_t v659 = ((unint64_t)v657 + v981) & v977;
                              unint64_t v660 = ((unint64_t)v658 + v981) & v977;
                              uint64_t v661 = *(void (**)(unint64_t, unint64_t, uint64_t))(v983 + 16);
                              swift_bridgeObjectRetain();
                              v661(v659, v660, v982);
                              unint64_t v662 = (void *)((v965 + v660) & 0xFFFFFFFFFFFFFFF8);
                              v663 = (void *)((v965 + v659) & 0xFFFFFFFFFFFFFFF8);
                              void *v663 = *v662;
                              unint64_t v664 = (void *)(((unint64_t)v663 + 15) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v665 = (void *)(((unint64_t)v662 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v664 = *v665;
                              v664[1] = v665[1];
                              unint64_t v666 = (void *)(v1043 + v656);
                              *unint64_t v666 = *(void *)(v1043 + v268);
                              v666[1] = *(void *)(v1043 + v268 + 8);
                              unint64_t v667 = (v1029 + v1043 + v656) & v986;
                              unint64_t v668 = (v1029 + v1043 + v268) & v986;
                              *(unsigned char *)unint64_t v667 = *(unsigned char *)v668;
                              uint64_t v669 = v667 | 4;
                              int v670 = *(_DWORD *)(v668 | 4);
                              *(unsigned char *)(v669 + 4) = *(unsigned char *)((v668 | 4) + 4);
                              *(_DWORD *)uint64_t v669 = v670;
                              *(_WORD *)(v667 + 10) = *(_WORD *)(v668 + 0xA);
                              unint64_t v1058 = v667;
                              unint64_t v671 = (v987 + v667) & v988;
                              unint64_t v1047 = v668;
                              unint64_t v672 = (v987 + v668) & v988;
                              unint64_t v673 = *(void (**)(unint64_t, unint64_t, uint64_t))(v219 + 16);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v673(v671, v672, v975);
                              size_t v674 = (v974 + v671) & v988;
                              size_t v675 = (v974 + v672) & v988;
                              v673(v674, v675, v975);
                              unint64_t v676 = (unsigned char *)(v674 + v971);
                              *unint64_t v676 = *(unsigned char *)(v675 + v971);
                              v676[1] = *(unsigned char *)(v675 + v971 + 1);
                              v676[2] = *(unsigned char *)(v675 + v971 + 2);
                              v676[3] = *(unsigned char *)(v675 + v971 + 3);
                              v676[4] = *(unsigned char *)(v675 + v971 + 4);
                              unint64_t v677 = (v674 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v678 = (v675 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v677 = *(void *)v678;
                              *(void *)(v677 + 8) = *(void *)(v678 + 8);
                              *(unsigned char *)(v677 + 16) = *(unsigned char *)(v678 + 16);
                              *(unsigned char *)(v677 + 17) = *(unsigned char *)(v678 + 17);
                              *(unsigned char *)(v677 + 18) = *(unsigned char *)(v678 + 18);
                              *(unsigned char *)(v677 + 19) = *(unsigned char *)(v678 + 19);
                              unint64_t v679 = (v677 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v680 = (v678 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v679 = *(void *)v680;
                              *(unsigned char *)(v679 + 8) = *(unsigned char *)(v680 + 8);
                              *(unsigned char *)(v679 + 9) = *(unsigned char *)(v680 + 9);
                              *(unsigned char *)(v679 + 10) = *(unsigned char *)(v680 + 10);
                              *(unsigned char *)(v679 + 11) = *(unsigned char *)(v680 + 11);
                              *(unsigned char *)(v679 + 12) = *(unsigned char *)(v680 + 12);
                              long long v681 = (void *)((v678 + 47) & 0xFFFFFFFFFFFFFFF8);
                              long long v682 = (void *)((v677 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *long long v682 = *v681;
                              unint64_t v683 = ((unint64_t)v682 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v684 = ((unint64_t)v681 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v683 = *(void *)v684;
                              *(unsigned char *)(v683 + 8) = *(unsigned char *)(v684 + 8);
                              *(unsigned char *)(v683 + 9) = *(unsigned char *)(v684 + 9);
                              long long v685 = (void *)((v969 + v683) & v988);
                              long long v686 = (const void *)((v969 + v684) & v988);
                              long long v687 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v219 + 48);
                              swift_bridgeObjectRetain();
                              if (v687(v686, 1, v975))
                              {
                                memcpy(v685, v686, v995);
                              }
                              else
                              {
                                v673((unint64_t)v685, (unint64_t)v686, v975);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v219 + 56))(v685, 0, 1, v975);
                              }
                              size_t v653 = v1013;
                              long long v688 = (void *)(((unint64_t)v685 + v970) & 0xFFFFFFFFFFFFFFF8);
                              long long v689 = (void *)(((unint64_t)v686 + v970) & 0xFFFFFFFFFFFFFFF8);
                              *long long v688 = *v689;
                              unint64_t v690 = ((unint64_t)v688 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v691 = ((unint64_t)v689 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v692 = *(void *)v691;
                              *(unsigned char *)(v690 + 8) = *(unsigned char *)(v691 + 8);
                              *(void *)unint64_t v690 = v692;
                              id v693 = (void *)(((unint64_t)v688 + 31) & 0xFFFFFFFFFFFFFFF8);
                              id v694 = (void *)(((unint64_t)v689 + 31) & 0xFFFFFFFFFFFFFFF8);
                              *id v693 = *v694;
                              unint64_t v695 = ((unint64_t)v693 + 15) & 0xFFFFFFFFFFFFFFF8;
                              id v696 = (uint64_t *)(((unint64_t)v694 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v697 = v696[1];
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              if ((v697 & 0x3000000000000000) != 0)
                              {
                                *(_OWORD *)unint64_t v695 = *(_OWORD *)v696;
                              }
                              else
                              {
                                uint64_t v698 = *v696;
                                sub_24D3F9C18(*v696, v697);
                                *(void *)unint64_t v695 = v698;
                                *(void *)(v695 + 8) = v697;
                              }
                              unint64_t v699 = (v695 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v700 = ((unint64_t)v696 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v701 = *(void *)v700;
                              *(unsigned char *)(v699 + 8) = *(unsigned char *)(v700 + 8);
                              *(void *)unint64_t v699 = v701;
                              *(unsigned char *)(v699 + 9) = *(unsigned char *)(v700 + 9);
                              unint64_t v702 = (v699 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v703 = (v700 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              int v704 = *(_DWORD *)v703;
                              *(unsigned char *)(v702 + 4) = *(unsigned char *)(v703 + 4);
                              *(_DWORD *)unint64_t v702 = v704;
                              v705 = (void *)((v699 + 25) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v706 = (void *)((v700 + 25) & 0xFFFFFFFFFFFFFFF8);
                              void *v705 = *v706;
                              v705[1] = v706[1];
                              unint64_t v707 = v1028 + v1058;
                              unint64_t v708 = (long long *)(v1028 + v1047);
                              unint64_t v709 = *(void *)(v1028 + v1047 + 16);
                              if (v709 >= 0xFFFFFFFF) {
                                LODWORD(v709) = -1;
                              }
                              int v710 = v709 - 1;
                              swift_bridgeObjectRetain();
                              if (v710 < 0)
                              {
                                *(void *)unint64_t v707 = *(void *)v708;
                                *(unsigned char *)(v707 + 8) = *((unsigned char *)v708 + 8);
                                *(unsigned char *)(v707 + 9) = *((unsigned char *)v708 + 9);
                                uint64_t v724 = (void *)*((void *)v708 + 2);
                                id v725 = v724;
                                *(void *)(v707 + 16) = v724;
                                uint64_t v726 = (void *)*((void *)v708 + 3);
                                id v727 = v726;
                                *(void *)(v707 + 24) = v726;
                                *(unsigned char *)(v707 + 32) = *((unsigned char *)v708 + 32);
                                *(unsigned char *)(v707 + 33) = *((unsigned char *)v708 + 33);
                                *(unsigned char *)(v707 + 34) = *((unsigned char *)v708 + 34);
                                *(void *)(v707 + 40) = *((void *)v708 + 5);
                                *(void *)(v707 + 48) = *((void *)v708 + 6);
                                *(void *)(v707 + 56) = *((void *)v708 + 7);
                                *(void *)(v707 + 64) = *((void *)v708 + 8);
                                *(unsigned char *)(v707 + 72) = *((unsigned char *)v708 + 72);
                                *(void *)(v707 + 80) = *((void *)v708 + 10);
                                *(void *)(v707 + 88) = *((void *)v708 + 11);
                                v1059 = (void *)*((void *)v708 + 12);
                                *(void *)(v707 + 96) = v1059;
                                *(unsigned char *)(v707 + 104) = *((unsigned char *)v708 + 104);
                                *(unsigned char *)(v707 + 105) = *((unsigned char *)v708 + 105);
                                *(void *)(v707 + 112) = *((void *)v708 + 14);
                                *(void *)(v707 + 120) = *((void *)v708 + 15);
                                *(void *)(v707 + 128) = *((void *)v708 + 16);
                                *(void *)(v707 + 136) = *((void *)v708 + 17);
                                *(void *)(v707 + 144) = *((void *)v708 + 18);
                                *(void *)(v707 + 152) = *((void *)v708 + 19);
                                *(void *)(v707 + 160) = *((void *)v708 + 20);
                                *(void *)(v707 + 168) = *((void *)v708 + 21);
                                *(unsigned char *)(v707 + 176) = *((unsigned char *)v708 + 176);
                                *(void *)(v707 + 184) = *((void *)v708 + 23);
                                uint64_t v728 = *((void *)v708 + 24);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                id v729 = v1059;
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                if (v728)
                                {
                                  *(void *)(v707 + 192) = v728;
                                  *(void *)(v707 + 200) = *((void *)v708 + 25);
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRetain();
                                }
                                else
                                {
                                  *(_OWORD *)(v707 + 192) = v708[12];
                                }
                                uint64_t v3 = v1021;
                                unint64_t v63 = v1036;
                                unsigned int v723 = v966;
                                uint64_t v652 = v962;
                                size_t v653 = v1013;
                                *(void *)(v707 + 208) = *((void *)v708 + 26);
                                *(void *)(v707 + 216) = *((void *)v708 + 27);
                                *(void *)(v707 + 224) = *((void *)v708 + 28);
                                *(void *)(v707 + 232) = *((void *)v708 + 29);
                                *(void *)(v707 + 240) = *((void *)v708 + 30);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                              }
                              else
                              {
                                long long v711 = *v708;
                                long long v712 = v708[1];
                                long long v713 = v708[3];
                                *(_OWORD *)(v707 + 32) = v708[2];
                                *(_OWORD *)(v707 + 48) = v713;
                                *(_OWORD *)unint64_t v707 = v711;
                                *(_OWORD *)(v707 + 16) = v712;
                                long long v714 = v708[4];
                                long long v715 = v708[5];
                                long long v716 = v708[7];
                                *(_OWORD *)(v707 + 96) = v708[6];
                                *(_OWORD *)(v707 + 112) = v716;
                                *(_OWORD *)(v707 + 64) = v714;
                                *(_OWORD *)(v707 + 80) = v715;
                                long long v717 = v708[8];
                                long long v718 = v708[9];
                                long long v719 = v708[11];
                                *(_OWORD *)(v707 + 160) = v708[10];
                                *(_OWORD *)(v707 + 176) = v719;
                                *(_OWORD *)(v707 + 128) = v717;
                                *(_OWORD *)(v707 + 144) = v718;
                                long long v720 = v708[12];
                                long long v721 = v708[13];
                                long long v722 = v708[14];
                                *(void *)(v707 + 240) = *((void *)v708 + 30);
                                *(_OWORD *)(v707 + 208) = v721;
                                *(_OWORD *)(v707 + 224) = v722;
                                *(_OWORD *)(v707 + 192) = v720;
                                unint64_t v63 = v1036;
                                unsigned int v723 = v966;
                                uint64_t v652 = v962;
                              }
                              uint64_t v888 = (_OWORD *)((v707 + 255) & 0xFFFFFFFFFFFFFFF8);
                              size_t v889 = (long long *)(((unint64_t)v708 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v890 = *v889;
                              *(_OWORD *)((char *)v888 + 9) = *(long long *)((char *)v889 + 9);
                              *uint64_t v888 = v890;
                              unint64_t v891 = (v707 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v892 = ((unint64_t)v708 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v893 = *(_OWORD *)v892;
                              *(unsigned char *)(v891 + 16) = *(unsigned char *)(v892 + 16);
                              *(_OWORD *)unint64_t v891 = v893;
                              uint64_t v894 = (void *)((v707 + 311) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v895 = ((unint64_t)v708 + 311) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v896 = *(void *)v895;
                              v895 += 15;
                              *uint64_t v894 = v896;
                              uint64_t v897 = (void *)(((unint64_t)v894 + 15) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v898 = *(void *)(v895 & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v899 = *(void *)((v895 & 0xFFFFFFFFFFFFFFF8) + 8);
                              sub_24D5203A8(v898, v899);
                              *uint64_t v897 = v898;
                              v897[1] = v899;
                              size_t v654 = v971;
                              unint64_t v248 = (void *)((unint64_t)&a2[v992] & v990);
                              unint64_t v651 = (unint64_t)&v1021[v992] & v990;
                              if (v723)
                              {
LABEL_662:
                                unint64_t v900 = ((((v652
                                         + ((((((((((v989 + v654 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                uint64_t v901 = (void *)((v651 + v1024 + v900) & v1015);
                                uint64_t v902 = (const void *)(((unint64_t)v248 + v1024 + v900) & v1015);
                                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1027 + 48))(v902, 1, v1039))
                                {
                                  memcpy(v901, v902, v1022);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v1027 + 16))(v901, v902, v1039);
                                  (*(void (**)(void *, void, uint64_t, uint64_t))(v1027 + 56))(v901, 0, 1, v1039);
                                }
                                uint64_t v903 = (char *)(((unint64_t)v901 + v968) & v1019);
                                unint64_t v904 = (char *)(((unint64_t)v902 + v968) & v1019);
                                if (v984 == v1012)
                                {
                                  int v905 = (*(uint64_t (**)(char *))(v1000 + 48))(v904);
                                }
                                else
                                {
                                  uint64_t v906 = (uint64_t *)((unint64_t)&v904[v1004] & 0xFFFFFFFFFFFFFFF8);
                                  if (v959 <= 0x7FFFFFFE)
                                  {
                                    uint64_t v907 = *v906;
                                    if ((unint64_t)*v906 >= 0xFFFFFFFF) {
                                      LODWORD(v907) = -1;
                                    }
                                    if ((v907 + 1) >= 2) {
                                      goto LABEL_674;
                                    }
                                    goto LABEL_676;
                                  }
                                  int v905 = (*(uint64_t (**)(unint64_t))(v979 + 48))(((unint64_t)v906
                                                                                                  + v978) & v976);
                                }
                                if (v905)
                                {
LABEL_674:
                                  memcpy(v903, v904, v653);
LABEL_677:
                                  *(void *)&v903[v653] = *(void *)&v904[v653];
                                  uint64_t v916 = (void *)((unint64_t)&v903[v653 + 15] & 0xFFFFFFFFFFFFFFF8);
                                  uint64_t v917 = (void *)((unint64_t)&v904[v653 + 15] & 0xFFFFFFFFFFFFFFF8);
                                  *uint64_t v916 = *v917;
                                  uint64_t v317 = *(void **)(((unint64_t)v917 + 15) & 0xFFFFFFFFFFFFFFF8);
                                  *(void *)(((unint64_t)v916 + 15) & 0xFFFFFFFFFFFFFFF8) = v317;
                                  v3[v944] = 1;
                                  goto LABEL_678;
                                }
                                uint64_t v906 = (uint64_t *)((unint64_t)&v904[v1004] & 0xFFFFFFFFFFFFFFF8);
LABEL_676:
                                (*(void (**)(char *, char *, uint64_t))(v1000 + 16))(v903, v904, v999);
                                uint64_t v908 = (void *)((unint64_t)&v903[v1004] & 0xFFFFFFFFFFFFFFF8);
                                *uint64_t v908 = *v906;
                                unint64_t v909 = ((unint64_t)v908 + v978) & v976;
                                unint64_t v910 = ((unint64_t)v906 + v978) & v976;
                                uint64_t v911 = *(void (**)(unint64_t, unint64_t, uint64_t))(v979 + 16);
                                swift_bridgeObjectRetain();
                                v911(v909, v910, v980);
                                uint64_t v912 = (void *)((v964 + v909) & 0xFFFFFFFFFFFFFFF8);
                                uint64_t v913 = (void *)((v964 + v910) & 0xFFFFFFFFFFFFFFF8);
                                *uint64_t v912 = *v913;
                                uint64_t v914 = (void *)(((unint64_t)v912 + 15) & 0xFFFFFFFFFFFFFFF8);
                                uint64_t v915 = (void *)(((unint64_t)v913 + 15) & 0xFFFFFFFFFFFFFFF8);
                                *uint64_t v914 = *v915;
                                v914[1] = v915[1];
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                goto LABEL_677;
                              }
LABEL_597:
                              size_t v654 = v995;
                              goto LABEL_662;
                            }
                            unint64_t v267 = ((unint64_t)v248 + v997) & v1017;
                            unint64_t v268 = (v998 + v267) & v1055;
                            if (v1003 == v994)
                            {
                              if (v985 == v1003)
                              {
                                int v249 = (*(uint64_t (**)(unint64_t))(v1002 + 48))((v998 + v267) & v1055);
                                goto LABEL_595;
                              }
                              uint64_t v338 = (unint64_t *)((v1005 + v268) & 0xFFFFFFFFFFFFFFF8);
                              if (v960 > 0x7FFFFFFE)
                              {
                                int v249 = (*(uint64_t (**)(unint64_t))(v983 + 48))(((unint64_t)v338
                                                                                                + v981) & v977);
                                goto LABEL_595;
                              }
                              unint64_t v339 = *v338;
                            }
                            else
                            {
                              unint64_t v292 = v1043 + v268;
                              if ((v952 & 0x80000000) == 0)
                              {
                                unint64_t v293 = *(void *)(v292 + 8);
                                if (v293 >= 0xFFFFFFFF) {
                                  LODWORD(v293) = -1;
                                }
                                int v249 = v293 + 1;
                                goto LABEL_595;
                              }
                              uint64_t v347 = (v987 + ((v1029 + v292) & v986)) & v988;
                              if (v966 > 0x7FFFFFFD)
                              {
                                int v249 = (*(uint64_t (**)(uint64_t))(v219 + 48))(v347);
                                goto LABEL_595;
                              }
                              unint64_t v339 = *(void *)(((v961 + ((v974 + v347) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v339 >= 0xFFFFFFFF) {
                              LODWORD(v339) = -1;
                            }
                            if ((v339 + 1) >= 2) {
                              goto LABEL_596;
                            }
                            goto LABEL_599;
                          case 2u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1021, a2, v220);
                            unint64_t v250 = (void *)((unint64_t)&v1021[v949] & v1015);
                            unint64_t v251 = (const void *)((unint64_t)&a2[v949] & v1015);
                            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1027 + 48))(v251, 1, v1039))
                            {
                              memcpy(v250, v251, v1022);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v1027 + 16))(v250, v251, v1039);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v1027 + 56))(v250, 0, 1, v1039);
                            }
                            uint64_t v277 = (char *)(((unint64_t)v250 + v968) & v1019);
                            uint64_t v278 = (char *)(((unint64_t)v251 + v968) & v1019);
                            if (v984 == v1012)
                            {
                              int v279 = (*(uint64_t (**)(char *))(v1000 + 48))(v278);
                            }
                            else
                            {
                              uint64_t v280 = (uint64_t *)((unint64_t)&v278[v1004] & 0xFFFFFFFFFFFFFFF8);
                              if (v959 <= 0x7FFFFFFE)
                              {
                                uint64_t v281 = *v280;
                                if ((unint64_t)*v280 >= 0xFFFFFFFF) {
                                  LODWORD(v281) = -1;
                                }
                                if ((v281 + 1) >= 2) {
                                  goto LABEL_468;
                                }
                                goto LABEL_470;
                              }
                              int v279 = (*(uint64_t (**)(unint64_t))(v979 + 48))(((unint64_t)v280
                                                                                              + v978) & v976);
                            }
                            if (v279)
                            {
LABEL_468:
                              memcpy(v277, v278, v1013);
                              goto LABEL_471;
                            }
                            uint64_t v280 = (uint64_t *)((unint64_t)&v278[v1004] & 0xFFFFFFFFFFFFFFF8);
LABEL_470:
                            (*(void (**)(char *, char *, uint64_t))(v1000 + 16))(v277, v278, v999);
                            uint64_t v308 = (void *)((unint64_t)&v277[v1004] & 0xFFFFFFFFFFFFFFF8);
                            *uint64_t v308 = *v280;
                            unint64_t v309 = ((unint64_t)v308 + v978) & v976;
                            unint64_t v310 = ((unint64_t)v280 + v978) & v976;
                            unint64_t v311 = *(void (**)(unint64_t, unint64_t, uint64_t))(v979 + 16);
                            swift_bridgeObjectRetain();
                            v311(v309, v310, v980);
                            uint64_t v312 = (void *)((v964 + v309) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v313 = (void *)((v964 + v310) & 0xFFFFFFFFFFFFFFF8);
                            void *v312 = *v313;
                            uint64_t v314 = (void *)(((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFFFF8);
                            unsigned int v315 = (void *)(((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8);
                            *uint64_t v314 = *v315;
                            v314[1] = v315[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
LABEL_471:
                            uint64_t v316 = &v277[v1013];
                            *uint64_t v316 = v278[v1013];
                            uint64_t v317 = *(void **)&v278[v1013 + 8];
                            *((void *)v316 + 1) = v317;
                            v1021[v47] = 2;
LABEL_678:
                            id v918 = v317;
                            goto LABEL_683;
                          case 3u:
                            unint64_t v945 = v47;
                            unint64_t v252 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16);
                            v252(v1021, a2, v220);
                            unsigned int v253 = (void *)((unint64_t)&v1021[v992] & v990);
                            unint64_t v254 = (void *)((unint64_t)&a2[v992] & v990);
                            if (v1031 == v994)
                            {
                              int v255 = (*(uint64_t (**)(void *))(v67 + 48))(v254);
                              goto LABEL_612;
                            }
                            unint64_t v269 = ((unint64_t)v254 + v997) & v1017;
                            unint64_t v270 = (v998 + v269) & v1055;
                            if (v1003 == v994)
                            {
                              if (v985 == v1003)
                              {
                                int v255 = (*(uint64_t (**)(unint64_t))(v1002 + 48))((v998 + v269) & v1055);
                                goto LABEL_612;
                              }
                              unint64_t v340 = (unint64_t *)((v1005 + v270) & 0xFFFFFFFFFFFFFFF8);
                              if (v960 <= 0x7FFFFFFE)
                              {
                                unint64_t v341 = *v340;
                                goto LABEL_732;
                              }
                              int v255 = (*(uint64_t (**)(unint64_t))(v983 + 48))(((unint64_t)v340
                                                                                              + v981) & v977);
                            }
                            else
                            {
                              unint64_t v294 = v1043 + v270;
                              if ((v952 & 0x80000000) != 0)
                              {
                                uint64_t v348 = (v987 + ((v1029 + v294) & v986)) & v988;
                                if (v966 <= 0x7FFFFFFD)
                                {
                                  unint64_t v341 = *(void *)(((v961 + ((v974 + v348) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_732:
                                  if (v341 >= 0xFFFFFFFF) {
                                    LODWORD(v341) = -1;
                                  }
                                  if ((v341 + 1) >= 2) {
                                    goto LABEL_613;
                                  }
                                  goto LABEL_616;
                                }
                                int v255 = (*(uint64_t (**)(uint64_t))(v219 + 48))(v348);
                              }
                              else
                              {
                                unint64_t v295 = *(void *)(v294 + 8);
                                if (v295 >= 0xFFFFFFFF) {
                                  LODWORD(v295) = -1;
                                }
                                int v255 = v295 + 1;
                              }
                            }
LABEL_612:
                            if (v255)
                            {
LABEL_613:
                              memcpy(v253, v254, v973);
LABEL_614:
                              size_t v730 = v995;
                              goto LABEL_682;
                            }
                            unint64_t v269 = ((unint64_t)v254 + v997) & v1017;
                            unint64_t v270 = (v998 + v269) & v1055;
LABEL_616:
                            unint64_t v1037 = v63;
                            v252((unsigned __int8 *)v253, (unsigned __int8 *)v254, v220);
                            v252((unsigned __int8 *)(((unint64_t)v253 + v997) & v1017), (unsigned __int8 *)v269, v220);
                            unint64_t v731 = (v998 + (((unint64_t)v253 + v997) & v1017)) & v1055;
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1002 + 16))(v731, v270, v1001);
                            uint64_t v732 = (void *)((v1005 + v731) & 0xFFFFFFFFFFFFFFF8);
                            size_t v733 = (void *)((v1005 + v270) & 0xFFFFFFFFFFFFFFF8);
                            *uint64_t v732 = *v733;
                            unint64_t v734 = ((unint64_t)v732 + v981) & v977;
                            unint64_t v735 = ((unint64_t)v733 + v981) & v977;
                            unint64_t v736 = *(void (**)(unint64_t, unint64_t, uint64_t))(v983 + 16);
                            swift_bridgeObjectRetain();
                            v736(v734, v735, v982);
                            unint64_t v737 = (void *)((v965 + v735) & 0xFFFFFFFFFFFFFFF8);
                            v738 = (void *)((v965 + v734) & 0xFFFFFFFFFFFFFFF8);
                            void *v738 = *v737;
                            v739 = (void *)(((unint64_t)v738 + 15) & 0xFFFFFFFFFFFFFFF8);
                            v740 = (void *)(((unint64_t)v737 + 15) & 0xFFFFFFFFFFFFFFF8);
                            void *v739 = *v740;
                            v739[1] = v740[1];
                            v741 = (void *)(v1043 + v731);
                            void *v741 = *(void *)(v1043 + v270);
                            v741[1] = *(void *)(v1043 + v270 + 8);
                            unint64_t v742 = (v1029 + v1043 + v731) & v986;
                            unint64_t v743 = (v1029 + v1043 + v270) & v986;
                            *(unsigned char *)unint64_t v742 = *(unsigned char *)v743;
                            uint64_t v744 = v742 | 4;
                            int v745 = *(_DWORD *)(v743 | 4);
                            *(unsigned char *)(v744 + 4) = *(unsigned char *)((v743 | 4) + 4);
                            *(_DWORD *)uint64_t v744 = v745;
                            *(_WORD *)(v742 + 10) = *(_WORD *)(v743 + 0xA);
                            unint64_t v1060 = v742;
                            unint64_t v746 = (v987 + v742) & v988;
                            unint64_t v1048 = v743;
                            unint64_t v747 = (v987 + v743) & v988;
                            long long v748 = *(void (**)(unint64_t, unint64_t, uint64_t))(v219 + 16);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            v748(v746, v747, v975);
                            size_t v749 = (v974 + v746) & v988;
                            size_t v750 = (v974 + v747) & v988;
                            v748(v749, v750, v975);
                            unint64_t v751 = (unsigned char *)(v749 + v971);
                            *unint64_t v751 = *(unsigned char *)(v750 + v971);
                            v751[1] = *(unsigned char *)(v750 + v971 + 1);
                            v751[2] = *(unsigned char *)(v750 + v971 + 2);
                            v751[3] = *(unsigned char *)(v750 + v971 + 3);
                            v751[4] = *(unsigned char *)(v750 + v971 + 4);
                            unint64_t v752 = (v749 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v753 = (v750 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                            *(void *)unint64_t v752 = *(void *)v753;
                            *(void *)(v752 + 8) = *(void *)(v753 + 8);
                            *(unsigned char *)(v752 + 16) = *(unsigned char *)(v753 + 16);
                            *(unsigned char *)(v752 + 17) = *(unsigned char *)(v753 + 17);
                            *(unsigned char *)(v752 + 18) = *(unsigned char *)(v753 + 18);
                            *(unsigned char *)(v752 + 19) = *(unsigned char *)(v753 + 19);
                            unint64_t v754 = (v752 + 27) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v755 = (v753 + 27) & 0xFFFFFFFFFFFFFFF8;
                            *(void *)unint64_t v754 = *(void *)v755;
                            *(unsigned char *)(v754 + 8) = *(unsigned char *)(v755 + 8);
                            *(unsigned char *)(v754 + 9) = *(unsigned char *)(v755 + 9);
                            *(unsigned char *)(v754 + 10) = *(unsigned char *)(v755 + 10);
                            *(unsigned char *)(v754 + 11) = *(unsigned char *)(v755 + 11);
                            *(unsigned char *)(v754 + 12) = *(unsigned char *)(v755 + 12);
                            uint64_t v756 = (void *)((v753 + 47) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v757 = (void *)((v752 + 47) & 0xFFFFFFFFFFFFFFF8);
                            *uint64_t v757 = *v756;
                            unint64_t v758 = ((unint64_t)v757 + 15) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v759 = ((unint64_t)v756 + 15) & 0xFFFFFFFFFFFFFFF8;
                            *(void *)unint64_t v758 = *(void *)v759;
                            *(unsigned char *)(v758 + 8) = *(unsigned char *)(v759 + 8);
                            *(unsigned char *)(v758 + 9) = *(unsigned char *)(v759 + 9);
                            v760 = (void *)((v969 + v758) & v988);
                            v761 = (const void *)((v969 + v759) & v988);
                            v762 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v219 + 48);
                            swift_bridgeObjectRetain();
                            if (v762(v761, 1, v975))
                            {
                              memcpy(v760, v761, v995);
                            }
                            else
                            {
                              v748((unint64_t)v760, (unint64_t)v761, v975);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v219 + 56))(v760, 0, 1, v975);
                            }
                            long long v763 = (void *)(((unint64_t)v760 + v970) & 0xFFFFFFFFFFFFFFF8);
                            long long v764 = (void *)(((unint64_t)v761 + v970) & 0xFFFFFFFFFFFFFFF8);
                            *long long v763 = *v764;
                            unint64_t v765 = ((unint64_t)v763 + 15) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v766 = ((unint64_t)v764 + 15) & 0xFFFFFFFFFFFFFFF8;
                            uint64_t v767 = *(void *)v766;
                            *(unsigned char *)(v765 + 8) = *(unsigned char *)(v766 + 8);
                            *(void *)unint64_t v765 = v767;
                            unint64_t v768 = (void *)(((unint64_t)v763 + 31) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v769 = (void *)(((unint64_t)v764 + 31) & 0xFFFFFFFFFFFFFFF8);
                            *unint64_t v768 = *v769;
                            unint64_t v770 = ((unint64_t)v768 + 15) & 0xFFFFFFFFFFFFFFF8;
                            uint64_t v771 = (uint64_t *)(((unint64_t)v769 + 15) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v772 = v771[1];
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            if ((v772 & 0x3000000000000000) != 0)
                            {
                              *(_OWORD *)unint64_t v770 = *(_OWORD *)v771;
                            }
                            else
                            {
                              uint64_t v773 = *v771;
                              sub_24D3F9C18(*v771, v772);
                              *(void *)unint64_t v770 = v773;
                              *(void *)(v770 + 8) = v772;
                            }
                            unsigned int v774 = v966;
                            unsigned int v253 = (void *)((unint64_t)&v1021[v992] & v990);
                            unint64_t v775 = (v770 + 19) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v776 = ((unint64_t)v771 + 19) & 0xFFFFFFFFFFFFFFF8;
                            uint64_t v777 = *(void *)v776;
                            *(unsigned char *)(v775 + 8) = *(unsigned char *)(v776 + 8);
                            *(void *)unint64_t v775 = v777;
                            *(unsigned char *)(v775 + 9) = *(unsigned char *)(v776 + 9);
                            unint64_t v778 = (v775 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                            unint64_t v779 = (v776 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                            int v780 = *(_DWORD *)v779;
                            *(unsigned char *)(v778 + 4) = *(unsigned char *)(v779 + 4);
                            *(_DWORD *)unint64_t v778 = v780;
                            long long v781 = (void *)((v775 + 25) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v782 = (void *)((v776 + 25) & 0xFFFFFFFFFFFFFFF8);
                            *long long v781 = *v782;
                            v781[1] = v782[1];
                            unint64_t v783 = v1028 + v1060;
                            long long v784 = (long long *)(v1028 + v1048);
                            unint64_t v785 = *(void *)(v1028 + v1048 + 16);
                            if (v785 >= 0xFFFFFFFF) {
                              LODWORD(v785) = -1;
                            }
                            int v786 = v785 - 1;
                            swift_bridgeObjectRetain();
                            if (v786 < 0)
                            {
                              *(void *)unint64_t v783 = *(void *)v784;
                              *(unsigned char *)(v783 + 8) = *((unsigned char *)v784 + 8);
                              *(unsigned char *)(v783 + 9) = *((unsigned char *)v784 + 9);
                              uint64_t v799 = (void *)*((void *)v784 + 2);
                              id v800 = v799;
                              *(void *)(v783 + 16) = v799;
                              uint64_t v801 = (void *)*((void *)v784 + 3);
                              id v802 = v801;
                              *(void *)(v783 + 24) = v801;
                              *(unsigned char *)(v783 + 32) = *((unsigned char *)v784 + 32);
                              *(unsigned char *)(v783 + 33) = *((unsigned char *)v784 + 33);
                              *(unsigned char *)(v783 + 34) = *((unsigned char *)v784 + 34);
                              *(void *)(v783 + 40) = *((void *)v784 + 5);
                              *(void *)(v783 + 48) = *((void *)v784 + 6);
                              *(void *)(v783 + 56) = *((void *)v784 + 7);
                              *(void *)(v783 + 64) = *((void *)v784 + 8);
                              *(unsigned char *)(v783 + 72) = *((unsigned char *)v784 + 72);
                              *(void *)(v783 + 80) = *((void *)v784 + 10);
                              *(void *)(v783 + 88) = *((void *)v784 + 11);
                              v1061 = (void *)*((void *)v784 + 12);
                              *(void *)(v783 + 96) = v1061;
                              *(unsigned char *)(v783 + 104) = *((unsigned char *)v784 + 104);
                              *(unsigned char *)(v783 + 105) = *((unsigned char *)v784 + 105);
                              *(void *)(v783 + 112) = *((void *)v784 + 14);
                              *(void *)(v783 + 120) = *((void *)v784 + 15);
                              *(void *)(v783 + 128) = *((void *)v784 + 16);
                              *(void *)(v783 + 136) = *((void *)v784 + 17);
                              *(void *)(v783 + 144) = *((void *)v784 + 18);
                              *(void *)(v783 + 152) = *((void *)v784 + 19);
                              *(void *)(v783 + 160) = *((void *)v784 + 20);
                              *(void *)(v783 + 168) = *((void *)v784 + 21);
                              *(unsigned char *)(v783 + 176) = *((unsigned char *)v784 + 176);
                              *(void *)(v783 + 184) = *((void *)v784 + 23);
                              uint64_t v803 = *((void *)v784 + 24);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              id v804 = v1061;
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              if (v803)
                              {
                                *(void *)(v783 + 192) = v803;
                                *(void *)(v783 + 200) = *((void *)v784 + 25);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                              }
                              else
                              {
                                *(_OWORD *)(v783 + 192) = v784[12];
                              }
                              uint64_t v3 = v1021;
                              unint64_t v63 = v1037;
                              unsigned int v774 = v966;
                              unsigned int v253 = (void *)((unint64_t)&v1021[v992] & v990);
                              *(void *)(v783 + 208) = *((void *)v784 + 26);
                              *(void *)(v783 + 216) = *((void *)v784 + 27);
                              *(void *)(v783 + 224) = *((void *)v784 + 28);
                              *(void *)(v783 + 232) = *((void *)v784 + 29);
                              *(void *)(v783 + 240) = *((void *)v784 + 30);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                            }
                            else
                            {
                              long long v787 = *v784;
                              long long v788 = v784[1];
                              long long v789 = v784[3];
                              *(_OWORD *)(v783 + 32) = v784[2];
                              *(_OWORD *)(v783 + 48) = v789;
                              *(_OWORD *)unint64_t v783 = v787;
                              *(_OWORD *)(v783 + 16) = v788;
                              long long v790 = v784[4];
                              long long v791 = v784[5];
                              long long v792 = v784[7];
                              *(_OWORD *)(v783 + 96) = v784[6];
                              *(_OWORD *)(v783 + 112) = v792;
                              *(_OWORD *)(v783 + 64) = v790;
                              *(_OWORD *)(v783 + 80) = v791;
                              long long v793 = v784[8];
                              long long v794 = v784[9];
                              long long v795 = v784[11];
                              *(_OWORD *)(v783 + 160) = v784[10];
                              *(_OWORD *)(v783 + 176) = v795;
                              *(_OWORD *)(v783 + 128) = v793;
                              *(_OWORD *)(v783 + 144) = v794;
                              long long v796 = v784[12];
                              long long v797 = v784[13];
                              long long v798 = v784[14];
                              *(void *)(v783 + 240) = *((void *)v784 + 30);
                              *(_OWORD *)(v783 + 208) = v797;
                              *(_OWORD *)(v783 + 224) = v798;
                              *(_OWORD *)(v783 + 192) = v796;
                              unint64_t v63 = v1037;
                            }
                            unsigned int v919 = (_OWORD *)((v783 + 255) & 0xFFFFFFFFFFFFFFF8);
                            unsigned int v920 = (long long *)(((unint64_t)v784 + 255) & 0xFFFFFFFFFFFFFFF8);
                            long long v921 = *v920;
                            *(_OWORD *)((char *)v919 + 9) = *(long long *)((char *)v920 + 9);
                            *unsigned int v919 = v921;
                            unint64_t v922 = (v783 + 287) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v923 = ((unint64_t)v784 + 287) & 0xFFFFFFFFFFFFFFF8;
                            long long v924 = *(_OWORD *)v923;
                            *(unsigned char *)(v922 + 16) = *(unsigned char *)(v923 + 16);
                            *(_OWORD *)unint64_t v922 = v924;
                            uint64_t v925 = (void *)((v783 + 311) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v926 = ((unint64_t)v784 + 311) & 0xFFFFFFFFFFFFFFF8;
                            uint64_t v927 = *(void *)v926;
                            v926 += 15;
                            *uint64_t v925 = v927;
                            uint64_t v928 = (void *)(((unint64_t)v925 + 15) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v929 = *(void *)(v926 & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v930 = *(void *)((v926 & 0xFFFFFFFFFFFFFFF8) + 8);
                            sub_24D5203A8(v929, v930);
                            *uint64_t v928 = v929;
                            v928[1] = v930;
                            size_t v730 = v971;
                            unint64_t v254 = (void *)((unint64_t)&a2[v992] & v990);
                            if (!v774) {
                              goto LABEL_614;
                            }
LABEL_682:
                            unint64_t v931 = ((((v962
                                     + ((((((((((v989 + v730 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                           + 15) & 0xFFFFFFFFFFFFFFF8)
                                         + 19) & 0xFFFFFFFFFFFFFFF8)
                                       + 25) & 0xFFFFFFFFFFFFFFF8)
                                     + 327) & 0xFFFFFFFFFFFFFFF8)
                                   + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 16;
                            unint64_t v932 = (void *)(((unint64_t)v253 + v931) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v933 = (void *)(((unint64_t)v254 + v931) & 0xFFFFFFFFFFFFFFF8);
                            *unint64_t v932 = *v933;
                            v932[1] = v933[1];
                            *(void *)(((unint64_t)v932 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v933 + 23) & 0xFFFFFFFFFFFFFFF8);
                            v3[v945] = 3;
                            swift_bridgeObjectRetain();
                            goto LABEL_683;
                          case 4u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1021, a2, v220);
                            char v256 = 0;
                            v1021[v47] = 4;
                            goto LABEL_684;
                          case 5u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1021, a2, v220);
                            char v256 = 0;
                            v1021[v47] = 5;
                            goto LABEL_684;
                          case 6u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1021, a2, v220);
                            unint64_t v257 = (void *)((unint64_t)&v1021[v957] & v954);
                            unint64_t v258 = (const void *)((unint64_t)&a2[v957] & v954);
                            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v42 + 48))(v258, 1, v1025))
                            {
                              memcpy(v257, v258, v948);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v42 + 16))(v257, v258, v1025);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v42 + 56))(v257, 0, 1, v1025);
                            }
                            char v256 = 0;
                            v1021[v47] = 6;
                            goto LABEL_684;
                          case 7u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16))(v1021, a2, v220);
                            char v256 = 0;
                            v1021[v47] = 7;
                            goto LABEL_684;
                          default:
                            unint64_t v943 = v47;
                            unint64_t v243 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v67 + 16);
                            v243(v1021, a2, v220);
                            unint64_t v244 = (void *)((unint64_t)&v1021[v992] & v990);
                            size_t v245 = (void *)((unint64_t)&a2[v992] & v990);
                            if (v1031 == v994)
                            {
                              int v246 = (*(uint64_t (**)(void *))(v67 + 48))(v245);
LABEL_578:
                              if (v246)
                              {
LABEL_579:
                                memcpy(v244, v245, v973);
                                goto LABEL_580;
                              }
                              unint64_t v265 = ((unint64_t)v245 + v997) & v1017;
                              unint64_t v266 = (v998 + v265) & v1055;
LABEL_582:
                              unint64_t v1035 = v63;
                              v243((unsigned __int8 *)v244, (unsigned __int8 *)v245, v220);
                              v243((unsigned __int8 *)(((unint64_t)v244 + v997) & v1017), (unsigned __int8 *)v265, v220);
                              unint64_t v577 = (v998 + (((unint64_t)v244 + v997) & v1017)) & v1055;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1002 + 16))(v577, v266, v1001);
                              v578 = (void *)((v1005 + v577) & 0xFFFFFFFFFFFFFFF8);
                              v579 = (void *)((v1005 + v266) & 0xFFFFFFFFFFFFFFF8);
                              void *v578 = *v579;
                              unint64_t v580 = ((unint64_t)v578 + v981) & v977;
                              unint64_t v581 = ((unint64_t)v579 + v981) & v977;
                              uint64_t v582 = *(void (**)(unint64_t, unint64_t, uint64_t))(v983 + 16);
                              swift_bridgeObjectRetain();
                              v582(v580, v581, v982);
                              v583 = (void *)((v965 + v581) & 0xFFFFFFFFFFFFFFF8);
                              v584 = (void *)((v965 + v580) & 0xFFFFFFFFFFFFFFF8);
                              void *v584 = *v583;
                              unint64_t v585 = (void *)(((unint64_t)v584 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v586 = (void *)(((unint64_t)v583 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v585 = *v586;
                              v585[1] = v586[1];
                              unint64_t v587 = (void *)(v1043 + v577);
                              *unint64_t v587 = *(void *)(v1043 + v266);
                              v587[1] = *(void *)(v1043 + v266 + 8);
                              unint64_t v588 = (v1029 + v1043 + v577) & v986;
                              unint64_t v589 = (v1029 + v1043 + v266) & v986;
                              *(unsigned char *)unint64_t v588 = *(unsigned char *)v589;
                              uint64_t v590 = v588 | 4;
                              int v591 = *(_DWORD *)(v589 | 4);
                              *(unsigned char *)(v590 + 4) = *(unsigned char *)((v589 | 4) + 4);
                              *(_DWORD *)uint64_t v590 = v591;
                              *(_WORD *)(v588 + 10) = *(_WORD *)(v589 + 0xA);
                              unint64_t v1056 = v588;
                              unint64_t v592 = (v987 + v588) & v988;
                              unint64_t v1046 = v589;
                              unint64_t v593 = (v987 + v589) & v988;
                              int v594 = *(void (**)(unint64_t, unint64_t, uint64_t))(v219 + 16);
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              v594(v592, v593, v975);
                              size_t v595 = (v974 + v592) & v988;
                              size_t v596 = (v974 + v593) & v988;
                              v594(v595, v596, v975);
                              unint64_t v597 = (unsigned char *)(v595 + v971);
                              *unint64_t v597 = *(unsigned char *)(v596 + v971);
                              v597[1] = *(unsigned char *)(v596 + v971 + 1);
                              v597[2] = *(unsigned char *)(v596 + v971 + 2);
                              v597[3] = *(unsigned char *)(v596 + v971 + 3);
                              v597[4] = *(unsigned char *)(v596 + v971 + 4);
                              unint64_t v598 = (v595 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v599 = (v596 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v598 = *(void *)v599;
                              *(void *)(v598 + 8) = *(void *)(v599 + 8);
                              *(unsigned char *)(v598 + 16) = *(unsigned char *)(v599 + 16);
                              *(unsigned char *)(v598 + 17) = *(unsigned char *)(v599 + 17);
                              *(unsigned char *)(v598 + 18) = *(unsigned char *)(v599 + 18);
                              *(unsigned char *)(v598 + 19) = *(unsigned char *)(v599 + 19);
                              unint64_t v600 = (v598 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v601 = (v599 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v600 = *(void *)v601;
                              *(unsigned char *)(v600 + 8) = *(unsigned char *)(v601 + 8);
                              *(unsigned char *)(v600 + 9) = *(unsigned char *)(v601 + 9);
                              *(unsigned char *)(v600 + 10) = *(unsigned char *)(v601 + 10);
                              *(unsigned char *)(v600 + 11) = *(unsigned char *)(v601 + 11);
                              *(unsigned char *)(v600 + 12) = *(unsigned char *)(v601 + 12);
                              long long v602 = (void *)((v599 + 47) & 0xFFFFFFFFFFFFFFF8);
                              long long v603 = (void *)((v598 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *long long v603 = *v602;
                              unint64_t v604 = ((unint64_t)v603 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v605 = ((unint64_t)v602 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v604 = *(void *)v605;
                              *(unsigned char *)(v604 + 8) = *(unsigned char *)(v605 + 8);
                              *(unsigned char *)(v604 + 9) = *(unsigned char *)(v605 + 9);
                              long long v606 = (void *)((v969 + v604) & v988);
                              long long v607 = (const void *)((v969 + v605) & v988);
                              long long v608 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v219 + 48);
                              swift_bridgeObjectRetain();
                              if (v608(v607, 1, v975))
                              {
                                memcpy(v606, v607, v995);
                              }
                              else
                              {
                                v594((unint64_t)v606, (unint64_t)v607, v975);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v219 + 56))(v606, 0, 1, v975);
                              }
                              long long v609 = (void *)(((unint64_t)v606 + v970) & 0xFFFFFFFFFFFFFFF8);
                              long long v610 = (void *)(((unint64_t)v607 + v970) & 0xFFFFFFFFFFFFFFF8);
                              *long long v609 = *v610;
                              unint64_t v611 = ((unint64_t)v609 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v612 = ((unint64_t)v610 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v613 = *(void *)v612;
                              *(unsigned char *)(v611 + 8) = *(unsigned char *)(v612 + 8);
                              *(void *)unint64_t v611 = v613;
                              id v614 = (void *)(((unint64_t)v609 + 31) & 0xFFFFFFFFFFFFFFF8);
                              id v615 = (void *)(((unint64_t)v610 + 31) & 0xFFFFFFFFFFFFFFF8);
                              *id v614 = *v615;
                              unint64_t v616 = ((unint64_t)v614 + 15) & 0xFFFFFFFFFFFFFFF8;
                              id v617 = (uint64_t *)(((unint64_t)v615 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v618 = v617[1];
                              swift_bridgeObjectRetain();
                              swift_bridgeObjectRetain();
                              if ((v618 & 0x3000000000000000) != 0)
                              {
                                *(_OWORD *)unint64_t v616 = *(_OWORD *)v617;
                              }
                              else
                              {
                                uint64_t v619 = *v617;
                                sub_24D3F9C18(*v617, v618);
                                *(void *)unint64_t v616 = v619;
                                *(void *)(v616 + 8) = v618;
                              }
                              unsigned int v620 = v966;
                              unint64_t v244 = (void *)((unint64_t)&v1021[v992] & v990);
                              unint64_t v621 = (v616 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v622 = ((unint64_t)v617 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v623 = *(void *)v622;
                              *(unsigned char *)(v621 + 8) = *(unsigned char *)(v622 + 8);
                              *(void *)unint64_t v621 = v623;
                              *(unsigned char *)(v621 + 9) = *(unsigned char *)(v622 + 9);
                              unint64_t v624 = (v621 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v625 = (v622 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              int v626 = *(_DWORD *)v625;
                              *(unsigned char *)(v624 + 4) = *(unsigned char *)(v625 + 4);
                              *(_DWORD *)unint64_t v624 = v626;
                              unint64_t v627 = (void *)((v621 + 25) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v628 = (void *)((v622 + 25) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v627 = *v628;
                              v627[1] = v628[1];
                              unint64_t v629 = v1028 + v1056;
                              v630 = (long long *)(v1028 + v1046);
                              unint64_t v631 = *(void *)(v1028 + v1046 + 16);
                              if (v631 >= 0xFFFFFFFF) {
                                LODWORD(v631) = -1;
                              }
                              int v632 = v631 - 1;
                              swift_bridgeObjectRetain();
                              if (v632 < 0)
                              {
                                *(void *)unint64_t v629 = *(void *)v630;
                                *(unsigned char *)(v629 + 8) = *((unsigned char *)v630 + 8);
                                *(unsigned char *)(v629 + 9) = *((unsigned char *)v630 + 9);
                                unint64_t v645 = (void *)*((void *)v630 + 2);
                                id v646 = v645;
                                *(void *)(v629 + 16) = v645;
                                unint64_t v647 = (void *)*((void *)v630 + 3);
                                id v648 = v647;
                                *(void *)(v629 + 24) = v647;
                                *(unsigned char *)(v629 + 32) = *((unsigned char *)v630 + 32);
                                *(unsigned char *)(v629 + 33) = *((unsigned char *)v630 + 33);
                                *(unsigned char *)(v629 + 34) = *((unsigned char *)v630 + 34);
                                *(void *)(v629 + 40) = *((void *)v630 + 5);
                                *(void *)(v629 + 48) = *((void *)v630 + 6);
                                *(void *)(v629 + 56) = *((void *)v630 + 7);
                                *(void *)(v629 + 64) = *((void *)v630 + 8);
                                *(unsigned char *)(v629 + 72) = *((unsigned char *)v630 + 72);
                                *(void *)(v629 + 80) = *((void *)v630 + 10);
                                *(void *)(v629 + 88) = *((void *)v630 + 11);
                                v1057 = (void *)*((void *)v630 + 12);
                                *(void *)(v629 + 96) = v1057;
                                *(unsigned char *)(v629 + 104) = *((unsigned char *)v630 + 104);
                                *(unsigned char *)(v629 + 105) = *((unsigned char *)v630 + 105);
                                *(void *)(v629 + 112) = *((void *)v630 + 14);
                                *(void *)(v629 + 120) = *((void *)v630 + 15);
                                *(void *)(v629 + 128) = *((void *)v630 + 16);
                                *(void *)(v629 + 136) = *((void *)v630 + 17);
                                *(void *)(v629 + 144) = *((void *)v630 + 18);
                                *(void *)(v629 + 152) = *((void *)v630 + 19);
                                *(void *)(v629 + 160) = *((void *)v630 + 20);
                                *(void *)(v629 + 168) = *((void *)v630 + 21);
                                *(unsigned char *)(v629 + 176) = *((unsigned char *)v630 + 176);
                                *(void *)(v629 + 184) = *((void *)v630 + 23);
                                uint64_t v649 = *((void *)v630 + 24);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                id v650 = v1057;
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                                if (v649)
                                {
                                  *(void *)(v629 + 192) = v649;
                                  *(void *)(v629 + 200) = *((void *)v630 + 25);
                                  swift_bridgeObjectRetain();
                                  swift_bridgeObjectRetain();
                                }
                                else
                                {
                                  *(_OWORD *)(v629 + 192) = v630[12];
                                }
                                uint64_t v3 = v1021;
                                unint64_t v63 = v1035;
                                unsigned int v620 = v966;
                                unint64_t v244 = (void *)((unint64_t)&v1021[v992] & v990);
                                *(void *)(v629 + 208) = *((void *)v630 + 26);
                                *(void *)(v629 + 216) = *((void *)v630 + 27);
                                *(void *)(v629 + 224) = *((void *)v630 + 28);
                                *(void *)(v629 + 232) = *((void *)v630 + 29);
                                *(void *)(v629 + 240) = *((void *)v630 + 30);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRetain();
                              }
                              else
                              {
                                long long v633 = *v630;
                                long long v634 = v630[1];
                                long long v635 = v630[3];
                                *(_OWORD *)(v629 + 32) = v630[2];
                                *(_OWORD *)(v629 + 48) = v635;
                                *(_OWORD *)unint64_t v629 = v633;
                                *(_OWORD *)(v629 + 16) = v634;
                                long long v636 = v630[4];
                                long long v637 = v630[5];
                                long long v638 = v630[7];
                                *(_OWORD *)(v629 + 96) = v630[6];
                                *(_OWORD *)(v629 + 112) = v638;
                                *(_OWORD *)(v629 + 64) = v636;
                                *(_OWORD *)(v629 + 80) = v637;
                                long long v639 = v630[8];
                                long long v640 = v630[9];
                                long long v641 = v630[11];
                                *(_OWORD *)(v629 + 160) = v630[10];
                                *(_OWORD *)(v629 + 176) = v641;
                                *(_OWORD *)(v629 + 128) = v639;
                                *(_OWORD *)(v629 + 144) = v640;
                                long long v642 = v630[12];
                                long long v643 = v630[13];
                                long long v644 = v630[14];
                                *(void *)(v629 + 240) = *((void *)v630 + 30);
                                *(_OWORD *)(v629 + 208) = v643;
                                *(_OWORD *)(v629 + 224) = v644;
                                *(_OWORD *)(v629 + 192) = v642;
                                unint64_t v63 = v1035;
                              }
                              unsigned int v871 = (_OWORD *)((v629 + 255) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v872 = (long long *)(((unint64_t)v630 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v873 = *v872;
                              *(_OWORD *)((char *)v871 + 9) = *(long long *)((char *)v872 + 9);
                              *unsigned int v871 = v873;
                              unint64_t v874 = (v629 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v875 = ((unint64_t)v630 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v876 = *(_OWORD *)v875;
                              *(unsigned char *)(v874 + 16) = *(unsigned char *)(v875 + 16);
                              *(_OWORD *)unint64_t v874 = v876;
                              uint64_t v877 = (void *)((v629 + 311) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v878 = ((unint64_t)v630 + 311) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v879 = *(void *)v878;
                              v878 += 15;
                              *uint64_t v877 = v879;
                              uint64_t v880 = (void *)(((unint64_t)v877 + 15) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v881 = *(void *)(v878 & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v882 = *(void *)((v878 & 0xFFFFFFFFFFFFFFF8) + 8);
                              sub_24D5203A8(v881, v882);
                              *uint64_t v880 = v881;
                              v880[1] = v882;
                              size_t v576 = v971;
                              size_t v245 = (void *)((unint64_t)&a2[v992] & v990);
                              if (v620)
                              {
LABEL_658:
                                unint64_t v883 = ((((v962
                                         + ((((((((((v989 + v576 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                uint64_t v884 = (void *)(((unint64_t)v244 + v883) & 0xFFFFFFFFFFFFFFF8);
                                uint64_t v885 = (void *)(((unint64_t)v245 + v883) & 0xFFFFFFFFFFFFFFF8);
                                *uint64_t v884 = *v885;
                                uint64_t v886 = *(void **)(((unint64_t)v885 + 15) & 0xFFFFFFFFFFFFFFF8);
                                *(void *)(((unint64_t)v884 + 15) & 0xFFFFFFFFFFFFFFF8) = v886;
                                v3[v943] = 0;
                                id v887 = v886;
LABEL_683:
                                char v256 = 0;
                                goto LABEL_684;
                              }
LABEL_580:
                              size_t v576 = v995;
                              goto LABEL_658;
                            }
                            unint64_t v265 = ((unint64_t)v245 + v997) & v1017;
                            unint64_t v266 = (v998 + v265) & v1055;
                            if (v1003 == v994)
                            {
                              if (v985 == v1003)
                              {
                                int v246 = (*(uint64_t (**)(unint64_t))(v1002 + 48))((v998 + v265) & v1055);
                                goto LABEL_578;
                              }
                              uint64_t v336 = (unint64_t *)((v1005 + v266) & 0xFFFFFFFFFFFFFFF8);
                              if (v960 > 0x7FFFFFFE)
                              {
                                int v246 = (*(uint64_t (**)(unint64_t))(v983 + 48))(((unint64_t)v336
                                                                                                + v981) & v977);
                                goto LABEL_578;
                              }
                              unint64_t v337 = *v336;
                            }
                            else
                            {
                              unint64_t v290 = v1043 + v266;
                              if ((v952 & 0x80000000) == 0)
                              {
                                unint64_t v291 = *(void *)(v290 + 8);
                                if (v291 >= 0xFFFFFFFF) {
                                  LODWORD(v291) = -1;
                                }
                                int v246 = v291 + 1;
                                goto LABEL_578;
                              }
                              uint64_t v346 = (v987 + ((v1029 + v290) & v986)) & v988;
                              if (v966 > 0x7FFFFFFD)
                              {
                                int v246 = (*(uint64_t (**)(uint64_t))(v219 + 48))(v346);
                                goto LABEL_578;
                              }
                              unint64_t v337 = *(void *)(((v961 + ((v974 + v346) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v337 >= 0xFFFFFFFF) {
                              LODWORD(v337) = -1;
                            }
                            if ((v337 + 1) >= 2) {
                              goto LABEL_579;
                            }
                            goto LABEL_582;
                        }
                      }
                      goto LABEL_328;
                    }
LABEL_326:
                    unsigned int v208 = (v211 | (v209 << (8 * v63))) + 2;
                    break;
                  default:
                    break;
                }
              }
              if (v208 != 1) {
                goto LABEL_339;
              }
LABEL_328:
              unsigned int v212 = a2[v62];
              unsigned int v213 = v212 - 8;
              if (v212 >= 8)
              {
                if (v62 <= 3) {
                  uint64_t v214 = v62;
                }
                else {
                  uint64_t v214 = 4;
                }
                switch(v214)
                {
                  case 1:
                    int v215 = *a2;
                    if (v62 < 4) {
                      goto LABEL_348;
                    }
                    goto LABEL_352;
                  case 2:
                    int v215 = *(unsigned __int16 *)a2;
                    if (v62 < 4) {
                      goto LABEL_348;
                    }
                    goto LABEL_352;
                  case 3:
                    int v215 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                    if (v62 < 4) {
                      goto LABEL_348;
                    }
                    goto LABEL_352;
                  case 4:
                    int v215 = *(_DWORD *)a2;
                    if (v62 < 4) {
LABEL_348:
                    }
                      unsigned int v212 = (v215 | (v213 << (8 * v62))) + 8;
                    else {
LABEL_352:
                    }
                      unsigned int v212 = v215 + 8;
                    break;
                  default:
                    break;
                }
              }
              switch(v212)
              {
                case 1u:
                  unint64_t v226 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1027 + 16);
                  v226(v1021, a2, v1039);
                  unint64_t v227 = (void *)((unint64_t)&a2[v991] & v1010);
                  v1026 = v227;
                  if (v993 == v51)
                  {
                    int v228 = (*(uint64_t (**)(unint64_t))(v1027 + 48))((unint64_t)&a2[v991] & v1010);
LABEL_358:
                    unint64_t v227 = (void *)((unint64_t)&a2[v991] & v1010);
                    goto LABEL_359;
                  }
                  unint64_t v261 = ((unint64_t)v227 + v1008) & v1015;
                  unint64_t v262 = (v996 + v261) & v1019;
                  if (v1012 == v51)
                  {
                    if (v984 == v1012)
                    {
                      int v228 = (*(uint64_t (**)(unint64_t))(v1000 + 48))((v996 + v261) & v1019);
                      goto LABEL_358;
                    }
                    uint64_t v332 = (unint64_t *)((v1004 + v262) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v229 = AssociatedTypeWitness;
                    unint64_t v230 = (void *)((unint64_t)&v1021[v991] & v1010);
                    if (v959 <= 0x7FFFFFFE)
                    {
                      unint64_t v333 = *v332;
                      goto LABEL_712;
                    }
                    int v344 = (*(uint64_t (**)(unint64_t))(v979 + 48))(((unint64_t)v332 + v978) & v976);
                  }
                  else
                  {
                    size_t v286 = v1013 + v262;
                    if ((v951 & 0x80000000) == 0)
                    {
                      unint64_t v287 = *(void *)(v286 + 8);
                      if (v287 >= 0xFFFFFFFF) {
                        LODWORD(v287) = -1;
                      }
                      int v228 = v287 + 1;
LABEL_359:
                      uint64_t v229 = AssociatedTypeWitness;
                      unint64_t v230 = (void *)((unint64_t)&v1021[v991] & v1010);
                      if (v228)
                      {
LABEL_360:
                        memcpy(v230, v227, __n);
                        unint64_t v231 = v989;
LABEL_361:
                        size_t v232 = v995;
                        goto LABEL_635;
                      }
                      goto LABEL_546;
                    }
                    size_t v343 = (v987 + ((v1029 + v286) & v986)) & v988;
                    uint64_t v229 = AssociatedTypeWitness;
                    unint64_t v230 = (void *)((unint64_t)&v1021[v991] & v1010);
                    if (v966 <= 0x7FFFFFFD)
                    {
                      unint64_t v333 = *(void *)(((v961 + ((v974 + v343) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_712:
                      if (v333 >= 0xFFFFFFFF) {
                        LODWORD(v333) = -1;
                      }
                      if ((v333 + 1) >= 2) {
                        goto LABEL_360;
                      }
LABEL_547:
                      unint64_t v942 = v62;
                      unint64_t v1033 = v63;
                      v226((unsigned __int8 *)v230, (unsigned __int8 *)v227, v1039);
                      unint64_t v425 = ((unint64_t)v230 + v1008) & v1015;
                      v226((unsigned __int8 *)v425, (unsigned __int8 *)v261, v1039);
                      unint64_t v426 = (v996 + v425) & v1019;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1000 + 16))(v426, v262, v999);
                      unint64_t v427 = (void *)((v1004 + v426) & 0xFFFFFFFFFFFFFFF8);
                      v428 = (void *)((v1004 + v262) & 0xFFFFFFFFFFFFFFF8);
                      void *v427 = *v428;
                      unint64_t v429 = ((unint64_t)v427 + v978) & v976;
                      unint64_t v430 = ((unint64_t)v428 + v978) & v976;
                      unsigned int v431 = *(void (**)(unint64_t, unint64_t, uint64_t))(v979 + 16);
                      swift_bridgeObjectRetain();
                      v431(v429, v430, v980);
                      unint64_t v432 = (void *)((v964 + v430) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v433 = (void *)((v964 + v429) & 0xFFFFFFFFFFFFFFF8);
                      *unint64_t v433 = *v432;
                      uint64_t v434 = (void *)(((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v435 = (void *)(((unint64_t)v432 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v434 = *v435;
                      v434[1] = v435[1];
                      unint64_t v436 = (void *)(v1013 + v426);
                      *unint64_t v436 = *(void *)(v1013 + v262);
                      v436[1] = *(void *)(v1013 + v262 + 8);
                      size_t v437 = (v1029 + v1013 + v426) & v986;
                      size_t v438 = (v1029 + v1013 + v262) & v986;
                      *(unsigned char *)size_t v437 = *(unsigned char *)v438;
                      uint64_t v439 = v437 | 4;
                      int v440 = *(_DWORD *)(v438 | 4);
                      *(unsigned char *)(v439 + 4) = *(unsigned char *)((v438 | 4) + 4);
                      *(_DWORD *)uint64_t v439 = v440;
                      *(_WORD *)(v437 + 10) = *(_WORD *)(v438 + 0xA);
                      size_t v1040 = v437;
                      size_t v441 = (v987 + v437) & v988;
                      size_t v1030 = v438;
                      size_t v442 = (v987 + v438) & v988;
                      int v443 = *(void (**)(size_t, size_t, uint64_t))(v1006 + 16);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      v443(v441, v442, v975);
                      size_t v444 = (v974 + v441) & v988;
                      size_t v445 = (v974 + v442) & v988;
                      v443(v444, v445, v975);
                      long long v446 = (unsigned char *)(v444 + v971);
                      *long long v446 = *(unsigned char *)(v445 + v971);
                      v446[1] = *(unsigned char *)(v445 + v971 + 1);
                      v446[2] = *(unsigned char *)(v445 + v971 + 2);
                      v446[3] = *(unsigned char *)(v445 + v971 + 3);
                      v446[4] = *(unsigned char *)(v445 + v971 + 4);
                      unint64_t v447 = (v444 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v448 = (v445 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v447 = *(void *)v448;
                      *(void *)(v447 + 8) = *(void *)(v448 + 8);
                      *(unsigned char *)(v447 + 16) = *(unsigned char *)(v448 + 16);
                      *(unsigned char *)(v447 + 17) = *(unsigned char *)(v448 + 17);
                      *(unsigned char *)(v447 + 18) = *(unsigned char *)(v448 + 18);
                      *(unsigned char *)(v447 + 19) = *(unsigned char *)(v448 + 19);
                      unint64_t v449 = (v447 + 27) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v450 = (v448 + 27) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v449 = *(void *)v450;
                      *(unsigned char *)(v449 + 8) = *(unsigned char *)(v450 + 8);
                      *(unsigned char *)(v449 + 9) = *(unsigned char *)(v450 + 9);
                      *(unsigned char *)(v449 + 10) = *(unsigned char *)(v450 + 10);
                      *(unsigned char *)(v449 + 11) = *(unsigned char *)(v450 + 11);
                      *(unsigned char *)(v449 + 12) = *(unsigned char *)(v450 + 12);
                      long long v451 = (void *)((v448 + 47) & 0xFFFFFFFFFFFFFFF8);
                      long long v452 = (void *)((v447 + 47) & 0xFFFFFFFFFFFFFFF8);
                      *long long v452 = *v451;
                      unint64_t v453 = ((unint64_t)v452 + 15) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v454 = ((unint64_t)v451 + 15) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v453 = *(void *)v454;
                      *(unsigned char *)(v453 + 8) = *(unsigned char *)(v454 + 8);
                      *(unsigned char *)(v453 + 9) = *(unsigned char *)(v454 + 9);
                      long long v455 = (void *)((v969 + v453) & v988);
                      long long v456 = (const void *)((v969 + v454) & v988);
                      id v457 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1006 + 48);
                      swift_bridgeObjectRetain();
                      if (v457(v456, 1, v975))
                      {
                        memcpy(v455, v456, v995);
                      }
                      else
                      {
                        v443((size_t)v455, (size_t)v456, v975);
                        (*(void (**)(void *, void, uint64_t, uint64_t))(v1006 + 56))(v455, 0, 1, v975);
                      }
                      unint64_t v62 = v942;
                      id v458 = (void *)(((unint64_t)v455 + v970) & 0xFFFFFFFFFFFFFFF8);
                      id v459 = (void *)(((unint64_t)v456 + v970) & 0xFFFFFFFFFFFFFFF8);
                      *id v458 = *v459;
                      unint64_t v460 = ((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v461 = ((unint64_t)v459 + 15) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v462 = *(void *)v461;
                      *(unsigned char *)(v460 + 8) = *(unsigned char *)(v461 + 8);
                      *(void *)unint64_t v460 = v462;
                      size_t v463 = (void *)(((unint64_t)v458 + 31) & 0xFFFFFFFFFFFFFFF8);
                      v464 = (void *)(((unint64_t)v459 + 31) & 0xFFFFFFFFFFFFFFF8);
                      *size_t v463 = *v464;
                      unint64_t v465 = ((unint64_t)v463 + 15) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v466 = (uint64_t *)(((unint64_t)v464 + 15) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v467 = v466[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      if ((v467 & 0x3000000000000000) != 0)
                      {
                        *(_OWORD *)unint64_t v465 = *(_OWORD *)v466;
                      }
                      else
                      {
                        uint64_t v468 = *v466;
                        sub_24D3F9C18(*v466, v467);
                        *(void *)unint64_t v465 = v468;
                        *(void *)(v465 + 8) = v467;
                      }
                      uint64_t v229 = AssociatedTypeWitness;
                      unint64_t v469 = (v465 + 19) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v470 = ((unint64_t)v466 + 19) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v471 = *(void *)v470;
                      *(unsigned char *)(v469 + 8) = *(unsigned char *)(v470 + 8);
                      *(void *)unint64_t v469 = v471;
                      *(unsigned char *)(v469 + 9) = *(unsigned char *)(v470 + 9);
                      unint64_t v472 = (v469 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      unint64_t v473 = (v470 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      int v474 = *(_DWORD *)v473;
                      *(unsigned char *)(v472 + 4) = *(unsigned char *)(v473 + 4);
                      *(_DWORD *)unint64_t v472 = v474;
                      v475 = (void *)((v469 + 25) & 0xFFFFFFFFFFFFFFF8);
                      v476 = (void *)((v470 + 25) & 0xFFFFFFFFFFFFFFF8);
                      void *v475 = *v476;
                      v475[1] = v476[1];
                      size_t v477 = v1040 + v1028;
                      size_t v478 = (long long *)(v1030 + v1028);
                      unint64_t v479 = *(void *)(v1030 + v1028 + 16);
                      if (v479 >= 0xFFFFFFFF) {
                        LODWORD(v479) = -1;
                      }
                      int v480 = v479 - 1;
                      swift_bridgeObjectRetain();
                      if (v480 < 0)
                      {
                        *(void *)size_t v477 = *(void *)v478;
                        *(unsigned char *)(v477 + 8) = *((unsigned char *)v478 + 8);
                        *(unsigned char *)(v477 + 9) = *((unsigned char *)v478 + 9);
                        unint64_t v494 = (void *)*((void *)v478 + 2);
                        id v495 = v494;
                        *(void *)(v477 + 16) = v494;
                        v496 = (void *)*((void *)v478 + 3);
                        id v497 = v496;
                        *(void *)(v477 + 24) = v496;
                        *(unsigned char *)(v477 + 32) = *((unsigned char *)v478 + 32);
                        *(unsigned char *)(v477 + 33) = *((unsigned char *)v478 + 33);
                        *(unsigned char *)(v477 + 34) = *((unsigned char *)v478 + 34);
                        *(void *)(v477 + 40) = *((void *)v478 + 5);
                        *(void *)(v477 + 48) = *((void *)v478 + 6);
                        *(void *)(v477 + 56) = *((void *)v478 + 7);
                        *(void *)(v477 + 64) = *((void *)v478 + 8);
                        *(unsigned char *)(v477 + 72) = *((unsigned char *)v478 + 72);
                        *(void *)(v477 + 80) = *((void *)v478 + 10);
                        *(void *)(v477 + 88) = *((void *)v478 + 11);
                        v1041 = (void *)*((void *)v478 + 12);
                        *(void *)(v477 + 96) = v1041;
                        *(unsigned char *)(v477 + 104) = *((unsigned char *)v478 + 104);
                        *(unsigned char *)(v477 + 105) = *((unsigned char *)v478 + 105);
                        *(void *)(v477 + 112) = *((void *)v478 + 14);
                        *(void *)(v477 + 120) = *((void *)v478 + 15);
                        *(void *)(v477 + 128) = *((void *)v478 + 16);
                        *(void *)(v477 + 136) = *((void *)v478 + 17);
                        *(void *)(v477 + 144) = *((void *)v478 + 18);
                        *(void *)(v477 + 152) = *((void *)v478 + 19);
                        *(void *)(v477 + 160) = *((void *)v478 + 20);
                        *(void *)(v477 + 168) = *((void *)v478 + 21);
                        *(unsigned char *)(v477 + 176) = *((unsigned char *)v478 + 176);
                        *(void *)(v477 + 184) = *((void *)v478 + 23);
                        uint64_t v498 = *((void *)v478 + 24);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        id v499 = v1041;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (v498)
                        {
                          *(void *)(v477 + 192) = v498;
                          *(void *)(v477 + 200) = *((void *)v478 + 25);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRetain();
                        }
                        else
                        {
                          *(_OWORD *)(v477 + 192) = v478[12];
                        }
                        uint64_t v3 = v1021;
                        unint64_t v63 = v1033;
                        unint64_t v231 = v989;
                        unsigned int v493 = v966;
                        unint64_t v62 = v942;
                        uint64_t v229 = AssociatedTypeWitness;
                        *(void *)(v477 + 208) = *((void *)v478 + 26);
                        *(void *)(v477 + 216) = *((void *)v478 + 27);
                        *(void *)(v477 + 224) = *((void *)v478 + 28);
                        *(void *)(v477 + 232) = *((void *)v478 + 29);
                        *(void *)(v477 + 240) = *((void *)v478 + 30);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                      else
                      {
                        long long v481 = *v478;
                        long long v482 = v478[1];
                        long long v483 = v478[3];
                        *(_OWORD *)(v477 + 32) = v478[2];
                        *(_OWORD *)(v477 + 48) = v483;
                        *(_OWORD *)size_t v477 = v481;
                        *(_OWORD *)(v477 + 16) = v482;
                        long long v484 = v478[4];
                        long long v485 = v478[5];
                        long long v486 = v478[7];
                        *(_OWORD *)(v477 + 96) = v478[6];
                        *(_OWORD *)(v477 + 112) = v486;
                        *(_OWORD *)(v477 + 64) = v484;
                        *(_OWORD *)(v477 + 80) = v485;
                        long long v487 = v478[8];
                        long long v488 = v478[9];
                        long long v489 = v478[11];
                        *(_OWORD *)(v477 + 160) = v478[10];
                        *(_OWORD *)(v477 + 176) = v489;
                        *(_OWORD *)(v477 + 128) = v487;
                        *(_OWORD *)(v477 + 144) = v488;
                        long long v490 = v478[12];
                        long long v491 = v478[13];
                        long long v492 = v478[14];
                        *(void *)(v477 + 240) = *((void *)v478 + 30);
                        *(_OWORD *)(v477 + 208) = v491;
                        *(_OWORD *)(v477 + 224) = v492;
                        *(_OWORD *)(v477 + 192) = v490;
                        unint64_t v63 = v1033;
                        unint64_t v231 = v989;
                        unsigned int v493 = v966;
                      }
                      unint64_t v822 = (_OWORD *)((v477 + 255) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v823 = (long long *)(((unint64_t)v478 + 255) & 0xFFFFFFFFFFFFFFF8);
                      long long v824 = *v823;
                      *(_OWORD *)((char *)v822 + 9) = *(long long *)((char *)v823 + 9);
                      *unint64_t v822 = v824;
                      unint64_t v825 = (v477 + 287) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v826 = ((unint64_t)v478 + 287) & 0xFFFFFFFFFFFFFFF8;
                      long long v827 = *(_OWORD *)v826;
                      *(unsigned char *)(v825 + 16) = *(unsigned char *)(v826 + 16);
                      *(_OWORD *)unint64_t v825 = v827;
                      unint64_t v828 = (void *)((v477 + 311) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v829 = ((unint64_t)v478 + 311) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v830 = *(void *)v829;
                      v829 += 15;
                      *unint64_t v828 = v830;
                      size_t v831 = (void *)(((unint64_t)v828 + 15) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v832 = *(void *)(v829 & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v833 = *(void *)((v829 & 0xFFFFFFFFFFFFFFF8) + 8);
                      sub_24D5203A8(v832, v833);
                      *size_t v831 = v832;
                      v831[1] = v833;
                      size_t v232 = v971;
                      unint64_t v230 = (void *)((unint64_t)&v1021[v991] & v1010);
                      if (!v493) {
                        goto LABEL_361;
                      }
LABEL_635:
                      unint64_t v834 = ((((v963
                               + ((((((((((v231 + v232 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      unsigned int v835 = (void *)(((unint64_t)v230 + v1062 + v834) & v1017);
                      unsigned int v836 = (const void *)(((unint64_t)v1026 + v1062 + v834) & v1017);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1049 + 48))(v836, 1, v229))
                      {
                        memcpy(v835, v836, v950);
                      }
                      else
                      {
                        (*(void (**)(void *, const void *, uint64_t))(v1049 + 16))(v835, v836, v229);
                        (*(void (**)(void *, void, uint64_t, uint64_t))(v1049 + 56))(v835, 0, 1, v229);
                      }
                      unsigned int v837 = (char *)(((unint64_t)v835 + v967) & v1055);
                      unsigned int v838 = (char *)(((unint64_t)v836 + v967) & v1055);
                      if (v985 == v1003)
                      {
                        int v839 = (*(uint64_t (**)(unint64_t))(v1002 + 48))(((unint64_t)v836 + v967) & v1055);
                      }
                      else
                      {
                        uint64_t v840 = (uint64_t *)((unint64_t)&v838[v1005] & 0xFFFFFFFFFFFFFFF8);
                        if (v960 <= 0x7FFFFFFE)
                        {
                          uint64_t v841 = *v840;
                          if ((unint64_t)*v840 >= 0xFFFFFFFF) {
                            LODWORD(v841) = -1;
                          }
                          size_t v842 = v1043;
                          if ((v841 + 1) >= 2) {
                            goto LABEL_647;
                          }
                          goto LABEL_649;
                        }
                        int v839 = (*(uint64_t (**)(unint64_t))(v983 + 48))(((unint64_t)v840 + v981) & v977);
                      }
                      size_t v842 = v1043;
                      if (v839)
                      {
LABEL_647:
                        size_t v843 = v842;
                        memcpy(v837, v838, v842);
LABEL_650:
                        *(void *)&v837[v843] = *(void *)&v838[v843];
                        uint64_t v852 = (void *)((unint64_t)&v837[v843 + 15] & 0xFFFFFFFFFFFFFFF8);
                        uint64_t v853 = (void *)((unint64_t)&v838[v843 + 15] & 0xFFFFFFFFFFFFFFF8);
                        *uint64_t v852 = *v853;
                        uint64_t v854 = *(void **)(((unint64_t)v853 + 15) & 0xFFFFFFFFFFFFFFF8);
                        *(void *)(((unint64_t)v852 + 15) & 0xFFFFFFFFFFFFFFF8) = v854;
                        char v256 = 1;
                        v3[v62] = 1;
                        id v855 = v854;
                        goto LABEL_684;
                      }
                      uint64_t v840 = (uint64_t *)((unint64_t)&v838[v1005] & 0xFFFFFFFFFFFFFFF8);
LABEL_649:
                      size_t v843 = v842;
                      (*(void (**)(char *, char *, uint64_t))(v1002 + 16))(v837, v838, v1001);
                      uint64_t v844 = (void *)((unint64_t)&v837[v1005] & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v844 = *v840;
                      unint64_t v845 = ((unint64_t)v844 + v981) & v977;
                      unint64_t v846 = ((unint64_t)v840 + v981) & v977;
                      uint64_t v847 = *(void (**)(unint64_t, unint64_t, uint64_t))(v983 + 16);
                      swift_bridgeObjectRetain();
                      v847(v845, v846, v982);
                      uint64_t v848 = (void *)((v965 + v845) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v849 = (void *)((v965 + v846) & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v848 = *v849;
                      uint64_t v850 = (void *)(((unint64_t)v848 + 15) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v851 = (void *)(((unint64_t)v849 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v850 = *v851;
                      v850[1] = v851[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      goto LABEL_650;
                    }
                    int v344 = (*(uint64_t (**)(size_t))(v1006 + 48))(v343);
                  }
                  unint64_t v227 = (void *)((unint64_t)&a2[v991] & v1010);
                  if (v344) {
                    goto LABEL_360;
                  }
LABEL_546:
                  unint64_t v261 = ((unint64_t)v227 + v1008) & v1015;
                  unint64_t v262 = (v996 + v261) & v1019;
                  goto LABEL_547;
                case 2u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1027 + 16))(v1021, a2, v1039);
                  unint64_t v233 = (void *)((unint64_t)&v1021[v956] & v1017);
                  uint64_t v234 = (const void *)((unint64_t)&a2[v956] & v1017);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48))(v234, 1, AssociatedTypeWitness))
                  {
                    memcpy(v233, v234, v950);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v67 + 16))(v233, v234, AssociatedTypeWitness);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v67 + 56))(v233, 0, 1, AssociatedTypeWitness);
                  }
                  unint64_t v271 = (char *)(((unint64_t)v233 + v967) & v1055);
                  unint64_t v272 = (char *)(((unint64_t)v234 + v967) & v1055);
                  if (v985 == v1003)
                  {
                    int v273 = (*(uint64_t (**)(char *))(v1002 + 48))(v272);
                  }
                  else
                  {
                    unint64_t v274 = (uint64_t *)((unint64_t)&v272[v1005] & 0xFFFFFFFFFFFFFFF8);
                    if (v960 <= 0x7FFFFFFE)
                    {
                      uint64_t v275 = *v274;
                      if ((unint64_t)*v274 >= 0xFFFFFFFF) {
                        LODWORD(v275) = -1;
                      }
                      size_t v276 = v1043;
                      if ((v275 + 1) >= 2) {
                        goto LABEL_462;
                      }
                      goto LABEL_464;
                    }
                    int v273 = (*(uint64_t (**)(unint64_t))(v983 + 48))(((unint64_t)v274 + v981) & v977);
                  }
                  size_t v276 = v1043;
                  if (v273)
                  {
LABEL_462:
                    size_t v296 = v276;
                    memcpy(v271, v272, v276);
LABEL_465:
                    uint64_t v305 = &v271[v296];
                    *uint64_t v305 = v272[v296];
                    unint64_t v306 = *(void **)&v272[v296 + 8];
                    *((void *)v305 + 1) = v306;
                    v1021[v62] = 2;
                    id v307 = v306;
                    goto LABEL_428;
                  }
                  unint64_t v274 = (uint64_t *)((unint64_t)&v272[v1005] & 0xFFFFFFFFFFFFFFF8);
LABEL_464:
                  size_t v296 = v276;
                  (*(void (**)(char *, char *, uint64_t))(v1002 + 16))(v271, v272, v1001);
                  uint64_t v297 = (void *)((unint64_t)&v271[v1005] & 0xFFFFFFFFFFFFFFF8);
                  void *v297 = *v274;
                  unint64_t v298 = ((unint64_t)v297 + v981) & v977;
                  unint64_t v299 = ((unint64_t)v274 + v981) & v977;
                  id v300 = *(void (**)(unint64_t, unint64_t, uint64_t))(v983 + 16);
                  swift_bridgeObjectRetain();
                  v300(v298, v299, v982);
                  uint64_t v301 = (void *)((v965 + v298) & 0xFFFFFFFFFFFFFFF8);
                  size_t v302 = (void *)((v965 + v299) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v301 = *v302;
                  uint64_t v303 = (void *)(((unint64_t)v301 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v304 = (void *)(((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8);
                  void *v303 = *v304;
                  v303[1] = v304[1];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  goto LABEL_465;
                case 3u:
                  unint64_t v235 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1027 + 16);
                  v235(v1021, a2, v1039);
                  unint64_t v236 = (void *)((unint64_t)&v1021[v991] & v1010);
                  int v237 = (void *)((unint64_t)&a2[v991] & v1010);
                  unint64_t v941 = v62;
                  if (v993 == v51)
                  {
                    int v238 = (*(uint64_t (**)(unint64_t))(v1027 + 48))((unint64_t)&a2[v991] & v1010);
LABEL_560:
                    int v237 = (void *)((unint64_t)&a2[v991] & v1010);
LABEL_561:
                    if (v238)
                    {
LABEL_562:
                      memcpy(v236, v237, __n);
                      unint64_t v500 = v941;
LABEL_563:
                      size_t v501 = v995;
                      goto LABEL_654;
                    }
                    unint64_t v263 = ((unint64_t)v237 + v1008) & v1015;
                    unint64_t v264 = (v996 + v263) & v1019;
                    goto LABEL_565;
                  }
                  unint64_t v263 = ((unint64_t)v237 + v1008) & v1015;
                  unint64_t v264 = (v996 + v263) & v1019;
                  if (v1012 == v51)
                  {
                    if (v984 == v1012)
                    {
                      int v238 = (*(uint64_t (**)(unint64_t))(v1000 + 48))((v996 + v263) & v1019);
                      goto LABEL_560;
                    }
                    unint64_t v334 = (unint64_t *)((v1004 + v264) & 0xFFFFFFFFFFFFFFF8);
                    if (v959 > 0x7FFFFFFE)
                    {
                      int v238 = (*(uint64_t (**)(unint64_t))(v979 + 48))(((unint64_t)v334 + v978) & v976);
                      goto LABEL_560;
                    }
                    unint64_t v335 = *v334;
                  }
                  else
                  {
                    size_t v288 = v1013 + v264;
                    if ((v951 & 0x80000000) == 0)
                    {
                      unint64_t v289 = *(void *)(v288 + 8);
                      if (v289 >= 0xFFFFFFFF) {
                        LODWORD(v289) = -1;
                      }
                      int v238 = v289 + 1;
                      goto LABEL_561;
                    }
                    size_t v345 = (v987 + ((v1029 + v288) & v986)) & v988;
                    if (v966 > 0x7FFFFFFD)
                    {
                      int v238 = (*(uint64_t (**)(size_t))(v1006 + 48))(v345);
                      goto LABEL_560;
                    }
                    unint64_t v335 = *(void *)(((v961 + ((v974 + v345) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v335 >= 0xFFFFFFFF) {
                    LODWORD(v335) = -1;
                  }
                  if ((v335 + 1) >= 2) {
                    goto LABEL_562;
                  }
LABEL_565:
                  unint64_t v1034 = v63;
                  v235((unsigned __int8 *)v236, (unsigned __int8 *)v237, v1039);
                  v235((unsigned __int8 *)(((unint64_t)v236 + v1008) & v1015), (unsigned __int8 *)v263, v1039);
                  unint64_t v502 = (v996 + (((unint64_t)v236 + v1008) & v1015)) & v1019;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v1000 + 16))(v502, v264, v999);
                  uint64_t v503 = (void *)((v1004 + v502) & 0xFFFFFFFFFFFFFFF8);
                  v504 = (void *)((v1004 + v264) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v503 = *v504;
                  unint64_t v505 = ((unint64_t)v503 + v978) & v976;
                  unint64_t v506 = ((unint64_t)v504 + v978) & v976;
                  v507 = *(void (**)(unint64_t, unint64_t, uint64_t))(v979 + 16);
                  swift_bridgeObjectRetain();
                  v507(v505, v506, v980);
                  unint64_t v508 = (void *)((v964 + v506) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v509 = (void *)((v964 + v505) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v509 = *v508;
                  unsigned int v510 = (void *)(((unint64_t)v509 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v511 = (void *)(((unint64_t)v508 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *unsigned int v510 = *v511;
                  v510[1] = v511[1];
                  unint64_t v512 = (void *)(v1013 + v502);
                  *unint64_t v512 = *(void *)(v1013 + v264);
                  v512[1] = *(void *)(v1013 + v264 + 8);
                  size_t v513 = (v1029 + v1013 + v502) & v986;
                  size_t v514 = (v1029 + v1013 + v264) & v986;
                  *(unsigned char *)size_t v513 = *(unsigned char *)v514;
                  uint64_t v515 = v513 | 4;
                  int v516 = *(_DWORD *)(v514 | 4);
                  *(unsigned char *)(v515 + 4) = *(unsigned char *)((v514 | 4) + 4);
                  *(_DWORD *)uint64_t v515 = v516;
                  *(_WORD *)(v513 + 10) = *(_WORD *)(v514 + 0xA);
                  size_t v1052 = v513;
                  size_t v517 = (v987 + v513) & v988;
                  size_t v1045 = v514;
                  size_t v518 = (v987 + v514) & v988;
                  unint64_t v519 = *(void (**)(size_t, size_t, uint64_t))(v1006 + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v519(v517, v518, v975);
                  size_t v520 = (v974 + v517) & v988;
                  size_t v521 = (v974 + v518) & v988;
                  v519(v520, v521, v975);
                  int v522 = (unsigned char *)(v520 + v971);
                  *int v522 = *(unsigned char *)(v521 + v971);
                  v522[1] = *(unsigned char *)(v521 + v971 + 1);
                  v522[2] = *(unsigned char *)(v521 + v971 + 2);
                  v522[3] = *(unsigned char *)(v521 + v971 + 3);
                  v522[4] = *(unsigned char *)(v521 + v971 + 4);
                  unint64_t v523 = (v520 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v524 = (v521 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v523 = *(void *)v524;
                  *(void *)(v523 + 8) = *(void *)(v524 + 8);
                  *(unsigned char *)(v523 + 16) = *(unsigned char *)(v524 + 16);
                  *(unsigned char *)(v523 + 17) = *(unsigned char *)(v524 + 17);
                  *(unsigned char *)(v523 + 18) = *(unsigned char *)(v524 + 18);
                  *(unsigned char *)(v523 + 19) = *(unsigned char *)(v524 + 19);
                  unint64_t v525 = (v523 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v526 = (v524 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v525 = *(void *)v526;
                  *(unsigned char *)(v525 + 8) = *(unsigned char *)(v526 + 8);
                  *(unsigned char *)(v525 + 9) = *(unsigned char *)(v526 + 9);
                  *(unsigned char *)(v525 + 10) = *(unsigned char *)(v526 + 10);
                  *(unsigned char *)(v525 + 11) = *(unsigned char *)(v526 + 11);
                  *(unsigned char *)(v525 + 12) = *(unsigned char *)(v526 + 12);
                  long long v527 = (void *)((v524 + 47) & 0xFFFFFFFFFFFFFFF8);
                  long long v528 = (void *)((v523 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *long long v528 = *v527;
                  unint64_t v529 = ((unint64_t)v528 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v530 = ((unint64_t)v527 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v529 = *(void *)v530;
                  *(unsigned char *)(v529 + 8) = *(unsigned char *)(v530 + 8);
                  *(unsigned char *)(v529 + 9) = *(unsigned char *)(v530 + 9);
                  long long v531 = (void *)((v969 + v529) & v988);
                  long long v532 = (const void *)((v969 + v530) & v988);
                  long long v533 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1006 + 48);
                  swift_bridgeObjectRetain();
                  if (v533(v532, 1, v975))
                  {
                    memcpy(v531, v532, v995);
                  }
                  else
                  {
                    v519((size_t)v531, (size_t)v532, v975);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v1006 + 56))(v531, 0, 1, v975);
                  }
                  unint64_t v500 = v941;
                  long long v534 = (void *)(((unint64_t)v531 + v970) & 0xFFFFFFFFFFFFFFF8);
                  id v535 = (void *)(((unint64_t)v532 + v970) & 0xFFFFFFFFFFFFFFF8);
                  void *v534 = *v535;
                  unint64_t v536 = ((unint64_t)v534 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v537 = ((unint64_t)v535 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v538 = *(void *)v537;
                  *(unsigned char *)(v536 + 8) = *(unsigned char *)(v537 + 8);
                  *(void *)unint64_t v536 = v538;
                  uint64_t v539 = (void *)(((unint64_t)v534 + 31) & 0xFFFFFFFFFFFFFFF8);
                  id v540 = (void *)(((unint64_t)v535 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v539 = *v540;
                  unint64_t v541 = ((unint64_t)v539 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v542 = (uint64_t *)(((unint64_t)v540 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v543 = v542[1];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if ((v543 & 0x3000000000000000) != 0)
                  {
                    *(_OWORD *)unint64_t v541 = *(_OWORD *)v542;
                  }
                  else
                  {
                    uint64_t v544 = *v542;
                    sub_24D3F9C18(*v542, v543);
                    *(void *)unint64_t v541 = v544;
                    *(void *)(v541 + 8) = v543;
                  }
                  unsigned int v545 = v966;
                  unint64_t v236 = (void *)((unint64_t)&v1021[v991] & v1010);
                  unint64_t v546 = (v541 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v547 = ((unint64_t)v542 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v548 = *(void *)v547;
                  *(unsigned char *)(v546 + 8) = *(unsigned char *)(v547 + 8);
                  *(void *)unint64_t v546 = v548;
                  *(unsigned char *)(v546 + 9) = *(unsigned char *)(v547 + 9);
                  unint64_t v549 = (v546 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v550 = (v547 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  int v551 = *(_DWORD *)v550;
                  *(unsigned char *)(v549 + 4) = *(unsigned char *)(v550 + 4);
                  *(_DWORD *)unint64_t v549 = v551;
                  v552 = (void *)((v546 + 25) & 0xFFFFFFFFFFFFFFF8);
                  v553 = (void *)((v547 + 25) & 0xFFFFFFFFFFFFFFF8);
                  void *v552 = *v553;
                  v552[1] = v553[1];
                  size_t v554 = v1052 + v1028;
                  v555 = (long long *)(v1045 + v1028);
                  unint64_t v556 = *(void *)(v1045 + v1028 + 16);
                  if (v556 >= 0xFFFFFFFF) {
                    LODWORD(v556) = -1;
                  }
                  int v557 = v556 - 1;
                  swift_bridgeObjectRetain();
                  if (v557 < 0)
                  {
                    *(void *)size_t v554 = *(void *)v555;
                    *(unsigned char *)(v554 + 8) = *((unsigned char *)v555 + 8);
                    *(unsigned char *)(v554 + 9) = *((unsigned char *)v555 + 9);
                    unint64_t v570 = (void *)*((void *)v555 + 2);
                    id v571 = v570;
                    *(void *)(v554 + 16) = v570;
                    v572 = (void *)*((void *)v555 + 3);
                    id v573 = v572;
                    *(void *)(v554 + 24) = v572;
                    *(unsigned char *)(v554 + 32) = *((unsigned char *)v555 + 32);
                    *(unsigned char *)(v554 + 33) = *((unsigned char *)v555 + 33);
                    *(unsigned char *)(v554 + 34) = *((unsigned char *)v555 + 34);
                    *(void *)(v554 + 40) = *((void *)v555 + 5);
                    *(void *)(v554 + 48) = *((void *)v555 + 6);
                    *(void *)(v554 + 56) = *((void *)v555 + 7);
                    *(void *)(v554 + 64) = *((void *)v555 + 8);
                    *(unsigned char *)(v554 + 72) = *((unsigned char *)v555 + 72);
                    *(void *)(v554 + 80) = *((void *)v555 + 10);
                    *(void *)(v554 + 88) = *((void *)v555 + 11);
                    v1053 = (void *)*((void *)v555 + 12);
                    *(void *)(v554 + 96) = v1053;
                    *(unsigned char *)(v554 + 104) = *((unsigned char *)v555 + 104);
                    *(unsigned char *)(v554 + 105) = *((unsigned char *)v555 + 105);
                    *(void *)(v554 + 112) = *((void *)v555 + 14);
                    *(void *)(v554 + 120) = *((void *)v555 + 15);
                    *(void *)(v554 + 128) = *((void *)v555 + 16);
                    *(void *)(v554 + 136) = *((void *)v555 + 17);
                    *(void *)(v554 + 144) = *((void *)v555 + 18);
                    *(void *)(v554 + 152) = *((void *)v555 + 19);
                    *(void *)(v554 + 160) = *((void *)v555 + 20);
                    *(void *)(v554 + 168) = *((void *)v555 + 21);
                    *(unsigned char *)(v554 + 176) = *((unsigned char *)v555 + 176);
                    *(void *)(v554 + 184) = *((void *)v555 + 23);
                    uint64_t v574 = *((void *)v555 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    id v575 = v1053;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v574)
                    {
                      *(void *)(v554 + 192) = v574;
                      *(void *)(v554 + 200) = *((void *)v555 + 25);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v554 + 192) = v555[12];
                    }
                    uint64_t v3 = v1021;
                    unint64_t v63 = v1034;
                    unsigned int v545 = v966;
                    unint64_t v500 = v941;
                    unint64_t v236 = (void *)((unint64_t)&v1021[v991] & v1010);
                    *(void *)(v554 + 208) = *((void *)v555 + 26);
                    *(void *)(v554 + 216) = *((void *)v555 + 27);
                    *(void *)(v554 + 224) = *((void *)v555 + 28);
                    *(void *)(v554 + 232) = *((void *)v555 + 29);
                    *(void *)(v554 + 240) = *((void *)v555 + 30);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v558 = *v555;
                    long long v559 = v555[1];
                    long long v560 = v555[3];
                    *(_OWORD *)(v554 + 32) = v555[2];
                    *(_OWORD *)(v554 + 48) = v560;
                    *(_OWORD *)size_t v554 = v558;
                    *(_OWORD *)(v554 + 16) = v559;
                    long long v561 = v555[4];
                    long long v562 = v555[5];
                    long long v563 = v555[7];
                    *(_OWORD *)(v554 + 96) = v555[6];
                    *(_OWORD *)(v554 + 112) = v563;
                    *(_OWORD *)(v554 + 64) = v561;
                    *(_OWORD *)(v554 + 80) = v562;
                    long long v564 = v555[8];
                    long long v565 = v555[9];
                    long long v566 = v555[11];
                    *(_OWORD *)(v554 + 160) = v555[10];
                    *(_OWORD *)(v554 + 176) = v566;
                    *(_OWORD *)(v554 + 128) = v564;
                    *(_OWORD *)(v554 + 144) = v565;
                    long long v567 = v555[12];
                    long long v568 = v555[13];
                    long long v569 = v555[14];
                    *(void *)(v554 + 240) = *((void *)v555 + 30);
                    *(_OWORD *)(v554 + 208) = v568;
                    *(_OWORD *)(v554 + 224) = v569;
                    *(_OWORD *)(v554 + 192) = v567;
                    unint64_t v63 = v1034;
                  }
                  unsigned int v856 = (_OWORD *)((v554 + 255) & 0xFFFFFFFFFFFFFFF8);
                  unsigned int v857 = (long long *)(((unint64_t)v555 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v858 = *v857;
                  *(_OWORD *)((char *)v856 + 9) = *(long long *)((char *)v857 + 9);
                  *unsigned int v856 = v858;
                  unint64_t v859 = (v554 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v860 = ((unint64_t)v555 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v861 = *(_OWORD *)v860;
                  *(unsigned char *)(v859 + 16) = *(unsigned char *)(v860 + 16);
                  *(_OWORD *)unint64_t v859 = v861;
                  size_t v862 = (void *)((v554 + 311) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v863 = ((unint64_t)v555 + 311) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v864 = *(void *)v863;
                  v863 += 15;
                  *size_t v862 = v864;
                  uint64_t v865 = (void *)(((unint64_t)v862 + 15) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v866 = *(void *)(v863 & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v867 = *(void *)((v863 & 0xFFFFFFFFFFFFFFF8) + 8);
                  sub_24D5203A8(v866, v867);
                  *uint64_t v865 = v866;
                  v865[1] = v867;
                  size_t v501 = v971;
                  if (!v545) {
                    goto LABEL_563;
                  }
LABEL_654:
                  unint64_t v868 = ((((v963
                           + ((((((((((v989 + v501 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                               + 19) & 0xFFFFFFFFFFFFFFF8)
                             + 25) & 0xFFFFFFFFFFFFFFF8)
                           + 327) & 0xFFFFFFFFFFFFFFF8)
                         + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 16;
                  uint64_t v869 = (void *)(((unint64_t)v236 + v868) & 0xFFFFFFFFFFFFFFF8);
                  unsigned int v870 = (void *)((((unint64_t)&a2[v991] & v1010) + v868) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v869 = *v870;
                  v869[1] = v870[1];
                  *(void *)(((unint64_t)v869 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v870
                                                                                                 + 23) & 0xFFFFFFFFFFFFFFF8);
                  v3[v500] = 3;
                  swift_bridgeObjectRetain();
LABEL_428:
                  char v256 = 1;
LABEL_684:
                  v3[v63] = v256;
                  return v3;
                case 4u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1027 + 16))(v1021, a2, v1039);
                  char v239 = 4;
                  goto LABEL_427;
                case 5u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1027 + 16))(v1021, a2, v1039);
                  char v239 = 5;
                  goto LABEL_427;
                case 6u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1027 + 16))(v1021, a2, v1039);
                  uint64_t v240 = (void *)((unint64_t)&v1021[v955] & v953);
                  uint64_t v241 = v50;
                  unint64_t v242 = (const void *)((unint64_t)&a2[v955] & v953);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v958 + 48))(v242, 1, v241))
                  {
                    memcpy(v240, v242, v947);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v958 + 16))(v240, v242, v241);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v958 + 56))(v240, 0, 1, v241);
                  }
                  char v239 = 6;
                  goto LABEL_427;
                case 7u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1027 + 16))(v1021, a2, v1039);
                  char v239 = 7;
LABEL_427:
                  v1021[v62] = v239;
                  goto LABEL_428;
                default:
                  unint64_t v940 = v62;
                  size_t v222 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v1027 + 16);
                  v222(v1021, a2, v1039);
                  uint64_t v223 = (void *)((unint64_t)&v1021[v991] & v1010);
                  uint64_t v224 = (void *)((unint64_t)&a2[v991] & v1010);
                  if (v993 == v51)
                  {
                    int v225 = (*(uint64_t (**)(unint64_t))(v1027 + 48))((unint64_t)&a2[v991] & v1010);
LABEL_527:
                    uint64_t v224 = (void *)((unint64_t)&a2[v991] & v1010);
LABEL_528:
                    if (v225)
                    {
LABEL_529:
                      memcpy(v223, v224, __n);
                      unint64_t v349 = v940;
                      goto LABEL_530;
                    }
                    unint64_t v259 = ((unint64_t)v224 + v1008) & v1015;
                    unint64_t v260 = (v996 + v259) & v1019;
LABEL_532:
                    unint64_t v1032 = v63;
                    v222((unsigned __int8 *)v223, (unsigned __int8 *)v224, v1039);
                    v222((unsigned __int8 *)(((unint64_t)v223 + v1008) & v1015), (unsigned __int8 *)v259, v1039);
                    unint64_t v351 = (v996 + (((unint64_t)v223 + v1008) & v1015)) & v1019;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v1000 + 16))(v351, v260, v999);
                    uint64_t v352 = (void *)((v1004 + v351) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v353 = (void *)((v1004 + v260) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v352 = *v353;
                    unint64_t v354 = ((unint64_t)v352 + v978) & v976;
                    unint64_t v355 = ((unint64_t)v353 + v978) & v976;
                    uint64_t v356 = *(void (**)(unint64_t, unint64_t, uint64_t))(v979 + 16);
                    swift_bridgeObjectRetain();
                    v356(v354, v355, v980);
                    unint64_t v357 = (void *)((v964 + v355) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v358 = (void *)((v964 + v354) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v358 = *v357;
                    int v359 = (void *)(((unint64_t)v358 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v360 = (void *)(((unint64_t)v357 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *int v359 = *v360;
                    v359[1] = v360[1];
                    int v361 = (void *)(v1013 + v351);
                    *int v361 = *(void *)(v1013 + v260);
                    v361[1] = *(void *)(v1013 + v260 + 8);
                    size_t v362 = (v1029 + v1013 + v351) & v986;
                    size_t v363 = (v1029 + v1013 + v260) & v986;
                    *(unsigned char *)size_t v362 = *(unsigned char *)v363;
                    uint64_t v364 = v362 | 4;
                    int v365 = *(_DWORD *)(v363 | 4);
                    *(unsigned char *)(v364 + 4) = *(unsigned char *)((v363 | 4) + 4);
                    *(_DWORD *)uint64_t v364 = v365;
                    *(_WORD *)(v362 + 10) = *(_WORD *)(v363 + 0xA);
                    size_t v1050 = v362;
                    size_t v366 = (v987 + v362) & v988;
                    size_t v1044 = v363;
                    size_t v367 = (v987 + v363) & v988;
                    long long v368 = *(void (**)(size_t, size_t, uint64_t))(v1006 + 16);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    v368(v366, v367, v975);
                    size_t v369 = (v974 + v366) & v988;
                    size_t v370 = (v974 + v367) & v988;
                    v368(v369, v370, v975);
                    long long v371 = (unsigned char *)(v369 + v971);
                    *long long v371 = *(unsigned char *)(v370 + v971);
                    v371[1] = *(unsigned char *)(v370 + v971 + 1);
                    v371[2] = *(unsigned char *)(v370 + v971 + 2);
                    v371[3] = *(unsigned char *)(v370 + v971 + 3);
                    v371[4] = *(unsigned char *)(v370 + v971 + 4);
                    unint64_t v372 = (v369 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v373 = (v370 + v971 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v372 = *(void *)v373;
                    *(void *)(v372 + 8) = *(void *)(v373 + 8);
                    *(unsigned char *)(v372 + 16) = *(unsigned char *)(v373 + 16);
                    *(unsigned char *)(v372 + 17) = *(unsigned char *)(v373 + 17);
                    *(unsigned char *)(v372 + 18) = *(unsigned char *)(v373 + 18);
                    *(unsigned char *)(v372 + 19) = *(unsigned char *)(v373 + 19);
                    unint64_t v374 = (v372 + 27) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v375 = (v373 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v374 = *(void *)v375;
                    *(unsigned char *)(v374 + 8) = *(unsigned char *)(v375 + 8);
                    *(unsigned char *)(v374 + 9) = *(unsigned char *)(v375 + 9);
                    *(unsigned char *)(v374 + 10) = *(unsigned char *)(v375 + 10);
                    *(unsigned char *)(v374 + 11) = *(unsigned char *)(v375 + 11);
                    *(unsigned char *)(v374 + 12) = *(unsigned char *)(v375 + 12);
                    id v376 = (void *)((v373 + 47) & 0xFFFFFFFFFFFFFFF8);
                    long long v377 = (void *)((v372 + 47) & 0xFFFFFFFFFFFFFFF8);
                    *long long v377 = *v376;
                    unint64_t v378 = ((unint64_t)v377 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v379 = ((unint64_t)v376 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v378 = *(void *)v379;
                    *(unsigned char *)(v378 + 8) = *(unsigned char *)(v379 + 8);
                    *(unsigned char *)(v378 + 9) = *(unsigned char *)(v379 + 9);
                    id v380 = (void *)((v969 + v378) & v988);
                    id v381 = (const void *)((v969 + v379) & v988);
                    size_t v382 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1006 + 48);
                    swift_bridgeObjectRetain();
                    if (v382(v381, 1, v975))
                    {
                      memcpy(v380, v381, v995);
                    }
                    else
                    {
                      v368((size_t)v380, (size_t)v381, v975);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v1006 + 56))(v380, 0, 1, v975);
                    }
                    unint64_t v349 = v940;
                    id v383 = (void *)(((unint64_t)v380 + v970) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v384 = (void *)(((unint64_t)v381 + v970) & 0xFFFFFFFFFFFFFFF8);
                    *id v383 = *v384;
                    unint64_t v385 = ((unint64_t)v383 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v386 = ((unint64_t)v384 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v387 = *(void *)v386;
                    *(unsigned char *)(v385 + 8) = *(unsigned char *)(v386 + 8);
                    *(void *)unint64_t v385 = v387;
                    unint64_t v388 = (void *)(((unint64_t)v383 + 31) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v389 = (void *)(((unint64_t)v384 + 31) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v388 = *v389;
                    unint64_t v390 = ((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v391 = (uint64_t *)(((unint64_t)v389 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v392 = v391[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if ((v392 & 0x3000000000000000) != 0)
                    {
                      *(_OWORD *)unint64_t v390 = *(_OWORD *)v391;
                    }
                    else
                    {
                      uint64_t v393 = *v391;
                      sub_24D3F9C18(*v391, v392);
                      *(void *)unint64_t v390 = v393;
                      *(void *)(v390 + 8) = v392;
                    }
                    unsigned int v394 = v966;
                    uint64_t v223 = (void *)((unint64_t)&v1021[v991] & v1010);
                    unint64_t v395 = (v390 + 19) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v396 = ((unint64_t)v391 + 19) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v397 = *(void *)v396;
                    *(unsigned char *)(v395 + 8) = *(unsigned char *)(v396 + 8);
                    *(void *)unint64_t v395 = v397;
                    *(unsigned char *)(v395 + 9) = *(unsigned char *)(v396 + 9);
                    unint64_t v398 = (v395 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v399 = (v396 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    int v400 = *(_DWORD *)v399;
                    *(unsigned char *)(v398 + 4) = *(unsigned char *)(v399 + 4);
                    *(_DWORD *)unint64_t v398 = v400;
                    uint64_t v401 = (void *)((v395 + 25) & 0xFFFFFFFFFFFFFFF8);
                    int v402 = (void *)((v396 + 25) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v401 = *v402;
                    v401[1] = v402[1];
                    size_t v403 = v1050 + v1028;
                    size_t v404 = (long long *)(v1044 + v1028);
                    unint64_t v405 = *(void *)(v1044 + v1028 + 16);
                    if (v405 >= 0xFFFFFFFF) {
                      LODWORD(v405) = -1;
                    }
                    int v406 = v405 - 1;
                    swift_bridgeObjectRetain();
                    if (v406 < 0)
                    {
                      *(void *)size_t v403 = *(void *)v404;
                      *(unsigned char *)(v403 + 8) = *((unsigned char *)v404 + 8);
                      *(unsigned char *)(v403 + 9) = *((unsigned char *)v404 + 9);
                      v419 = (void *)*((void *)v404 + 2);
                      id v420 = v419;
                      *(void *)(v403 + 16) = v419;
                      v421 = (void *)*((void *)v404 + 3);
                      id v422 = v421;
                      *(void *)(v403 + 24) = v421;
                      *(unsigned char *)(v403 + 32) = *((unsigned char *)v404 + 32);
                      *(unsigned char *)(v403 + 33) = *((unsigned char *)v404 + 33);
                      *(unsigned char *)(v403 + 34) = *((unsigned char *)v404 + 34);
                      *(void *)(v403 + 40) = *((void *)v404 + 5);
                      *(void *)(v403 + 48) = *((void *)v404 + 6);
                      *(void *)(v403 + 56) = *((void *)v404 + 7);
                      *(void *)(v403 + 64) = *((void *)v404 + 8);
                      *(unsigned char *)(v403 + 72) = *((unsigned char *)v404 + 72);
                      *(void *)(v403 + 80) = *((void *)v404 + 10);
                      *(void *)(v403 + 88) = *((void *)v404 + 11);
                      v1051 = (void *)*((void *)v404 + 12);
                      *(void *)(v403 + 96) = v1051;
                      *(unsigned char *)(v403 + 104) = *((unsigned char *)v404 + 104);
                      *(unsigned char *)(v403 + 105) = *((unsigned char *)v404 + 105);
                      *(void *)(v403 + 112) = *((void *)v404 + 14);
                      *(void *)(v403 + 120) = *((void *)v404 + 15);
                      *(void *)(v403 + 128) = *((void *)v404 + 16);
                      *(void *)(v403 + 136) = *((void *)v404 + 17);
                      *(void *)(v403 + 144) = *((void *)v404 + 18);
                      *(void *)(v403 + 152) = *((void *)v404 + 19);
                      *(void *)(v403 + 160) = *((void *)v404 + 20);
                      *(void *)(v403 + 168) = *((void *)v404 + 21);
                      *(unsigned char *)(v403 + 176) = *((unsigned char *)v404 + 176);
                      *(void *)(v403 + 184) = *((void *)v404 + 23);
                      uint64_t v423 = *((void *)v404 + 24);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      id v424 = v1051;
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      if (v423)
                      {
                        *(void *)(v403 + 192) = v423;
                        *(void *)(v403 + 200) = *((void *)v404 + 25);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                      else
                      {
                        *(_OWORD *)(v403 + 192) = v404[12];
                      }
                      uint64_t v3 = v1021;
                      unint64_t v63 = v1032;
                      unsigned int v394 = v966;
                      unint64_t v349 = v940;
                      uint64_t v223 = (void *)((unint64_t)&v1021[v991] & v1010);
                      *(void *)(v403 + 208) = *((void *)v404 + 26);
                      *(void *)(v403 + 216) = *((void *)v404 + 27);
                      *(void *)(v403 + 224) = *((void *)v404 + 28);
                      *(void *)(v403 + 232) = *((void *)v404 + 29);
                      *(void *)(v403 + 240) = *((void *)v404 + 30);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      long long v407 = *v404;
                      long long v408 = v404[1];
                      long long v409 = v404[3];
                      *(_OWORD *)(v403 + 32) = v404[2];
                      *(_OWORD *)(v403 + 48) = v409;
                      *(_OWORD *)size_t v403 = v407;
                      *(_OWORD *)(v403 + 16) = v408;
                      long long v410 = v404[4];
                      long long v411 = v404[5];
                      long long v412 = v404[7];
                      *(_OWORD *)(v403 + 96) = v404[6];
                      *(_OWORD *)(v403 + 112) = v412;
                      *(_OWORD *)(v403 + 64) = v410;
                      *(_OWORD *)(v403 + 80) = v411;
                      long long v413 = v404[8];
                      long long v414 = v404[9];
                      long long v415 = v404[11];
                      *(_OWORD *)(v403 + 160) = v404[10];
                      *(_OWORD *)(v403 + 176) = v415;
                      *(_OWORD *)(v403 + 128) = v413;
                      *(_OWORD *)(v403 + 144) = v414;
                      long long v416 = v404[12];
                      long long v417 = v404[13];
                      long long v418 = v404[14];
                      *(void *)(v403 + 240) = *((void *)v404 + 30);
                      *(_OWORD *)(v403 + 208) = v417;
                      *(_OWORD *)(v403 + 224) = v418;
                      *(_OWORD *)(v403 + 192) = v416;
                      unint64_t v63 = v1032;
                    }
                    v805 = (_OWORD *)((v403 + 255) & 0xFFFFFFFFFFFFFFF8);
                    v806 = (long long *)(((unint64_t)v404 + 255) & 0xFFFFFFFFFFFFFFF8);
                    long long v807 = *v806;
                    *(_OWORD *)((char *)v805 + 9) = *(long long *)((char *)v806 + 9);
                    _OWORD *v805 = v807;
                    unint64_t v808 = (v403 + 287) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v809 = ((unint64_t)v404 + 287) & 0xFFFFFFFFFFFFFFF8;
                    long long v810 = *(_OWORD *)v809;
                    *(unsigned char *)(v808 + 16) = *(unsigned char *)(v809 + 16);
                    *(_OWORD *)unint64_t v808 = v810;
                    v811 = (void *)((v403 + 311) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v812 = ((unint64_t)v404 + 311) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v813 = *(void *)v812;
                    v812 += 15;
                    void *v811 = v813;
                    unint64_t v814 = (void *)(((unint64_t)v811 + 15) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v815 = *(void *)(v812 & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v816 = *(void *)((v812 & 0xFFFFFFFFFFFFFFF8) + 8);
                    sub_24D5203A8(v815, v816);
                    *unint64_t v814 = v815;
                    v814[1] = v816;
                    size_t v350 = v971;
                    if (v394)
                    {
LABEL_631:
                      unint64_t v817 = ((((v963
                               + ((((((((((v989 + v350 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      long long v818 = (void *)(((unint64_t)v223 + v817) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v819 = (void *)((((unint64_t)&a2[v991] & v1010) + v817) & 0xFFFFFFFFFFFFFFF8);
                      *long long v818 = *v819;
                      unint64_t v820 = *(void **)(((unint64_t)v819 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *(void *)(((unint64_t)v818 + 15) & 0xFFFFFFFFFFFFFFF8) = v820;
                      v3[v349] = 0;
                      id v821 = v820;
                      goto LABEL_428;
                    }
LABEL_530:
                    size_t v350 = v995;
                    goto LABEL_631;
                  }
                  unint64_t v259 = ((unint64_t)v224 + v1008) & v1015;
                  unint64_t v260 = (v996 + v259) & v1019;
                  if (v1012 == v51)
                  {
                    if (v984 == v1012)
                    {
                      int v225 = (*(uint64_t (**)(unint64_t))(v1000 + 48))((v996 + v259) & v1019);
                      goto LABEL_527;
                    }
                    unint64_t v330 = (unint64_t *)((v1004 + v260) & 0xFFFFFFFFFFFFFFF8);
                    if (v959 > 0x7FFFFFFE)
                    {
                      int v225 = (*(uint64_t (**)(unint64_t))(v979 + 48))(((unint64_t)v330 + v978) & v976);
                      goto LABEL_527;
                    }
                    unint64_t v331 = *v330;
                  }
                  else
                  {
                    size_t v284 = v1013 + v260;
                    if ((v951 & 0x80000000) == 0)
                    {
                      unint64_t v285 = *(void *)(v284 + 8);
                      if (v285 >= 0xFFFFFFFF) {
                        LODWORD(v285) = -1;
                      }
                      int v225 = v285 + 1;
                      goto LABEL_528;
                    }
                    size_t v342 = (v987 + ((v1029 + v284) & v986)) & v988;
                    if (v966 > 0x7FFFFFFD)
                    {
                      int v225 = (*(uint64_t (**)(size_t))(v1006 + 48))(v342);
                      goto LABEL_527;
                    }
                    unint64_t v331 = *(void *)(((v961 + ((v974 + v342) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v331 >= 0xFFFFFFFF) {
                    LODWORD(v331) = -1;
                  }
                  if ((v331 + 1) >= 2) {
                    goto LABEL_529;
                  }
                  goto LABEL_532;
              }
            }
LABEL_315:
            (*(void (**)(size_t, uint64_t))(v1000 + 8))(v168, v999);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v979 + 8))(((unint64_t)v195 + v978) & v976, v980);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_316;
          }
          int v169 = (*(uint64_t (**)(unint64_t))(v979 + 48))(((unint64_t)v195 + v978) & v976);
        }
        if (v169) {
          goto LABEL_316;
        }
        size_t v195 = (uint64_t *)((v1004 + v168) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_315;
      case 3u:
        uint64_t v946 = *(void *)(v1025 - 8);
        unint64_t v170 = *(void (**)(unsigned __int8 *, uint64_t))(v67 + 8);
        v170(v1021, AssociatedTypeWitness);
        unint64_t v171 = (unint64_t)&v1021[v992] & v990;
        if (v1031 == v994)
        {
          unint64_t v172 = *(uint64_t (**)(unint64_t))(v67 + 48);
          unint64_t v173 = (unint64_t)&v1021[v992] & v990;
          goto LABEL_214;
        }
        unint64_t v175 = (v997 + v171) & v1017;
        unint64_t v176 = (v998 + v175) & v1055;
        if (v1003 == v994)
        {
          if (v985 == v1003)
          {
            unint64_t v172 = *(uint64_t (**)(unint64_t))(v1002 + 48);
            unint64_t v173 = (v998 + v175) & v1055;
            goto LABEL_214;
          }
          unint64_t v328 = (unint64_t *)((v1005 + v176) & 0xFFFFFFFFFFFFFFF8);
          if (v960 <= 0x7FFFFFFE)
          {
            unint64_t v329 = *v328;
            goto LABEL_702;
          }
          unint64_t v173 = ((unint64_t)v328 + v981) & v977;
          unint64_t v172 = *(uint64_t (**)(unint64_t))(v983 + 48);
        }
        else
        {
          unint64_t v282 = v1043 + v176;
          if ((v952 & 0x80000000) == 0)
          {
            unint64_t v283 = *(void *)(v282 + 8);
            if (v283 >= 0xFFFFFFFF) {
              LODWORD(v283) = -1;
            }
            if (v283 != -1) {
              goto LABEL_227;
            }
            goto LABEL_215;
          }
          unint64_t v173 = (v987 + ((v1029 + v282) & v986)) & v988;
          if (v966 <= 0x7FFFFFFD)
          {
            unint64_t v329 = *(void *)(((v961 + ((v974 + v173) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_702:
            if (v329 >= 0xFFFFFFFF) {
              LODWORD(v329) = -1;
            }
            if ((v329 + 1) >= 2) {
              goto LABEL_227;
            }
LABEL_216:
            v170((unsigned __int8 *)v171, AssociatedTypeWitness);
            v170((unsigned __int8 *)v175, AssociatedTypeWitness);
            (*(void (**)(unint64_t, uint64_t))(v1002 + 8))(v176, v1001);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v983 + 8))((v981 + ((v1005 + v176) & 0xFFFFFFFFFFFFFFF8)) & v977, v982);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v177 = (v1029 + v1043 + v176) & v986;
            unint64_t v178 = *(void (**)(unint64_t, uint64_t))(v1006 + 8);
            v178((v987 + v177) & v988, v975);
            unint64_t v179 = (v974 + ((v987 + v177) & v988)) & v988;
            v178(v179, v975);
            swift_bridgeObjectRelease();
            unint64_t v180 = (v969
                  + ((((((v961 + v179) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v988;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1006 + 48))(v180, 1, v975)) {
              v178(v180, v975);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v181 = (uint64_t *)((((((v970 + v180) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v182 = v181[1];
            if ((v182 & 0x3000000000000000) == 0) {
              sub_24D400DCC(*v181, v182);
            }
            swift_bridgeObjectRelease();
            unint64_t v183 = v1028 + v177;
            unint64_t v184 = *(void **)(v183 + 16);
            LODWORD(v185) = -1;
            if ((unint64_t)v184 < 0xFFFFFFFF) {
              uint64_t v185 = *(void *)(v183 + 16);
            }
            if ((int)v185 - 1 < 0)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v183 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_24D466534(*(void *)((((v183 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v183 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            goto LABEL_227;
          }
          unint64_t v172 = *(uint64_t (**)(unint64_t))(v1006 + 48);
        }
LABEL_214:
        int v174 = v172(v173);
        unint64_t v171 = (unint64_t)&v1021[v992] & v990;
        if (v174) {
          goto LABEL_227;
        }
LABEL_215:
        unint64_t v175 = (v997 + v171) & v1017;
        unint64_t v176 = (v998 + v175) & v1055;
        goto LABEL_216;
      case 4u:
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v67 + 8))(v1021, AssociatedTypeWitness);
        goto LABEL_318;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v67 + 8))(v1021, AssociatedTypeWitness);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v42 + 48))((unint64_t)&v1021[v957] & v954, 1, v1025))(*(void (**)(unint64_t, uint64_t))(v42 + 8))((unint64_t)&v1021[v957] & v954, v1025); {
        goto LABEL_318;
        }
      default:
        uint64_t v946 = *(void *)(v1025 - 8);
        unint64_t v133 = *(void (**)(unsigned __int8 *, uint64_t))(v67 + 8);
        v133(v1021, AssociatedTypeWitness);
        unint64_t v78 = (unint64_t)&v1021[v992] & v990;
        if (v1031 == v994)
        {
          unint64_t v134 = *(uint64_t (**)(unint64_t))(v67 + 48);
          unint64_t v135 = (unint64_t)&v1021[v992] & v990;
          goto LABEL_174;
        }
        unint64_t v137 = (v997 + v78) & v1017;
        unint64_t v138 = (v998 + v137) & v1055;
        if (v1003 == v994)
        {
          if (v985 == v1003)
          {
            unint64_t v134 = *(uint64_t (**)(unint64_t))(v1002 + 48);
            unint64_t v135 = (v998 + v137) & v1055;
            goto LABEL_174;
          }
          uint64_t v324 = (unint64_t *)((v1005 + v138) & 0xFFFFFFFFFFFFFFF8);
          if (v960 <= 0x7FFFFFFE)
          {
            unint64_t v325 = *v324;
            goto LABEL_692;
          }
          unint64_t v135 = ((unint64_t)v324 + v981) & v977;
          unint64_t v134 = *(uint64_t (**)(unint64_t))(v983 + 48);
        }
        else
        {
          unint64_t v204 = v1043 + v138;
          if ((v952 & 0x80000000) == 0)
          {
            unint64_t v205 = *(void *)(v204 + 8);
            if (v205 >= 0xFFFFFFFF) {
              LODWORD(v205) = -1;
            }
            if (v205 == -1)
            {
LABEL_175:
              unint64_t v137 = (v997 + v78) & v1017;
              unint64_t v138 = (v998 + v137) & v1055;
LABEL_176:
              unint64_t v937 = v78;
              v133((unsigned __int8 *)v78, AssociatedTypeWitness);
              v133((unsigned __int8 *)v137, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v1002 + 8))(v138, v1001);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v983 + 8))((v981 + ((v1005 + v138) & 0xFFFFFFFFFFFFFFF8)) & v977, v982);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v139 = (v1029 + v1043 + v138) & v986;
              unint64_t v140 = *(void (**)(unint64_t, uint64_t))(v1006 + 8);
              v140((v987 + v139) & v988, v975);
              unint64_t v141 = (v974 + ((v987 + v139) & v988)) & v988;
              v140(v141, v975);
              swift_bridgeObjectRelease();
              unint64_t v142 = (v969
                    + ((((((v961 + v141) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v988;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v1006 + 48))(v142, 1, v975)) {
                v140(v142, v975);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v143 = (uint64_t *)((((((v970 + v142) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v144 = v143[1];
              if ((v144 & 0x3000000000000000) == 0) {
                sub_24D400DCC(*v143, v144);
              }
              swift_bridgeObjectRelease();
              unint64_t v145 = v1028 + v139;
              unint64_t v146 = *(void **)(v145 + 16);
              LODWORD(v147) = -1;
              if ((unint64_t)v146 < 0xFFFFFFFF) {
                uint64_t v147 = *(void *)(v145 + 16);
              }
              if ((int)v147 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v145 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_24D466534(*(void *)((((v145 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v145 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              unint64_t v78 = v937;
            }
LABEL_187:
            unint64_t v93 = ((((v962 + v1028 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
            goto LABEL_188;
          }
          unint64_t v135 = (v987 + ((v1029 + v204) & v986)) & v988;
          if (v966 <= 0x7FFFFFFD)
          {
            unint64_t v325 = *(void *)(((v961 + ((v974 + v135) & v988)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_692:
            if (v325 >= 0xFFFFFFFF) {
              LODWORD(v325) = -1;
            }
            if ((v325 + 1) < 2) {
              goto LABEL_176;
            }
            goto LABEL_187;
          }
          unint64_t v134 = *(uint64_t (**)(unint64_t))(v1006 + 48);
        }
LABEL_174:
        int v136 = v134(v135);
        unint64_t v78 = (unint64_t)&v1021[v992] & v990;
        if (v136) {
          goto LABEL_187;
        }
        goto LABEL_175;
    }
  }
  return v3;
}

uint64_t sub_24D9E3DBC(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v795 = *(void *)(v4 + 64);
  uint64_t v797 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v767 = v3;
  uint64_t v724 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v724 - 8);
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v711 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v711 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v6 | v8 | 7;
  uint64_t v733 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v733 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v11 | 7;
  uint64_t v13 = v9 | v797 | v11;
  uint64_t v745 = v4;
  uint64_t v725 = v5;
  uint64_t v712 = v7;
  unsigned int v14 = *(_DWORD *)(v7 + 84);
  unsigned int v683 = v14;
  unsigned int v714 = *(_DWORD *)(v5 + 84);
  if (v714 > v14) {
    unsigned int v14 = *(_DWORD *)(v5 + 84);
  }
  unsigned int v700 = v14;
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  unsigned int v785 = *(_DWORD *)(v4 + 84);
  unsigned int v727 = v14;
  if (v14 <= v785) {
    unsigned int v14 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v734 = *(void *)(v733 - 8);
  unsigned int v15 = *(_DWORD *)(v10 + 84);
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = v15;
  }
  unsigned int v773 = v16;
  if (v14 <= v16) {
    unsigned int v14 = v16;
  }
  unsigned int v685 = v14;
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  unsigned int v721 = v14;
  unsigned int v715 = v15;
  uint64_t v729 = v795 + v797;
  uint64_t v760 = v9;
  uint64_t v731 = v795 + v9;
  uint64_t v728 = *(void *)(v5 + 64) + 7;
  uint64_t v710 = v8 + 8;
  uint64_t v703 = *(void *)(v7 + 64) + 7;
  size_t v792 = ((((v703 + ((v8 + 8 + (v728 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v754 = v11 | 7;
  uint64_t v784 = v12 + 16;
  uint64_t v716 = v11 + 12;
  size_t v17 = *(void *)(*(void *)(v733 - 8) + 64);
  size_t v708 = v17 + v11;
  size_t v680 = v17 + 12;
  unint64_t v18 = (v11
       + 10
       + ((((((v17 + 12 + ((v17 + v11 + ((v11 + 12) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
  size_t v735 = v17;
  if (!v15) {
    ++v17;
  }
  size_t v736 = v17;
  unint64_t v737 = v18;
  size_t v706 = v17 + 7;
  uint64_t v707 = v11 + 10;
  unint64_t v783 = ((((((((((v17 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v717 = (v12 + 16 + v792 + ((v795 + v9 + ((v795 + v797) & ~v797)) & ~v9)) & ~v12;
  uint64_t v738 = v9 | v797 | v11;
  unint64_t v719 = v13 + v795;
  unint64_t v702 = ((((v717 + v783 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v19 = v702 + ((v13 + v795) & ~v13);
  unint64_t v750 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = *(void *)(a3 + 24);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v747 = v21;
  unint64_t v748 = (v19 + v23) & ~v23;
  uint64_t v744 = v22;
  unsigned int v24 = *(_DWORD *)(v22 + 84);
  unint64_t v25 = *(void *)(v22 + 64);
  if (v24) {
    size_t v26 = *(void *)(v22 + 64);
  }
  else {
    size_t v26 = v25 + 1;
  }
  size_t v777 = v26;
  uint64_t v722 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v722 - 8);
  int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v709 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v709 - 8);
  uint64_t v30 = v27;
  uint64_t v31 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v32 = v28 | v31 | 7;
  uint64_t v723 = v27;
  unsigned int v33 = *(_DWORD *)(v29 + 84);
  unsigned int v682 = v33;
  unsigned int v713 = *(_DWORD *)(v27 + 84);
  if (v713 > v33) {
    unsigned int v33 = *(_DWORD *)(v27 + 84);
  }
  unsigned int v699 = v33;
  if (v33 <= 0x7FFFFFFE) {
    unsigned int v34 = 2147483646;
  }
  else {
    unsigned int v34 = v33;
  }
  uint64_t v732 = *(void *)(v30 + 64) + 7;
  uint64_t v35 = v31 + 8;
  uint64_t v36 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
  unint64_t v37 = ((((v36 + ((v31 + 8 + (v732 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v38 = ((((((v777 + v32 + v748) & ~v32) + v37 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v687 = v795 + v23;
  size_t v705 = v777 + v32;
  uint64_t v39 = *(void *)(v767 - 8);
  uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
  uint64_t v686 = v795 + v40;
  size_t v41 = *(void *)(v39 + 64);
  if (!*(_DWORD *)(v39 + 84)) {
    ++v41;
  }
  size_t v681 = v41;
  unint64_t v42 = ((v795 + v40) & ~v40) + v41;
  unint64_t v43 = ((v750 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v795 > v43) {
    unint64_t v43 = v795;
  }
  if (v38 <= v37 + ((v777 + v32 + ((v795 + v23) & ~v23)) & ~v32) + 16) {
    unint64_t v38 = v37 + ((v777 + v32 + ((v795 + v23) & ~v23)) & ~v32) + 16;
  }
  if (((v750 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v42) {
    unint64_t v42 = ((v750 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v43 > v38) {
    unint64_t v38 = v43;
  }
  if (v38 <= v42) {
    unint64_t v44 = v42;
  }
  else {
    unint64_t v44 = v38;
  }
  uint64_t v45 = v11;
  uint64_t v46 = v23 | v11 | v32;
  unsigned int v726 = v34;
  unsigned int v720 = v24;
  if (v34 <= v24) {
    unsigned int v47 = v24;
  }
  else {
    unsigned int v47 = v34;
  }
  if (v47 <= v773) {
    unsigned int v47 = v773;
  }
  unsigned int v684 = v47;
  if (v47 <= 0x7FFFFFFF) {
    unsigned int v47 = 0x7FFFFFFF;
  }
  unsigned int v718 = v47;
  uint64_t v774 = v23;
  uint64_t v751 = v25 + v23;
  unint64_t v48 = (v25 + v23) & ~v23;
  if (v785) {
    size_t v49 = v795;
  }
  else {
    size_t v49 = v795 + 1;
  }
  uint64_t v692 = v20;
  uint64_t v50 = *(void *)(v20 - 8);
  uint64_t v51 = *(unsigned __int8 *)(v50 + 80);
  uint64_t v749 = v25 + v32;
  unint64_t v52 = (v784 + v37 + ((v25 + v32 + v48) & ~v32)) & ~v754;
  unint64_t v53 = v46 + v25;
  unint64_t v701 = ((((v52 + v783 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v54 = v701 + ((v46 + v25) & ~v46);
  size_t __n = v49;
  uint64_t v55 = v25 + v797;
  size_t v704 = v49 + v760;
  if (*(_DWORD *)(v50 + 84)) {
    size_t v56 = *(void *)(*(void *)(v20 - 8) + 64);
  }
  else {
    size_t v56 = *(void *)(*(void *)(v20 - 8) + 64) + 1;
  }
  if (v25 <= ((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v57 = ((v54 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v57 = v25;
  }
  if (((((((v49 + v760 + ((v54 + v797) & ~v797)) & ~v760) + v792 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 8 <= ((v49 + v760 + ((v25 + v797) & ~v797)) & ~v760) + v792 + 16)
    unint64_t v58 = ((v49 + v760 + ((v25 + v797) & ~v797)) & ~v760) + v792 + 16;
  else {
    unint64_t v58 = ((((((v49 + v760 + ((v54 + v797) & ~v797)) & ~v760) + v792 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
  }
        + 8;
  unint64_t v59 = ((v54 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v60 = v25 + v51;
  if (v59 <= (v60 & ~v51) + v56) {
    unint64_t v59 = (v60 & ~v51) + v56;
  }
  if (v57 <= v58) {
    unint64_t v57 = v58;
  }
  if (v57 <= v59) {
    unint64_t v61 = v59;
  }
  else {
    unint64_t v61 = v57;
  }
  unint64_t v62 = v44;
  if (v61 + 1 <= v44 + 1) {
    unint64_t v63 = v44 + 1;
  }
  else {
    unint64_t v63 = v61 + 1;
  }
  unsigned int v64 = a2[v63];
  unsigned int v65 = v64 - 2;
  if (v64 >= 2)
  {
    if (v63 <= 3) {
      uint64_t v66 = v63;
    }
    else {
      uint64_t v66 = 4;
    }
    switch(v66)
    {
      case 1:
        int v67 = *a2;
        if (v63 < 4) {
          goto LABEL_78;
        }
        goto LABEL_79;
      case 2:
        int v67 = *(unsigned __int16 *)a2;
        if (v63 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_78;
      case 3:
        int v67 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v63 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_78;
      case 4:
        int v67 = *(_DWORD *)a2;
        if (v63 < 4) {
LABEL_78:
        }
          v67 |= v65 << (8 * v63);
LABEL_79:
        unsigned int v64 = v67 + 2;
        break;
      default:
        break;
    }
  }
  unint64_t v796 = v63;
  uint64_t v753 = ~v797;
  uint64_t v68 = ~v760;
  uint64_t v69 = ~v8;
  uint64_t v761 = ~v754;
  uint64_t v70 = ~v45;
  uint64_t v764 = ~v774;
  uint64_t v71 = ~v32;
  uint64_t v72 = ~v31;
  if (v64 != 1)
  {
    unint64_t v78 = v62;
    unsigned int v79 = a2[v62];
    unsigned int v80 = v79 - 8;
    if (v79 < 8)
    {
      uint64_t v82 = a1;
      uint64_t v83 = v738;
    }
    else
    {
      if (v62 <= 3) {
        uint64_t v81 = v62;
      }
      else {
        uint64_t v81 = 4;
      }
      uint64_t v82 = a1;
      uint64_t v83 = v738;
      switch(v81)
      {
        case 1:
          int v84 = *a2;
          if (v62 < 4) {
            goto LABEL_120;
          }
          goto LABEL_122;
        case 2:
          int v84 = *(unsigned __int16 *)a2;
          if (v62 >= 4) {
            goto LABEL_122;
          }
          goto LABEL_120;
        case 3:
          int v84 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v62 < 4) {
            goto LABEL_120;
          }
          goto LABEL_122;
        case 4:
          int v84 = *(_DWORD *)a2;
          if (v62 < 4) {
LABEL_120:
          }
            unsigned int v79 = (v84 | (v80 << (8 * v62))) + 8;
          else {
LABEL_122:
          }
            unsigned int v79 = v84 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v119 = ~v83;
    uint64_t v120 = ~v40;
    switch(v79)
    {
      case 1u:
        uint64_t v752 = v71;
        uint64_t v742 = v72;
        uint64_t v690 = v69;
        uint64_t v758 = v35;
        uint64_t v696 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
        uint64_t v771 = *(void *)(v709 - 8);
        size_t v677 = v37;
        unint64_t v800 = v78;
        size_t v124 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32);
        v124(v82, a2, AssociatedTypeWitness);
        unint64_t v766 = (void *)((v719 + v82) & v119);
        int v125 = (void *)((unint64_t)&a2[v719] & v119);
        if (v785 == v721)
        {
          int v126 = (*(uint64_t (**)(void *))(v745 + 48))(v125);
LABEL_300:
          uint64_t v148 = v68;
LABEL_301:
          if (v126)
          {
LABEL_302:
            uint64_t v515 = v766;
            memcpy(v766, v125, v702);
            size_t v517 = v736;
            unint64_t v516 = v737;
            uint64_t v518 = v717;
            goto LABEL_303;
          }
          unint64_t v147 = ((unint64_t)v125 + v729) & v753;
          unint64_t v149 = (v731 + v147) & v148;
LABEL_305:
          long long v790 = v125;
          uint64_t v520 = v148;
          v124((uint64_t)v766, (unsigned __int8 *)v125, AssociatedTypeWitness);
          unint64_t v521 = ((unint64_t)v766 + v729) & v753;
          v124(v521, (unsigned __int8 *)v147, AssociatedTypeWitness);
          unint64_t v522 = (v731 + v521) & v520;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 32))(v522, v149, v724);
          unint64_t v523 = (void *)((v728 + v522) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v524 = (void *)((v728 + v149) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v523 = *v524;
          unint64_t v525 = ((unint64_t)v523 + v710) & v690;
          unint64_t v526 = ((unint64_t)v524 + v710) & v690;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v525, v526, v711);
          long long v527 = (void *)((v703 + v525) & 0xFFFFFFFFFFFFFFF8);
          long long v528 = (void *)((v703 + v526) & 0xFFFFFFFFFFFFFFF8);
          *long long v527 = *v528;
          *(_OWORD *)(((unint64_t)v527 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v528 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v792 + v522) = *(_OWORD *)(v792 + v149);
          size_t v529 = (v784 + v792 + v522) & v761;
          size_t v530 = (v784 + v792 + v149) & v761;
          *(unsigned char *)size_t v529 = *(unsigned char *)v530;
          uint64_t v531 = v529 | 4;
          int v532 = *(_DWORD *)(v530 | 4);
          *(unsigned char *)(v531 + 4) = *(unsigned char *)((v530 | 4) + 4);
          *(_DWORD *)uint64_t v531 = v532;
          *(_WORD *)(v529 + 10) = *(_WORD *)(v530 + 0xA);
          long long v533 = *(void (**)(size_t, size_t, uint64_t))(v734 + 32);
          v533((v716 + v529) & v70, (v716 + v530) & v70, v733);
          size_t v534 = (v708 + ((v716 + v529) & v70)) & v70;
          size_t v535 = (v708 + ((v716 + v530) & v70)) & v70;
          v533(v534, v535, v733);
          unint64_t v536 = (unsigned char *)(v534 + v735);
          unsigned char *v536 = *(unsigned char *)(v535 + v735);
          v536[1] = *(unsigned char *)(v535 + v735 + 1);
          v536[2] = *(unsigned char *)(v535 + v735 + 2);
          v536[3] = *(unsigned char *)(v535 + v735 + 3);
          v536[4] = *(unsigned char *)(v535 + v735 + 4);
          unint64_t v537 = (v534 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v538 = (v535 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v537 = *(_OWORD *)v538;
          *(unsigned char *)(v537 + 16) = *(unsigned char *)(v538 + 16);
          *(unsigned char *)(v537 + 17) = *(unsigned char *)(v538 + 17);
          *(unsigned char *)(v537 + 18) = *(unsigned char *)(v538 + 18);
          *(unsigned char *)(v537 + 19) = *(unsigned char *)(v538 + 19);
          unint64_t v539 = (v537 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v540 = (v538 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v539 = *(void *)v540;
          *(unsigned char *)(v539 + 8) = *(unsigned char *)(v540 + 8);
          *(unsigned char *)(v539 + 9) = *(unsigned char *)(v540 + 9);
          *(unsigned char *)(v539 + 10) = *(unsigned char *)(v540 + 10);
          *(unsigned char *)(v539 + 11) = *(unsigned char *)(v540 + 11);
          *(unsigned char *)(v539 + 12) = *(unsigned char *)(v540 + 12);
          unint64_t v541 = (void *)((v538 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v542 = (void *)((v537 + 47) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v542 = *v541;
          unint64_t v543 = ((unint64_t)v542 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v544 = ((unint64_t)v541 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v543 = *(void *)v544;
          *(unsigned char *)(v543 + 8) = *(unsigned char *)(v544 + 8);
          *(unsigned char *)(v543 + 9) = *(unsigned char *)(v544 + 9);
          unsigned int v545 = (void *)((v707 + v543) & v70);
          unint64_t v546 = (const void *)((v707 + v544) & v70);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v734 + 48))(v546, 1, v733))
          {
            size_t v517 = v736;
            memcpy(v545, v546, v736);
          }
          else
          {
            v533((size_t)v545, (size_t)v546, v733);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v734 + 56))(v545, 0, 1, v733);
            size_t v517 = v736;
          }
          unint64_t v516 = v737;
          size_t v519 = v735;
          uint64_t v518 = v717;
          uint64_t v515 = v766;
          unint64_t v547 = (void *)(((unint64_t)v545 + v706) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v548 = (void *)(((unint64_t)v546 + v706) & 0xFFFFFFFFFFFFFFF8);
          void *v547 = *v548;
          unint64_t v549 = ((unint64_t)v547 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v550 = ((unint64_t)v548 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v551 = *(void *)v550;
          *(unsigned char *)(v549 + 8) = *(unsigned char *)(v550 + 8);
          *(void *)unint64_t v549 = v551;
          v552 = (void *)(((unint64_t)v547 + 31) & 0xFFFFFFFFFFFFFFF8);
          v553 = (void *)(((unint64_t)v548 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v552 = *v553;
          size_t v554 = (_OWORD *)(((unint64_t)v552 + 15) & 0xFFFFFFFFFFFFFFF8);
          v555 = (_OWORD *)(((unint64_t)v553 + 15) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v554 = *v555;
          unint64_t v556 = ((unint64_t)v554 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v557 = ((unint64_t)v555 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v558 = *(void *)v557;
          *(unsigned char *)(v556 + 8) = *(unsigned char *)(v557 + 8);
          *(void *)unint64_t v556 = v558;
          *(unsigned char *)(v556 + 9) = *(unsigned char *)(v557 + 9);
          unint64_t v559 = (v556 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v560 = (v557 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v551) = *(_DWORD *)v560;
          *(unsigned char *)(v559 + 4) = *(unsigned char *)(v560 + 4);
          *(_DWORD *)unint64_t v559 = v551;
          *(_OWORD *)((v556 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v557 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v561 = v783 + v529;
          long long v562 = *(_OWORD *)(v783 + v530 + 112);
          long long v564 = *(_OWORD *)(v783 + v530 + 64);
          long long v563 = *(_OWORD *)(v783 + v530 + 80);
          *(_OWORD *)(v561 + 96) = *(_OWORD *)(v783 + v530 + 96);
          *(_OWORD *)(v561 + 112) = v562;
          *(_OWORD *)(v561 + 64) = v564;
          *(_OWORD *)(v561 + 80) = v563;
          long long v565 = *(_OWORD *)(v783 + v530 + 176);
          long long v567 = *(_OWORD *)(v783 + v530 + 128);
          long long v566 = *(_OWORD *)(v783 + v530 + 144);
          *(_OWORD *)(v561 + 160) = *(_OWORD *)(v783 + v530 + 160);
          *(_OWORD *)(v561 + 176) = v565;
          *(_OWORD *)(v561 + 128) = v567;
          *(_OWORD *)(v561 + 144) = v566;
          long long v569 = *(_OWORD *)(v783 + v530 + 208);
          long long v568 = *(_OWORD *)(v783 + v530 + 224);
          long long v570 = *(_OWORD *)(v783 + v530 + 192);
          *(void *)(v561 + 240) = *(void *)(v783 + v530 + 240);
          *(_OWORD *)(v561 + 208) = v569;
          *(_OWORD *)(v561 + 224) = v568;
          *(_OWORD *)(v561 + 192) = v570;
          long long v571 = *(_OWORD *)(v783 + v530);
          long long v572 = *(_OWORD *)(v783 + v530 + 16);
          long long v573 = *(_OWORD *)(v783 + v530 + 48);
          *(_OWORD *)(v561 + 32) = *(_OWORD *)(v783 + v530 + 32);
          *(_OWORD *)(v561 + 48) = v573;
          *(_OWORD *)unint64_t v561 = v571;
          *(_OWORD *)(v561 + 16) = v572;
          uint64_t v574 = (_OWORD *)((v783 + v529 + 255) & 0xFFFFFFFFFFFFFFF8);
          id v575 = (long long *)((v783 + v530 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v576 = *v575;
          *(_OWORD *)((char *)v574 + 9) = *(long long *)((char *)v575 + 9);
          *uint64_t v574 = v576;
          unint64_t v577 = (v783 + v529 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v578 = (v783 + v530 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v579 = *(_OWORD *)v578;
          *(unsigned char *)(v577 + 16) = *(unsigned char *)(v578 + 16);
          *(_OWORD *)unint64_t v577 = v579;
          unint64_t v580 = (void *)((v783 + v529 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v581 = (void *)((v783 + v530 + 311) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v580 = *v581;
          *(_OWORD *)(((unint64_t)v580 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v581 + 15) & 0xFFFFFFFFFFFFFFF8);
          int v125 = v790;
          if (v715)
          {
LABEL_309:
            unint64_t v582 = ((((v518
                     + ((((((((((v516 + v519 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            v583 = (void *)(((unint64_t)v515 + v774 + v582) & v764);
            v584 = (const void *)(((unint64_t)v125 + v774 + v582) & v764);
            unint64_t v78 = v800;
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v744 + 48))(v584, 1, v747))
            {
              memcpy(v583, v584, v777);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v744 + 32))(v583, v584, v747);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v744 + 56))(v583, 0, 1, v747);
            }
            uint64_t v585 = v732;
            v586 = (char *)(((unint64_t)v583 + v705) & v752);
            unint64_t v587 = (char *)(((unint64_t)v584 + v705) & v752);
            if (v713 == v726)
            {
              int v588 = (*(uint64_t (**)(char *))(v723 + 48))(v587);
            }
            else
            {
              unint64_t v589 = (uint64_t *)((unint64_t)&v587[v732] & 0xFFFFFFFFFFFFFFF8);
              if (v699 <= 0x7FFFFFFE)
              {
                uint64_t v590 = *v589;
                if ((unint64_t)*v589 >= 0xFFFFFFFF) {
                  LODWORD(v590) = -1;
                }
                size_t v591 = v677;
                if ((v590 + 1) >= 2) {
                  goto LABEL_321;
                }
                goto LABEL_323;
              }
              int v588 = (*(uint64_t (**)(unint64_t))(v771 + 48))(((unint64_t)v589 + v758) & v742);
            }
            size_t v591 = v677;
            uint64_t v585 = v732;
            if (v588)
            {
LABEL_321:
              memcpy(v586, v587, v591);
LABEL_324:
              char v114 = 0;
              *(void *)&v586[v591] = *(void *)&v587[v591];
              unint64_t v598 = (void *)((unint64_t)&v586[v591 + 15] & 0xFFFFFFFFFFFFFFF8);
              unint64_t v599 = (void *)((unint64_t)&v587[v591 + 15] & 0xFFFFFFFFFFFFFFF8);
              *unint64_t v598 = *v599;
              *(void *)(((unint64_t)v598 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v599
                                                                                             + 15) & 0xFFFFFFFFFFFFFFF8);
              char v115 = 1;
              goto LABEL_336;
            }
            unint64_t v589 = (uint64_t *)((unint64_t)&v587[v732] & 0xFFFFFFFFFFFFFFF8);
LABEL_323:
            uint64_t v592 = v585;
            (*(void (**)(char *, char *, uint64_t))(v723 + 32))(v586, v587, v722);
            unint64_t v593 = (void *)((unint64_t)&v586[v592] & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v593 = *v589;
            unint64_t v594 = ((unint64_t)v593 + v758) & v742;
            unint64_t v595 = ((unint64_t)v589 + v758) & v742;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v771 + 32))(v594, v595, v709);
            unint64_t v596 = v696 + v594;
            unint64_t v78 = v800;
            v596 &= 0xFFFFFFFFFFFFFFF8;
            unint64_t v597 = (void *)((v696 + v595) & 0xFFFFFFFFFFFFFFF8);
            *(void *)unint64_t v596 = *v597;
            *(_OWORD *)((v596 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v597 + 15) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_324;
          }
LABEL_303:
          size_t v519 = v517;
          goto LABEL_309;
        }
        unint64_t v147 = ((unint64_t)v125 + v729) & v753;
        uint64_t v148 = v68;
        unint64_t v149 = (v731 + v147) & v68;
        if (v727 == v721)
        {
          if (v714 == v727)
          {
            int v126 = (*(uint64_t (**)(unint64_t))(v725 + 48))((v731 + v147) & v68);
            goto LABEL_300;
          }
          unsigned int v208 = (unint64_t *)((v728 + v149) & 0xFFFFFFFFFFFFFFF8);
          if (v700 > 0x7FFFFFFE)
          {
            int v126 = (*(uint64_t (**)(unint64_t))(v712 + 48))(((unint64_t)v208 + v710) & v690);
            goto LABEL_300;
          }
          unint64_t v209 = *v208;
        }
        else
        {
          size_t v179 = v792 + v149;
          if ((v685 & 0x80000000) == 0)
          {
            unint64_t v180 = *(void *)(v179 + 8);
            if (v180 >= 0xFFFFFFFF) {
              LODWORD(v180) = -1;
            }
            int v126 = v180 + 1;
            goto LABEL_301;
          }
          size_t v217 = (v716 + ((v784 + v179) & v761)) & v70;
          if (v715 > 0x7FFFFFFD)
          {
            int v126 = (*(uint64_t (**)(size_t))(v734 + 48))(v217);
            goto LABEL_300;
          }
          unint64_t v209 = *(void *)(((v680 + ((v708 + v217) & v70)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v209 >= 0xFFFFFFFF) {
          LODWORD(v209) = -1;
        }
        if ((v209 + 1) >= 2) {
          goto LABEL_302;
        }
        goto LABEL_305;
      case 2u:
        uint64_t v127 = v71;
        uint64_t v743 = v72;
        uint64_t v759 = v35;
        uint64_t v697 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
        uint64_t v772 = *(void *)(v709 - 8);
        size_t v128 = v37;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        unint64_t v129 = (void *)((v687 + v82) & v764);
        size_t v130 = (const void *)((unint64_t)&a2[v687] & v764);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v744 + 48))(v130, 1, v747))
        {
          memcpy(v129, v130, v777);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v744 + 32))(v129, v130, v747);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v744 + 56))(v129, 0, 1, v747);
        }
        unint64_t v157 = (char *)(((unint64_t)v129 + v705) & v127);
        unint64_t v158 = (char *)(((unint64_t)v130 + v705) & v127);
        if (v713 == v726)
        {
          int v159 = (*(uint64_t (**)(char *))(v723 + 48))(v158);
          size_t v160 = v128;
          uint64_t v161 = v732;
          if (!v159) {
            goto LABEL_212;
          }
        }
        else
        {
          unint64_t v162 = (void *)((unint64_t)&v158[v732] & 0xFFFFFFFFFFFFFFF8);
          if (v699 > 0x7FFFFFFE)
          {
            int v189 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v772 + 48))(((unint64_t)v162 + v759) & v743, v682, v709);
            uint64_t v161 = v732;
            size_t v160 = v128;
            if (!v189)
            {
LABEL_212:
              unint64_t v162 = (void *)((unint64_t)&v158[v161] & 0xFFFFFFFFFFFFFFF8);
LABEL_213:
              uint64_t v190 = v161;
              (*(void (**)(char *, char *, uint64_t))(v723 + 32))(v157, v158, v722);
              uint64_t v191 = (void *)((unint64_t)&v157[v190] & 0xFFFFFFFFFFFFFFF8);
              void *v191 = *v162;
              unint64_t v192 = v78;
              unint64_t v193 = ((unint64_t)v191 + v759) & v743;
              unint64_t v194 = ((unint64_t)v162 + v759) & v743;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v772 + 32))(v193, v194, v709);
              unint64_t v195 = v697 + v193;
              unint64_t v78 = v192;
              v195 &= 0xFFFFFFFFFFFFFFF8;
              uint64_t v196 = (void *)((v697 + v194) & 0xFFFFFFFFFFFFFFF8);
              *(void *)unint64_t v195 = *v196;
              *(_OWORD *)((v195 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8);
              goto LABEL_214;
            }
          }
          else
          {
            uint64_t v161 = v732;
            uint64_t v163 = *v162;
            if (*v162 >= 0xFFFFFFFFuLL) {
              LODWORD(v163) = -1;
            }
            size_t v160 = v128;
            if ((v163 + 1) < 2) {
              goto LABEL_213;
            }
          }
        }
        memcpy(v157, v158, v160);
LABEL_214:
        char v114 = 0;
        size_t v197 = &v157[v160];
        *size_t v197 = v158[v160];
        *((void *)v197 + 1) = *(void *)&v158[v160 + 8];
        char v115 = 2;
        goto LABEL_336;
      case 3u:
        uint64_t v691 = v69;
        uint64_t v131 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32);
        v131(v82, a2, AssociatedTypeWitness);
        unint64_t v782 = (void *)((v719 + v82) & v119);
        uint64_t v132 = (void *)((unint64_t)&a2[v719] & v119);
        if (v785 == v721)
        {
          int v133 = (*(uint64_t (**)(void *))(v745 + 48))(v132);
LABEL_326:
          uint64_t v151 = v68;
LABEL_327:
          unint64_t v600 = v782;
          if (v133)
          {
LABEL_328:
            memcpy(v600, v132, v702);
            size_t v602 = v736;
            unint64_t v601 = v737;
            uint64_t v603 = v717;
LABEL_329:
            size_t v604 = v602;
LABEL_335:
            char v114 = 0;
            unint64_t v667 = ((((v603
                     + ((((((((((v601 + v604 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            unint64_t v668 = (_OWORD *)(((unint64_t)v600 + v667) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v669 = (_OWORD *)(((unint64_t)v132 + v667) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v668 = *v669;
            *(void *)(((unint64_t)v668 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v669 + 23) & 0xFFFFFFFFFFFFFFF8);
            char v115 = 3;
            goto LABEL_336;
          }
          unint64_t v150 = ((unint64_t)v132 + v729) & v753;
          unint64_t v152 = (v731 + v150) & v151;
LABEL_331:
          unint64_t v802 = v78;
          long long v791 = v132;
          uint64_t v605 = v151;
          v131((uint64_t)v600, (unsigned __int8 *)v132, AssociatedTypeWitness);
          unint64_t v606 = ((unint64_t)v600 + v729) & v753;
          v131(v606, (unsigned __int8 *)v150, AssociatedTypeWitness);
          unint64_t v607 = (v731 + v606) & v605;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 32))(v607, v152, v724);
          long long v608 = (void *)((v728 + v607) & 0xFFFFFFFFFFFFFFF8);
          long long v609 = (void *)((v728 + v152) & 0xFFFFFFFFFFFFFFF8);
          *long long v608 = *v609;
          unint64_t v610 = ((unint64_t)v608 + v710) & v691;
          unint64_t v611 = ((unint64_t)v609 + v710) & v691;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v610, v611, v711);
          unint64_t v612 = (void *)((v703 + v610) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v613 = (void *)((v703 + v611) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v612 = *v613;
          *(_OWORD *)(((unint64_t)v612 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v613 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v792 + v607) = *(_OWORD *)(v792 + v152);
          size_t v614 = (v784 + v792 + v607) & v761;
          size_t v615 = (v784 + v792 + v152) & v761;
          *(unsigned char *)size_t v614 = *(unsigned char *)v615;
          uint64_t v616 = v614 | 4;
          int v617 = *(_DWORD *)(v615 | 4);
          *(unsigned char *)(v616 + 4) = *(unsigned char *)((v615 | 4) + 4);
          *(_DWORD *)uint64_t v616 = v617;
          *(_WORD *)(v614 + 10) = *(_WORD *)(v615 + 0xA);
          unint64_t v618 = *(void (**)(size_t, size_t, uint64_t))(v734 + 32);
          v618((v716 + v614) & v70, (v716 + v615) & v70, v733);
          size_t v619 = (v708 + ((v716 + v614) & v70)) & v70;
          size_t v620 = (v708 + ((v716 + v615) & v70)) & v70;
          v618(v619, v620, v733);
          unint64_t v621 = (unsigned char *)(v619 + v735);
          *unint64_t v621 = *(unsigned char *)(v620 + v735);
          v621[1] = *(unsigned char *)(v620 + v735 + 1);
          v621[2] = *(unsigned char *)(v620 + v735 + 2);
          v621[3] = *(unsigned char *)(v620 + v735 + 3);
          v621[4] = *(unsigned char *)(v620 + v735 + 4);
          unint64_t v622 = (v619 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v623 = (v620 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v622 = *(_OWORD *)v623;
          *(unsigned char *)(v622 + 16) = *(unsigned char *)(v623 + 16);
          *(unsigned char *)(v622 + 17) = *(unsigned char *)(v623 + 17);
          *(unsigned char *)(v622 + 18) = *(unsigned char *)(v623 + 18);
          *(unsigned char *)(v622 + 19) = *(unsigned char *)(v623 + 19);
          unint64_t v624 = (v622 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v625 = (v623 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v624 = *(void *)v625;
          *(unsigned char *)(v624 + 8) = *(unsigned char *)(v625 + 8);
          *(unsigned char *)(v624 + 9) = *(unsigned char *)(v625 + 9);
          *(unsigned char *)(v624 + 10) = *(unsigned char *)(v625 + 10);
          *(unsigned char *)(v624 + 11) = *(unsigned char *)(v625 + 11);
          *(unsigned char *)(v624 + 12) = *(unsigned char *)(v625 + 12);
          int v626 = (void *)((v623 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v627 = (void *)((v622 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v627 = *v626;
          unint64_t v628 = ((unint64_t)v627 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v629 = ((unint64_t)v626 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v628 = *(void *)v629;
          *(unsigned char *)(v628 + 8) = *(unsigned char *)(v629 + 8);
          *(unsigned char *)(v628 + 9) = *(unsigned char *)(v629 + 9);
          v630 = (void *)((v707 + v628) & v70);
          unint64_t v631 = (const void *)((v707 + v629) & v70);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v734 + 48))(v631, 1, v733))
          {
            size_t v602 = v736;
            memcpy(v630, v631, v736);
          }
          else
          {
            v618((size_t)v630, (size_t)v631, v733);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v734 + 56))(v630, 0, 1, v733);
            size_t v602 = v736;
          }
          unint64_t v601 = v737;
          size_t v604 = v735;
          unint64_t v78 = v802;
          uint64_t v603 = v717;
          int v632 = (void *)(((unint64_t)v630 + v706) & 0xFFFFFFFFFFFFFFF8);
          long long v633 = (void *)(((unint64_t)v631 + v706) & 0xFFFFFFFFFFFFFFF8);
          void *v632 = *v633;
          unint64_t v634 = ((unint64_t)v632 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v635 = ((unint64_t)v633 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v636 = *(void *)v635;
          *(unsigned char *)(v634 + 8) = *(unsigned char *)(v635 + 8);
          *(void *)unint64_t v634 = v636;
          long long v637 = (void *)(((unint64_t)v632 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v638 = (void *)(((unint64_t)v633 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v637 = *v638;
          long long v639 = (_OWORD *)(((unint64_t)v637 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v640 = (_OWORD *)(((unint64_t)v638 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v639 = *v640;
          unint64_t v641 = ((unint64_t)v639 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v642 = ((unint64_t)v640 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v643 = *(void *)v642;
          *(unsigned char *)(v641 + 8) = *(unsigned char *)(v642 + 8);
          *(void *)unint64_t v641 = v643;
          *(unsigned char *)(v641 + 9) = *(unsigned char *)(v642 + 9);
          unint64_t v644 = (v641 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v645 = (v642 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v636) = *(_DWORD *)v645;
          *(unsigned char *)(v644 + 4) = *(unsigned char *)(v645 + 4);
          *(_DWORD *)unint64_t v644 = v636;
          *(_OWORD *)((v641 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v642 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v646 = v783 + v614;
          long long v647 = *(_OWORD *)(v783 + v615 + 112);
          long long v649 = *(_OWORD *)(v783 + v615 + 64);
          long long v648 = *(_OWORD *)(v783 + v615 + 80);
          *(_OWORD *)(v646 + 96) = *(_OWORD *)(v783 + v615 + 96);
          *(_OWORD *)(v646 + 112) = v647;
          *(_OWORD *)(v646 + 64) = v649;
          *(_OWORD *)(v646 + 80) = v648;
          long long v650 = *(_OWORD *)(v783 + v615 + 176);
          long long v652 = *(_OWORD *)(v783 + v615 + 128);
          long long v651 = *(_OWORD *)(v783 + v615 + 144);
          *(_OWORD *)(v646 + 160) = *(_OWORD *)(v783 + v615 + 160);
          *(_OWORD *)(v646 + 176) = v650;
          *(_OWORD *)(v646 + 128) = v652;
          *(_OWORD *)(v646 + 144) = v651;
          long long v654 = *(_OWORD *)(v783 + v615 + 208);
          long long v653 = *(_OWORD *)(v783 + v615 + 224);
          long long v655 = *(_OWORD *)(v783 + v615 + 192);
          *(void *)(v646 + 240) = *(void *)(v783 + v615 + 240);
          *(_OWORD *)(v646 + 208) = v654;
          *(_OWORD *)(v646 + 224) = v653;
          *(_OWORD *)(v646 + 192) = v655;
          long long v656 = *(_OWORD *)(v783 + v615);
          long long v657 = *(_OWORD *)(v783 + v615 + 16);
          long long v658 = *(_OWORD *)(v783 + v615 + 48);
          *(_OWORD *)(v646 + 32) = *(_OWORD *)(v783 + v615 + 32);
          *(_OWORD *)(v646 + 48) = v658;
          *(_OWORD *)unint64_t v646 = v656;
          *(_OWORD *)(v646 + 16) = v657;
          unint64_t v659 = (_OWORD *)((v783 + v614 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v660 = (long long *)((v783 + v615 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v661 = *v660;
          *(_OWORD *)((char *)v659 + 9) = *(long long *)((char *)v660 + 9);
          *unint64_t v659 = v661;
          unint64_t v662 = (v783 + v614 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v663 = (v783 + v615 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v664 = *(_OWORD *)v663;
          *(unsigned char *)(v662 + 16) = *(unsigned char *)(v663 + 16);
          *(_OWORD *)unint64_t v662 = v664;
          uint64_t v665 = (void *)((v783 + v614 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v666 = (void *)((v783 + v615 + 311) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v665 = *v666;
          *(_OWORD *)(((unint64_t)v665 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v666 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v600 = v782;
          uint64_t v132 = v791;
          if (v715) {
            goto LABEL_335;
          }
          goto LABEL_329;
        }
        unint64_t v150 = ((unint64_t)v132 + v729) & v753;
        uint64_t v151 = v68;
        unint64_t v152 = (v731 + v150) & v68;
        if (v727 == v721)
        {
          if (v714 == v727)
          {
            int v133 = (*(uint64_t (**)(unint64_t))(v725 + 48))((v731 + v150) & v68);
            goto LABEL_326;
          }
          uint64_t v210 = (unint64_t *)((v728 + v152) & 0xFFFFFFFFFFFFFFF8);
          if (v700 > 0x7FFFFFFE)
          {
            int v133 = (*(uint64_t (**)(unint64_t))(v712 + 48))(((unint64_t)v210 + v710) & v691);
            goto LABEL_326;
          }
          unint64_t v211 = *v210;
        }
        else
        {
          size_t v181 = v792 + v152;
          if ((v685 & 0x80000000) == 0)
          {
            unint64_t v182 = *(void *)(v181 + 8);
            if (v182 >= 0xFFFFFFFF) {
              LODWORD(v182) = -1;
            }
            int v133 = v182 + 1;
            goto LABEL_327;
          }
          size_t v218 = (v716 + ((v784 + v181) & v761)) & v70;
          if (v715 > 0x7FFFFFFD)
          {
            int v133 = (*(uint64_t (**)(size_t))(v734 + 48))(v218);
            goto LABEL_326;
          }
          unint64_t v211 = *(void *)(((v680 + ((v708 + v218) & v70)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v211 >= 0xFFFFFFFF) {
          LODWORD(v211) = -1;
        }
        unint64_t v600 = v782;
        if ((v211 + 1) >= 2) {
          goto LABEL_328;
        }
        goto LABEL_331;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        char v114 = 0;
        char v115 = 4;
        goto LABEL_336;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        char v114 = 0;
        char v115 = 5;
        goto LABEL_336;
      case 6u:
        unint64_t v134 = v78;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        unint64_t v135 = (void *)((v686 + v82) & v120);
        int v136 = (const void *)((unint64_t)&a2[v686] & v120);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v136, 1, v767))
        {
          memcpy(v135, v136, v681);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v135, v136, v767);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v135, 0, 1, v767);
        }
        char v114 = 0;
        char v115 = 6;
        unint64_t v78 = v134;
        goto LABEL_336;
      case 7u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32))(v82, a2, AssociatedTypeWitness);
        char v114 = 0;
LABEL_137:
        char v115 = 7;
        goto LABEL_336;
      default:
        uint64_t v689 = v69;
        int v121 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v745 + 32);
        v121(v82, a2, AssociatedTypeWitness);
        long long v781 = (void *)((v719 + v82) & v119);
        unint64_t v122 = (void *)((unint64_t)&a2[v719] & v119);
        if (v785 == v721)
        {
          int v123 = (*(uint64_t (**)(void *))(v745 + 48))(v122);
LABEL_289:
          uint64_t v145 = v68;
LABEL_290:
          size_t v445 = v781;
          if (v123)
          {
LABEL_291:
            memcpy(v445, v122, v702);
            size_t v447 = v736;
            unint64_t v446 = v737;
            uint64_t v448 = v717;
LABEL_292:
            size_t v449 = v447;
LABEL_298:
            char v115 = 0;
            char v114 = 0;
            unint64_t v512 = ((((v448
                     + ((((((((((v446 + v449 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            size_t v513 = (void *)(((unint64_t)v445 + v512) & 0xFFFFFFFFFFFFFFF8);
            size_t v514 = (void *)(((unint64_t)v122 + v512) & 0xFFFFFFFFFFFFFFF8);
            *size_t v513 = *v514;
            *(void *)(((unint64_t)v513 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v514 + 15) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_336;
          }
          unint64_t v144 = ((unint64_t)v122 + v729) & v753;
          unint64_t v146 = (v731 + v144) & v145;
LABEL_294:
          unint64_t v801 = v78;
          long long v789 = v122;
          uint64_t v450 = v145;
          v121((uint64_t)v445, (unsigned __int8 *)v122, AssociatedTypeWitness);
          unint64_t v451 = ((unint64_t)v445 + v729) & v753;
          v121(v451, (unsigned __int8 *)v144, AssociatedTypeWitness);
          unint64_t v452 = (v731 + v451) & v450;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 32))(v452, v146, v724);
          unint64_t v453 = (void *)((v728 + v452) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v454 = (void *)((v728 + v146) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v453 = *v454;
          unint64_t v455 = ((unint64_t)v453 + v710) & v689;
          unint64_t v456 = ((unint64_t)v454 + v710) & v689;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v455, v456, v711);
          id v457 = (void *)((v703 + v455) & 0xFFFFFFFFFFFFFFF8);
          id v458 = (void *)((v703 + v456) & 0xFFFFFFFFFFFFFFF8);
          void *v457 = *v458;
          *(_OWORD *)(((unint64_t)v457 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v792 + v452) = *(_OWORD *)(v792 + v146);
          size_t v459 = (v784 + v792 + v452) & v761;
          size_t v460 = (v784 + v792 + v146) & v761;
          *(unsigned char *)size_t v459 = *(unsigned char *)v460;
          uint64_t v461 = v459 | 4;
          int v462 = *(_DWORD *)(v460 | 4);
          *(unsigned char *)(v461 + 4) = *(unsigned char *)((v460 | 4) + 4);
          *(_DWORD *)uint64_t v461 = v462;
          *(_WORD *)(v459 + 10) = *(_WORD *)(v460 + 0xA);
          size_t v463 = *(void (**)(size_t, size_t, uint64_t))(v734 + 32);
          v463((v716 + v459) & v70, (v716 + v460) & v70, v733);
          size_t v464 = (v708 + ((v716 + v459) & v70)) & v70;
          size_t v465 = (v708 + ((v716 + v460) & v70)) & v70;
          v463(v464, v465, v733);
          uint64_t v466 = (unsigned char *)(v464 + v735);
          *uint64_t v466 = *(unsigned char *)(v465 + v735);
          v466[1] = *(unsigned char *)(v465 + v735 + 1);
          v466[2] = *(unsigned char *)(v465 + v735 + 2);
          v466[3] = *(unsigned char *)(v465 + v735 + 3);
          v466[4] = *(unsigned char *)(v465 + v735 + 4);
          unint64_t v467 = (v464 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v468 = (v465 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v467 = *(_OWORD *)v468;
          *(unsigned char *)(v467 + 16) = *(unsigned char *)(v468 + 16);
          *(unsigned char *)(v467 + 17) = *(unsigned char *)(v468 + 17);
          *(unsigned char *)(v467 + 18) = *(unsigned char *)(v468 + 18);
          *(unsigned char *)(v467 + 19) = *(unsigned char *)(v468 + 19);
          unint64_t v469 = (v467 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v470 = (v468 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v469 = *(void *)v470;
          *(unsigned char *)(v469 + 8) = *(unsigned char *)(v470 + 8);
          *(unsigned char *)(v469 + 9) = *(unsigned char *)(v470 + 9);
          *(unsigned char *)(v469 + 10) = *(unsigned char *)(v470 + 10);
          *(unsigned char *)(v469 + 11) = *(unsigned char *)(v470 + 11);
          *(unsigned char *)(v469 + 12) = *(unsigned char *)(v470 + 12);
          uint64_t v471 = (void *)((v468 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v472 = (void *)((v467 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v472 = *v471;
          unint64_t v473 = ((unint64_t)v472 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v474 = ((unint64_t)v471 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v473 = *(void *)v474;
          *(unsigned char *)(v473 + 8) = *(unsigned char *)(v474 + 8);
          *(unsigned char *)(v473 + 9) = *(unsigned char *)(v474 + 9);
          v475 = (void *)((v707 + v473) & v70);
          v476 = (const void *)((v707 + v474) & v70);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v734 + 48))(v476, 1, v733))
          {
            size_t v447 = v736;
            memcpy(v475, v476, v736);
          }
          else
          {
            v463((size_t)v475, (size_t)v476, v733);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v734 + 56))(v475, 0, 1, v733);
            size_t v447 = v736;
          }
          unint64_t v446 = v737;
          size_t v449 = v735;
          unint64_t v78 = v801;
          uint64_t v448 = v717;
          size_t v477 = (void *)(((unint64_t)v475 + v706) & 0xFFFFFFFFFFFFFFF8);
          size_t v478 = (void *)(((unint64_t)v476 + v706) & 0xFFFFFFFFFFFFFFF8);
          void *v477 = *v478;
          unint64_t v479 = ((unint64_t)v477 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v480 = ((unint64_t)v478 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v481 = *(void *)v480;
          *(unsigned char *)(v479 + 8) = *(unsigned char *)(v480 + 8);
          *(void *)unint64_t v479 = v481;
          long long v482 = (void *)(((unint64_t)v477 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v483 = (void *)(((unint64_t)v478 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v482 = *v483;
          long long v484 = (_OWORD *)(((unint64_t)v482 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v485 = (_OWORD *)(((unint64_t)v483 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v484 = *v485;
          unint64_t v486 = ((unint64_t)v484 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v487 = ((unint64_t)v485 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v488 = *(void *)v487;
          *(unsigned char *)(v486 + 8) = *(unsigned char *)(v487 + 8);
          *(void *)unint64_t v486 = v488;
          *(unsigned char *)(v486 + 9) = *(unsigned char *)(v487 + 9);
          unint64_t v489 = (v486 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v490 = (v487 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v481) = *(_DWORD *)v490;
          *(unsigned char *)(v489 + 4) = *(unsigned char *)(v490 + 4);
          *(_DWORD *)unint64_t v489 = v481;
          *(_OWORD *)((v486 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v487 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v491 = v783 + v459;
          long long v492 = *(_OWORD *)(v783 + v460 + 112);
          long long v494 = *(_OWORD *)(v783 + v460 + 64);
          long long v493 = *(_OWORD *)(v783 + v460 + 80);
          *(_OWORD *)(v491 + 96) = *(_OWORD *)(v783 + v460 + 96);
          *(_OWORD *)(v491 + 112) = v492;
          *(_OWORD *)(v491 + 64) = v494;
          *(_OWORD *)(v491 + 80) = v493;
          long long v495 = *(_OWORD *)(v783 + v460 + 176);
          long long v497 = *(_OWORD *)(v783 + v460 + 128);
          long long v496 = *(_OWORD *)(v783 + v460 + 144);
          *(_OWORD *)(v491 + 160) = *(_OWORD *)(v783 + v460 + 160);
          *(_OWORD *)(v491 + 176) = v495;
          *(_OWORD *)(v491 + 128) = v497;
          *(_OWORD *)(v491 + 144) = v496;
          long long v499 = *(_OWORD *)(v783 + v460 + 208);
          long long v498 = *(_OWORD *)(v783 + v460 + 224);
          long long v500 = *(_OWORD *)(v783 + v460 + 192);
          *(void *)(v491 + 240) = *(void *)(v783 + v460 + 240);
          *(_OWORD *)(v491 + 208) = v499;
          *(_OWORD *)(v491 + 224) = v498;
          *(_OWORD *)(v491 + 192) = v500;
          long long v501 = *(_OWORD *)(v783 + v460);
          long long v502 = *(_OWORD *)(v783 + v460 + 16);
          long long v503 = *(_OWORD *)(v783 + v460 + 48);
          *(_OWORD *)(v491 + 32) = *(_OWORD *)(v783 + v460 + 32);
          *(_OWORD *)(v491 + 48) = v503;
          *(_OWORD *)unint64_t v491 = v501;
          *(_OWORD *)(v491 + 16) = v502;
          v504 = (_OWORD *)((v783 + v459 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v505 = (long long *)((v783 + v460 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v506 = *v505;
          *(_OWORD *)((char *)v504 + 9) = *(long long *)((char *)v505 + 9);
          _OWORD *v504 = v506;
          unint64_t v507 = (v783 + v459 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v508 = (v783 + v460 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v509 = *(_OWORD *)v508;
          *(unsigned char *)(v507 + 16) = *(unsigned char *)(v508 + 16);
          *(_OWORD *)unint64_t v507 = v509;
          unsigned int v510 = (void *)((v783 + v459 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v511 = (void *)((v783 + v460 + 311) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v510 = *v511;
          *(_OWORD *)(((unint64_t)v510 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v511 + 15) & 0xFFFFFFFFFFFFFFF8);
          size_t v445 = v781;
          unint64_t v122 = v789;
          if (v715) {
            goto LABEL_298;
          }
          goto LABEL_292;
        }
        unint64_t v144 = ((unint64_t)v122 + v729) & v753;
        uint64_t v145 = v68;
        unint64_t v146 = (v731 + v144) & v68;
        if (v727 == v721)
        {
          if (v714 == v727)
          {
            int v123 = (*(uint64_t (**)(unint64_t))(v725 + 48))((v731 + v144) & v68);
            goto LABEL_289;
          }
          unint64_t v206 = (unint64_t *)((v728 + v146) & 0xFFFFFFFFFFFFFFF8);
          if (v700 > 0x7FFFFFFE)
          {
            int v123 = (*(uint64_t (**)(unint64_t))(v712 + 48))(((unint64_t)v206 + v710) & v689);
            goto LABEL_289;
          }
          unint64_t v207 = *v206;
        }
        else
        {
          size_t v177 = v792 + v146;
          if ((v685 & 0x80000000) == 0)
          {
            unint64_t v178 = *(void *)(v177 + 8);
            if (v178 >= 0xFFFFFFFF) {
              LODWORD(v178) = -1;
            }
            int v123 = v178 + 1;
            goto LABEL_290;
          }
          size_t v216 = (v716 + ((v784 + v177) & v761)) & v70;
          if (v715 > 0x7FFFFFFD)
          {
            int v123 = (*(uint64_t (**)(size_t))(v734 + 48))(v216);
            goto LABEL_289;
          }
          unint64_t v207 = *(void *)(((v680 + ((v708 + v216) & v70)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v207 >= 0xFFFFFFFF) {
          LODWORD(v207) = -1;
        }
        size_t v445 = v781;
        if ((v207 + 1) >= 2) {
          goto LABEL_291;
        }
        goto LABEL_294;
    }
  }
  unsigned int v73 = a2[v61];
  unsigned int v74 = v73 - 8;
  if (v73 < 8)
  {
    uint64_t v76 = v747;
  }
  else
  {
    if (v61 <= 3) {
      uint64_t v75 = v61;
    }
    else {
      uint64_t v75 = 4;
    }
    uint64_t v76 = v747;
    switch(v75)
    {
      case 1:
        int v77 = *a2;
        if (v61 < 4) {
          goto LABEL_100;
        }
        goto LABEL_102;
      case 2:
        int v77 = *(unsigned __int16 *)a2;
        if (v61 >= 4) {
          goto LABEL_102;
        }
        goto LABEL_100;
      case 3:
        int v77 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v61 < 4) {
          goto LABEL_100;
        }
        goto LABEL_102;
      case 4:
        int v77 = *(_DWORD *)a2;
        if (v61 < 4) {
LABEL_100:
        }
          unsigned int v73 = (v77 | (v74 << (8 * v61))) + 8;
        else {
LABEL_102:
        }
          unsigned int v73 = v77 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v85 = ~v46;
  uint64_t v86 = ~v51;
  switch(v73)
  {
    case 1u:
      uint64_t v93 = v71;
      uint64_t v740 = ~v31;
      uint64_t v688 = v69;
      unint64_t v779 = v52;
      uint64_t v756 = v31 + 8;
      uint64_t v694 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
      uint64_t v769 = *(void *)(v709 - 8);
      unint64_t v94 = ((((v36 + ((v31 + 8 + (v732 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16;
      unint64_t v787 = v61;
      uint64_t v82 = a1;
      size_t v730 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32);
      v730(a1, a2, v76);
      unint64_t v775 = (char *)((v53 + a1) & v85);
      unint64_t v95 = (void *)((unint64_t)&a2[v53] & v85);
      uint64_t v674 = v70;
      if (v720 == v718)
      {
        int v96 = (*(uint64_t (**)(void *))(v744 + 48))(v95);
        uint64_t v98 = v733;
        uint64_t v97 = v734;
        size_t v99 = v94;
        uint64_t v100 = v93;
        goto LABEL_186;
      }
      unint64_t v140 = ((unint64_t)v95 + v751) & v764;
      uint64_t v100 = v93;
      unint64_t v141 = (v749 + v140) & v93;
      if (v726 == v718)
      {
        uint64_t v98 = v733;
        uint64_t v97 = v734;
        if (v713 == v726)
        {
          int v96 = (*(uint64_t (**)(unint64_t))(v723 + 48))((v749 + v140) & v93);
          uint64_t v100 = v93;
          size_t v99 = v94;
          goto LABEL_186;
        }
        unint64_t v200 = (unint64_t *)((v732 + v141) & 0xFFFFFFFFFFFFFFF8);
        int v169 = v775;
        if (v699 <= 0x7FFFFFFE)
        {
          unint64_t v201 = *v200;
          if (v201 >= 0xFFFFFFFF) {
            LODWORD(v201) = -1;
          }
          BOOL v202 = (v201 + 1) >= 2;
          size_t v99 = v94;
          goto LABEL_346;
        }
        int v214 = (*(uint64_t (**)(unint64_t))(v769 + 48))(((unint64_t)v200 + v756) & v740);
LABEL_255:
        uint64_t v100 = v93;
        size_t v99 = v94;
        uint64_t v168 = v797;
        if (v214) {
          goto LABEL_187;
        }
LABEL_256:
        unint64_t v140 = ((unint64_t)v95 + v751) & v764;
        unint64_t v141 = (v749 + v140) & v100;
        goto LABEL_257;
      }
      size_t v99 = v94;
      unint64_t v166 = v94 + v141;
      uint64_t v98 = v733;
      uint64_t v97 = v734;
      if ((v684 & 0x80000000) == 0)
      {
        unint64_t v167 = *(void *)(v166 + 8);
        if (v167 >= 0xFFFFFFFF) {
          LODWORD(v167) = -1;
        }
        int v96 = v167 + 1;
LABEL_186:
        uint64_t v168 = v797;
        int v169 = v775;
        if (v96)
        {
LABEL_187:
          memcpy(v169, v95, v701);
          size_t v171 = v736;
          unint64_t v170 = v737;
          uint64_t v172 = v728;
          unint64_t v173 = v779;
LABEL_188:
          size_t v174 = v171;
          goto LABEL_261;
        }
        goto LABEL_256;
      }
      uint64_t v213 = (v716 + ((v784 + v166) & v761)) & v674;
      int v169 = v775;
      if (v715 > 0x7FFFFFFD)
      {
        int v214 = (*(uint64_t (**)(uint64_t))(v734 + 48))(v213);
        goto LABEL_255;
      }
      unint64_t v671 = *(void *)(((v680 + ((v708 + v213) & v674)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v671 >= 0xFFFFFFFF) {
        LODWORD(v671) = -1;
      }
      BOOL v202 = (v671 + 1) >= 2;
LABEL_346:
      uint64_t v168 = v797;
      if (v202) {
        goto LABEL_187;
      }
LABEL_257:
      size_t v678 = v99;
      long long v763 = v95;
      uint64_t v291 = v100;
      v730((uint64_t)v169, (unsigned __int8 *)v95, v747);
      unint64_t v292 = (unint64_t)&v169[v751];
      uint64_t v293 = v97;
      unint64_t v294 = v292 & v764;
      v730(v292 & v764, (unsigned __int8 *)v140, v747);
      uint64_t v295 = v98;
      unint64_t v296 = (v749 + v294) & v291;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v723 + 32))(v296, v141, v722);
      uint64_t v297 = (void *)((v732 + v296) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v298 = (void *)((v732 + v141) & 0xFFFFFFFFFFFFFFF8);
      void *v297 = *v298;
      unint64_t v299 = ((unint64_t)v297 + v756) & v740;
      unint64_t v300 = ((unint64_t)v298 + v756) & v740;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v769 + 32))(v299, v300, v709);
      uint64_t v301 = (void *)((v694 + v299) & 0xFFFFFFFFFFFFFFF8);
      size_t v302 = (void *)((v694 + v300) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v301 = *v302;
      *(_OWORD *)(((unint64_t)v301 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v303 = v293;
      *(_OWORD *)(v678 + v296) = *(_OWORD *)(v678 + v141);
      size_t v304 = (v784 + v678 + v296) & v761;
      size_t v305 = (v784 + v678 + v141) & v761;
      *(unsigned char *)size_t v304 = *(unsigned char *)v305;
      uint64_t v306 = v304 | 4;
      int v307 = *(_DWORD *)(v305 | 4);
      *(unsigned char *)(v306 + 4) = *(unsigned char *)((v305 | 4) + 4);
      *(_DWORD *)uint64_t v306 = v307;
      *(_WORD *)(v304 + 10) = *(_WORD *)(v305 + 0xA);
      uint64_t v308 = *(void (**)(size_t, size_t, uint64_t))(v303 + 32);
      v308((v716 + v304) & v674, (v716 + v305) & v674, v295);
      size_t v309 = (v708 + ((v716 + v304) & v674)) & v674;
      size_t v310 = (v708 + ((v716 + v305) & v674)) & v674;
      v308(v309, v310, v295);
      unint64_t v311 = (unsigned char *)(v309 + v735);
      unsigned char *v311 = *(unsigned char *)(v310 + v735);
      v311[1] = *(unsigned char *)(v310 + v735 + 1);
      v311[2] = *(unsigned char *)(v310 + v735 + 2);
      v311[3] = *(unsigned char *)(v310 + v735 + 3);
      v311[4] = *(unsigned char *)(v310 + v735 + 4);
      unint64_t v312 = (v309 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v313 = (v310 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v312 = *(_OWORD *)v313;
      *(unsigned char *)(v312 + 16) = *(unsigned char *)(v313 + 16);
      *(unsigned char *)(v312 + 17) = *(unsigned char *)(v313 + 17);
      *(unsigned char *)(v312 + 18) = *(unsigned char *)(v313 + 18);
      *(unsigned char *)(v312 + 19) = *(unsigned char *)(v313 + 19);
      unint64_t v314 = (v312 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v315 = (v313 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v314 = *(void *)v315;
      *(unsigned char *)(v314 + 8) = *(unsigned char *)(v315 + 8);
      *(unsigned char *)(v314 + 9) = *(unsigned char *)(v315 + 9);
      *(unsigned char *)(v314 + 10) = *(unsigned char *)(v315 + 10);
      *(unsigned char *)(v314 + 11) = *(unsigned char *)(v315 + 11);
      *(unsigned char *)(v314 + 12) = *(unsigned char *)(v315 + 12);
      uint64_t v316 = (void *)((v313 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v317 = (void *)((v312 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v317 = *v316;
      unint64_t v318 = ((unint64_t)v317 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v319 = ((unint64_t)v316 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v318 = *(void *)v319;
      *(unsigned char *)(v318 + 8) = *(unsigned char *)(v319 + 8);
      *(unsigned char *)(v318 + 9) = *(unsigned char *)(v319 + 9);
      uint64_t v320 = (void *)((v707 + v318) & v674);
      unint64_t v321 = (const void *)((v707 + v319) & v674);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v303 + 48))(v321, 1, v295))
      {
        size_t v171 = v736;
        memcpy(v320, v321, v736);
      }
      else
      {
        v308((size_t)v320, (size_t)v321, v295);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v303 + 56))(v320, 0, 1, v295);
        size_t v171 = v736;
      }
      unint64_t v170 = v737;
      size_t v174 = v735;
      unint64_t v173 = v779;
      uint64_t v172 = v728;
      uint64_t v168 = v797;
      size_t v322 = (void *)(((unint64_t)v320 + v706) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v323 = (void *)(((unint64_t)v321 + v706) & 0xFFFFFFFFFFFFFFF8);
      *size_t v322 = *v323;
      unint64_t v324 = ((unint64_t)v322 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v325 = ((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v326 = *(void *)v325;
      *(unsigned char *)(v324 + 8) = *(unsigned char *)(v325 + 8);
      *(void *)unint64_t v324 = v326;
      unint64_t v327 = (void *)(((unint64_t)v322 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v328 = (void *)(((unint64_t)v323 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v327 = *v328;
      unint64_t v329 = (_OWORD *)(((unint64_t)v327 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v330 = (_OWORD *)(((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v329 = *v330;
      unint64_t v331 = ((unint64_t)v329 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v332 = ((unint64_t)v330 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v333 = *(void *)v332;
      *(unsigned char *)(v331 + 8) = *(unsigned char *)(v332 + 8);
      *(void *)unint64_t v331 = v333;
      *(unsigned char *)(v331 + 9) = *(unsigned char *)(v332 + 9);
      unint64_t v334 = (v331 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v335 = (v332 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v326) = *(_DWORD *)v335;
      *(unsigned char *)(v334 + 4) = *(unsigned char *)(v335 + 4);
      *(_DWORD *)unint64_t v334 = v326;
      *(_OWORD *)((v331 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v332 + 25) & 0xFFFFFFFFFFFFFFF8);
      size_t v336 = v304 + v783;
      long long v337 = *(_OWORD *)(v305 + v783 + 112);
      long long v339 = *(_OWORD *)(v305 + v783 + 64);
      long long v338 = *(_OWORD *)(v305 + v783 + 80);
      *(_OWORD *)(v336 + 96) = *(_OWORD *)(v305 + v783 + 96);
      *(_OWORD *)(v336 + 112) = v337;
      *(_OWORD *)(v336 + 64) = v339;
      *(_OWORD *)(v336 + 80) = v338;
      long long v340 = *(_OWORD *)(v305 + v783 + 176);
      long long v342 = *(_OWORD *)(v305 + v783 + 128);
      long long v341 = *(_OWORD *)(v305 + v783 + 144);
      *(_OWORD *)(v336 + 160) = *(_OWORD *)(v305 + v783 + 160);
      *(_OWORD *)(v336 + 176) = v340;
      *(_OWORD *)(v336 + 128) = v342;
      *(_OWORD *)(v336 + 144) = v341;
      long long v344 = *(_OWORD *)(v305 + v783 + 208);
      long long v343 = *(_OWORD *)(v305 + v783 + 224);
      long long v345 = *(_OWORD *)(v305 + v783 + 192);
      *(void *)(v336 + 240) = *(void *)(v305 + v783 + 240);
      *(_OWORD *)(v336 + 208) = v344;
      *(_OWORD *)(v336 + 224) = v343;
      *(_OWORD *)(v336 + 192) = v345;
      long long v346 = *(_OWORD *)(v305 + v783);
      long long v347 = *(_OWORD *)(v305 + v783 + 16);
      long long v348 = *(_OWORD *)(v305 + v783 + 48);
      *(_OWORD *)(v336 + 32) = *(_OWORD *)(v305 + v783 + 32);
      *(_OWORD *)(v336 + 48) = v348;
      *(_OWORD *)size_t v336 = v346;
      *(_OWORD *)(v336 + 16) = v347;
      unint64_t v349 = (_OWORD *)((v304 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
      size_t v350 = (long long *)((v305 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v351 = *v350;
      *(_OWORD *)((char *)v349 + 9) = *(long long *)((char *)v350 + 9);
      *unint64_t v349 = v351;
      unint64_t v352 = (v304 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v353 = (v305 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v354 = *(_OWORD *)v353;
      *(unsigned char *)(v352 + 16) = *(unsigned char *)(v353 + 16);
      *(_OWORD *)unint64_t v352 = v354;
      unint64_t v355 = (void *)((v304 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v356 = (void *)((v305 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v355 = *v356;
      *(_OWORD *)(((unint64_t)v355 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v356 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v95 = v763;
      int v169 = v775;
      if (!v715) {
        goto LABEL_188;
      }
LABEL_261:
      unint64_t v357 = ((((v173
               + ((((((((((v170 + v174 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v358 = (void *)((unint64_t)&v169[v168 + v357] & v753);
      int v359 = (const void *)(((unint64_t)v95 + v168 + v357) & v753);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v745 + 48))(v359, 1, AssociatedTypeWitness))
      {
        memcpy(v358, v359, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v745 + 32))(v358, v359, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v745 + 56))(v358, 0, 1, AssociatedTypeWitness);
      }
      unint64_t v360 = v796;
      int v361 = (char *)(((unint64_t)v358 + v704) & v68);
      size_t v362 = (char *)(((unint64_t)v359 + v704) & v68);
      if (v714 == v727)
      {
        if (!(*(unsigned int (**)(char *))(v725 + 48))(v362)) {
          goto LABEL_274;
        }
      }
      else
      {
        size_t v363 = (void *)((unint64_t)&v362[v172] & 0xFFFFFFFFFFFFFFF8);
        if (v700 > 0x7FFFFFFE)
        {
          if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v712 + 48))(((unint64_t)v363 + v710) & v688, v683, v711))
          {
LABEL_274:
            size_t v363 = (void *)((unint64_t)&v362[v172] & 0xFFFFFFFFFFFFFFF8);
LABEL_275:
            (*(void (**)(char *, char *, uint64_t))(v725 + 32))(v361, v362, v724);
            int v365 = (void *)((unint64_t)&v361[v172] & 0xFFFFFFFFFFFFFFF8);
            void *v365 = *v363;
            unint64_t v366 = ((unint64_t)v365 + v710) & v688;
            unint64_t v367 = ((unint64_t)v363 + v710) & v688;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v366, v367, v711);
            long long v368 = (void *)((v703 + v366) & 0xFFFFFFFFFFFFFFF8);
            size_t v369 = (void *)((v703 + v367) & 0xFFFFFFFFFFFFFFF8);
            *long long v368 = *v369;
            *(_OWORD *)(((unint64_t)v368 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v369 + 15) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_276;
          }
        }
        else
        {
          uint64_t v364 = *v363;
          if (*v363 >= 0xFFFFFFFFuLL) {
            LODWORD(v364) = -1;
          }
          if ((v364 + 1) < 2) {
            goto LABEL_275;
          }
        }
      }
      memcpy(v361, v362, v792);
LABEL_276:
      *(void *)&v361[v792] = *(void *)&v362[v792];
      size_t v370 = (void *)((unint64_t)&v361[v792 + 15] & 0xFFFFFFFFFFFFFFF8);
      long long v371 = (void *)((unint64_t)&v362[v792 + 15] & 0xFFFFFFFFFFFFFFF8);
      *size_t v370 = *v371;
      *(void *)(((unint64_t)v370 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v371 + 15) & 0xFFFFFFFFFFFFFFF8);
      char v115 = 1;
      unint64_t v78 = v787;
      char v114 = 1;
LABEL_337:
      *(unsigned char *)(v82 + v78) = v115;
      *(unsigned char *)(v82 + v360) = v114;
      return v82;
    case 2u:
      uint64_t v101 = v69;
      unint64_t v102 = v61;
      uint64_t v82 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      size_t v103 = (void *)((v55 + a1) & v753);
      unint64_t v104 = (const void *)((unint64_t)&a2[v55] & v753);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v745 + 48))(v104, 1, AssociatedTypeWitness))
      {
        memcpy(v103, v104, v49);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v745 + 32))(v103, v104, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v745 + 56))(v103, 0, 1, AssociatedTypeWitness);
      }
      int v153 = (char *)(((unint64_t)v103 + v704) & v68);
      unint64_t v154 = (unsigned char *)(((unint64_t)v104 + v704) & v68);
      if (v714 == v727)
      {
        if (!(*(unsigned int (**)(unsigned char *))(v725 + 48))(v154)) {
          goto LABEL_207;
        }
      }
      else
      {
        unint64_t v155 = (uint64_t *)((unint64_t)&v154[v728] & 0xFFFFFFFFFFFFFFF8);
        if (v700 > 0x7FFFFFFE)
        {
          if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v712 + 48))(((unint64_t)v155 + v710) & v101, v683, v711))
          {
LABEL_207:
            unint64_t v155 = (uint64_t *)((unint64_t)&v154[v728] & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_208;
          }
        }
        else
        {
          uint64_t v156 = *v155;
          if ((unint64_t)*v155 >= 0xFFFFFFFF) {
            LODWORD(v156) = -1;
          }
          if ((v156 + 1) < 2)
          {
LABEL_208:
            (*(void (**)(char *, unsigned char *, uint64_t))(v725 + 32))(v153, v154, v724);
            unint64_t v183 = (void *)((unint64_t)&v153[v728] & 0xFFFFFFFFFFFFFFF8);
            void *v183 = *v155;
            unint64_t v184 = ((unint64_t)v183 + v710) & v101;
            unint64_t v185 = ((unint64_t)v155 + v710) & v101;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v712 + 32))(v184, v185, v711);
            unint64_t v186 = (void *)((v703 + v184) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v187 = (void *)((v703 + v185) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v186 = *v187;
            *(_OWORD *)(((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_209:
            BOOL v188 = &v153[v792];
            *BOOL v188 = v154[v792];
            *((void *)v188 + 1) = *(void *)&v154[v792 + 8];
            char v114 = 1;
            char v115 = 2;
            unint64_t v78 = v102;
            goto LABEL_336;
          }
        }
      }
      memcpy(v153, v154, v792);
      goto LABEL_209;
    case 3u:
      uint64_t v105 = v71;
      uint64_t v741 = ~v31;
      unint64_t v780 = v52;
      uint64_t v757 = v31 + 8;
      uint64_t v695 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
      uint64_t v770 = *(void *)(v709 - 8);
      unint64_t v106 = ((((v36 + ((v31 + 8 + (v732 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v675 = ~v45;
      unint64_t v788 = v61;
      size_t v107 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32);
      uint64_t v82 = a1;
      v107(a1, a2, v76);
      uint64_t v799 = (char *)((v53 + a1) & v85);
      uint64_t v108 = (void *)((unint64_t)&a2[v53] & v85);
      if (v720 == v718)
      {
        int v109 = (*(uint64_t (**)(void *))(v744 + 48))(v108);
        uint64_t v110 = v733;
        uint64_t v111 = v734;
        size_t v112 = v106;
        uint64_t v113 = v105;
LABEL_279:
        unint64_t v372 = v799;
        if (v109)
        {
LABEL_280:
          memcpy(v372, v108, v701);
          size_t v374 = v736;
          unint64_t v373 = v737;
          unint64_t v375 = v788;
          unint64_t v376 = v780;
LABEL_281:
          size_t v377 = v374;
          goto LABEL_287;
        }
        unint64_t v142 = ((unint64_t)v108 + v751) & v764;
        unint64_t v143 = (v749 + v142) & v113;
        goto LABEL_283;
      }
      unint64_t v142 = ((unint64_t)v108 + v751) & v764;
      uint64_t v113 = v105;
      unint64_t v143 = (v749 + v142) & v105;
      if (v726 == v718)
      {
        uint64_t v110 = v733;
        uint64_t v111 = v734;
        if (v713 == v726)
        {
          int v109 = (*(uint64_t (**)(unint64_t))(v723 + 48))((v749 + v142) & v105);
LABEL_278:
          uint64_t v113 = v105;
          size_t v112 = v106;
          goto LABEL_279;
        }
        unint64_t v203 = (unint64_t *)((v732 + v143) & 0xFFFFFFFFFFFFFFF8);
        if (v699 > 0x7FFFFFFE)
        {
          int v109 = (*(uint64_t (**)(unint64_t))(v770 + 48))(((unint64_t)v203 + v757) & v741);
          goto LABEL_278;
        }
        unint64_t v204 = *v203;
        if (v204 >= 0xFFFFFFFF) {
          LODWORD(v204) = -1;
        }
        BOOL v205 = (v204 + 1) >= 2;
        size_t v112 = v106;
      }
      else
      {
        size_t v112 = v106;
        unint64_t v175 = v106 + v143;
        uint64_t v110 = v733;
        uint64_t v111 = v734;
        if ((v684 & 0x80000000) == 0)
        {
          unint64_t v176 = *(void *)(v175 + 8);
          if (v176 >= 0xFFFFFFFF) {
            LODWORD(v176) = -1;
          }
          int v109 = v176 + 1;
          goto LABEL_279;
        }
        uint64_t v215 = (v716 + ((v784 + v175) & v761)) & v675;
        if (v715 > 0x7FFFFFFD)
        {
          int v109 = (*(uint64_t (**)(uint64_t))(v734 + 48))(v215);
          goto LABEL_278;
        }
        unint64_t v672 = *(void *)(((v680 + ((v708 + v215) & v675)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v672 >= 0xFFFFFFFF) {
          LODWORD(v672) = -1;
        }
        BOOL v205 = (v672 + 1) >= 2;
      }
      unint64_t v372 = v799;
      if (v205) {
        goto LABEL_280;
      }
LABEL_283:
      size_t v679 = v112;
      long long v794 = v108;
      uint64_t v378 = v113;
      v107((uint64_t)v372, (unsigned __int8 *)v108, v747);
      unint64_t v379 = (unint64_t)&v372[v751];
      uint64_t v380 = v110;
      unint64_t v381 = v379 & v764;
      v107(v379 & v764, (unsigned __int8 *)v142, v747);
      unint64_t v382 = (v749 + v381) & v378;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v723 + 32))(v382, v143, v722);
      id v383 = (void *)((v732 + v382) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v384 = (void *)((v732 + v143) & 0xFFFFFFFFFFFFFFF8);
      *id v383 = *v384;
      unint64_t v385 = ((unint64_t)v383 + v757) & v741;
      unint64_t v386 = ((unint64_t)v384 + v757) & v741;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v770 + 32))(v385, v386, v709);
      uint64_t v387 = (void *)((v695 + v385) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v388 = (void *)((v695 + v386) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v387 = *v388;
      *(_OWORD *)(((unint64_t)v387 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v679 + v382) = *(_OWORD *)(v679 + v143);
      size_t v389 = (v784 + v679 + v382) & v761;
      size_t v390 = (v784 + v679 + v143) & v761;
      *(unsigned char *)size_t v389 = *(unsigned char *)v390;
      uint64_t v391 = v389 | 4;
      int v392 = *(_DWORD *)(v390 | 4);
      *(unsigned char *)(v391 + 4) = *(unsigned char *)((v390 | 4) + 4);
      *(_DWORD *)uint64_t v391 = v392;
      *(_WORD *)(v389 + 10) = *(_WORD *)(v390 + 0xA);
      uint64_t v393 = *(void (**)(size_t, size_t, uint64_t))(v111 + 32);
      v393((v716 + v389) & v675, (v716 + v390) & v675, v380);
      size_t v394 = (v708 + ((v716 + v389) & v675)) & v675;
      size_t v395 = (v708 + ((v716 + v390) & v675)) & v675;
      v393(v394, v395, v380);
      unint64_t v396 = (unsigned char *)(v394 + v735);
      *unint64_t v396 = *(unsigned char *)(v395 + v735);
      v396[1] = *(unsigned char *)(v395 + v735 + 1);
      v396[2] = *(unsigned char *)(v395 + v735 + 2);
      v396[3] = *(unsigned char *)(v395 + v735 + 3);
      v396[4] = *(unsigned char *)(v395 + v735 + 4);
      unint64_t v397 = (v394 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v398 = (v395 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v397 = *(_OWORD *)v398;
      *(unsigned char *)(v397 + 16) = *(unsigned char *)(v398 + 16);
      *(unsigned char *)(v397 + 17) = *(unsigned char *)(v398 + 17);
      *(unsigned char *)(v397 + 18) = *(unsigned char *)(v398 + 18);
      *(unsigned char *)(v397 + 19) = *(unsigned char *)(v398 + 19);
      unint64_t v399 = (v397 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v400 = (v398 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v399 = *(void *)v400;
      *(unsigned char *)(v399 + 8) = *(unsigned char *)(v400 + 8);
      *(unsigned char *)(v399 + 9) = *(unsigned char *)(v400 + 9);
      *(unsigned char *)(v399 + 10) = *(unsigned char *)(v400 + 10);
      *(unsigned char *)(v399 + 11) = *(unsigned char *)(v400 + 11);
      *(unsigned char *)(v399 + 12) = *(unsigned char *)(v400 + 12);
      uint64_t v401 = (void *)((v398 + 47) & 0xFFFFFFFFFFFFFFF8);
      int v402 = (void *)((v397 + 47) & 0xFFFFFFFFFFFFFFF8);
      *int v402 = *v401;
      unint64_t v403 = ((unint64_t)v402 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v404 = ((unint64_t)v401 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v403 = *(void *)v404;
      *(unsigned char *)(v403 + 8) = *(unsigned char *)(v404 + 8);
      *(unsigned char *)(v403 + 9) = *(unsigned char *)(v404 + 9);
      unint64_t v405 = (void *)((v707 + v403) & v675);
      int v406 = (const void *)((v707 + v404) & v675);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v111 + 48))(v406, 1, v380))
      {
        size_t v374 = v736;
        memcpy(v405, v406, v736);
      }
      else
      {
        v393((size_t)v405, (size_t)v406, v380);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v111 + 56))(v405, 0, 1, v380);
        size_t v374 = v736;
      }
      unint64_t v373 = v737;
      size_t v377 = v735;
      unint64_t v376 = v780;
      unint64_t v375 = v788;
      unint64_t v372 = v799;
      long long v407 = (void *)(((unint64_t)v405 + v706) & 0xFFFFFFFFFFFFFFF8);
      long long v408 = (void *)(((unint64_t)v406 + v706) & 0xFFFFFFFFFFFFFFF8);
      *long long v407 = *v408;
      unint64_t v409 = ((unint64_t)v407 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v410 = ((unint64_t)v408 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v411 = *(void *)v410;
      *(unsigned char *)(v409 + 8) = *(unsigned char *)(v410 + 8);
      *(void *)unint64_t v409 = v411;
      long long v412 = (void *)(((unint64_t)v407 + 31) & 0xFFFFFFFFFFFFFFF8);
      long long v413 = (void *)(((unint64_t)v408 + 31) & 0xFFFFFFFFFFFFFFF8);
      *long long v412 = *v413;
      long long v414 = (_OWORD *)(((unint64_t)v412 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v415 = (_OWORD *)(((unint64_t)v413 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v414 = *v415;
      unint64_t v416 = ((unint64_t)v414 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v417 = ((unint64_t)v415 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v418 = *(void *)v417;
      *(unsigned char *)(v416 + 8) = *(unsigned char *)(v417 + 8);
      *(void *)unint64_t v416 = v418;
      *(unsigned char *)(v416 + 9) = *(unsigned char *)(v417 + 9);
      unint64_t v419 = (v416 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v420 = (v417 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v411) = *(_DWORD *)v420;
      *(unsigned char *)(v419 + 4) = *(unsigned char *)(v420 + 4);
      *(_DWORD *)unint64_t v419 = v411;
      *(_OWORD *)((v416 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v417 + 25) & 0xFFFFFFFFFFFFFFF8);
      size_t v421 = v389 + v783;
      long long v422 = *(_OWORD *)(v390 + v783 + 112);
      long long v424 = *(_OWORD *)(v390 + v783 + 64);
      long long v423 = *(_OWORD *)(v390 + v783 + 80);
      *(_OWORD *)(v421 + 96) = *(_OWORD *)(v390 + v783 + 96);
      *(_OWORD *)(v421 + 112) = v422;
      *(_OWORD *)(v421 + 64) = v424;
      *(_OWORD *)(v421 + 80) = v423;
      long long v425 = *(_OWORD *)(v390 + v783 + 176);
      long long v427 = *(_OWORD *)(v390 + v783 + 128);
      long long v426 = *(_OWORD *)(v390 + v783 + 144);
      *(_OWORD *)(v421 + 160) = *(_OWORD *)(v390 + v783 + 160);
      *(_OWORD *)(v421 + 176) = v425;
      *(_OWORD *)(v421 + 128) = v427;
      *(_OWORD *)(v421 + 144) = v426;
      long long v429 = *(_OWORD *)(v390 + v783 + 208);
      long long v428 = *(_OWORD *)(v390 + v783 + 224);
      long long v430 = *(_OWORD *)(v390 + v783 + 192);
      *(void *)(v421 + 240) = *(void *)(v390 + v783 + 240);
      *(_OWORD *)(v421 + 208) = v429;
      *(_OWORD *)(v421 + 224) = v428;
      *(_OWORD *)(v421 + 192) = v430;
      long long v431 = *(_OWORD *)(v390 + v783);
      long long v432 = *(_OWORD *)(v390 + v783 + 16);
      long long v433 = *(_OWORD *)(v390 + v783 + 48);
      *(_OWORD *)(v421 + 32) = *(_OWORD *)(v390 + v783 + 32);
      *(_OWORD *)(v421 + 48) = v433;
      *(_OWORD *)size_t v421 = v431;
      *(_OWORD *)(v421 + 16) = v432;
      uint64_t v434 = (_OWORD *)((v389 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v435 = (long long *)((v390 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v436 = *v435;
      *(_OWORD *)((char *)v434 + 9) = *(long long *)((char *)v435 + 9);
      *uint64_t v434 = v436;
      unint64_t v437 = (v389 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v438 = (v390 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v439 = *(_OWORD *)v438;
      *(unsigned char *)(v437 + 16) = *(unsigned char *)(v438 + 16);
      *(_OWORD *)unint64_t v437 = v439;
      int v440 = (void *)((v389 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
      size_t v441 = (void *)((v390 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
      void *v440 = *v441;
      *(_OWORD *)(((unint64_t)v440 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v441 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v108 = v794;
      if (!v715) {
        goto LABEL_281;
      }
LABEL_287:
      unint64_t v442 = ((((v376
               + ((((((((((v373 + v377 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      int v443 = (_OWORD *)((unint64_t)&v372[v442] & 0xFFFFFFFFFFFFFFF8);
      size_t v444 = (_OWORD *)(((unint64_t)v108 + v442) & 0xFFFFFFFFFFFFFFF8);
      *int v443 = *v444;
      *(void *)(((unint64_t)v443 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v444 + 23) & 0xFFFFFFFFFFFFFFF8);
      char v114 = 1;
      char v115 = 3;
      unint64_t v78 = v375;
LABEL_336:
      unint64_t v360 = v796;
      goto LABEL_337;
    case 4u:
      uint64_t v82 = a1;
      unint64_t v78 = v61;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      char v114 = 1;
      char v115 = 4;
      goto LABEL_336;
    case 5u:
      uint64_t v82 = a1;
      unint64_t v78 = v61;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      char v114 = 1;
      char v115 = 5;
      goto LABEL_336;
    case 6u:
      unint64_t v116 = v61;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      unint64_t v117 = (void *)((v60 + a1) & v86);
      unint64_t v118 = (const void *)((unint64_t)&a2[v60] & v86);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v50 + 48))(v118, 1, v692))
      {
        memcpy(v117, v118, v56);
        char v114 = 1;
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v50 + 32))(v117, v118, v692);
        char v114 = 1;
        (*(void (**)(void *, void, uint64_t, uint64_t))(v50 + 56))(v117, 0, 1, v692);
      }
      char v115 = 6;
      unint64_t v78 = v116;
      uint64_t v82 = a1;
      goto LABEL_336;
    case 7u:
      uint64_t v82 = a1;
      unint64_t v78 = v61;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32))(a1, a2, v76);
      char v114 = 1;
      goto LABEL_137;
    default:
      uint64_t v87 = v71;
      uint64_t v739 = ~v31;
      unint64_t v778 = v52;
      uint64_t v755 = v31 + 8;
      uint64_t v693 = *(void *)(*(void *)(v709 - 8) + 64) + 7;
      uint64_t v768 = *(void *)(v709 - 8);
      uint64_t v673 = ~v45;
      size_t v676 = ((((v36 + ((v31 + 8 + (v732 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v786 = v61;
      uint64_t v88 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v744 + 32);
      uint64_t v82 = a1;
      v88(a1, a2, v76);
      long long v798 = (void *)((v53 + a1) & v85);
      unint64_t v89 = (void *)((unint64_t)&a2[v53] & v85);
      if (v720 == v718)
      {
        int v90 = (*(uint64_t (**)(void *))(v744 + 48))(v89);
        uint64_t v92 = v733;
        uint64_t v91 = v734;
LABEL_244:
        uint64_t v138 = v87;
LABEL_245:
        if (v90)
        {
LABEL_246:
          uint64_t v219 = v798;
          memcpy(v798, v89, v701);
          size_t v221 = v736;
          unint64_t v220 = v737;
          unint64_t v222 = v786;
          unint64_t v223 = v778;
          goto LABEL_247;
        }
        unint64_t v137 = ((unint64_t)v89 + v751) & v764;
        unint64_t v139 = (v749 + v137) & v138;
LABEL_249:
        long long v793 = v89;
        uint64_t v225 = v138;
        v88((uint64_t)v798, (unsigned __int8 *)v89, v747);
        uint64_t v226 = v91;
        unint64_t v227 = ((unint64_t)v798 + v751) & v764;
        v88(v227, (unsigned __int8 *)v137, v747);
        unint64_t v228 = (v749 + v227) & v225;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v723 + 32))(v228, v139, v722);
        uint64_t v229 = (void *)((v732 + v228) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v230 = (void *)((v732 + v139) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v229 = *v230;
        unint64_t v231 = ((unint64_t)v229 + v755) & v739;
        unint64_t v232 = ((unint64_t)v230 + v755) & v739;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v768 + 32))(v231, v232, v709);
        unint64_t v233 = (void *)((v693 + v231) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v234 = (void *)((v693 + v232) & 0xFFFFFFFFFFFFFFF8);
        void *v233 = *v234;
        *(_OWORD *)(((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v676 + v228) = *(_OWORD *)(v676 + v139);
        size_t v235 = (v784 + v676 + v228) & v761;
        size_t v236 = (v784 + v676 + v139) & v761;
        *(unsigned char *)size_t v235 = *(unsigned char *)v236;
        uint64_t v237 = v235 | 4;
        int v238 = *(_DWORD *)(v236 | 4);
        *(unsigned char *)(v237 + 4) = *(unsigned char *)((v236 | 4) + 4);
        *(_DWORD *)uint64_t v237 = v238;
        *(_WORD *)(v235 + 10) = *(_WORD *)(v236 + 0xA);
        char v239 = *(void (**)(size_t, size_t, uint64_t))(v226 + 32);
        v239((v716 + v235) & v673, (v716 + v236) & v673, v92);
        size_t v240 = (v708 + ((v716 + v235) & v673)) & v673;
        size_t v241 = (v708 + ((v716 + v236) & v673)) & v673;
        v239(v240, v241, v92);
        unint64_t v242 = (unsigned char *)(v240 + v735);
        unsigned char *v242 = *(unsigned char *)(v241 + v735);
        v242[1] = *(unsigned char *)(v241 + v735 + 1);
        v242[2] = *(unsigned char *)(v241 + v735 + 2);
        v242[3] = *(unsigned char *)(v241 + v735 + 3);
        v242[4] = *(unsigned char *)(v241 + v735 + 4);
        unint64_t v243 = (v240 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v244 = (v241 + v735 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v243 = *(_OWORD *)v244;
        *(unsigned char *)(v243 + 16) = *(unsigned char *)(v244 + 16);
        *(unsigned char *)(v243 + 17) = *(unsigned char *)(v244 + 17);
        *(unsigned char *)(v243 + 18) = *(unsigned char *)(v244 + 18);
        *(unsigned char *)(v243 + 19) = *(unsigned char *)(v244 + 19);
        unint64_t v245 = (v243 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v246 = (v244 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v245 = *(void *)v246;
        *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
        *(unsigned char *)(v245 + 9) = *(unsigned char *)(v246 + 9);
        *(unsigned char *)(v245 + 10) = *(unsigned char *)(v246 + 10);
        *(unsigned char *)(v245 + 11) = *(unsigned char *)(v246 + 11);
        *(unsigned char *)(v245 + 12) = *(unsigned char *)(v246 + 12);
        unint64_t v247 = (void *)((v244 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v248 = (void *)((v243 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v248 = *v247;
        unint64_t v249 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v250 = ((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v249 = *(void *)v250;
        *(unsigned char *)(v249 + 8) = *(unsigned char *)(v250 + 8);
        *(unsigned char *)(v249 + 9) = *(unsigned char *)(v250 + 9);
        unint64_t v251 = (void *)((v707 + v249) & v673);
        unint64_t v252 = (const void *)((v707 + v250) & v673);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v226 + 48))(v252, 1, v92))
        {
          size_t v221 = v736;
          memcpy(v251, v252, v736);
        }
        else
        {
          v239((size_t)v251, (size_t)v252, v92);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v226 + 56))(v251, 0, 1, v92);
          size_t v221 = v736;
        }
        unint64_t v220 = v737;
        size_t v224 = v735;
        unint64_t v223 = v778;
        unint64_t v222 = v786;
        uint64_t v219 = v798;
        unsigned int v253 = (void *)(((unint64_t)v251 + v706) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v254 = (void *)(((unint64_t)v252 + v706) & 0xFFFFFFFFFFFFFFF8);
        void *v253 = *v254;
        unint64_t v255 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v257 = *(void *)v256;
        *(unsigned char *)(v255 + 8) = *(unsigned char *)(v256 + 8);
        *(void *)unint64_t v255 = v257;
        unint64_t v258 = (void *)(((unint64_t)v253 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v259 = (void *)(((unint64_t)v254 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v258 = *v259;
        unint64_t v260 = (_OWORD *)(((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v261 = (_OWORD *)(((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v260 = *v261;
        unint64_t v262 = ((unint64_t)v260 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v263 = ((unint64_t)v261 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v264 = *(void *)v263;
        *(unsigned char *)(v262 + 8) = *(unsigned char *)(v263 + 8);
        *(void *)unint64_t v262 = v264;
        *(unsigned char *)(v262 + 9) = *(unsigned char *)(v263 + 9);
        unint64_t v265 = (v262 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v266 = (v263 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v257) = *(_DWORD *)v266;
        *(unsigned char *)(v265 + 4) = *(unsigned char *)(v266 + 4);
        *(_DWORD *)unint64_t v265 = v257;
        *(_OWORD *)((v262 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v263 + 25) & 0xFFFFFFFFFFFFFFF8);
        size_t v267 = v235 + v783;
        long long v268 = *(_OWORD *)(v236 + v783 + 112);
        long long v270 = *(_OWORD *)(v236 + v783 + 64);
        long long v269 = *(_OWORD *)(v236 + v783 + 80);
        *(_OWORD *)(v267 + 96) = *(_OWORD *)(v236 + v783 + 96);
        *(_OWORD *)(v267 + 112) = v268;
        *(_OWORD *)(v267 + 64) = v270;
        *(_OWORD *)(v267 + 80) = v269;
        long long v271 = *(_OWORD *)(v236 + v783 + 176);
        long long v273 = *(_OWORD *)(v236 + v783 + 128);
        long long v272 = *(_OWORD *)(v236 + v783 + 144);
        *(_OWORD *)(v267 + 160) = *(_OWORD *)(v236 + v783 + 160);
        *(_OWORD *)(v267 + 176) = v271;
        *(_OWORD *)(v267 + 128) = v273;
        *(_OWORD *)(v267 + 144) = v272;
        long long v275 = *(_OWORD *)(v236 + v783 + 208);
        long long v274 = *(_OWORD *)(v236 + v783 + 224);
        long long v276 = *(_OWORD *)(v236 + v783 + 192);
        *(void *)(v267 + 240) = *(void *)(v236 + v783 + 240);
        *(_OWORD *)(v267 + 208) = v275;
        *(_OWORD *)(v267 + 224) = v274;
        *(_OWORD *)(v267 + 192) = v276;
        long long v277 = *(_OWORD *)(v236 + v783);
        long long v278 = *(_OWORD *)(v236 + v783 + 16);
        long long v279 = *(_OWORD *)(v236 + v783 + 48);
        *(_OWORD *)(v267 + 32) = *(_OWORD *)(v236 + v783 + 32);
        *(_OWORD *)(v267 + 48) = v279;
        *(_OWORD *)size_t v267 = v277;
        *(_OWORD *)(v267 + 16) = v278;
        uint64_t v280 = (_OWORD *)((v235 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v281 = (long long *)((v236 + v783 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v282 = *v281;
        *(_OWORD *)((char *)v280 + 9) = *(long long *)((char *)v281 + 9);
        *uint64_t v280 = v282;
        unint64_t v283 = (v235 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v284 = (v236 + v783 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v285 = *(_OWORD *)v284;
        *(unsigned char *)(v283 + 16) = *(unsigned char *)(v284 + 16);
        *(_OWORD *)unint64_t v283 = v285;
        size_t v286 = (void *)((v235 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v287 = (void *)((v236 + v783 + 311) & 0xFFFFFFFFFFFFFFF8);
        *size_t v286 = *v287;
        *(_OWORD *)(((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v89 = v793;
        if (v715)
        {
LABEL_253:
          char v115 = 0;
          unint64_t v288 = ((((v223
                   + ((((((((((v220 + v224 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          unint64_t v289 = (void *)(((unint64_t)v219 + v288) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v290 = (void *)(((unint64_t)v89 + v288) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v289 = *v290;
          *(void *)(((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v114 = 1;
          unint64_t v78 = v222;
          goto LABEL_336;
        }
LABEL_247:
        size_t v224 = v221;
        goto LABEL_253;
      }
      unint64_t v137 = ((unint64_t)v89 + v751) & v764;
      uint64_t v138 = v87;
      unint64_t v139 = (v749 + v137) & v87;
      if (v726 == v718)
      {
        uint64_t v92 = v733;
        uint64_t v91 = v734;
        if (v713 == v726)
        {
          int v90 = (*(uint64_t (**)(unint64_t))(v723 + 48))((v749 + v137) & v87);
          goto LABEL_244;
        }
        unint64_t v198 = (unint64_t *)((v732 + v139) & 0xFFFFFFFFFFFFFFF8);
        if (v699 > 0x7FFFFFFE)
        {
          int v90 = (*(uint64_t (**)(unint64_t))(v768 + 48))(((unint64_t)v198 + v755) & v739);
          goto LABEL_244;
        }
        unint64_t v199 = *v198;
      }
      else
      {
        size_t v164 = v676 + v139;
        uint64_t v92 = v733;
        uint64_t v91 = v734;
        if ((v684 & 0x80000000) == 0)
        {
          unint64_t v165 = *(void *)(v164 + 8);
          if (v165 >= 0xFFFFFFFF) {
            LODWORD(v165) = -1;
          }
          int v90 = v165 + 1;
          goto LABEL_245;
        }
        size_t v212 = (v716 + ((v784 + v164) & v761)) & v673;
        if (v715 > 0x7FFFFFFD)
        {
          int v90 = (*(uint64_t (**)(size_t))(v734 + 48))(v212);
          goto LABEL_244;
        }
        unint64_t v199 = *(void *)(((v680 + ((v708 + v212) & v673)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v199 >= 0xFFFFFFFF) {
        LODWORD(v199) = -1;
      }
      if ((v199 + 1) >= 2) {
        goto LABEL_246;
      }
      goto LABEL_249;
  }
}

unsigned __int8 *sub_24D9E8028(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(a3 + 16);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v872 = *(void *)(v4 + 64);
    uint64_t v874 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v865 = v3;
    uint64_t v833 = swift_getAssociatedTypeWitness();
    uint64_t v5 = *(void *)(v833 - 8);
    int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
    uint64_t v815 = swift_getAssociatedTypeWitness();
    uint64_t v7 = *(void *)(v815 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v6 | v8 | 7;
    uint64_t v808 = sub_24DCC8CE8();
    uint64_t v10 = *(void *)(v808 - 8);
    uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
    uint64_t v12 = v11 | 7;
    uint64_t v13 = v9 | v874 | v11;
    uint64_t v857 = v4;
    uint64_t v834 = v5;
    uint64_t v816 = v7;
    unsigned int v14 = *(_DWORD *)(v7 + 84);
    unsigned int v818 = *(_DWORD *)(v5 + 84);
    if (v818 > v14) {
      unsigned int v14 = *(_DWORD *)(v5 + 84);
    }
    unsigned int v793 = v14;
    if (v14 <= 0x7FFFFFFE) {
      unsigned int v14 = 2147483646;
    }
    unsigned int v860 = *(_DWORD *)(v4 + 84);
    unsigned int v836 = v14;
    if (v14 <= v860) {
      unsigned int v14 = *(_DWORD *)(v4 + 84);
    }
    uint64_t v835 = *(void *)(v808 - 8);
    unsigned int v15 = *(_DWORD *)(v10 + 84);
    if (v15 <= 0x7FFFFFFE) {
      unsigned int v16 = 2147483646;
    }
    else {
      unsigned int v16 = *(_DWORD *)(v10 + 84);
    }
    unsigned int v854 = v16;
    if (v14 <= v16) {
      unsigned int v14 = v16;
    }
    unsigned int v783 = v14;
    if (v14 <= 0x7FFFFFFF) {
      unsigned int v14 = 0x7FFFFFFF;
    }
    unsigned int v827 = v14;
    unsigned int v797 = *(_DWORD *)(v10 + 84);
    uint64_t v829 = v872 + v874;
    uint64_t v844 = v9;
    uint64_t v830 = v872 + v9;
    uint64_t v838 = *(void *)(v5 + 64) + 7;
    uint64_t v814 = v8 + 8;
    uint64_t v850 = v8;
    uint64_t v799 = *(void *)(v7 + 64) + 7;
    size_t v864 = ((((v799 + ((v8 + 8 + (v838 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v846 = v11 | 7;
    uint64_t v859 = v12 + 16;
    uint64_t v820 = v11 + 12;
    size_t v17 = *(void *)(v10 + 64);
    size_t v807 = v17 + v11;
    size_t v794 = v17 + 12;
    size_t v802 = v17;
    uint64_t v803 = v11 + 10;
    unint64_t v18 = (v11
         + 10
         + ((((((v17 + 12 + ((v17 + v11 + ((v11 + 12) & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v11;
    if (!v15) {
      ++v17;
    }
    size_t v828 = v17;
    unint64_t v821 = v18;
    size_t v804 = v17 + 7;
    unint64_t v856 = ((((((((((v17 + 7 + v18) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v796 = (v12 + 16 + v864 + ((v872 + v9 + ((v872 + v874) & ~v874)) & ~v9)) & ~v12;
    unint64_t v826 = v13 + v872;
    uint64_t v848 = v9 | v874 | v11;
    unint64_t v806 = ((((v796 + v856 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v19 = v806 + ((v13 + v872) & ~v13);
    unint64_t v841 = (v19 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(void *)(a3 + 24);
    uint64_t v862 = swift_getAssociatedTypeWitness();
    uint64_t v21 = *(void *)(v862 - 8);
    uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
    unint64_t v839 = (v19 + v22) & ~v22;
    uint64_t v858 = v21;
    unsigned int v23 = *(_DWORD *)(v21 + 84);
    unint64_t v24 = *(void *)(v21 + 64);
    if (v23) {
      size_t v25 = *(void *)(v21 + 64);
    }
    else {
      size_t v25 = v24 + 1;
    }
    size_t v853 = v25;
    uint64_t v831 = swift_getAssociatedTypeWitness();
    uint64_t v26 = *(void *)(v831 - 8);
    int v27 = *(_DWORD *)(v26 + 80) & 0xF8;
    uint64_t v28 = swift_getAssociatedTypeWitness();
    uint64_t v29 = v11;
    uint64_t v30 = *(void *)(v28 - 8);
    uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
    uint64_t v32 = v27 | v31 | 7;
    uint64_t v832 = v26;
    unsigned int v33 = *(_DWORD *)(v26 + 84);
    uint64_t v812 = v30;
    uint64_t v813 = v28;
    unsigned int v34 = *(_DWORD *)(v30 + 84);
    unsigned int v780 = v34;
    if (v33 > v34) {
      unsigned int v34 = *(_DWORD *)(v26 + 84);
    }
    unsigned int v792 = v34;
    if (v34 <= 0x7FFFFFFE) {
      unsigned int v35 = 2147483646;
    }
    else {
      unsigned int v35 = v34;
    }
    uint64_t v837 = *(void *)(v26 + 64) + 7;
    uint64_t v811 = v31 + 8;
    uint64_t v798 = *(void *)(*(void *)(v28 - 8) + 64) + 7;
    size_t v36 = ((((v798 + ((v31 + 8 + (v837 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v37 = ((((((v853 + v32 + v839) & ~v32) + v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    size_t v38 = v872;
    uint64_t v39 = v872 + v22;
    size_t v801 = v853 + v32;
    uint64_t v40 = *(void *)(v865 - 8);
    uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
    uint64_t v788 = v872 + v41;
    if (*(_DWORD *)(v40 + 84)) {
      uint64_t v42 = *(void *)(*(void *)(v865 - 8) + 64);
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v865 - 8) + 64) + 1;
    }
    unint64_t v43 = ((v872 + v41) & ~v41) + v42;
    unint64_t v44 = ((v841 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v872 > v44) {
      unint64_t v44 = v872;
    }
    if (v37 <= v36 + ((v853 + v32 + ((v872 + v22) & ~v22)) & ~v32) + 16) {
      unint64_t v37 = v36 + ((v853 + v32 + ((v872 + v22) & ~v22)) & ~v32) + 16;
    }
    if (((v841 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v43) {
      unint64_t v43 = ((v841 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v44 > v37) {
      unint64_t v37 = v44;
    }
    if (v37 <= v43) {
      unint64_t v45 = v43;
    }
    else {
      unint64_t v45 = v37;
    }
    uint64_t v46 = v22 | v11 | v32;
    unsigned int v840 = v23;
    if (v35 <= v23) {
      unsigned int v47 = v23;
    }
    else {
      unsigned int v47 = v35;
    }
    uint64_t v48 = v20;
    if (v47 <= v854) {
      unsigned int v47 = v854;
    }
    unsigned int v782 = v47;
    if (v47 <= 0x7FFFFFFF) {
      int v49 = 0x7FFFFFFF;
    }
    else {
      int v49 = v47;
    }
    uint64_t v855 = v22;
    uint64_t v843 = v24 + v22;
    if (!v860) {
      size_t v38 = v872 + 1;
    }
    uint64_t v50 = *(void *)(v20 - 8);
    uint64_t v51 = *(unsigned __int8 *)(v50 + 80);
    uint64_t v791 = v50;
    uint64_t v842 = v24 + v32;
    size_t v52 = (v859 + v36 + ((v24 + v32 + ((v24 + v22) & ~v22)) & ~v32)) & ~v846;
    unint64_t v824 = v46 + v24;
    unint64_t v805 = ((((v52 + v856 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v53 = v805 + ((v46 + v24) & ~v46);
    uint64_t v787 = v24 + v874;
    size_t v800 = v38 + v844;
    if (*(_DWORD *)(v50 + 84)) {
      uint64_t v54 = *(void *)(*(void *)(v20 - 8) + 64);
    }
    else {
      uint64_t v54 = *(void *)(*(void *)(v20 - 8) + 64) + 1;
    }
    if (v24 <= ((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
      unint64_t v55 = ((v53 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    else {
      unint64_t v55 = v24;
    }
    if (((((((v38 + v844 + ((v53 + v874) & ~v874)) & ~v844) + v864 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8 <= ((v38 + v844 + ((v24 + v874) & ~v874)) & ~v844) + v864 + 16)
      unint64_t v56 = ((v38 + v844 + ((v24 + v874) & ~v874)) & ~v844) + v864 + 16;
    else {
      unint64_t v56 = ((((((v38 + v844 + ((v53 + v874) & ~v874)) & ~v844) + v864 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
    }
          + 8;
    unint64_t v57 = ((v53 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v786 = v24 + v51;
    if (v57 <= ((v24 + v51) & ~v51) + v54) {
      unint64_t v57 = ((v24 + v51) & ~v51) + v54;
    }
    if (v55 <= v56) {
      unint64_t v55 = v56;
    }
    if (v55 <= v57) {
      unint64_t v58 = v57;
    }
    else {
      unint64_t v58 = v55;
    }
    if (v58 + 1 <= v45 + 1) {
      unint64_t v59 = v45 + 1;
    }
    else {
      unint64_t v59 = v58 + 1;
    }
    unsigned int v60 = a1[v59];
    unsigned int v61 = v60 - 2;
    if (v60 >= 2)
    {
      if (v59 <= 3) {
        uint64_t v62 = v59;
      }
      else {
        uint64_t v62 = 4;
      }
      switch(v62)
      {
        case 1:
          int v63 = *a1;
          if (v59 < 4) {
            goto LABEL_80;
          }
          goto LABEL_81;
        case 2:
          int v63 = *(unsigned __int16 *)a1;
          if (v59 >= 4) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 3:
          int v63 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v59 >= 4) {
            goto LABEL_81;
          }
          goto LABEL_80;
        case 4:
          int v63 = *(_DWORD *)a1;
          if (v59 < 4) {
LABEL_80:
          }
            v63 |= v61 << (8 * v59);
LABEL_81:
          unsigned int v60 = v63 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v823 = ~v848;
    uint64_t v849 = ~v874;
    uint64_t v873 = ~v844;
    uint64_t v810 = ~v850;
    uint64_t v819 = ~v846;
    uint64_t v64 = ~v11;
    uint64_t v847 = ~v22;
    uint64_t v851 = ~v32;
    uint64_t v809 = ~v31;
    uint64_t v785 = ~v41;
    uint64_t v822 = ~v46;
    uint64_t v784 = ~v51;
    unsigned int v817 = v33;
    unsigned int v845 = v35;
    int v825 = v49;
    size_t v795 = v52;
    uint64_t v778 = v39;
    size_t __n = v38;
    uint64_t v781 = *(void *)(v865 - 8);
    size_t v776 = v54;
    size_t v777 = v42;
    if (v60 == 1)
    {
      unsigned int v65 = a1[v58];
      unsigned int v66 = v65 - 8;
      if (v65 >= 8)
      {
        if (v58 <= 3) {
          uint64_t v67 = v58;
        }
        else {
          uint64_t v67 = 4;
        }
        switch(v67)
        {
          case 1:
            int v68 = *a1;
            if (v58 < 4) {
              goto LABEL_98;
            }
            goto LABEL_102;
          case 2:
            int v68 = *(unsigned __int16 *)a1;
            if (v58 < 4) {
              goto LABEL_98;
            }
            goto LABEL_102;
          case 3:
            int v68 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v58 < 4) {
              goto LABEL_98;
            }
            goto LABEL_102;
          case 4:
            int v68 = *(_DWORD *)a1;
            if (v58 < 4) {
LABEL_98:
            }
              unsigned int v65 = (v68 | (v66 << (8 * v58))) + 8;
            else {
LABEL_102:
            }
              unsigned int v65 = v68 + 8;
            break;
          default:
            break;
        }
      }
      switch(v65)
      {
        case 1u:
          unint64_t v767 = v45;
          int v90 = *(void (**)(unsigned __int8 *, uint64_t))(v858 + 8);
          v90(a1, v862);
          unint64_t v91 = (unint64_t)&a1[v824] & v822;
          if (v840 == v825)
          {
            uint64_t v92 = *(uint64_t (**)(unint64_t))(v858 + 48);
            unint64_t v93 = (unint64_t)&a1[v824] & v822;
            goto LABEL_123;
          }
          unint64_t v95 = (v843 + v91) & v847;
          unint64_t v96 = (v842 + v95) & v851;
          if (v845 == v825)
          {
            if (v817 == v845)
            {
              uint64_t v92 = *(uint64_t (**)(unint64_t))(v832 + 48);
              unint64_t v93 = (v842 + v95) & v851;
              goto LABEL_123;
            }
            uint64_t v297 = (unint64_t *)((v837 + v96) & 0xFFFFFFFFFFFFFFF8);
            if (v792 <= 0x7FFFFFFE)
            {
              unint64_t v298 = *v297;
              goto LABEL_667;
            }
            unint64_t v93 = ((unint64_t)v297 + v811) & v809;
            uint64_t v92 = *(uint64_t (**)(unint64_t))(v812 + 48);
          }
          else
          {
            size_t v190 = v36 + v96;
            if ((v782 & 0x80000000) == 0)
            {
              unint64_t v191 = *(void *)(v190 + 8);
              if (v191 >= 0xFFFFFFFF) {
                LODWORD(v191) = -1;
              }
              if (v191 == -1)
              {
LABEL_124:
                unint64_t v95 = (v843 + v91) & v847;
                unint64_t v96 = (v842 + v95) & v851;
LABEL_125:
                unint64_t v762 = v91;
                v90((unsigned __int8 *)v91, v862);
                v90((unsigned __int8 *)v95, v862);
                (*(void (**)(unint64_t, uint64_t))(v832 + 8))(v96, v831);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v812 + 8))((v811 + ((v837 + v96) & 0xFFFFFFFFFFFFFFF8)) & v809, v813);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v97 = (v859 + v36 + v96) & v819;
                uint64_t v98 = *(void (**)(size_t, uint64_t))(v835 + 8);
                v98((v820 + v97) & v64, v808);
                size_t v99 = (v807 + ((v820 + v97) & v64)) & v64;
                v98(v99, v808);
                swift_bridgeObjectRelease();
                unint64_t v100 = (v803
                      + ((((((v794 + v99) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v64;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v835 + 48))(v100, 1, v808)) {
                  v98(v100, v808);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v101 = (uint64_t *)((((((v804 + v100) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v102 = v101[1];
                if ((v102 & 0x3000000000000000) == 0) {
                  sub_24D400DCC(*v101, v102);
                }
                swift_bridgeObjectRelease();
                size_t v103 = v97 + v856;
                unint64_t v104 = *(void **)(v103 + 16);
                LODWORD(v105) = -1;
                if ((unint64_t)v104 < 0xFFFFFFFF) {
                  uint64_t v105 = *(void *)(v103 + 16);
                }
                uint64_t v64 = ~v29;
                if ((int)v105 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v103 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_24D466534(*(void *)((((v103 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v103 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                unint64_t v91 = v762;
              }
LABEL_136:
              unint64_t v106 = (v91 + v874 + v805) & v849;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v857 + 48))(v106, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v857 + 8))(v106, AssociatedTypeWitness); {
              unint64_t v107 = (v800 + v106) & v873;
              }
              unint64_t v45 = v767;
              if (v818 == v836)
              {
                int v108 = (*(uint64_t (**)(unint64_t))(v834 + 48))(v107);
              }
              else
              {
                unint64_t v180 = (uint64_t *)((v838 + v107) & 0xFFFFFFFFFFFFFFF8);
                if (v793 <= 0x7FFFFFFE)
                {
                  uint64_t v181 = *v180;
                  if ((unint64_t)*v180 >= 0xFFFFFFFF) {
                    LODWORD(v181) = -1;
                  }
                  if ((v181 + 1) >= 2) {
                    goto LABEL_282;
                  }
                  goto LABEL_281;
                }
                int v108 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v180 + v814) & v810);
              }
              if (v108)
              {
LABEL_282:
                size_t v192 = v107 + v864;
                goto LABEL_308;
              }
              unint64_t v180 = (uint64_t *)((v838 + v107) & 0xFFFFFFFFFFFFFFF8);
LABEL_281:
              (*(void (**)(unint64_t, uint64_t))(v834 + 8))(v107, v833);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v816 + 8))(((unint64_t)v180 + v814) & v810, v815);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_282;
            }
            unint64_t v93 = (v820 + ((v859 + v190) & v819)) & v64;
            if (v797 <= 0x7FFFFFFD)
            {
              unint64_t v298 = *(void *)(((v794 + ((v807 + v93) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_667:
              if (v298 >= 0xFFFFFFFF) {
                LODWORD(v298) = -1;
              }
              if ((v298 + 1) < 2) {
                goto LABEL_125;
              }
              goto LABEL_136;
            }
            uint64_t v92 = *(uint64_t (**)(unint64_t))(v835 + 48);
          }
LABEL_123:
          int v94 = v92(v93);
          unint64_t v91 = (unint64_t)&a1[v824] & v822;
          if (v94) {
            goto LABEL_136;
          }
          goto LABEL_124;
        case 2u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v858 + 8))(a1, v862);
          unint64_t v109 = (unint64_t)&a1[v787] & v849;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v857 + 48))(v109, 1, AssociatedTypeWitness))(*(void (**)(unint64_t, uint64_t))(v857 + 8))(v109, AssociatedTypeWitness); {
          unint64_t v110 = (v800 + v109) & v873;
          }
          if (v818 == v836)
          {
            int v111 = (*(uint64_t (**)(unint64_t))(v834 + 48))(v110);
LABEL_284:
            if (v111) {
              goto LABEL_287;
            }
            unint64_t v182 = (uint64_t *)((v838 + v110) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_286;
          }
          unint64_t v182 = (uint64_t *)((v838 + v110) & 0xFFFFFFFFFFFFFFF8);
          if (v793 > 0x7FFFFFFE)
          {
            int v111 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v182 + v814) & v810);
            goto LABEL_284;
          }
          uint64_t v183 = *v182;
          if ((unint64_t)*v182 >= 0xFFFFFFFF) {
            LODWORD(v183) = -1;
          }
          if ((v183 + 1) < 2)
          {
LABEL_286:
            (*(void (**)(unint64_t, uint64_t))(v834 + 8))(v110, v833);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v816 + 8))(((unint64_t)v182 + v814) & v810, v815);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_287:
          size_t v193 = v110 + v864;
          goto LABEL_314;
        case 3u:
          size_t v789 = v36;
          unint64_t v766 = v45;
          uint64_t v772 = ~v29;
          size_t v112 = *(void (**)(unsigned __int8 *, uint64_t))(v858 + 8);
          v112(a1, v862);
          unint64_t v113 = (unint64_t)&a1[v824] & v822;
          if (v840 == v825)
          {
            char v114 = *(uint64_t (**)(unint64_t))(v858 + 48);
            unint64_t v115 = (unint64_t)&a1[v824] & v822;
            goto LABEL_146;
          }
          unint64_t v117 = (v843 + v113) & v847;
          unint64_t v118 = (v842 + v117) & v851;
          if (v845 == v825)
          {
            if (v817 == v845)
            {
              char v114 = *(uint64_t (**)(unint64_t))(v832 + 48);
              unint64_t v115 = (v842 + v117) & v851;
              goto LABEL_146;
            }
            unint64_t v299 = (unint64_t *)((v837 + v118) & 0xFFFFFFFFFFFFFFF8);
            if (v792 <= 0x7FFFFFFE)
            {
              unint64_t v300 = *v299;
              goto LABEL_612;
            }
            unint64_t v115 = ((unint64_t)v299 + v811) & v809;
            char v114 = *(uint64_t (**)(unint64_t))(v812 + 48);
          }
          else
          {
            size_t v194 = v36 + v118;
            if ((v782 & 0x80000000) == 0)
            {
              unint64_t v195 = *(void *)(v194 + 8);
              if (v195 >= 0xFFFFFFFF) {
                LODWORD(v195) = -1;
              }
              if (v195 == -1)
              {
LABEL_147:
                unint64_t v117 = (v843 + v113) & v847;
                unint64_t v118 = (v842 + v117) & v851;
LABEL_148:
                v112((unsigned __int8 *)v113, v862);
                v112((unsigned __int8 *)v117, v862);
                (*(void (**)(unint64_t, uint64_t))(v832 + 8))(v118, v831);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v812 + 8))((v811 + ((v837 + v118) & 0xFFFFFFFFFFFFFFF8)) & v809, v813);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v119 = (v859 + v36 + v118) & v819;
                uint64_t v120 = *(void (**)(size_t, uint64_t))(v835 + 8);
                v120((v820 + v119) & v772, v808);
                size_t v121 = (v807 + ((v820 + v119) & v772)) & v772;
                v120(v121, v808);
                swift_bridgeObjectRelease();
                unint64_t v122 = (v803
                      + ((((((v794 + v121) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v772;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v835 + 48))(v122, 1, v808)) {
                  v120(v122, v808);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                int v123 = (uint64_t *)((((((v804 + v122) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v124 = v123[1];
                if ((v124 & 0x3000000000000000) == 0) {
                  sub_24D400DCC(*v123, v124);
                }
                swift_bridgeObjectRelease();
                size_t v125 = v119 + v856;
                int v126 = *(void **)(v125 + 16);
                LODWORD(v127) = -1;
                if ((unint64_t)v126 < 0xFFFFFFFF) {
                  uint64_t v127 = *(void *)(v125 + 16);
                }
                if ((int)v127 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v125 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_24D466534(*(void *)((((v125 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v125 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                goto LABEL_226;
              }
              goto LABEL_226;
            }
            unint64_t v115 = (v820 + ((v859 + v194) & v819)) & v772;
            if (v797 <= 0x7FFFFFFD)
            {
              unint64_t v300 = *(void *)(((v794 + ((v807 + v115) & v772)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_612:
              if (v300 >= 0xFFFFFFFF) {
                LODWORD(v300) = -1;
              }
              if ((v300 + 1) < 2) {
                goto LABEL_148;
              }
              goto LABEL_226;
            }
            char v114 = *(uint64_t (**)(unint64_t))(v835 + 48);
          }
LABEL_146:
          int v116 = v114(v115);
          unint64_t v113 = (unint64_t)&a1[v824] & v822;
          if (v116) {
            goto LABEL_226;
          }
          goto LABEL_147;
        case 4u:
        case 5u:
        case 7u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v858 + 8))(a1, v862);
          goto LABEL_316;
        case 6u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v858 + 8))(a1, v862);
          unint64_t v128 = (unint64_t)&a1[v786] & v784;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v791 + 48))(v128, 1, v20)) {
            (*(void (**)(unint64_t, uint64_t))(v791 + 8))(v128, v20);
          }
          goto LABEL_316;
        default:
          size_t v789 = v36;
          unint64_t v766 = v45;
          uint64_t v772 = ~v29;
          unsigned int v73 = *(void (**)(unsigned __int8 *, uint64_t))(v858 + 8);
          v73(a1, v862);
          unint64_t v74 = (unint64_t)&a1[v824] & v822;
          if (v840 == v825)
          {
            uint64_t v75 = *(uint64_t (**)(unint64_t))(v858 + 48);
            unint64_t v76 = (unint64_t)&a1[v824] & v822;
            goto LABEL_107;
          }
          unint64_t v78 = (v843 + v74) & v847;
          unint64_t v79 = (v842 + v78) & v851;
          if (v845 == v825)
          {
            if (v817 == v845)
            {
              uint64_t v75 = *(uint64_t (**)(unint64_t))(v832 + 48);
              unint64_t v76 = (v842 + v78) & v851;
              goto LABEL_107;
            }
            uint64_t v295 = (unint64_t *)((v837 + v79) & 0xFFFFFFFFFFFFFFF8);
            if (v792 <= 0x7FFFFFFE)
            {
              unint64_t v296 = *v295;
              goto LABEL_662;
            }
            unint64_t v76 = ((unint64_t)v295 + v811) & v809;
            uint64_t v75 = *(uint64_t (**)(unint64_t))(v812 + 48);
          }
          else
          {
            size_t v188 = v36 + v79;
            if ((v782 & 0x80000000) == 0)
            {
              unint64_t v189 = *(void *)(v188 + 8);
              if (v189 >= 0xFFFFFFFF) {
                LODWORD(v189) = -1;
              }
              if (v189 == -1)
              {
LABEL_108:
                unint64_t v78 = (v843 + v74) & v847;
                unint64_t v79 = (v842 + v78) & v851;
LABEL_109:
                unint64_t v761 = v74;
                v73((unsigned __int8 *)v74, v862);
                v73((unsigned __int8 *)v78, v862);
                (*(void (**)(unint64_t, uint64_t))(v832 + 8))(v79, v831);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v812 + 8))((v811 + ((v837 + v79) & 0xFFFFFFFFFFFFFFF8)) & v809, v813);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                size_t v80 = (v859 + v36 + v79) & v819;
                uint64_t v81 = *(void (**)(size_t, uint64_t))(v835 + 8);
                v81((v820 + v80) & v772, v808);
                size_t v82 = (v807 + ((v820 + v80) & v772)) & v772;
                v81(v82, v808);
                swift_bridgeObjectRelease();
                unint64_t v83 = (v803
                     + ((((((v794 + v82) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v772;
                if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v835 + 48))(v83, 1, v808)) {
                  v81(v83, v808);
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                int v84 = (uint64_t *)((((((v804 + v83) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v85 = v84[1];
                if ((v85 & 0x3000000000000000) == 0) {
                  sub_24D400DCC(*v84, v85);
                }
                swift_bridgeObjectRelease();
                size_t v86 = v80 + v856;
                uint64_t v87 = *(void **)(v86 + 16);
                LODWORD(v88) = -1;
                if ((unint64_t)v87 < 0xFFFFFFFF) {
                  uint64_t v88 = *(void *)(v86 + 16);
                }
                if ((int)v88 - 1 < 0)
                {

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();

                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  if (*(void *)(v86 + 192))
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                sub_24D466534(*(void *)((((v86 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v86 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
                unint64_t v74 = v761;
                goto LABEL_120;
              }
              goto LABEL_120;
            }
            unint64_t v76 = (v820 + ((v859 + v188) & v819)) & v772;
            if (v797 <= 0x7FFFFFFD)
            {
              unint64_t v296 = *(void *)(((v794 + ((v807 + v76) & v772)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_662:
              if (v296 >= 0xFFFFFFFF) {
                LODWORD(v296) = -1;
              }
              if ((v296 + 1) < 2) {
                goto LABEL_109;
              }
LABEL_120:
              unint64_t v89 = v74 + v805;
LABEL_187:

LABEL_227:
              unint64_t v45 = v766;
              uint64_t v64 = v772;
              size_t v36 = v789;
              goto LABEL_316;
            }
            uint64_t v75 = *(uint64_t (**)(unint64_t))(v835 + 48);
          }
LABEL_107:
          int v77 = v75(v76);
          unint64_t v74 = (unint64_t)&a1[v824] & v822;
          if (v77) {
            goto LABEL_120;
          }
          goto LABEL_108;
      }
    }
    unsigned int v69 = a1[v45];
    unsigned int v70 = v69 - 8;
    if (v69 >= 8)
    {
      if (v45 <= 3) {
        uint64_t v71 = v45;
      }
      else {
        uint64_t v71 = 4;
      }
      switch(v71)
      {
        case 1:
          int v72 = *a1;
          if (v45 < 4) {
            goto LABEL_163;
          }
          goto LABEL_167;
        case 2:
          int v72 = *(unsigned __int16 *)a1;
          if (v45 < 4) {
            goto LABEL_163;
          }
          goto LABEL_167;
        case 3:
          int v72 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v45 < 4) {
            goto LABEL_163;
          }
          goto LABEL_167;
        case 4:
          int v72 = *(_DWORD *)a1;
          if (v45 < 4) {
LABEL_163:
          }
            unsigned int v69 = (v72 | (v70 << (8 * v45))) + 8;
          else {
LABEL_167:
          }
            unsigned int v69 = v72 + 8;
          break;
        default:
          break;
      }
    }
    switch(v69)
    {
      case 1u:
        unint64_t v768 = v45;
        unint64_t v143 = *(void (**)(unsigned __int8 *, uint64_t))(v857 + 8);
        v143(a1, AssociatedTypeWitness);
        unint64_t v144 = (unint64_t)&a1[v826] & v823;
        if (v860 == v827)
        {
          uint64_t v145 = *(uint64_t (**)(unint64_t))(v857 + 48);
          unint64_t v146 = (unint64_t)&a1[v826] & v823;
          goto LABEL_190;
        }
        unint64_t v148 = (v829 + v144) & v849;
        unint64_t v149 = (v830 + v148) & v873;
        if (v836 == v827)
        {
          if (v818 == v836)
          {
            uint64_t v145 = *(uint64_t (**)(unint64_t))(v834 + 48);
            unint64_t v146 = (v830 + v148) & v873;
            goto LABEL_190;
          }
          uint64_t v303 = (unint64_t *)((v838 + v149) & 0xFFFFFFFFFFFFFFF8);
          if (v793 <= 0x7FFFFFFE)
          {
            unint64_t v304 = *v303;
            goto LABEL_622;
          }
          unint64_t v146 = ((unint64_t)v303 + v814) & v810;
          uint64_t v145 = *(uint64_t (**)(unint64_t))(v816 + 48);
        }
        else
        {
          size_t v198 = v864 + v149;
          if ((v783 & 0x80000000) == 0)
          {
            unint64_t v199 = *(void *)(v198 + 8);
            if (v199 >= 0xFFFFFFFF) {
              LODWORD(v199) = -1;
            }
            if (v199 == -1)
            {
LABEL_191:
              unint64_t v148 = (v829 + v144) & v849;
              unint64_t v149 = (v830 + v148) & v873;
LABEL_192:
              unint64_t v763 = v144;
              v143((unsigned __int8 *)v144, AssociatedTypeWitness);
              v143((unsigned __int8 *)v148, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v834 + 8))(v149, v833);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v816 + 8))((v814 + ((v838 + v149) & 0xFFFFFFFFFFFFFFF8)) & v810, v815);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              size_t v150 = (v859 + v864 + v149) & v819;
              uint64_t v151 = *(void (**)(size_t, uint64_t))(v835 + 8);
              v151((v820 + v150) & v64, v808);
              size_t v152 = (v807 + ((v820 + v150) & v64)) & v64;
              v151(v152, v808);
              swift_bridgeObjectRelease();
              unint64_t v153 = (v803
                    + ((((((v794 + v152) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v64;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v835 + 48))(v153, 1, v808)) {
                v151(v153, v808);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v154 = (uint64_t *)((((((v804 + v153) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v155 = v154[1];
              if ((v155 & 0x3000000000000000) == 0) {
                sub_24D400DCC(*v154, v155);
              }
              swift_bridgeObjectRelease();
              unint64_t v156 = v856 + v150;
              unint64_t v157 = *(void **)(v156 + 16);
              LODWORD(v158) = -1;
              if ((unint64_t)v157 < 0xFFFFFFFF) {
                uint64_t v158 = *(void *)(v156 + 16);
              }
              uint64_t v64 = ~v29;
              if ((int)v158 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v156 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_24D466534(*(void *)((((v156 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v156 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              unint64_t v144 = v763;
            }
LABEL_203:
            unint64_t v159 = (v144 + v22 + v806) & v847;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v858 + 48))(v159, 1, v862)) {
              (*(void (**)(unint64_t, uint64_t))(v858 + 8))(v159, v862);
            }
            size_t v160 = (v801 + v159) & v851;
            if (v817 == v845)
            {
              int v161 = (*(uint64_t (**)(size_t))(v832 + 48))(v160);
              unint64_t v45 = v768;
            }
            else
            {
              unint64_t v184 = (uint64_t *)((v837 + v160) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v45 = v768;
              if (v792 <= 0x7FFFFFFE)
              {
                uint64_t v185 = *v184;
                if ((unint64_t)*v184 >= 0xFFFFFFFF) {
                  LODWORD(v185) = -1;
                }
                if ((v185 + 1) >= 2) {
                  goto LABEL_307;
                }
                goto LABEL_306;
              }
              int v161 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v812 + 48))(((unint64_t)v184 + v811) & v809, v780, v813);
            }
            if (v161) {
              goto LABEL_307;
            }
            unint64_t v184 = (uint64_t *)((v837 + v160) & 0xFFFFFFFFFFFFFFF8);
LABEL_306:
            (*(void (**)(size_t, uint64_t))(v832 + 8))(v160, v831);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v812 + 8))(((unint64_t)v184 + v811) & v809, v813);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_307:
            size_t v192 = v160 + v36;
LABEL_308:
            unint64_t v200 = *(void **)((((v192 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_315;
          }
          unint64_t v146 = (v820 + ((v859 + v198) & v819)) & v64;
          if (v797 <= 0x7FFFFFFD)
          {
            unint64_t v304 = *(void *)(((v794 + ((v807 + v146) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_622:
            if (v304 >= 0xFFFFFFFF) {
              LODWORD(v304) = -1;
            }
            if ((v304 + 1) < 2) {
              goto LABEL_192;
            }
            goto LABEL_203;
          }
          uint64_t v145 = *(uint64_t (**)(unint64_t))(v835 + 48);
        }
LABEL_190:
        int v147 = v145(v146);
        unint64_t v144 = (unint64_t)&a1[v826] & v823;
        if (v147) {
          goto LABEL_203;
        }
        goto LABEL_191;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v857 + 8))(a1, AssociatedTypeWitness);
        unint64_t v162 = (unint64_t)&a1[v39] & v847;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v858 + 48))(v162, 1, v862)) {
          (*(void (**)(unint64_t, uint64_t))(v858 + 8))(v162, v862);
        }
        size_t v163 = (v801 + v162) & v851;
        if (v817 == v845)
        {
          int v164 = (*(uint64_t (**)(size_t))(v832 + 48))(v163);
        }
        else
        {
          unint64_t v186 = (uint64_t *)((v837 + v163) & 0xFFFFFFFFFFFFFFF8);
          if (v792 <= 0x7FFFFFFE)
          {
            uint64_t v187 = *v186;
            if ((unint64_t)*v186 >= 0xFFFFFFFF) {
              LODWORD(v187) = -1;
            }
            if ((v187 + 1) >= 2)
            {
LABEL_313:
              size_t v193 = v36 + v163;
LABEL_314:
              unint64_t v200 = *(void **)(v193 + 8);
LABEL_315:

LABEL_316:
              unsigned int v201 = a2[v59];
              unsigned int v202 = v201 - 2;
              if (v201 >= 2)
              {
                if (v59 <= 3) {
                  uint64_t v203 = v59;
                }
                else {
                  uint64_t v203 = 4;
                }
                switch(v203)
                {
                  case 1:
                    int v204 = *a2;
                    if (v59 >= 4) {
                      goto LABEL_336;
                    }
                    goto LABEL_324;
                  case 2:
                    int v204 = *(unsigned __int16 *)a2;
                    if (v59 < 4) {
                      goto LABEL_324;
                    }
                    goto LABEL_336;
                  case 3:
                    int v204 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                    if (v59 < 4) {
                      goto LABEL_324;
                    }
                    goto LABEL_336;
                  case 4:
                    int v204 = *(_DWORD *)a2;
                    if (v59 >= 4)
                    {
LABEL_336:
                      if (v204 != -1)
                      {
LABEL_337:
                        unsigned int v209 = a2[v45];
                        unsigned int v210 = v209 - 8;
                        if (v209 < 8)
                        {
                          uint64_t v212 = v865;
                        }
                        else
                        {
                          if (v45 <= 3) {
                            uint64_t v211 = v45;
                          }
                          else {
                            uint64_t v211 = 4;
                          }
                          uint64_t v212 = v865;
                          switch(v211)
                          {
                            case 1:
                              int v213 = *a2;
                              if (v45 < 4) {
                                goto LABEL_367;
                              }
                              goto LABEL_371;
                            case 2:
                              int v213 = *(unsigned __int16 *)a2;
                              if (v45 < 4) {
                                goto LABEL_367;
                              }
                              goto LABEL_371;
                            case 3:
                              int v213 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                              if (v45 < 4) {
                                goto LABEL_367;
                              }
                              goto LABEL_371;
                            case 4:
                              int v213 = *(_DWORD *)a2;
                              if (v45 < 4) {
LABEL_367:
                              }
                                unsigned int v209 = (v213 | (v210 << (8 * v45))) + 8;
                              else {
LABEL_371:
                              }
                                unsigned int v209 = v213 + 8;
                              break;
                            default:
                              break;
                          }
                        }
                        switch(v209)
                        {
                          case 1u:
                            size_t v790 = v36;
                            uint64_t v237 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v857 + 32);
                            v237(a1, a2, AssociatedTypeWitness);
                            unint64_t v878 = (void *)((unint64_t)&a1[v826] & v823);
                            int v238 = (void *)((unint64_t)&a2[v826] & v823);
                            if (v860 == v827)
                            {
                              int v239 = (*(uint64_t (**)(unint64_t))(v857 + 48))((unint64_t)&a2[v826] & v823);
LABEL_577:
                              if (v239)
                              {
LABEL_578:
                                unint64_t v613 = (unint64_t)&a1[v826] & v823;
                                memcpy(v878, v238, v806);
                                unint64_t v614 = v821;
                                uint64_t v615 = v796;
                                goto LABEL_579;
                              }
                              unint64_t v255 = ((unint64_t)v238 + v829) & v849;
                              unint64_t v256 = (v830 + v255) & v873;
LABEL_581:
                              unint64_t v770 = v45;
                              unint64_t v870 = v59;
                              v237((unsigned __int8 *)v878, (unsigned __int8 *)v238, AssociatedTypeWitness);
                              unint64_t v617 = ((unint64_t)v878 + v829) & v849;
                              v237((unsigned __int8 *)v617, (unsigned __int8 *)v255, AssociatedTypeWitness);
                              unint64_t v618 = (v830 + v617) & v873;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v834 + 32))(v618, v256, v833);
                              size_t v619 = (void *)((v838 + v618) & 0xFFFFFFFFFFFFFFF8);
                              size_t v620 = (void *)((v838 + v256) & 0xFFFFFFFFFFFFFFF8);
                              *size_t v619 = *v620;
                              unint64_t v621 = ((unint64_t)v619 + v814) & v810;
                              uint64_t v622 = v64;
                              unint64_t v623 = ((unint64_t)v620 + v814) & v810;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v816 + 32))(v621, v623, v815);
                              unint64_t v624 = (void *)((v799 + v621) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v625 = (void *)((v799 + v623) & 0xFFFFFFFFFFFFFFF8);
                              void *v624 = *v625;
                              *(_OWORD *)(((unint64_t)v624 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v625 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *(_OWORD *)(v864 + v618) = *(_OWORD *)(v864 + v256);
                              size_t v626 = (v859 + v864 + v618) & v819;
                              size_t v627 = (v859 + v864 + v256) & v819;
                              *(unsigned char *)size_t v626 = *(unsigned char *)v627;
                              uint64_t v628 = v626 | 4;
                              int v629 = *(_DWORD *)(v627 | 4);
                              *(unsigned char *)(v628 + 4) = *(unsigned char *)((v627 | 4) + 4);
                              *(_DWORD *)uint64_t v628 = v629;
                              *(_WORD *)(v626 + 10) = *(_WORD *)(v627 + 0xA);
                              v630 = *(void (**)(size_t, size_t, uint64_t))(v835 + 32);
                              v630((v820 + v626) & v622, (v820 + v627) & v622, v808);
                              size_t v631 = (v807 + ((v820 + v626) & v622)) & v622;
                              size_t v632 = (v807 + ((v820 + v627) & v622)) & v622;
                              v630(v631, v632, v808);
                              size_t v616 = v802;
                              long long v633 = (unsigned char *)(v631 + v802);
                              unsigned char *v633 = *(unsigned char *)(v632 + v802);
                              v633[1] = *(unsigned char *)(v632 + v802 + 1);
                              v633[2] = *(unsigned char *)(v632 + v802 + 2);
                              v633[3] = *(unsigned char *)(v632 + v802 + 3);
                              v633[4] = *(unsigned char *)(v632 + v802 + 4);
                              unint64_t v634 = (v631 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v635 = (v632 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(_OWORD *)unint64_t v634 = *(_OWORD *)v635;
                              *(unsigned char *)(v634 + 16) = *(unsigned char *)(v635 + 16);
                              *(unsigned char *)(v634 + 17) = *(unsigned char *)(v635 + 17);
                              *(unsigned char *)(v634 + 18) = *(unsigned char *)(v635 + 18);
                              *(unsigned char *)(v634 + 19) = *(unsigned char *)(v635 + 19);
                              unint64_t v636 = (v634 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v637 = (v635 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v636 = *(void *)v637;
                              *(unsigned char *)(v636 + 8) = *(unsigned char *)(v637 + 8);
                              *(unsigned char *)(v636 + 9) = *(unsigned char *)(v637 + 9);
                              *(unsigned char *)(v636 + 10) = *(unsigned char *)(v637 + 10);
                              *(unsigned char *)(v636 + 11) = *(unsigned char *)(v637 + 11);
                              *(unsigned char *)(v636 + 12) = *(unsigned char *)(v637 + 12);
                              long long v638 = (void *)((v635 + 47) & 0xFFFFFFFFFFFFFFF8);
                              long long v639 = (void *)((v634 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *long long v639 = *v638;
                              unint64_t v640 = ((unint64_t)v639 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v641 = ((unint64_t)v638 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v640 = *(void *)v641;
                              *(unsigned char *)(v640 + 8) = *(unsigned char *)(v641 + 8);
                              *(unsigned char *)(v640 + 9) = *(unsigned char *)(v641 + 9);
                              unint64_t v642 = (void *)((v803 + v640) & v622);
                              uint64_t v643 = (const void *)((v803 + v641) & v622);
                              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v835 + 48))(v643, 1, v808))
                              {
                                memcpy(v642, v643, v828);
                              }
                              else
                              {
                                v630((size_t)v642, (size_t)v643, v808);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v835 + 56))(v642, 0, 1, v808);
                              }
                              unint64_t v59 = v870;
                              unint64_t v614 = v821;
                              uint64_t v615 = v796;
                              unint64_t v613 = (unint64_t)&a1[v826] & v823;
                              unint64_t v644 = (void *)(((unint64_t)v642 + v804) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v645 = (void *)(((unint64_t)v643 + v804) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v644 = *v645;
                              unint64_t v646 = ((unint64_t)v644 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v647 = ((unint64_t)v645 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v648 = *(void *)v647;
                              *(unsigned char *)(v646 + 8) = *(unsigned char *)(v647 + 8);
                              *(void *)unint64_t v646 = v648;
                              long long v649 = (void *)(((unint64_t)v644 + 31) & 0xFFFFFFFFFFFFFFF8);
                              long long v650 = (void *)(((unint64_t)v645 + 31) & 0xFFFFFFFFFFFFFFF8);
                              void *v649 = *v650;
                              long long v651 = (_OWORD *)(((unint64_t)v649 + 15) & 0xFFFFFFFFFFFFFFF8);
                              long long v652 = (_OWORD *)(((unint64_t)v650 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *long long v651 = *v652;
                              unint64_t v653 = ((unint64_t)v651 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v654 = ((unint64_t)v652 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v655 = *(void *)v654;
                              *(unsigned char *)(v653 + 8) = *(unsigned char *)(v654 + 8);
                              *(void *)unint64_t v653 = v655;
                              *(unsigned char *)(v653 + 9) = *(unsigned char *)(v654 + 9);
                              unint64_t v656 = (v653 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v657 = (v654 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              LODWORD(v648) = *(_DWORD *)v657;
                              *(unsigned char *)(v656 + 4) = *(unsigned char *)(v657 + 4);
                              *(_DWORD *)unint64_t v656 = v648;
                              *(_OWORD *)((v653 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v654 + 25) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v658 = v856 + v626;
                              long long v659 = *(_OWORD *)(v856 + v627 + 112);
                              long long v661 = *(_OWORD *)(v856 + v627 + 64);
                              long long v660 = *(_OWORD *)(v856 + v627 + 80);
                              *(_OWORD *)(v658 + 96) = *(_OWORD *)(v856 + v627 + 96);
                              *(_OWORD *)(v658 + 112) = v659;
                              *(_OWORD *)(v658 + 64) = v661;
                              *(_OWORD *)(v658 + 80) = v660;
                              long long v662 = *(_OWORD *)(v856 + v627 + 176);
                              long long v664 = *(_OWORD *)(v856 + v627 + 128);
                              long long v663 = *(_OWORD *)(v856 + v627 + 144);
                              *(_OWORD *)(v658 + 160) = *(_OWORD *)(v856 + v627 + 160);
                              *(_OWORD *)(v658 + 176) = v662;
                              *(_OWORD *)(v658 + 128) = v664;
                              *(_OWORD *)(v658 + 144) = v663;
                              long long v666 = *(_OWORD *)(v856 + v627 + 208);
                              long long v665 = *(_OWORD *)(v856 + v627 + 224);
                              long long v667 = *(_OWORD *)(v856 + v627 + 192);
                              *(void *)(v658 + 240) = *(void *)(v856 + v627 + 240);
                              *(_OWORD *)(v658 + 208) = v666;
                              *(_OWORD *)(v658 + 224) = v665;
                              *(_OWORD *)(v658 + 192) = v667;
                              long long v668 = *(_OWORD *)(v856 + v627);
                              long long v669 = *(_OWORD *)(v856 + v627 + 16);
                              long long v670 = *(_OWORD *)(v856 + v627 + 48);
                              *(_OWORD *)(v658 + 32) = *(_OWORD *)(v856 + v627 + 32);
                              *(_OWORD *)(v658 + 48) = v670;
                              *(_OWORD *)unint64_t v658 = v668;
                              *(_OWORD *)(v658 + 16) = v669;
                              unint64_t v671 = (_OWORD *)((v856 + v626 + 255) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v672 = (long long *)((v856 + v627 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v673 = *v672;
                              *(_OWORD *)((char *)v671 + 9) = *(long long *)((char *)v672 + 9);
                              *unint64_t v671 = v673;
                              unint64_t v674 = (v856 + v626 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v675 = (v856 + v627 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v676 = *(_OWORD *)v675;
                              *(unsigned char *)(v674 + 16) = *(unsigned char *)(v675 + 16);
                              *(_OWORD *)unint64_t v674 = v676;
                              size_t v677 = (void *)((v856 + v626 + 311) & 0xFFFFFFFFFFFFFFF8);
                              size_t v678 = (void *)((v856 + v627 + 311) & 0xFFFFFFFFFFFFFFF8);
                              *size_t v677 = *v678;
                              *(_OWORD *)(((unint64_t)v677 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v678 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v45 = v770;
                              if (v797)
                              {
LABEL_585:
                                unint64_t v679 = ((((v615
                                         + ((((((((((v614 + v616 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                size_t v680 = (void *)((v613 + v855 + v679) & v847);
                                size_t v681 = (const void *)(((unint64_t)v238 + v855 + v679) & v847);
                                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v858 + 48))(v681, 1, v862))
                                {
                                  memcpy(v680, v681, v853);
                                }
                                else
                                {
                                  (*(void (**)(void *, const void *, uint64_t))(v858 + 32))(v680, v681, v862);
                                  (*(void (**)(void *, void, uint64_t, uint64_t))(v858 + 56))(v680, 0, 1, v862);
                                }
                                unsigned int v682 = (char *)(((unint64_t)v680 + v801) & v851);
                                unsigned int v683 = (char *)(((unint64_t)v681 + v801) & v851);
                                if (v817 == v845)
                                {
                                  int v684 = (*(uint64_t (**)(char *))(v832 + 48))(v683);
                                }
                                else
                                {
                                  unsigned int v685 = (uint64_t *)((unint64_t)&v683[v837] & 0xFFFFFFFFFFFFFFF8);
                                  if (v792 <= 0x7FFFFFFE)
                                  {
                                    uint64_t v686 = *v685;
                                    if ((unint64_t)*v685 >= 0xFFFFFFFF) {
                                      LODWORD(v686) = -1;
                                    }
                                    if ((v686 + 1) >= 2) {
                                      goto LABEL_597;
                                    }
                                    goto LABEL_599;
                                  }
                                  int v684 = (*(uint64_t (**)(unint64_t))(v812 + 48))(((unint64_t)v685
                                                                                                  + v811) & v809);
                                }
                                if (v684)
                                {
LABEL_597:
                                  size_t v687 = v790;
                                  memcpy(v682, v683, v790);
LABEL_600:
                                  char v229 = 0;
                                  *(void *)&v682[v687] = *(void *)&v683[v687];
                                  uint64_t v692 = (void *)((unint64_t)&v682[v687 + 15] & 0xFFFFFFFFFFFFFFF8);
                                  uint64_t v693 = (void *)((unint64_t)&v683[v687 + 15] & 0xFFFFFFFFFFFFFFF8);
                                  void *v692 = *v693;
                                  *(void *)(((unint64_t)v692 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v693 + 15) & 0xFFFFFFFFFFFFFFF8);
                                  char v230 = 1;
                                  goto LABEL_459;
                                }
                                unsigned int v685 = (uint64_t *)((unint64_t)&v683[v837] & 0xFFFFFFFFFFFFFFF8);
LABEL_599:
                                (*(void (**)(char *, char *, uint64_t))(v832 + 32))(v682, v683, v831);
                                uint64_t v688 = (void *)((unint64_t)&v682[v837] & 0xFFFFFFFFFFFFFFF8);
                                *uint64_t v688 = *v685;
                                unint64_t v689 = ((unint64_t)v688 + v811) & v809;
                                (*(void (**)(unint64_t, unint64_t, uint64_t))(v812 + 32))(v689, ((unint64_t)v685 + v811) & v809, v813);
                                uint64_t v690 = (void *)((v798 + v689) & 0xFFFFFFFFFFFFFFF8);
                                uint64_t v691 = (void *)((v798 + (((unint64_t)v685 + v811) & v809)) & 0xFFFFFFFFFFFFFFF8);
                                void *v690 = *v691;
                                *(_OWORD *)(((unint64_t)v690 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v691 + 15) & 0xFFFFFFFFFFFFFFF8);
                                size_t v687 = v790;
                                goto LABEL_600;
                              }
LABEL_579:
                              size_t v616 = v828;
                              goto LABEL_585;
                            }
                            unint64_t v255 = ((unint64_t)v238 + v829) & v849;
                            unint64_t v256 = (v830 + v255) & v873;
                            if (v836 == v827)
                            {
                              if (v818 == v836)
                              {
                                int v239 = (*(uint64_t (**)(unint64_t))(v834 + 48))((v830 + v255) & v873);
                                goto LABEL_577;
                              }
                              unint64_t v315 = (unint64_t *)((v838 + v256) & 0xFFFFFFFFFFFFFFF8);
                              if (v793 > 0x7FFFFFFE)
                              {
                                int v239 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v315
                                                                                                + v814) & v810);
                                goto LABEL_577;
                              }
                              unint64_t v316 = *v315;
                            }
                            else
                            {
                              size_t v279 = v864 + v256;
                              if ((v783 & 0x80000000) == 0)
                              {
                                unint64_t v280 = *(void *)(v279 + 8);
                                if (v280 >= 0xFFFFFFFF) {
                                  LODWORD(v280) = -1;
                                }
                                int v239 = v280 + 1;
                                goto LABEL_577;
                              }
                              size_t v325 = (v820 + ((v859 + v279) & v819)) & v64;
                              if (v797 > 0x7FFFFFFD)
                              {
                                int v239 = (*(uint64_t (**)(size_t))(v835 + 48))(v325);
                                goto LABEL_577;
                              }
                              unint64_t v316 = *(void *)(((v794 + ((v807 + v325) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v316 >= 0xFFFFFFFF) {
                              LODWORD(v316) = -1;
                            }
                            if ((v316 + 1) >= 2) {
                              goto LABEL_578;
                            }
                            goto LABEL_581;
                          case 2u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v857 + 32))(a1, a2, AssociatedTypeWitness);
                            size_t v240 = (void *)((unint64_t)&a1[v778] & v847);
                            size_t v241 = (const void *)((unint64_t)&a2[v778] & v847);
                            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v858 + 48))(v241, 1, v862))
                            {
                              memcpy(v240, v241, v853);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v858 + 32))(v240, v241, v862);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v858 + 56))(v240, 0, 1, v862);
                            }
                            uint64_t v264 = (char *)(((unint64_t)v240 + v801) & v851);
                            unint64_t v265 = (char *)(((unint64_t)v241 + v801) & v851);
                            if (v817 == v845)
                            {
                              int v266 = (*(uint64_t (**)(char *))(v832 + 48))(v265);
                            }
                            else
                            {
                              size_t v267 = (uint64_t *)((unint64_t)&v265[v837] & 0xFFFFFFFFFFFFFFF8);
                              if (v792 <= 0x7FFFFFFE)
                              {
                                uint64_t v268 = *v267;
                                if ((unint64_t)*v267 >= 0xFFFFFFFF) {
                                  LODWORD(v268) = -1;
                                }
                                if ((v268 + 1) >= 2) {
                                  goto LABEL_463;
                                }
                                goto LABEL_465;
                              }
                              int v266 = (*(uint64_t (**)(unint64_t))(v812 + 48))(((unint64_t)v267
                                                                                              + v811) & v809);
                            }
                            if (v266)
                            {
LABEL_463:
                              memcpy(v264, v265, v36);
LABEL_466:
                              char v229 = 0;
                              unint64_t v294 = &v264[v36];
                              *unint64_t v294 = v265[v36];
                              *((void *)v294 + 1) = *(void *)&v265[v36 + 8];
                              char v230 = 2;
LABEL_459:
                              a1[v45] = v230;
                              a1[v59] = v229;
                              return a1;
                            }
                            size_t v267 = (uint64_t *)((unint64_t)&v265[v837] & 0xFFFFFFFFFFFFFFF8);
LABEL_465:
                            (*(void (**)(char *, char *, uint64_t))(v832 + 32))(v264, v265, v831);
                            unint64_t v290 = (void *)((unint64_t)&v264[v837] & 0xFFFFFFFFFFFFFFF8);
                            *unint64_t v290 = *v267;
                            unint64_t v291 = ((unint64_t)v290 + v811) & v809;
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v812 + 32))(v291, ((unint64_t)v267 + v811) & v809, v813);
                            unint64_t v292 = (void *)((v798 + v291) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v293 = (void *)((v798 + (((unint64_t)v267 + v811) & v809)) & 0xFFFFFFFFFFFFFFF8);
                            *unint64_t v292 = *v293;
                            *(_OWORD *)(((unint64_t)v292 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v293 + 15) & 0xFFFFFFFFFFFFFFF8);
                            goto LABEL_466;
                          case 3u:
                            unint64_t v242 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v857 + 32);
                            v242(a1, a2, AssociatedTypeWitness);
                            unint64_t v243 = (void *)((unint64_t)&a1[v826] & v823);
                            uint64_t v879 = (void *)((unint64_t)&a2[v826] & v823);
                            if (v860 == v827)
                            {
                              int v244 = (*(uint64_t (**)(void))(v857 + 48))();
LABEL_602:
                              if (v244)
                              {
LABEL_603:
                                unint64_t v694 = (unint64_t)&a2[v826] & v823;
                                memcpy(v243, v879, v806);
                                unint64_t v695 = v821;
                                uint64_t v696 = v796;
LABEL_604:
                                size_t v697 = v828;
LABEL_610:
                                char v229 = 0;
                                unint64_t v758 = ((((v696
                                         + ((((((((((v695 + v697 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                uint64_t v759 = (_OWORD *)(((unint64_t)v243 + v758) & 0xFFFFFFFFFFFFFFF8);
                                uint64_t v760 = (_OWORD *)((v694 + v758) & 0xFFFFFFFFFFFFFFF8);
                                _OWORD *v759 = *v760;
                                *(void *)(((unint64_t)v759 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v760 + 23) & 0xFFFFFFFFFFFFFFF8);
                                char v230 = 3;
                                goto LABEL_459;
                              }
                              unint64_t v257 = ((unint64_t)v879 + v829) & v849;
                              unint64_t v258 = (v830 + v257) & v873;
LABEL_606:
                              unint64_t v771 = v45;
                              unint64_t v871 = v59;
                              v242((unsigned __int8 *)v243, (unsigned __int8 *)v879, AssociatedTypeWitness);
                              v242((unsigned __int8 *)(((unint64_t)v243 + v829) & v849), (unsigned __int8 *)v257, AssociatedTypeWitness);
                              unint64_t v698 = (v830 + (((unint64_t)v243 + v829) & v849)) & v873;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v834 + 32))(v698, v258, v833);
                              unsigned int v699 = (void *)((v838 + v698) & 0xFFFFFFFFFFFFFFF8);
                              unsigned int v700 = (void *)((v838 + v258) & 0xFFFFFFFFFFFFFFF8);
                              *unsigned int v699 = *v700;
                              unint64_t v701 = ((unint64_t)v699 + v814) & v810;
                              unint64_t v702 = ((unint64_t)v700 + v814) & v810;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v816 + 32))(v701, v702, v815);
                              uint64_t v703 = (void *)((v799 + v701) & 0xFFFFFFFFFFFFFFF8);
                              size_t v704 = (void *)((v799 + v702) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v703 = *v704;
                              *(_OWORD *)(((unint64_t)v703 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v704 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *(_OWORD *)(v864 + v698) = *(_OWORD *)(v864 + v258);
                              size_t v705 = (v859 + v864 + v698) & v819;
                              size_t v706 = (v859 + v864 + v258) & v819;
                              *(unsigned char *)size_t v705 = *(unsigned char *)v706;
                              uint64_t v707 = v705 | 4;
                              int v708 = *(_DWORD *)(v706 | 4);
                              *(unsigned char *)(v707 + 4) = *(unsigned char *)((v706 | 4) + 4);
                              *(_DWORD *)uint64_t v707 = v708;
                              *(_WORD *)(v705 + 10) = *(_WORD *)(v706 + 0xA);
                              uint64_t v709 = *(void (**)(size_t, size_t, uint64_t))(v835 + 32);
                              v709((v820 + v705) & v64, (v820 + v706) & v64, v808);
                              size_t v710 = (v807 + ((v820 + v705) & v64)) & v64;
                              size_t v711 = (v807 + ((v820 + v706) & v64)) & v64;
                              v709(v710, v711, v808);
                              uint64_t v712 = (unsigned char *)(v710 + v802);
                              *uint64_t v712 = *(unsigned char *)(v711 + v802);
                              v712[1] = *(unsigned char *)(v711 + v802 + 1);
                              v712[2] = *(unsigned char *)(v711 + v802 + 2);
                              v712[3] = *(unsigned char *)(v711 + v802 + 3);
                              v712[4] = *(unsigned char *)(v711 + v802 + 4);
                              unint64_t v713 = (v710 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v714 = (v711 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(_OWORD *)unint64_t v713 = *(_OWORD *)v714;
                              *(unsigned char *)(v713 + 16) = *(unsigned char *)(v714 + 16);
                              *(unsigned char *)(v713 + 17) = *(unsigned char *)(v714 + 17);
                              *(unsigned char *)(v713 + 18) = *(unsigned char *)(v714 + 18);
                              *(unsigned char *)(v713 + 19) = *(unsigned char *)(v714 + 19);
                              unint64_t v715 = (v713 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v716 = (v714 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v715 = *(void *)v716;
                              *(unsigned char *)(v715 + 8) = *(unsigned char *)(v716 + 8);
                              *(unsigned char *)(v715 + 9) = *(unsigned char *)(v716 + 9);
                              *(unsigned char *)(v715 + 10) = *(unsigned char *)(v716 + 10);
                              *(unsigned char *)(v715 + 11) = *(unsigned char *)(v716 + 11);
                              *(unsigned char *)(v715 + 12) = *(unsigned char *)(v716 + 12);
                              uint64_t v717 = (void *)((v714 + 47) & 0xFFFFFFFFFFFFFFF8);
                              unsigned int v718 = (void *)((v713 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *unsigned int v718 = *v717;
                              unint64_t v719 = ((unint64_t)v718 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v720 = ((unint64_t)v717 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v719 = *(void *)v720;
                              *(unsigned char *)(v719 + 8) = *(unsigned char *)(v720 + 8);
                              *(unsigned char *)(v719 + 9) = *(unsigned char *)(v720 + 9);
                              unsigned int v721 = (void *)((v803 + v719) & v64);
                              uint64_t v722 = (const void *)((v803 + v720) & v64);
                              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v835 + 48))(v722, 1, v808))
                              {
                                memcpy(v721, v722, v828);
                              }
                              else
                              {
                                v709((size_t)v721, (size_t)v722, v808);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v835 + 56))(v721, 0, 1, v808);
                              }
                              unint64_t v59 = v871;
                              unint64_t v695 = v821;
                              size_t v697 = v802;
                              uint64_t v696 = v796;
                              uint64_t v723 = (void *)(((unint64_t)v721 + v804) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v724 = (void *)(((unint64_t)v722 + v804) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v723 = *v724;
                              unint64_t v725 = ((unint64_t)v723 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v726 = ((unint64_t)v724 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v727 = *(void *)v726;
                              *(unsigned char *)(v725 + 8) = *(unsigned char *)(v726 + 8);
                              *(void *)unint64_t v725 = v727;
                              uint64_t v728 = (void *)(((unint64_t)v723 + 31) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v729 = (void *)(((unint64_t)v724 + 31) & 0xFFFFFFFFFFFFFFF8);
                              void *v728 = *v729;
                              size_t v730 = (_OWORD *)(((unint64_t)v728 + 15) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v731 = (_OWORD *)(((unint64_t)v729 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *size_t v730 = *v731;
                              unint64_t v732 = ((unint64_t)v730 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v733 = ((unint64_t)v731 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v734 = *(void *)v733;
                              *(unsigned char *)(v732 + 8) = *(unsigned char *)(v733 + 8);
                              *(void *)unint64_t v732 = v734;
                              *(unsigned char *)(v732 + 9) = *(unsigned char *)(v733 + 9);
                              unint64_t v735 = (v732 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v736 = (v733 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              LODWORD(v727) = *(_DWORD *)v736;
                              *(unsigned char *)(v735 + 4) = *(unsigned char *)(v736 + 4);
                              *(_DWORD *)unint64_t v735 = v727;
                              *(_OWORD *)((v732 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v733 + 25) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v737 = v856 + v705;
                              long long v738 = *(_OWORD *)(v856 + v706 + 112);
                              long long v740 = *(_OWORD *)(v856 + v706 + 64);
                              long long v739 = *(_OWORD *)(v856 + v706 + 80);
                              *(_OWORD *)(v737 + 96) = *(_OWORD *)(v856 + v706 + 96);
                              *(_OWORD *)(v737 + 112) = v738;
                              *(_OWORD *)(v737 + 64) = v740;
                              *(_OWORD *)(v737 + 80) = v739;
                              long long v741 = *(_OWORD *)(v856 + v706 + 176);
                              long long v743 = *(_OWORD *)(v856 + v706 + 128);
                              long long v742 = *(_OWORD *)(v856 + v706 + 144);
                              *(_OWORD *)(v737 + 160) = *(_OWORD *)(v856 + v706 + 160);
                              *(_OWORD *)(v737 + 176) = v741;
                              *(_OWORD *)(v737 + 128) = v743;
                              *(_OWORD *)(v737 + 144) = v742;
                              long long v745 = *(_OWORD *)(v856 + v706 + 208);
                              long long v744 = *(_OWORD *)(v856 + v706 + 224);
                              long long v746 = *(_OWORD *)(v856 + v706 + 192);
                              *(void *)(v737 + 240) = *(void *)(v856 + v706 + 240);
                              *(_OWORD *)(v737 + 208) = v745;
                              *(_OWORD *)(v737 + 224) = v744;
                              *(_OWORD *)(v737 + 192) = v746;
                              long long v747 = *(_OWORD *)(v856 + v706);
                              long long v748 = *(_OWORD *)(v856 + v706 + 16);
                              long long v749 = *(_OWORD *)(v856 + v706 + 48);
                              *(_OWORD *)(v737 + 32) = *(_OWORD *)(v856 + v706 + 32);
                              *(_OWORD *)(v737 + 48) = v749;
                              *(_OWORD *)unint64_t v737 = v747;
                              *(_OWORD *)(v737 + 16) = v748;
                              unint64_t v750 = (_OWORD *)((v856 + v705 + 255) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v751 = (long long *)((v856 + v706 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v752 = *v751;
                              *(_OWORD *)((char *)v750 + 9) = *(long long *)((char *)v751 + 9);
                              *unint64_t v750 = v752;
                              unint64_t v753 = (v856 + v705 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v754 = (v856 + v706 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v755 = *(_OWORD *)v754;
                              *(unsigned char *)(v753 + 16) = *(unsigned char *)(v754 + 16);
                              *(_OWORD *)unint64_t v753 = v755;
                              uint64_t v756 = (void *)((v856 + v705 + 311) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v757 = (void *)((v856 + v706 + 311) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v756 = *v757;
                              *(_OWORD *)(((unint64_t)v756 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v757 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v45 = v771;
                              unint64_t v694 = (unint64_t)&a2[v826] & v823;
                              if (v797) {
                                goto LABEL_610;
                              }
                              goto LABEL_604;
                            }
                            unint64_t v257 = (v829 + ((unint64_t)&a2[v826] & v823)) & v849;
                            unint64_t v258 = (v830 + v257) & v873;
                            if (v836 == v827)
                            {
                              if (v818 == v836)
                              {
                                int v244 = (*(uint64_t (**)(unint64_t))(v834 + 48))((v830 + v257) & v873);
                                goto LABEL_602;
                              }
                              uint64_t v317 = (unint64_t *)((v838 + v258) & 0xFFFFFFFFFFFFFFF8);
                              if (v793 > 0x7FFFFFFE)
                              {
                                int v244 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v317
                                                                                                + v814) & v810);
                                goto LABEL_602;
                              }
                              unint64_t v318 = *v317;
                            }
                            else
                            {
                              size_t v281 = v864 + v258;
                              if ((v783 & 0x80000000) == 0)
                              {
                                unint64_t v282 = *(void *)(v281 + 8);
                                if (v282 >= 0xFFFFFFFF) {
                                  LODWORD(v282) = -1;
                                }
                                int v244 = v282 + 1;
                                goto LABEL_602;
                              }
                              size_t v326 = (v820 + ((v859 + v281) & v819)) & v64;
                              if (v797 > 0x7FFFFFFD)
                              {
                                int v244 = (*(uint64_t (**)(size_t))(v835 + 48))(v326);
                                goto LABEL_602;
                              }
                              unint64_t v318 = *(void *)(((v794 + ((v807 + v326) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v318 >= 0xFFFFFFFF) {
                              LODWORD(v318) = -1;
                            }
                            if ((v318 + 1) >= 2) {
                              goto LABEL_603;
                            }
                            goto LABEL_606;
                          case 4u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v857 + 32))(a1, a2, AssociatedTypeWitness);
                            char v229 = 0;
                            char v230 = 4;
                            goto LABEL_459;
                          case 5u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v857 + 32))(a1, a2, AssociatedTypeWitness);
                            char v229 = 0;
                            char v230 = 5;
                            goto LABEL_459;
                          case 6u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v857 + 32))(a1, a2, AssociatedTypeWitness);
                            unint64_t v245 = (void *)((unint64_t)&a1[v788] & v785);
                            unint64_t v246 = (const void *)((unint64_t)&a2[v788] & v785);
                            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v781 + 48))(v246, 1, v212))
                            {
                              memcpy(v245, v246, v777);
                            }
                            else
                            {
                              (*(void (**)(void *, const void *, uint64_t))(v781 + 32))(v245, v246, v212);
                              (*(void (**)(void *, void, uint64_t, uint64_t))(v781 + 56))(v245, 0, 1, v212);
                            }
                            char v229 = 0;
                            char v230 = 6;
                            goto LABEL_459;
                          case 7u:
                            (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v857 + 32))(a1, a2, AssociatedTypeWitness);
                            char v229 = 0;
                            char v230 = 7;
                            goto LABEL_459;
                          default:
                            uint64_t v234 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v857 + 32);
                            v234(a1, a2, AssociatedTypeWitness);
                            size_t v235 = (void *)((unint64_t)&a1[v826] & v823);
                            uint64_t v877 = (void *)((unint64_t)&a2[v826] & v823);
                            if (v860 == v827)
                            {
                              int v236 = (*(uint64_t (**)(void))(v857 + 48))();
LABEL_567:
                              if (v236)
                              {
LABEL_568:
                                unint64_t v546 = (unint64_t)&a2[v826] & v823;
                                memcpy(v235, v877, v806);
                                unint64_t v547 = v821;
                                uint64_t v548 = v796;
LABEL_569:
                                size_t v549 = v828;
LABEL_575:
                                char v230 = 0;
                                char v229 = 0;
                                unint64_t v610 = ((((v548
                                         + ((((((((((v547 + v549 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8)
                                               + 15) & 0xFFFFFFFFFFFFFFF8)
                                             + 19) & 0xFFFFFFFFFFFFFFF8)
                                           + 25) & 0xFFFFFFFFFFFFFFF8)
                                         + 327) & 0xFFFFFFFFFFFFFFF8)
                                       + 15) & 0xFFFFFFFFFFFFFFF8)
                                     + 16;
                                unint64_t v611 = (void *)(((unint64_t)v235 + v610) & 0xFFFFFFFFFFFFFFF8);
                                unint64_t v612 = (void *)((v546 + v610) & 0xFFFFFFFFFFFFFFF8);
                                *unint64_t v611 = *v612;
                                *(void *)(((unint64_t)v611 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v612 + 15) & 0xFFFFFFFFFFFFFFF8);
                                goto LABEL_459;
                              }
                              unint64_t v253 = ((unint64_t)v877 + v829) & v849;
                              unint64_t v254 = (v830 + v253) & v873;
LABEL_571:
                              unint64_t v769 = v45;
                              unint64_t v869 = v59;
                              v234((unsigned __int8 *)v235, (unsigned __int8 *)v877, AssociatedTypeWitness);
                              v234((unsigned __int8 *)(((unint64_t)v235 + v829) & v849), (unsigned __int8 *)v253, AssociatedTypeWitness);
                              unint64_t v550 = (v830 + (((unint64_t)v235 + v829) & v849)) & v873;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v834 + 32))(v550, v254, v833);
                              uint64_t v551 = (void *)((v838 + v550) & 0xFFFFFFFFFFFFFFF8);
                              v552 = (void *)((v838 + v254) & 0xFFFFFFFFFFFFFFF8);
                              *uint64_t v551 = *v552;
                              unint64_t v553 = ((unint64_t)v551 + v814) & v810;
                              unint64_t v554 = ((unint64_t)v552 + v814) & v810;
                              (*(void (**)(unint64_t, unint64_t, uint64_t))(v816 + 32))(v553, v554, v815);
                              v555 = (void *)((v799 + v553) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v556 = (void *)((v799 + v554) & 0xFFFFFFFFFFFFFFF8);
                              void *v555 = *v556;
                              *(_OWORD *)(((unint64_t)v555 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v556 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *(_OWORD *)(v864 + v550) = *(_OWORD *)(v864 + v254);
                              size_t v557 = (v859 + v864 + v550) & v819;
                              size_t v558 = (v859 + v864 + v254) & v819;
                              *(unsigned char *)size_t v557 = *(unsigned char *)v558;
                              uint64_t v559 = v557 | 4;
                              int v560 = *(_DWORD *)(v558 | 4);
                              *(unsigned char *)(v559 + 4) = *(unsigned char *)((v558 | 4) + 4);
                              *(_DWORD *)uint64_t v559 = v560;
                              *(_WORD *)(v557 + 10) = *(_WORD *)(v558 + 0xA);
                              unint64_t v561 = *(void (**)(size_t, size_t, uint64_t))(v835 + 32);
                              v561((v820 + v557) & v64, (v820 + v558) & v64, v808);
                              size_t v562 = (v807 + ((v820 + v557) & v64)) & v64;
                              size_t v563 = (v807 + ((v820 + v558) & v64)) & v64;
                              v561(v562, v563, v808);
                              long long v564 = (unsigned char *)(v562 + v802);
                              *long long v564 = *(unsigned char *)(v563 + v802);
                              v564[1] = *(unsigned char *)(v563 + v802 + 1);
                              v564[2] = *(unsigned char *)(v563 + v802 + 2);
                              v564[3] = *(unsigned char *)(v563 + v802 + 3);
                              v564[4] = *(unsigned char *)(v563 + v802 + 4);
                              unint64_t v565 = (v562 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v566 = (v563 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                              *(_OWORD *)unint64_t v565 = *(_OWORD *)v566;
                              *(unsigned char *)(v565 + 16) = *(unsigned char *)(v566 + 16);
                              *(unsigned char *)(v565 + 17) = *(unsigned char *)(v566 + 17);
                              *(unsigned char *)(v565 + 18) = *(unsigned char *)(v566 + 18);
                              *(unsigned char *)(v565 + 19) = *(unsigned char *)(v566 + 19);
                              unint64_t v567 = (v565 + 27) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v568 = (v566 + 27) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v567 = *(void *)v568;
                              *(unsigned char *)(v567 + 8) = *(unsigned char *)(v568 + 8);
                              *(unsigned char *)(v567 + 9) = *(unsigned char *)(v568 + 9);
                              *(unsigned char *)(v567 + 10) = *(unsigned char *)(v568 + 10);
                              *(unsigned char *)(v567 + 11) = *(unsigned char *)(v568 + 11);
                              *(unsigned char *)(v567 + 12) = *(unsigned char *)(v568 + 12);
                              long long v569 = (void *)((v566 + 47) & 0xFFFFFFFFFFFFFFF8);
                              long long v570 = (void *)((v565 + 47) & 0xFFFFFFFFFFFFFFF8);
                              *long long v570 = *v569;
                              unint64_t v571 = ((unint64_t)v570 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v572 = ((unint64_t)v569 + 15) & 0xFFFFFFFFFFFFFFF8;
                              *(void *)unint64_t v571 = *(void *)v572;
                              *(unsigned char *)(v571 + 8) = *(unsigned char *)(v572 + 8);
                              *(unsigned char *)(v571 + 9) = *(unsigned char *)(v572 + 9);
                              long long v573 = (void *)((v803 + v571) & v64);
                              uint64_t v574 = (const void *)((v803 + v572) & v64);
                              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v835 + 48))(v574, 1, v808))
                              {
                                memcpy(v573, v574, v828);
                              }
                              else
                              {
                                v561((size_t)v573, (size_t)v574, v808);
                                (*(void (**)(void *, void, uint64_t, uint64_t))(v835 + 56))(v573, 0, 1, v808);
                              }
                              unint64_t v59 = v869;
                              unint64_t v547 = v821;
                              size_t v549 = v802;
                              uint64_t v548 = v796;
                              id v575 = (void *)(((unint64_t)v573 + v804) & 0xFFFFFFFFFFFFFFF8);
                              long long v576 = (void *)(((unint64_t)v574 + v804) & 0xFFFFFFFFFFFFFFF8);
                              void *v575 = *v576;
                              unint64_t v577 = ((unint64_t)v575 + 15) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v578 = ((unint64_t)v576 + 15) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v579 = *(void *)v578;
                              *(unsigned char *)(v577 + 8) = *(unsigned char *)(v578 + 8);
                              *(void *)unint64_t v577 = v579;
                              unint64_t v580 = (void *)(((unint64_t)v575 + 31) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v581 = (void *)(((unint64_t)v576 + 31) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v580 = *v581;
                              unint64_t v582 = (_OWORD *)(((unint64_t)v580 + 15) & 0xFFFFFFFFFFFFFFF8);
                              v583 = (_OWORD *)(((unint64_t)v581 + 15) & 0xFFFFFFFFFFFFFFF8);
                              *unint64_t v582 = *v583;
                              unint64_t v584 = ((unint64_t)v582 + 19) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v585 = ((unint64_t)v583 + 19) & 0xFFFFFFFFFFFFFFF8;
                              uint64_t v586 = *(void *)v585;
                              *(unsigned char *)(v584 + 8) = *(unsigned char *)(v585 + 8);
                              *(void *)unint64_t v584 = v586;
                              *(unsigned char *)(v584 + 9) = *(unsigned char *)(v585 + 9);
                              unint64_t v587 = (v584 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              unint64_t v588 = (v585 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                              LODWORD(v579) = *(_DWORD *)v588;
                              *(unsigned char *)(v587 + 4) = *(unsigned char *)(v588 + 4);
                              *(_DWORD *)unint64_t v587 = v579;
                              *(_OWORD *)((v584 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v585 + 25) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v589 = v856 + v557;
                              long long v590 = *(_OWORD *)(v856 + v558 + 112);
                              long long v592 = *(_OWORD *)(v856 + v558 + 64);
                              long long v591 = *(_OWORD *)(v856 + v558 + 80);
                              *(_OWORD *)(v589 + 96) = *(_OWORD *)(v856 + v558 + 96);
                              *(_OWORD *)(v589 + 112) = v590;
                              *(_OWORD *)(v589 + 64) = v592;
                              *(_OWORD *)(v589 + 80) = v591;
                              long long v593 = *(_OWORD *)(v856 + v558 + 176);
                              long long v595 = *(_OWORD *)(v856 + v558 + 128);
                              long long v594 = *(_OWORD *)(v856 + v558 + 144);
                              *(_OWORD *)(v589 + 160) = *(_OWORD *)(v856 + v558 + 160);
                              *(_OWORD *)(v589 + 176) = v593;
                              *(_OWORD *)(v589 + 128) = v595;
                              *(_OWORD *)(v589 + 144) = v594;
                              long long v597 = *(_OWORD *)(v856 + v558 + 208);
                              long long v596 = *(_OWORD *)(v856 + v558 + 224);
                              long long v598 = *(_OWORD *)(v856 + v558 + 192);
                              *(void *)(v589 + 240) = *(void *)(v856 + v558 + 240);
                              *(_OWORD *)(v589 + 208) = v597;
                              *(_OWORD *)(v589 + 224) = v596;
                              *(_OWORD *)(v589 + 192) = v598;
                              long long v599 = *(_OWORD *)(v856 + v558);
                              long long v600 = *(_OWORD *)(v856 + v558 + 16);
                              long long v601 = *(_OWORD *)(v856 + v558 + 48);
                              *(_OWORD *)(v589 + 32) = *(_OWORD *)(v856 + v558 + 32);
                              *(_OWORD *)(v589 + 48) = v601;
                              *(_OWORD *)unint64_t v589 = v599;
                              *(_OWORD *)(v589 + 16) = v600;
                              size_t v602 = (_OWORD *)((v856 + v557 + 255) & 0xFFFFFFFFFFFFFFF8);
                              uint64_t v603 = (long long *)((v856 + v558 + 255) & 0xFFFFFFFFFFFFFFF8);
                              long long v604 = *v603;
                              *(_OWORD *)((char *)v602 + 9) = *(long long *)((char *)v603 + 9);
                              *size_t v602 = v604;
                              unint64_t v605 = (v856 + v557 + 287) & 0xFFFFFFFFFFFFFFF8;
                              unint64_t v606 = (v856 + v558 + 287) & 0xFFFFFFFFFFFFFFF8;
                              long long v607 = *(_OWORD *)v606;
                              *(unsigned char *)(v605 + 16) = *(unsigned char *)(v606 + 16);
                              *(_OWORD *)unint64_t v605 = v607;
                              long long v608 = (void *)((v856 + v557 + 311) & 0xFFFFFFFFFFFFFFF8);
                              long long v609 = (void *)((v856 + v558 + 311) & 0xFFFFFFFFFFFFFFF8);
                              *long long v608 = *v609;
                              *(_OWORD *)(((unint64_t)v608 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v609 + 15) & 0xFFFFFFFFFFFFFFF8);
                              unint64_t v45 = v769;
                              unint64_t v546 = (unint64_t)&a2[v826] & v823;
                              if (v797) {
                                goto LABEL_575;
                              }
                              goto LABEL_569;
                            }
                            unint64_t v253 = (v829 + ((unint64_t)&a2[v826] & v823)) & v849;
                            unint64_t v254 = (v830 + v253) & v873;
                            if (v836 == v827)
                            {
                              if (v818 == v836)
                              {
                                int v236 = (*(uint64_t (**)(unint64_t))(v834 + 48))((v830 + v253) & v873);
                                goto LABEL_567;
                              }
                              unint64_t v313 = (unint64_t *)((v838 + v254) & 0xFFFFFFFFFFFFFFF8);
                              if (v793 > 0x7FFFFFFE)
                              {
                                int v236 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v313
                                                                                                + v814) & v810);
                                goto LABEL_567;
                              }
                              unint64_t v314 = *v313;
                            }
                            else
                            {
                              size_t v277 = v864 + v254;
                              if ((v783 & 0x80000000) == 0)
                              {
                                unint64_t v278 = *(void *)(v277 + 8);
                                if (v278 >= 0xFFFFFFFF) {
                                  LODWORD(v278) = -1;
                                }
                                int v236 = v278 + 1;
                                goto LABEL_567;
                              }
                              size_t v324 = (v820 + ((v859 + v277) & v819)) & v64;
                              if (v797 > 0x7FFFFFFD)
                              {
                                int v236 = (*(uint64_t (**)(size_t))(v835 + 48))(v324);
                                goto LABEL_567;
                              }
                              unint64_t v314 = *(void *)(((v794 + ((v807 + v324) & v64)) & 0xFFFFFFFFFFFFFFF8) + 8);
                            }
                            if (v314 >= 0xFFFFFFFF) {
                              LODWORD(v314) = -1;
                            }
                            if ((v314 + 1) >= 2) {
                              goto LABEL_568;
                            }
                            goto LABEL_571;
                        }
                      }
                      goto LABEL_326;
                    }
LABEL_324:
                    unsigned int v201 = (v204 | (v202 << (8 * v59))) + 2;
                    break;
                  default:
                    break;
                }
              }
              if (v201 != 1) {
                goto LABEL_337;
              }
LABEL_326:
              unsigned int v205 = a2[v58];
              unsigned int v206 = v205 - 8;
              if (v205 >= 8)
              {
                if (v58 <= 3) {
                  uint64_t v207 = v58;
                }
                else {
                  uint64_t v207 = 4;
                }
                switch(v207)
                {
                  case 1:
                    int v208 = *a2;
                    if (v58 < 4) {
                      goto LABEL_346;
                    }
                    goto LABEL_350;
                  case 2:
                    int v208 = *(unsigned __int16 *)a2;
                    if (v58 < 4) {
                      goto LABEL_346;
                    }
                    goto LABEL_350;
                  case 3:
                    int v208 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                    if (v58 < 4) {
                      goto LABEL_346;
                    }
                    goto LABEL_350;
                  case 4:
                    int v208 = *(_DWORD *)a2;
                    if (v58 < 4) {
LABEL_346:
                    }
                      unsigned int v205 = (v208 | (v206 << (8 * v58))) + 8;
                    else {
LABEL_350:
                    }
                      unsigned int v205 = v208 + 8;
                    break;
                  default:
                    break;
                }
              }
              switch(v205)
              {
                case 1u:
                  uint64_t v774 = v64;
                  size_t v218 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v858 + 32);
                  v218(a1, a2, v862);
                  uint64_t v219 = (void *)((unint64_t)&a2[v824] & v822);
                  if (v840 == v825)
                  {
                    int v220 = (*(uint64_t (**)(unint64_t))(v858 + 48))((unint64_t)&a2[v824] & v822);
                    uint64_t v221 = v835;
                    unint64_t v222 = (void *)((unint64_t)&a1[v824] & v822);
LABEL_532:
                    if (v220)
                    {
LABEL_533:
                      memcpy(v222, v219, v805);
                      unint64_t v396 = v821;
                      uint64_t v397 = AssociatedTypeWitness;
                      size_t v398 = v795;
                      uint64_t v399 = v857;
LABEL_534:
                      size_t v400 = v828;
                      goto LABEL_540;
                    }
                    unint64_t v249 = ((unint64_t)v219 + v843) & v847;
                    unint64_t v250 = (v842 + v249) & v851;
LABEL_536:
                    unint64_t v867 = v59;
                    v218((unsigned __int8 *)v222, (unsigned __int8 *)v219, v862);
                    unint64_t v401 = ((unint64_t)v222 + v843) & v847;
                    v218((unsigned __int8 *)v401, (unsigned __int8 *)v249, v862);
                    unint64_t v402 = (v842 + v401) & v851;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v832 + 32))(v402, v250, v831);
                    unint64_t v403 = (void *)((v837 + v402) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v404 = (void *)((v837 + v250) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v403 = *v404;
                    unint64_t v405 = ((unint64_t)v403 + v811) & v809;
                    unint64_t v406 = ((unint64_t)v404 + v811) & v809;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v812 + 32))(v405, v406, v813);
                    long long v407 = (void *)((v798 + v405) & 0xFFFFFFFFFFFFFFF8);
                    long long v408 = (void *)((v798 + v406) & 0xFFFFFFFFFFFFFFF8);
                    *long long v407 = *v408;
                    *(_OWORD *)(((unint64_t)v407 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v408 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *(_OWORD *)(v36 + v402) = *(_OWORD *)(v36 + v250);
                    size_t v409 = (v859 + v36 + v402) & v819;
                    size_t v410 = (v859 + v36 + v250) & v819;
                    *(unsigned char *)size_t v409 = *(unsigned char *)v410;
                    uint64_t v411 = v409 | 4;
                    int v412 = *(_DWORD *)(v410 | 4);
                    *(unsigned char *)(v411 + 4) = *(unsigned char *)((v410 | 4) + 4);
                    *(_DWORD *)uint64_t v411 = v412;
                    *(_WORD *)(v409 + 10) = *(_WORD *)(v410 + 0xA);
                    long long v413 = *(void (**)(size_t, size_t, uint64_t))(v221 + 32);
                    v413((v820 + v409) & v774, (v820 + v410) & v774, v808);
                    size_t v414 = (v807 + ((v820 + v409) & v774)) & v774;
                    size_t v415 = (v807 + ((v820 + v410) & v774)) & v774;
                    v413(v414, v415, v808);
                    unint64_t v416 = (unsigned char *)(v414 + v802);
                    unsigned char *v416 = *(unsigned char *)(v415 + v802);
                    v416[1] = *(unsigned char *)(v415 + v802 + 1);
                    v416[2] = *(unsigned char *)(v415 + v802 + 2);
                    v416[3] = *(unsigned char *)(v415 + v802 + 3);
                    v416[4] = *(unsigned char *)(v415 + v802 + 4);
                    unint64_t v417 = (v414 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v418 = (v415 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(_OWORD *)unint64_t v417 = *(_OWORD *)v418;
                    *(unsigned char *)(v417 + 16) = *(unsigned char *)(v418 + 16);
                    *(unsigned char *)(v417 + 17) = *(unsigned char *)(v418 + 17);
                    *(unsigned char *)(v417 + 18) = *(unsigned char *)(v418 + 18);
                    *(unsigned char *)(v417 + 19) = *(unsigned char *)(v418 + 19);
                    unint64_t v419 = (v417 + 27) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v420 = (v418 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v419 = *(void *)v420;
                    *(unsigned char *)(v419 + 8) = *(unsigned char *)(v420 + 8);
                    *(unsigned char *)(v419 + 9) = *(unsigned char *)(v420 + 9);
                    *(unsigned char *)(v419 + 10) = *(unsigned char *)(v420 + 10);
                    *(unsigned char *)(v419 + 11) = *(unsigned char *)(v420 + 11);
                    *(unsigned char *)(v419 + 12) = *(unsigned char *)(v420 + 12);
                    size_t v421 = (void *)((v418 + 47) & 0xFFFFFFFFFFFFFFF8);
                    long long v422 = (void *)((v417 + 47) & 0xFFFFFFFFFFFFFFF8);
                    void *v422 = *v421;
                    unint64_t v423 = ((unint64_t)v422 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v424 = ((unint64_t)v421 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v423 = *(void *)v424;
                    *(unsigned char *)(v423 + 8) = *(unsigned char *)(v424 + 8);
                    *(unsigned char *)(v423 + 9) = *(unsigned char *)(v424 + 9);
                    long long v425 = (void *)((v803 + v423) & v774);
                    long long v426 = (const void *)((v803 + v424) & v774);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v221 + 48))(v426, 1, v808))
                    {
                      memcpy(v425, v426, v828);
                    }
                    else
                    {
                      v413((size_t)v425, (size_t)v426, v808);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v221 + 56))(v425, 0, 1, v808);
                    }
                    unint64_t v59 = v867;
                    unint64_t v396 = v821;
                    size_t v400 = v802;
                    uint64_t v397 = AssociatedTypeWitness;
                    size_t v398 = v795;
                    uint64_t v399 = v857;
                    long long v427 = (void *)(((unint64_t)v425 + v804) & 0xFFFFFFFFFFFFFFF8);
                    long long v428 = (void *)(((unint64_t)v426 + v804) & 0xFFFFFFFFFFFFFFF8);
                    void *v427 = *v428;
                    unint64_t v429 = ((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v430 = ((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v431 = *(void *)v430;
                    *(unsigned char *)(v429 + 8) = *(unsigned char *)(v430 + 8);
                    *(void *)unint64_t v429 = v431;
                    long long v432 = (void *)(((unint64_t)v427 + 31) & 0xFFFFFFFFFFFFFFF8);
                    long long v433 = (void *)(((unint64_t)v428 + 31) & 0xFFFFFFFFFFFFFFF8);
                    *long long v432 = *v433;
                    uint64_t v434 = (_OWORD *)(((unint64_t)v432 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v435 = (_OWORD *)(((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v434 = *v435;
                    unint64_t v436 = ((unint64_t)v434 + 19) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v437 = ((unint64_t)v435 + 19) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v438 = *(void *)v437;
                    *(unsigned char *)(v436 + 8) = *(unsigned char *)(v437 + 8);
                    *(void *)unint64_t v436 = v438;
                    *(unsigned char *)(v436 + 9) = *(unsigned char *)(v437 + 9);
                    unint64_t v439 = (v436 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v440 = (v437 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    LODWORD(v431) = *(_DWORD *)v440;
                    *(unsigned char *)(v439 + 4) = *(unsigned char *)(v440 + 4);
                    *(_DWORD *)unint64_t v439 = v431;
                    *(_OWORD *)((v436 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v437 + 25) & 0xFFFFFFFFFFFFFFF8);
                    size_t v441 = v409 + v856;
                    long long v442 = *(_OWORD *)(v410 + v856 + 112);
                    long long v444 = *(_OWORD *)(v410 + v856 + 64);
                    long long v443 = *(_OWORD *)(v410 + v856 + 80);
                    *(_OWORD *)(v441 + 96) = *(_OWORD *)(v410 + v856 + 96);
                    *(_OWORD *)(v441 + 112) = v442;
                    *(_OWORD *)(v441 + 64) = v444;
                    *(_OWORD *)(v441 + 80) = v443;
                    long long v445 = *(_OWORD *)(v410 + v856 + 176);
                    long long v447 = *(_OWORD *)(v410 + v856 + 128);
                    long long v446 = *(_OWORD *)(v410 + v856 + 144);
                    *(_OWORD *)(v441 + 160) = *(_OWORD *)(v410 + v856 + 160);
                    *(_OWORD *)(v441 + 176) = v445;
                    *(_OWORD *)(v441 + 128) = v447;
                    *(_OWORD *)(v441 + 144) = v446;
                    long long v449 = *(_OWORD *)(v410 + v856 + 208);
                    long long v448 = *(_OWORD *)(v410 + v856 + 224);
                    long long v450 = *(_OWORD *)(v410 + v856 + 192);
                    *(void *)(v441 + 240) = *(void *)(v410 + v856 + 240);
                    *(_OWORD *)(v441 + 208) = v449;
                    *(_OWORD *)(v441 + 224) = v448;
                    *(_OWORD *)(v441 + 192) = v450;
                    long long v451 = *(_OWORD *)(v410 + v856);
                    long long v452 = *(_OWORD *)(v410 + v856 + 16);
                    long long v453 = *(_OWORD *)(v410 + v856 + 48);
                    *(_OWORD *)(v441 + 32) = *(_OWORD *)(v410 + v856 + 32);
                    *(_OWORD *)(v441 + 48) = v453;
                    *(_OWORD *)size_t v441 = v451;
                    *(_OWORD *)(v441 + 16) = v452;
                    unint64_t v454 = (_OWORD *)((v409 + v856 + 255) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v455 = (long long *)((v410 + v856 + 255) & 0xFFFFFFFFFFFFFFF8);
                    long long v456 = *v455;
                    *(_OWORD *)((char *)v454 + 9) = *(long long *)((char *)v455 + 9);
                    *unint64_t v454 = v456;
                    unint64_t v457 = (v409 + v856 + 287) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v458 = (v410 + v856 + 287) & 0xFFFFFFFFFFFFFFF8;
                    long long v459 = *(_OWORD *)v458;
                    *(unsigned char *)(v457 + 16) = *(unsigned char *)(v458 + 16);
                    *(_OWORD *)unint64_t v457 = v459;
                    size_t v460 = (void *)((v409 + v856 + 311) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v461 = (void *)((v410 + v856 + 311) & 0xFFFFFFFFFFFFFFF8);
                    *size_t v460 = *v461;
                    *(_OWORD *)(((unint64_t)v460 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v222 = (void *)((unint64_t)&a1[v824] & v822);
                    if (!v797) {
                      goto LABEL_534;
                    }
LABEL_540:
                    unint64_t v462 = ((((v398
                             + ((((((((((v396 + v400 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    size_t v463 = (void *)(((unint64_t)v222 + v874 + v462) & v849);
                    size_t v464 = (const void *)(((unint64_t)v219 + v874 + v462) & v849);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v399 + 48))(v464, 1, v397))
                    {
                      memcpy(v463, v464, __n);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v399 + 32))(v463, v464, v397);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v399 + 56))(v463, 0, 1, v397);
                    }
                    size_t v465 = (char *)(((unint64_t)v463 + v800) & v873);
                    uint64_t v466 = (char *)(((unint64_t)v464 + v800) & v873);
                    if (v818 == v836)
                    {
                      int v467 = (*(uint64_t (**)(unint64_t))(v834 + 48))(((unint64_t)v464 + v800) & v873);
                    }
                    else
                    {
                      unint64_t v468 = (uint64_t *)((unint64_t)&v466[v838] & 0xFFFFFFFFFFFFFFF8);
                      if (v793 <= 0x7FFFFFFE)
                      {
                        uint64_t v469 = *v468;
                        if ((unint64_t)*v468 >= 0xFFFFFFFF) {
                          LODWORD(v469) = -1;
                        }
                        if ((v469 + 1) >= 2) {
                          goto LABEL_552;
                        }
                        goto LABEL_554;
                      }
                      int v467 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v468 + v814) & v810);
                    }
                    if (v467)
                    {
LABEL_552:
                      size_t v470 = v864;
                      memcpy(v465, v466, v864);
LABEL_555:
                      *(void *)&v465[v470] = *(void *)&v466[v470];
                      v475 = (void *)((unint64_t)&v465[v470 + 15] & 0xFFFFFFFFFFFFFFF8);
                      v476 = (void *)((unint64_t)&v466[v470 + 15] & 0xFFFFFFFFFFFFFFF8);
                      void *v475 = *v476;
                      *(void *)(((unint64_t)v475 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v476 + 15) & 0xFFFFFFFFFFFFFFF8);
                      char v230 = 1;
                      unint64_t v45 = v58;
                      char v229 = 1;
                      goto LABEL_459;
                    }
                    unint64_t v468 = (uint64_t *)((unint64_t)&v466[v838] & 0xFFFFFFFFFFFFFFF8);
LABEL_554:
                    (*(void (**)(char *, char *, uint64_t))(v834 + 32))(v465, v466, v833);
                    uint64_t v471 = (void *)((unint64_t)&v465[v838] & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v471 = *v468;
                    unint64_t v472 = ((unint64_t)v471 + v814) & v810;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v816 + 32))(v472, ((unint64_t)v468 + v814) & v810, v815);
                    unint64_t v473 = (void *)((v799 + v472) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v474 = (void *)((v799 + (((unint64_t)v468 + v814) & v810)) & 0xFFFFFFFFFFFFFFF8);
                    void *v473 = *v474;
                    *(_OWORD *)(((unint64_t)v473 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v474 + 15) & 0xFFFFFFFFFFFFFFF8);
                    size_t v470 = v864;
                    goto LABEL_555;
                  }
                  unint64_t v249 = ((unint64_t)v219 + v843) & v847;
                  unint64_t v250 = (v842 + v249) & v851;
                  uint64_t v221 = v835;
                  if (v845 == v825)
                  {
                    if (v817 == v845)
                    {
                      int v220 = (*(uint64_t (**)(unint64_t))(v832 + 48))((v842 + v249) & v851);
                      unint64_t v222 = (void *)((unint64_t)&a1[v824] & v822);
                      goto LABEL_532;
                    }
                    size_t v309 = (unint64_t *)((v837 + v250) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v222 = (void *)((unint64_t)&a1[v824] & v822);
                    if (v792 > 0x7FFFFFFE)
                    {
                      int v220 = (*(uint64_t (**)(unint64_t))(v812 + 48))(((unint64_t)v309 + v811) & v809);
                      goto LABEL_532;
                    }
                    unint64_t v310 = *v309;
                  }
                  else
                  {
                    size_t v273 = v36 + v250;
                    if ((v782 & 0x80000000) == 0)
                    {
                      unint64_t v274 = *(void *)(v273 + 8);
                      if (v274 >= 0xFFFFFFFF) {
                        LODWORD(v274) = -1;
                      }
                      int v220 = v274 + 1;
                      unint64_t v222 = (void *)((unint64_t)&a1[v824] & v822);
                      goto LABEL_532;
                    }
                    unint64_t v222 = (void *)((unint64_t)&a1[v824] & v822);
                    size_t v322 = (v820 + ((v859 + v273) & v819)) & v774;
                    if (v797 > 0x7FFFFFFD)
                    {
                      int v220 = (*(uint64_t (**)(size_t))(v835 + 48))(v322);
                      goto LABEL_532;
                    }
                    unint64_t v310 = *(void *)(((v794 + ((v807 + v322) & v774)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v310 >= 0xFFFFFFFF) {
                    LODWORD(v310) = -1;
                  }
                  if ((v310 + 1) >= 2) {
                    goto LABEL_533;
                  }
                  goto LABEL_536;
                case 2u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v858 + 32))(a1, a2, v862);
                  unint64_t v223 = (void *)((unint64_t)&a1[v787] & v849);
                  size_t v224 = (const void *)((unint64_t)&a2[v787] & v849);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v857 + 48))(v224, 1, AssociatedTypeWitness))
                  {
                    memcpy(v223, v224, __n);
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v857 + 32))(v223, v224, AssociatedTypeWitness);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v857 + 56))(v223, 0, 1, AssociatedTypeWitness);
                  }
                  unint64_t v259 = (char *)(((unint64_t)v223 + v800) & v873);
                  unint64_t v260 = (char *)(((unint64_t)v224 + v800) & v873);
                  if (v818 == v836)
                  {
                    int v261 = (*(uint64_t (**)(char *))(v834 + 48))(v260);
                  }
                  else
                  {
                    unint64_t v262 = (uint64_t *)((unint64_t)&v260[v838] & 0xFFFFFFFFFFFFFFF8);
                    if (v793 <= 0x7FFFFFFE)
                    {
                      uint64_t v263 = *v262;
                      if ((unint64_t)*v262 >= 0xFFFFFFFF) {
                        LODWORD(v263) = -1;
                      }
                      if ((v263 + 1) >= 2) {
                        goto LABEL_454;
                      }
                      goto LABEL_456;
                    }
                    int v261 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v262 + v814) & v810);
                  }
                  if (v261)
                  {
LABEL_454:
                    size_t v283 = v864;
                    memcpy(v259, v260, v864);
LABEL_457:
                    unint64_t v288 = &v259[v283];
                    *unint64_t v288 = v260[v283];
                    *((void *)v288 + 1) = *(void *)&v260[v283 + 8];
                    char v229 = 1;
                    char v230 = 2;
                    goto LABEL_458;
                  }
                  unint64_t v262 = (uint64_t *)((unint64_t)&v260[v838] & 0xFFFFFFFFFFFFFFF8);
LABEL_456:
                  (*(void (**)(char *, char *, uint64_t))(v834 + 32))(v259, v260, v833);
                  unint64_t v284 = (void *)((unint64_t)&v259[v838] & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v284 = *v262;
                  unint64_t v285 = ((unint64_t)v284 + v814) & v810;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v816 + 32))(v285, ((unint64_t)v262 + v814) & v810, v815);
                  size_t v286 = (void *)((v799 + v285) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v287 = (void *)((v799 + (((unint64_t)v262 + v814) & v810)) & 0xFFFFFFFFFFFFFFF8);
                  *size_t v286 = *v287;
                  *(_OWORD *)(((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v287
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  size_t v283 = v864;
                  goto LABEL_457;
                case 3u:
                  uint64_t v775 = v64;
                  uint64_t v225 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v858 + 32);
                  v225(a1, a2, v862);
                  long long v876 = (void *)((unint64_t)&a1[v824] & v822);
                  uint64_t v226 = (void *)((unint64_t)&a2[v824] & v822);
                  unint64_t v765 = v58;
                  if (v840 == v825)
                  {
                    int v227 = (*(uint64_t (**)(void *))(v858 + 48))(v226);
                    uint64_t v228 = v835;
LABEL_557:
                    if (v227)
                    {
LABEL_558:
                      unint64_t v477 = (unint64_t)&a1[v824] & v822;
                      memcpy(v876, v226, v805);
                      unint64_t v478 = v821;
                      unint64_t v479 = v765;
                      size_t v480 = v795;
                      goto LABEL_559;
                    }
                    unint64_t v251 = ((unint64_t)v226 + v843) & v847;
                    unint64_t v252 = (v842 + v251) & v851;
LABEL_561:
                    unint64_t v868 = v59;
                    v225((unsigned __int8 *)v876, (unsigned __int8 *)v226, v862);
                    unint64_t v482 = ((unint64_t)v876 + v843) & v847;
                    v225((unsigned __int8 *)v482, (unsigned __int8 *)v251, v862);
                    unint64_t v483 = (v842 + v482) & v851;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v832 + 32))(v483, v252, v831);
                    long long v484 = (void *)((v837 + v483) & 0xFFFFFFFFFFFFFFF8);
                    long long v485 = (void *)((v837 + v252) & 0xFFFFFFFFFFFFFFF8);
                    *long long v484 = *v485;
                    unint64_t v486 = ((unint64_t)v484 + v811) & v809;
                    unint64_t v487 = ((unint64_t)v485 + v811) & v809;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v812 + 32))(v486, v487, v813);
                    uint64_t v488 = (void *)((v798 + v486) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v489 = (void *)((v798 + v487) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v488 = *v489;
                    *(_OWORD *)(((unint64_t)v488 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v489 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *(_OWORD *)(v36 + v483) = *(_OWORD *)(v36 + v252);
                    size_t v490 = (v859 + v36 + v483) & v819;
                    size_t v491 = (v859 + v36 + v252) & v819;
                    *(unsigned char *)size_t v490 = *(unsigned char *)v491;
                    uint64_t v492 = v490 | 4;
                    int v493 = *(_DWORD *)(v491 | 4);
                    *(unsigned char *)(v492 + 4) = *(unsigned char *)((v491 | 4) + 4);
                    *(_DWORD *)uint64_t v492 = v493;
                    *(_WORD *)(v490 + 10) = *(_WORD *)(v491 + 0xA);
                    long long v494 = *(void (**)(size_t, size_t, uint64_t))(v228 + 32);
                    v494((v820 + v490) & v775, (v820 + v491) & v775, v808);
                    size_t v495 = (v807 + ((v820 + v490) & v775)) & v775;
                    size_t v496 = (v807 + ((v820 + v491) & v775)) & v775;
                    v494(v495, v496, v808);
                    long long v497 = (unsigned char *)(v495 + v802);
                    unsigned char *v497 = *(unsigned char *)(v496 + v802);
                    v497[1] = *(unsigned char *)(v496 + v802 + 1);
                    v497[2] = *(unsigned char *)(v496 + v802 + 2);
                    v497[3] = *(unsigned char *)(v496 + v802 + 3);
                    v497[4] = *(unsigned char *)(v496 + v802 + 4);
                    unint64_t v498 = (v495 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v499 = (v496 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(_OWORD *)unint64_t v498 = *(_OWORD *)v499;
                    *(unsigned char *)(v498 + 16) = *(unsigned char *)(v499 + 16);
                    *(unsigned char *)(v498 + 17) = *(unsigned char *)(v499 + 17);
                    *(unsigned char *)(v498 + 18) = *(unsigned char *)(v499 + 18);
                    *(unsigned char *)(v498 + 19) = *(unsigned char *)(v499 + 19);
                    unint64_t v500 = (v498 + 27) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v501 = (v499 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v500 = *(void *)v501;
                    *(unsigned char *)(v500 + 8) = *(unsigned char *)(v501 + 8);
                    *(unsigned char *)(v500 + 9) = *(unsigned char *)(v501 + 9);
                    *(unsigned char *)(v500 + 10) = *(unsigned char *)(v501 + 10);
                    *(unsigned char *)(v500 + 11) = *(unsigned char *)(v501 + 11);
                    *(unsigned char *)(v500 + 12) = *(unsigned char *)(v501 + 12);
                    long long v502 = (void *)((v499 + 47) & 0xFFFFFFFFFFFFFFF8);
                    long long v503 = (void *)((v498 + 47) & 0xFFFFFFFFFFFFFFF8);
                    *long long v503 = *v502;
                    unint64_t v504 = ((unint64_t)v503 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v505 = ((unint64_t)v502 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v504 = *(void *)v505;
                    *(unsigned char *)(v504 + 8) = *(unsigned char *)(v505 + 8);
                    *(unsigned char *)(v504 + 9) = *(unsigned char *)(v505 + 9);
                    long long v506 = (void *)((v803 + v504) & v775);
                    unint64_t v507 = (const void *)((v803 + v505) & v775);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v228 + 48))(v507, 1, v808))
                    {
                      memcpy(v506, v507, v828);
                    }
                    else
                    {
                      v494((size_t)v506, (size_t)v507, v808);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v228 + 56))(v506, 0, 1, v808);
                    }
                    unint64_t v59 = v868;
                    unint64_t v478 = v821;
                    size_t v481 = v802;
                    unint64_t v479 = v765;
                    size_t v480 = v795;
                    unint64_t v477 = (unint64_t)&a1[v824] & v822;
                    unint64_t v508 = (void *)(((unint64_t)v506 + v804) & 0xFFFFFFFFFFFFFFF8);
                    long long v509 = (void *)(((unint64_t)v507 + v804) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v508 = *v509;
                    unint64_t v510 = ((unint64_t)v508 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v511 = ((unint64_t)v509 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v512 = *(void *)v511;
                    *(unsigned char *)(v510 + 8) = *(unsigned char *)(v511 + 8);
                    *(void *)unint64_t v510 = v512;
                    size_t v513 = (void *)(((unint64_t)v508 + 31) & 0xFFFFFFFFFFFFFFF8);
                    size_t v514 = (void *)(((unint64_t)v509 + 31) & 0xFFFFFFFFFFFFFFF8);
                    *size_t v513 = *v514;
                    uint64_t v515 = (_OWORD *)(((unint64_t)v513 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v516 = (_OWORD *)(((unint64_t)v514 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v515 = *v516;
                    unint64_t v517 = ((unint64_t)v515 + 19) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v518 = ((unint64_t)v516 + 19) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v519 = *(void *)v518;
                    *(unsigned char *)(v517 + 8) = *(unsigned char *)(v518 + 8);
                    *(void *)unint64_t v517 = v519;
                    *(unsigned char *)(v517 + 9) = *(unsigned char *)(v518 + 9);
                    unint64_t v520 = (v517 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v521 = (v518 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    LODWORD(v512) = *(_DWORD *)v521;
                    *(unsigned char *)(v520 + 4) = *(unsigned char *)(v521 + 4);
                    *(_DWORD *)unint64_t v520 = v512;
                    *(_OWORD *)((v517 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v518 + 25) & 0xFFFFFFFFFFFFFFF8);
                    size_t v522 = v490 + v856;
                    long long v523 = *(_OWORD *)(v491 + v856 + 112);
                    long long v525 = *(_OWORD *)(v491 + v856 + 64);
                    long long v524 = *(_OWORD *)(v491 + v856 + 80);
                    *(_OWORD *)(v522 + 96) = *(_OWORD *)(v491 + v856 + 96);
                    *(_OWORD *)(v522 + 112) = v523;
                    *(_OWORD *)(v522 + 64) = v525;
                    *(_OWORD *)(v522 + 80) = v524;
                    long long v526 = *(_OWORD *)(v491 + v856 + 176);
                    long long v528 = *(_OWORD *)(v491 + v856 + 128);
                    long long v527 = *(_OWORD *)(v491 + v856 + 144);
                    *(_OWORD *)(v522 + 160) = *(_OWORD *)(v491 + v856 + 160);
                    *(_OWORD *)(v522 + 176) = v526;
                    *(_OWORD *)(v522 + 128) = v528;
                    *(_OWORD *)(v522 + 144) = v527;
                    long long v530 = *(_OWORD *)(v491 + v856 + 208);
                    long long v529 = *(_OWORD *)(v491 + v856 + 224);
                    long long v531 = *(_OWORD *)(v491 + v856 + 192);
                    *(void *)(v522 + 240) = *(void *)(v491 + v856 + 240);
                    *(_OWORD *)(v522 + 208) = v530;
                    *(_OWORD *)(v522 + 224) = v529;
                    *(_OWORD *)(v522 + 192) = v531;
                    long long v532 = *(_OWORD *)(v491 + v856);
                    long long v533 = *(_OWORD *)(v491 + v856 + 16);
                    long long v534 = *(_OWORD *)(v491 + v856 + 48);
                    *(_OWORD *)(v522 + 32) = *(_OWORD *)(v491 + v856 + 32);
                    *(_OWORD *)(v522 + 48) = v534;
                    *(_OWORD *)size_t v522 = v532;
                    *(_OWORD *)(v522 + 16) = v533;
                    size_t v535 = (_OWORD *)((v490 + v856 + 255) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v536 = (long long *)((v491 + v856 + 255) & 0xFFFFFFFFFFFFFFF8);
                    long long v537 = *v536;
                    *(_OWORD *)((char *)v535 + 9) = *(long long *)((char *)v536 + 9);
                    *size_t v535 = v537;
                    unint64_t v538 = (v490 + v856 + 287) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v539 = (v491 + v856 + 287) & 0xFFFFFFFFFFFFFFF8;
                    long long v540 = *(_OWORD *)v539;
                    *(unsigned char *)(v538 + 16) = *(unsigned char *)(v539 + 16);
                    *(_OWORD *)unint64_t v538 = v540;
                    unint64_t v541 = (void *)((v490 + v856 + 311) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v542 = (void *)((v491 + v856 + 311) & 0xFFFFFFFFFFFFFFF8);
                    void *v541 = *v542;
                    *(_OWORD *)(((unint64_t)v541 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v542 + 15) & 0xFFFFFFFFFFFFFFF8);
                    if (v797)
                    {
LABEL_565:
                      unint64_t v543 = ((((v480
                               + ((((((((((v478 + v481 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      unint64_t v544 = (_OWORD *)((v477 + v543) & 0xFFFFFFFFFFFFFFF8);
                      unsigned int v545 = (_OWORD *)(((unint64_t)v226 + v543) & 0xFFFFFFFFFFFFFFF8);
                      _OWORD *v544 = *v545;
                      *(void *)(((unint64_t)v544 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v545 + 23) & 0xFFFFFFFFFFFFFFF8);
                      char v229 = 1;
                      char v230 = 3;
                      unint64_t v45 = v479;
                      goto LABEL_459;
                    }
LABEL_559:
                    size_t v481 = v828;
                    goto LABEL_565;
                  }
                  unint64_t v251 = ((unint64_t)v226 + v843) & v847;
                  unint64_t v252 = (v842 + v251) & v851;
                  uint64_t v228 = v835;
                  if (v845 == v825)
                  {
                    if (v817 == v845)
                    {
                      int v227 = (*(uint64_t (**)(unint64_t))(v832 + 48))((v842 + v251) & v851);
                      goto LABEL_557;
                    }
                    unint64_t v311 = (unint64_t *)((v837 + v252) & 0xFFFFFFFFFFFFFFF8);
                    if (v792 > 0x7FFFFFFE)
                    {
                      int v227 = (*(uint64_t (**)(unint64_t))(v812 + 48))(((unint64_t)v311 + v811) & v809);
                      goto LABEL_557;
                    }
                    unint64_t v312 = *v311;
                  }
                  else
                  {
                    size_t v275 = v36 + v252;
                    if ((v782 & 0x80000000) == 0)
                    {
                      unint64_t v276 = *(void *)(v275 + 8);
                      if (v276 >= 0xFFFFFFFF) {
                        LODWORD(v276) = -1;
                      }
                      int v227 = v276 + 1;
                      goto LABEL_557;
                    }
                    size_t v323 = (v820 + ((v859 + v275) & v819)) & v775;
                    if (v797 > 0x7FFFFFFD)
                    {
                      int v227 = (*(uint64_t (**)(size_t))(v835 + 48))(v323);
                      goto LABEL_557;
                    }
                    unint64_t v312 = *(void *)(((v794 + ((v807 + v323) & v775)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v312 >= 0xFFFFFFFF) {
                    LODWORD(v312) = -1;
                  }
                  if ((v312 + 1) >= 2) {
                    goto LABEL_558;
                  }
                  goto LABEL_561;
                case 4u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v858 + 32))(a1, a2, v862);
                  char v229 = 1;
                  char v230 = 4;
                  goto LABEL_458;
                case 5u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v858 + 32))(a1, a2, v862);
                  char v229 = 1;
                  char v230 = 5;
                  goto LABEL_458;
                case 6u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v858 + 32))(a1, a2, v862);
                  unint64_t v231 = (void *)((unint64_t)&a1[v786] & v784);
                  uint64_t v232 = v48;
                  unint64_t v233 = (const void *)((unint64_t)&a2[v786] & v784);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v791 + 48))(v233, 1, v232))
                  {
                    memcpy(v231, v233, v776);
                    char v229 = 1;
                  }
                  else
                  {
                    (*(void (**)(void *, const void *, uint64_t))(v791 + 32))(v231, v233, v232);
                    char v229 = 1;
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v791 + 56))(v231, 0, 1, v232);
                  }
                  char v230 = 6;
                  goto LABEL_458;
                case 7u:
                  (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v858 + 32))(a1, a2, v862);
                  char v229 = 1;
                  char v230 = 7;
LABEL_458:
                  unint64_t v45 = v58;
                  goto LABEL_459;
                default:
                  uint64_t v773 = v64;
                  unint64_t v764 = v58;
                  int v214 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v858 + 32);
                  v214(a1, a2, v862);
                  unint64_t v875 = (void *)((unint64_t)&a1[v824] & v822);
                  uint64_t v215 = (void *)((unint64_t)&a2[v824] & v822);
                  if (v840 == v825)
                  {
                    int v216 = (*(uint64_t (**)(void *))(v858 + 48))(v215);
                    uint64_t v217 = v835;
LABEL_522:
                    if (v216)
                    {
LABEL_523:
                      unint64_t v327 = (unint64_t)&a1[v824] & v822;
                      memcpy(v875, v215, v805);
                      unint64_t v328 = v821;
                      unint64_t v329 = v764;
                      size_t v330 = v795;
                      goto LABEL_524;
                    }
                    unint64_t v247 = ((unint64_t)v215 + v843) & v847;
                    unint64_t v248 = (v842 + v247) & v851;
LABEL_526:
                    unint64_t v866 = v59;
                    v214((unsigned __int8 *)v875, (unsigned __int8 *)v215, v862);
                    unint64_t v332 = ((unint64_t)v875 + v843) & v847;
                    v214((unsigned __int8 *)v332, (unsigned __int8 *)v247, v862);
                    unint64_t v333 = (v842 + v332) & v851;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v832 + 32))(v333, v248, v831);
                    unint64_t v334 = (void *)((v837 + v333) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v335 = (void *)((v837 + v248) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v334 = *v335;
                    unint64_t v336 = ((unint64_t)v334 + v811) & v809;
                    unint64_t v337 = ((unint64_t)v335 + v811) & v809;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v812 + 32))(v336, v337, v813);
                    long long v338 = (void *)((v798 + v336) & 0xFFFFFFFFFFFFFFF8);
                    long long v339 = (void *)((v798 + v337) & 0xFFFFFFFFFFFFFFF8);
                    *long long v338 = *v339;
                    *(_OWORD *)(((unint64_t)v338 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v339 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *(_OWORD *)(v36 + v333) = *(_OWORD *)(v36 + v248);
                    size_t v340 = (v859 + v36 + v333) & v819;
                    size_t v341 = (v859 + v36 + v248) & v819;
                    *(unsigned char *)size_t v340 = *(unsigned char *)v341;
                    uint64_t v342 = v340 | 4;
                    int v343 = *(_DWORD *)(v341 | 4);
                    *(unsigned char *)(v342 + 4) = *(unsigned char *)((v341 | 4) + 4);
                    *(_DWORD *)uint64_t v342 = v343;
                    *(_WORD *)(v340 + 10) = *(_WORD *)(v341 + 0xA);
                    long long v344 = *(void (**)(size_t, size_t, uint64_t))(v217 + 32);
                    v344((v820 + v340) & v773, (v820 + v341) & v773, v808);
                    size_t v345 = (v807 + ((v820 + v340) & v773)) & v773;
                    size_t v346 = (v807 + ((v820 + v341) & v773)) & v773;
                    v344(v345, v346, v808);
                    long long v347 = (unsigned char *)(v345 + v802);
                    *long long v347 = *(unsigned char *)(v346 + v802);
                    v347[1] = *(unsigned char *)(v346 + v802 + 1);
                    v347[2] = *(unsigned char *)(v346 + v802 + 2);
                    v347[3] = *(unsigned char *)(v346 + v802 + 3);
                    v347[4] = *(unsigned char *)(v346 + v802 + 4);
                    unint64_t v348 = (v345 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v349 = (v346 + v802 + 12) & 0xFFFFFFFFFFFFFFF8;
                    *(_OWORD *)unint64_t v348 = *(_OWORD *)v349;
                    *(unsigned char *)(v348 + 16) = *(unsigned char *)(v349 + 16);
                    *(unsigned char *)(v348 + 17) = *(unsigned char *)(v349 + 17);
                    *(unsigned char *)(v348 + 18) = *(unsigned char *)(v349 + 18);
                    *(unsigned char *)(v348 + 19) = *(unsigned char *)(v349 + 19);
                    unint64_t v350 = (v348 + 27) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v351 = (v349 + 27) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v350 = *(void *)v351;
                    *(unsigned char *)(v350 + 8) = *(unsigned char *)(v351 + 8);
                    *(unsigned char *)(v350 + 9) = *(unsigned char *)(v351 + 9);
                    *(unsigned char *)(v350 + 10) = *(unsigned char *)(v351 + 10);
                    *(unsigned char *)(v350 + 11) = *(unsigned char *)(v351 + 11);
                    *(unsigned char *)(v350 + 12) = *(unsigned char *)(v351 + 12);
                    unint64_t v352 = (void *)((v349 + 47) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v353 = (void *)((v348 + 47) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v353 = *v352;
                    unint64_t v354 = ((unint64_t)v353 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v355 = ((unint64_t)v352 + 15) & 0xFFFFFFFFFFFFFFF8;
                    *(void *)unint64_t v354 = *(void *)v355;
                    *(unsigned char *)(v354 + 8) = *(unsigned char *)(v355 + 8);
                    *(unsigned char *)(v354 + 9) = *(unsigned char *)(v355 + 9);
                    uint64_t v356 = (void *)((v803 + v354) & v773);
                    unint64_t v357 = (const void *)((v803 + v355) & v773);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v217 + 48))(v357, 1, v808))
                    {
                      memcpy(v356, v357, v828);
                    }
                    else
                    {
                      v344((size_t)v356, (size_t)v357, v808);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v217 + 56))(v356, 0, 1, v808);
                    }
                    unint64_t v59 = v866;
                    unint64_t v328 = v821;
                    size_t v331 = v802;
                    unint64_t v329 = v764;
                    size_t v330 = v795;
                    unint64_t v327 = (unint64_t)&a1[v824] & v822;
                    unint64_t v358 = (void *)(((unint64_t)v356 + v804) & 0xFFFFFFFFFFFFFFF8);
                    int v359 = (void *)(((unint64_t)v357 + v804) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v358 = *v359;
                    unint64_t v360 = ((unint64_t)v358 + 15) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v361 = ((unint64_t)v359 + 15) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v362 = *(void *)v361;
                    *(unsigned char *)(v360 + 8) = *(unsigned char *)(v361 + 8);
                    *(void *)unint64_t v360 = v362;
                    size_t v363 = (void *)(((unint64_t)v358 + 31) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v364 = (void *)(((unint64_t)v359 + 31) & 0xFFFFFFFFFFFFFFF8);
                    *size_t v363 = *v364;
                    int v365 = (_OWORD *)(((unint64_t)v363 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v366 = (_OWORD *)(((unint64_t)v364 + 15) & 0xFFFFFFFFFFFFFFF8);
                    _OWORD *v365 = *v366;
                    unint64_t v367 = ((unint64_t)v365 + 19) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v368 = ((unint64_t)v366 + 19) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v369 = *(void *)v368;
                    *(unsigned char *)(v367 + 8) = *(unsigned char *)(v368 + 8);
                    *(void *)unint64_t v367 = v369;
                    *(unsigned char *)(v367 + 9) = *(unsigned char *)(v368 + 9);
                    unint64_t v370 = (v367 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    unint64_t v371 = (v368 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                    LODWORD(v362) = *(_DWORD *)v371;
                    *(unsigned char *)(v370 + 4) = *(unsigned char *)(v371 + 4);
                    *(_DWORD *)unint64_t v370 = v362;
                    *(_OWORD *)((v367 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v368 + 25) & 0xFFFFFFFFFFFFFFF8);
                    size_t v372 = v340 + v856;
                    long long v373 = *(_OWORD *)(v341 + v856 + 112);
                    long long v375 = *(_OWORD *)(v341 + v856 + 64);
                    long long v374 = *(_OWORD *)(v341 + v856 + 80);
                    *(_OWORD *)(v372 + 96) = *(_OWORD *)(v341 + v856 + 96);
                    *(_OWORD *)(v372 + 112) = v373;
                    *(_OWORD *)(v372 + 64) = v375;
                    *(_OWORD *)(v372 + 80) = v374;
                    long long v376 = *(_OWORD *)(v341 + v856 + 176);
                    long long v378 = *(_OWORD *)(v341 + v856 + 128);
                    long long v377 = *(_OWORD *)(v341 + v856 + 144);
                    *(_OWORD *)(v372 + 160) = *(_OWORD *)(v341 + v856 + 160);
                    *(_OWORD *)(v372 + 176) = v376;
                    *(_OWORD *)(v372 + 128) = v378;
                    *(_OWORD *)(v372 + 144) = v377;
                    long long v380 = *(_OWORD *)(v341 + v856 + 208);
                    long long v379 = *(_OWORD *)(v341 + v856 + 224);
                    long long v381 = *(_OWORD *)(v341 + v856 + 192);
                    *(void *)(v372 + 240) = *(void *)(v341 + v856 + 240);
                    *(_OWORD *)(v372 + 208) = v380;
                    *(_OWORD *)(v372 + 224) = v379;
                    *(_OWORD *)(v372 + 192) = v381;
                    long long v382 = *(_OWORD *)(v341 + v856);
                    long long v383 = *(_OWORD *)(v341 + v856 + 16);
                    long long v384 = *(_OWORD *)(v341 + v856 + 48);
                    *(_OWORD *)(v372 + 32) = *(_OWORD *)(v341 + v856 + 32);
                    *(_OWORD *)(v372 + 48) = v384;
                    *(_OWORD *)size_t v372 = v382;
                    *(_OWORD *)(v372 + 16) = v383;
                    unint64_t v385 = (_OWORD *)((v340 + v856 + 255) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v386 = (long long *)((v341 + v856 + 255) & 0xFFFFFFFFFFFFFFF8);
                    long long v387 = *v386;
                    *(_OWORD *)((char *)v385 + 9) = *(long long *)((char *)v386 + 9);
                    *unint64_t v385 = v387;
                    unint64_t v388 = (v340 + v856 + 287) & 0xFFFFFFFFFFFFFFF8;
                    unint64_t v389 = (v341 + v856 + 287) & 0xFFFFFFFFFFFFFFF8;
                    long long v390 = *(_OWORD *)v389;
                    *(unsigned char *)(v388 + 16) = *(unsigned char *)(v389 + 16);
                    *(_OWORD *)unint64_t v388 = v390;
                    uint64_t v391 = (void *)((v340 + v856 + 311) & 0xFFFFFFFFFFFFFFF8);
                    int v392 = (void *)((v341 + v856 + 311) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v391 = *v392;
                    *(_OWORD *)(((unint64_t)v391 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v392 + 15) & 0xFFFFFFFFFFFFFFF8);
                    if (v797)
                    {
LABEL_530:
                      char v230 = 0;
                      unint64_t v393 = ((((v330
                               + ((((((((((v328 + v331 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                   + 19) & 0xFFFFFFFFFFFFFFF8)
                                 + 25) & 0xFFFFFFFFFFFFFFF8)
                               + 327) & 0xFFFFFFFFFFFFFFF8)
                             + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 16;
                      size_t v394 = (void *)((v327 + v393) & 0xFFFFFFFFFFFFFFF8);
                      size_t v395 = (void *)(((unint64_t)v215 + v393) & 0xFFFFFFFFFFFFFFF8);
                      *size_t v394 = *v395;
                      *(void *)(((unint64_t)v394 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v395 + 15) & 0xFFFFFFFFFFFFFFF8);
                      char v229 = 1;
                      unint64_t v45 = v329;
                      goto LABEL_459;
                    }
LABEL_524:
                    size_t v331 = v828;
                    goto LABEL_530;
                  }
                  unint64_t v247 = ((unint64_t)v215 + v843) & v847;
                  unint64_t v248 = (v842 + v247) & v851;
                  uint64_t v217 = v835;
                  if (v845 == v825)
                  {
                    if (v817 == v845)
                    {
                      int v216 = (*(uint64_t (**)(unint64_t))(v832 + 48))((v842 + v247) & v851);
                      goto LABEL_522;
                    }
                    int v307 = (unint64_t *)((v837 + v248) & 0xFFFFFFFFFFFFFFF8);
                    if (v792 > 0x7FFFFFFE)
                    {
                      int v216 = (*(uint64_t (**)(unint64_t))(v812 + 48))(((unint64_t)v307 + v811) & v809);
                      goto LABEL_522;
                    }
                    unint64_t v308 = *v307;
                  }
                  else
                  {
                    size_t v271 = v36 + v248;
                    if ((v782 & 0x80000000) == 0)
                    {
                      unint64_t v272 = *(void *)(v271 + 8);
                      if (v272 >= 0xFFFFFFFF) {
                        LODWORD(v272) = -1;
                      }
                      int v216 = v272 + 1;
                      goto LABEL_522;
                    }
                    size_t v321 = (v820 + ((v859 + v271) & v819)) & v773;
                    if (v797 > 0x7FFFFFFD)
                    {
                      int v216 = (*(uint64_t (**)(size_t))(v835 + 48))(v321);
                      goto LABEL_522;
                    }
                    unint64_t v308 = *(void *)(((v794 + ((v807 + v321) & v773)) & 0xFFFFFFFFFFFFFFF8) + 8);
                  }
                  if (v308 >= 0xFFFFFFFF) {
                    LODWORD(v308) = -1;
                  }
                  if ((v308 + 1) >= 2) {
                    goto LABEL_523;
                  }
                  goto LABEL_526;
              }
            }
LABEL_312:
            (*(void (**)(size_t, uint64_t))(v832 + 8))(v163, v831);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v812 + 8))(((unint64_t)v186 + v811) & v809, v813);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_313;
          }
          int v164 = (*(uint64_t (**)(unint64_t))(v812 + 48))(((unint64_t)v186 + v811) & v809);
        }
        if (v164) {
          goto LABEL_313;
        }
        unint64_t v186 = (uint64_t *)((v837 + v163) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_312;
      case 3u:
        size_t v789 = v36;
        unint64_t v766 = v45;
        uint64_t v772 = ~v29;
        unint64_t v165 = *(void (**)(unsigned __int8 *, uint64_t))(v857 + 8);
        v165(a1, AssociatedTypeWitness);
        unint64_t v166 = (unint64_t)&a1[v826] & v823;
        if (v860 == v827)
        {
          int v167 = (*(uint64_t (**)(unint64_t))(v857 + 48))((unint64_t)&a1[v826] & v823);
          goto LABEL_213;
        }
        unint64_t v168 = (v829 + v166) & v849;
        unint64_t v169 = (v830 + v168) & v873;
        if (v836 == v827)
        {
          if (v818 == v836)
          {
            int v167 = (*(uint64_t (**)(unint64_t))(v834 + 48))((v830 + v168) & v873);
            goto LABEL_213;
          }
          size_t v305 = (unint64_t *)((v838 + v169) & 0xFFFFFFFFFFFFFFF8);
          if (v793 <= 0x7FFFFFFE)
          {
            unint64_t v306 = *v305;
            goto LABEL_627;
          }
          int v167 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v305 + v814) & v810);
        }
        else
        {
          size_t v269 = v864 + v169;
          if ((v783 & 0x80000000) == 0)
          {
            unint64_t v270 = *(void *)(v269 + 8);
            if (v270 >= 0xFFFFFFFF) {
              LODWORD(v270) = -1;
            }
            if (v270 == -1)
            {
LABEL_214:
              unint64_t v168 = (v829 + v166) & v849;
              unint64_t v169 = (v830 + v168) & v873;
LABEL_215:
              v165((unsigned __int8 *)v166, AssociatedTypeWitness);
              v165((unsigned __int8 *)v168, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v834 + 8))(v169, v833);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v816 + 8))((v814 + ((v838 + v169) & 0xFFFFFFFFFFFFFFF8)) & v810, v815);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              size_t v170 = (v859 + v864 + v169) & v819;
              size_t v171 = *(void (**)(size_t, uint64_t))(v835 + 8);
              v171((v820 + v170) & v772, v808);
              size_t v172 = (v807 + ((v820 + v170) & v772)) & v772;
              v171(v172, v808);
              swift_bridgeObjectRelease();
              unint64_t v173 = (v803
                    + ((((((v794 + v172) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v772;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v835 + 48))(v173, 1, v808)) {
                v171(v173, v808);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              size_t v174 = (uint64_t *)((((((v804 + v173) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v175 = v174[1];
              if ((v175 & 0x3000000000000000) == 0) {
                sub_24D400DCC(*v174, v175);
              }
              swift_bridgeObjectRelease();
              unint64_t v176 = v856 + v170;
              size_t v177 = *(void **)(v176 + 16);
              LODWORD(v178) = -1;
              if ((unint64_t)v177 < 0xFFFFFFFF) {
                uint64_t v178 = *(void *)(v176 + 16);
              }
              if ((int)v178 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v176 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_24D466534(*(void *)((((v176 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v176 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_226:
            swift_bridgeObjectRelease();
            goto LABEL_227;
          }
          size_t v320 = (v820 + ((v859 + v269) & v819)) & v772;
          if (v797 <= 0x7FFFFFFD)
          {
            unint64_t v306 = *(void *)(((v794 + ((v807 + v320) & v772)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_627:
            if (v306 >= 0xFFFFFFFF) {
              LODWORD(v306) = -1;
            }
            if ((v306 + 1) < 2) {
              goto LABEL_215;
            }
            goto LABEL_226;
          }
          int v167 = (*(uint64_t (**)(size_t))(v835 + 48))(v320);
        }
LABEL_213:
        if (v167) {
          goto LABEL_226;
        }
        goto LABEL_214;
      case 4u:
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v857 + 8))(a1, AssociatedTypeWitness);
        goto LABEL_316;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v857 + 8))(a1, AssociatedTypeWitness);
        unint64_t v179 = (unint64_t)&a1[v788] & v785;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v40 + 48))(v179, 1, v865)) {
          (*(void (**)(unint64_t, uint64_t))(v40 + 8))(v179, v865);
        }
        goto LABEL_316;
      default:
        size_t v789 = v36;
        unint64_t v766 = v45;
        uint64_t v772 = ~v29;
        unint64_t v129 = *(void (**)(unsigned __int8 *, uint64_t))(v857 + 8);
        v129(a1, AssociatedTypeWitness);
        unint64_t v130 = (unint64_t)&a1[v826] & v823;
        if (v860 == v827)
        {
          int v131 = (*(uint64_t (**)(unint64_t))(v857 + 48))((unint64_t)&a1[v826] & v823);
          goto LABEL_173;
        }
        unint64_t v132 = (v829 + v130) & v849;
        unint64_t v133 = (v830 + v132) & v873;
        if (v836 == v827)
        {
          if (v818 == v836)
          {
            int v131 = (*(uint64_t (**)(unint64_t))(v834 + 48))((v830 + v132) & v873);
            goto LABEL_173;
          }
          uint64_t v301 = (unint64_t *)((v838 + v133) & 0xFFFFFFFFFFFFFFF8);
          if (v793 <= 0x7FFFFFFE)
          {
            unint64_t v302 = *v301;
            goto LABEL_617;
          }
          int v131 = (*(uint64_t (**)(unint64_t))(v816 + 48))(((unint64_t)v301 + v814) & v810);
        }
        else
        {
          size_t v196 = v864 + v133;
          if ((v783 & 0x80000000) == 0)
          {
            unint64_t v197 = *(void *)(v196 + 8);
            if (v197 >= 0xFFFFFFFF) {
              LODWORD(v197) = -1;
            }
            if (v197 == -1)
            {
LABEL_174:
              unint64_t v132 = (v829 + v130) & v849;
              unint64_t v133 = (v830 + v132) & v873;
LABEL_175:
              v129((unsigned __int8 *)v130, AssociatedTypeWitness);
              v129((unsigned __int8 *)v132, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v834 + 8))(v133, v833);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v816 + 8))((v814 + ((v838 + v133) & 0xFFFFFFFFFFFFFFF8)) & v810, v815);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              size_t v134 = (v859 + v864 + v133) & v819;
              unint64_t v135 = *(void (**)(size_t, uint64_t))(v835 + 8);
              v135((v820 + v134) & v772, v808);
              size_t v136 = (v807 + ((v820 + v134) & v772)) & v772;
              v135(v136, v808);
              swift_bridgeObjectRelease();
              unint64_t v137 = (v803
                    + ((((((v794 + v136) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v772;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v835 + 48))(v137, 1, v808)) {
                v135(v137, v808);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v138 = (uint64_t *)((((((v804 + v137) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v139 = v138[1];
              if ((v139 & 0x3000000000000000) == 0) {
                sub_24D400DCC(*v138, v139);
              }
              swift_bridgeObjectRelease();
              unint64_t v140 = v856 + v134;
              unint64_t v141 = *(void **)(v140 + 16);
              LODWORD(v142) = -1;
              if ((unint64_t)v141 < 0xFFFFFFFF) {
                uint64_t v142 = *(void *)(v140 + 16);
              }
              if ((int)v142 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v140 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_24D466534(*(void *)((((v140 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v140 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_186:
            unint64_t v89 = v130 + v806;
            goto LABEL_187;
          }
          size_t v319 = (v820 + ((v859 + v196) & v819)) & v772;
          if (v797 <= 0x7FFFFFFD)
          {
            unint64_t v302 = *(void *)(((v794 + ((v807 + v319) & v772)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_617:
            if (v302 >= 0xFFFFFFFF) {
              LODWORD(v302) = -1;
            }
            if ((v302 + 1) < 2) {
              goto LABEL_175;
            }
            goto LABEL_186;
          }
          int v131 = (*(uint64_t (**)(size_t))(v835 + 48))(v319);
        }
LABEL_173:
        if (v131) {
          goto LABEL_186;
        }
        goto LABEL_174;
    }
  }
  return a1;
}

uint64_t sub_24D9EE624(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v74 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v68 = v4;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v74;
  unint64_t v69 = ((v11 | v14 | v13) + v6) & ~(v11 | v14 | v13);
  int v71 = *(_DWORD *)(v5 + 84);
  int v65 = *(_DWORD *)(v12 + 84);
  unint64_t v72 = ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v70 = (v13 | 7) + 16;
  uint64_t v67 = (v70 + ((((v6 + v14) & ~v14) + v6 + v11) & ~v11) + v72) & ~(v13 | 7);
  uint64_t v66 = *(void *)(v12 + 64);
  uint64_t v15 = *(void *)(a3 + 24);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  int v64 = *(_DWORD *)(v16 + 84);
  unint64_t v18 = *(void *)(v16 + 64);
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v22 = *(void *)(v68 - 8);
  uint64_t v23 = *(void *)(v15 - 8);
  if (v65) {
    uint64_t v24 = 7;
  }
  else {
    uint64_t v24 = 8;
  }
  uint64_t v25 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v26 = v20 & 0xF8 | v25 | 7;
  unint64_t v27 = ((((*(void *)(v21 + 64) + ((v25 + ((*(void *)(v19 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v29 = ((((((((((v24
                + v66
                + ((v13
                  + ((((((v66 + ((((v13 + 12) | v13) + v66) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v30 = v69 + ((((v29 + v67) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = v30 + v17;
  unint64_t v32 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = (v31 + 16) & ~v17;
  if (v64) {
    unint64_t v34 = v18;
  }
  else {
    unint64_t v34 = v18 + 1;
  }
  uint64_t v35 = v34 + v26;
  unint64_t v36 = ((((((v35 + v33) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= ((v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v36 = ((v32 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v28 = (v6 + v17) & ~v17;
  if (v27 + ((v35 + v28) & ~v26) + 16 > v36) {
    unint64_t v36 = v27 + ((v35 + v28) & ~v26) + 16;
  }
  unint64_t v37 = ((v32 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v37 <= v36) {
    unint64_t v37 = v36;
  }
  if (v6 > v37) {
    unint64_t v37 = v6;
  }
  unint64_t v38 = ((v17 | v13 | v26) + v18) & ~(v17 | v13 | v26);
  uint64_t v39 = (v70 + ((((v18 + v17) & ~v17) + v18 + v26) & ~v26) + v27) & ~(v13 | 7);
  if (*(_DWORD *)(v22 + 84)) {
    uint64_t v40 = *(void *)(*(void *)(v68 - 8) + 64);
  }
  else {
    uint64_t v40 = *(void *)(*(void *)(v68 - 8) + 64) + 1;
  }
  unint64_t v41 = v40 + ((v6 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  if (v41 <= v37) {
    unint64_t v41 = v37;
  }
  if (v6 > v41) {
    unint64_t v41 = v6;
  }
  unint64_t v42 = (v18 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  int v43 = *(_DWORD *)(v23 + 84);
  uint64_t v44 = *(void *)(*(void *)(v15 - 8) + 64);
  unint64_t v45 = v38 + ((((v29 + v39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v46 = v45 + v74;
  unint64_t v47 = (v45 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = (v46 + 16) & ~v74;
  if (v71) {
    unint64_t v49 = v6;
  }
  else {
    unint64_t v49 = v6 + 1;
  }
  uint64_t v50 = v49 + v11;
  unint64_t v51 = ((((((v50 + v48) & ~v11) + v72 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v51 <= ((v47 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v51 = ((v47 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (((v50 + ((v18 + v74) & ~v74)) & ~v11) + v72 + 16 > v51) {
    unint64_t v51 = ((v50 + ((v18 + v74) & ~v74)) & ~v11) + v72 + 16;
  }
  unint64_t v52 = ((v47 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v52 <= v51) {
    unint64_t v52 = v51;
  }
  if (v18 > v52) {
    unint64_t v52 = v18;
  }
  if (!v43) {
    ++v44;
  }
  unint64_t v53 = v44 + v42;
  if (v53 <= v52) {
    unint64_t v53 = v52;
  }
  if (v18 > v53) {
    unint64_t v53 = v18;
  }
  unint64_t v54 = v53 + 1;
  if (v54 <= v41 + 1) {
    unint64_t v55 = v41 + 1;
  }
  else {
    unint64_t v55 = v54;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_61;
  }
  unint64_t v56 = v55 + 1;
  char v57 = 8 * (v55 + 1);
  if ((v55 + 1) <= 3)
  {
    unsigned int v60 = ((a2 + ~(-1 << v57) - 254) >> v57) + 1;
    if (HIWORD(v60))
    {
      int v58 = *(_DWORD *)((char *)a1 + v56);
      if (!v58) {
        goto LABEL_61;
      }
      goto LABEL_53;
    }
    if (v60 > 0xFF)
    {
      int v58 = *(unsigned __int16 *)((char *)a1 + v56);
      if (!*(unsigned __int16 *)((char *)a1 + v56)) {
        goto LABEL_61;
      }
      goto LABEL_53;
    }
    if (v60 < 2)
    {
LABEL_61:
      unsigned int v62 = *((unsigned __int8 *)a1 + v55);
      if (v62 >= 2) {
        return (v62 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v58 = *((unsigned __int8 *)a1 + v56);
  if (!*((unsigned char *)a1 + v56)) {
    goto LABEL_61;
  }
LABEL_53:
  int v61 = (v58 - 1) << v57;
  if (v56 > 3) {
    int v61 = 0;
  }
  if (v56)
  {
    if (v56 > 3) {
      LODWORD(v56) = 4;
    }
    switch((int)v56)
    {
      case 2:
        LODWORD(v56) = *a1;
        break;
      case 3:
        LODWORD(v56) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v56) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v56) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v56 | v61) + 255;
}

void sub_24D9EEE2C(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v74 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v74;
  unint64_t v66 = ((v11 | v14 | v13) + v6) & ~(v11 | v14 | v13);
  int v68 = *(_DWORD *)(v5 + 84);
  int v61 = *(_DWORD *)(v12 + 84);
  uint64_t v70 = v11;
  unint64_t v69 = ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v67 = (v13 | 7) + 16;
  uint64_t v65 = (v67 + ((((v6 + v14) & ~v14) + v6 + v11) & ~v11) + v69) & ~(v13 | 7);
  uint64_t v62 = *(void *)(v12 + 64);
  uint64_t v15 = *(void *)(a4 + 24);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  int v64 = *(_DWORD *)(v16 + 84);
  unint64_t v18 = *(void *)(v16 + 64);
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = *(void *)(v15 - 8);
  if (v61) {
    uint64_t v24 = 7;
  }
  else {
    uint64_t v24 = 8;
  }
  uint64_t v25 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v26 = v20 & 0xF8 | v25 | 7;
  unint64_t v27 = ((((*(void *)(v21 + 64) + ((v25 + ((*(void *)(v19 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = ((((((((((v24
                + v62
                + ((v13
                  + ((((((v62 + ((((v13 + 12) | v13) + v62) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v29 = v66 + ((((v28 + v65) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = v29 + v17;
  unint64_t v31 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = (v30 + 16) & ~v17;
  if (v64) {
    unint64_t v33 = v18;
  }
  else {
    unint64_t v33 = v18 + 1;
  }
  uint64_t v34 = v33 + v26;
  unint64_t v35 = ((((((v34 + v32) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v35 <= ((v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v35 = ((v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v27 + ((v34 + ((v6 + v17) & ~v17)) & ~v26) + 16 > v35) {
    unint64_t v35 = v27 + ((v34 + ((v6 + v17) & ~v17)) & ~v26) + 16;
  }
  unint64_t v36 = ((v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v36 <= v35) {
    unint64_t v36 = v35;
  }
  if (v6 > v36) {
    unint64_t v36 = v6;
  }
  unint64_t v37 = ((v17 | v13 | v26) + v18) & ~(v17 | v13 | v26);
  uint64_t v38 = (v67 + ((((v18 + v17) & ~v17) + v18 + v26) & ~v26) + v27) & ~(v13 | 7);
  if (*(_DWORD *)(v22 + 84)) {
    uint64_t v39 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    uint64_t v39 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  unint64_t v40 = v39 + ((v6 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  if (v40 <= v36) {
    unint64_t v40 = v36;
  }
  if (v6 > v40) {
    unint64_t v40 = v6;
  }
  unint64_t v41 = (v18 + *(unsigned __int8 *)(v23 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  int v42 = *(_DWORD *)(v23 + 84);
  uint64_t v43 = *(void *)(*(void *)(v15 - 8) + 64);
  unint64_t v44 = v37 + ((((v28 + v38) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = v44 + v74;
  unint64_t v46 = (v44 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v47 = (v45 + 16) & ~v74;
  if (v68) {
    unint64_t v48 = v6;
  }
  else {
    unint64_t v48 = v6 + 1;
  }
  uint64_t v49 = v48 + v70;
  unint64_t v50 = ((((((v49 + v47) & ~v70) + v69 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v50 <= ((v46 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v50 = ((v46 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (((v49 + ((v18 + v74) & ~v74)) & ~v70) + v69 + 16 > v50) {
    unint64_t v50 = ((v49 + ((v18 + v74) & ~v74)) & ~v70) + v69 + 16;
  }
  unint64_t v51 = ((v46 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v51 <= v50) {
    unint64_t v51 = v50;
  }
  if (v18 > v51) {
    unint64_t v51 = v18;
  }
  if (!v42) {
    ++v43;
  }
  unint64_t v52 = v43 + v41;
  if (v52 <= v51) {
    unint64_t v52 = v51;
  }
  if (v18 > v52) {
    unint64_t v52 = v18;
  }
  unint64_t v53 = v52 + 1;
  if (v53 <= v40 + 1) {
    unint64_t v53 = v40 + 1;
  }
  size_t v54 = v53 + 1;
  if (a3 < 0xFF)
  {
    int v56 = 0;
    unint64_t v55 = a1;
  }
  else
  {
    unint64_t v55 = a1;
    if (v54 <= 3)
    {
      unsigned int v59 = ((a3 + ~(-1 << (8 * v54)) - 254) >> (8 * v54)) + 1;
      if (HIWORD(v59))
      {
        int v56 = 4;
      }
      else if (v59 >= 0x100)
      {
        int v56 = 2;
      }
      else
      {
        int v56 = v59 > 1;
      }
    }
    else
    {
      int v56 = 1;
    }
  }
  if (a2 > 0xFE)
  {
    unsigned int v57 = a2 - 255;
    if (v54 < 4)
    {
      int v58 = (v57 >> (8 * v54)) + 1;
      if (v53 != -1)
      {
        int v60 = v57 & ~(-1 << (8 * v54));
        bzero(v55, v54);
        if (v54 == 3)
        {
          *(_WORD *)unint64_t v55 = v60;
          v55[2] = BYTE2(v60);
        }
        else if (v54 == 2)
        {
          *(_WORD *)unint64_t v55 = v60;
        }
        else
        {
          *unint64_t v55 = v60;
        }
      }
    }
    else
    {
      bzero(v55, v53 + 1);
      *(_DWORD *)unint64_t v55 = v57;
      int v58 = 1;
    }
    switch(v56)
    {
      case 1:
        v55[v54] = v58;
        break;
      case 2:
        *(_WORD *)&v55[v54] = v58;
        break;
      case 3:
LABEL_72:
        __break(1u);
        JUMPOUT(0x24D9EF698);
      case 4:
        *(_DWORD *)&v55[v54] = v58;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v56)
    {
      case 1:
        v55[v54] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_61;
      case 2:
        *(_WORD *)&v55[v54] = 0;
        goto LABEL_60;
      case 3:
        goto LABEL_72;
      case 4:
        *(_DWORD *)&v55[v54] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_61;
      default:
LABEL_60:
        if (a2) {
LABEL_61:
        }
          v55[v53] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24D9EF6C0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v56 = v2;
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v11 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v57 = v5;
  uint64_t v58 = v10;
  int v59 = *(_DWORD *)(v3 + 84);
  unint64_t v55 = ((((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v54 = (v12 | 7) + 16;
  uint64_t v13 = *(void *)(v11 + 64);
  uint64_t v14 = 7;
  if (!*(_DWORD *)(v11 + 84)) {
    uint64_t v14 = 8;
  }
  unint64_t v53 = ((((((((((v14
                + v13
                + ((v12
                  + ((((((v13 + ((((v12 + 12) | v12) + v13) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v15 = (((v10 | v5 | v12) + v4) & ~(v10 | v5 | v12))
      + ((((v53
          + ((v54
            + ((((v4 + v5) & ~v5) + v4 + v10) & ~v10)
            + ((((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = *(void *)(a2 + 24);
  uint64_t v17 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (v15 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = *(void *)(v17 + 64);
  if (*(_DWORD *)(v17 + 84)) {
    unint64_t v21 = *(void *)(v17 + 64);
  }
  else {
    unint64_t v21 = v20 + 1;
  }
  unint64_t v51 = v21;
  uint64_t v22 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  uint64_t v24 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = v23 | v25 | 7;
  unint64_t v27 = ((((*(void *)(v24 + 64) + ((v25 + ((*(void *)(v22 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = ((((((v51 + v26 + ((v15 + v18 + 16) & ~v18)) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  uint64_t v29 = *(void *)(v56 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  if (!*(_DWORD *)(v29 + 84)) {
    ++v30;
  }
  unint64_t v31 = v30 + ((v4 + *(unsigned __int8 *)(v29 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  unint64_t v32 = ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 > v32) {
    unint64_t v32 = v4;
  }
  if (v28 <= v27 + ((v51 + v26 + ((v4 + v18) & ~v18)) & ~v26) + 16) {
    unint64_t v28 = v27 + ((v51 + v26 + ((v4 + v18) & ~v18)) & ~v26) + 16;
  }
  if (((v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v31) {
    unint64_t v31 = ((v19 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v32 > v28) {
    unint64_t v28 = v32;
  }
  if (v28 <= v31) {
    unint64_t v28 = v31;
  }
  unint64_t v33 = (((v18 | v12 | v26) + v20) & ~(v18 | v12 | v26))
      + ((((v53 + ((v54 + ((((v20 + v18) & ~v18) + v20 + v26) & ~v26) + v27) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v34 = v33 + v57;
  unint64_t v35 = (v33 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = ((v35 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v37 = (v34 + 16) & ~v57;
  if (v59) {
    unint64_t v38 = v4;
  }
  else {
    unint64_t v38 = v4 + 1;
  }
  uint64_t v39 = v38 + v58;
  unint64_t v40 = ((((((v39 + v37) & ~v58) + v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v41 = ((v39 + ((v20 + v57) & ~v57)) & ~v58) + v55 + 16;
  unint64_t v42 = ((v35 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v43 = *(void *)(v16 - 8);
  unint64_t v44 = (v20 + *(unsigned __int8 *)(v43 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v45 = *(void *)(v43 + 64);
  if (!*(_DWORD *)(v43 + 84)) {
    ++v45;
  }
  unint64_t v46 = v45 + v44;
  if (v20 > v36) {
    unint64_t v36 = v20;
  }
  if (v40 <= v41) {
    unint64_t v40 = v41;
  }
  if (v42 > v46) {
    unint64_t v46 = v42;
  }
  if (v36 > v40) {
    unint64_t v40 = v36;
  }
  if (v40 > v46) {
    unint64_t v46 = v40;
  }
  unint64_t v47 = v46 + 1;
  if (v47 <= v28 + 1) {
    unint64_t v47 = v28 + 1;
  }
  uint64_t result = a1[v47];
  if (result >= 2)
  {
    if (v47 <= 3) {
      uint64_t v49 = v47;
    }
    else {
      uint64_t v49 = 4;
    }
    switch(v49)
    {
      case 1:
        int v50 = *a1;
        if (v47 < 4) {
          goto LABEL_45;
        }
        goto LABEL_47;
      case 2:
        int v50 = *(unsigned __int16 *)a1;
        if (v47 >= 4) {
          goto LABEL_47;
        }
        goto LABEL_45;
      case 3:
        int v50 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v47 < 4) {
          goto LABEL_45;
        }
        goto LABEL_47;
      case 4:
        int v50 = *(_DWORD *)a1;
        if (v47 < 4) {
LABEL_45:
        }
          uint64_t result = (v50 | ((result - 2) << (8 * v47))) + 2;
        else {
LABEL_47:
        }
          uint64_t result = (v50 + 2);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24D9EFE24(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v60 = v3;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v59 = v6;
  int v62 = *(_DWORD *)(v4 + 84);
  uint64_t v61 = v11;
  unint64_t v58 = ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v57 = (v13 | 7) + 16;
  uint64_t v14 = *(void *)(v12 + 64);
  uint64_t v15 = 7;
  if (!*(_DWORD *)(v12 + 84)) {
    uint64_t v15 = 8;
  }
  unint64_t v56 = ((((((((((v15
                + v14
                + ((v13
                  + ((((((v14 + ((((v13 + 12) | v13) + v14) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v13)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v16 = (((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13))
      + ((((v56
          + ((v57
            + ((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
            + ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16) & ~(v13 | 7))) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = *(void *)(a3 + 24);
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  unint64_t v55 = (v16 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = *(void *)(v18 + 64);
  if (*(_DWORD *)(v18 + 84)) {
    unint64_t v21 = *(void *)(v18 + 64);
  }
  else {
    unint64_t v21 = v20 + 1;
  }
  unint64_t v53 = v21;
  uint64_t v22 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v23 = *(_DWORD *)(v22 + 80) & 0xF8;
  uint64_t v24 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v26 = v23 | v25 | 7;
  unint64_t v27 = ((((*(void *)(v24 + 64) + ((v25 + ((*(void *)(v22 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v25) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = ((((((v53 + v26 + ((v16 + v19 + 16) & ~v19)) & ~v26) + v27 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v28 <= ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v28 = ((v55 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v29 = v27 + ((v53 + v26 + ((v5 + v19) & ~v19)) & ~v26) + 16;
  if (v29 <= v28) {
    unint64_t v29 = v28;
  }
  if (((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v29) {
    unint64_t v29 = ((v55 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v5 <= v29) {
    unint64_t v30 = v29;
  }
  else {
    unint64_t v30 = v5;
  }
  uint64_t v31 = *(void *)(v60 - 8);
  uint64_t v32 = *(void *)(v31 + 64);
  if (!*(_DWORD *)(v31 + 84)) {
    ++v32;
  }
  unint64_t v33 = v32 + ((v5 + *(unsigned __int8 *)(v31 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80));
  if (v33 <= v30) {
    unint64_t v33 = v30;
  }
  if (v5 <= v33) {
    unint64_t v34 = v33;
  }
  else {
    unint64_t v34 = v5;
  }
  unint64_t v35 = (((v19 | v13 | v26) + v20) & ~(v19 | v13 | v26))
      + ((((v56 + ((v57 + ((((v20 + v19) & ~v19) + v20 + v26) & ~v26) + v27) & ~(v13 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v36 = v35 + v59;
  unint64_t v37 = (v35 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = (v36 + 16) & ~v59;
  if (v62) {
    unint64_t v39 = v5;
  }
  else {
    unint64_t v39 = v5 + 1;
  }
  uint64_t v40 = v39 + v61;
  unint64_t v41 = ((((((v40 + v38) & ~v61) + v58 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v41 <= ((v37 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v41 = ((v37 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (((v40 + ((v20 + v59) & ~v59)) & ~v61) + v58 + 16 > v41) {
    unint64_t v41 = ((v40 + ((v20 + v59) & ~v59)) & ~v61) + v58 + 16;
  }
  unint64_t v42 = ((v37 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v42 <= v41) {
    unint64_t v42 = v41;
  }
  if (v20 <= v42) {
    unint64_t v43 = v42;
  }
  else {
    unint64_t v43 = v20;
  }
  uint64_t v44 = *(void *)(v17 - 8);
  unint64_t v45 = (v20 + *(unsigned __int8 *)(v44 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
  uint64_t v46 = *(void *)(v44 + 64);
  if (!*(_DWORD *)(v44 + 84)) {
    ++v46;
  }
  unint64_t v47 = v46 + v45;
  if (v47 <= v43) {
    unint64_t v47 = v43;
  }
  if (v20 > v47) {
    unint64_t v47 = v20;
  }
  unint64_t v48 = v47 + 1;
  if (v48 <= v34 + 1) {
    size_t v49 = v34 + 1;
  }
  else {
    size_t v49 = v48;
  }
  if (a2 > 1)
  {
    if (v49 <= 3) {
      char v50 = ((a2 - 2) >> (8 * v49)) + 2;
    }
    else {
      char v50 = 2;
    }
    if (v49 <= 3) {
      int v51 = (a2 - 2) & ~(-1 << (8 * v49));
    }
    else {
      int v51 = a2 - 2;
    }
    a1[v49] = v50;
    if (v49 >= 4) {
      int v52 = 4;
    }
    else {
      int v52 = v49;
    }
    bzero(a1, v49);
    switch(v52)
    {
      case 2:
        *(_WORD *)a1 = v51;
        break;
      case 3:
        *(_WORD *)a1 = v51;
        a1[2] = BYTE2(v51);
        break;
      case 4:
        *(_DWORD *)a1 = v51;
        break;
      default:
        *a1 = v51;
        break;
    }
  }
  else
  {
    a1[v49] = a2;
  }
}

uint64_t type metadata accessor for TestingOperation()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DirectionalTestingOperation()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D9F05E0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    uint64_t v16 = v2;
    type metadata accessor for SnapshotItem();
    uint64_t result = sub_24DCCA3F8();
    if (v3 <= 0x3F)
    {
      uint64_t v4 = *(void *)(result - 8) + 64;
      uint64_t v18 = (void *)(MEMORY[0x263F8CF70] + 64);
      uint64_t v19 = "\b";
      swift_getTupleTypeLayout();
      uint64_t v25 = &v24;
      uint64_t v16 = v2;
      uint64_t v17 = v4;
      swift_getAssociatedTypeWitness();
      uint64_t result = sub_24DCCA3F8();
      if (v5 <= 0x3F)
      {
        uint64_t v18 = (void *)(*(void *)(result - 8) + 64);
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        uint64_t v13 = swift_getAssociatedTypeWitness();
        uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
        uint64_t v15 = swift_getAssociatedConformanceWitness();
        type metadata accessor for FileItemVersion();
        uint64_t result = sub_24DCCA3F8();
        if (v6 <= 0x3F)
        {
          uint64_t v7 = MEMORY[0x263F8CF70] + 64;
          uint64_t v21 = MEMORY[0x263F8CF70] + 64;
          uint64_t v22 = "\b";
          swift_getTupleTypeLayout();
          uint64_t v26 = &v23;
          unint64_t v20 = "\b";
          swift_getTupleTypeLayout();
          unint64_t v27 = &v11;
          uint64_t v16 = v2;
          uint64_t v17 = v4;
          uint64_t v18 = &unk_24DCE27E0;
          uint64_t v19 = (const char *)v7;
          swift_getTupleTypeLayout();
          unint64_t v28 = &v10;
          uint64_t v29 = v2;
          uint64_t v30 = v2;
          uint64_t result = sub_24DCCA3F8();
          if (v8 <= 0x3F)
          {
            swift_getTupleTypeLayout2();
            uint64_t v31 = &v9;
            uint64_t v32 = v2;
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

void *sub_24D9F095C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v506 = *(void *)(v4 + 64);
  int v502 = *(_DWORD *)(v4 + 80);
  uint64_t v520 = v3;
  uint64_t v456 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v456 - 8);
  int v498 = *(_DWORD *)(v5 + 80);
  uint64_t v450 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v450 - 8);
  int v495 = *(_DWORD *)(v6 + 80);
  uint64_t v7 = v498 & 0xF8 | v495 | 7u;
  uint64_t v461 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v461 - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v466 = v8;
  int v492 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v492 | 7;
  unint64_t v11 = v7 | v502 | (unint64_t)v492;
  uint64_t v455 = v5;
  uint64_t v449 = v6;
  unsigned int v12 = *(_DWORD *)(v6 + 84);
  unsigned int v441 = *(_DWORD *)(v5 + 84);
  if (v441 > v12) {
    unsigned int v12 = *(_DWORD *)(v5 + 84);
  }
  unsigned int v439 = v12;
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v12 = 2147483646;
  }
  unsigned int v453 = v12;
  unsigned int v470 = *(_DWORD *)(v4 + 84);
  if (v12 <= v470) {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  if (v12 > v13) {
    unsigned int v13 = v12;
  }
  unsigned int v440 = v13;
  if (v13 <= 0x7FFFFFFF) {
    int v14 = 0x7FFFFFFF;
  }
  else {
    int v14 = v13;
  }
  int v469 = v14;
  unsigned int v457 = *(_DWORD *)(v8 + 84);
  unint64_t v473 = v506 + v502;
  uint64_t v474 = v506 + v7;
  uint64_t v454 = *(void *)(v5 + 64) + 7;
  uint64_t v448 = v495 + 8;
  uint64_t v444 = *(void *)(v6 + 64) + 7;
  uint64_t v451 = v10 + 16;
  unint64_t v462 = ((((v444 + ((v448 + (v454 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v495)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v479 = *(_DWORD *)(v8 + 80) | 7;
  uint64_t v452 = v492 + 12;
  size_t v15 = *(void *)(*(void *)(v461 - 8) + 64);
  size_t v447 = v15 + v492;
  size_t v438 = v15 + 12;
  uint64_t v445 = v492 + 10;
  uint64_t v482 = *(_DWORD *)(v8 + 80);
  unint64_t v16 = (v445
       + ((((((v15
             + 12
             + ((v447 + (v452 & ~(unint64_t)v492)) & ~(unint64_t)v492)) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v492;
  size_t v465 = v15;
  if (!v9) {
    ++v15;
  }
  size_t v471 = v15;
  unint64_t v472 = v16;
  unint64_t v467 = (v10
        + 16
        + ((v506 + v7 + ((v506 + v502) & ~(unint64_t)v502)) & ~v7)
        + v462) & ~v10;
  size_t v442 = v15 + 7;
  unint64_t v443 = ((((((((((v15 + 7 + v16) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v511 = v7 | v502 | (unint64_t)*(_DWORD *)(v8 + 80);
  unint64_t v468 = v11 + v506;
  unint64_t v460 = ((((v467 + v443 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v17 = v460 + ((v11 + v506) & ~v11);
  unint64_t v508 = (v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v463 = v19;
  uint64_t v464 = v18;
  int v489 = *(_DWORD *)(v19 + 80);
  unint64_t v516 = (v17 + v489) & ~(unint64_t)v489;
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v20 = *(void *)(v19 + 64);
  }
  else {
    uint64_t v20 = *(void *)(v19 + 64) + 1;
  }
  uint64_t v459 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v459 - 8);
  int v486 = *(_DWORD *)(v21 + 80);
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(_DWORD *)(v23 + 80);
  unint64_t v25 = v486 & 0xF8 | v24 | 7;
  uint64_t v458 = v21;
  uint64_t v26 = *(unsigned int *)(v21 + 84);
  if (v26 <= *(_DWORD *)(v23 + 84)) {
    unsigned int v27 = *(_DWORD *)(v23 + 84);
  }
  else {
    unsigned int v27 = *(_DWORD *)(v21 + 84);
  }
  if (v27 <= 0x7FFFFFFE) {
    int v28 = 2147483646;
  }
  else {
    int v28 = v27;
  }
  uint64_t v29 = *(void *)(v21 + 64) + 7;
  uint64_t v30 = v24 + 8;
  unint64_t v31 = ((((*(void *)(*(void *)(v22 - 8) + 64) + 7 + ((v24 + 8 + (v29 & 0xFFFFFFFFFFFFFFF8)) & ~v24)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t __n = v20;
  unint64_t v32 = v20 + v25;
  unint64_t v33 = ((((((v20 + v25 + v516) & ~v25) + v31 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v34 = v506 + v489;
  uint64_t v35 = *(void *)(v520 - 8);
  unint64_t v36 = v31 + ((v20 + v25 + (v34 & ~(unint64_t)v489)) & ~v25) + 16;
  uint64_t v37 = *(_DWORD *)(v35 + 80);
  if (*(_DWORD *)(v35 + 84)) {
    size_t v38 = *(void *)(*(void *)(v520 - 8) + 64);
  }
  else {
    size_t v38 = *(void *)(*(void *)(v520 - 8) + 64) + 1;
  }
  unint64_t v39 = ((v508 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v506 > v39) {
    unint64_t v39 = v506;
  }
  uint64_t v40 = v506 + v37;
  if (v33 <= v36) {
    unint64_t v33 = v31 + ((v32 + (v34 & ~(unint64_t)v489)) & ~v25) + 16;
  }
  unint64_t v41 = (v40 & ~v37) + v38;
  if (((v508 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v41) {
    unint64_t v41 = ((v508 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v39 > v33) {
    unint64_t v33 = v39;
  }
  if (v33 <= v41) {
    unint64_t v42 = v41;
  }
  else {
    unint64_t v42 = v33;
  }
  uint64_t v517 = v489;
  unint64_t v43 = v511 | v489 | v25 | v37;
  if (v43 != 7
    || ((v498 | v502 | v495 | v492 | v489 | v486 | *(_DWORD *)(v23 + 80) | *(_DWORD *)(v35 + 80)) & 0x100000) != 0
    || v42 + 1 > 0x18)
  {
    uint64_t v51 = *(void *)a2;
    *a1 = *(void *)a2;
    int v52 = (void *)(v51 + ((v43 + 16) & ~v43));
    swift_retain();
    return v52;
  }
  unsigned int v44 = a2[v42];
  unsigned int v45 = v44 - 8;
  if (v44 < 8)
  {
    uint64_t v48 = v495;
    uint64_t v47 = v502;
    uint64_t v49 = v498 & 0xF8 | v495 | 7u;
  }
  else
  {
    if (v42 <= 3) {
      uint64_t v46 = v42;
    }
    else {
      uint64_t v46 = 4;
    }
    uint64_t v48 = v495;
    uint64_t v47 = v502;
    uint64_t v49 = v498 & 0xF8 | v495 | 7u;
    switch(v46)
    {
      case 1:
        int v50 = *a2;
        if (v42 < 4) {
          goto LABEL_58;
        }
        goto LABEL_59;
      case 2:
        int v50 = *(unsigned __int16 *)a2;
        if (v42 >= 4) {
          goto LABEL_59;
        }
        goto LABEL_58;
      case 3:
        int v50 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v42 >= 4) {
          goto LABEL_59;
        }
        goto LABEL_58;
      case 4:
        int v50 = *(_DWORD *)a2;
        if (v42 < 4) {
LABEL_58:
        }
          v50 |= v45 << (8 * v42);
LABEL_59:
        unsigned int v44 = v50 + 8;
        break;
      default:
        break;
    }
  }
  unint64_t v509 = v32;
  int v510 = v28;
  unsigned int v507 = v27;
  unint64_t v54 = ~v511;
  uint64_t v55 = ~v47;
  uint64_t v512 = ~v49;
  uint64_t v56 = ~v48;
  uint64_t v57 = ~v482;
  uint64_t v58 = ~v25;
  uint64_t v59 = ~v24;
  uint64_t v60 = ~v37;
  switch(v44)
  {
    case 1u:
      uint64_t v500 = v56;
      uint64_t v66 = ~v479;
      unint64_t v477 = ~(unint64_t)v489;
      uint64_t v437 = v58;
      uint64_t v483 = v59;
      uint64_t v504 = v57;
      unsigned int v476 = *(_DWORD *)(v23 + 84);
      uint64_t v478 = v29;
      uint64_t v480 = *(void *)(*(void *)(v22 - 8) + 64) + 7;
      uint64_t v490 = v30;
      uint64_t v493 = *(void *)(v22 - 8);
      uint64_t v496 = v22;
      size_t v487 = v31;
      unint64_t v522 = v42;
      unint64_t v436 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16);
      v436(a1, a2, AssociatedTypeWitness);
      uint64_t v67 = (void *)(((unint64_t)a1 + v468) & v54);
      int v68 = (unsigned __int8 *)((unint64_t)&a2[v468] & v54);
      long long v527 = v68;
      if (v470 == v469)
      {
        int v69 = (*(uint64_t (**)(void))(v4 + 48))();
        uint64_t v70 = v461;
        goto LABEL_104;
      }
      unint64_t v88 = (unint64_t)&v68[v473] & v55;
      unint64_t v89 = (v474 + v88) & v512;
      uint64_t v70 = v461;
      if (v453 == v469)
      {
        if (v441 == v453)
        {
          int v69 = (*(uint64_t (**)(unint64_t))(v5 + 48))((v474 + v88) & v512);
          goto LABEL_104;
        }
        unint64_t v130 = (unint64_t *)((v454 + v89) & 0xFFFFFFFFFFFFFFF8);
        int v52 = a1;
        if (v439 <= 0x7FFFFFFE)
        {
          unint64_t v131 = *v130;
          if (v131 >= 0xFFFFFFFF) {
            LODWORD(v131) = -1;
          }
          uint64_t v106 = v66;
          if ((v131 + 1) >= 2) {
            goto LABEL_105;
          }
LABEL_159:
          v436(v67, v527, AssociatedTypeWitness);
          v475 = v67;
          v436((void *)(((unint64_t)v67 + v473) & v55), (unsigned __int8 *)v88, AssociatedTypeWitness);
          unint64_t v216 = (v474 + (((unint64_t)v67 + v473) & v55)) & v512;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v455 + 16))(v216, v89, v456);
          uint64_t v217 = (void *)((v454 + v216) & 0xFFFFFFFFFFFFFFF8);
          size_t v218 = (void *)((v454 + v89) & 0xFFFFFFFFFFFFFFF8);
          void *v217 = *v218;
          unint64_t v219 = ((unint64_t)v217 + v448) & v500;
          unint64_t v220 = ((unint64_t)v218 + v448) & v500;
          uint64_t v221 = *(void (**)(unint64_t, unint64_t, uint64_t))(v449 + 16);
          swift_bridgeObjectRetain();
          v221(v219, v220, v450);
          unint64_t v222 = (void *)((v444 + v220) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v223 = (void *)((v444 + v219) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v223 = *v222;
          size_t v224 = (void *)(((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v225 = (void *)(((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8);
          *size_t v224 = *v225;
          v224[1] = v225[1];
          uint64_t v226 = (void *)(v462 + v216);
          void *v226 = *(void *)(v462 + v89);
          v226[1] = *(void *)(v462 + v89 + 8);
          unint64_t v227 = (v451 + v462 + v216) & v106;
          unint64_t v228 = (v451 + v462 + v89) & v106;
          *(unsigned char *)unint64_t v227 = *(unsigned char *)v228;
          uint64_t v229 = v227 | 4;
          int v230 = *(_DWORD *)(v228 | 4);
          *(unsigned char *)(v229 + 4) = *(unsigned char *)((v228 | 4) + 4);
          *(_DWORD *)uint64_t v229 = v230;
          *(_WORD *)(v227 + 10) = *(_WORD *)(v228 + 10);
          unint64_t v514 = v227;
          uint64_t v231 = (v452 + v227) & v504;
          uint64_t v232 = (v452 + v228) & v504;
          unint64_t v233 = *(void (**)(uint64_t, uint64_t, uint64_t))(v466 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v233(v231, v232, v70);
          uint64_t v234 = (v447 + v231) & v504;
          uint64_t v235 = (v447 + v232) & v504;
          v233(v234, v235, v70);
          int v236 = (unsigned char *)(v234 + v465);
          *int v236 = *(unsigned char *)(v235 + v465);
          v236[1] = *(unsigned char *)(v235 + v465 + 1);
          v236[2] = *(unsigned char *)(v235 + v465 + 2);
          v236[3] = *(unsigned char *)(v235 + v465 + 3);
          v236[4] = *(unsigned char *)(v235 + v465 + 4);
          unint64_t v237 = (v234 + v465 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v238 = (v235 + v465 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v237 = *(void *)v238;
          *(void *)(v237 + 8) = *(void *)(v238 + 8);
          *(unsigned char *)(v237 + 16) = *(unsigned char *)(v238 + 16);
          *(unsigned char *)(v237 + 17) = *(unsigned char *)(v238 + 17);
          *(unsigned char *)(v237 + 18) = *(unsigned char *)(v238 + 18);
          *(unsigned char *)(v237 + 19) = *(unsigned char *)(v238 + 19);
          unint64_t v239 = (v237 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v240 = (v238 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v239 = *(void *)v240;
          *(unsigned char *)(v239 + 8) = *(unsigned char *)(v240 + 8);
          *(unsigned char *)(v239 + 9) = *(unsigned char *)(v240 + 9);
          *(unsigned char *)(v239 + 10) = *(unsigned char *)(v240 + 10);
          *(unsigned char *)(v239 + 11) = *(unsigned char *)(v240 + 11);
          *(unsigned char *)(v239 + 12) = *(unsigned char *)(v240 + 12);
          size_t v241 = (void *)((v238 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v242 = (void *)((v237 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v242 = *v241;
          unint64_t v243 = ((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v244 = ((unint64_t)v241 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v243 = *(void *)v244;
          *(unsigned char *)(v243 + 8) = *(unsigned char *)(v244 + 8);
          *(unsigned char *)(v243 + 9) = *(unsigned char *)(v244 + 9);
          unint64_t v245 = (void *)((v445 + v243) & v504);
          unint64_t v246 = (const void *)((v445 + v244) & v504);
          unint64_t v247 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v466 + 48);
          swift_bridgeObjectRetain();
          if (v247(v246, 1, v70))
          {
            memcpy(v245, v246, v471);
          }
          else
          {
            v233((uint64_t)v245, (uint64_t)v246, v70);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v466 + 56))(v245, 0, 1, v70);
          }
          unint64_t v248 = (void *)(((unint64_t)v245 + v442) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v249 = (void *)(((unint64_t)v246 + v442) & 0xFFFFFFFFFFFFFFF8);
          void *v248 = *v249;
          unint64_t v250 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v251 = ((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v252 = *(void *)v251;
          *(unsigned char *)(v250 + 8) = *(unsigned char *)(v251 + 8);
          *(void *)unint64_t v250 = v252;
          unint64_t v253 = (void *)(((unint64_t)v248 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v254 = (void *)(((unint64_t)v249 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v253 = *v254;
          unint64_t v255 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v256 = (uint64_t *)(((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v257 = v256[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v257 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v255 = *(_OWORD *)v256;
          }
          else
          {
            uint64_t v258 = *v256;
            sub_24D3F9C18(*v256, v257);
            *(void *)unint64_t v255 = v258;
            *(void *)(v255 + 8) = v257;
          }
          unsigned int v259 = v457;
          unint64_t v260 = (v255 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v261 = ((unint64_t)v256 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v262 = *(void *)v261;
          *(unsigned char *)(v260 + 8) = *(unsigned char *)(v261 + 8);
          *(void *)unint64_t v260 = v262;
          *(unsigned char *)(v260 + 9) = *(unsigned char *)(v261 + 9);
          unint64_t v263 = (v260 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v264 = (v261 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v265 = *(_DWORD *)v264;
          *(unsigned char *)(v263 + 4) = *(unsigned char *)(v264 + 4);
          *(_DWORD *)unint64_t v263 = v265;
          int v266 = (void *)((v260 + 25) & 0xFFFFFFFFFFFFFFF8);
          size_t v267 = (void *)((v261 + 25) & 0xFFFFFFFFFFFFFFF8);
          *int v266 = *v267;
          v266[1] = v267[1];
          unint64_t v268 = v443 + v514;
          unint64_t v269 = v443 + v228;
          unint64_t v270 = *(void *)(v269 + 16);
          if (v270 >= 0xFFFFFFFF) {
            LODWORD(v270) = -1;
          }
          int v271 = v270 - 1;
          swift_bridgeObjectRetain();
          if (v271 < 0)
          {
            *(void *)unint64_t v268 = *(void *)v269;
            *(unsigned char *)(v268 + 8) = *(unsigned char *)(v269 + 8);
            *(unsigned char *)(v268 + 9) = *(unsigned char *)(v269 + 9);
            unint64_t v284 = *(void **)(v269 + 16);
            id v285 = v284;
            *(void *)(v268 + 16) = v284;
            size_t v286 = *(void **)(v269 + 24);
            id v287 = v286;
            *(void *)(v268 + 24) = v286;
            *(unsigned char *)(v268 + 32) = *(unsigned char *)(v269 + 32);
            *(unsigned char *)(v268 + 33) = *(unsigned char *)(v269 + 33);
            *(unsigned char *)(v268 + 34) = *(unsigned char *)(v269 + 34);
            *(void *)(v268 + 40) = *(void *)(v269 + 40);
            *(void *)(v268 + 48) = *(void *)(v269 + 48);
            *(void *)(v268 + 56) = *(void *)(v269 + 56);
            *(void *)(v268 + 64) = *(void *)(v269 + 64);
            *(unsigned char *)(v268 + 72) = *(unsigned char *)(v269 + 72);
            *(void *)(v268 + 80) = *(void *)(v269 + 80);
            *(void *)(v268 + 88) = *(void *)(v269 + 88);
            unint64_t v288 = *(void **)(v269 + 96);
            *(void *)(v268 + 96) = v288;
            *(unsigned char *)(v268 + 104) = *(unsigned char *)(v269 + 104);
            *(unsigned char *)(v268 + 105) = *(unsigned char *)(v269 + 105);
            *(void *)(v268 + 112) = *(void *)(v269 + 112);
            *(void *)(v268 + 120) = *(void *)(v269 + 120);
            *(void *)(v268 + 128) = *(void *)(v269 + 128);
            *(void *)(v268 + 136) = *(void *)(v269 + 136);
            *(void *)(v268 + 144) = *(void *)(v269 + 144);
            *(void *)(v268 + 152) = *(void *)(v269 + 152);
            *(void *)(v268 + 160) = *(void *)(v269 + 160);
            *(void *)(v268 + 168) = *(void *)(v269 + 168);
            *(unsigned char *)(v268 + 176) = *(unsigned char *)(v269 + 176);
            *(void *)(v268 + 184) = *(void *)(v269 + 184);
            uint64_t v289 = *(void *)(v269 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v290 = v288;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v289)
            {
              *(void *)(v268 + 192) = v289;
              *(void *)(v268 + 200) = *(void *)(v269 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v268 + 192) = *(_OWORD *)(v269 + 192);
            }
            unsigned int v259 = v457;
            size_t v108 = v465;
            *(void *)(v268 + 208) = *(void *)(v269 + 208);
            *(void *)(v268 + 216) = *(void *)(v269 + 216);
            *(void *)(v268 + 224) = *(void *)(v269 + 224);
            *(void *)(v268 + 232) = *(void *)(v269 + 232);
            *(void *)(v268 + 240) = *(void *)(v269 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v272 = *(_OWORD *)v269;
            long long v273 = *(_OWORD *)(v269 + 16);
            long long v274 = *(_OWORD *)(v269 + 48);
            *(_OWORD *)(v268 + 32) = *(_OWORD *)(v269 + 32);
            *(_OWORD *)(v268 + 48) = v274;
            *(_OWORD *)unint64_t v268 = v272;
            *(_OWORD *)(v268 + 16) = v273;
            long long v275 = *(_OWORD *)(v269 + 64);
            long long v276 = *(_OWORD *)(v269 + 80);
            long long v277 = *(_OWORD *)(v269 + 112);
            *(_OWORD *)(v268 + 96) = *(_OWORD *)(v269 + 96);
            *(_OWORD *)(v268 + 112) = v277;
            *(_OWORD *)(v268 + 64) = v275;
            *(_OWORD *)(v268 + 80) = v276;
            long long v278 = *(_OWORD *)(v269 + 128);
            long long v279 = *(_OWORD *)(v269 + 144);
            long long v280 = *(_OWORD *)(v269 + 176);
            *(_OWORD *)(v268 + 160) = *(_OWORD *)(v269 + 160);
            *(_OWORD *)(v268 + 176) = v280;
            *(_OWORD *)(v268 + 128) = v278;
            *(_OWORD *)(v268 + 144) = v279;
            long long v281 = *(_OWORD *)(v269 + 192);
            long long v282 = *(_OWORD *)(v269 + 208);
            long long v283 = *(_OWORD *)(v269 + 224);
            *(void *)(v268 + 240) = *(void *)(v269 + 240);
            *(_OWORD *)(v268 + 208) = v282;
            *(_OWORD *)(v268 + 224) = v283;
            *(_OWORD *)(v268 + 192) = v281;
            size_t v108 = v465;
          }
          long long v384 = (_OWORD *)((v268 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v385 = (long long *)((v269 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v386 = *v385;
          *(_OWORD *)((char *)v384 + 9) = *(long long *)((char *)v385 + 9);
          *long long v384 = v386;
          unint64_t v387 = (v268 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v388 = (v269 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v389 = *(_OWORD *)v388;
          *(unsigned char *)(v387 + 16) = *(unsigned char *)(v388 + 16);
          *(_OWORD *)unint64_t v387 = v389;
          long long v390 = (void *)((v268 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v391 = (v269 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v392 = *(void *)v391;
          v391 += 15;
          *long long v390 = v392;
          unint64_t v393 = (void *)(((unint64_t)v390 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v394 = *(void *)(v391 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v395 = *(void *)((v391 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v394, v395);
          *unint64_t v393 = v394;
          v393[1] = v395;
          int v52 = a1;
          unint64_t v107 = v527;
          uint64_t v67 = v475;
          if (v259)
          {
LABEL_193:
            unint64_t v396 = ((((v467
                     + ((((((((((v472 + v108 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            uint64_t v397 = (void *)(((unint64_t)v67 + v517 + v396) & v477);
            size_t v398 = (const void *)((unint64_t)&v107[v517 + v396] & v477);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v463 + 48))(v398, 1, v464))
            {
              memcpy(v397, v398, __n);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v463 + 16))(v397, v398, v464);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v463 + 56))(v397, 0, 1, v464);
            }
            uint64_t v399 = v478;
            size_t v400 = (char *)(((unint64_t)v397 + v509) & v437);
            unint64_t v401 = (char *)(((unint64_t)v398 + v509) & v437);
            if (v26 == v510)
            {
              int v402 = (*(uint64_t (**)(char *, void, uint64_t))(v458 + 48))(v401, v26, v459);
            }
            else
            {
              unint64_t v403 = (uint64_t *)((unint64_t)&v401[v478] & 0xFFFFFFFFFFFFFFF8);
              if (v507 <= 0x7FFFFFFE)
              {
                uint64_t v404 = *v403;
                if ((unint64_t)*v403 >= 0xFFFFFFFF) {
                  LODWORD(v404) = -1;
                }
                if ((v404 + 1) >= 2) {
                  goto LABEL_205;
                }
                goto LABEL_207;
              }
              int v402 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v493 + 48))(((unint64_t)v403 + v490) & v483, v476, v496);
            }
            uint64_t v399 = v478;
            if (v402)
            {
LABEL_205:
              size_t v405 = v487;
              memcpy(v400, v401, v487);
LABEL_208:
              *(void *)&v400[v405] = *(void *)&v401[v405];
              size_t v415 = (void *)((unint64_t)&v400[v405 + 15] & 0xFFFFFFFFFFFFFFF8);
              unint64_t v416 = (void *)((unint64_t)&v401[v405 + 15] & 0xFFFFFFFFFFFFFFF8);
              void *v415 = *v416;
              int v126 = *(void **)(((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8) = v126;
              char v127 = 1;
              goto LABEL_209;
            }
            unint64_t v403 = (uint64_t *)((unint64_t)&v401[v478] & 0xFFFFFFFFFFFFFFF8);
LABEL_207:
            uint64_t v406 = v399;
            (*(void (**)(char *, char *, uint64_t))(v458 + 16))(v400, v401, v459);
            long long v407 = (void *)((unint64_t)&v400[v406] & 0xFFFFFFFFFFFFFFF8);
            *long long v407 = *v403;
            unint64_t v408 = ((unint64_t)v407 + v490) & v483;
            unint64_t v409 = ((unint64_t)v403 + v490) & v483;
            size_t v410 = *(void (**)(unint64_t, unint64_t, uint64_t))(v493 + 16);
            swift_bridgeObjectRetain();
            v410(v408, v409, v496);
            uint64_t v411 = (void *)((v480 + v408) & 0xFFFFFFFFFFFFFFF8);
            int v412 = (void *)((v480 + v409) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v411 = *v412;
            long long v413 = (void *)(((unint64_t)v411 + 15) & 0xFFFFFFFFFFFFFFF8);
            size_t v414 = (void *)(((unint64_t)v412 + 15) & 0xFFFFFFFFFFFFFFF8);
            *long long v413 = *v414;
            v413[1] = v414[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            size_t v405 = v487;
            goto LABEL_208;
          }
LABEL_106:
          size_t v108 = v471;
          goto LABEL_193;
        }
        int v139 = (*(uint64_t (**)(unint64_t))(v449 + 48))(((unint64_t)v130 + v448) & v500);
      }
      else
      {
        unint64_t v104 = v462 + v89;
        if ((v440 & 0x80000000) == 0)
        {
          unint64_t v105 = *(void *)(v104 + 8);
          if (v105 >= 0xFFFFFFFF) {
            LODWORD(v105) = -1;
          }
          int v69 = v105 + 1;
LABEL_104:
          uint64_t v106 = v66;
          int v52 = a1;
          if (v69)
          {
LABEL_105:
            unint64_t v107 = v527;
            memcpy(v67, v527, v460);
            goto LABEL_106;
          }
          goto LABEL_158;
        }
        uint64_t v138 = (v452 + ((v451 + v104) & v66)) & v504;
        int v52 = a1;
        if (v457 <= 0x7FFFFFFD)
        {
          uint64_t v106 = v66;
          unint64_t v435 = *(void *)(((v438 + ((v447 + v138) & v504)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v435 >= 0xFFFFFFFF) {
            LODWORD(v435) = -1;
          }
          if ((v435 + 1) >= 2) {
            goto LABEL_105;
          }
          goto LABEL_159;
        }
        int v139 = (*(uint64_t (**)(uint64_t))(v466 + 48))(v138);
      }
      uint64_t v106 = v66;
      if (v139) {
        goto LABEL_105;
      }
LABEL_158:
      unint64_t v88 = (unint64_t)&v527[v473] & v55;
      unint64_t v89 = (v474 + v88) & v512;
      goto LABEL_159;
    case 2u:
      uint64_t v71 = v58;
      uint64_t v481 = *(void *)(*(void *)(v22 - 8) + 64) + 7;
      uint64_t v484 = v59;
      uint64_t v72 = *(unsigned int *)(v23 + 84);
      uint64_t v73 = v29;
      uint64_t v491 = v30;
      uint64_t v494 = *(void *)(v22 - 8);
      uint64_t v497 = v22;
      size_t v488 = v31;
      unint64_t v522 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v74 = (void *)(((unint64_t)a1 + v34) & ~v517);
      uint64_t v75 = (const void *)((unint64_t)&a2[v34] & ~v517);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v463 + 48))(v75, 1, v464))
      {
        memcpy(v74, v75, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v463 + 16))(v74, v75, v464);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v463 + 56))(v74, 0, 1, v464);
      }
      uint64_t v92 = (char *)(((unint64_t)v74 + v509) & v71);
      unint64_t v93 = (char *)(((unint64_t)v75 + v509) & v71);
      if (v26 == v510)
      {
        int v94 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v458 + 48))(v93, v26, v459);
      }
      else
      {
        unint64_t v95 = (uint64_t *)((unint64_t)&v93[v73] & 0xFFFFFFFFFFFFFFF8);
        if (v507 <= 0x7FFFFFFE)
        {
          uint64_t v96 = v73;
          uint64_t v97 = *v95;
          if ((unint64_t)*v95 >= 0xFFFFFFFF) {
            LODWORD(v97) = -1;
          }
          if ((v97 + 1) >= 2) {
            goto LABEL_116;
          }
          goto LABEL_118;
        }
        int v94 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v494 + 48))(((unint64_t)v95 + v491) & v484, v72, v497);
      }
      uint64_t v96 = v73;
      if (v94)
      {
LABEL_116:
        size_t v115 = v488;
        memcpy(v92, v93, v488);
        goto LABEL_119;
      }
      unint64_t v95 = (uint64_t *)((unint64_t)&v93[v73] & 0xFFFFFFFFFFFFFFF8);
LABEL_118:
      uint64_t v116 = v96;
      (*(void (**)(char *, char *, uint64_t))(v458 + 16))(v92, v93, v459);
      unint64_t v117 = (void *)((unint64_t)&v92[v116] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v117 = *v95;
      unint64_t v118 = ((unint64_t)v117 + v491) & v484;
      unint64_t v119 = ((unint64_t)v95 + v491) & v484;
      uint64_t v120 = *(void (**)(unint64_t, unint64_t, uint64_t))(v494 + 16);
      swift_bridgeObjectRetain();
      v120(v118, v119, v497);
      size_t v121 = (void *)((v481 + v118) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v122 = (void *)((v481 + v119) & 0xFFFFFFFFFFFFFFF8);
      *size_t v121 = *v122;
      int v123 = (void *)(((unint64_t)v121 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v124 = (void *)(((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8);
      *int v123 = *v124;
      v123[1] = v124[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v115 = v488;
LABEL_119:
      size_t v125 = &v92[v115];
      *size_t v125 = v93[v115];
      int v126 = *(void **)&v93[v115 + 8];
      *((void *)v125 + 1) = v126;
      char v127 = 2;
LABEL_209:
      *((unsigned char *)v52 + v522) = v127;
      id v417 = v126;
      return v52;
    case 3u:
      uint64_t v501 = v56;
      uint64_t v505 = ~v482;
      unint64_t v523 = v42;
      unint64_t v76 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16);
      int v77 = a2;
      v76(a1, a2, AssociatedTypeWitness);
      uint64_t v519 = (void *)(((unint64_t)a1 + v468) & v54);
      unint64_t v78 = (void *)((unint64_t)&a2[v468] & v54);
      long long v528 = v78;
      if (v470 == v469)
      {
        int v79 = (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&v77[v468] & v54);
        unint64_t v78 = v528;
        uint64_t v80 = v466;
        goto LABEL_111;
      }
      unint64_t v90 = ((unint64_t)v78 + v473) & v55;
      unint64_t v91 = (v474 + v90) & v512;
      uint64_t v80 = v466;
      if (v453 == v469)
      {
        if (v441 == v453)
        {
          int v79 = (*(uint64_t (**)(unint64_t))(v5 + 48))((v474 + v90) & v512);
          unint64_t v78 = v528;
          goto LABEL_111;
        }
        unint64_t v132 = (unint64_t *)((v454 + v91) & 0xFFFFFFFFFFFFFFF8);
        int v52 = a1;
        if (v439 <= 0x7FFFFFFE)
        {
          unint64_t v133 = *v132;
          if (v133 >= 0xFFFFFFFF) {
            LODWORD(v133) = -1;
          }
          uint64_t v111 = ~v479;
          if ((v133 + 1) >= 2) {
            goto LABEL_112;
          }
          goto LABEL_174;
        }
        int v135 = (*(uint64_t (**)(unint64_t))(v449 + 48))(((unint64_t)v132 + v448) & v501);
LABEL_172:
        unint64_t v78 = v528;
        uint64_t v111 = ~v479;
        if (v135) {
          goto LABEL_112;
        }
LABEL_173:
        unint64_t v90 = ((unint64_t)v78 + v473) & v55;
        unint64_t v91 = (v474 + v90) & v512;
        goto LABEL_174;
      }
      unint64_t v109 = v462 + v91;
      if ((v440 & 0x80000000) == 0)
      {
        unint64_t v110 = *(void *)(v109 + 8);
        if (v110 >= 0xFFFFFFFF) {
          LODWORD(v110) = -1;
        }
        int v79 = v110 + 1;
LABEL_111:
        uint64_t v111 = ~v479;
        int v52 = a1;
        if (v79)
        {
LABEL_112:
          size_t v112 = v519;
          memcpy(v519, v78, v460);
          unint64_t v113 = v467;
LABEL_113:
          size_t v114 = v471;
          goto LABEL_213;
        }
        goto LABEL_173;
      }
      uint64_t v134 = (v452 + ((v451 + v109) & ~v479)) & v505;
      int v52 = a1;
      if (v457 > 0x7FFFFFFD)
      {
        int v135 = (*(uint64_t (**)(uint64_t))(v466 + 48))(v134);
        goto LABEL_172;
      }
      uint64_t v111 = ~v479;
      unint64_t v433 = *(void *)(((v438 + ((v447 + v134) & v505)) & 0xFFFFFFFFFFFFFFF8) + 8);
      if (v433 >= 0xFFFFFFFF) {
        LODWORD(v433) = -1;
      }
      if ((v433 + 1) >= 2) {
        goto LABEL_112;
      }
LABEL_174:
      uint64_t v291 = v111;
      v76(v519, (unsigned __int8 *)v78, AssociatedTypeWitness);
      v76((void *)(((unint64_t)v519 + v473) & v55), (unsigned __int8 *)v90, AssociatedTypeWitness);
      unint64_t v292 = (v474 + (((unint64_t)v519 + v473) & v55)) & v512;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v455 + 16))(v292, v91, v456);
      uint64_t v293 = (void *)((v454 + v292) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v294 = (void *)((v454 + v91) & 0xFFFFFFFFFFFFFFF8);
      void *v293 = *v294;
      unint64_t v295 = ((unint64_t)v293 + v448) & v501;
      unint64_t v296 = ((unint64_t)v294 + v448) & v501;
      uint64_t v297 = *(void (**)(unint64_t, unint64_t, uint64_t))(v449 + 16);
      swift_bridgeObjectRetain();
      v297(v295, v296, v450);
      unint64_t v298 = (void *)((v444 + v296) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v299 = (void *)((v444 + v295) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v299 = *v298;
      unint64_t v300 = (void *)(((unint64_t)v299 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v301 = (void *)(((unint64_t)v298 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v300 = *v301;
      v300[1] = v301[1];
      unint64_t v302 = (void *)(v462 + v292);
      unint64_t v303 = v462 + v91;
      *unint64_t v302 = *(void *)(v462 + v91);
      v302[1] = *(void *)(v462 + v91 + 8);
      unint64_t v304 = (v451 + v462 + v292) & v291;
      uint64_t v305 = (v451 + v303) & v291;
      *(unsigned char *)unint64_t v304 = *(unsigned char *)v305;
      uint64_t v306 = v304 | 4;
      int v307 = *(_DWORD *)(v305 | 4);
      *(unsigned char *)(v306 + 4) = *(unsigned char *)((v305 | 4) + 4);
      *(_DWORD *)uint64_t v306 = v307;
      *(_WORD *)(v304 + 10) = *(_WORD *)(v305 + 10);
      uint64_t v308 = (v452 + v304) & v505;
      uint64_t v309 = (v452 + v305) & v505;
      unint64_t v310 = *(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v310(v308, v309, v461);
      uint64_t v311 = (v447 + v308) & v505;
      uint64_t v312 = (v447 + v309) & v505;
      v310(v311, v312, v461);
      unint64_t v313 = (unsigned char *)(v311 + v465);
      *unint64_t v313 = *(unsigned char *)(v312 + v465);
      v313[1] = *(unsigned char *)(v312 + v465 + 1);
      v313[2] = *(unsigned char *)(v312 + v465 + 2);
      v313[3] = *(unsigned char *)(v312 + v465 + 3);
      v313[4] = *(unsigned char *)(v312 + v465 + 4);
      unint64_t v314 = (v311 + v465 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v315 = (v312 + v465 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v314 = *(void *)v315;
      *(void *)(v314 + 8) = *(void *)(v315 + 8);
      *(unsigned char *)(v314 + 16) = *(unsigned char *)(v315 + 16);
      *(unsigned char *)(v314 + 17) = *(unsigned char *)(v315 + 17);
      *(unsigned char *)(v314 + 18) = *(unsigned char *)(v315 + 18);
      *(unsigned char *)(v314 + 19) = *(unsigned char *)(v315 + 19);
      unint64_t v316 = (v314 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v317 = (v315 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v316 = *(void *)v317;
      *(unsigned char *)(v316 + 8) = *(unsigned char *)(v317 + 8);
      *(unsigned char *)(v316 + 9) = *(unsigned char *)(v317 + 9);
      *(unsigned char *)(v316 + 10) = *(unsigned char *)(v317 + 10);
      *(unsigned char *)(v316 + 11) = *(unsigned char *)(v317 + 11);
      *(unsigned char *)(v316 + 12) = *(unsigned char *)(v317 + 12);
      unint64_t v318 = (void *)((v315 + 47) & 0xFFFFFFFFFFFFFFF8);
      size_t v319 = (void *)((v314 + 47) & 0xFFFFFFFFFFFFFFF8);
      *size_t v319 = *v318;
      unint64_t v320 = ((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v321 = ((unint64_t)v318 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v320 = *(void *)v321;
      *(unsigned char *)(v320 + 8) = *(unsigned char *)(v321 + 8);
      *(unsigned char *)(v320 + 9) = *(unsigned char *)(v321 + 9);
      size_t v322 = (void *)((v445 + v320) & v505);
      size_t v323 = (const void *)((v445 + v321) & v505);
      size_t v324 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v80 + 48);
      swift_bridgeObjectRetain();
      if (v324(v323, 1, v461))
      {
        memcpy(v322, v323, v471);
      }
      else
      {
        v310((uint64_t)v322, (uint64_t)v323, v461);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v80 + 56))(v322, 0, 1, v461);
      }
      size_t v325 = (void *)(((unint64_t)v322 + v442) & 0xFFFFFFFFFFFFFFF8);
      size_t v326 = (void *)(((unint64_t)v323 + v442) & 0xFFFFFFFFFFFFFFF8);
      *size_t v325 = *v326;
      unint64_t v327 = ((unint64_t)v325 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v328 = ((unint64_t)v326 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v329 = *(void *)v328;
      *(unsigned char *)(v327 + 8) = *(unsigned char *)(v328 + 8);
      *(void *)unint64_t v327 = v329;
      size_t v330 = (void *)(((unint64_t)v325 + 31) & 0xFFFFFFFFFFFFFFF8);
      size_t v331 = (void *)(((unint64_t)v326 + 31) & 0xFFFFFFFFFFFFFFF8);
      *size_t v330 = *v331;
      unint64_t v332 = ((unint64_t)v330 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v333 = (uint64_t *)(((unint64_t)v331 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v334 = v333[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v334 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v332 = *(_OWORD *)v333;
      }
      else
      {
        uint64_t v335 = *v333;
        sub_24D3F9C18(*v333, v334);
        *(void *)unint64_t v332 = v335;
        *(void *)(v332 + 8) = v334;
      }
      unint64_t v336 = (v332 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v337 = ((unint64_t)v333 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v338 = *(void *)v337;
      *(unsigned char *)(v336 + 8) = *(unsigned char *)(v337 + 8);
      *(void *)unint64_t v336 = v338;
      *(unsigned char *)(v336 + 9) = *(unsigned char *)(v337 + 9);
      unint64_t v339 = (v336 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v340 = (v337 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v341 = *(_DWORD *)v340;
      *(unsigned char *)(v339 + 4) = *(unsigned char *)(v340 + 4);
      *(_DWORD *)unint64_t v339 = v341;
      uint64_t v342 = (void *)((v336 + 25) & 0xFFFFFFFFFFFFFFF8);
      int v343 = (void *)((v337 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v342 = *v343;
      v342[1] = v343[1];
      unint64_t v344 = v443 + v304;
      size_t v345 = (long long *)(v443 + v305);
      unint64_t v346 = *((void *)v345 + 2);
      if (v346 >= 0xFFFFFFFF) {
        LODWORD(v346) = -1;
      }
      int v347 = v346 - 1;
      swift_bridgeObjectRetain();
      if (v347 < 0)
      {
        *(void *)unint64_t v344 = *(void *)v345;
        *(unsigned char *)(v344 + 8) = *((unsigned char *)v345 + 8);
        *(unsigned char *)(v344 + 9) = *((unsigned char *)v345 + 9);
        unint64_t v361 = (void *)*((void *)v345 + 2);
        id v362 = v361;
        *(void *)(v344 + 16) = v361;
        size_t v363 = (void *)*((void *)v345 + 3);
        id v364 = v363;
        *(void *)(v344 + 24) = v363;
        *(unsigned char *)(v344 + 32) = *((unsigned char *)v345 + 32);
        *(unsigned char *)(v344 + 33) = *((unsigned char *)v345 + 33);
        *(unsigned char *)(v344 + 34) = *((unsigned char *)v345 + 34);
        *(void *)(v344 + 40) = *((void *)v345 + 5);
        *(void *)(v344 + 48) = *((void *)v345 + 6);
        *(void *)(v344 + 56) = *((void *)v345 + 7);
        *(void *)(v344 + 64) = *((void *)v345 + 8);
        *(unsigned char *)(v344 + 72) = *((unsigned char *)v345 + 72);
        *(void *)(v344 + 80) = *((void *)v345 + 10);
        *(void *)(v344 + 88) = *((void *)v345 + 11);
        uint64_t v515 = (void *)*((void *)v345 + 12);
        *(void *)(v344 + 96) = v515;
        *(unsigned char *)(v344 + 104) = *((unsigned char *)v345 + 104);
        *(unsigned char *)(v344 + 105) = *((unsigned char *)v345 + 105);
        *(void *)(v344 + 112) = *((void *)v345 + 14);
        *(void *)(v344 + 120) = *((void *)v345 + 15);
        *(void *)(v344 + 128) = *((void *)v345 + 16);
        *(void *)(v344 + 136) = *((void *)v345 + 17);
        *(void *)(v344 + 144) = *((void *)v345 + 18);
        *(void *)(v344 + 152) = *((void *)v345 + 19);
        *(void *)(v344 + 160) = *((void *)v345 + 20);
        *(void *)(v344 + 168) = *((void *)v345 + 21);
        *(unsigned char *)(v344 + 176) = *((unsigned char *)v345 + 176);
        *(void *)(v344 + 184) = *((void *)v345 + 23);
        uint64_t v365 = *((void *)v345 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v366 = v515;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v365)
        {
          *(void *)(v344 + 192) = v365;
          *(void *)(v344 + 200) = *((void *)v345 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v344 + 192) = v345[12];
        }
        unint64_t v113 = v467;
        unsigned int v360 = v457;
        *(void *)(v344 + 208) = *((void *)v345 + 26);
        *(void *)(v344 + 216) = *((void *)v345 + 27);
        *(void *)(v344 + 224) = *((void *)v345 + 28);
        *(void *)(v344 + 232) = *((void *)v345 + 29);
        *(void *)(v344 + 240) = *((void *)v345 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v348 = *v345;
        long long v349 = v345[1];
        long long v350 = v345[3];
        *(_OWORD *)(v344 + 32) = v345[2];
        *(_OWORD *)(v344 + 48) = v350;
        *(_OWORD *)unint64_t v344 = v348;
        *(_OWORD *)(v344 + 16) = v349;
        long long v351 = v345[4];
        long long v352 = v345[5];
        long long v353 = v345[7];
        *(_OWORD *)(v344 + 96) = v345[6];
        *(_OWORD *)(v344 + 112) = v353;
        *(_OWORD *)(v344 + 64) = v351;
        *(_OWORD *)(v344 + 80) = v352;
        long long v354 = v345[8];
        long long v355 = v345[9];
        long long v356 = v345[11];
        *(_OWORD *)(v344 + 160) = v345[10];
        *(_OWORD *)(v344 + 176) = v356;
        *(_OWORD *)(v344 + 128) = v354;
        *(_OWORD *)(v344 + 144) = v355;
        long long v357 = v345[12];
        long long v358 = v345[13];
        long long v359 = v345[14];
        *(void *)(v344 + 240) = *((void *)v345 + 30);
        *(_OWORD *)(v344 + 208) = v358;
        *(_OWORD *)(v344 + 224) = v359;
        *(_OWORD *)(v344 + 192) = v357;
        unint64_t v113 = v467;
        unsigned int v360 = v457;
      }
      unint64_t v418 = (_OWORD *)((v344 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v419 = (long long *)(((unint64_t)v345 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v420 = *v419;
      *(_OWORD *)((char *)v418 + 9) = *(long long *)((char *)v419 + 9);
      *unint64_t v418 = v420;
      unint64_t v421 = (v344 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v422 = ((unint64_t)v345 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v423 = *(_OWORD *)v422;
      *(unsigned char *)(v421 + 16) = *(unsigned char *)(v422 + 16);
      *(_OWORD *)unint64_t v421 = v423;
      unint64_t v424 = (void *)((v344 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v425 = ((unint64_t)v345 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v426 = *(void *)v425;
      v425 += 15;
      *unint64_t v424 = v426;
      long long v427 = (void *)(((unint64_t)v424 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v428 = *(void *)(v425 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v429 = *(void *)((v425 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v428, v429);
      void *v427 = v428;
      v427[1] = v429;
      int v52 = a1;
      size_t v114 = v465;
      size_t v112 = v519;
      if (!v360) {
        goto LABEL_113;
      }
LABEL_213:
      unint64_t v430 = ((((v113
               + ((((((((((v472 + v114 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v431 = (void *)(((unint64_t)v112 + v430) & 0xFFFFFFFFFFFFFFF8);
      long long v432 = (void *)(((unint64_t)v528 + v430) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v431 = *v432;
      v431[1] = v432[1];
      *(void *)(((unint64_t)v431 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v432 + 23) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v52 + v523) = 3;
      swift_bridgeObjectRetain();
      return v52;
    case 4u:
      unint64_t v81 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v81) = 4;
      return v52;
    case 5u:
      unint64_t v82 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v82) = 5;
      return v52;
    case 6u:
      unint64_t v83 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      int v84 = (const void *)((unint64_t)&a2[v40] & v60);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v35 + 48))(v84, 1, v520))
      {
        memcpy((void *)(((unint64_t)a1 + v40) & v60), v84, v38);
      }
      else
      {
        (*(void (**)(unint64_t, const void *, uint64_t))(v35 + 16))(((unint64_t)a1 + v40) & v60, v84, v520);
        (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v35 + 56))(((unint64_t)a1 + v40) & v60, 0, 1, v520);
      }
      *((unsigned char *)a1 + v83) = 6;
      return v52;
    case 7u:
      unint64_t v85 = v42;
      int v52 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16))(a1, a2, AssociatedTypeWitness);
      *((unsigned char *)a1 + v85) = 7;
      return v52;
    default:
      uint64_t v499 = v56;
      uint64_t v503 = ~v482;
      unint64_t v521 = v42;
      uint64_t v61 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v4 + 16);
      int v62 = a2;
      v61(a1, a2, AssociatedTypeWitness);
      unint64_t v518 = (void *)(((unint64_t)a1 + v468) & v54);
      int v63 = (void *)((unint64_t)&a2[v468] & v54);
      long long v526 = v63;
      if (v470 == v469)
      {
        int v64 = (*(uint64_t (**)(unint64_t))(v4 + 48))((unint64_t)&v62[v468] & v54);
        int v63 = v526;
        uint64_t v65 = v466;
        goto LABEL_97;
      }
      unint64_t v86 = ((unint64_t)v63 + v473) & v55;
      unint64_t v87 = (v474 + v86) & v512;
      uint64_t v65 = v466;
      if (v453 == v469)
      {
        if (v441 == v453)
        {
          int v64 = (*(uint64_t (**)(unint64_t))(v5 + 48))((v474 + v86) & v512);
          int v63 = v526;
          goto LABEL_97;
        }
        unint64_t v128 = (unint64_t *)((v454 + v87) & 0xFFFFFFFFFFFFFFF8);
        int v52 = a1;
        if (v439 <= 0x7FFFFFFE)
        {
          unint64_t v129 = *v128;
          if (v129 >= 0xFFFFFFFF) {
            LODWORD(v129) = -1;
          }
          uint64_t v100 = ~v479;
          if ((v129 + 1) >= 2) {
            goto LABEL_98;
          }
LABEL_144:
          uint64_t v140 = v100;
          v61(v518, (unsigned __int8 *)v63, AssociatedTypeWitness);
          v61((void *)(((unint64_t)v518 + v473) & v55), (unsigned __int8 *)v86, AssociatedTypeWitness);
          unint64_t v141 = (v474 + (((unint64_t)v518 + v473) & v55)) & v512;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v455 + 16))(v141, v87, v456);
          uint64_t v142 = (void *)((v454 + v141) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v143 = (void *)((v454 + v87) & 0xFFFFFFFFFFFFFFF8);
          void *v142 = *v143;
          unint64_t v144 = ((unint64_t)v142 + v448) & v499;
          unint64_t v145 = ((unint64_t)v143 + v448) & v499;
          unint64_t v146 = *(void (**)(unint64_t, unint64_t, uint64_t))(v449 + 16);
          swift_bridgeObjectRetain();
          v146(v144, v145, v450);
          int v147 = (void *)((v444 + v145) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v148 = (void *)((v444 + v144) & 0xFFFFFFFFFFFFFFF8);
          void *v148 = *v147;
          unint64_t v149 = (void *)(((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8);
          size_t v150 = (void *)(((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v149 = *v150;
          v149[1] = v150[1];
          uint64_t v151 = (void *)(v462 + v141);
          unint64_t v152 = v462 + v87;
          *uint64_t v151 = *(void *)(v462 + v87);
          v151[1] = *(void *)(v462 + v87 + 8);
          unint64_t v153 = (v451 + v462 + v141) & v140;
          uint64_t v154 = (v451 + v152) & v140;
          *(unsigned char *)unint64_t v153 = *(unsigned char *)v154;
          uint64_t v155 = v153 | 4;
          int v156 = *(_DWORD *)(v154 | 4);
          *(unsigned char *)(v155 + 4) = *(unsigned char *)((v154 | 4) + 4);
          *(_DWORD *)uint64_t v155 = v156;
          *(_WORD *)(v153 + 10) = *(_WORD *)(v154 + 10);
          uint64_t v157 = (v452 + v153) & v503;
          uint64_t v158 = (v452 + v154) & v503;
          unint64_t v159 = *(void (**)(uint64_t, uint64_t, uint64_t))(v65 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v159(v157, v158, v461);
          uint64_t v160 = (v447 + v157) & v503;
          uint64_t v161 = (v447 + v158) & v503;
          v159(v160, v161, v461);
          unint64_t v162 = (unsigned char *)(v160 + v465);
          *unint64_t v162 = *(unsigned char *)(v161 + v465);
          v162[1] = *(unsigned char *)(v161 + v465 + 1);
          v162[2] = *(unsigned char *)(v161 + v465 + 2);
          v162[3] = *(unsigned char *)(v161 + v465 + 3);
          v162[4] = *(unsigned char *)(v161 + v465 + 4);
          unint64_t v163 = (v160 + v465 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v164 = (v161 + v465 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v163 = *(void *)v164;
          *(void *)(v163 + 8) = *(void *)(v164 + 8);
          *(unsigned char *)(v163 + 16) = *(unsigned char *)(v164 + 16);
          *(unsigned char *)(v163 + 17) = *(unsigned char *)(v164 + 17);
          *(unsigned char *)(v163 + 18) = *(unsigned char *)(v164 + 18);
          *(unsigned char *)(v163 + 19) = *(unsigned char *)(v164 + 19);
          unint64_t v165 = (v163 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v166 = (v164 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v165 = *(void *)v166;
          *(unsigned char *)(v165 + 8) = *(unsigned char *)(v166 + 8);
          *(unsigned char *)(v165 + 9) = *(unsigned char *)(v166 + 9);
          *(unsigned char *)(v165 + 10) = *(unsigned char *)(v166 + 10);
          *(unsigned char *)(v165 + 11) = *(unsigned char *)(v166 + 11);
          *(unsigned char *)(v165 + 12) = *(unsigned char *)(v166 + 12);
          int v167 = (void *)((v164 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v168 = (void *)((v163 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v168 = *v167;
          unint64_t v169 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v170 = ((unint64_t)v167 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v169 = *(void *)v170;
          *(unsigned char *)(v169 + 8) = *(unsigned char *)(v170 + 8);
          *(unsigned char *)(v169 + 9) = *(unsigned char *)(v170 + 9);
          size_t v171 = (void *)((v445 + v169) & v503);
          size_t v172 = (const void *)((v445 + v170) & v503);
          unint64_t v173 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v65 + 48);
          swift_bridgeObjectRetain();
          if (v173(v172, 1, v461))
          {
            memcpy(v171, v172, v471);
          }
          else
          {
            v159((uint64_t)v171, (uint64_t)v172, v461);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v65 + 56))(v171, 0, 1, v461);
          }
          size_t v174 = (void *)(((unint64_t)v171 + v442) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v175 = (void *)(((unint64_t)v172 + v442) & 0xFFFFFFFFFFFFFFF8);
          *size_t v174 = *v175;
          unint64_t v176 = ((unint64_t)v174 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v177 = ((unint64_t)v175 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v178 = *(void *)v177;
          *(unsigned char *)(v176 + 8) = *(unsigned char *)(v177 + 8);
          *(void *)unint64_t v176 = v178;
          unint64_t v179 = (void *)(((unint64_t)v174 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v180 = (void *)(((unint64_t)v175 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v179 = *v180;
          unint64_t v181 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v182 = (uint64_t *)(((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v183 = v182[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v183 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v181 = *(_OWORD *)v182;
          }
          else
          {
            uint64_t v184 = *v182;
            sub_24D3F9C18(*v182, v183);
            *(void *)unint64_t v181 = v184;
            *(void *)(v181 + 8) = v183;
          }
          unint64_t v185 = (v181 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v186 = ((unint64_t)v182 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v187 = *(void *)v186;
          *(unsigned char *)(v185 + 8) = *(unsigned char *)(v186 + 8);
          *(void *)unint64_t v185 = v187;
          *(unsigned char *)(v185 + 9) = *(unsigned char *)(v186 + 9);
          unint64_t v188 = (v185 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v189 = (v186 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v190 = *(_DWORD *)v189;
          *(unsigned char *)(v188 + 4) = *(unsigned char *)(v189 + 4);
          *(_DWORD *)unint64_t v188 = v190;
          unint64_t v191 = (void *)((v185 + 25) & 0xFFFFFFFFFFFFFFF8);
          size_t v192 = (void *)((v186 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v191 = *v192;
          v191[1] = v192[1];
          unint64_t v193 = v443 + v153;
          size_t v194 = (long long *)(v443 + v154);
          unint64_t v195 = *((void *)v194 + 2);
          if (v195 >= 0xFFFFFFFF) {
            LODWORD(v195) = -1;
          }
          int v196 = v195 - 1;
          swift_bridgeObjectRetain();
          if (v196 < 0)
          {
            *(void *)unint64_t v193 = *(void *)v194;
            *(unsigned char *)(v193 + 8) = *((unsigned char *)v194 + 8);
            *(unsigned char *)(v193 + 9) = *((unsigned char *)v194 + 9);
            unsigned int v210 = (void *)*((void *)v194 + 2);
            id v211 = v210;
            *(void *)(v193 + 16) = v210;
            uint64_t v212 = (void *)*((void *)v194 + 3);
            id v213 = v212;
            *(void *)(v193 + 24) = v212;
            *(unsigned char *)(v193 + 32) = *((unsigned char *)v194 + 32);
            *(unsigned char *)(v193 + 33) = *((unsigned char *)v194 + 33);
            *(unsigned char *)(v193 + 34) = *((unsigned char *)v194 + 34);
            *(void *)(v193 + 40) = *((void *)v194 + 5);
            *(void *)(v193 + 48) = *((void *)v194 + 6);
            *(void *)(v193 + 56) = *((void *)v194 + 7);
            *(void *)(v193 + 64) = *((void *)v194 + 8);
            *(unsigned char *)(v193 + 72) = *((unsigned char *)v194 + 72);
            *(void *)(v193 + 80) = *((void *)v194 + 10);
            *(void *)(v193 + 88) = *((void *)v194 + 11);
            size_t v513 = (void *)*((void *)v194 + 12);
            *(void *)(v193 + 96) = v513;
            *(unsigned char *)(v193 + 104) = *((unsigned char *)v194 + 104);
            *(unsigned char *)(v193 + 105) = *((unsigned char *)v194 + 105);
            *(void *)(v193 + 112) = *((void *)v194 + 14);
            *(void *)(v193 + 120) = *((void *)v194 + 15);
            *(void *)(v193 + 128) = *((void *)v194 + 16);
            *(void *)(v193 + 136) = *((void *)v194 + 17);
            *(void *)(v193 + 144) = *((void *)v194 + 18);
            *(void *)(v193 + 152) = *((void *)v194 + 19);
            *(void *)(v193 + 160) = *((void *)v194 + 20);
            *(void *)(v193 + 168) = *((void *)v194 + 21);
            *(unsigned char *)(v193 + 176) = *((unsigned char *)v194 + 176);
            *(void *)(v193 + 184) = *((void *)v194 + 23);
            uint64_t v214 = *((void *)v194 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v215 = v513;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v214)
            {
              *(void *)(v193 + 192) = v214;
              *(void *)(v193 + 200) = *((void *)v194 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v193 + 192) = v194[12];
            }
            unint64_t v102 = v467;
            unsigned int v209 = v457;
            *(void *)(v193 + 208) = *((void *)v194 + 26);
            *(void *)(v193 + 216) = *((void *)v194 + 27);
            *(void *)(v193 + 224) = *((void *)v194 + 28);
            *(void *)(v193 + 232) = *((void *)v194 + 29);
            *(void *)(v193 + 240) = *((void *)v194 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v197 = *v194;
            long long v198 = v194[1];
            long long v199 = v194[3];
            *(_OWORD *)(v193 + 32) = v194[2];
            *(_OWORD *)(v193 + 48) = v199;
            *(_OWORD *)unint64_t v193 = v197;
            *(_OWORD *)(v193 + 16) = v198;
            long long v200 = v194[4];
            long long v201 = v194[5];
            long long v202 = v194[7];
            *(_OWORD *)(v193 + 96) = v194[6];
            *(_OWORD *)(v193 + 112) = v202;
            *(_OWORD *)(v193 + 64) = v200;
            *(_OWORD *)(v193 + 80) = v201;
            long long v203 = v194[8];
            long long v204 = v194[9];
            long long v205 = v194[11];
            *(_OWORD *)(v193 + 160) = v194[10];
            *(_OWORD *)(v193 + 176) = v205;
            *(_OWORD *)(v193 + 128) = v203;
            *(_OWORD *)(v193 + 144) = v204;
            long long v206 = v194[12];
            long long v207 = v194[13];
            long long v208 = v194[14];
            *(void *)(v193 + 240) = *((void *)v194 + 30);
            *(_OWORD *)(v193 + 208) = v207;
            *(_OWORD *)(v193 + 224) = v208;
            *(_OWORD *)(v193 + 192) = v206;
            unint64_t v102 = v467;
            unsigned int v209 = v457;
          }
          unint64_t v367 = (_OWORD *)((v193 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v368 = (long long *)(((unint64_t)v194 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v369 = *v368;
          *(_OWORD *)((char *)v367 + 9) = *(long long *)((char *)v368 + 9);
          *unint64_t v367 = v369;
          unint64_t v370 = (v193 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v371 = ((unint64_t)v194 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v372 = *(_OWORD *)v371;
          *(unsigned char *)(v370 + 16) = *(unsigned char *)(v371 + 16);
          *(_OWORD *)unint64_t v370 = v372;
          long long v373 = (void *)((v193 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v374 = ((unint64_t)v194 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v375 = *(void *)v374;
          v374 += 15;
          *long long v373 = v375;
          long long v376 = (void *)(((unint64_t)v373 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v377 = *(void *)(v374 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v378 = *(void *)((v374 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v377, v378);
          *long long v376 = v377;
          v376[1] = v378;
          int v52 = a1;
          size_t v103 = v465;
          uint64_t v101 = v518;
          if (v209)
          {
LABEL_189:
            unint64_t v379 = ((((v102
                     + ((((((((((v472 + v103 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            long long v380 = (void *)(((unint64_t)v101 + v379) & 0xFFFFFFFFFFFFFFF8);
            long long v381 = (void *)(((unint64_t)v526 + v379) & 0xFFFFFFFFFFFFFFF8);
            *long long v380 = *v381;
            long long v382 = *(void **)(((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8);
            *(void *)(((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFFFF8) = v382;
            *((unsigned char *)v52 + v521) = 0;
            id v383 = v382;
            return v52;
          }
LABEL_99:
          size_t v103 = v471;
          goto LABEL_189;
        }
        int v137 = (*(uint64_t (**)(unint64_t))(v449 + 48))(((unint64_t)v128 + v448) & v499);
      }
      else
      {
        unint64_t v98 = v462 + v87;
        if ((v440 & 0x80000000) == 0)
        {
          unint64_t v99 = *(void *)(v98 + 8);
          if (v99 >= 0xFFFFFFFF) {
            LODWORD(v99) = -1;
          }
          int v64 = v99 + 1;
LABEL_97:
          uint64_t v100 = ~v479;
          int v52 = a1;
          if (v64)
          {
LABEL_98:
            uint64_t v101 = v518;
            memcpy(v518, v63, v460);
            unint64_t v102 = v467;
            goto LABEL_99;
          }
          goto LABEL_143;
        }
        uint64_t v136 = (v452 + ((v451 + v98) & ~v479)) & v503;
        int v52 = a1;
        if (v457 <= 0x7FFFFFFD)
        {
          uint64_t v100 = ~v479;
          unint64_t v434 = *(void *)(((v438 + ((v447 + v136) & v503)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v434 >= 0xFFFFFFFF) {
            LODWORD(v434) = -1;
          }
          if ((v434 + 1) >= 2) {
            goto LABEL_98;
          }
          goto LABEL_144;
        }
        int v137 = (*(uint64_t (**)(uint64_t))(v466 + 48))(v136);
      }
      int v63 = v526;
      uint64_t v100 = ~v479;
      if (v137) {
        goto LABEL_98;
      }
LABEL_143:
      unint64_t v86 = ((unint64_t)v63 + v473) & v55;
      unint64_t v87 = (v474 + v86) & v512;
      goto LABEL_144;
  }
}

void sub_24D9F34DC(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v213 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v211 = *(void *)(v213 + 64);
  uint64_t v3 = *(unsigned __int8 *)(v213 + 80);
  uint64_t v202 = v2;
  uint64_t v173 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v173 - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v165 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v165 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v5 | v7 | 7;
  uint64_t v162 = sub_24DCC8CE8();
  uint64_t v9 = *(void *)(v162 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v10 | 7;
  uint64_t v12 = v8 | v3 | v10;
  unint64_t v183 = v12 + v211;
  uint64_t v187 = v12;
  unint64_t v13 = (v12 + v211) & ~v12;
  uint64_t v172 = v4;
  uint64_t v164 = v6;
  unsigned int v14 = *(_DWORD *)(v6 + 84);
  unsigned int v155 = *(_DWORD *)(v4 + 84);
  if (v155 > v14) {
    unsigned int v14 = *(_DWORD *)(v4 + 84);
  }
  unsigned int v153 = v14;
  if (v14 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  unsigned int v170 = v14;
  unsigned int v185 = *(_DWORD *)(v213 + 84);
  if (v14 <= v185) {
    unsigned int v14 = *(_DWORD *)(v213 + 84);
  }
  uint64_t v161 = *(void *)(v162 - 8);
  unsigned int v15 = *(_DWORD *)(v9 + 84);
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v9 + 84);
  }
  if (v14 > v16) {
    unsigned int v16 = v14;
  }
  unsigned int v154 = v16;
  if (v16 <= 0x7FFFFFFF) {
    int v17 = 0x7FFFFFFF;
  }
  else {
    int v17 = v16;
  }
  int v184 = v17;
  unsigned int v152 = *(_DWORD *)(v9 + 84);
  uint64_t v181 = v211 + v3;
  uint64_t v191 = v3;
  uint64_t v182 = v211 + v8;
  uint64_t v171 = *(void *)(v4 + 64) + 7;
  uint64_t v163 = v7 + 8;
  uint64_t v189 = v7;
  unint64_t v176 = ((((*(void *)(v6 + 64) + 7 + ((v7 + 8 + (v171 & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v168 = v11 + 16;
  uint64_t v205 = v10 | 7;
  uint64_t v169 = v10 + 12;
  uint64_t v18 = *(void *)(*(void *)(v162 - 8) + 64);
  uint64_t v159 = v18 + v10;
  uint64_t v160 = v18 + 12;
  unint64_t v19 = (v10
       + 10
       + ((((((v18 + 12 + ((v18 + v10 + ((v10 + 12) & ~v10)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10;
  if (!v15) {
    ++v18;
  }
  uint64_t v156 = v10 + 10;
  uint64_t v157 = v18 + 7;
  unint64_t v158 = ((((((((((v18 + 7 + v19) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v186 = ((((((v11 + 16 + v176 + ((v211 + v8 + ((v211 + v3) & ~v3)) & ~v8)) & ~v11) + v158 + 311) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  unint64_t v20 = v186 + v13;
  unint64_t v195 = (v186 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v179 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v179 - 8);
  uint64_t v22 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v200 = (v20 + v22) & ~v22;
  uint64_t v178 = v21;
  if (*(_DWORD *)(v21 + 84)) {
    uint64_t v23 = *(void *)(v21 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v21 + 64) + 1;
  }
  uint64_t v194 = v23;
  uint64_t v175 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v175 - 8);
  uint64_t v25 = v24;
  int v26 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v27 = v22;
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
  uint64_t v174 = v24;
  unsigned int v177 = *(_DWORD *)(v24 + 84);
  if (v177 <= *(_DWORD *)(v29 + 84)) {
    unsigned int v31 = *(_DWORD *)(v29 + 84);
  }
  else {
    unsigned int v31 = *(_DWORD *)(v24 + 84);
  }
  if (v31 <= 0x7FFFFFFE) {
    int v32 = 2147483646;
  }
  else {
    int v32 = v31;
  }
  uint64_t v33 = *(void *)(v202 - 8);
  uint64_t v34 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v166 = v33;
  uint64_t v35 = *(void *)(v33 + 64);
  uint64_t v36 = v26 | v30 | 7;
  uint64_t v37 = *(void *)(v24 + 64) + 7;
  unint64_t v38 = ((((*(void *)(*(void *)(v28 - 8) + 64) + 7 + ((v30 + 8 + (v37 & 0xFFFFFFFFFFFFFFF8)) & ~v30)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v39 = v194 + v36;
  unint64_t v40 = ((((((v194 + v36 + v200) & ~v36) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v41 = v211 + v22;
  unint64_t v180 = v38;
  unint64_t v42 = v38 + ((v194 + v36 + ((v211 + v22) & ~v22)) & ~v36) + 16;
  uint64_t v43 = v211 + v34;
  if (!*(_DWORD *)(v33 + 84)) {
    ++v35;
  }
  unint64_t v44 = v35 + ((v211 + v34) & ~v34);
  unint64_t v45 = ((v195 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v211 > v45) {
    unint64_t v45 = v211;
  }
  if (v40 <= v42) {
    unint64_t v40 = v42;
  }
  if (((v195 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 <= v44) {
    unint64_t v46 = v44;
  }
  else {
    unint64_t v46 = ((v195 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v45 > v40) {
    unint64_t v40 = v45;
  }
  if (v40 > v46) {
    unint64_t v46 = v40;
  }
  uint64_t v47 = a1;
  unsigned int v48 = a1[v46];
  unsigned int v49 = v48 - 8;
  if (v48 < 8)
  {
    uint64_t v51 = AssociatedTypeWitness;
    uint64_t v52 = v187;
    uint64_t v53 = v189;
  }
  else
  {
    if (v46 <= 3) {
      uint64_t v50 = v46;
    }
    else {
      uint64_t v50 = 4;
    }
    uint64_t v51 = AssociatedTypeWitness;
    uint64_t v52 = v187;
    uint64_t v53 = v189;
    switch(v50)
    {
      case 1:
        int v54 = *a1;
        if (v46 < 4) {
          goto LABEL_52;
        }
        goto LABEL_53;
      case 2:
        int v54 = *(unsigned __int16 *)a1;
        if (v46 >= 4) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 3:
        int v54 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v46 >= 4) {
          goto LABEL_53;
        }
        goto LABEL_52;
      case 4:
        int v54 = *(_DWORD *)a1;
        if (v46 < 4) {
LABEL_52:
        }
          v54 |= v49 << (8 * v46);
LABEL_53:
        unsigned int v48 = v54 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v55 = ~v52;
  uint64_t v201 = ~v191;
  uint64_t v212 = ~v8;
  uint64_t v56 = ~v53;
  uint64_t v57 = ~v34;
  switch(v48)
  {
    case 1u:
      uint64_t v167 = ~v36;
      uint64_t v150 = v56;
      uint64_t v190 = v37;
      int v188 = v32;
      uint64_t v198 = ~v30;
      unsigned int v196 = v31;
      uint64_t v65 = ~v205;
      uint64_t v203 = v30 + 8;
      uint64_t v151 = ~v10;
      uint64_t v206 = *(void *)(v28 - 8);
      uint64_t v209 = v28;
      uint64_t v66 = *(void (**)(void))(v213 + 8);
      v66();
      unint64_t v67 = (unint64_t)&a1[v183] & v55;
      if (v185 == v184)
      {
        int v68 = (*(uint64_t (**)(unint64_t))(v213 + 48))((unint64_t)&a1[v183] & v55);
LABEL_140:
        uint64_t v101 = v65;
        unint64_t v120 = v180;
        if (v68) {
          goto LABEL_153;
        }
        unint64_t v82 = (v181 + v67) & v201;
        unint64_t v83 = (v182 + v82) & v212;
LABEL_142:
        uint64_t v121 = v101;
        ((void (*)(unint64_t, uint64_t))v66)(v67, v51);
        ((void (*)(unint64_t, uint64_t))v66)(v82, v51);
        (*(void (**)(unint64_t, uint64_t))(v172 + 8))(v83, v173);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v164 + 8))((v163 + ((v171 + v83) & 0xFFFFFFFFFFFFFFF8)) & v150, v165);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v122 = (v168 + v176 + v83) & v121;
        int v123 = *(void (**)(unint64_t, uint64_t))(v161 + 8);
        v123((v169 + v122) & v151, v162);
        unint64_t v124 = (v159 + ((v169 + v122) & v151)) & v151;
        v123(v124, v162);
        swift_bridgeObjectRelease();
        unint64_t v125 = (v156
              + ((((((v160 + v124) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v151;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v161 + 48))(v125, 1, v162)) {
          v123(v125, v162);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v126 = (uint64_t *)((((((v157 + v125) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v127 = v126[1];
        if ((v127 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v126, v127);
        }
        swift_bridgeObjectRelease();
        unint64_t v128 = v158 + v122;
        unint64_t v129 = *(void **)(v158 + v122 + 16);
        LODWORD(v130) = -1;
        if ((unint64_t)v129 < 0xFFFFFFFF) {
          uint64_t v130 = *(void *)(v158 + v122 + 16);
        }
        unint64_t v120 = v180;
        if ((int)v130 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v128 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v128 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v128 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
LABEL_153:
        unint64_t v131 = (v67 + v27 + v186) & ~v27;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v178 + 48))(v131, 1, v179)) {
          (*(void (**)(unint64_t, uint64_t))(v178 + 8))(v131, v179);
        }
        unint64_t v132 = (v39 + v131) & v167;
        if (v177 == v188)
        {
          int v133 = (*(uint64_t (**)(unint64_t))(v174 + 48))(v132);
        }
        else
        {
          uint64_t v134 = (uint64_t *)((v190 + v132) & 0xFFFFFFFFFFFFFFF8);
          if (v196 <= 0x7FFFFFFE)
          {
            uint64_t v135 = *v134;
            if ((unint64_t)*v134 >= 0xFFFFFFFF) {
              LODWORD(v135) = -1;
            }
            if ((v135 + 1) >= 2) {
              goto LABEL_166;
            }
            goto LABEL_165;
          }
          int v133 = (*(uint64_t (**)(unint64_t))(v206 + 48))(((unint64_t)v134 + v203) & v198);
        }
        if (v133)
        {
LABEL_166:
          uint64_t v119 = v132 + v120 + 15;
          goto LABEL_167;
        }
        uint64_t v134 = (uint64_t *)((v190 + v132) & 0xFFFFFFFFFFFFFFF8);
LABEL_165:
        (*(void (**)(unint64_t, uint64_t))(v174 + 8))(v132, v175);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v206 + 8))(((unint64_t)v134 + v203) & v198, v209);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_166;
      }
      unint64_t v82 = (v181 + v67) & v201;
      unint64_t v83 = (v182 + v82) & v212;
      if (v170 == v184)
      {
        if (v155 == v170)
        {
          int v68 = (*(uint64_t (**)(unint64_t))(v172 + 48))((v182 + v82) & v212);
          goto LABEL_140;
        }
        unint64_t v98 = (unint64_t *)((v171 + v83) & 0xFFFFFFFFFFFFFFF8);
        if (v153 > 0x7FFFFFFE)
        {
          int v68 = (*(uint64_t (**)(unint64_t))(v164 + 48))(((unint64_t)v98 + v163) & v150);
          goto LABEL_140;
        }
        unint64_t v99 = *v98;
        if (v99 >= 0xFFFFFFFF) {
          LODWORD(v99) = -1;
        }
        BOOL v100 = (v99 + 1) >= 2;
        uint64_t v101 = v65;
      }
      else
      {
        unint64_t v90 = v176 + v83;
        if ((v154 & 0x80000000) == 0)
        {
          unint64_t v91 = *(void *)(v90 + 8);
          if (v91 >= 0xFFFFFFFF) {
            LODWORD(v91) = -1;
          }
          int v68 = v91 + 1;
          goto LABEL_140;
        }
        uint64_t v107 = (v169 + ((v168 + v90) & v65)) & v151;
        if (v152 > 0x7FFFFFFD)
        {
          int v68 = (*(uint64_t (**)(uint64_t))(v161 + 48))(v107);
          goto LABEL_140;
        }
        uint64_t v101 = v65;
        unint64_t v149 = *(void *)(((v160 + ((v159 + v107) & v151)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v149 >= 0xFFFFFFFF) {
          LODWORD(v149) = -1;
        }
        BOOL v100 = (v149 + 1) >= 2;
      }
      unint64_t v120 = v180;
      if (v100) {
        goto LABEL_153;
      }
      goto LABEL_142;
    case 2u:
      uint64_t v69 = ~v36;
      int v70 = v32;
      uint64_t v199 = ~v30;
      unsigned int v197 = v31;
      uint64_t v71 = v37;
      unsigned int v193 = *(_DWORD *)(v29 + 84);
      uint64_t v204 = v30 + 8;
      uint64_t v207 = *(void *)(v28 - 8);
      uint64_t v210 = v28;
      (*(void (**)(void))(v213 + 8))();
      unint64_t v72 = (unint64_t)&a1[v41] & ~v27;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v178 + 48))(v72, 1, v179)) {
        (*(void (**)(unint64_t, uint64_t))(v178 + 8))(v72, v179);
      }
      unint64_t v73 = (v39 + v72) & v69;
      if (v177 == v70)
      {
        unint64_t v74 = v180;
        if ((*(unsigned int (**)(unint64_t))(v25 + 48))(v73)) {
          goto LABEL_99;
        }
LABEL_97:
        int v84 = (uint64_t *)((v71 + v73) & 0xFFFFFFFFFFFFFFF8);
LABEL_98:
        (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v73, v175);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v207 + 8))(((unint64_t)v84 + v204) & v199, v210);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_99;
      }
      int v84 = (uint64_t *)((v71 + v73) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v74 = v180;
      if (v197 > 0x7FFFFFFE)
      {
        if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v207 + 48))(((unint64_t)v84 + v204) & v199, v193, v210))
        {
          goto LABEL_99;
        }
        goto LABEL_97;
      }
      uint64_t v85 = *v84;
      if ((unint64_t)*v84 >= 0xFFFFFFFF) {
        LODWORD(v85) = -1;
      }
      if ((v85 + 1) < 2) {
        goto LABEL_98;
      }
LABEL_99:
      uint64_t v92 = *(void **)(v74 + v73 + 8);
      goto LABEL_168;
    case 3u:
      uint64_t v75 = v56;
      uint64_t v76 = ~v10;
      int v77 = *(void (**)(void))(v213 + 8);
      v77();
      unint64_t v78 = (unint64_t)&a1[v183] & v55;
      if (v185 == v184)
      {
        int v79 = (*(uint64_t (**)(unint64_t))(v213 + 48))((unint64_t)&a1[v183] & v55);
LABEL_172:
        uint64_t v104 = ~v205;
        if (v79) {
          goto LABEL_185;
        }
        unint64_t v86 = (v181 + v78) & v201;
        unint64_t v87 = (v182 + v86) & v212;
        goto LABEL_174;
      }
      unint64_t v86 = (v181 + v78) & v201;
      unint64_t v87 = (v182 + v86) & v212;
      if (v170 == v184)
      {
        if (v155 == v170)
        {
          int v79 = (*(uint64_t (**)(unint64_t))(v172 + 48))((v182 + v86) & v212);
          goto LABEL_172;
        }
        unint64_t v102 = (unint64_t *)((v171 + v87) & 0xFFFFFFFFFFFFFFF8);
        if (v153 > 0x7FFFFFFE)
        {
          int v79 = (*(uint64_t (**)(unint64_t))(v164 + 48))(((unint64_t)v102 + v163) & v75);
          goto LABEL_172;
        }
        unint64_t v103 = *v102;
        if (v103 >= 0xFFFFFFFF) {
          LODWORD(v103) = -1;
        }
        uint64_t v104 = ~v205;
        if ((v103 + 1) >= 2) {
          goto LABEL_185;
        }
      }
      else
      {
        unint64_t v93 = v176 + v87;
        if ((v154 & 0x80000000) == 0)
        {
          unint64_t v94 = *(void *)(v93 + 8);
          if (v94 >= 0xFFFFFFFF) {
            LODWORD(v94) = -1;
          }
          int v79 = v94 + 1;
          goto LABEL_172;
        }
        uint64_t v105 = (v169 + ((v168 + v93) & ~v205)) & v76;
        if (v152 > 0x7FFFFFFD)
        {
          int v79 = (*(uint64_t (**)(uint64_t))(v161 + 48))(v105);
          goto LABEL_172;
        }
        uint64_t v104 = ~v205;
        unint64_t v147 = *(void *)(((v160 + ((v159 + v105) & v76)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v147 >= 0xFFFFFFFF) {
          LODWORD(v147) = -1;
        }
        if ((v147 + 1) >= 2)
        {
LABEL_185:
          swift_bridgeObjectRelease();
          return;
        }
      }
LABEL_174:
      uint64_t v136 = v104;
      ((void (*)(unint64_t, uint64_t))v77)(v78, v51);
      ((void (*)(unint64_t, uint64_t))v77)(v86, v51);
      (*(void (**)(unint64_t, uint64_t))(v172 + 8))(v87, v173);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v164 + 8))((v163 + ((v171 + v87) & 0xFFFFFFFFFFFFFFF8)) & v75, v165);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v137 = (v168 + v176 + v87) & v136;
      unint64_t v138 = (v169 + v137) & v76;
      int v139 = *(void (**)(unint64_t, uint64_t))(v161 + 8);
      v139(v138, v162);
      unint64_t v140 = (v159 + v138) & v76;
      v139(v140, v162);
      swift_bridgeObjectRelease();
      unint64_t v141 = (v156
            + ((((((v160 + v140) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v76;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v161 + 48))(v141, 1, v162)) {
        v139(v141, v162);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v142 = (uint64_t *)((((((v157 + v141) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v143 = v142[1];
      if ((v143 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v142, v143);
      }
      swift_bridgeObjectRelease();
      unint64_t v144 = v158 + v137;
      unint64_t v145 = *(void **)(v158 + v137 + 16);
      LODWORD(v146) = -1;
      if ((unint64_t)v145 < 0xFFFFFFFF) {
        uint64_t v146 = *(void *)(v158 + v137 + 16);
      }
      if ((int)v146 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v144 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_24D466534(*(void *)((((v144 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v144 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      goto LABEL_185;
    case 4u:
    case 5u:
    case 7u:
      uint64_t v58 = *(void (**)(unsigned __int8 *, uint64_t))(v213 + 8);
      uint64_t v59 = v51;
      goto LABEL_57;
    case 6u:
      (*(void (**)(void))(v213 + 8))();
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v166 + 48))((unint64_t)&a1[v43] & v57, 1, v202))
      {
        return;
      }
      uint64_t v58 = *(void (**)(unsigned __int8 *, uint64_t))(v166 + 8);
      uint64_t v47 = (unsigned __int8 *)((unint64_t)&a1[v43] & v57);
      uint64_t v59 = v202;
LABEL_57:
      v58(v47, v59);
      return;
    default:
      uint64_t v60 = v56;
      uint64_t v61 = ~v10;
      int v62 = *(void (**)(void))(v213 + 8);
      v62();
      unint64_t v63 = (unint64_t)&a1[v183] & v55;
      if (v185 == v184)
      {
        int v64 = (*(uint64_t (**)(unint64_t))(v213 + 48))((unint64_t)&a1[v183] & v55);
LABEL_125:
        uint64_t v97 = ~v205;
        if (v64) {
          goto LABEL_138;
        }
        unint64_t v80 = (v181 + v63) & v201;
        unint64_t v81 = (v182 + v80) & v212;
        goto LABEL_127;
      }
      unint64_t v80 = (v181 + v63) & v201;
      unint64_t v81 = (v182 + v80) & v212;
      if (v170 != v184)
      {
        unint64_t v88 = v176 + v81;
        if ((v154 & 0x80000000) == 0)
        {
          unint64_t v89 = *(void *)(v88 + 8);
          if (v89 >= 0xFFFFFFFF) {
            LODWORD(v89) = -1;
          }
          int v64 = v89 + 1;
          goto LABEL_125;
        }
        uint64_t v106 = (v169 + ((v168 + v88) & ~v205)) & v61;
        if (v152 > 0x7FFFFFFD)
        {
          int v64 = (*(uint64_t (**)(uint64_t))(v161 + 48))(v106);
          goto LABEL_125;
        }
        uint64_t v97 = ~v205;
        unint64_t v148 = *(void *)(((v160 + ((v159 + v106) & v61)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v148 >= 0xFFFFFFFF) {
          LODWORD(v148) = -1;
        }
        if ((v148 + 1) >= 2) {
          goto LABEL_138;
        }
LABEL_127:
        uint64_t v108 = v97;
        ((void (*)(unint64_t, uint64_t))v62)(v63, v51);
        ((void (*)(unint64_t, uint64_t))v62)(v80, v51);
        (*(void (**)(unint64_t, uint64_t))(v172 + 8))(v81, v173);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v164 + 8))((v163 + ((v171 + v81) & 0xFFFFFFFFFFFFFFF8)) & v60, v165);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v109 = (v168 + v176 + v81) & v108;
        unint64_t v110 = (v169 + v109) & v61;
        uint64_t v111 = *(void (**)(unint64_t, uint64_t))(v161 + 8);
        v111(v110, v162);
        unint64_t v112 = (v159 + v110) & v61;
        v111(v112, v162);
        swift_bridgeObjectRelease();
        unint64_t v113 = (v156
              + ((((((v160 + v112) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v61;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v161 + 48))(v113, 1, v162)) {
          v111(v113, v162);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        size_t v114 = (uint64_t *)((((((v157 + v113) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v115 = v114[1];
        if ((v115 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v114, v115);
        }
        swift_bridgeObjectRelease();
        unint64_t v116 = v158 + v109;
        unint64_t v117 = *(void **)(v158 + v109 + 16);
        LODWORD(v118) = -1;
        if ((unint64_t)v117 < 0xFFFFFFFF) {
          uint64_t v118 = *(void *)(v158 + v109 + 16);
        }
        if ((int)v118 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v116 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v116 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v116 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        goto LABEL_138;
      }
      if (v155 == v170)
      {
        int v64 = (*(uint64_t (**)(unint64_t))(v172 + 48))((v182 + v80) & v212);
        goto LABEL_125;
      }
      unint64_t v95 = (unint64_t *)((v171 + v81) & 0xFFFFFFFFFFFFFFF8);
      if (v153 > 0x7FFFFFFE)
      {
        int v64 = (*(uint64_t (**)(unint64_t))(v164 + 48))(((unint64_t)v95 + v163) & v60);
        goto LABEL_125;
      }
      unint64_t v96 = *v95;
      if (v96 >= 0xFFFFFFFF) {
        LODWORD(v96) = -1;
      }
      uint64_t v97 = ~v205;
      if ((v96 + 1) < 2) {
        goto LABEL_127;
      }
LABEL_138:
      uint64_t v119 = v63 + v186;
LABEL_167:
      uint64_t v92 = *(void **)(((v119 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_168:

      return;
  }
}

uint64_t sub_24D9F4E14(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v525 = *(void *)(v4 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v503 = v3;
  uint64_t v469 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v469 - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v462 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v462 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v478 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v478 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = v10 | v5 | v12;
  uint64_t v488 = v4;
  uint64_t v468 = v6;
  uint64_t v461 = v8;
  unsigned int v15 = *(_DWORD *)(v8 + 84);
  unsigned int v453 = *(_DWORD *)(v6 + 84);
  if (v453 > v15) {
    unsigned int v15 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v451 = v15;
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  unsigned int v466 = v15;
  unsigned int v484 = *(_DWORD *)(v4 + 84);
  if (v15 <= v484) {
    unsigned int v15 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v473 = *(void *)(v478 - 8);
  unsigned int v16 = *(_DWORD *)(v11 + 84);
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v11 + 84);
  }
  if (v15 > v17) {
    unsigned int v17 = v15;
  }
  unsigned int v452 = v17;
  if (v17 <= 0x7FFFFFFF) {
    int v18 = 0x7FFFFFFF;
  }
  else {
    int v18 = v17;
  }
  int v483 = v18;
  unsigned int v463 = v16;
  uint64_t v487 = v525 + v5;
  uint64_t v494 = v5;
  uint64_t v485 = v525 + v10;
  uint64_t v512 = v10;
  unint64_t v19 = (v525 + v10 + ((v525 + v5) & ~v5)) & ~v10;
  uint64_t v20 = v12;
  uint64_t v467 = *(void *)(v6 + 64) + 7;
  uint64_t v460 = v9 + 8;
  uint64_t v456 = *(void *)(v8 + 64) + 7;
  unint64_t v474 = ((((v456 + ((v9 + 8 + (v467 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v464 = v13 + 16;
  uint64_t v509 = v12 | 7;
  uint64_t v465 = v12 + 12;
  size_t v21 = *(void *)(*(void *)(v478 - 8) + 64);
  size_t v459 = v21 + v12;
  size_t v450 = v21 + 12;
  uint64_t v457 = v12 + 10;
  unint64_t v22 = (v12
       + 10
       + ((((((v21 + 12 + ((v21 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  size_t v479 = v21;
  if (!v16) {
    ++v21;
  }
  size_t v486 = v21;
  unint64_t v481 = v22;
  size_t v454 = v21 + 7;
  uint64_t v480 = (v13 + 16 + v474 + v19) & ~v13;
  unint64_t v455 = ((((((((((v21 + 7 + v22) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v489 = v14;
  unint64_t v482 = v14 + v525;
  unint64_t v472 = ((((v480 + v455 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v23 = v472 + ((v14 + v525) & ~v14);
  unint64_t v497 = (v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v477 = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(v477 - 8);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  unint64_t v515 = (v23 + v25) & ~v25;
  uint64_t v476 = v24;
  if (*(_DWORD *)(v24 + 84)) {
    uint64_t v26 = *(void *)(v24 + 64);
  }
  else {
    uint64_t v26 = *(void *)(v24 + 64) + 1;
  }
  uint64_t v471 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v471 - 8);
  uint64_t v28 = v27;
  int v29 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = v29 | v32 | 7;
  uint64_t v470 = v27;
  if (*(_DWORD *)(v27 + 84) <= *(_DWORD *)(v31 + 84)) {
    unsigned int v34 = *(_DWORD *)(v31 + 84);
  }
  else {
    unsigned int v34 = *(_DWORD *)(v27 + 84);
  }
  if (v34 <= 0x7FFFFFFE) {
    int v35 = 2147483646;
  }
  else {
    int v35 = v34;
  }
  uint64_t v36 = *(void *)(v27 + 64) + 7;
  uint64_t v37 = v32 + 8;
  unint64_t v38 = ((((*(void *)(*(void *)(v30 - 8) + 64) + 7 + ((v32 + 8 + (v36 & 0xFFFFFFFFFFFFFFF8)) & ~v32)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t __n = v26;
  unint64_t v39 = ((((((v26 + v33 + v515) & ~v33) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v40 = *(void *)(v503 - 8);
  uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v42 = v525 + v25;
  uint64_t v516 = v25;
  uint64_t v475 = v26 + v33;
  if (*(_DWORD *)(v40 + 84)) {
    size_t v43 = *(void *)(*(void *)(v503 - 8) + 64);
  }
  else {
    size_t v43 = *(void *)(*(void *)(v503 - 8) + 64) + 1;
  }
  unint64_t v44 = ((v497 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v525 > v44) {
    unint64_t v44 = v525;
  }
  uint64_t v45 = v525 + v41;
  if (v39 <= v38 + ((v26 + v33 + ((v525 + v25) & ~v25)) & ~v33) + 16) {
    unint64_t v39 = v38 + ((v26 + v33 + ((v525 + v25) & ~v25)) & ~v33) + 16;
  }
  unint64_t v46 = (v45 & ~v41) + v43;
  if (((v497 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v46) {
    unint64_t v46 = ((v497 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v44 <= v39) {
    unint64_t v44 = v39;
  }
  if (v44 <= v46) {
    unint64_t v47 = v46;
  }
  else {
    unint64_t v47 = v44;
  }
  unsigned int v48 = a2;
  unsigned int v49 = a2[v47];
  unsigned int v50 = v49 - 8;
  if (v49 < 8)
  {
    uint64_t v53 = v9;
    uint64_t v52 = v494;
    uint64_t v54 = v489;
  }
  else
  {
    if (v47 <= 3) {
      uint64_t v51 = v47;
    }
    else {
      uint64_t v51 = 4;
    }
    uint64_t v53 = v9;
    uint64_t v52 = v494;
    uint64_t v54 = v489;
    switch(v51)
    {
      case 1:
        int v55 = *a2;
        if (v47 < 4) {
          goto LABEL_53;
        }
        goto LABEL_54;
      case 2:
        int v55 = *(unsigned __int16 *)a2;
        if (v47 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 3:
        int v55 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v47 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 4:
        int v55 = *(_DWORD *)a2;
        if (v47 < 4) {
LABEL_53:
        }
          v55 |= v50 << (8 * v47);
LABEL_54:
        unsigned int v49 = v55 + 8;
        break;
      default:
        break;
    }
  }
  unint64_t v526 = v47;
  uint64_t v56 = ~v54;
  uint64_t v57 = ~v52;
  uint64_t v513 = ~v512;
  uint64_t v58 = ~v53;
  uint64_t v59 = ~v20;
  uint64_t v60 = ~v33;
  uint64_t v61 = ~v32;
  uint64_t v62 = ~v41;
  switch(v49)
  {
    case 1u:
      uint64_t v505 = v58;
      uint64_t v68 = ~v509;
      uint64_t v444 = ~v516;
      uint64_t v440 = v60;
      unsigned int v441 = v34;
      uint64_t v448 = v61;
      unsigned int v442 = *(_DWORD *)(v28 + 84);
      unsigned int v443 = *(_DWORD *)(v31 + 84);
      uint64_t v510 = v36;
      uint64_t v490 = v37;
      uint64_t v446 = *(void *)(*(void *)(v30 - 8) + 64) + 7;
      uint64_t v492 = *(void *)(v30 - 8);
      uint64_t v495 = v30;
      size_t v498 = v38;
      uint64_t v69 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v488 + 16);
      uint64_t v64 = a1;
      v69(a1, a2, AssociatedTypeWitness);
      int __dst = (void *)((v482 + a1) & v56);
      int v70 = (void *)((unint64_t)&a2[v482] & v56);
      unint64_t v508 = v70;
      uint64_t v501 = v59;
      if (v484 == v483)
      {
        int v71 = (*(uint64_t (**)(unint64_t))(v488 + 48))((unint64_t)&v48[v482] & v56);
        int v70 = v508;
        uint64_t v72 = v473;
        uint64_t v73 = v485;
        goto LABEL_149;
      }
      unint64_t v89 = ((unint64_t)v70 + v487) & v57;
      uint64_t v73 = v485;
      unint64_t v90 = (v485 + v89) & v513;
      uint64_t v72 = v473;
      if (v466 == v483)
      {
        if (v453 == v466)
        {
          int v71 = (*(uint64_t (**)(unint64_t))(v468 + 48))((v485 + v89) & v513);
        }
        else
        {
          int v123 = (unint64_t *)((v467 + v90) & 0xFFFFFFFFFFFFFFF8);
          if (v451 <= 0x7FFFFFFE)
          {
            unint64_t v124 = *v123;
            if (v124 >= 0xFFFFFFFF) {
              LODWORD(v124) = -1;
            }
            uint64_t v125 = v68;
            if ((v124 + 1) >= 2) {
              goto LABEL_150;
            }
            goto LABEL_153;
          }
          int v71 = (*(uint64_t (**)(unint64_t))(v461 + 48))(((unint64_t)v123 + v460) & v505);
        }
        goto LABEL_148;
      }
      unint64_t v103 = v474 + v90;
      if ((v452 & 0x80000000) != 0)
      {
        uint64_t v131 = (v465 + ((v464 + v103) & v68)) & v59;
        if (v463 <= 0x7FFFFFFD)
        {
          uint64_t v125 = v68;
          unint64_t v437 = *(void *)(((v450 + ((v459 + v131) & v59)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v437 >= 0xFFFFFFFF) {
            LODWORD(v437) = -1;
          }
          if ((v437 + 1) >= 2) {
            goto LABEL_150;
          }
          goto LABEL_153;
        }
        int v71 = (*(uint64_t (**)(uint64_t))(v473 + 48))(v131);
LABEL_148:
        int v70 = v508;
        goto LABEL_149;
      }
      unint64_t v104 = *(void *)(v103 + 8);
      if (v104 >= 0xFFFFFFFF) {
        LODWORD(v104) = -1;
      }
      int v71 = v104 + 1;
LABEL_149:
      uint64_t v125 = v68;
      if (v71)
      {
LABEL_150:
        uint64_t v209 = __dst;
        memcpy(__dst, v70, v472);
        unint64_t v210 = v526;
        uint64_t v211 = v480;
        unint64_t v212 = v481;
LABEL_151:
        size_t v213 = v486;
        goto LABEL_189;
      }
      unint64_t v89 = ((unint64_t)v70 + v487) & v57;
      unint64_t v90 = (v73 + v89) & v513;
LABEL_153:
      uint64_t v214 = v125;
      v69((uint64_t)__dst, (unsigned __int8 *)v70, AssociatedTypeWitness);
      uint64_t v215 = v72;
      unint64_t v216 = ((unint64_t)__dst + v487) & v57;
      v69(v216, (unsigned __int8 *)v89, AssociatedTypeWitness);
      unint64_t v217 = (v73 + v216) & v513;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v468 + 16))(v217, v90, v469);
      size_t v218 = (void *)((v467 + v217) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v219 = (void *)((v467 + v90) & 0xFFFFFFFFFFFFFFF8);
      *size_t v218 = *v219;
      unint64_t v220 = ((unint64_t)v218 + v460) & v505;
      unint64_t v221 = ((unint64_t)v219 + v460) & v505;
      unint64_t v222 = *(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16);
      swift_bridgeObjectRetain();
      v222(v220, v221, v462);
      unint64_t v223 = (void *)((v456 + v221) & 0xFFFFFFFFFFFFFFF8);
      size_t v224 = (void *)((v456 + v220) & 0xFFFFFFFFFFFFFFF8);
      *size_t v224 = *v223;
      uint64_t v225 = (void *)(((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v226 = (void *)(((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v225 = *v226;
      v225[1] = v226[1];
      unint64_t v227 = (void *)(v474 + v217);
      void *v227 = *(void *)(v474 + v90);
      v227[1] = *(void *)(v474 + v90 + 8);
      unint64_t v228 = (v464 + v474 + v217) & v214;
      unint64_t v229 = (v464 + v474 + v90) & v214;
      *(unsigned char *)unint64_t v228 = *(unsigned char *)v229;
      uint64_t v230 = v228 | 4;
      int v231 = *(_DWORD *)(v229 | 4);
      *(unsigned char *)(v230 + 4) = *(unsigned char *)((v229 | 4) + 4);
      *(_DWORD *)uint64_t v230 = v231;
      *(_WORD *)(v228 + 10) = *(_WORD *)(v229 + 0xA);
      unint64_t v232 = (v465 + v228) & v501;
      unint64_t v233 = (v465 + v229) & v501;
      uint64_t v234 = *(void (**)(unint64_t, unint64_t, uint64_t))(v215 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v234(v232, v233, v478);
      size_t v235 = (v459 + v232) & v501;
      size_t v236 = (v459 + v233) & v501;
      v234(v235, v236, v478);
      unint64_t v237 = (unsigned char *)(v235 + v479);
      *unint64_t v237 = *(unsigned char *)(v236 + v479);
      v237[1] = *(unsigned char *)(v236 + v479 + 1);
      v237[2] = *(unsigned char *)(v236 + v479 + 2);
      v237[3] = *(unsigned char *)(v236 + v479 + 3);
      v237[4] = *(unsigned char *)(v236 + v479 + 4);
      unint64_t v238 = (v235 + v479 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v239 = (v236 + v479 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v238 = *(void *)v239;
      *(void *)(v238 + 8) = *(void *)(v239 + 8);
      *(unsigned char *)(v238 + 16) = *(unsigned char *)(v239 + 16);
      *(unsigned char *)(v238 + 17) = *(unsigned char *)(v239 + 17);
      *(unsigned char *)(v238 + 18) = *(unsigned char *)(v239 + 18);
      *(unsigned char *)(v238 + 19) = *(unsigned char *)(v239 + 19);
      unint64_t v240 = (v238 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v241 = (v239 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v240 = *(void *)v241;
      *(unsigned char *)(v240 + 8) = *(unsigned char *)(v241 + 8);
      *(unsigned char *)(v240 + 9) = *(unsigned char *)(v241 + 9);
      *(unsigned char *)(v240 + 10) = *(unsigned char *)(v241 + 10);
      *(unsigned char *)(v240 + 11) = *(unsigned char *)(v241 + 11);
      *(unsigned char *)(v240 + 12) = *(unsigned char *)(v241 + 12);
      unint64_t v242 = (void *)((v239 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v243 = (void *)((v238 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v243 = *v242;
      unint64_t v244 = ((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v245 = ((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v244 = *(void *)v245;
      *(unsigned char *)(v244 + 8) = *(unsigned char *)(v245 + 8);
      *(unsigned char *)(v244 + 9) = *(unsigned char *)(v245 + 9);
      unint64_t v246 = (void *)((v457 + v244) & v501);
      unint64_t v247 = (const void *)((v457 + v245) & v501);
      unint64_t v248 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v215 + 48);
      swift_bridgeObjectRetain();
      if (v248(v247, 1, v478))
      {
        memcpy(v246, v247, v486);
      }
      else
      {
        v234((unint64_t)v246, (unint64_t)v247, v478);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v215 + 56))(v246, 0, 1, v478);
      }
      unint64_t v249 = (void *)(((unint64_t)v246 + v454) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v250 = (void *)(((unint64_t)v247 + v454) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v249 = *v250;
      unint64_t v251 = ((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v252 = ((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v253 = *(void *)v252;
      *(unsigned char *)(v251 + 8) = *(unsigned char *)(v252 + 8);
      *(void *)unint64_t v251 = v253;
      unint64_t v254 = (void *)(((unint64_t)v249 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v255 = (void *)(((unint64_t)v250 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v254 = *v255;
      unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v257 = (uint64_t *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v258 = v257[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v258 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v256 = *(_OWORD *)v257;
      }
      else
      {
        uint64_t v259 = *v257;
        sub_24D3F9C18(*v257, v258);
        *(void *)unint64_t v256 = v259;
        *(void *)(v256 + 8) = v258;
      }
      unint64_t v260 = (v256 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v261 = ((unint64_t)v257 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v262 = *(void *)v261;
      *(unsigned char *)(v260 + 8) = *(unsigned char *)(v261 + 8);
      *(void *)unint64_t v260 = v262;
      *(unsigned char *)(v260 + 9) = *(unsigned char *)(v261 + 9);
      unint64_t v263 = (v260 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v264 = (v261 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v265 = *(_DWORD *)v264;
      *(unsigned char *)(v263 + 4) = *(unsigned char *)(v264 + 4);
      *(_DWORD *)unint64_t v263 = v265;
      int v266 = (void *)((v260 + 25) & 0xFFFFFFFFFFFFFFF8);
      size_t v267 = (void *)((v261 + 25) & 0xFFFFFFFFFFFFFFF8);
      *int v266 = *v267;
      v266[1] = v267[1];
      unint64_t v268 = v455 + v228;
      unint64_t v269 = v455 + v229;
      unint64_t v270 = *(void *)(v269 + 16);
      if (v270 >= 0xFFFFFFFF) {
        LODWORD(v270) = -1;
      }
      int v271 = v270 - 1;
      swift_bridgeObjectRetain();
      if (v271 < 0)
      {
        *(void *)unint64_t v268 = *(void *)v269;
        *(unsigned char *)(v268 + 8) = *(unsigned char *)(v269 + 8);
        *(unsigned char *)(v268 + 9) = *(unsigned char *)(v269 + 9);
        id v285 = *(void **)(v269 + 16);
        id v286 = v285;
        *(void *)(v268 + 16) = v285;
        id v287 = *(void **)(v269 + 24);
        id v288 = v287;
        *(void *)(v268 + 24) = v287;
        *(unsigned char *)(v268 + 32) = *(unsigned char *)(v269 + 32);
        *(unsigned char *)(v268 + 33) = *(unsigned char *)(v269 + 33);
        *(unsigned char *)(v268 + 34) = *(unsigned char *)(v269 + 34);
        *(void *)(v268 + 40) = *(void *)(v269 + 40);
        *(void *)(v268 + 48) = *(void *)(v269 + 48);
        *(void *)(v268 + 56) = *(void *)(v269 + 56);
        *(void *)(v268 + 64) = *(void *)(v269 + 64);
        *(unsigned char *)(v268 + 72) = *(unsigned char *)(v269 + 72);
        *(void *)(v268 + 80) = *(void *)(v269 + 80);
        *(void *)(v268 + 88) = *(void *)(v269 + 88);
        uint64_t v289 = *(void **)(v269 + 96);
        *(void *)(v268 + 96) = v289;
        *(unsigned char *)(v268 + 104) = *(unsigned char *)(v269 + 104);
        *(unsigned char *)(v268 + 105) = *(unsigned char *)(v269 + 105);
        *(void *)(v268 + 112) = *(void *)(v269 + 112);
        *(void *)(v268 + 120) = *(void *)(v269 + 120);
        *(void *)(v268 + 128) = *(void *)(v269 + 128);
        *(void *)(v268 + 136) = *(void *)(v269 + 136);
        *(void *)(v268 + 144) = *(void *)(v269 + 144);
        *(void *)(v268 + 152) = *(void *)(v269 + 152);
        *(void *)(v268 + 160) = *(void *)(v269 + 160);
        *(void *)(v268 + 168) = *(void *)(v269 + 168);
        *(unsigned char *)(v268 + 176) = *(unsigned char *)(v269 + 176);
        *(void *)(v268 + 184) = *(void *)(v269 + 184);
        uint64_t v514 = *(void *)(v269 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v290 = v289;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v514)
        {
          *(void *)(v268 + 192) = v514;
          *(void *)(v268 + 200) = *(void *)(v269 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v268 + 192) = *(_OWORD *)(v269 + 192);
        }
        unint64_t v210 = v526;
        uint64_t v211 = v480;
        unint64_t v212 = v481;
        unsigned int v284 = v463;
        *(void *)(v268 + 208) = *(void *)(v269 + 208);
        *(void *)(v268 + 216) = *(void *)(v269 + 216);
        *(void *)(v268 + 224) = *(void *)(v269 + 224);
        *(void *)(v268 + 232) = *(void *)(v269 + 232);
        *(void *)(v268 + 240) = *(void *)(v269 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v272 = *(_OWORD *)v269;
        long long v273 = *(_OWORD *)(v269 + 16);
        long long v274 = *(_OWORD *)(v269 + 48);
        *(_OWORD *)(v268 + 32) = *(_OWORD *)(v269 + 32);
        *(_OWORD *)(v268 + 48) = v274;
        *(_OWORD *)unint64_t v268 = v272;
        *(_OWORD *)(v268 + 16) = v273;
        long long v275 = *(_OWORD *)(v269 + 64);
        long long v276 = *(_OWORD *)(v269 + 80);
        long long v277 = *(_OWORD *)(v269 + 112);
        *(_OWORD *)(v268 + 96) = *(_OWORD *)(v269 + 96);
        *(_OWORD *)(v268 + 112) = v277;
        *(_OWORD *)(v268 + 64) = v275;
        *(_OWORD *)(v268 + 80) = v276;
        long long v278 = *(_OWORD *)(v269 + 128);
        long long v279 = *(_OWORD *)(v269 + 144);
        long long v280 = *(_OWORD *)(v269 + 176);
        *(_OWORD *)(v268 + 160) = *(_OWORD *)(v269 + 160);
        *(_OWORD *)(v268 + 176) = v280;
        *(_OWORD *)(v268 + 128) = v278;
        *(_OWORD *)(v268 + 144) = v279;
        long long v281 = *(_OWORD *)(v269 + 192);
        long long v282 = *(_OWORD *)(v269 + 208);
        long long v283 = *(_OWORD *)(v269 + 224);
        *(void *)(v268 + 240) = *(void *)(v269 + 240);
        *(_OWORD *)(v268 + 208) = v282;
        *(_OWORD *)(v268 + 224) = v283;
        *(_OWORD *)(v268 + 192) = v281;
        unint64_t v210 = v526;
        uint64_t v211 = v480;
        unint64_t v212 = v481;
        unsigned int v284 = v463;
      }
      unint64_t v385 = (_OWORD *)((v268 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v386 = (long long *)((v269 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v387 = *v386;
      *(_OWORD *)((char *)v385 + 9) = *(long long *)((char *)v386 + 9);
      *unint64_t v385 = v387;
      unint64_t v388 = (v268 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v389 = (v269 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v390 = *(_OWORD *)v389;
      *(unsigned char *)(v388 + 16) = *(unsigned char *)(v389 + 16);
      *(_OWORD *)unint64_t v388 = v390;
      unint64_t v391 = (void *)((v268 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v392 = (v269 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v393 = *(void *)v392;
      v392 += 15;
      *unint64_t v391 = v393;
      uint64_t v394 = (void *)(((unint64_t)v391 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v395 = *(void *)(v392 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v396 = *(void *)((v392 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v395, v396);
      *uint64_t v394 = v395;
      v394[1] = v396;
      uint64_t v64 = a1;
      size_t v213 = v479;
      uint64_t v209 = __dst;
      if (!v284) {
        goto LABEL_151;
      }
LABEL_189:
      unint64_t v397 = ((((v211
               + ((((((((((v212 + v213 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      size_t v398 = (void *)(((unint64_t)v209 + v516 + v397) & v444);
      uint64_t v399 = (const void *)(((unint64_t)v508 + v516 + v397) & v444);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v476 + 48))(v399, 1, v477))
      {
        memcpy(v398, v399, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v476 + 16))(v398, v399, v477);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v476 + 56))(v398, 0, 1, v477);
      }
      uint64_t v400 = v510;
      unint64_t v401 = (char *)(((unint64_t)v398 + v475) & v440);
      int v402 = (char *)(((unint64_t)v399 + v475) & v440);
      if (v442 == v35)
      {
        int v403 = (*(uint64_t (**)(char *, void, uint64_t))(v470 + 48))(v402, v442, v471);
      }
      else
      {
        uint64_t v404 = (uint64_t *)((unint64_t)&v402[v510] & 0xFFFFFFFFFFFFFFF8);
        if (v441 <= 0x7FFFFFFE)
        {
          uint64_t v405 = *v404;
          if ((unint64_t)*v404 >= 0xFFFFFFFF) {
            LODWORD(v405) = -1;
          }
          if ((v405 + 1) >= 2) {
            goto LABEL_201;
          }
          goto LABEL_203;
        }
        int v403 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v492 + 48))(((unint64_t)v404 + v490) & v448, v443, v495);
      }
      uint64_t v400 = v510;
      if (v403)
      {
LABEL_201:
        size_t v406 = v498;
        memcpy(v401, v402, v498);
        goto LABEL_204;
      }
      uint64_t v404 = (uint64_t *)((unint64_t)&v402[v510] & 0xFFFFFFFFFFFFFFF8);
LABEL_203:
      uint64_t v407 = v400;
      (*(void (**)(char *, char *, uint64_t))(v470 + 16))(v401, v402, v471);
      unint64_t v408 = (void *)((unint64_t)&v401[v407] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v408 = *v404;
      unint64_t v409 = ((unint64_t)v408 + v490) & v448;
      unint64_t v410 = ((unint64_t)v404 + v490) & v448;
      uint64_t v411 = *(void (**)(unint64_t, unint64_t, uint64_t))(v492 + 16);
      swift_bridgeObjectRetain();
      v411(v409, v410, v495);
      int v412 = (void *)((v446 + v409) & 0xFFFFFFFFFFFFFFF8);
      long long v413 = (void *)((v446 + v410) & 0xFFFFFFFFFFFFFFF8);
      *int v412 = *v413;
      size_t v414 = (void *)(((unint64_t)v412 + 15) & 0xFFFFFFFFFFFFFFF8);
      size_t v415 = (void *)(((unint64_t)v413 + 15) & 0xFFFFFFFFFFFFFFF8);
      *size_t v414 = *v415;
      v414[1] = v415[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v406 = v498;
LABEL_204:
      *(void *)&v401[v406] = *(void *)&v402[v406];
      unint64_t v416 = (void *)((unint64_t)&v401[v406 + 15] & 0xFFFFFFFFFFFFFFF8);
      id v417 = (void *)((unint64_t)&v402[v406 + 15] & 0xFFFFFFFFFFFFFFF8);
      void *v416 = *v417;
      unint64_t v418 = *(void **)(((unint64_t)v417 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8) = v418;
      *(unsigned char *)(v64 + v210) = 1;
      id v419 = v418;
      return v64;
    case 2u:
      uint64_t v74 = v60;
      uint64_t v449 = v61;
      unsigned int v75 = v34;
      uint64_t v76 = *(unsigned int *)(v28 + 84);
      uint64_t v77 = *(unsigned int *)(v31 + 84);
      uint64_t v511 = v36;
      uint64_t v491 = v37;
      uint64_t v447 = *(void *)(*(void *)(v30 - 8) + 64) + 7;
      uint64_t v493 = *(void *)(v30 - 8);
      uint64_t v496 = v30;
      size_t v499 = v38;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v488 + 16))(a1, a2, AssociatedTypeWitness);
      unint64_t v78 = (void *)((v42 + a1) & ~v516);
      int v79 = (const void *)((unint64_t)&a2[v42] & ~v516);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v476 + 48))(v79, 1, v477))
      {
        memcpy(v78, v79, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v476 + 16))(v78, v79, v477);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v476 + 56))(v78, 0, 1, v477);
      }
      unint64_t v93 = (char *)(((unint64_t)v78 + v475) & v74);
      unint64_t v94 = (char *)(((unint64_t)v79 + v475) & v74);
      uint64_t v64 = a1;
      if (v76 == v35)
      {
        int v95 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v94, v76, v471);
      }
      else
      {
        uint64_t v96 = v77;
        uint64_t v97 = v511;
        unint64_t v98 = (uint64_t *)((unint64_t)&v94[v511] & 0xFFFFFFFFFFFFFFF8);
        if (v75 <= 0x7FFFFFFE)
        {
          uint64_t v99 = *v98;
          if ((unint64_t)*v98 >= 0xFFFFFFFF) {
            LODWORD(v99) = -1;
          }
          if ((v99 + 1) >= 2) {
            goto LABEL_105;
          }
          goto LABEL_107;
        }
        int v95 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v493 + 48))(((unint64_t)v98 + v491) & v449, v96, v496);
      }
      uint64_t v97 = v511;
      if (v95)
      {
LABEL_105:
        size_t v107 = v499;
        memcpy(v93, v94, v499);
        goto LABEL_108;
      }
      unint64_t v98 = (uint64_t *)((unint64_t)&v94[v511] & 0xFFFFFFFFFFFFFFF8);
LABEL_107:
      uint64_t v108 = v97;
      (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v93, v94, v471);
      unint64_t v109 = (void *)((unint64_t)&v93[v108] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v109 = *v98;
      unint64_t v110 = ((unint64_t)v109 + v491) & v449;
      unint64_t v111 = ((unint64_t)v98 + v491) & v449;
      unint64_t v112 = *(void (**)(unint64_t, unint64_t, uint64_t))(v493 + 16);
      swift_bridgeObjectRetain();
      v112(v110, v111, v496);
      unint64_t v113 = (void *)((v447 + v110) & 0xFFFFFFFFFFFFFFF8);
      size_t v114 = (void *)((v447 + v111) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v113 = *v114;
      unint64_t v115 = (void *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v116 = (void *)(((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v115 = *v116;
      v115[1] = v116[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v107 = v499;
LABEL_108:
      unint64_t v117 = &v93[v107];
      *unint64_t v117 = v94[v107];
      uint64_t v118 = *(void **)&v94[v107 + 8];
      *((void *)v117 + 1) = v118;
      *(unsigned char *)(a1 + v526) = 2;
      id v119 = v118;
      return v64;
    case 3u:
      uint64_t v502 = v59;
      uint64_t v506 = v58;
      unint64_t v80 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v488 + 16);
      uint64_t v64 = a1;
      v80(a1, a2, AssociatedTypeWitness);
      unint64_t v518 = (void *)((v482 + a1) & v56);
      unint64_t v81 = (const void *)((unint64_t)&a2[v482] & v56);
      if (v484 == v483)
      {
        int v82 = (*(uint64_t (**)(const void *))(v488 + 48))(v81);
        uint64_t v83 = v485;
      }
      else
      {
        unint64_t v91 = ((unint64_t)v81 + v487) & v57;
        uint64_t v83 = v485;
        unint64_t v92 = (v485 + v91) & v513;
        if (v466 == v483)
        {
          if (v453 == v466)
          {
            int v82 = (*(uint64_t (**)(unint64_t))(v468 + 48))((v485 + v91) & v513);
          }
          else
          {
            int v126 = (unint64_t *)((v467 + v92) & 0xFFFFFFFFFFFFFFF8);
            if (v451 <= 0x7FFFFFFE)
            {
              unint64_t v127 = *v126;
              if (v127 >= 0xFFFFFFFF) {
                LODWORD(v127) = -1;
              }
              uint64_t v128 = ~v509;
              if ((v127 + 1) >= 2) {
                goto LABEL_167;
              }
              goto LABEL_170;
            }
            int v82 = (*(uint64_t (**)(unint64_t))(v461 + 48))(((unint64_t)v126 + v460) & v506);
          }
        }
        else
        {
          unint64_t v105 = v474 + v92;
          if ((v452 & 0x80000000) != 0)
          {
            uint64_t v129 = (v465 + ((v464 + v105) & ~v509)) & v502;
            if (v463 <= 0x7FFFFFFD)
            {
              uint64_t v128 = ~v509;
              unint64_t v435 = *(void *)(((v450 + ((v459 + v129) & v502)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v435 >= 0xFFFFFFFF) {
                LODWORD(v435) = -1;
              }
              if ((v435 + 1) >= 2) {
                goto LABEL_167;
              }
              goto LABEL_170;
            }
            int v82 = (*(uint64_t (**)(uint64_t))(v473 + 48))(v129);
          }
          else
          {
            unint64_t v106 = *(void *)(v105 + 8);
            if (v106 >= 0xFFFFFFFF) {
              LODWORD(v106) = -1;
            }
            int v82 = v106 + 1;
          }
        }
      }
      uint64_t v128 = ~v509;
      if (v82)
      {
LABEL_167:
        uint64_t v291 = v518;
        memcpy(v518, v81, v472);
        uint64_t v292 = v480;
LABEL_168:
        size_t v293 = v486;
        goto LABEL_208;
      }
      unint64_t v91 = ((unint64_t)v81 + v487) & v57;
      unint64_t v92 = (v83 + v91) & v513;
LABEL_170:
      uint64_t v439 = v128;
      ((void (*)(void *))v80)(v518);
      unint64_t v294 = ((unint64_t)v518 + v487) & v57;
      v80(v294, (unsigned __int8 *)v91, AssociatedTypeWitness);
      unint64_t v295 = (v83 + v294) & v513;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v468 + 16))(v295, v92, v469);
      unint64_t v296 = (void *)((v467 + v295) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v297 = (void *)((v467 + v92) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v296 = *v297;
      unint64_t v298 = ((unint64_t)v296 + v460) & v506;
      unint64_t v299 = ((unint64_t)v297 + v460) & v506;
      unint64_t v300 = *(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16);
      swift_bridgeObjectRetain();
      v300(v298, v299, v462);
      uint64_t v301 = (void *)((v456 + v299) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v302 = (void *)((v456 + v298) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v302 = *v301;
      unint64_t v303 = (void *)(((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v304 = (void *)(((unint64_t)v301 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v303 = *v304;
      v303[1] = v304[1];
      uint64_t v305 = (void *)(v474 + v295);
      *uint64_t v305 = *(void *)(v474 + v92);
      v305[1] = *(void *)(v474 + v92 + 8);
      unint64_t v306 = (v464 + v474 + v295) & v439;
      unint64_t v307 = (v464 + v474 + v92) & v439;
      *(unsigned char *)unint64_t v306 = *(unsigned char *)v307;
      uint64_t v308 = v306 | 4;
      int v309 = *(_DWORD *)(v307 | 4);
      *(unsigned char *)(v308 + 4) = *(unsigned char *)((v307 | 4) + 4);
      *(_DWORD *)uint64_t v308 = v309;
      *(_WORD *)(v306 + 10) = *(_WORD *)(v307 + 0xA);
      unint64_t v522 = v306;
      unint64_t v310 = (v465 + v306) & v502;
      unint64_t v311 = (v465 + v307) & v502;
      uint64_t v312 = *(void (**)(unint64_t, unint64_t, uint64_t))(v473 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v312(v310, v311, v478);
      size_t v313 = (v459 + v310) & v502;
      size_t v314 = (v459 + v311) & v502;
      v312(v313, v314, v478);
      unint64_t v315 = (unsigned char *)(v313 + v479);
      *unint64_t v315 = *(unsigned char *)(v314 + v479);
      v315[1] = *(unsigned char *)(v314 + v479 + 1);
      v315[2] = *(unsigned char *)(v314 + v479 + 2);
      v315[3] = *(unsigned char *)(v314 + v479 + 3);
      v315[4] = *(unsigned char *)(v314 + v479 + 4);
      unint64_t v316 = (v313 + v479 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v317 = (v314 + v479 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v316 = *(void *)v317;
      *(void *)(v316 + 8) = *(void *)(v317 + 8);
      *(unsigned char *)(v316 + 16) = *(unsigned char *)(v317 + 16);
      *(unsigned char *)(v316 + 17) = *(unsigned char *)(v317 + 17);
      *(unsigned char *)(v316 + 18) = *(unsigned char *)(v317 + 18);
      *(unsigned char *)(v316 + 19) = *(unsigned char *)(v317 + 19);
      unint64_t v318 = (v316 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v319 = (v317 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v318 = *(void *)v319;
      *(unsigned char *)(v318 + 8) = *(unsigned char *)(v319 + 8);
      *(unsigned char *)(v318 + 9) = *(unsigned char *)(v319 + 9);
      *(unsigned char *)(v318 + 10) = *(unsigned char *)(v319 + 10);
      *(unsigned char *)(v318 + 11) = *(unsigned char *)(v319 + 11);
      *(unsigned char *)(v318 + 12) = *(unsigned char *)(v319 + 12);
      unint64_t v320 = (void *)((v317 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v321 = (void *)((v316 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v321 = *v320;
      unint64_t v322 = ((unint64_t)v321 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v323 = ((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v322 = *(void *)v323;
      *(unsigned char *)(v322 + 8) = *(unsigned char *)(v323 + 8);
      *(unsigned char *)(v322 + 9) = *(unsigned char *)(v323 + 9);
      size_t v324 = (void *)((v457 + v322) & v502);
      size_t v325 = (const void *)((v457 + v323) & v502);
      size_t v326 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v473 + 48);
      swift_bridgeObjectRetain();
      if (v326(v325, 1, v478))
      {
        memcpy(v324, v325, v486);
      }
      else
      {
        v312((unint64_t)v324, (unint64_t)v325, v478);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v473 + 56))(v324, 0, 1, v478);
      }
      unint64_t v327 = (void *)(((unint64_t)v324 + v454) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v328 = (void *)(((unint64_t)v325 + v454) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v327 = *v328;
      unint64_t v329 = ((unint64_t)v327 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v330 = ((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v331 = *(void *)v330;
      *(unsigned char *)(v329 + 8) = *(unsigned char *)(v330 + 8);
      *(void *)unint64_t v329 = v331;
      unint64_t v332 = (void *)(((unint64_t)v327 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v333 = (void *)(((unint64_t)v328 + 31) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v332 = *v333;
      unint64_t v334 = ((unint64_t)v332 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v335 = (uint64_t *)(((unint64_t)v333 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v336 = v335[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v336 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v334 = *(_OWORD *)v335;
      }
      else
      {
        uint64_t v337 = *v335;
        sub_24D3F9C18(*v335, v336);
        *(void *)unint64_t v334 = v337;
        *(void *)(v334 + 8) = v336;
      }
      unint64_t v338 = (v334 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v339 = ((unint64_t)v335 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v340 = *(void *)v339;
      *(unsigned char *)(v338 + 8) = *(unsigned char *)(v339 + 8);
      *(void *)unint64_t v338 = v340;
      *(unsigned char *)(v338 + 9) = *(unsigned char *)(v339 + 9);
      unint64_t v341 = (v338 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v342 = (v339 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v343 = *(_DWORD *)v342;
      *(unsigned char *)(v341 + 4) = *(unsigned char *)(v342 + 4);
      *(_DWORD *)unint64_t v341 = v343;
      unint64_t v344 = (void *)((v338 + 25) & 0xFFFFFFFFFFFFFFF8);
      size_t v345 = (void *)((v339 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v344 = *v345;
      v344[1] = v345[1];
      unint64_t v346 = v455 + v522;
      unint64_t v347 = v455 + v307;
      unint64_t v348 = *(void *)(v455 + v307 + 16);
      if (v348 >= 0xFFFFFFFF) {
        LODWORD(v348) = -1;
      }
      int v349 = v348 - 1;
      swift_bridgeObjectRetain();
      if (v349 < 0)
      {
        *(void *)unint64_t v346 = *(void *)v347;
        *(unsigned char *)(v346 + 8) = *(unsigned char *)(v347 + 8);
        *(unsigned char *)(v346 + 9) = *(unsigned char *)(v347 + 9);
        id v362 = *(void **)(v347 + 16);
        id v363 = v362;
        *(void *)(v346 + 16) = v362;
        id v364 = *(void **)(v347 + 24);
        id v365 = v364;
        *(void *)(v346 + 24) = v364;
        *(unsigned char *)(v346 + 32) = *(unsigned char *)(v347 + 32);
        *(unsigned char *)(v346 + 33) = *(unsigned char *)(v347 + 33);
        *(unsigned char *)(v346 + 34) = *(unsigned char *)(v347 + 34);
        *(void *)(v346 + 40) = *(void *)(v347 + 40);
        *(void *)(v346 + 48) = *(void *)(v347 + 48);
        *(void *)(v346 + 56) = *(void *)(v347 + 56);
        *(void *)(v346 + 64) = *(void *)(v347 + 64);
        *(unsigned char *)(v346 + 72) = *(unsigned char *)(v347 + 72);
        *(void *)(v346 + 80) = *(void *)(v347 + 80);
        *(void *)(v346 + 88) = *(void *)(v347 + 88);
        unint64_t v523 = *(void **)(v347 + 96);
        *(void *)(v346 + 96) = v523;
        *(unsigned char *)(v346 + 104) = *(unsigned char *)(v347 + 104);
        *(unsigned char *)(v346 + 105) = *(unsigned char *)(v347 + 105);
        *(void *)(v346 + 112) = *(void *)(v347 + 112);
        *(void *)(v346 + 120) = *(void *)(v347 + 120);
        *(void *)(v346 + 128) = *(void *)(v347 + 128);
        *(void *)(v346 + 136) = *(void *)(v347 + 136);
        *(void *)(v346 + 144) = *(void *)(v347 + 144);
        *(void *)(v346 + 152) = *(void *)(v347 + 152);
        *(void *)(v346 + 160) = *(void *)(v347 + 160);
        *(void *)(v346 + 168) = *(void *)(v347 + 168);
        *(unsigned char *)(v346 + 176) = *(unsigned char *)(v347 + 176);
        *(void *)(v346 + 184) = *(void *)(v347 + 184);
        uint64_t v366 = *(void *)(v347 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v367 = v523;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v366)
        {
          *(void *)(v346 + 192) = v366;
          *(void *)(v346 + 200) = *(void *)(v347 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v346 + 192) = *(_OWORD *)(v347 + 192);
        }
        uint64_t v64 = a1;
        uint64_t v292 = v480;
        *(void *)(v346 + 208) = *(void *)(v347 + 208);
        *(void *)(v346 + 216) = *(void *)(v347 + 216);
        *(void *)(v346 + 224) = *(void *)(v347 + 224);
        *(void *)(v346 + 232) = *(void *)(v347 + 232);
        *(void *)(v346 + 240) = *(void *)(v347 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v350 = *(_OWORD *)v347;
        long long v351 = *(_OWORD *)(v347 + 16);
        long long v352 = *(_OWORD *)(v347 + 48);
        *(_OWORD *)(v346 + 32) = *(_OWORD *)(v347 + 32);
        *(_OWORD *)(v346 + 48) = v352;
        *(_OWORD *)unint64_t v346 = v350;
        *(_OWORD *)(v346 + 16) = v351;
        long long v353 = *(_OWORD *)(v347 + 64);
        long long v354 = *(_OWORD *)(v347 + 80);
        long long v355 = *(_OWORD *)(v347 + 112);
        *(_OWORD *)(v346 + 96) = *(_OWORD *)(v347 + 96);
        *(_OWORD *)(v346 + 112) = v355;
        *(_OWORD *)(v346 + 64) = v353;
        *(_OWORD *)(v346 + 80) = v354;
        long long v356 = *(_OWORD *)(v347 + 128);
        long long v357 = *(_OWORD *)(v347 + 144);
        long long v358 = *(_OWORD *)(v347 + 176);
        *(_OWORD *)(v346 + 160) = *(_OWORD *)(v347 + 160);
        *(_OWORD *)(v346 + 176) = v358;
        *(_OWORD *)(v346 + 128) = v356;
        *(_OWORD *)(v346 + 144) = v357;
        long long v359 = *(_OWORD *)(v347 + 192);
        long long v360 = *(_OWORD *)(v347 + 208);
        long long v361 = *(_OWORD *)(v347 + 224);
        *(void *)(v346 + 240) = *(void *)(v347 + 240);
        *(_OWORD *)(v346 + 208) = v360;
        *(_OWORD *)(v346 + 224) = v361;
        *(_OWORD *)(v346 + 192) = v359;
        uint64_t v292 = v480;
      }
      long long v420 = (_OWORD *)((v346 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v421 = (long long *)((v347 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v422 = *v421;
      *(_OWORD *)((char *)v420 + 9) = *(long long *)((char *)v421 + 9);
      _OWORD *v420 = v422;
      unint64_t v423 = (v346 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v424 = (v347 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v425 = *(_OWORD *)v424;
      *(unsigned char *)(v423 + 16) = *(unsigned char *)(v424 + 16);
      *(_OWORD *)unint64_t v423 = v425;
      uint64_t v426 = (void *)((v346 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v427 = (v347 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v428 = *(void *)v427;
      v427 += 15;
      *uint64_t v426 = v428;
      unint64_t v429 = (void *)(((unint64_t)v426 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v430 = *(void *)(v427 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v431 = *(void *)((v427 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v430, v431);
      *unint64_t v429 = v430;
      v429[1] = v431;
      size_t v293 = v479;
      uint64_t v291 = v518;
      if (!v463) {
        goto LABEL_168;
      }
LABEL_208:
      unint64_t v432 = ((((v292
               + ((((((((((v481 + v293 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      unint64_t v433 = (void *)(((unint64_t)v291 + v432) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v434 = (void *)(((unint64_t)v81 + v432) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v433 = *v434;
      v433[1] = v434[1];
      *(void *)(((unint64_t)v433 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v434 + 23) & 0xFFFFFFFFFFFFFFF8);
      *(unsigned char *)(v64 + v526) = 3;
      swift_bridgeObjectRetain();
      return v64;
    case 4u:
      uint64_t v64 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v488 + 16))(a1, a2, AssociatedTypeWitness);
      char v84 = 4;
      goto LABEL_69;
    case 5u:
      uint64_t v64 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v488 + 16))(a1, a2, AssociatedTypeWitness);
      char v84 = 5;
      goto LABEL_69;
    case 6u:
      uint64_t v64 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v488 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v85 = (const void *)((unint64_t)&a2[v45] & v62);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v85, 1, v503))
      {
        memcpy((void *)((v45 + a1) & v62), v85, v43);
      }
      else
      {
        (*(void (**)(uint64_t, const void *, uint64_t))(v40 + 16))((v45 + a1) & v62, v85, v503);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))((v45 + a1) & v62, 0, 1, v503);
      }
      unint64_t v86 = v526;
      char v84 = 6;
      goto LABEL_89;
    case 7u:
      uint64_t v64 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v488 + 16))(a1, a2, AssociatedTypeWitness);
      char v84 = 7;
LABEL_69:
      unint64_t v86 = v526;
LABEL_89:
      *(unsigned char *)(v64 + v86) = v84;
      return v64;
    default:
      uint64_t v500 = v59;
      uint64_t v504 = v58;
      unint64_t v63 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v488 + 16);
      uint64_t v64 = a1;
      v63(a1, a2, AssociatedTypeWitness);
      uint64_t v517 = (void *)((v482 + a1) & v56);
      uint64_t v65 = (const void *)((unint64_t)&a2[v482] & v56);
      if (v484 == v483)
      {
        int v66 = (*(uint64_t (**)(const void *))(v488 + 48))(v65);
        uint64_t v67 = v485;
      }
      else
      {
        unint64_t v87 = ((unint64_t)v65 + v487) & v57;
        uint64_t v67 = v485;
        unint64_t v88 = (v485 + v87) & v513;
        if (v466 == v483)
        {
          if (v453 == v466)
          {
            int v66 = (*(uint64_t (**)(unint64_t))(v468 + 48))((v485 + v87) & v513);
          }
          else
          {
            unint64_t v120 = (unint64_t *)((v467 + v88) & 0xFFFFFFFFFFFFFFF8);
            if (v451 <= 0x7FFFFFFE)
            {
              unint64_t v121 = *v120;
              if (v121 >= 0xFFFFFFFF) {
                LODWORD(v121) = -1;
              }
              uint64_t v122 = ~v509;
              if ((v121 + 1) >= 2) {
                goto LABEL_132;
              }
              goto LABEL_135;
            }
            int v66 = (*(uint64_t (**)(unint64_t))(v461 + 48))(((unint64_t)v120 + v460) & v504);
          }
        }
        else
        {
          unint64_t v101 = v474 + v88;
          if ((v452 & 0x80000000) != 0)
          {
            uint64_t v130 = (v465 + ((v464 + v101) & ~v509)) & v500;
            if (v463 <= 0x7FFFFFFD)
            {
              uint64_t v122 = ~v509;
              unint64_t v436 = *(void *)(((v450 + ((v459 + v130) & v500)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v436 >= 0xFFFFFFFF) {
                LODWORD(v436) = -1;
              }
              if ((v436 + 1) >= 2) {
                goto LABEL_132;
              }
              goto LABEL_135;
            }
            int v66 = (*(uint64_t (**)(uint64_t))(v473 + 48))(v130);
          }
          else
          {
            unint64_t v102 = *(void *)(v101 + 8);
            if (v102 >= 0xFFFFFFFF) {
              LODWORD(v102) = -1;
            }
            int v66 = v102 + 1;
          }
        }
      }
      uint64_t v122 = ~v509;
      if (v66)
      {
LABEL_132:
        unint64_t v132 = v517;
        memcpy(v517, v65, v472);
        uint64_t v133 = v480;
LABEL_133:
        size_t v134 = v486;
        goto LABEL_185;
      }
      unint64_t v87 = ((unint64_t)v65 + v487) & v57;
      unint64_t v88 = (v67 + v87) & v513;
LABEL_135:
      uint64_t v438 = v122;
      ((void (*)(void *))v63)(v517);
      unint64_t v135 = ((unint64_t)v517 + v487) & v57;
      v63(v135, (unsigned __int8 *)v87, AssociatedTypeWitness);
      unint64_t v136 = (v67 + v135) & v513;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v468 + 16))(v136, v88, v469);
      unint64_t v137 = (void *)((v467 + v136) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v138 = (void *)((v467 + v88) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v137 = *v138;
      unint64_t v139 = ((unint64_t)v137 + v460) & v504;
      unint64_t v140 = ((unint64_t)v138 + v460) & v504;
      unint64_t v141 = *(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16);
      swift_bridgeObjectRetain();
      v141(v139, v140, v462);
      uint64_t v142 = (void *)((v456 + v140) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v143 = (void *)((v456 + v139) & 0xFFFFFFFFFFFFFFF8);
      void *v143 = *v142;
      unint64_t v144 = (void *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v145 = (void *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v144 = *v145;
      v144[1] = v145[1];
      uint64_t v146 = (void *)(v474 + v136);
      void *v146 = *(void *)(v474 + v88);
      v146[1] = *(void *)(v474 + v88 + 8);
      unint64_t v147 = (v464 + v474 + v136) & v438;
      unint64_t v148 = (v464 + v474 + v88) & v438;
      *(unsigned char *)unint64_t v147 = *(unsigned char *)v148;
      uint64_t v149 = v147 | 4;
      int v150 = *(_DWORD *)(v148 | 4);
      *(unsigned char *)(v149 + 4) = *(unsigned char *)((v148 | 4) + 4);
      *(_DWORD *)uint64_t v149 = v150;
      *(_WORD *)(v147 + 10) = *(_WORD *)(v148 + 0xA);
      unint64_t v520 = v147;
      unint64_t v151 = (v465 + v147) & v500;
      unint64_t v152 = (v465 + v148) & v500;
      unsigned int v153 = *(void (**)(unint64_t, unint64_t, uint64_t))(v473 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v153(v151, v152, v478);
      size_t v154 = (v459 + v151) & v500;
      size_t v155 = (v459 + v152) & v500;
      v153(v154, v155, v478);
      uint64_t v156 = (unsigned char *)(v154 + v479);
      *uint64_t v156 = *(unsigned char *)(v155 + v479);
      v156[1] = *(unsigned char *)(v155 + v479 + 1);
      v156[2] = *(unsigned char *)(v155 + v479 + 2);
      v156[3] = *(unsigned char *)(v155 + v479 + 3);
      v156[4] = *(unsigned char *)(v155 + v479 + 4);
      unint64_t v157 = (v154 + v479 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v158 = (v155 + v479 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v157 = *(void *)v158;
      *(void *)(v157 + 8) = *(void *)(v158 + 8);
      *(unsigned char *)(v157 + 16) = *(unsigned char *)(v158 + 16);
      *(unsigned char *)(v157 + 17) = *(unsigned char *)(v158 + 17);
      *(unsigned char *)(v157 + 18) = *(unsigned char *)(v158 + 18);
      *(unsigned char *)(v157 + 19) = *(unsigned char *)(v158 + 19);
      unint64_t v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v158 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v159 = *(void *)v160;
      *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
      *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
      *(unsigned char *)(v159 + 10) = *(unsigned char *)(v160 + 10);
      *(unsigned char *)(v159 + 11) = *(unsigned char *)(v160 + 11);
      *(unsigned char *)(v159 + 12) = *(unsigned char *)(v160 + 12);
      uint64_t v161 = (void *)((v158 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v162 = (void *)((v157 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v162 = *v161;
      unint64_t v163 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v164 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v163 = *(void *)v164;
      *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
      *(unsigned char *)(v163 + 9) = *(unsigned char *)(v164 + 9);
      uint64_t v165 = (void *)((v457 + v163) & v500);
      uint64_t v166 = (const void *)((v457 + v164) & v500);
      uint64_t v167 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v473 + 48);
      swift_bridgeObjectRetain();
      if (v167(v166, 1, v478))
      {
        memcpy(v165, v166, v486);
      }
      else
      {
        v153((unint64_t)v165, (unint64_t)v166, v478);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v473 + 56))(v165, 0, 1, v478);
      }
      uint64_t v168 = (void *)(((unint64_t)v165 + v454) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v169 = (void *)(((unint64_t)v166 + v454) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v168 = *v169;
      unint64_t v170 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = ((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v172 = *(void *)v171;
      *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
      *(void *)unint64_t v170 = v172;
      uint64_t v173 = (void *)(((unint64_t)v168 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v174 = (void *)(((unint64_t)v169 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v173 = *v174;
      unint64_t v175 = ((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v176 = (uint64_t *)(((unint64_t)v174 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v177 = v176[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v177 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v175 = *(_OWORD *)v176;
      }
      else
      {
        uint64_t v178 = *v176;
        sub_24D3F9C18(*v176, v177);
        *(void *)unint64_t v175 = v178;
        *(void *)(v175 + 8) = v177;
      }
      unint64_t v179 = (v175 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v180 = ((unint64_t)v176 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v181 = *(void *)v180;
      *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
      *(void *)unint64_t v179 = v181;
      *(unsigned char *)(v179 + 9) = *(unsigned char *)(v180 + 9);
      unint64_t v182 = (v179 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v183 = (v180 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v184 = *(_DWORD *)v183;
      *(unsigned char *)(v182 + 4) = *(unsigned char *)(v183 + 4);
      *(_DWORD *)unint64_t v182 = v184;
      unsigned int v185 = (void *)((v179 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v186 = (void *)((v180 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v185 = *v186;
      v185[1] = v186[1];
      unint64_t v187 = v455 + v520;
      unint64_t v188 = v455 + v148;
      unint64_t v189 = *(void *)(v455 + v148 + 16);
      if (v189 >= 0xFFFFFFFF) {
        LODWORD(v189) = -1;
      }
      int v190 = v189 - 1;
      swift_bridgeObjectRetain();
      if (v190 < 0)
      {
        *(void *)unint64_t v187 = *(void *)v188;
        *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
        *(unsigned char *)(v187 + 9) = *(unsigned char *)(v188 + 9);
        uint64_t v203 = *(void **)(v188 + 16);
        id v204 = v203;
        *(void *)(v187 + 16) = v203;
        uint64_t v205 = *(void **)(v188 + 24);
        id v206 = v205;
        *(void *)(v187 + 24) = v205;
        *(unsigned char *)(v187 + 32) = *(unsigned char *)(v188 + 32);
        *(unsigned char *)(v187 + 33) = *(unsigned char *)(v188 + 33);
        *(unsigned char *)(v187 + 34) = *(unsigned char *)(v188 + 34);
        *(void *)(v187 + 40) = *(void *)(v188 + 40);
        *(void *)(v187 + 48) = *(void *)(v188 + 48);
        *(void *)(v187 + 56) = *(void *)(v188 + 56);
        *(void *)(v187 + 64) = *(void *)(v188 + 64);
        *(unsigned char *)(v187 + 72) = *(unsigned char *)(v188 + 72);
        *(void *)(v187 + 80) = *(void *)(v188 + 80);
        *(void *)(v187 + 88) = *(void *)(v188 + 88);
        unint64_t v521 = *(void **)(v188 + 96);
        *(void *)(v187 + 96) = v521;
        *(unsigned char *)(v187 + 104) = *(unsigned char *)(v188 + 104);
        *(unsigned char *)(v187 + 105) = *(unsigned char *)(v188 + 105);
        *(void *)(v187 + 112) = *(void *)(v188 + 112);
        *(void *)(v187 + 120) = *(void *)(v188 + 120);
        *(void *)(v187 + 128) = *(void *)(v188 + 128);
        *(void *)(v187 + 136) = *(void *)(v188 + 136);
        *(void *)(v187 + 144) = *(void *)(v188 + 144);
        *(void *)(v187 + 152) = *(void *)(v188 + 152);
        *(void *)(v187 + 160) = *(void *)(v188 + 160);
        *(void *)(v187 + 168) = *(void *)(v188 + 168);
        *(unsigned char *)(v187 + 176) = *(unsigned char *)(v188 + 176);
        *(void *)(v187 + 184) = *(void *)(v188 + 184);
        uint64_t v207 = *(void *)(v188 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v208 = v521;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v207)
        {
          *(void *)(v187 + 192) = v207;
          *(void *)(v187 + 200) = *(void *)(v188 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v187 + 192) = *(_OWORD *)(v188 + 192);
        }
        uint64_t v64 = a1;
        uint64_t v133 = v480;
        *(void *)(v187 + 208) = *(void *)(v188 + 208);
        *(void *)(v187 + 216) = *(void *)(v188 + 216);
        *(void *)(v187 + 224) = *(void *)(v188 + 224);
        *(void *)(v187 + 232) = *(void *)(v188 + 232);
        *(void *)(v187 + 240) = *(void *)(v188 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v191 = *(_OWORD *)v188;
        long long v192 = *(_OWORD *)(v188 + 16);
        long long v193 = *(_OWORD *)(v188 + 48);
        *(_OWORD *)(v187 + 32) = *(_OWORD *)(v188 + 32);
        *(_OWORD *)(v187 + 48) = v193;
        *(_OWORD *)unint64_t v187 = v191;
        *(_OWORD *)(v187 + 16) = v192;
        long long v194 = *(_OWORD *)(v188 + 64);
        long long v195 = *(_OWORD *)(v188 + 80);
        long long v196 = *(_OWORD *)(v188 + 112);
        *(_OWORD *)(v187 + 96) = *(_OWORD *)(v188 + 96);
        *(_OWORD *)(v187 + 112) = v196;
        *(_OWORD *)(v187 + 64) = v194;
        *(_OWORD *)(v187 + 80) = v195;
        long long v197 = *(_OWORD *)(v188 + 128);
        long long v198 = *(_OWORD *)(v188 + 144);
        long long v199 = *(_OWORD *)(v188 + 176);
        *(_OWORD *)(v187 + 160) = *(_OWORD *)(v188 + 160);
        *(_OWORD *)(v187 + 176) = v199;
        *(_OWORD *)(v187 + 128) = v197;
        *(_OWORD *)(v187 + 144) = v198;
        long long v200 = *(_OWORD *)(v188 + 192);
        long long v201 = *(_OWORD *)(v188 + 208);
        long long v202 = *(_OWORD *)(v188 + 224);
        *(void *)(v187 + 240) = *(void *)(v188 + 240);
        *(_OWORD *)(v187 + 208) = v201;
        *(_OWORD *)(v187 + 224) = v202;
        *(_OWORD *)(v187 + 192) = v200;
        uint64_t v133 = v480;
      }
      unint64_t v368 = (_OWORD *)((v187 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v369 = (long long *)((v188 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v370 = *v369;
      *(_OWORD *)((char *)v368 + 9) = *(long long *)((char *)v369 + 9);
      *unint64_t v368 = v370;
      unint64_t v371 = (v187 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v372 = (v188 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v373 = *(_OWORD *)v372;
      *(unsigned char *)(v371 + 16) = *(unsigned char *)(v372 + 16);
      *(_OWORD *)unint64_t v371 = v373;
      unint64_t v374 = (void *)((v187 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v375 = (v188 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v376 = *(void *)v375;
      v375 += 15;
      *unint64_t v374 = v376;
      uint64_t v377 = (void *)(((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v378 = *(void *)(v375 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v379 = *(void *)((v375 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v378, v379);
      *uint64_t v377 = v378;
      v377[1] = v379;
      size_t v134 = v479;
      unint64_t v132 = v517;
      if (!v463) {
        goto LABEL_133;
      }
LABEL_185:
      unint64_t v380 = ((((v133
               + ((((((((((v481 + v134 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      long long v381 = (void *)(((unint64_t)v132 + v380) & 0xFFFFFFFFFFFFFFF8);
      long long v382 = (void *)(((unint64_t)v65 + v380) & 0xFFFFFFFFFFFFFFF8);
      *long long v381 = *v382;
      id v383 = *(void **)(((unint64_t)v382 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(void *)(((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8) = v383;
      *(unsigned char *)(v64 + v526) = 0;
      id v384 = v383;
      return v64;
  }
}

unsigned __int8 *sub_24D9F7898(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  if (a1 == a2) {
    return v3;
  }
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v564 = *(void *)(v5 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v559 = v4;
  uint64_t v522 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v522 - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v512 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v512 - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v519 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v519 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = v13 | 7;
  uint64_t v15 = v11 | v6 | v13;
  size_t v563 = (void *)v5;
  uint64_t v521 = v7;
  uint64_t v511 = v9;
  unsigned int v16 = *(_DWORD *)(v9 + 84);
  unsigned int v494 = *(_DWORD *)(v7 + 84);
  if (v494 > v16) {
    unsigned int v16 = *(_DWORD *)(v7 + 84);
  }
  unsigned int v489 = v16;
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v16 = 2147483646;
  }
  unsigned int v516 = v16;
  unsigned int v533 = *(_DWORD *)(v5 + 84);
  if (v16 <= v533) {
    unsigned int v16 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v509 = *(void *)(v519 - 8);
  unsigned int v17 = *(_DWORD *)(v12 + 84);
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v18 = 2147483646;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v12 + 84);
  }
  if (v16 > v18) {
    unsigned int v18 = v16;
  }
  unsigned int v493 = v18;
  if (v18 <= 0x7FFFFFFF) {
    int v19 = 0x7FFFFFFF;
  }
  else {
    int v19 = v18;
  }
  int v532 = v19;
  unsigned int v496 = v17;
  uint64_t v534 = v564 + v6;
  uint64_t v540 = v11;
  uint64_t v535 = v564 + v11;
  unint64_t v20 = (v564 + v11 + ((v564 + v6) & ~v6)) & ~v11;
  uint64_t v21 = v13;
  uint64_t v520 = *(void *)(v7 + 64) + 7;
  uint64_t v510 = v10 + 8;
  uint64_t v546 = v10;
  uint64_t v501 = *(void *)(v9 + 64) + 7;
  unint64_t v525 = ((((v501 + ((v10 + 8 + (v520 & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v513 = v14 + 16;
  uint64_t v22 = v14 + 16 + v525 + v20;
  uint64_t v538 = v13 | 7;
  uint64_t v514 = v13 + 12;
  size_t v23 = *(void *)(*(void *)(v519 - 8) + 64);
  size_t v508 = v23 + v13;
  size_t v492 = v23 + 12;
  unint64_t v24 = (v13
       + 10
       + ((((((v23 + 12 + ((v23 + v13 + ((v13 + 12) & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  size_t v500 = v23;
  if (!v17) {
    ++v23;
  }
  size_t v517 = v23;
  unint64_t v518 = v24;
  uint64_t v502 = v13 + 10;
  size_t v503 = v23 + 7;
  uint64_t v515 = v22 & ~v14;
  unint64_t v504 = ((((((((((v23 + 7 + v24) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  size_t v530 = ((((v515 + v504 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v531 = v15 + v564;
  uint64_t v536 = v15;
  size_t v25 = v530 + ((v15 + v564) & ~v15);
  unint64_t v543 = (v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(unsigned __int8 *)(v27 + 80);
  size_t v557 = (v25 + v28) & ~v28;
  uint64_t v528 = v27;
  uint64_t v529 = v26;
  if (*(_DWORD *)(v27 + 84)) {
    uint64_t v29 = *(void *)(v27 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v27 + 64) + 1;
  }
  uint64_t v524 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v524 - 8);
  int v31 = *(_DWORD *)(v30 + 80) & 0xF8;
  uint64_t v507 = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(v507 - 8);
  uint64_t v33 = *(unsigned __int8 *)(v32 + 80);
  int v34 = v31 | v33;
  uint64_t v3 = a1;
  uint64_t v35 = v34 | 7u;
  uint64_t v523 = v30;
  uint64_t v506 = v32;
  unsigned int v36 = *(_DWORD *)(v32 + 84);
  unsigned int v490 = v36;
  if (*(_DWORD *)(v30 + 84) > v36) {
    unsigned int v36 = *(_DWORD *)(v30 + 84);
  }
  unsigned int v497 = v36;
  if (v36 <= 0x7FFFFFFE) {
    int v37 = 2147483646;
  }
  else {
    int v37 = v36;
  }
  uint64_t v526 = *(void *)(v30 + 64) + 7;
  uint64_t v505 = v33 + 8;
  uint64_t v495 = *(void *)(*(void *)(v507 - 8) + 64) + 7;
  unint64_t v38 = ((((v495 + ((v33 + 8 + (v526 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t __n = v29;
  unint64_t v39 = ((((((v29 + v35 + v557) & ~v35) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v40 = *(void *)(v559 - 8);
  uint64_t v41 = *(unsigned __int8 *)(v40 + 80);
  uint64_t v558 = v28;
  uint64_t v499 = v564 + v28;
  uint64_t v527 = v29 + v35;
  if (*(_DWORD *)(v40 + 84)) {
    uint64_t v42 = *(void *)(*(void *)(v559 - 8) + 64);
  }
  else {
    uint64_t v42 = *(void *)(*(void *)(v559 - 8) + 64) + 1;
  }
  unint64_t v43 = ((v543 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v564 > v43) {
    unint64_t v43 = v564;
  }
  if (v39 <= v38 + ((v29 + v35 + ((v564 + v28) & ~v28)) & ~v35) + 16) {
    unint64_t v39 = v38 + ((v29 + v35 + ((v564 + v28) & ~v28)) & ~v35) + 16;
  }
  uint64_t v498 = v564 + v41;
  unint64_t v44 = ((v564 + v41) & ~v41) + v42;
  if (((v543 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v44) {
    unint64_t v44 = ((v543 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v43 <= v39) {
    unint64_t v43 = v39;
  }
  if (v43 <= v44) {
    unint64_t v45 = v44;
  }
  else {
    unint64_t v45 = v43;
  }
  unsigned int v46 = a1[v45];
  unsigned int v47 = v46 - 8;
  if (v46 < 8)
  {
    uint64_t v50 = v540;
    uint64_t v49 = v6;
    uint64_t v52 = v536;
    uint64_t v51 = v538;
  }
  else
  {
    if (v45 <= 3) {
      uint64_t v48 = v45;
    }
    else {
      uint64_t v48 = 4;
    }
    uint64_t v50 = v540;
    uint64_t v49 = v6;
    uint64_t v52 = v536;
    uint64_t v51 = v538;
    switch(v48)
    {
      case 1:
        int v53 = *a1;
        if (v45 < 4) {
          goto LABEL_53;
        }
        goto LABEL_54;
      case 2:
        int v53 = *(unsigned __int16 *)a1;
        if (v45 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 3:
        int v53 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v45 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 4:
        int v53 = *(_DWORD *)a1;
        if (v45 < 4) {
LABEL_53:
        }
          v53 |= v47 << (8 * v45);
LABEL_54:
        unsigned int v46 = v53 + 8;
        break;
      default:
        break;
    }
  }
  uint64_t v544 = ~v52;
  uint64_t v545 = ~v49;
  uint64_t v565 = ~v50;
  uint64_t v54 = ~v546;
  uint64_t v55 = ~v51;
  uint64_t v541 = ~v21;
  uint64_t v56 = AssociatedTypeWitness;
  uint64_t v57 = ~v558;
  uint64_t v542 = ~v35;
  uint64_t v539 = ~v33;
  uint64_t v537 = ~v41;
  int v547 = *(_DWORD *)(v30 + 84);
  size_t v488 = v42;
  switch(v46)
  {
    case 1u:
      size_t v481 = ((((v495 + ((v33 + 8 + (v526 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      int v486 = v37;
      uint64_t v74 = (void (*)(unsigned __int8 *, uint64_t))v563[1];
      v74(a1, AssociatedTypeWitness);
      unint64_t v75 = (unint64_t)&a1[v531] & v544;
      if (v533 == v532)
      {
        uint64_t v76 = (uint64_t (*)(unint64_t))v563[6];
        unint64_t v77 = (unint64_t)&a1[v531] & v544;
        goto LABEL_75;
      }
      unint64_t v79 = (v534 + v75) & v545;
      unint64_t v80 = (v535 + v79) & v565;
      if (v516 == v532)
      {
        if (v494 == v516)
        {
          uint64_t v76 = *(uint64_t (**)(unint64_t))(v521 + 48);
          unint64_t v77 = (v535 + v79) & v565;
          goto LABEL_75;
        }
        unint64_t v171 = (unint64_t *)((v520 + v80) & 0xFFFFFFFFFFFFFFF8);
        if (v489 <= 0x7FFFFFFE)
        {
          unint64_t v172 = *v171;
          goto LABEL_358;
        }
        unint64_t v77 = ((unint64_t)v171 + v510) & v54;
        uint64_t v76 = *(uint64_t (**)(unint64_t))(v511 + 48);
      }
      else
      {
        unint64_t v118 = v525 + v80;
        if ((v493 & 0x80000000) == 0)
        {
          unint64_t v119 = *(void *)(v118 + 8);
          if (v119 >= 0xFFFFFFFF) {
            LODWORD(v119) = -1;
          }
          if (v119 == -1)
          {
LABEL_76:
            unint64_t v79 = (v534 + v75) & v545;
            unint64_t v80 = (v535 + v79) & v565;
LABEL_77:
            unint64_t v478 = v75;
            v74((unsigned __int8 *)v75, AssociatedTypeWitness);
            v74((unsigned __int8 *)v79, AssociatedTypeWitness);
            (*(void (**)(unint64_t, uint64_t))(v521 + 8))(v80, v522);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v511 + 8))((v510 + ((v520 + v80) & 0xFFFFFFFFFFFFFFF8)) & v54, v512);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v81 = (v513 + v525 + v80) & v55;
            int v82 = *(void (**)(unint64_t, uint64_t))(v509 + 8);
            v82((v514 + v81) & v541, v519);
            unint64_t v83 = (v508 + ((v514 + v81) & v541)) & v541;
            v82(v83, v519);
            swift_bridgeObjectRelease();
            unint64_t v84 = (v502
                 + ((((((v492 + v83) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v509 + 48))(v84, 1, v519)) {
              v82(v84, v519);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v85 = (uint64_t *)((((((v503 + v84) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v86 = v85[1];
            if ((v86 & 0x3000000000000000) == 0) {
              sub_24D400DCC(*v85, v86);
            }
            swift_bridgeObjectRelease();
            unint64_t v87 = v504 + v81;
            unint64_t v88 = *(void **)(v87 + 16);
            LODWORD(v89) = -1;
            if ((unint64_t)v88 < 0xFFFFFFFF) {
              uint64_t v89 = *(void *)(v87 + 16);
            }
            uint64_t v56 = AssociatedTypeWitness;
            if ((int)v89 - 1 < 0)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v87 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_24D466534(*(void *)((((v87 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v87 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            unint64_t v75 = v478;
          }
LABEL_88:
          uint64_t v57 = ~v558;
          size_t v90 = (v75 + v558 + v530) & ~v558;
          if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v528 + 48))(v90, 1, v529)) {
            (*(void (**)(size_t, uint64_t))(v528 + 8))(v90, v529);
          }
          size_t v91 = (v527 + v90) & v542;
          int v37 = v486;
          if (v547 == v486)
          {
            if (!(*(unsigned int (**)(size_t))(v523 + 48))(v91)) {
              goto LABEL_147;
            }
          }
          else
          {
            unint64_t v112 = (uint64_t *)((v526 + v91) & 0xFFFFFFFFFFFFFFF8);
            if (v497 <= 0x7FFFFFFE)
            {
              uint64_t v113 = *v112;
              if ((unint64_t)*v112 >= 0xFFFFFFFF) {
                LODWORD(v113) = -1;
              }
              if ((v113 + 1) >= 2) {
                goto LABEL_149;
              }
              goto LABEL_148;
            }
            if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v506 + 48))(((unint64_t)v112 + v505) & v539, v490, v507))
            {
LABEL_147:
              unint64_t v112 = (uint64_t *)((v526 + v91) & 0xFFFFFFFFFFFFFFF8);
LABEL_148:
              (*(void (**)(size_t, uint64_t))(v523 + 8))(v91, v524);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v506 + 8))(((unint64_t)v112 + v505) & v539, v507);
              int v37 = v486;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
          }
LABEL_149:
          unint64_t v38 = v481;

          goto LABEL_154;
        }
        unint64_t v77 = (v514 + ((v513 + v118) & v55)) & v541;
        if (v496 <= 0x7FFFFFFD)
        {
          unint64_t v172 = *(void *)(((v492 + ((v508 + v77) & v541)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_358:
          if (v172 >= 0xFFFFFFFF) {
            LODWORD(v172) = -1;
          }
          if ((v172 + 1) < 2) {
            goto LABEL_77;
          }
          goto LABEL_88;
        }
        uint64_t v76 = *(uint64_t (**)(unint64_t))(v509 + 48);
      }
LABEL_75:
      int v78 = v76(v77);
      unint64_t v75 = (unint64_t)&a1[v531] & v544;
      if (v78) {
        goto LABEL_88;
      }
      goto LABEL_76;
    case 2u:
      uint64_t v479 = v54;
      uint64_t v92 = ~v51;
      ((void (*)(unsigned __int8 *, uint64_t))v563[1])(a1, AssociatedTypeWitness);
      unint64_t v93 = (unint64_t)&a1[v499] & v57;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v528 + 48))(v93, 1, v529)) {
        (*(void (**)(unint64_t, uint64_t))(v528 + 8))(v93, v529);
      }
      unint64_t v94 = v38;
      unint64_t v95 = (v527 + v93) & v542;
      if (v547 == v37)
      {
        if ((*(unsigned int (**)(unint64_t))(v523 + 48))(v95)) {
          goto LABEL_153;
        }
LABEL_151:
        size_t v114 = (uint64_t *)((v526 + v95) & 0xFFFFFFFFFFFFFFF8);
LABEL_152:
        (*(void (**)(unint64_t, uint64_t))(v523 + 8))(v95, v524);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v506 + 8))(((unint64_t)v114 + v505) & v539, v507);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_153;
      }
      size_t v114 = (uint64_t *)((v526 + v95) & 0xFFFFFFFFFFFFFFF8);
      if (v497 > 0x7FFFFFFE)
      {
        if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v506 + 48))(((unint64_t)v114 + v505) & v539, v490, v507))
        {
          goto LABEL_153;
        }
        goto LABEL_151;
      }
      uint64_t v115 = *v114;
      if ((unint64_t)*v114 >= 0xFFFFFFFF) {
        LODWORD(v115) = -1;
      }
      if ((v115 + 1) < 2) {
        goto LABEL_152;
      }
LABEL_153:
      unint64_t v38 = v94;

      uint64_t v57 = ~v558;
      uint64_t v55 = v92;
      uint64_t v54 = v479;
LABEL_154:
      unsigned int v120 = a2[v45];
      unsigned int v121 = v120 - 8;
      if (v120 >= 8)
      {
        if (v45 <= 3) {
          uint64_t v122 = v45;
        }
        else {
          uint64_t v122 = 4;
        }
        switch(v122)
        {
          case 1:
            int v123 = *a2;
            if (v45 < 4) {
              goto LABEL_162;
            }
            goto LABEL_166;
          case 2:
            int v123 = *(unsigned __int16 *)a2;
            if (v45 < 4) {
              goto LABEL_162;
            }
            goto LABEL_166;
          case 3:
            int v123 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            if (v45 < 4) {
              goto LABEL_162;
            }
            goto LABEL_166;
          case 4:
            int v123 = *(_DWORD *)a2;
            if (v45 < 4) {
LABEL_162:
            }
              unsigned int v120 = (v123 | (v121 << (8 * v45))) + 8;
            else {
LABEL_166:
            }
              unsigned int v120 = v123 + 8;
            break;
          default:
            break;
        }
      }
      switch(v120)
      {
        case 1u:
          size_t v482 = v38;
          uint64_t v484 = v57;
          unint64_t v127 = (void (*)(unsigned __int8 *))v563[2];
          v127(a1);
          v552 = (void *)((unint64_t)&a1[v531] & v544);
          uint64_t v128 = (const void *)((unint64_t)&a2[v531] & v544);
          unint64_t v561 = v128;
          int v487 = v37;
          if (v533 == v532)
          {
            int v129 = ((uint64_t (*)(unint64_t))v563[6])((unint64_t)&a2[v531] & v544);
LABEL_269:
            uint64_t v128 = (const void *)((unint64_t)&a2[v531] & v544);
LABEL_270:
            if (v129)
            {
LABEL_271:
              unint64_t v260 = (unint64_t)&a1[v531] & v544;
              memcpy(v552, v128, v530);
              uint64_t v261 = v515;
              goto LABEL_272;
            }
            unint64_t v142 = ((unint64_t)v128 + v534) & v545;
            unint64_t v143 = (v535 + v142) & v565;
LABEL_274:
            ((void (*)(void *, const void *, uint64_t))v127)(v552, v128, v56);
            unint64_t v263 = ((unint64_t)v552 + v534) & v545;
            ((void (*)(unint64_t, unint64_t, uint64_t))v127)(v263, v142, v56);
            unint64_t v264 = (v535 + v263) & v565;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v521 + 16))(v264, v143, v522);
            int v265 = (void *)((v520 + v264) & 0xFFFFFFFFFFFFFFF8);
            int v266 = (void *)((v520 + v143) & 0xFFFFFFFFFFFFFFF8);
            *int v265 = *v266;
            unint64_t v267 = ((unint64_t)v265 + v510) & v54;
            unint64_t v268 = ((unint64_t)v266 + v510) & v54;
            unint64_t v269 = *(void (**)(unint64_t, unint64_t, uint64_t))(v511 + 16);
            swift_bridgeObjectRetain();
            v269(v267, v268, v512);
            unint64_t v270 = (void *)((v501 + v268) & 0xFFFFFFFFFFFFFFF8);
            int v271 = (void *)((v501 + v267) & 0xFFFFFFFFFFFFFFF8);
            void *v271 = *v270;
            long long v272 = (void *)(((unint64_t)v271 + 15) & 0xFFFFFFFFFFFFFFF8);
            long long v273 = (void *)(((unint64_t)v270 + 15) & 0xFFFFFFFFFFFFFFF8);
            *long long v272 = *v273;
            v272[1] = v273[1];
            long long v274 = (void *)(v525 + v264);
            *long long v274 = *(void *)(v525 + v143);
            v274[1] = *(void *)(v525 + v143 + 8);
            unint64_t v275 = (v513 + v525 + v264) & v55;
            unint64_t v276 = (v513 + v525 + v143) & v55;
            *(unsigned char *)unint64_t v275 = *(unsigned char *)v276;
            uint64_t v277 = v275 | 4;
            int v278 = *(_DWORD *)(v276 | 4);
            *(unsigned char *)(v277 + 4) = *(unsigned char *)((v276 | 4) + 4);
            *(_DWORD *)uint64_t v277 = v278;
            *(_WORD *)(v275 + 10) = *(_WORD *)(v276 + 0xA);
            unint64_t v279 = (v514 + v275) & v541;
            unint64_t v568 = v276;
            unint64_t v280 = (v514 + v276) & v541;
            long long v281 = *(void (**)(unint64_t, unint64_t, uint64_t))(v509 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v281(v279, v280, v519);
            size_t v282 = (v508 + v279) & v541;
            size_t v283 = (v508 + v280) & v541;
            v281(v282, v283, v519);
            unsigned int v284 = (unsigned char *)(v282 + v500);
            *unsigned int v284 = *(unsigned char *)(v283 + v500);
            v284[1] = *(unsigned char *)(v283 + v500 + 1);
            v284[2] = *(unsigned char *)(v283 + v500 + 2);
            v284[3] = *(unsigned char *)(v283 + v500 + 3);
            v284[4] = *(unsigned char *)(v283 + v500 + 4);
            unint64_t v285 = (v282 + v500 + 12) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v286 = (v283 + v500 + 12) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v285 = *(void *)v286;
            *(void *)(v285 + 8) = *(void *)(v286 + 8);
            *(unsigned char *)(v285 + 16) = *(unsigned char *)(v286 + 16);
            *(unsigned char *)(v285 + 17) = *(unsigned char *)(v286 + 17);
            *(unsigned char *)(v285 + 18) = *(unsigned char *)(v286 + 18);
            *(unsigned char *)(v285 + 19) = *(unsigned char *)(v286 + 19);
            unint64_t v287 = (v285 + 27) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v288 = (v286 + 27) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v287 = *(void *)v288;
            *(unsigned char *)(v287 + 8) = *(unsigned char *)(v288 + 8);
            *(unsigned char *)(v287 + 9) = *(unsigned char *)(v288 + 9);
            *(unsigned char *)(v287 + 10) = *(unsigned char *)(v288 + 10);
            *(unsigned char *)(v287 + 11) = *(unsigned char *)(v288 + 11);
            *(unsigned char *)(v287 + 12) = *(unsigned char *)(v288 + 12);
            uint64_t v289 = (void *)((v286 + 47) & 0xFFFFFFFFFFFFFFF8);
            id v290 = (void *)((v285 + 47) & 0xFFFFFFFFFFFFFFF8);
            *id v290 = *v289;
            unint64_t v291 = ((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v292 = ((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v291 = *(void *)v292;
            *(unsigned char *)(v291 + 8) = *(unsigned char *)(v292 + 8);
            *(unsigned char *)(v291 + 9) = *(unsigned char *)(v292 + 9);
            size_t v293 = (void *)((v502 + v291) & v541);
            unint64_t v294 = (const void *)((v502 + v292) & v541);
            unint64_t v295 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v509 + 48);
            swift_bridgeObjectRetain();
            if (v295(v294, 1, v519))
            {
              memcpy(v293, v294, v517);
            }
            else
            {
              v281((unint64_t)v293, (unint64_t)v294, v519);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v509 + 56))(v293, 0, 1, v519);
            }
            uint64_t v3 = a1;
            unint64_t v296 = (void *)(((unint64_t)v293 + v503) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v297 = (void *)(((unint64_t)v294 + v503) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v296 = *v297;
            unint64_t v298 = ((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v299 = ((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v300 = *(void *)v299;
            *(unsigned char *)(v298 + 8) = *(unsigned char *)(v299 + 8);
            *(void *)unint64_t v298 = v300;
            uint64_t v301 = (void *)(((unint64_t)v296 + 31) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v302 = (void *)(((unint64_t)v297 + 31) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v301 = *v302;
            unint64_t v303 = ((unint64_t)v301 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v304 = (uint64_t *)(((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v305 = v304[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v305 & 0x3000000000000000) != 0)
            {
              *(_OWORD *)unint64_t v303 = *(_OWORD *)v304;
            }
            else
            {
              uint64_t v306 = *v304;
              sub_24D3F9C18(*v304, v305);
              *(void *)unint64_t v303 = v306;
              *(void *)(v303 + 8) = v305;
            }
            unint64_t v307 = (v303 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v308 = ((unint64_t)v304 + 19) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v309 = *(void *)v308;
            *(unsigned char *)(v307 + 8) = *(unsigned char *)(v308 + 8);
            *(void *)unint64_t v307 = v309;
            *(unsigned char *)(v307 + 9) = *(unsigned char *)(v308 + 9);
            unint64_t v310 = (v307 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            unint64_t v311 = (v308 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            int v312 = *(_DWORD *)v311;
            *(unsigned char *)(v310 + 4) = *(unsigned char *)(v311 + 4);
            *(_DWORD *)unint64_t v310 = v312;
            size_t v313 = (void *)((v307 + 25) & 0xFFFFFFFFFFFFFFF8);
            size_t v314 = (void *)((v308 + 25) & 0xFFFFFFFFFFFFFFF8);
            *size_t v313 = *v314;
            v313[1] = v314[1];
            unint64_t v315 = v504 + v275;
            unint64_t v316 = (long long *)(v504 + v568);
            unint64_t v317 = *(void *)(v504 + v568 + 16);
            if (v317 >= 0xFFFFFFFF) {
              LODWORD(v317) = -1;
            }
            int v318 = v317 - 1;
            swift_bridgeObjectRetain();
            if (v318 < 0)
            {
              *(void *)unint64_t v315 = *(void *)v316;
              *(unsigned char *)(v315 + 8) = *((unsigned char *)v316 + 8);
              *(unsigned char *)(v315 + 9) = *((unsigned char *)v316 + 9);
              unint64_t v332 = (void *)*((void *)v316 + 2);
              id v333 = v332;
              *(void *)(v315 + 16) = v332;
              unint64_t v334 = (void *)*((void *)v316 + 3);
              id v335 = v334;
              *(void *)(v315 + 24) = v334;
              *(unsigned char *)(v315 + 32) = *((unsigned char *)v316 + 32);
              *(unsigned char *)(v315 + 33) = *((unsigned char *)v316 + 33);
              *(unsigned char *)(v315 + 34) = *((unsigned char *)v316 + 34);
              *(void *)(v315 + 40) = *((void *)v316 + 5);
              *(void *)(v315 + 48) = *((void *)v316 + 6);
              *(void *)(v315 + 56) = *((void *)v316 + 7);
              *(void *)(v315 + 64) = *((void *)v316 + 8);
              *(unsigned char *)(v315 + 72) = *((unsigned char *)v316 + 72);
              *(void *)(v315 + 80) = *((void *)v316 + 10);
              *(void *)(v315 + 88) = *((void *)v316 + 11);
              long long v569 = (void *)*((void *)v316 + 12);
              *(void *)(v315 + 96) = v569;
              *(unsigned char *)(v315 + 104) = *((unsigned char *)v316 + 104);
              *(unsigned char *)(v315 + 105) = *((unsigned char *)v316 + 105);
              *(void *)(v315 + 112) = *((void *)v316 + 14);
              *(void *)(v315 + 120) = *((void *)v316 + 15);
              *(void *)(v315 + 128) = *((void *)v316 + 16);
              *(void *)(v315 + 136) = *((void *)v316 + 17);
              *(void *)(v315 + 144) = *((void *)v316 + 18);
              *(void *)(v315 + 152) = *((void *)v316 + 19);
              *(void *)(v315 + 160) = *((void *)v316 + 20);
              *(void *)(v315 + 168) = *((void *)v316 + 21);
              *(unsigned char *)(v315 + 176) = *((unsigned char *)v316 + 176);
              *(void *)(v315 + 184) = *((void *)v316 + 23);
              uint64_t v549 = *((void *)v316 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v336 = v569;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v549)
              {
                *(void *)(v315 + 192) = v549;
                *(void *)(v315 + 200) = *((void *)v316 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v315 + 192) = v316[12];
              }
              uint64_t v3 = a1;
              uint64_t v261 = v515;
              unsigned int v331 = v496;
              size_t v262 = v500;
              *(void *)(v315 + 208) = *((void *)v316 + 26);
              *(void *)(v315 + 216) = *((void *)v316 + 27);
              *(void *)(v315 + 224) = *((void *)v316 + 28);
              *(void *)(v315 + 232) = *((void *)v316 + 29);
              *(void *)(v315 + 240) = *((void *)v316 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v319 = *v316;
              long long v320 = v316[1];
              long long v321 = v316[3];
              *(_OWORD *)(v315 + 32) = v316[2];
              *(_OWORD *)(v315 + 48) = v321;
              *(_OWORD *)unint64_t v315 = v319;
              *(_OWORD *)(v315 + 16) = v320;
              long long v322 = v316[4];
              long long v323 = v316[5];
              long long v324 = v316[7];
              *(_OWORD *)(v315 + 96) = v316[6];
              *(_OWORD *)(v315 + 112) = v324;
              *(_OWORD *)(v315 + 64) = v322;
              *(_OWORD *)(v315 + 80) = v323;
              long long v325 = v316[8];
              long long v326 = v316[9];
              long long v327 = v316[11];
              *(_OWORD *)(v315 + 160) = v316[10];
              *(_OWORD *)(v315 + 176) = v327;
              *(_OWORD *)(v315 + 128) = v325;
              *(_OWORD *)(v315 + 144) = v326;
              long long v328 = v316[12];
              long long v329 = v316[13];
              long long v330 = v316[14];
              *(void *)(v315 + 240) = *((void *)v316 + 30);
              *(_OWORD *)(v315 + 208) = v329;
              *(_OWORD *)(v315 + 224) = v330;
              *(_OWORD *)(v315 + 192) = v328;
              uint64_t v261 = v515;
              unsigned int v331 = v496;
              size_t v262 = v500;
            }
            uint64_t v430 = (_OWORD *)((v315 + 255) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v431 = (long long *)(((unint64_t)v316 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v432 = *v431;
            *(_OWORD *)((char *)v430 + 9) = *(long long *)((char *)v431 + 9);
            _OWORD *v430 = v432;
            unint64_t v433 = (v315 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v434 = ((unint64_t)v316 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v435 = *(_OWORD *)v434;
            *(unsigned char *)(v433 + 16) = *(unsigned char *)(v434 + 16);
            *(_OWORD *)unint64_t v433 = v435;
            unint64_t v436 = (void *)((v315 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v437 = ((unint64_t)v316 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v438 = *(void *)v437;
            v437 += 15;
            *unint64_t v436 = v438;
            uint64_t v439 = (void *)(((unint64_t)v436 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v440 = *(void *)(v437 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v441 = *(void *)((v437 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_24D5203A8(v440, v441);
            void *v439 = v440;
            v439[1] = v441;
            unint64_t v260 = (unint64_t)&a1[v531] & v544;
            if (v331)
            {
LABEL_310:
              unint64_t v442 = ((((v261
                       + ((((((((((v518 + v262 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 19) & 0xFFFFFFFFFFFFFFF8)
                         + 25) & 0xFFFFFFFFFFFFFFF8)
                       + 327) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 16;
              unsigned int v443 = (void *)((v260 + v558 + v442) & v484);
              uint64_t v444 = (const void *)(((unint64_t)v561 + v558 + v442) & v484);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v528 + 48))(v444, 1, v529))
              {
                memcpy(v443, v444, __n);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v528 + 16))(v443, v444, v529);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v528 + 56))(v443, 0, 1, v529);
              }
              uint64_t v445 = (char *)(((unint64_t)v443 + v527) & v542);
              uint64_t v446 = (char *)(((unint64_t)v444 + v527) & v542);
              if (v547 == v487)
              {
                if (!(*(unsigned int (**)(char *))(v523 + 48))(v446)) {
                  goto LABEL_323;
                }
              }
              else
              {
                uint64_t v447 = (void *)((unint64_t)&v446[v526] & 0xFFFFFFFFFFFFFFF8);
                if (v497 > 0x7FFFFFFE)
                {
                  if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v506 + 48))(((unint64_t)v447 + v505) & v539, v490, v507))
                  {
LABEL_323:
                    uint64_t v447 = (void *)((unint64_t)&v446[v526] & 0xFFFFFFFFFFFFFFF8);
LABEL_324:
                    (*(void (**)(char *, char *, uint64_t))(v523 + 16))(v445, v446, v524);
                    size_t v450 = (void *)((unint64_t)&v445[v526] & 0xFFFFFFFFFFFFFFF8);
                    *size_t v450 = *v447;
                    unint64_t v451 = ((unint64_t)v450 + v505) & v539;
                    unint64_t v452 = ((unint64_t)v447 + v505) & v539;
                    unsigned int v453 = *(void (**)(unint64_t, unint64_t, uint64_t))(v506 + 16);
                    swift_bridgeObjectRetain();
                    v453(v451, v452, v507);
                    size_t v454 = (void *)((v495 + v451) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v455 = (void *)((v495 + v452) & 0xFFFFFFFFFFFFFFF8);
                    *size_t v454 = *v455;
                    uint64_t v456 = (void *)(((unint64_t)v454 + 15) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v457 = (void *)(((unint64_t)v455 + 15) & 0xFFFFFFFFFFFFFFF8);
                    *uint64_t v456 = *v457;
                    v456[1] = v457[1];
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    size_t v449 = v482;
                    goto LABEL_325;
                  }
                }
                else
                {
                  uint64_t v448 = *v447;
                  if (*v447 >= 0xFFFFFFFFuLL) {
                    LODWORD(v448) = -1;
                  }
                  if ((v448 + 1) < 2) {
                    goto LABEL_324;
                  }
                }
              }
              size_t v449 = v482;
              memcpy(v445, v446, v482);
LABEL_325:
              *(void *)&v445[v449] = *(void *)&v446[v449];
              uint64_t v458 = (void *)((unint64_t)&v445[v449 + 15] & 0xFFFFFFFFFFFFFFF8);
              size_t v459 = (void *)((unint64_t)&v446[v449 + 15] & 0xFFFFFFFFFFFFFFF8);
              *uint64_t v458 = *v459;
              uint64_t v167 = *(void **)(((unint64_t)v459 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v458 + 15) & 0xFFFFFFFFFFFFFFF8) = v167;
              char v168 = 1;
              goto LABEL_326;
            }
LABEL_272:
            size_t v262 = v517;
            goto LABEL_310;
          }
          unint64_t v142 = ((unint64_t)v128 + v534) & v545;
          unint64_t v143 = (v535 + v142) & v565;
          if (v516 == v532)
          {
            if (v494 == v516)
            {
              int v129 = (*(uint64_t (**)(unint64_t))(v521 + 48))((v535 + v142) & v565);
              goto LABEL_269;
            }
            unint64_t v177 = (unint64_t *)((v520 + v143) & 0xFFFFFFFFFFFFFFF8);
            if (v489 > 0x7FFFFFFE)
            {
              int v129 = (*(uint64_t (**)(unint64_t))(v511 + 48))(((unint64_t)v177 + v510) & v54);
              goto LABEL_269;
            }
            unint64_t v178 = *v177;
          }
          else
          {
            unint64_t v154 = v525 + v143;
            if ((v493 & 0x80000000) == 0)
            {
              unint64_t v155 = *(void *)(v154 + 8);
              if (v155 >= 0xFFFFFFFF) {
                LODWORD(v155) = -1;
              }
              int v129 = v155 + 1;
              goto LABEL_270;
            }
            uint64_t v182 = (v514 + ((v513 + v154) & v55)) & v541;
            if (v496 > 0x7FFFFFFD)
            {
              int v129 = (*(uint64_t (**)(uint64_t))(v509 + 48))(v182);
              goto LABEL_269;
            }
            unint64_t v178 = *(void *)(((v492 + ((v508 + v182) & v541)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v178 >= 0xFFFFFFFF) {
            LODWORD(v178) = -1;
          }
          if ((v178 + 1) >= 2) {
            goto LABEL_271;
          }
          goto LABEL_274;
        case 2u:
          size_t v130 = v38;
          int v131 = v37;
          ((void (*)(unsigned __int8 *))v563[2])(a1);
          unint64_t v132 = (void *)((unint64_t)&a1[v499] & v57);
          uint64_t v133 = (const void *)((unint64_t)&a2[v499] & v57);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v528 + 48))(v133, 1, v529))
          {
            memcpy(v132, v133, __n);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v528 + 16))(v132, v133, v529);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v528 + 56))(v132, 0, 1, v529);
          }
          uint64_t v146 = (char *)(((unint64_t)v132 + v527) & v542);
          unint64_t v147 = (char *)(((unint64_t)v133 + v527) & v542);
          if (v547 == v131)
          {
            if (!(*(unsigned int (**)(char *))(v523 + 48))(v147)) {
              goto LABEL_221;
            }
            goto LABEL_220;
          }
          unint64_t v148 = (uint64_t *)((unint64_t)&v147[v526] & 0xFFFFFFFFFFFFFFF8);
          if (v497 > 0x7FFFFFFE)
          {
            if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v506 + 48))(((unint64_t)v148 + v505) & v539, v490, v507))
            {
LABEL_221:
              unint64_t v148 = (uint64_t *)((unint64_t)&v147[v526] & 0xFFFFFFFFFFFFFFF8);
              goto LABEL_222;
            }
LABEL_220:
            memcpy(v146, v147, v130);
            goto LABEL_223;
          }
          uint64_t v149 = *v148;
          if ((unint64_t)*v148 >= 0xFFFFFFFF) {
            LODWORD(v149) = -1;
          }
          if ((v149 + 1) >= 2) {
            goto LABEL_220;
          }
LABEL_222:
          (*(void (**)(char *, char *, uint64_t))(v523 + 16))(v146, v147, v524);
          unint64_t v158 = (void *)((unint64_t)&v146[v526] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v158 = *v148;
          unint64_t v159 = ((unint64_t)v158 + v505) & v539;
          unint64_t v160 = ((unint64_t)v148 + v505) & v539;
          uint64_t v161 = *(void (**)(unint64_t, unint64_t, uint64_t))(v506 + 16);
          swift_bridgeObjectRetain();
          v161(v159, v160, v507);
          uint64_t v162 = (void *)((v495 + v159) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v163 = (void *)((v495 + v160) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v162 = *v163;
          unint64_t v164 = (void *)(((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v165 = (void *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v164 = *v165;
          v164[1] = v165[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
LABEL_223:
          uint64_t v166 = &v146[v130];
          *uint64_t v166 = v147[v130];
          uint64_t v167 = *(void **)&v147[v130 + 8];
          *((void *)v166 + 1) = v167;
          char v168 = 2;
LABEL_326:
          v3[v45] = v168;
          id v460 = v167;
          return v3;
        case 3u:
          size_t v134 = (void (*)(unsigned __int8 *))v563[2];
          v134(a1);
          size_t v562 = (const void *)((unint64_t)&a2[v531] & v544);
          if (v533 == v532)
          {
            int v135 = ((uint64_t (*)(void))v563[6])();
            unint64_t v136 = (void *)((unint64_t)&a1[v531] & v544);
LABEL_287:
            if (v135)
            {
LABEL_288:
              unint64_t v337 = (unint64_t)&a2[v531] & v544;
              memcpy(v136, v562, v530);
              uint64_t v338 = v515;
              goto LABEL_289;
            }
            unint64_t v144 = ((unint64_t)v562 + v534) & v545;
            unint64_t v145 = (v535 + v144) & v565;
LABEL_291:
            ((void (*)(void *, const void *, uint64_t))v134)(v136, v562, v56);
            unint64_t v340 = ((unint64_t)v136 + v534) & v545;
            ((void (*)(unint64_t, unint64_t, uint64_t))v134)(v340, v144, v56);
            unint64_t v341 = (v535 + v340) & v565;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v521 + 16))(v341, v145, v522);
            unint64_t v342 = (void *)((v520 + v341) & 0xFFFFFFFFFFFFFFF8);
            int v343 = (void *)((v520 + v145) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v342 = *v343;
            unint64_t v344 = ((unint64_t)v342 + v510) & v54;
            unint64_t v345 = ((unint64_t)v343 + v510) & v54;
            unint64_t v346 = *(void (**)(unint64_t, unint64_t, uint64_t))(v511 + 16);
            swift_bridgeObjectRetain();
            v346(v344, v345, v512);
            unint64_t v347 = (void *)((v501 + v345) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v348 = (void *)((v501 + v344) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v348 = *v347;
            int v349 = (void *)(((unint64_t)v348 + 15) & 0xFFFFFFFFFFFFFFF8);
            long long v350 = (void *)(((unint64_t)v347 + 15) & 0xFFFFFFFFFFFFFFF8);
            *int v349 = *v350;
            v349[1] = v350[1];
            long long v351 = (void *)(v525 + v341);
            *long long v351 = *(void *)(v525 + v145);
            v351[1] = *(void *)(v525 + v145 + 8);
            unint64_t v352 = (v513 + v525 + v341) & v55;
            unint64_t v353 = (v513 + v525 + v145) & v55;
            *(unsigned char *)unint64_t v352 = *(unsigned char *)v353;
            uint64_t v354 = v352 | 4;
            int v355 = *(_DWORD *)(v353 | 4);
            *(unsigned char *)(v354 + 4) = *(unsigned char *)((v353 | 4) + 4);
            *(_DWORD *)uint64_t v354 = v355;
            *(_WORD *)(v352 + 10) = *(_WORD *)(v353 + 0xA);
            unint64_t v570 = v352;
            unint64_t v356 = (v514 + v352) & v541;
            unint64_t v555 = v353;
            unint64_t v357 = (v514 + v353) & v541;
            long long v358 = *(void (**)(unint64_t, unint64_t, uint64_t))(v509 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v358(v356, v357, v519);
            size_t v359 = (v508 + v356) & v541;
            size_t v360 = (v508 + v357) & v541;
            v358(v359, v360, v519);
            long long v361 = (unsigned char *)(v359 + v500);
            *long long v361 = *(unsigned char *)(v360 + v500);
            v361[1] = *(unsigned char *)(v360 + v500 + 1);
            v361[2] = *(unsigned char *)(v360 + v500 + 2);
            v361[3] = *(unsigned char *)(v360 + v500 + 3);
            v361[4] = *(unsigned char *)(v360 + v500 + 4);
            unint64_t v362 = (v359 + v500 + 12) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v363 = (v360 + v500 + 12) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v362 = *(void *)v363;
            *(void *)(v362 + 8) = *(void *)(v363 + 8);
            *(unsigned char *)(v362 + 16) = *(unsigned char *)(v363 + 16);
            *(unsigned char *)(v362 + 17) = *(unsigned char *)(v363 + 17);
            *(unsigned char *)(v362 + 18) = *(unsigned char *)(v363 + 18);
            *(unsigned char *)(v362 + 19) = *(unsigned char *)(v363 + 19);
            unint64_t v364 = (v362 + 27) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v365 = (v363 + 27) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v364 = *(void *)v365;
            *(unsigned char *)(v364 + 8) = *(unsigned char *)(v365 + 8);
            *(unsigned char *)(v364 + 9) = *(unsigned char *)(v365 + 9);
            *(unsigned char *)(v364 + 10) = *(unsigned char *)(v365 + 10);
            *(unsigned char *)(v364 + 11) = *(unsigned char *)(v365 + 11);
            *(unsigned char *)(v364 + 12) = *(unsigned char *)(v365 + 12);
            uint64_t v366 = (void *)((v363 + 47) & 0xFFFFFFFFFFFFFFF8);
            id v367 = (void *)((v362 + 47) & 0xFFFFFFFFFFFFFFF8);
            *id v367 = *v366;
            unint64_t v368 = ((unint64_t)v367 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v369 = ((unint64_t)v366 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v368 = *(void *)v369;
            *(unsigned char *)(v368 + 8) = *(unsigned char *)(v369 + 8);
            *(unsigned char *)(v368 + 9) = *(unsigned char *)(v369 + 9);
            long long v370 = (void *)((v502 + v368) & v541);
            unint64_t v371 = (const void *)((v502 + v369) & v541);
            unint64_t v372 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v509 + 48);
            swift_bridgeObjectRetain();
            if (v372(v371, 1, v519))
            {
              memcpy(v370, v371, v517);
            }
            else
            {
              v358((unint64_t)v370, (unint64_t)v371, v519);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v509 + 56))(v370, 0, 1, v519);
            }
            long long v373 = (void *)(((unint64_t)v370 + v503) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v374 = (void *)(((unint64_t)v371 + v503) & 0xFFFFFFFFFFFFFFF8);
            *long long v373 = *v374;
            unint64_t v375 = ((unint64_t)v373 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v376 = ((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v377 = *(void *)v376;
            *(unsigned char *)(v375 + 8) = *(unsigned char *)(v376 + 8);
            *(void *)unint64_t v375 = v377;
            uint64_t v378 = (void *)(((unint64_t)v373 + 31) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v379 = (void *)(((unint64_t)v374 + 31) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v378 = *v379;
            unint64_t v380 = ((unint64_t)v378 + 15) & 0xFFFFFFFFFFFFFFF8;
            long long v381 = (uint64_t *)(((unint64_t)v379 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v382 = v381[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v382 & 0x3000000000000000) != 0)
            {
              *(_OWORD *)unint64_t v380 = *(_OWORD *)v381;
            }
            else
            {
              uint64_t v383 = *v381;
              sub_24D3F9C18(*v381, v382);
              *(void *)unint64_t v380 = v383;
              *(void *)(v380 + 8) = v382;
            }
            unint64_t v384 = (v380 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v385 = ((unint64_t)v381 + 19) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v386 = *(void *)v385;
            *(unsigned char *)(v384 + 8) = *(unsigned char *)(v385 + 8);
            *(void *)unint64_t v384 = v386;
            *(unsigned char *)(v384 + 9) = *(unsigned char *)(v385 + 9);
            unint64_t v387 = (v384 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            unint64_t v388 = (v385 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            int v389 = *(_DWORD *)v388;
            *(unsigned char *)(v387 + 4) = *(unsigned char *)(v388 + 4);
            *(_DWORD *)unint64_t v387 = v389;
            long long v390 = (void *)((v384 + 25) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v391 = (void *)((v385 + 25) & 0xFFFFFFFFFFFFFFF8);
            *long long v390 = *v391;
            v390[1] = v391[1];
            unint64_t v392 = v504 + v570;
            uint64_t v393 = (long long *)(v504 + v555);
            unint64_t v394 = *(void *)(v504 + v555 + 16);
            if (v394 >= 0xFFFFFFFF) {
              LODWORD(v394) = -1;
            }
            int v395 = v394 - 1;
            swift_bridgeObjectRetain();
            if (v395 < 0)
            {
              *(void *)unint64_t v392 = *(void *)v393;
              *(unsigned char *)(v392 + 8) = *((unsigned char *)v393 + 8);
              *(unsigned char *)(v392 + 9) = *((unsigned char *)v393 + 9);
              unint64_t v408 = (void *)*((void *)v393 + 2);
              id v409 = v408;
              *(void *)(v392 + 16) = v408;
              unint64_t v410 = (void *)*((void *)v393 + 3);
              id v411 = v410;
              *(void *)(v392 + 24) = v410;
              *(unsigned char *)(v392 + 32) = *((unsigned char *)v393 + 32);
              *(unsigned char *)(v392 + 33) = *((unsigned char *)v393 + 33);
              *(unsigned char *)(v392 + 34) = *((unsigned char *)v393 + 34);
              *(void *)(v392 + 40) = *((void *)v393 + 5);
              *(void *)(v392 + 48) = *((void *)v393 + 6);
              *(void *)(v392 + 56) = *((void *)v393 + 7);
              *(void *)(v392 + 64) = *((void *)v393 + 8);
              *(unsigned char *)(v392 + 72) = *((unsigned char *)v393 + 72);
              *(void *)(v392 + 80) = *((void *)v393 + 10);
              *(void *)(v392 + 88) = *((void *)v393 + 11);
              unint64_t v571 = (void *)*((void *)v393 + 12);
              *(void *)(v392 + 96) = v571;
              *(unsigned char *)(v392 + 104) = *((unsigned char *)v393 + 104);
              *(unsigned char *)(v392 + 105) = *((unsigned char *)v393 + 105);
              *(void *)(v392 + 112) = *((void *)v393 + 14);
              *(void *)(v392 + 120) = *((void *)v393 + 15);
              *(void *)(v392 + 128) = *((void *)v393 + 16);
              *(void *)(v392 + 136) = *((void *)v393 + 17);
              *(void *)(v392 + 144) = *((void *)v393 + 18);
              *(void *)(v392 + 152) = *((void *)v393 + 19);
              *(void *)(v392 + 160) = *((void *)v393 + 20);
              *(void *)(v392 + 168) = *((void *)v393 + 21);
              *(unsigned char *)(v392 + 176) = *((unsigned char *)v393 + 176);
              *(void *)(v392 + 184) = *((void *)v393 + 23);
              uint64_t v556 = *((void *)v393 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v412 = v571;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v556)
              {
                *(void *)(v392 + 192) = v556;
                *(void *)(v392 + 200) = *((void *)v393 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v392 + 192) = v393[12];
              }
              uint64_t v3 = a1;
              uint64_t v338 = v515;
              size_t v339 = v500;
              *(void *)(v392 + 208) = *((void *)v393 + 26);
              *(void *)(v392 + 216) = *((void *)v393 + 27);
              *(void *)(v392 + 224) = *((void *)v393 + 28);
              *(void *)(v392 + 232) = *((void *)v393 + 29);
              *(void *)(v392 + 240) = *((void *)v393 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v396 = *v393;
              long long v397 = v393[1];
              long long v398 = v393[3];
              *(_OWORD *)(v392 + 32) = v393[2];
              *(_OWORD *)(v392 + 48) = v398;
              *(_OWORD *)unint64_t v392 = v396;
              *(_OWORD *)(v392 + 16) = v397;
              long long v399 = v393[4];
              long long v400 = v393[5];
              long long v401 = v393[7];
              *(_OWORD *)(v392 + 96) = v393[6];
              *(_OWORD *)(v392 + 112) = v401;
              *(_OWORD *)(v392 + 64) = v399;
              *(_OWORD *)(v392 + 80) = v400;
              long long v402 = v393[8];
              long long v403 = v393[9];
              long long v404 = v393[11];
              *(_OWORD *)(v392 + 160) = v393[10];
              *(_OWORD *)(v392 + 176) = v404;
              *(_OWORD *)(v392 + 128) = v402;
              *(_OWORD *)(v392 + 144) = v403;
              long long v405 = v393[12];
              long long v406 = v393[13];
              long long v407 = v393[14];
              *(void *)(v392 + 240) = *((void *)v393 + 30);
              *(_OWORD *)(v392 + 208) = v406;
              *(_OWORD *)(v392 + 224) = v407;
              *(_OWORD *)(v392 + 192) = v405;
              uint64_t v338 = v515;
              size_t v339 = v500;
            }
            uint64_t v461 = (_OWORD *)((v392 + 255) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v462 = (long long *)(((unint64_t)v393 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v463 = *v462;
            *(_OWORD *)((char *)v461 + 9) = *(long long *)((char *)v462 + 9);
            *uint64_t v461 = v463;
            unint64_t v464 = (v392 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v465 = ((unint64_t)v393 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v466 = *(_OWORD *)v465;
            *(unsigned char *)(v464 + 16) = *(unsigned char *)(v465 + 16);
            *(_OWORD *)unint64_t v464 = v466;
            uint64_t v467 = (void *)((v392 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v468 = ((unint64_t)v393 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v469 = *(void *)v468;
            v468 += 15;
            *uint64_t v467 = v469;
            uint64_t v470 = (void *)(((unint64_t)v467 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v471 = *(void *)(v468 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v472 = *(void *)((v468 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_24D5203A8(v471, v472);
            *uint64_t v470 = v471;
            v470[1] = v472;
            unint64_t v136 = (void *)((unint64_t)&a1[v531] & v544);
            unint64_t v337 = (unint64_t)&a2[v531] & v544;
            if (v496)
            {
LABEL_330:
              unint64_t v473 = ((((v338
                       + ((((((((((v518 + v339 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 19) & 0xFFFFFFFFFFFFFFF8)
                         + 25) & 0xFFFFFFFFFFFFFFF8)
                       + 327) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 16;
              unint64_t v474 = (void *)(((unint64_t)v136 + v473) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v475 = (void *)((v337 + v473) & 0xFFFFFFFFFFFFFFF8);
              void *v474 = *v475;
              v474[1] = v475[1];
              *(void *)(((unint64_t)v474 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v475
                                                                                             + 23) & 0xFFFFFFFFFFFFFFF8);
              v3[v45] = 3;
              swift_bridgeObjectRetain();
              return v3;
            }
LABEL_289:
            size_t v339 = v517;
            goto LABEL_330;
          }
          unint64_t v144 = (v534 + ((unint64_t)&a2[v531] & v544)) & v545;
          unint64_t v145 = (v535 + v144) & v565;
          if (v516 == v532)
          {
            if (v494 == v516)
            {
              int v135 = (*(uint64_t (**)(unint64_t))(v521 + 48))((v535 + v144) & v565);
              unint64_t v136 = (void *)((unint64_t)&a1[v531] & v544);
              goto LABEL_287;
            }
            unint64_t v179 = (unint64_t *)((v520 + v145) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v136 = (void *)((unint64_t)&a1[v531] & v544);
            if (v489 > 0x7FFFFFFE)
            {
              int v135 = (*(uint64_t (**)(unint64_t))(v511 + 48))(((unint64_t)v179 + v510) & v54);
              goto LABEL_287;
            }
            unint64_t v180 = *v179;
          }
          else
          {
            unint64_t v156 = v525 + v145;
            if ((v493 & 0x80000000) == 0)
            {
              unint64_t v157 = *(void *)(v156 + 8);
              if (v157 >= 0xFFFFFFFF) {
                LODWORD(v157) = -1;
              }
              int v135 = v157 + 1;
              unint64_t v136 = (void *)((unint64_t)&a1[v531] & v544);
              goto LABEL_287;
            }
            uint64_t v183 = (v514 + ((v513 + v156) & v55)) & v541;
            unint64_t v136 = (void *)((unint64_t)&a1[v531] & v544);
            if (v496 > 0x7FFFFFFD)
            {
              int v135 = (*(uint64_t (**)(uint64_t))(v509 + 48))(v183);
              goto LABEL_287;
            }
            unint64_t v180 = *(void *)(((v492 + ((v508 + v183) & v541)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v180 >= 0xFFFFFFFF) {
            LODWORD(v180) = -1;
          }
          if ((v180 + 1) >= 2) {
            goto LABEL_288;
          }
          goto LABEL_291;
        case 4u:
          ((void (*)(unsigned __int8 *))v563[2])(a1);
          char v137 = 4;
          goto LABEL_201;
        case 5u:
          ((void (*)(unsigned __int8 *))v563[2])(a1);
          char v137 = 5;
          goto LABEL_201;
        case 6u:
          ((void (*)(unsigned __int8 *))v563[2])(a1);
          unint64_t v138 = (void *)((unint64_t)&a1[v498] & v537);
          unint64_t v139 = (const void *)((unint64_t)&a2[v498] & v537);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v40 + 48))(v139, 1, v559))
          {
            memcpy(v138, v139, v488);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v40 + 16))(v138, v139, v559);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v40 + 56))(v138, 0, 1, v559);
          }
          char v137 = 6;
          goto LABEL_201;
        case 7u:
          ((void (*)(unsigned __int8 *))v563[2])(a1);
          char v137 = 7;
LABEL_201:
          a1[v45] = v137;
          return v3;
        default:
          unint64_t v124 = (void (*)(unsigned __int8 *))v563[2];
          v124(a1);
          int v560 = (const void *)((unint64_t)&a2[v531] & v544);
          if (v533 == v532)
          {
            int v125 = ((uint64_t (*)(void))v563[6])();
            int v126 = (void *)((unint64_t)&a1[v531] & v544);
LABEL_252:
            if (v125)
            {
LABEL_253:
              unint64_t v184 = (unint64_t)&a2[v531] & v544;
              memcpy(v126, v560, v530);
              uint64_t v185 = v515;
              goto LABEL_254;
            }
            unint64_t v140 = ((unint64_t)v560 + v534) & v545;
            unint64_t v141 = (v535 + v140) & v565;
LABEL_256:
            ((void (*)(void *, const void *, uint64_t))v124)(v126, v560, v56);
            unint64_t v187 = ((unint64_t)v126 + v534) & v545;
            ((void (*)(unint64_t, unint64_t, uint64_t))v124)(v187, v140, v56);
            unint64_t v188 = (v535 + v187) & v565;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v521 + 16))(v188, v141, v522);
            unint64_t v189 = (void *)((v520 + v188) & 0xFFFFFFFFFFFFFFF8);
            int v190 = (void *)((v520 + v141) & 0xFFFFFFFFFFFFFFF8);
            void *v189 = *v190;
            unint64_t v191 = ((unint64_t)v189 + v510) & v54;
            unint64_t v192 = ((unint64_t)v190 + v510) & v54;
            long long v193 = *(void (**)(unint64_t, unint64_t, uint64_t))(v511 + 16);
            swift_bridgeObjectRetain();
            v193(v191, v192, v512);
            long long v194 = (void *)((v501 + v192) & 0xFFFFFFFFFFFFFFF8);
            long long v195 = (void *)((v501 + v191) & 0xFFFFFFFFFFFFFFF8);
            void *v195 = *v194;
            long long v196 = (void *)(((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8);
            long long v197 = (void *)(((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8);
            *long long v196 = *v197;
            v196[1] = v197[1];
            long long v198 = (void *)(v525 + v188);
            *long long v198 = *(void *)(v525 + v141);
            v198[1] = *(void *)(v525 + v141 + 8);
            unint64_t v199 = (v513 + v525 + v188) & v55;
            unint64_t v200 = (v513 + v525 + v141) & v55;
            *(unsigned char *)unint64_t v199 = *(unsigned char *)v200;
            uint64_t v201 = v199 | 4;
            int v202 = *(_DWORD *)(v200 | 4);
            *(unsigned char *)(v201 + 4) = *(unsigned char *)((v200 | 4) + 4);
            *(_DWORD *)uint64_t v201 = v202;
            *(_WORD *)(v199 + 10) = *(_WORD *)(v200 + 0xA);
            unint64_t v566 = v199;
            unint64_t v203 = (v514 + v199) & v541;
            unint64_t v553 = v200;
            unint64_t v204 = (v514 + v200) & v541;
            uint64_t v205 = *(void (**)(unint64_t, unint64_t, uint64_t))(v509 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v205(v203, v204, v519);
            size_t v206 = (v508 + v203) & v541;
            size_t v207 = (v508 + v204) & v541;
            v205(v206, v207, v519);
            id v208 = (unsigned char *)(v206 + v500);
            unsigned char *v208 = *(unsigned char *)(v207 + v500);
            v208[1] = *(unsigned char *)(v207 + v500 + 1);
            v208[2] = *(unsigned char *)(v207 + v500 + 2);
            v208[3] = *(unsigned char *)(v207 + v500 + 3);
            v208[4] = *(unsigned char *)(v207 + v500 + 4);
            unint64_t v209 = (v206 + v500 + 12) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v210 = (v207 + v500 + 12) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v209 = *(void *)v210;
            *(void *)(v209 + 8) = *(void *)(v210 + 8);
            *(unsigned char *)(v209 + 16) = *(unsigned char *)(v210 + 16);
            *(unsigned char *)(v209 + 17) = *(unsigned char *)(v210 + 17);
            *(unsigned char *)(v209 + 18) = *(unsigned char *)(v210 + 18);
            *(unsigned char *)(v209 + 19) = *(unsigned char *)(v210 + 19);
            unint64_t v211 = (v209 + 27) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v212 = (v210 + 27) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v211 = *(void *)v212;
            *(unsigned char *)(v211 + 8) = *(unsigned char *)(v212 + 8);
            *(unsigned char *)(v211 + 9) = *(unsigned char *)(v212 + 9);
            *(unsigned char *)(v211 + 10) = *(unsigned char *)(v212 + 10);
            *(unsigned char *)(v211 + 11) = *(unsigned char *)(v212 + 11);
            *(unsigned char *)(v211 + 12) = *(unsigned char *)(v212 + 12);
            size_t v213 = (void *)((v210 + 47) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v214 = (void *)((v209 + 47) & 0xFFFFFFFFFFFFFFF8);
            void *v214 = *v213;
            unint64_t v215 = ((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v216 = ((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v215 = *(void *)v216;
            *(unsigned char *)(v215 + 8) = *(unsigned char *)(v216 + 8);
            *(unsigned char *)(v215 + 9) = *(unsigned char *)(v216 + 9);
            unint64_t v217 = (void *)((v502 + v215) & v541);
            size_t v218 = (const void *)((v502 + v216) & v541);
            unint64_t v219 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v509 + 48);
            swift_bridgeObjectRetain();
            if (v219(v218, 1, v519))
            {
              memcpy(v217, v218, v517);
            }
            else
            {
              v205((unint64_t)v217, (unint64_t)v218, v519);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v509 + 56))(v217, 0, 1, v519);
            }
            unint64_t v220 = (void *)(((unint64_t)v217 + v503) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v221 = (void *)(((unint64_t)v218 + v503) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v220 = *v221;
            unint64_t v222 = ((unint64_t)v220 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v223 = ((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v224 = *(void *)v223;
            *(unsigned char *)(v222 + 8) = *(unsigned char *)(v223 + 8);
            *(void *)unint64_t v222 = v224;
            uint64_t v225 = (void *)(((unint64_t)v220 + 31) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v226 = (void *)(((unint64_t)v221 + 31) & 0xFFFFFFFFFFFFFFF8);
            *uint64_t v225 = *v226;
            unint64_t v227 = ((unint64_t)v225 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v228 = (uint64_t *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v229 = v228[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v229 & 0x3000000000000000) != 0)
            {
              *(_OWORD *)unint64_t v227 = *(_OWORD *)v228;
            }
            else
            {
              uint64_t v230 = *v228;
              sub_24D3F9C18(*v228, v229);
              *(void *)unint64_t v227 = v230;
              *(void *)(v227 + 8) = v229;
            }
            unint64_t v231 = (v227 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v232 = ((unint64_t)v228 + 19) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v233 = *(void *)v232;
            *(unsigned char *)(v231 + 8) = *(unsigned char *)(v232 + 8);
            *(void *)unint64_t v231 = v233;
            *(unsigned char *)(v231 + 9) = *(unsigned char *)(v232 + 9);
            unint64_t v234 = (v231 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            unint64_t v235 = (v232 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            int v236 = *(_DWORD *)v235;
            *(unsigned char *)(v234 + 4) = *(unsigned char *)(v235 + 4);
            *(_DWORD *)unint64_t v234 = v236;
            unint64_t v237 = (void *)((v231 + 25) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v238 = (void *)((v232 + 25) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v237 = *v238;
            v237[1] = v238[1];
            unint64_t v239 = v504 + v566;
            unint64_t v240 = (long long *)(v504 + v553);
            unint64_t v241 = *(void *)(v504 + v553 + 16);
            if (v241 >= 0xFFFFFFFF) {
              LODWORD(v241) = -1;
            }
            int v242 = v241 - 1;
            swift_bridgeObjectRetain();
            if (v242 < 0)
            {
              *(void *)unint64_t v239 = *(void *)v240;
              *(unsigned char *)(v239 + 8) = *((unsigned char *)v240 + 8);
              *(unsigned char *)(v239 + 9) = *((unsigned char *)v240 + 9);
              unint64_t v255 = (void *)*((void *)v240 + 2);
              id v256 = v255;
              *(void *)(v239 + 16) = v255;
              unint64_t v257 = (void *)*((void *)v240 + 3);
              id v258 = v257;
              *(void *)(v239 + 24) = v257;
              *(unsigned char *)(v239 + 32) = *((unsigned char *)v240 + 32);
              *(unsigned char *)(v239 + 33) = *((unsigned char *)v240 + 33);
              *(unsigned char *)(v239 + 34) = *((unsigned char *)v240 + 34);
              *(void *)(v239 + 40) = *((void *)v240 + 5);
              *(void *)(v239 + 48) = *((void *)v240 + 6);
              *(void *)(v239 + 56) = *((void *)v240 + 7);
              *(void *)(v239 + 64) = *((void *)v240 + 8);
              *(unsigned char *)(v239 + 72) = *((unsigned char *)v240 + 72);
              *(void *)(v239 + 80) = *((void *)v240 + 10);
              *(void *)(v239 + 88) = *((void *)v240 + 11);
              unint64_t v567 = (void *)*((void *)v240 + 12);
              *(void *)(v239 + 96) = v567;
              *(unsigned char *)(v239 + 104) = *((unsigned char *)v240 + 104);
              *(unsigned char *)(v239 + 105) = *((unsigned char *)v240 + 105);
              *(void *)(v239 + 112) = *((void *)v240 + 14);
              *(void *)(v239 + 120) = *((void *)v240 + 15);
              *(void *)(v239 + 128) = *((void *)v240 + 16);
              *(void *)(v239 + 136) = *((void *)v240 + 17);
              *(void *)(v239 + 144) = *((void *)v240 + 18);
              *(void *)(v239 + 152) = *((void *)v240 + 19);
              *(void *)(v239 + 160) = *((void *)v240 + 20);
              *(void *)(v239 + 168) = *((void *)v240 + 21);
              *(unsigned char *)(v239 + 176) = *((unsigned char *)v240 + 176);
              *(void *)(v239 + 184) = *((void *)v240 + 23);
              uint64_t v554 = *((void *)v240 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v259 = v567;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v554)
              {
                *(void *)(v239 + 192) = v554;
                *(void *)(v239 + 200) = *((void *)v240 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v239 + 192) = v240[12];
              }
              uint64_t v3 = a1;
              uint64_t v185 = v515;
              size_t v186 = v500;
              *(void *)(v239 + 208) = *((void *)v240 + 26);
              *(void *)(v239 + 216) = *((void *)v240 + 27);
              *(void *)(v239 + 224) = *((void *)v240 + 28);
              *(void *)(v239 + 232) = *((void *)v240 + 29);
              *(void *)(v239 + 240) = *((void *)v240 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              long long v243 = *v240;
              long long v244 = v240[1];
              long long v245 = v240[3];
              *(_OWORD *)(v239 + 32) = v240[2];
              *(_OWORD *)(v239 + 48) = v245;
              *(_OWORD *)unint64_t v239 = v243;
              *(_OWORD *)(v239 + 16) = v244;
              long long v246 = v240[4];
              long long v247 = v240[5];
              long long v248 = v240[7];
              *(_OWORD *)(v239 + 96) = v240[6];
              *(_OWORD *)(v239 + 112) = v248;
              *(_OWORD *)(v239 + 64) = v246;
              *(_OWORD *)(v239 + 80) = v247;
              long long v249 = v240[8];
              long long v250 = v240[9];
              long long v251 = v240[11];
              *(_OWORD *)(v239 + 160) = v240[10];
              *(_OWORD *)(v239 + 176) = v251;
              *(_OWORD *)(v239 + 128) = v249;
              *(_OWORD *)(v239 + 144) = v250;
              long long v252 = v240[12];
              long long v253 = v240[13];
              long long v254 = v240[14];
              *(void *)(v239 + 240) = *((void *)v240 + 30);
              *(_OWORD *)(v239 + 208) = v253;
              *(_OWORD *)(v239 + 224) = v254;
              *(_OWORD *)(v239 + 192) = v252;
              uint64_t v185 = v515;
              size_t v186 = v500;
            }
            long long v413 = (_OWORD *)((v239 + 255) & 0xFFFFFFFFFFFFFFF8);
            size_t v414 = (long long *)(((unint64_t)v240 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v415 = *v414;
            *(_OWORD *)((char *)v413 + 9) = *(long long *)((char *)v414 + 9);
            *long long v413 = v415;
            unint64_t v416 = (v239 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v417 = ((unint64_t)v240 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v418 = *(_OWORD *)v417;
            *(unsigned char *)(v416 + 16) = *(unsigned char *)(v417 + 16);
            *(_OWORD *)unint64_t v416 = v418;
            id v419 = (void *)((v239 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v420 = ((unint64_t)v240 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v421 = *(void *)v420;
            v420 += 15;
            void *v419 = v421;
            long long v422 = (void *)(((unint64_t)v419 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v423 = *(void *)(v420 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v424 = *(void *)((v420 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_24D5203A8(v423, v424);
            void *v422 = v423;
            v422[1] = v424;
            int v126 = (void *)((unint64_t)&a1[v531] & v544);
            unint64_t v184 = (unint64_t)&a2[v531] & v544;
            if (v496)
            {
LABEL_306:
              unint64_t v425 = ((((v185
                       + ((((((((((v518 + v186 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                           + 19) & 0xFFFFFFFFFFFFFFF8)
                         + 25) & 0xFFFFFFFFFFFFFFF8)
                       + 327) & 0xFFFFFFFFFFFFFFF8)
                     + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 16;
              uint64_t v426 = (void *)(((unint64_t)v126 + v425) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v427 = (void *)((v184 + v425) & 0xFFFFFFFFFFFFFFF8);
              *uint64_t v426 = *v427;
              uint64_t v428 = *(void **)(((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v426 + 15) & 0xFFFFFFFFFFFFFFF8) = v428;
              v3[v45] = 0;
              id v429 = v428;
              return v3;
            }
LABEL_254:
            size_t v186 = v517;
            goto LABEL_306;
          }
          unint64_t v140 = (v534 + ((unint64_t)&a2[v531] & v544)) & v545;
          unint64_t v141 = (v535 + v140) & v565;
          if (v516 == v532)
          {
            if (v494 == v516)
            {
              int v125 = (*(uint64_t (**)(unint64_t))(v521 + 48))((v535 + v140) & v565);
              int v126 = (void *)((unint64_t)&a1[v531] & v544);
              goto LABEL_252;
            }
            unint64_t v175 = (unint64_t *)((v520 + v141) & 0xFFFFFFFFFFFFFFF8);
            int v126 = (void *)((unint64_t)&a1[v531] & v544);
            if (v489 > 0x7FFFFFFE)
            {
              int v125 = (*(uint64_t (**)(unint64_t))(v511 + 48))(((unint64_t)v175 + v510) & v54);
              goto LABEL_252;
            }
            unint64_t v176 = *v175;
          }
          else
          {
            unint64_t v152 = v525 + v141;
            if ((v493 & 0x80000000) == 0)
            {
              unint64_t v153 = *(void *)(v152 + 8);
              if (v153 >= 0xFFFFFFFF) {
                LODWORD(v153) = -1;
              }
              int v125 = v153 + 1;
              int v126 = (void *)((unint64_t)&a1[v531] & v544);
              goto LABEL_252;
            }
            uint64_t v181 = (v514 + ((v513 + v152) & v55)) & v541;
            int v126 = (void *)((unint64_t)&a1[v531] & v544);
            if (v496 > 0x7FFFFFFD)
            {
              int v125 = (*(uint64_t (**)(uint64_t))(v509 + 48))(v181);
              goto LABEL_252;
            }
            unint64_t v176 = *(void *)(((v492 + ((v508 + v181) & v541)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v176 >= 0xFFFFFFFF) {
            LODWORD(v176) = -1;
          }
          if ((v176 + 1) >= 2) {
            goto LABEL_253;
          }
          goto LABEL_256;
      }
    case 3u:
      size_t v480 = ((((v495 + ((v33 + 8 + (v526 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v483 = ~v558;
      int v485 = v37;
      uint64_t v96 = (void (*)(unsigned __int8 *, uint64_t))v563[1];
      v96(a1, AssociatedTypeWitness);
      unint64_t v97 = (unint64_t)&a1[v531] & v544;
      if (v533 == v532)
      {
        unint64_t v98 = (uint64_t (*)(unint64_t))v563[6];
        unint64_t v99 = (unint64_t)&a1[v531] & v544;
        goto LABEL_100;
      }
      unint64_t v101 = (v534 + v97) & v545;
      unint64_t v102 = (v535 + v101) & v565;
      if (v516 == v532)
      {
        if (v494 == v516)
        {
          unint64_t v98 = *(uint64_t (**)(unint64_t))(v521 + 48);
          unint64_t v99 = (v535 + v101) & v565;
          goto LABEL_100;
        }
        uint64_t v173 = (unint64_t *)((v520 + v102) & 0xFFFFFFFFFFFFFFF8);
        if (v489 <= 0x7FFFFFFE)
        {
          unint64_t v174 = *v173;
          goto LABEL_333;
        }
        unint64_t v99 = ((unint64_t)v173 + v510) & v54;
        unint64_t v98 = *(uint64_t (**)(unint64_t))(v511 + 48);
      }
      else
      {
        unint64_t v150 = v525 + v102;
        if ((v493 & 0x80000000) == 0)
        {
          unint64_t v151 = *(void *)(v150 + 8);
          if (v151 >= 0xFFFFFFFF) {
            LODWORD(v151) = -1;
          }
          if (v151 != -1) {
            goto LABEL_113;
          }
LABEL_101:
          unint64_t v101 = (v534 + v97) & v545;
          unint64_t v102 = (v535 + v101) & v565;
LABEL_102:
          v96((unsigned __int8 *)v97, AssociatedTypeWitness);
          v96((unsigned __int8 *)v101, AssociatedTypeWitness);
          (*(void (**)(unint64_t, uint64_t))(v521 + 8))(v102, v522);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v511 + 8))((v510 + ((v520 + v102) & 0xFFFFFFFFFFFFFFF8)) & v54, v512);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v103 = (v513 + v525 + v102) & v55;
          unint64_t v104 = *(void (**)(unint64_t, uint64_t))(v509 + 8);
          v104((v514 + v103) & v541, v519);
          unint64_t v105 = (v508 + ((v514 + v103) & v541)) & v541;
          v104(v105, v519);
          swift_bridgeObjectRelease();
          unint64_t v106 = (v502
                + ((((((v492 + v105) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v509 + 48))(v106, 1, v519)) {
            v104(v106, v519);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          size_t v107 = (uint64_t *)((((((v503 + v106) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v108 = v107[1];
          if ((v108 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v107, v108);
          }
          swift_bridgeObjectRelease();
          unint64_t v109 = v504 + v103;
          unint64_t v110 = *(void **)(v109 + 16);
          LODWORD(v111) = -1;
          if ((unint64_t)v110 < 0xFFFFFFFF) {
            uint64_t v111 = *(void *)(v109 + 16);
          }
          uint64_t v56 = AssociatedTypeWitness;
          if ((int)v111 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v109 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v109 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v109 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          goto LABEL_113;
        }
        unint64_t v99 = (v514 + ((v513 + v150) & v55)) & v541;
        if (v496 <= 0x7FFFFFFD)
        {
          unint64_t v174 = *(void *)(((v492 + ((v508 + v99) & v541)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_333:
          if (v174 >= 0xFFFFFFFF) {
            LODWORD(v174) = -1;
          }
          if ((v174 + 1) >= 2) {
            goto LABEL_113;
          }
          goto LABEL_102;
        }
        unint64_t v98 = *(uint64_t (**)(unint64_t))(v509 + 48);
      }
LABEL_100:
      int v100 = v98(v99);
      unint64_t v97 = (unint64_t)&a1[v531] & v544;
      if (v100)
      {
LABEL_113:
        swift_bridgeObjectRelease();
        goto LABEL_114;
      }
      goto LABEL_101;
    case 4u:
    case 5u:
    case 7u:
      ((void (*)(unsigned __int8 *, uint64_t))v563[1])(a1, AssociatedTypeWitness);
      goto LABEL_154;
    case 6u:
      ((void (*)(unsigned __int8 *, uint64_t))v563[1])(a1, AssociatedTypeWitness);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v40 + 48))((unint64_t)&a1[v498] & v537, 1, v559))(*(void (**)(unint64_t, uint64_t))(v40 + 8))((unint64_t)&a1[v498] & v537, v559); {
      goto LABEL_154;
      }
    default:
      size_t v480 = ((((v495 + ((v33 + 8 + (v526 & 0xFFFFFFFFFFFFFFF8)) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      uint64_t v483 = ~v558;
      int v485 = v37;
      uint64_t v58 = (void (*)(unsigned __int8 *, uint64_t))v563[1];
      v58(a1, AssociatedTypeWitness);
      unint64_t v59 = (unint64_t)&a1[v531] & v544;
      if (v533 == v532)
      {
        uint64_t v60 = (uint64_t (*)(unint64_t))v563[6];
        unint64_t v61 = (unint64_t)&a1[v531] & v544;
        goto LABEL_59;
      }
      unint64_t v63 = (v534 + v59) & v545;
      unint64_t v64 = (v535 + v63) & v565;
      if (v516 == v532)
      {
        if (v494 == v516)
        {
          uint64_t v60 = *(uint64_t (**)(unint64_t))(v521 + 48);
          unint64_t v61 = (v535 + v63) & v565;
          goto LABEL_59;
        }
        uint64_t v169 = (unint64_t *)((v520 + v64) & 0xFFFFFFFFFFFFFFF8);
        if (v489 <= 0x7FFFFFFE)
        {
          unint64_t v170 = *v169;
          goto LABEL_353;
        }
        unint64_t v61 = ((unint64_t)v169 + v510) & v54;
        uint64_t v60 = *(uint64_t (**)(unint64_t))(v511 + 48);
      }
      else
      {
        unint64_t v116 = v525 + v64;
        if ((v493 & 0x80000000) == 0)
        {
          unint64_t v117 = *(void *)(v116 + 8);
          if (v117 >= 0xFFFFFFFF) {
            LODWORD(v117) = -1;
          }
          if (v117 == -1)
          {
LABEL_60:
            unint64_t v63 = (v534 + v59) & v545;
            unint64_t v64 = (v535 + v63) & v565;
LABEL_61:
            unint64_t v477 = v59;
            v58((unsigned __int8 *)v59, AssociatedTypeWitness);
            v58((unsigned __int8 *)v63, AssociatedTypeWitness);
            (*(void (**)(unint64_t, uint64_t))(v521 + 8))(v64, v522);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v511 + 8))((v510 + ((v520 + v64) & 0xFFFFFFFFFFFFFFF8)) & v54, v512);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v65 = (v513 + v525 + v64) & v55;
            int v66 = *(void (**)(unint64_t, uint64_t))(v509 + 8);
            v66((v514 + v65) & v541, v519);
            unint64_t v67 = (v508 + ((v514 + v65) & v541)) & v541;
            v66(v67, v519);
            swift_bridgeObjectRelease();
            unint64_t v68 = (v502
                 + ((((((v492 + v67) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v509 + 48))(v68, 1, v519)) {
              v66(v68, v519);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v69 = (uint64_t *)((((((v503 + v68) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v70 = v69[1];
            if ((v70 & 0x3000000000000000) == 0) {
              sub_24D400DCC(*v69, v70);
            }
            swift_bridgeObjectRelease();
            unint64_t v71 = v504 + v65;
            uint64_t v72 = *(void **)(v71 + 16);
            LODWORD(v73) = -1;
            if ((unint64_t)v72 < 0xFFFFFFFF) {
              uint64_t v73 = *(void *)(v71 + 16);
            }
            uint64_t v56 = AssociatedTypeWitness;
            if ((int)v73 - 1 < 0)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v71 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_24D466534(*(void *)((((v71 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v71 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            unint64_t v59 = v477;
          }
LABEL_72:

LABEL_114:
          int v37 = v485;
          unint64_t v38 = v480;
          uint64_t v57 = v483;
          goto LABEL_154;
        }
        unint64_t v61 = (v514 + ((v513 + v116) & v55)) & v541;
        if (v496 <= 0x7FFFFFFD)
        {
          unint64_t v170 = *(void *)(((v492 + ((v508 + v61) & v541)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_353:
          if (v170 >= 0xFFFFFFFF) {
            LODWORD(v170) = -1;
          }
          if ((v170 + 1) < 2) {
            goto LABEL_61;
          }
          goto LABEL_72;
        }
        uint64_t v60 = *(uint64_t (**)(unint64_t))(v509 + 48);
      }
LABEL_59:
      int v62 = v60(v61);
      unint64_t v59 = (unint64_t)&a1[v531] & v544;
      if (v62) {
        goto LABEL_72;
      }
      goto LABEL_60;
  }
}

uint64_t sub_24D9FB48C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v443 = *(void *)(v4 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v438 = v3;
  uint64_t v385 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v385 - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v378 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v378 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v389 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v389 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = v12 | 7;
  uint64_t v14 = v10 | v5 | v12;
  uint64_t v404 = v4;
  uint64_t v384 = v6;
  uint64_t v377 = v8;
  unsigned int v15 = *(_DWORD *)(v8 + 84);
  unsigned int v369 = *(_DWORD *)(v6 + 84);
  if (v369 > v15) {
    unsigned int v15 = *(_DWORD *)(v6 + 84);
  }
  unsigned int v367 = v15;
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  unsigned int v382 = v15;
  unsigned int v399 = *(_DWORD *)(v4 + 84);
  if (v15 <= v399) {
    unsigned int v15 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v400 = *(void *)(v389 - 8);
  unsigned int v16 = *(_DWORD *)(v11 + 84);
  if (v16 <= 0x7FFFFFFE) {
    unsigned int v17 = 2147483646;
  }
  else {
    unsigned int v17 = *(_DWORD *)(v11 + 84);
  }
  if (v15 > v17) {
    unsigned int v17 = v15;
  }
  unsigned int v368 = v17;
  if (v17 <= 0x7FFFFFFF) {
    int v18 = 0x7FFFFFFF;
  }
  else {
    int v18 = v17;
  }
  int v398 = v18;
  unsigned int v379 = v16;
  uint64_t v402 = v443 + v5;
  uint64_t v414 = v5;
  uint64_t v403 = v443 + v10;
  uint64_t v409 = v10;
  uint64_t v383 = *(void *)(v6 + 64) + 7;
  uint64_t v376 = v9 + 8;
  uint64_t v372 = *(void *)(v8 + 64) + 7;
  unint64_t v390 = ((((v372 + ((v9 + 8 + (v383 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v380 = v13 + 16;
  uint64_t v428 = v12 | 7;
  uint64_t v381 = v12 + 12;
  size_t v19 = *(void *)(*(void *)(v389 - 8) + 64);
  size_t v375 = v19 + v12;
  size_t v366 = v19 + 12;
  uint64_t v373 = v12 + 10;
  uint64_t v433 = v12;
  unint64_t v20 = (v12
       + 10
       + ((((((v19 + 12 + ((v19 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
  size_t v401 = v19;
  if (!v16) {
    ++v19;
  }
  size_t v394 = v19;
  unint64_t v395 = v20;
  uint64_t v396 = (v13 + 16 + v390 + ((v443 + v10 + ((v443 + v5) & ~v5)) & ~v10)) & ~v13;
  size_t v370 = v19 + 7;
  unint64_t v371 = ((((((((((v19 + 7 + v20) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
           + 19) & 0xFFFFFFFFFFFFFFF8)
         + 25) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v406 = v10 | v5 | v12;
  unint64_t v397 = v14 + v443;
  unint64_t v388 = ((((v396 + v371 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v21 = v388 + ((v14 + v443) & ~v14);
  unint64_t v417 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  unint64_t v25 = (v21 + v24) & ~v24;
  uint64_t v392 = v23;
  uint64_t v393 = v22;
  if (*(_DWORD *)(v23 + 84)) {
    uint64_t v26 = *(void *)(v23 + 64);
  }
  else {
    uint64_t v26 = *(void *)(v23 + 64) + 1;
  }
  uint64_t v387 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v387 - 8);
  int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = v24;
  uint64_t v31 = *(void *)(v29 - 8);
  uint64_t v32 = *(unsigned __int8 *)(v31 + 80);
  uint64_t v33 = v28 | v32 | 7;
  uint64_t v386 = v27;
  unsigned int v391 = *(_DWORD *)(v27 + 84);
  if (v391 <= *(_DWORD *)(v31 + 84)) {
    unsigned int v34 = *(_DWORD *)(v31 + 84);
  }
  else {
    unsigned int v34 = *(_DWORD *)(v27 + 84);
  }
  if (v34 <= 0x7FFFFFFE) {
    int v35 = 2147483646;
  }
  else {
    int v35 = v34;
  }
  uint64_t v36 = *(void *)(v27 + 64) + 7;
  uint64_t v37 = v32 + 8;
  unint64_t v38 = ((((*(void *)(*(void *)(v29 - 8) + 64) + 7 + ((v32 + 8 + (v36 & 0xFFFFFFFFFFFFFFF8)) & ~v32)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  size_t __n = v26;
  uint64_t v39 = v26 + v33;
  unint64_t v40 = ((((((v26 + v33 + v25) & ~v33) + v38 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v41 = *(void *)(v438 - 8);
  uint64_t v42 = *(unsigned __int8 *)(v41 + 80);
  uint64_t v43 = v443 + v24;
  if (*(_DWORD *)(v41 + 84)) {
    size_t v44 = *(void *)(*(void *)(v438 - 8) + 64);
  }
  else {
    size_t v44 = *(void *)(*(void *)(v438 - 8) + 64) + 1;
  }
  unint64_t v45 = ((v417 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v443 > v45) {
    unint64_t v45 = v443;
  }
  uint64_t v46 = v443 + v42;
  if (v40 <= v38 + ((v26 + v33 + ((v443 + v24) & ~v24)) & ~v33) + 16) {
    unint64_t v40 = v38 + ((v39 + ((v443 + v24) & ~v24)) & ~v33) + 16;
  }
  unint64_t v47 = (v46 & ~v42) + v44;
  if (((v417 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v47) {
    unint64_t v47 = ((v417 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v45 <= v40) {
    unint64_t v45 = v40;
  }
  if (v45 <= v47) {
    unint64_t v48 = v47;
  }
  else {
    unint64_t v48 = v45;
  }
  uint64_t v49 = a2;
  unsigned int v50 = a2[v48];
  unsigned int v51 = v50 - 8;
  if (v50 < 8)
  {
    uint64_t v54 = v9;
    uint64_t v53 = v414;
    uint64_t v56 = v406;
    uint64_t v55 = v409;
  }
  else
  {
    if (v48 <= 3) {
      uint64_t v52 = v48;
    }
    else {
      uint64_t v52 = 4;
    }
    uint64_t v54 = v9;
    uint64_t v53 = v414;
    uint64_t v56 = v406;
    uint64_t v55 = v409;
    switch(v52)
    {
      case 1:
        int v57 = *a2;
        if (v48 < 4) {
          goto LABEL_53;
        }
        goto LABEL_54;
      case 2:
        int v57 = *(unsigned __int16 *)a2;
        if (v48 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 3:
        int v57 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v48 >= 4) {
          goto LABEL_54;
        }
        goto LABEL_53;
      case 4:
        int v57 = *(_DWORD *)a2;
        if (v48 < 4) {
LABEL_53:
        }
          v57 |= v51 << (8 * v48);
LABEL_54:
        unsigned int v50 = v57 + 8;
        break;
      default:
        break;
    }
  }
  unint64_t v444 = v48;
  uint64_t v58 = ~v56;
  uint64_t v423 = ~v53;
  uint64_t v59 = ~v55;
  uint64_t v60 = ~v54;
  uint64_t v61 = ~v33;
  uint64_t v62 = ~v32;
  uint64_t v63 = ~v42;
  switch(v50)
  {
    case 1u:
      uint64_t v362 = ~v30;
      uint64_t v358 = v61;
      uint64_t v421 = v60;
      uint64_t v430 = ~v428;
      int v359 = v35;
      uint64_t v407 = v62;
      unsigned int v360 = v34;
      unsigned int v361 = *(_DWORD *)(v31 + 84);
      uint64_t v440 = v36;
      uint64_t v410 = v37;
      uint64_t v364 = *(void *)(*(void *)(v29 - 8) + 64) + 7;
      uint64_t v412 = *(void *)(v29 - 8);
      uint64_t v415 = v29;
      size_t v418 = v38;
      uint64_t v435 = ~v433;
      uint64_t v72 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32);
      uint64_t v65 = a1;
      v72(a1, a2, AssociatedTypeWitness);
      int __dst = (void *)((v397 + a1) & v58);
      unint64_t v425 = (void *)((unint64_t)&a2[v397] & v58);
      if (v399 == v398)
      {
        uint64_t v73 = ~v55;
        int v74 = (*(uint64_t (**)(void))(v404 + 48))();
        uint64_t v75 = v389;
LABEL_131:
        if (v74)
        {
LABEL_132:
          unint64_t v199 = __dst;
          unint64_t v200 = v425;
          memcpy(__dst, v425, v388);
          unint64_t v202 = v395;
          uint64_t v201 = v396;
          size_t v203 = v394;
          uint64_t v204 = v392;
LABEL_133:
          size_t v205 = v203;
          goto LABEL_139;
        }
        unint64_t v94 = ((unint64_t)v425 + v402) & v423;
        unint64_t v95 = (v403 + v94) & v73;
LABEL_135:
        v72((uint64_t)__dst, (unsigned __int8 *)v425, AssociatedTypeWitness);
        unint64_t v206 = ((unint64_t)__dst + v402) & v423;
        v72(v206, (unsigned __int8 *)v94, AssociatedTypeWitness);
        unint64_t v207 = (v403 + v206) & v73;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v384 + 32))(v207, v95, v385);
        id v208 = (void *)((v383 + v207) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v209 = (void *)((v383 + v95) & 0xFFFFFFFFFFFFFFF8);
        void *v208 = *v209;
        unint64_t v210 = ((unint64_t)v208 + v376) & v421;
        unint64_t v211 = ((unint64_t)v209 + v376) & v421;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 32))(v210, v211, v378);
        unint64_t v212 = (void *)((v372 + v210) & 0xFFFFFFFFFFFFFFF8);
        size_t v213 = (void *)((v372 + v211) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v212 = *v213;
        *(_OWORD *)(((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v390 + v207) = *(_OWORD *)(v390 + v95);
        uint64_t v214 = v435;
        unint64_t v215 = (v380 + v390 + v207) & v430;
        unint64_t v216 = (v380 + v390 + v95) & v430;
        *(unsigned char *)unint64_t v215 = *(unsigned char *)v216;
        uint64_t v217 = v215 | 4;
        int v218 = *(_DWORD *)(v216 | 4);
        *(unsigned char *)(v217 + 4) = *(unsigned char *)((v216 | 4) + 4);
        *(_DWORD *)uint64_t v217 = v218;
        *(_WORD *)(v215 + 10) = *(_WORD *)(v216 + 0xA);
        unint64_t v432 = v215;
        unint64_t v219 = (v381 + v215) & v435;
        unint64_t v220 = *(void (**)(unint64_t, unint64_t, uint64_t))(v400 + 32);
        v220((v381 + v215) & v214, (v381 + v216) & v214, v75);
        size_t v221 = (v375 + v219) & v435;
        unint64_t v222 = (v375 + ((v381 + v216) & v214)) & v214;
        v220(v221, v222, v75);
        unint64_t v223 = (unsigned char *)(v221 + v401);
        *unint64_t v223 = *(unsigned char *)(v222 + v401);
        v223[1] = *(unsigned char *)(v222 + v401 + 1);
        v223[2] = *(unsigned char *)(v222 + v401 + 2);
        v223[3] = *(unsigned char *)(v222 + v401 + 3);
        v223[4] = *(unsigned char *)(v222 + v401 + 4);
        unint64_t v224 = (v221 + v401 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v225 = (v222 + v401 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v224 = *(_OWORD *)v225;
        *(unsigned char *)(v224 + 16) = *(unsigned char *)(v225 + 16);
        *(unsigned char *)(v224 + 17) = *(unsigned char *)(v225 + 17);
        *(unsigned char *)(v224 + 18) = *(unsigned char *)(v225 + 18);
        *(unsigned char *)(v224 + 19) = *(unsigned char *)(v225 + 19);
        unint64_t v226 = (v224 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v227 = (v225 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v226 = *(void *)v227;
        *(unsigned char *)(v226 + 8) = *(unsigned char *)(v227 + 8);
        *(unsigned char *)(v226 + 9) = *(unsigned char *)(v227 + 9);
        *(unsigned char *)(v226 + 10) = *(unsigned char *)(v227 + 10);
        *(unsigned char *)(v226 + 11) = *(unsigned char *)(v227 + 11);
        *(unsigned char *)(v226 + 12) = *(unsigned char *)(v227 + 12);
        unint64_t v228 = (void *)((v225 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v229 = (void *)((v224 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v229 = *v228;
        unint64_t v230 = ((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v231 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v230 = *(void *)v231;
        *(unsigned char *)(v230 + 8) = *(unsigned char *)(v231 + 8);
        *(unsigned char *)(v230 + 9) = *(unsigned char *)(v231 + 9);
        unint64_t v232 = (void *)((v373 + v230) & v435);
        uint64_t v233 = (const void *)((v373 + v231) & v435);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v400 + 48))(v233, 1, v75))
        {
          size_t v203 = v394;
          memcpy(v232, v233, v394);
          unint64_t v202 = v395;
          uint64_t v201 = v396;
          unsigned int v234 = v379;
        }
        else
        {
          v220((unint64_t)v232, (unint64_t)v233, v75);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v400 + 56))(v232, 0, 1, v75);
          unint64_t v202 = v395;
          uint64_t v201 = v396;
          unsigned int v234 = v379;
          size_t v203 = v394;
        }
        size_t v205 = v401;
        uint64_t v204 = v392;
        unint64_t v199 = __dst;
        unint64_t v235 = (void *)(((unint64_t)v232 + v370) & 0xFFFFFFFFFFFFFFF8);
        int v236 = (void *)(((unint64_t)v233 + v370) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v235 = *v236;
        unint64_t v237 = ((unint64_t)v235 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v238 = ((unint64_t)v236 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v239 = *(void *)v238;
        *(unsigned char *)(v237 + 8) = *(unsigned char *)(v238 + 8);
        *(void *)unint64_t v237 = v239;
        unint64_t v240 = (void *)(((unint64_t)v235 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v241 = (void *)(((unint64_t)v236 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v240 = *v241;
        int v242 = (_OWORD *)(((unint64_t)v240 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v243 = (_OWORD *)(((unint64_t)v241 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v242 = *v243;
        unint64_t v244 = ((unint64_t)v242 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v245 = ((unint64_t)v243 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v246 = *(void *)v245;
        *(unsigned char *)(v244 + 8) = *(unsigned char *)(v245 + 8);
        *(void *)unint64_t v244 = v246;
        *(unsigned char *)(v244 + 9) = *(unsigned char *)(v245 + 9);
        unint64_t v247 = (v244 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v248 = (v245 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v239) = *(_DWORD *)v248;
        *(unsigned char *)(v247 + 4) = *(unsigned char *)(v248 + 4);
        *(_DWORD *)unint64_t v247 = v239;
        *(_OWORD *)((v244 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v245 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v249 = v371 + v432;
        long long v250 = *(_OWORD *)(v371 + v216 + 112);
        long long v252 = *(_OWORD *)(v371 + v216 + 64);
        long long v251 = *(_OWORD *)(v371 + v216 + 80);
        *(_OWORD *)(v249 + 96) = *(_OWORD *)(v371 + v216 + 96);
        *(_OWORD *)(v249 + 112) = v250;
        *(_OWORD *)(v249 + 64) = v252;
        *(_OWORD *)(v249 + 80) = v251;
        long long v253 = *(_OWORD *)(v371 + v216 + 176);
        long long v255 = *(_OWORD *)(v371 + v216 + 128);
        long long v254 = *(_OWORD *)(v371 + v216 + 144);
        *(_OWORD *)(v249 + 160) = *(_OWORD *)(v371 + v216 + 160);
        *(_OWORD *)(v249 + 176) = v253;
        *(_OWORD *)(v249 + 128) = v255;
        *(_OWORD *)(v249 + 144) = v254;
        long long v257 = *(_OWORD *)(v371 + v216 + 208);
        long long v256 = *(_OWORD *)(v371 + v216 + 224);
        long long v258 = *(_OWORD *)(v371 + v216 + 192);
        *(void *)(v249 + 240) = *(void *)(v371 + v216 + 240);
        *(_OWORD *)(v249 + 208) = v257;
        *(_OWORD *)(v249 + 224) = v256;
        *(_OWORD *)(v249 + 192) = v258;
        long long v259 = *(_OWORD *)(v371 + v216);
        long long v260 = *(_OWORD *)(v371 + v216 + 16);
        long long v261 = *(_OWORD *)(v371 + v216 + 48);
        *(_OWORD *)(v249 + 32) = *(_OWORD *)(v371 + v216 + 32);
        *(_OWORD *)(v249 + 48) = v261;
        *(_OWORD *)unint64_t v249 = v259;
        *(_OWORD *)(v249 + 16) = v260;
        size_t v262 = (_OWORD *)((v371 + v432 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v263 = (long long *)((v371 + v216 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v264 = *v263;
        *(_OWORD *)((char *)v262 + 9) = *(long long *)((char *)v263 + 9);
        *size_t v262 = v264;
        unint64_t v265 = (v371 + v432 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v266 = (v371 + v216 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v267 = *(_OWORD *)v266;
        *(unsigned char *)(v265 + 16) = *(unsigned char *)(v266 + 16);
        *(_OWORD *)unint64_t v265 = v267;
        unint64_t v268 = (void *)((v371 + v432 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v269 = (void *)((v371 + v216 + 311) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v268 = *v269;
        *(_OWORD *)(((unint64_t)v268 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v269 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v200 = v425;
        if (!v234) {
          goto LABEL_133;
        }
LABEL_139:
        unint64_t v270 = ((((v201
                 + ((((((((((v202 + v205 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        int v271 = (void *)(((unint64_t)v199 + v30 + v270) & v362);
        long long v272 = (const void *)(((unint64_t)v200 + v30 + v270) & v362);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v204 + 48))(v272, 1, v393))
        {
          memcpy(v271, v272, __n);
        }
        else
        {
          (*(void (**)(void *, const void *, uint64_t))(v204 + 32))(v271, v272, v393);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v204 + 56))(v271, 0, 1, v393);
        }
        uint64_t v273 = v440;
        unint64_t v98 = v444;
        long long v274 = (char *)(((unint64_t)v271 + v39) & v358);
        unint64_t v275 = (char *)(((unint64_t)v272 + v39) & v358);
        if (v391 == v359)
        {
          int v276 = (*(uint64_t (**)(char *, void, uint64_t))(v386 + 48))(v275, v391, v387);
        }
        else
        {
          uint64_t v277 = (uint64_t *)((unint64_t)&v275[v440] & 0xFFFFFFFFFFFFFFF8);
          if (v360 <= 0x7FFFFFFE)
          {
            uint64_t v278 = *v277;
            if ((unint64_t)*v277 >= 0xFFFFFFFF) {
              LODWORD(v278) = -1;
            }
            if ((v278 + 1) >= 2) {
              goto LABEL_151;
            }
            goto LABEL_153;
          }
          int v276 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v412 + 48))(((unint64_t)v277 + v410) & v407, v361, v415);
        }
        uint64_t v273 = v440;
        if (v276)
        {
LABEL_151:
          size_t v279 = v418;
          memcpy(v274, v275, v418);
LABEL_154:
          *(void *)&v274[v279] = *(void *)&v275[v279];
          unint64_t v286 = (void *)((unint64_t)&v274[v279 + 15] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v287 = (void *)((unint64_t)&v275[v279 + 15] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v286 = *v287;
          *(void *)(((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v89 = 1;
          goto LABEL_89;
        }
        uint64_t v277 = (uint64_t *)((unint64_t)&v275[v440] & 0xFFFFFFFFFFFFFFF8);
LABEL_153:
        uint64_t v280 = v273;
        (*(void (**)(char *, char *, uint64_t))(v386 + 32))(v274, v275, v387);
        long long v281 = (void *)((unint64_t)&v274[v280] & 0xFFFFFFFFFFFFFFF8);
        *long long v281 = *v277;
        unint64_t v282 = ((unint64_t)v281 + v410) & v407;
        unint64_t v283 = ((unint64_t)v277 + v410) & v407;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v412 + 32))(v282, v283, v415);
        unsigned int v284 = (void *)((v364 + v282) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v285 = (void *)((v364 + v283) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v284 = *v285;
        *(_OWORD *)(((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8);
        size_t v279 = v418;
        goto LABEL_154;
      }
      unint64_t v94 = (v402 + ((unint64_t)&v49[v397] & v58)) & v423;
      uint64_t v73 = ~v55;
      unint64_t v95 = (v403 + v94) & v59;
      uint64_t v75 = v389;
      if (v382 == v398)
      {
        if (v369 == v382)
        {
          int v74 = (*(uint64_t (**)(unint64_t))(v384 + 48))(v95);
          goto LABEL_131;
        }
        uint64_t v122 = (unint64_t *)((v383 + v95) & 0xFFFFFFFFFFFFFFF8);
        if (v367 > 0x7FFFFFFE)
        {
          int v74 = (*(uint64_t (**)(unint64_t))(v377 + 48))(((unint64_t)v122 + v376) & v421);
          goto LABEL_131;
        }
        unint64_t v123 = *v122;
      }
      else
      {
        unint64_t v108 = v390 + v95;
        if ((v368 & 0x80000000) == 0)
        {
          unint64_t v109 = *(void *)(v108 + 8);
          if (v109 >= 0xFFFFFFFF) {
            LODWORD(v109) = -1;
          }
          int v74 = v109 + 1;
          goto LABEL_131;
        }
        uint64_t v128 = (v381 + ((v380 + v108) & v430)) & v435;
        if (v379 > 0x7FFFFFFD)
        {
          int v74 = (*(uint64_t (**)(uint64_t))(v400 + 48))(v128);
          goto LABEL_131;
        }
        unint64_t v123 = *(void *)(((v366 + ((v375 + v128) & v435)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v123 >= 0xFFFFFFFF) {
        LODWORD(v123) = -1;
      }
      if ((v123 + 1) >= 2) {
        goto LABEL_132;
      }
      goto LABEL_135;
    case 2u:
      uint64_t v76 = v61;
      int v77 = v35;
      uint64_t v408 = v62;
      uint64_t v411 = v37;
      unsigned int v78 = v34;
      uint64_t v79 = *(unsigned int *)(v31 + 84);
      uint64_t v441 = v36;
      uint64_t v365 = *(void *)(*(void *)(v29 - 8) + 64) + 7;
      uint64_t v413 = *(void *)(v29 - 8);
      uint64_t v416 = v29;
      size_t v419 = v38;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      unint64_t v80 = (void *)((v43 + a1) & ~v30);
      unint64_t v81 = (const void *)((unint64_t)&a2[v43] & ~v30);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v392 + 48))(v81, 1, v393))
      {
        memcpy(v80, v81, __n);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v392 + 32))(v80, v81, v393);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v392 + 56))(v80, 0, 1, v393);
      }
      unint64_t v98 = v444;
      unint64_t v99 = (char *)(((unint64_t)v80 + v39) & v76);
      int v100 = (char *)(((unint64_t)v81 + v39) & v76);
      uint64_t v65 = a1;
      if (v391 == v77)
      {
        int v101 = (*(uint64_t (**)(char *, void, uint64_t))(v386 + 48))(v100, v391, v387);
      }
      else
      {
        uint64_t v102 = v441;
        unint64_t v103 = (uint64_t *)((unint64_t)&v100[v441] & 0xFFFFFFFFFFFFFFF8);
        if (v78 <= 0x7FFFFFFE)
        {
          uint64_t v104 = *v103;
          if ((unint64_t)*v103 >= 0xFFFFFFFF) {
            LODWORD(v104) = -1;
          }
          if ((v104 + 1) >= 2) {
            goto LABEL_104;
          }
          goto LABEL_106;
        }
        int v101 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v413 + 48))(((unint64_t)v103 + v411) & v408, v79, v416);
      }
      uint64_t v102 = v441;
      if (v101)
      {
LABEL_104:
        size_t v112 = v419;
        memcpy(v99, v100, v419);
        goto LABEL_107;
      }
      unint64_t v103 = (uint64_t *)((unint64_t)&v100[v441] & 0xFFFFFFFFFFFFFFF8);
LABEL_106:
      uint64_t v113 = v102;
      (*(void (**)(char *, char *, uint64_t))(v386 + 32))(v99, v100, v387);
      size_t v114 = (void *)((unint64_t)&v99[v113] & 0xFFFFFFFFFFFFFFF8);
      *size_t v114 = *v103;
      unint64_t v115 = ((unint64_t)v114 + v411) & v408;
      unint64_t v116 = ((unint64_t)v103 + v411) & v408;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v413 + 32))(v115, v116, v416);
      unint64_t v117 = (void *)((v365 + v115) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v98 = v444;
      unint64_t v118 = (void *)((v365 + v116) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v117 = *v118;
      *(_OWORD *)(((unint64_t)v117 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8);
      size_t v112 = v419;
LABEL_107:
      unint64_t v119 = &v99[v112];
      *unint64_t v119 = v100[v112];
      *((void *)v119 + 1) = *(void *)&v100[v112 + 8];
      char v89 = 2;
      goto LABEL_89;
    case 3u:
      uint64_t v422 = v60;
      uint64_t v431 = ~v428;
      uint64_t v436 = ~v433;
      int v82 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32);
      uint64_t v65 = a1;
      v82(a1, a2, AssociatedTypeWitness);
      unint64_t v83 = (void *)((v397 + a1) & v58);
      unint64_t v84 = (void *)((unint64_t)&a2[v397] & v58);
      unint64_t v442 = v84;
      if (v399 == v398)
      {
        uint64_t v85 = v59;
        int v86 = (*(uint64_t (**)(void))(v404 + 48))();
        uint64_t v87 = v400;
        size_t v88 = v401;
LABEL_156:
        if (v86)
        {
LABEL_157:
          unint64_t v288 = v442;
          memcpy(v83, v442, v388);
          unint64_t v98 = v444;
          unint64_t v290 = v395;
          uint64_t v289 = v396;
          size_t v291 = v394;
          goto LABEL_158;
        }
        unint64_t v96 = ((unint64_t)v442 + v402) & v423;
        unint64_t v97 = (v403 + v96) & v85;
LABEL_160:
        v82((uint64_t)v83, (unsigned __int8 *)v442, AssociatedTypeWitness);
        unint64_t v427 = v83;
        unint64_t v293 = ((unint64_t)v83 + v402) & v423;
        v82(v293, (unsigned __int8 *)v96, AssociatedTypeWitness);
        unint64_t v294 = (v403 + v293) & v85;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v384 + 32))(v294, v97, v385);
        unint64_t v295 = (void *)((v383 + v294) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v296 = (void *)((v383 + v97) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v295 = *v296;
        unint64_t v297 = ((unint64_t)v295 + v376) & v422;
        unint64_t v298 = ((unint64_t)v296 + v376) & v422;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 32))(v297, v298, v378);
        unint64_t v299 = (void *)((v372 + v297) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v300 = (void *)((v372 + v298) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v299 = *v300;
        *(_OWORD *)(((unint64_t)v299 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v300 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v390 + v294) = *(_OWORD *)(v390 + v97);
        unint64_t v301 = (v380 + v390 + v294) & v431;
        unint64_t v302 = (v380 + v390 + v97) & v431;
        *(unsigned char *)unint64_t v301 = *(unsigned char *)v302;
        uint64_t v303 = v301 | 4;
        int v304 = *(_DWORD *)(v302 | 4);
        *(unsigned char *)(v303 + 4) = *(unsigned char *)((v302 | 4) + 4);
        *(_DWORD *)uint64_t v303 = v304;
        *(_WORD *)(v301 + 10) = *(_WORD *)(v302 + 0xA);
        unint64_t v305 = *(void (**)(unint64_t, unint64_t, uint64_t))(v87 + 32);
        v305((v381 + v301) & v436, (v381 + v302) & v436, v389);
        unint64_t v306 = (v375 + ((v381 + v301) & v436)) & v436;
        unint64_t v307 = (v375 + ((v381 + v302) & v436)) & v436;
        v305(v306, v307, v389);
        unint64_t v308 = (unsigned char *)(v306 + v88);
        *unint64_t v308 = *(unsigned char *)(v307 + v88);
        v308[1] = *(unsigned char *)(v307 + v88 + 1);
        v308[2] = *(unsigned char *)(v307 + v88 + 2);
        v308[3] = *(unsigned char *)(v307 + v88 + 3);
        v308[4] = *(unsigned char *)(v307 + v88 + 4);
        unint64_t v309 = (v306 + v88 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v310 = (v307 + v88 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v309 = *(_OWORD *)v310;
        *(unsigned char *)(v309 + 16) = *(unsigned char *)(v310 + 16);
        *(unsigned char *)(v309 + 17) = *(unsigned char *)(v310 + 17);
        *(unsigned char *)(v309 + 18) = *(unsigned char *)(v310 + 18);
        *(unsigned char *)(v309 + 19) = *(unsigned char *)(v310 + 19);
        unint64_t v311 = (v309 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v312 = (v310 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v311 = *(void *)v312;
        *(unsigned char *)(v311 + 8) = *(unsigned char *)(v312 + 8);
        *(unsigned char *)(v311 + 9) = *(unsigned char *)(v312 + 9);
        *(unsigned char *)(v311 + 10) = *(unsigned char *)(v312 + 10);
        *(unsigned char *)(v311 + 11) = *(unsigned char *)(v312 + 11);
        *(unsigned char *)(v311 + 12) = *(unsigned char *)(v312 + 12);
        size_t v313 = (void *)((v310 + 47) & 0xFFFFFFFFFFFFFFF8);
        size_t v314 = (void *)((v309 + 47) & 0xFFFFFFFFFFFFFFF8);
        *size_t v314 = *v313;
        unint64_t v315 = ((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v316 = ((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v315 = *(void *)v316;
        *(unsigned char *)(v315 + 8) = *(unsigned char *)(v316 + 8);
        *(unsigned char *)(v315 + 9) = *(unsigned char *)(v316 + 9);
        unint64_t v317 = (void *)((v373 + v315) & v436);
        int v318 = (const void *)((v373 + v316) & v436);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v400 + 48))(v318, 1, v389))
        {
          size_t v291 = v394;
          memcpy(v317, v318, v394);
          unint64_t v98 = v444;
          unint64_t v290 = v395;
          uint64_t v289 = v396;
          unsigned int v319 = v379;
        }
        else
        {
          v305((unint64_t)v317, (unint64_t)v318, v389);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v400 + 56))(v317, 0, 1, v389);
          unint64_t v98 = v444;
          unint64_t v290 = v395;
          uint64_t v289 = v396;
          unsigned int v319 = v379;
          size_t v291 = v394;
        }
        unint64_t v288 = v442;
        size_t v292 = v401;
        long long v320 = (void *)(((unint64_t)v317 + v370) & 0xFFFFFFFFFFFFFFF8);
        long long v321 = (void *)(((unint64_t)v318 + v370) & 0xFFFFFFFFFFFFFFF8);
        *long long v320 = *v321;
        unint64_t v322 = ((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v323 = ((unint64_t)v321 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v324 = *(void *)v323;
        *(unsigned char *)(v322 + 8) = *(unsigned char *)(v323 + 8);
        *(void *)unint64_t v322 = v324;
        long long v325 = (void *)(((unint64_t)v320 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v326 = (void *)(((unint64_t)v321 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v325 = *v326;
        long long v327 = (_OWORD *)(((unint64_t)v325 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v328 = (_OWORD *)(((unint64_t)v326 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v327 = *v328;
        unint64_t v329 = ((unint64_t)v327 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v330 = ((unint64_t)v328 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v331 = *(void *)v330;
        *(unsigned char *)(v329 + 8) = *(unsigned char *)(v330 + 8);
        *(void *)unint64_t v329 = v331;
        *(unsigned char *)(v329 + 9) = *(unsigned char *)(v330 + 9);
        unint64_t v332 = (v329 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v333 = (v330 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v324) = *(_DWORD *)v333;
        *(unsigned char *)(v332 + 4) = *(unsigned char *)(v333 + 4);
        *(_DWORD *)unint64_t v332 = v324;
        *(_OWORD *)((v329 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v330 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v334 = v371 + v301;
        long long v335 = *(_OWORD *)(v371 + v302 + 112);
        long long v337 = *(_OWORD *)(v371 + v302 + 64);
        long long v336 = *(_OWORD *)(v371 + v302 + 80);
        *(_OWORD *)(v334 + 96) = *(_OWORD *)(v371 + v302 + 96);
        *(_OWORD *)(v334 + 112) = v335;
        *(_OWORD *)(v334 + 64) = v337;
        *(_OWORD *)(v334 + 80) = v336;
        long long v338 = *(_OWORD *)(v371 + v302 + 176);
        long long v340 = *(_OWORD *)(v371 + v302 + 128);
        long long v339 = *(_OWORD *)(v371 + v302 + 144);
        *(_OWORD *)(v334 + 160) = *(_OWORD *)(v371 + v302 + 160);
        *(_OWORD *)(v334 + 176) = v338;
        *(_OWORD *)(v334 + 128) = v340;
        *(_OWORD *)(v334 + 144) = v339;
        long long v342 = *(_OWORD *)(v371 + v302 + 208);
        long long v341 = *(_OWORD *)(v371 + v302 + 224);
        long long v343 = *(_OWORD *)(v371 + v302 + 192);
        *(void *)(v334 + 240) = *(void *)(v371 + v302 + 240);
        *(_OWORD *)(v334 + 208) = v342;
        *(_OWORD *)(v334 + 224) = v341;
        *(_OWORD *)(v334 + 192) = v343;
        long long v344 = *(_OWORD *)(v371 + v302);
        long long v345 = *(_OWORD *)(v371 + v302 + 16);
        long long v346 = *(_OWORD *)(v371 + v302 + 48);
        *(_OWORD *)(v334 + 32) = *(_OWORD *)(v371 + v302 + 32);
        *(_OWORD *)(v334 + 48) = v346;
        *(_OWORD *)unint64_t v334 = v344;
        *(_OWORD *)(v334 + 16) = v345;
        unint64_t v347 = (_OWORD *)((v371 + v301 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v348 = (long long *)((v371 + v302 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v349 = *v348;
        *(_OWORD *)((char *)v347 + 9) = *(long long *)((char *)v348 + 9);
        *unint64_t v347 = v349;
        unint64_t v350 = (v371 + v301 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v351 = (v371 + v302 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v352 = *(_OWORD *)v351;
        *(unsigned char *)(v350 + 16) = *(unsigned char *)(v351 + 16);
        *(_OWORD *)unint64_t v350 = v352;
        unint64_t v353 = (void *)((v371 + v301 + 311) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v354 = (void *)((v371 + v302 + 311) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v353 = *v354;
        *(_OWORD *)(((unint64_t)v353 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v83 = v427;
        if (v319)
        {
LABEL_164:
          unint64_t v355 = ((((v289
                   + ((((((((((v290 + v292 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                       + 19) & 0xFFFFFFFFFFFFFFF8)
                     + 25) & 0xFFFFFFFFFFFFFFF8)
                   + 327) & 0xFFFFFFFFFFFFFFF8)
                 + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          unint64_t v356 = (_OWORD *)(((unint64_t)v83 + v355) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v357 = (_OWORD *)(((unint64_t)v288 + v355) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v356 = *v357;
          *(void *)(((unint64_t)v356 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v357 + 23) & 0xFFFFFFFFFFFFFFF8);
          char v89 = 3;
          goto LABEL_89;
        }
LABEL_158:
        size_t v292 = v291;
        goto LABEL_164;
      }
      size_t v88 = v401;
      unint64_t v96 = ((unint64_t)v84 + v402) & v423;
      uint64_t v85 = v59;
      unint64_t v97 = (v403 + v96) & v59;
      uint64_t v87 = v400;
      if (v382 == v398)
      {
        if (v369 == v382)
        {
          int v86 = (*(uint64_t (**)(unint64_t))(v384 + 48))(v97);
          goto LABEL_156;
        }
        unint64_t v124 = (unint64_t *)((v383 + v97) & 0xFFFFFFFFFFFFFFF8);
        if (v367 > 0x7FFFFFFE)
        {
          int v86 = (*(uint64_t (**)(unint64_t))(v377 + 48))(((unint64_t)v124 + v376) & v422);
          goto LABEL_156;
        }
        unint64_t v125 = *v124;
      }
      else
      {
        unint64_t v110 = v390 + v97;
        if ((v368 & 0x80000000) == 0)
        {
          unint64_t v111 = *(void *)(v110 + 8);
          if (v111 >= 0xFFFFFFFF) {
            LODWORD(v111) = -1;
          }
          int v86 = v111 + 1;
          goto LABEL_156;
        }
        uint64_t v126 = (v381 + ((v380 + v110) & v431)) & v436;
        if (v379 > 0x7FFFFFFD)
        {
          int v86 = (*(uint64_t (**)(uint64_t))(v400 + 48))(v126);
          goto LABEL_156;
        }
        unint64_t v125 = *(void *)(((v366 + ((v375 + v126) & v436)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v125 >= 0xFFFFFFFF) {
        LODWORD(v125) = -1;
      }
      if ((v125 + 1) >= 2) {
        goto LABEL_157;
      }
      goto LABEL_160;
    case 4u:
      uint64_t v65 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      char v89 = 4;
      goto LABEL_88;
    case 5u:
      uint64_t v65 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      char v89 = 5;
      goto LABEL_88;
    case 6u:
      uint64_t v65 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      size_t v90 = (void *)((v46 + a1) & v63);
      size_t v91 = (const void *)((unint64_t)&a2[v46] & v63);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v41 + 48))(v91, 1, v438))
      {
        memcpy(v90, v91, v44);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v41 + 32))(v90, v91, v438);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v41 + 56))(v90, 0, 1, v438);
      }
      char v89 = 6;
      goto LABEL_88;
    case 7u:
      uint64_t v65 = a1;
      (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32))(a1, a2, AssociatedTypeWitness);
      char v89 = 7;
LABEL_88:
      unint64_t v98 = v444;
      goto LABEL_89;
    default:
      uint64_t v420 = v60;
      uint64_t v429 = ~v428;
      uint64_t v434 = ~v433;
      unint64_t v64 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v404 + 32);
      uint64_t v65 = a1;
      v64(a1, a2, AssociatedTypeWitness);
      int v66 = (void *)((v397 + a1) & v58);
      unint64_t v67 = (void *)((unint64_t)&a2[v397] & v58);
      uint64_t v439 = v67;
      if (v399 != v398)
      {
        size_t v71 = v401;
        unint64_t v92 = ((unint64_t)v67 + v402) & v423;
        uint64_t v68 = v59;
        unint64_t v93 = (v403 + v92) & v59;
        uint64_t v70 = v400;
        if (v382 == v398)
        {
          if (v369 == v382)
          {
            int v69 = (*(uint64_t (**)(unint64_t))(v384 + 48))(v93);
            goto LABEL_121;
          }
          unsigned int v120 = (unint64_t *)((v383 + v93) & 0xFFFFFFFFFFFFFFF8);
          if (v367 > 0x7FFFFFFE)
          {
            int v69 = (*(uint64_t (**)(unint64_t))(v377 + 48))(((unint64_t)v120 + v376) & v420);
            goto LABEL_121;
          }
          unint64_t v121 = *v120;
        }
        else
        {
          unint64_t v106 = v390 + v93;
          if ((v368 & 0x80000000) == 0)
          {
            unint64_t v107 = *(void *)(v106 + 8);
            if (v107 >= 0xFFFFFFFF) {
              LODWORD(v107) = -1;
            }
            int v69 = v107 + 1;
            goto LABEL_121;
          }
          uint64_t v127 = (v381 + ((v380 + v106) & v429)) & v434;
          if (v379 > 0x7FFFFFFD)
          {
            int v69 = (*(uint64_t (**)(uint64_t))(v400 + 48))(v127);
            goto LABEL_121;
          }
          unint64_t v121 = *(void *)(((v366 + ((v375 + v127) & v434)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v121 >= 0xFFFFFFFF) {
          LODWORD(v121) = -1;
        }
        if ((v121 + 1) >= 2) {
          goto LABEL_122;
        }
        goto LABEL_125;
      }
      uint64_t v68 = v59;
      int v69 = (*(uint64_t (**)(void))(v404 + 48))();
      uint64_t v70 = v400;
      size_t v71 = v401;
LABEL_121:
      if (v69)
      {
LABEL_122:
        int v129 = v439;
        memcpy(v66, v439, v388);
        unint64_t v98 = v444;
        unint64_t v131 = v395;
        uint64_t v130 = v396;
        size_t v132 = v394;
LABEL_123:
        size_t v133 = v132;
        goto LABEL_129;
      }
      unint64_t v92 = ((unint64_t)v439 + v402) & v423;
      unint64_t v93 = (v403 + v92) & v68;
LABEL_125:
      v64((uint64_t)v66, (unsigned __int8 *)v439, AssociatedTypeWitness);
      uint64_t v426 = v66;
      unint64_t v134 = ((unint64_t)v66 + v402) & v423;
      v64(v134, (unsigned __int8 *)v92, AssociatedTypeWitness);
      unint64_t v135 = (v403 + v134) & v68;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v384 + 32))(v135, v93, v385);
      unint64_t v136 = (void *)((v383 + v135) & 0xFFFFFFFFFFFFFFF8);
      char v137 = (void *)((v383 + v93) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v136 = *v137;
      unint64_t v138 = ((unint64_t)v136 + v376) & v420;
      unint64_t v139 = ((unint64_t)v137 + v376) & v420;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 32))(v138, v139, v378);
      unint64_t v140 = (void *)((v372 + v138) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v141 = (void *)((v372 + v139) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v140 = *v141;
      *(_OWORD *)(((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v390 + v135) = *(_OWORD *)(v390 + v93);
      unint64_t v142 = (v380 + v390 + v135) & v429;
      unint64_t v143 = (v380 + v390 + v93) & v429;
      *(unsigned char *)unint64_t v142 = *(unsigned char *)v143;
      uint64_t v144 = v142 | 4;
      int v145 = *(_DWORD *)(v143 | 4);
      *(unsigned char *)(v144 + 4) = *(unsigned char *)((v143 | 4) + 4);
      *(_DWORD *)uint64_t v144 = v145;
      *(_WORD *)(v142 + 10) = *(_WORD *)(v143 + 0xA);
      uint64_t v146 = *(void (**)(unint64_t, unint64_t, uint64_t))(v70 + 32);
      v146((v381 + v142) & v434, (v381 + v143) & v434, v389);
      unint64_t v147 = (v375 + ((v381 + v142) & v434)) & v434;
      unint64_t v148 = (v375 + ((v381 + v143) & v434)) & v434;
      v146(v147, v148, v389);
      uint64_t v149 = (unsigned char *)(v147 + v71);
      *uint64_t v149 = *(unsigned char *)(v148 + v71);
      v149[1] = *(unsigned char *)(v148 + v71 + 1);
      v149[2] = *(unsigned char *)(v148 + v71 + 2);
      v149[3] = *(unsigned char *)(v148 + v71 + 3);
      v149[4] = *(unsigned char *)(v148 + v71 + 4);
      unint64_t v150 = (v147 + v71 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v151 = (v148 + v71 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v150 = *(_OWORD *)v151;
      *(unsigned char *)(v150 + 16) = *(unsigned char *)(v151 + 16);
      *(unsigned char *)(v150 + 17) = *(unsigned char *)(v151 + 17);
      *(unsigned char *)(v150 + 18) = *(unsigned char *)(v151 + 18);
      *(unsigned char *)(v150 + 19) = *(unsigned char *)(v151 + 19);
      unint64_t v152 = (v150 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v153 = (v151 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v152 = *(void *)v153;
      *(unsigned char *)(v152 + 8) = *(unsigned char *)(v153 + 8);
      *(unsigned char *)(v152 + 9) = *(unsigned char *)(v153 + 9);
      *(unsigned char *)(v152 + 10) = *(unsigned char *)(v153 + 10);
      *(unsigned char *)(v152 + 11) = *(unsigned char *)(v153 + 11);
      *(unsigned char *)(v152 + 12) = *(unsigned char *)(v153 + 12);
      unint64_t v154 = (void *)((v151 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v155 = (void *)((v150 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v155 = *v154;
      unint64_t v156 = ((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v157 = ((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v156 = *(void *)v157;
      *(unsigned char *)(v156 + 8) = *(unsigned char *)(v157 + 8);
      *(unsigned char *)(v156 + 9) = *(unsigned char *)(v157 + 9);
      unint64_t v158 = (void *)((v373 + v156) & v434);
      unint64_t v159 = (const void *)((v373 + v157) & v434);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v400 + 48))(v159, 1, v389))
      {
        size_t v132 = v394;
        memcpy(v158, v159, v394);
        unint64_t v98 = v444;
        unint64_t v131 = v395;
        uint64_t v130 = v396;
        unsigned int v160 = v379;
      }
      else
      {
        v146((unint64_t)v158, (unint64_t)v159, v389);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v400 + 56))(v158, 0, 1, v389);
        unint64_t v98 = v444;
        unint64_t v131 = v395;
        uint64_t v130 = v396;
        unsigned int v160 = v379;
        size_t v132 = v394;
      }
      int v129 = v439;
      size_t v133 = v401;
      uint64_t v161 = (void *)(((unint64_t)v158 + v370) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v162 = (void *)(((unint64_t)v159 + v370) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v161 = *v162;
      unint64_t v163 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v164 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v165 = *(void *)v164;
      *(unsigned char *)(v163 + 8) = *(unsigned char *)(v164 + 8);
      *(void *)unint64_t v163 = v165;
      uint64_t v166 = (void *)(((unint64_t)v161 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v167 = (void *)(((unint64_t)v162 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v166 = *v167;
      char v168 = (_OWORD *)(((unint64_t)v166 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v169 = (_OWORD *)(((unint64_t)v167 + 15) & 0xFFFFFFFFFFFFFFF8);
      *char v168 = *v169;
      unint64_t v170 = ((unint64_t)v168 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v171 = ((unint64_t)v169 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v172 = *(void *)v171;
      *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
      *(void *)unint64_t v170 = v172;
      *(unsigned char *)(v170 + 9) = *(unsigned char *)(v171 + 9);
      unint64_t v173 = (v170 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v174 = (v171 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v165) = *(_DWORD *)v174;
      *(unsigned char *)(v173 + 4) = *(unsigned char *)(v174 + 4);
      *(_DWORD *)unint64_t v173 = v165;
      *(_OWORD *)((v170 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v171 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v175 = v371 + v142;
      long long v176 = *(_OWORD *)(v371 + v143 + 112);
      long long v178 = *(_OWORD *)(v371 + v143 + 64);
      long long v177 = *(_OWORD *)(v371 + v143 + 80);
      *(_OWORD *)(v175 + 96) = *(_OWORD *)(v371 + v143 + 96);
      *(_OWORD *)(v175 + 112) = v176;
      *(_OWORD *)(v175 + 64) = v178;
      *(_OWORD *)(v175 + 80) = v177;
      long long v179 = *(_OWORD *)(v371 + v143 + 176);
      long long v181 = *(_OWORD *)(v371 + v143 + 128);
      long long v180 = *(_OWORD *)(v371 + v143 + 144);
      *(_OWORD *)(v175 + 160) = *(_OWORD *)(v371 + v143 + 160);
      *(_OWORD *)(v175 + 176) = v179;
      *(_OWORD *)(v175 + 128) = v181;
      *(_OWORD *)(v175 + 144) = v180;
      long long v183 = *(_OWORD *)(v371 + v143 + 208);
      long long v182 = *(_OWORD *)(v371 + v143 + 224);
      long long v184 = *(_OWORD *)(v371 + v143 + 192);
      *(void *)(v175 + 240) = *(void *)(v371 + v143 + 240);
      *(_OWORD *)(v175 + 208) = v183;
      *(_OWORD *)(v175 + 224) = v182;
      *(_OWORD *)(v175 + 192) = v184;
      long long v185 = *(_OWORD *)(v371 + v143);
      long long v186 = *(_OWORD *)(v371 + v143 + 16);
      long long v187 = *(_OWORD *)(v371 + v143 + 48);
      *(_OWORD *)(v175 + 32) = *(_OWORD *)(v371 + v143 + 32);
      *(_OWORD *)(v175 + 48) = v187;
      *(_OWORD *)unint64_t v175 = v185;
      *(_OWORD *)(v175 + 16) = v186;
      unint64_t v188 = (_OWORD *)((v371 + v142 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v189 = (long long *)((v371 + v143 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v190 = *v189;
      *(_OWORD *)((char *)v188 + 9) = *(long long *)((char *)v189 + 9);
      *unint64_t v188 = v190;
      unint64_t v191 = (v371 + v142 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v192 = (v371 + v143 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v193 = *(_OWORD *)v192;
      *(unsigned char *)(v191 + 16) = *(unsigned char *)(v192 + 16);
      *(_OWORD *)unint64_t v191 = v193;
      long long v194 = (void *)((v371 + v142 + 311) & 0xFFFFFFFFFFFFFFF8);
      long long v195 = (void *)((v371 + v143 + 311) & 0xFFFFFFFFFFFFFFF8);
      void *v194 = *v195;
      *(_OWORD *)(((unint64_t)v194 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8);
      int v66 = v426;
      if (!v160) {
        goto LABEL_123;
      }
LABEL_129:
      char v89 = 0;
      unint64_t v196 = ((((v130
               + ((((((((((v131 + v133 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                   + 19) & 0xFFFFFFFFFFFFFFF8)
                 + 25) & 0xFFFFFFFFFFFFFFF8)
               + 327) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
      long long v197 = (void *)(((unint64_t)v66 + v196) & 0xFFFFFFFFFFFFFFF8);
      long long v198 = (void *)(((unint64_t)v129 + v196) & 0xFFFFFFFFFFFFFFF8);
      *long long v197 = *v198;
      *(void *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_89:
      *(unsigned char *)(v65 + v98) = v89;
      return v65;
  }
}

unsigned __int8 *sub_24D9FD740(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v3 = *(void *)(a3 + 16);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
    unint64_t v478 = *(void *)(v4 + 64);
    uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
    uint64_t v474 = v3;
    uint64_t v444 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v444 - 8);
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v435 = swift_getAssociatedTypeWitness();
    uint64_t v8 = *(void *)(v435 - 8);
    uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v432 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v432 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v13 = v12 | 7;
    uint64_t v14 = v10 | v5 | v12;
    uint64_t v476 = v4;
    uint64_t v443 = v6;
    uint64_t v434 = v8;
    unsigned int v15 = *(_DWORD *)(v8 + 84);
    unsigned int v417 = *(_DWORD *)(v6 + 84);
    if (v417 > v15) {
      unsigned int v15 = *(_DWORD *)(v6 + 84);
    }
    unsigned int v411 = v15;
    if (v15 <= 0x7FFFFFFE) {
      unsigned int v15 = 2147483646;
    }
    unsigned int v440 = v15;
    unsigned int v456 = *(_DWORD *)(v4 + 84);
    if (v15 <= v456) {
      unsigned int v15 = *(_DWORD *)(v4 + 84);
    }
    uint64_t v447 = *(void *)(v432 - 8);
    unsigned int v16 = *(_DWORD *)(v11 + 84);
    if (v16 <= 0x7FFFFFFE) {
      unsigned int v17 = 2147483646;
    }
    else {
      unsigned int v17 = *(_DWORD *)(v11 + 84);
    }
    if (v15 > v17) {
      unsigned int v17 = v15;
    }
    unsigned int v416 = v17;
    if (v17 <= 0x7FFFFFFF) {
      int v18 = 0x7FFFFFFF;
    }
    else {
      int v18 = v17;
    }
    int v455 = v18;
    unsigned int v419 = v16;
    uint64_t v457 = v478 + v5;
    uint64_t v466 = v5;
    uint64_t v458 = v478 + v10;
    uint64_t v463 = v10;
    unint64_t v19 = (v478 + v10 + ((v478 + v5) & ~v5)) & ~v10;
    uint64_t v20 = v12;
    uint64_t v442 = *(void *)(v6 + 64) + 7;
    uint64_t v433 = v9 + 8;
    uint64_t v424 = *(void *)(v8 + 64) + 7;
    unint64_t v448 = ((((v424 + ((v9 + 8 + (v442 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v436 = v13 + 16;
    uint64_t v21 = v13 + 16 + v448 + v19;
    uint64_t v461 = v12 | 7;
    uint64_t v437 = v12 + 12;
    size_t v22 = *(void *)(*(void *)(v432 - 8) + 64);
    size_t v431 = v22 + v12;
    size_t v415 = v22 + 12;
    unint64_t v23 = (v12
         + 10
         + ((((((v22 + 12 + ((v22 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12;
    size_t v423 = v22;
    if (!v16) {
      ++v22;
    }
    size_t v441 = v22;
    unint64_t v438 = v23;
    uint64_t v439 = v21 & ~v13;
    uint64_t v425 = v12 + 10;
    size_t v426 = v22 + 7;
    unint64_t v427 = ((((((((((v22 + 7 + v23) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    size_t v453 = ((((v439 + v427 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v454 = v14 + v478;
    uint64_t v459 = v14;
    size_t v24 = v453 + ((v14 + v478) & ~v14);
    unint64_t v468 = (v24 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v450 = swift_getAssociatedTypeWitness();
    uint64_t v25 = *(void *)(v450 - 8);
    uint64_t v26 = *(unsigned __int8 *)(v25 + 80);
    size_t v471 = (v24 + v26) & ~v26;
    uint64_t v452 = v25;
    if (*(_DWORD *)(v25 + 84)) {
      uint64_t v27 = *(void *)(v25 + 64);
    }
    else {
      uint64_t v27 = *(void *)(v25 + 64) + 1;
    }
    uint64_t v446 = swift_getAssociatedTypeWitness();
    uint64_t v28 = *(void *)(v446 - 8);
    int v29 = *(_DWORD *)(v28 + 80) & 0xF8;
    uint64_t v430 = swift_getAssociatedTypeWitness();
    uint64_t v30 = *(void *)(v430 - 8);
    uint64_t v31 = *(unsigned __int8 *)(v30 + 80);
    uint64_t v32 = v29 | v31 | 7;
    uint64_t v445 = v28;
    unsigned int v33 = *(_DWORD *)(v28 + 84);
    uint64_t v429 = v30;
    unsigned int v34 = *(_DWORD *)(v30 + 84);
    unsigned int v412 = v34;
    if (v33 > v34) {
      unsigned int v34 = *(_DWORD *)(v28 + 84);
    }
    unsigned int v420 = v34;
    if (v34 <= 0x7FFFFFFE) {
      int v35 = 2147483646;
    }
    else {
      int v35 = v34;
    }
    uint64_t v449 = *(void *)(v28 + 64) + 7;
    uint64_t v428 = v31 + 8;
    uint64_t v418 = *(void *)(*(void *)(v430 - 8) + 64) + 7;
    unint64_t v36 = ((((v418 + ((v31 + 8 + (v449 & 0xFFFFFFFFFFFFFFF8)) & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    size_t __n = v27;
    uint64_t v37 = v27 + v32;
    unint64_t v38 = ((((((v27 + v32 + v471) & ~v32) + v36 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    uint64_t v39 = *(void *)(v474 - 8);
    uint64_t v40 = *(unsigned __int8 *)(v39 + 80);
    uint64_t v422 = v478 + v26;
    size_t v451 = v36;
    unint64_t v41 = v36 + ((v27 + v32 + ((v478 + v26) & ~v26)) & ~v32) + 16;
    if (*(_DWORD *)(v39 + 84)) {
      uint64_t v42 = *(void *)(*(void *)(v474 - 8) + 64);
    }
    else {
      uint64_t v42 = *(void *)(*(void *)(v474 - 8) + 64) + 1;
    }
    unint64_t v43 = ((v468 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v478 > v43) {
      unint64_t v43 = v478;
    }
    if (v38 <= v41) {
      unint64_t v38 = v41;
    }
    uint64_t v421 = v478 + v40;
    unint64_t v44 = ((v478 + v40) & ~v40) + v42;
    if (((v468 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v44) {
      unint64_t v44 = ((v468 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v43 <= v38) {
      unint64_t v43 = v38;
    }
    if (v43 <= v44) {
      unint64_t v45 = v44;
    }
    else {
      unint64_t v45 = v43;
    }
    unsigned int v46 = a1[v45];
    unsigned int v47 = v46 - 8;
    if (v46 < 8)
    {
      uint64_t v49 = AssociatedTypeWitness;
      uint64_t v50 = v466;
      uint64_t v51 = v461;
      uint64_t v52 = v463;
      uint64_t v53 = v459;
    }
    else
    {
      if (v45 <= 3) {
        uint64_t v48 = v45;
      }
      else {
        uint64_t v48 = 4;
      }
      uint64_t v49 = AssociatedTypeWitness;
      uint64_t v50 = v466;
      uint64_t v51 = v461;
      uint64_t v52 = v463;
      uint64_t v53 = v459;
      switch(v48)
      {
        case 1:
          int v54 = *a1;
          if (v45 < 4) {
            goto LABEL_53;
          }
          goto LABEL_54;
        case 2:
          int v54 = *(unsigned __int16 *)a1;
          if (v45 >= 4) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 3:
          int v54 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v45 >= 4) {
            goto LABEL_54;
          }
          goto LABEL_53;
        case 4:
          int v54 = *(_DWORD *)a1;
          if (v45 < 4) {
LABEL_53:
          }
            v54 |= v47 << (8 * v45);
LABEL_54:
          unsigned int v46 = v54 + 8;
          break;
        default:
          break;
      }
    }
    uint64_t v470 = ~v53;
    uint64_t v472 = ~v50;
    uint64_t v479 = ~v52;
    uint64_t v462 = ~v9;
    uint64_t v464 = ~v51;
    uint64_t v55 = ~v20;
    uint64_t v465 = ~v26;
    uint64_t v467 = ~v32;
    uint64_t v460 = ~v31;
    uint64_t v56 = ~v40;
    unsigned int v469 = v33;
    size_t v410 = v42;
    uint64_t v413 = ~v40;
    switch(v46)
    {
      case 1u:
        unint64_t v402 = v45;
        uint64_t v63 = v27 + v32;
        int v408 = v35;
        unint64_t v64 = *(void (**)(unsigned __int8 *, uint64_t))(v476 + 8);
        v64(a1, v49);
        unint64_t v65 = (unint64_t)&a1[v454] & v470;
        if (v456 == v455)
        {
          int v66 = (*(uint64_t (**)(unint64_t))(v476 + 48))((unint64_t)&a1[v454] & v470);
          unint64_t v65 = (unint64_t)&a1[v454] & v470;
          uint64_t v37 = v63;
LABEL_130:
          unint64_t v45 = v402;
          if (v66) {
            goto LABEL_143;
          }
          unint64_t v76 = (v457 + v65) & v472;
          unint64_t v77 = (v458 + v76) & v479;
          goto LABEL_132;
        }
        unint64_t v76 = (v457 + v65) & v472;
        unint64_t v77 = (v458 + v76) & v479;
        if (v440 == v455)
        {
          if (v417 == v440)
          {
            int v66 = (*(uint64_t (**)(unint64_t))(v443 + 48))((v458 + v76) & v479);
            unint64_t v65 = (unint64_t)&a1[v454] & v470;
            uint64_t v37 = v63;
            goto LABEL_130;
          }
          size_t v90 = (unint64_t *)((v442 + v77) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v37 = v63;
          if (v411 <= 0x7FFFFFFE)
          {
            unint64_t v91 = *v90;
            goto LABEL_309;
          }
          unint64_t v98 = ((unint64_t)v90 + v433) & v462;
          unint64_t v99 = *(uint64_t (**)(unint64_t))(v434 + 48);
        }
        else
        {
          unint64_t v84 = v448 + v77;
          if ((v416 & 0x80000000) == 0)
          {
            unint64_t v85 = *(void *)(v84 + 8);
            if (v85 >= 0xFFFFFFFF) {
              LODWORD(v85) = -1;
            }
            int v66 = v85 + 1;
            uint64_t v37 = v63;
            goto LABEL_130;
          }
          unint64_t v98 = (v437 + ((v436 + v84) & v464)) & v55;
          uint64_t v37 = v63;
          if (v419 <= 0x7FFFFFFD)
          {
            unint64_t v91 = *(void *)(((v415 + ((v431 + v98) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_309:
            if (v91 >= 0xFFFFFFFF) {
              LODWORD(v91) = -1;
            }
            unint64_t v45 = v402;
            if ((v91 + 1) < 2)
            {
LABEL_132:
              uint64_t v405 = v26;
              unint64_t v400 = v65;
              v64((unsigned __int8 *)v65, AssociatedTypeWitness);
              v64((unsigned __int8 *)v76, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v443 + 8))(v77, v444);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v434 + 8))((v433 + ((v442 + v77) & 0xFFFFFFFFFFFFFFF8)) & v462, v435);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v109 = (v436 + v448 + v77) & v464;
              unint64_t v110 = *(void (**)(unint64_t, uint64_t))(v447 + 8);
              v110((v437 + v109) & v55, v432);
              unint64_t v111 = (v431 + ((v437 + v109) & v55)) & v55;
              v110(v111, v432);
              swift_bridgeObjectRelease();
              unint64_t v112 = (v425
                    + ((((((v415 + v111) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v447 + 48))(v112, 1, v432)) {
                v110(v112, v432);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v113 = (uint64_t *)((((((v426 + v112) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v114 = v113[1];
              if ((v114 & 0x3000000000000000) == 0) {
                sub_24D400DCC(*v113, v114);
              }
              swift_bridgeObjectRelease();
              unint64_t v115 = v427 + v109;
              unint64_t v116 = *(void **)(v427 + v109 + 16);
              LODWORD(v117) = -1;
              if ((unint64_t)v116 < 0xFFFFFFFF) {
                uint64_t v117 = *(void *)(v427 + v109 + 16);
              }
              uint64_t v26 = v405;
              if ((int)v117 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v115 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_24D466534(*(void *)((((v115 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v115 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
              unint64_t v65 = v400;
            }
LABEL_143:
            size_t v118 = (v65 + v26 + v453) & v465;
            if (!(*(unsigned int (**)(size_t, uint64_t, uint64_t))(v452 + 48))(v118, 1, v450)) {
              (*(void (**)(size_t, uint64_t))(v452 + 8))(v118, v450);
            }
            size_t v119 = (v37 + v118) & v467;
            int v35 = v408;
            uint64_t v49 = AssociatedTypeWitness;
            if (v469 == v408)
            {
              if (!(*(unsigned int (**)(size_t))(v445 + 48))(v119)) {
                goto LABEL_154;
              }
            }
            else
            {
              unsigned int v120 = (uint64_t *)((v449 + v119) & 0xFFFFFFFFFFFFFFF8);
              if (v420 <= 0x7FFFFFFE)
              {
                uint64_t v121 = *v120;
                if ((unint64_t)*v120 >= 0xFFFFFFFF) {
                  LODWORD(v121) = -1;
                }
                if ((v121 + 1) >= 2) {
                  goto LABEL_156;
                }
                goto LABEL_155;
              }
              if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v429 + 48))(((unint64_t)v120 + v428) & v460, v412, v430))
              {
LABEL_154:
                unsigned int v120 = (uint64_t *)((v449 + v119) & 0xFFFFFFFFFFFFFFF8);
LABEL_155:
                (*(void (**)(size_t, uint64_t))(v445 + 8))(v119, v446);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v429 + 8))(((unint64_t)v120 + v428) & v460, v430);
                int v35 = v408;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
LABEL_156:

LABEL_174:
            unsigned int v131 = a2[v45];
            unsigned int v132 = v131 - 8;
            if (v131 < 8)
            {
              uint64_t v134 = v476;
            }
            else
            {
              if (v45 <= 3) {
                uint64_t v133 = v45;
              }
              else {
                uint64_t v133 = 4;
              }
              uint64_t v134 = v476;
              switch(v133)
              {
                case 1:
                  int v135 = *a2;
                  if (v45 < 4) {
                    goto LABEL_185;
                  }
                  goto LABEL_187;
                case 2:
                  int v135 = *(unsigned __int16 *)a2;
                  if (v45 >= 4) {
                    goto LABEL_187;
                  }
                  goto LABEL_185;
                case 3:
                  int v135 = *(unsigned __int16 *)a2 | (a2[2] << 16);
                  if (v45 < 4) {
                    goto LABEL_185;
                  }
                  goto LABEL_187;
                case 4:
                  int v135 = *(_DWORD *)a2;
                  if (v45 < 4) {
LABEL_185:
                  }
                    unsigned int v131 = (v135 | (v132 << (8 * v45))) + 8;
                  else {
LABEL_187:
                  }
                    unsigned int v131 = v135 + 8;
                  break;
                default:
                  break;
              }
            }
            switch(v131)
            {
              case 1u:
                int v409 = v35;
                unint64_t v141 = *(void (**)(unsigned __int8 *))(v134 + 32);
                v141(a1);
                unint64_t v477 = (const void *)((unint64_t)&a2[v454] & v470);
                if (v456 == v455)
                {
                  int v142 = (*(uint64_t (**)(void))(v134 + 48))();
LABEL_262:
                  long long v250 = (void *)((unint64_t)&a1[v454] & v470);
                  if (v142)
                  {
LABEL_263:
                    unint64_t v251 = (unint64_t)&a2[v454] & v470;
                    memcpy(v250, v477, v453);
                    unint64_t v253 = v438;
                    uint64_t v252 = v439;
                    uint64_t v254 = v450;
                    uint64_t v255 = v452;
                    goto LABEL_264;
                  }
                  unint64_t v156 = ((unint64_t)v477 + v457) & v472;
                  unint64_t v157 = (v458 + v156) & v479;
LABEL_266:
                  uint64_t v398 = v37;
                  ((void (*)(void *, const void *, uint64_t))v141)(v250, v477, v49);
                  ((void (*)(unint64_t, unint64_t, uint64_t))v141)(((unint64_t)v250 + v457) & v472, v156, v49);
                  unint64_t v257 = (v458 + (((unint64_t)v250 + v457) & v472)) & v479;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v443 + 32))(v257, v157, v444);
                  long long v258 = (void *)((v442 + v257) & 0xFFFFFFFFFFFFFFF8);
                  long long v259 = (void *)((v442 + v157) & 0xFFFFFFFFFFFFFFF8);
                  void *v258 = *v259;
                  unint64_t v260 = ((unint64_t)v258 + v433) & v462;
                  uint64_t v261 = v55;
                  unint64_t v262 = ((unint64_t)v259 + v433) & v462;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v434 + 32))(v260, v262, v435);
                  unint64_t v263 = (void *)((v424 + v260) & 0xFFFFFFFFFFFFFFF8);
                  long long v264 = (void *)((v424 + v262) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v263 = *v264;
                  *(_OWORD *)(((unint64_t)v263 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v264
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *(_OWORD *)(v448 + v257) = *(_OWORD *)(v448 + v157);
                  unint64_t v265 = (v436 + v448 + v257) & v464;
                  unint64_t v266 = (v436 + v448 + v157) & v464;
                  *(unsigned char *)unint64_t v265 = *(unsigned char *)v266;
                  uint64_t v267 = v265 | 4;
                  int v268 = *(_DWORD *)(v266 | 4);
                  *(unsigned char *)(v267 + 4) = *(unsigned char *)((v266 | 4) + 4);
                  *(_DWORD *)uint64_t v267 = v268;
                  *(_WORD *)(v265 + 10) = *(_WORD *)(v266 + 0xA);
                  unint64_t v269 = *(void (**)(unint64_t, unint64_t, uint64_t))(v447 + 32);
                  v269((v437 + v265) & v261, (v437 + v266) & v261, v432);
                  unint64_t v270 = (v431 + ((v437 + v265) & v261)) & v261;
                  unint64_t v271 = (v431 + ((v437 + v266) & v261)) & v261;
                  v269(v270, v271, v432);
                  long long v272 = (unsigned char *)(v270 + v423);
                  *long long v272 = *(unsigned char *)(v271 + v423);
                  v272[1] = *(unsigned char *)(v271 + v423 + 1);
                  v272[2] = *(unsigned char *)(v271 + v423 + 2);
                  v272[3] = *(unsigned char *)(v271 + v423 + 3);
                  v272[4] = *(unsigned char *)(v271 + v423 + 4);
                  unint64_t v273 = (v270 + v423 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v274 = (v271 + v423 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)unint64_t v273 = *(_OWORD *)v274;
                  *(unsigned char *)(v273 + 16) = *(unsigned char *)(v274 + 16);
                  *(unsigned char *)(v273 + 17) = *(unsigned char *)(v274 + 17);
                  *(unsigned char *)(v273 + 18) = *(unsigned char *)(v274 + 18);
                  *(unsigned char *)(v273 + 19) = *(unsigned char *)(v274 + 19);
                  unint64_t v275 = (v273 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v276 = (v274 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v275 = *(void *)v276;
                  *(unsigned char *)(v275 + 8) = *(unsigned char *)(v276 + 8);
                  *(unsigned char *)(v275 + 9) = *(unsigned char *)(v276 + 9);
                  *(unsigned char *)(v275 + 10) = *(unsigned char *)(v276 + 10);
                  *(unsigned char *)(v275 + 11) = *(unsigned char *)(v276 + 11);
                  *(unsigned char *)(v275 + 12) = *(unsigned char *)(v276 + 12);
                  uint64_t v277 = (void *)((v274 + 47) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v278 = (void *)((v273 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v278 = *v277;
                  unint64_t v279 = ((unint64_t)v278 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v280 = ((unint64_t)v277 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v279 = *(void *)v280;
                  *(unsigned char *)(v279 + 8) = *(unsigned char *)(v280 + 8);
                  *(unsigned char *)(v279 + 9) = *(unsigned char *)(v280 + 9);
                  long long v281 = (void *)((v425 + v279) & v261);
                  unint64_t v282 = (const void *)((v425 + v280) & v261);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v447 + 48))(v282, 1, v432))
                  {
                    memcpy(v281, v282, v441);
                  }
                  else
                  {
                    v269((unint64_t)v281, (unint64_t)v282, v432);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v447 + 56))(v281, 0, 1, v432);
                  }
                  unint64_t v253 = v438;
                  uint64_t v252 = v439;
                  size_t v256 = v423;
                  uint64_t v254 = v450;
                  uint64_t v255 = v452;
                  unint64_t v251 = (unint64_t)&a2[v454] & v470;
                  uint64_t v37 = v398;
                  unint64_t v283 = (void *)(((unint64_t)v281 + v426) & 0xFFFFFFFFFFFFFFF8);
                  unsigned int v284 = (void *)(((unint64_t)v282 + v426) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v283 = *v284;
                  unint64_t v285 = ((unint64_t)v283 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v286 = ((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v287 = *(void *)v286;
                  *(unsigned char *)(v285 + 8) = *(unsigned char *)(v286 + 8);
                  *(void *)unint64_t v285 = v287;
                  unint64_t v288 = (void *)(((unint64_t)v283 + 31) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v289 = (void *)(((unint64_t)v284 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v288 = *v289;
                  unint64_t v290 = (_OWORD *)(((unint64_t)v288 + 15) & 0xFFFFFFFFFFFFFFF8);
                  size_t v291 = (_OWORD *)(((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v290 = *v291;
                  unint64_t v292 = ((unint64_t)v290 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v293 = ((unint64_t)v291 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v294 = *(void *)v293;
                  *(unsigned char *)(v292 + 8) = *(unsigned char *)(v293 + 8);
                  *(void *)unint64_t v292 = v294;
                  *(unsigned char *)(v292 + 9) = *(unsigned char *)(v293 + 9);
                  unint64_t v295 = (v292 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v296 = (v293 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  LODWORD(v287) = *(_DWORD *)v296;
                  *(unsigned char *)(v295 + 4) = *(unsigned char *)(v296 + 4);
                  *(_DWORD *)unint64_t v295 = v287;
                  *(_OWORD *)((v292 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v293 + 25) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v297 = v427 + v265;
                  long long v298 = *(_OWORD *)(v427 + v266 + 112);
                  long long v300 = *(_OWORD *)(v427 + v266 + 64);
                  long long v299 = *(_OWORD *)(v427 + v266 + 80);
                  *(_OWORD *)(v297 + 96) = *(_OWORD *)(v427 + v266 + 96);
                  *(_OWORD *)(v297 + 112) = v298;
                  *(_OWORD *)(v297 + 64) = v300;
                  *(_OWORD *)(v297 + 80) = v299;
                  long long v301 = *(_OWORD *)(v427 + v266 + 176);
                  long long v303 = *(_OWORD *)(v427 + v266 + 128);
                  long long v302 = *(_OWORD *)(v427 + v266 + 144);
                  *(_OWORD *)(v297 + 160) = *(_OWORD *)(v427 + v266 + 160);
                  *(_OWORD *)(v297 + 176) = v301;
                  *(_OWORD *)(v297 + 128) = v303;
                  *(_OWORD *)(v297 + 144) = v302;
                  long long v305 = *(_OWORD *)(v427 + v266 + 208);
                  long long v304 = *(_OWORD *)(v427 + v266 + 224);
                  long long v306 = *(_OWORD *)(v427 + v266 + 192);
                  *(void *)(v297 + 240) = *(void *)(v427 + v266 + 240);
                  *(_OWORD *)(v297 + 208) = v305;
                  *(_OWORD *)(v297 + 224) = v304;
                  *(_OWORD *)(v297 + 192) = v306;
                  long long v307 = *(_OWORD *)(v427 + v266);
                  long long v308 = *(_OWORD *)(v427 + v266 + 16);
                  long long v309 = *(_OWORD *)(v427 + v266 + 48);
                  *(_OWORD *)(v297 + 32) = *(_OWORD *)(v427 + v266 + 32);
                  *(_OWORD *)(v297 + 48) = v309;
                  *(_OWORD *)unint64_t v297 = v307;
                  *(_OWORD *)(v297 + 16) = v308;
                  unint64_t v310 = (_OWORD *)((v427 + v265 + 255) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v311 = (long long *)((v427 + v266 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v312 = *v311;
                  *(_OWORD *)((char *)v310 + 9) = *(long long *)((char *)v311 + 9);
                  _OWORD *v310 = v312;
                  unint64_t v313 = (v427 + v265 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v314 = (v427 + v266 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v315 = *(_OWORD *)v314;
                  *(unsigned char *)(v313 + 16) = *(unsigned char *)(v314 + 16);
                  *(_OWORD *)unint64_t v313 = v315;
                  unint64_t v316 = (void *)((v427 + v265 + 311) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v317 = (void *)((v427 + v266 + 311) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v316 = *v317;
                  *(_OWORD *)(((unint64_t)v316 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v317
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  long long v250 = (void *)((unint64_t)&a1[v454] & v470);
                  if (v419)
                  {
LABEL_270:
                    unint64_t v318 = ((((v252
                             + ((((((((((v253 + v256 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    unsigned int v319 = (void *)(((unint64_t)v250 + v26 + v318) & v465);
                    long long v320 = (const void *)((v251 + v26 + v318) & v465);
                    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v255 + 48))(v320, 1, v254))
                    {
                      memcpy(v319, v320, __n);
                    }
                    else
                    {
                      (*(void (**)(void *, const void *, uint64_t))(v255 + 32))(v319, v320, v254);
                      (*(void (**)(void *, void, uint64_t, uint64_t))(v255 + 56))(v319, 0, 1, v254);
                    }
                    long long v321 = (char *)(((unint64_t)v319 + v37) & v467);
                    unint64_t v322 = (char *)(((unint64_t)v320 + v37) & v467);
                    if (v469 == v409)
                    {
                      if (!(*(unsigned int (**)(char *))(v445 + 48))(v322)) {
                        goto LABEL_283;
                      }
                    }
                    else
                    {
                      unint64_t v323 = (void *)((unint64_t)&v322[v449] & 0xFFFFFFFFFFFFFFF8);
                      if (v420 > 0x7FFFFFFE)
                      {
                        if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v429 + 48))(((unint64_t)v323 + v428) & v460, v412, v430))
                        {
LABEL_283:
                          unint64_t v323 = (void *)((unint64_t)&v322[v449] & 0xFFFFFFFFFFFFFFF8);
LABEL_284:
                          (*(void (**)(char *, char *, uint64_t))(v445 + 32))(v321, v322, v446);
                          long long v325 = (void *)((unint64_t)&v321[v449] & 0xFFFFFFFFFFFFFFF8);
                          *long long v325 = *v323;
                          unint64_t v326 = ((unint64_t)v325 + v428) & v460;
                          (*(void (**)(unint64_t, unint64_t, uint64_t))(v429 + 32))(v326, ((unint64_t)v323 + v428) & v460, v430);
                          long long v327 = (void *)((v418 + v326) & 0xFFFFFFFFFFFFFFF8);
                          long long v328 = (void *)((v418 + (((unint64_t)v323 + v428) & v460)) & 0xFFFFFFFFFFFFFFF8);
                          *long long v327 = *v328;
                          *(_OWORD *)(((unint64_t)v327 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8);
                          goto LABEL_285;
                        }
                      }
                      else
                      {
                        uint64_t v324 = *v323;
                        if (*v323 >= 0xFFFFFFFFuLL) {
                          LODWORD(v324) = -1;
                        }
                        if ((v324 + 1) < 2) {
                          goto LABEL_284;
                        }
                      }
                    }
                    memcpy(v321, v322, v451);
LABEL_285:
                    *(void *)&v321[v451] = *(void *)&v322[v451];
                    unint64_t v329 = (void *)((unint64_t)&v321[v451 + 15] & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v330 = (void *)((unint64_t)&v322[v451 + 15] & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v329 = *v330;
                    *(void *)(((unint64_t)v329 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v330 + 15) & 0xFFFFFFFFFFFFFFF8);
                    char v151 = 1;
                    goto LABEL_296;
                  }
LABEL_264:
                  size_t v256 = v441;
                  goto LABEL_270;
                }
                unint64_t v156 = (v457 + ((unint64_t)&a2[v454] & v470)) & v472;
                unint64_t v157 = (v458 + v156) & v479;
                if (v440 == v455)
                {
                  if (v417 == v440)
                  {
                    int v142 = (*(uint64_t (**)(unint64_t))(v443 + 48))((v458 + v156) & v479);
                    goto LABEL_262;
                  }
                  long long v177 = (unint64_t *)((v442 + v157) & 0xFFFFFFFFFFFFFFF8);
                  if (v411 > 0x7FFFFFFE)
                  {
                    int v142 = (*(uint64_t (**)(unint64_t))(v434 + 48))(((unint64_t)v177 + v433) & v462);
                    goto LABEL_262;
                  }
                  unint64_t v178 = *v177;
                }
                else
                {
                  unint64_t v166 = v448 + v157;
                  if ((v416 & 0x80000000) == 0)
                  {
                    unint64_t v167 = *(void *)(v166 + 8);
                    if (v167 >= 0xFFFFFFFF) {
                      LODWORD(v167) = -1;
                    }
                    int v142 = v167 + 1;
                    goto LABEL_262;
                  }
                  uint64_t v182 = (v437 + ((v436 + v166) & v464)) & v55;
                  if (v419 > 0x7FFFFFFD)
                  {
                    int v142 = (*(uint64_t (**)(uint64_t))(v447 + 48))(v182);
                    goto LABEL_262;
                  }
                  unint64_t v178 = *(void *)(((v415 + ((v431 + v182) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
                }
                if (v178 >= 0xFFFFFFFF) {
                  LODWORD(v178) = -1;
                }
                long long v250 = (void *)((unint64_t)&a1[v454] & v470);
                if ((v178 + 1) >= 2) {
                  goto LABEL_263;
                }
                goto LABEL_266;
              case 2u:
                int v143 = v35;
                (*(void (**)(unsigned __int8 *))(v134 + 32))(a1);
                uint64_t v144 = (void *)((unint64_t)&a1[v422] & v465);
                int v145 = (const void *)((unint64_t)&a2[v422] & v465);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v452 + 48))(v145, 1, v450))
                {
                  memcpy(v144, v145, __n);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v452 + 32))(v144, v145, v450);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v452 + 56))(v144, 0, 1, v450);
                }
                unsigned int v160 = (char *)(((unint64_t)v144 + v37) & v467);
                uint64_t v161 = (char *)(((unint64_t)v145 + v37) & v467);
                if (v469 == v143)
                {
                  if (!(*(unsigned int (**)(char *))(v445 + 48))(v161)) {
                    goto LABEL_236;
                  }
                }
                else
                {
                  uint64_t v162 = (void *)((unint64_t)&v161[v449] & 0xFFFFFFFFFFFFFFF8);
                  if (v420 > 0x7FFFFFFE)
                  {
                    if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v429 + 48))(((unint64_t)v162 + v428) & v460, v412, v430))
                    {
LABEL_236:
                      uint64_t v162 = (void *)((unint64_t)&v161[v449] & 0xFFFFFFFFFFFFFFF8);
LABEL_237:
                      (*(void (**)(char *, char *, uint64_t))(v445 + 32))(v160, v161, v446);
                      unint64_t v170 = (void *)((unint64_t)&v160[v449] & 0xFFFFFFFFFFFFFFF8);
                      *unint64_t v170 = *v162;
                      unint64_t v171 = ((unint64_t)v170 + v428) & v460;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v429 + 32))(v171, ((unint64_t)v162 + v428) & v460, v430);
                      uint64_t v172 = (void *)((v418 + v171) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v173 = (void *)((v418 + (((unint64_t)v162 + v428) & v460)) & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v172 = *v173;
                      *(_OWORD *)(((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8);
                      goto LABEL_238;
                    }
                  }
                  else
                  {
                    uint64_t v163 = *v162;
                    if (*v162 >= 0xFFFFFFFFuLL) {
                      LODWORD(v163) = -1;
                    }
                    if ((v163 + 1) < 2) {
                      goto LABEL_237;
                    }
                  }
                }
                memcpy(v160, v161, v451);
LABEL_238:
                unint64_t v174 = &v160[v451];
                *unint64_t v174 = v161[v451];
                *((void *)v174 + 1) = *(void *)&v161[v451 + 8];
                char v151 = 2;
LABEL_296:
                a1[v45] = v151;
                return a1;
              case 3u:
                uint64_t v146 = *(void (**)(unsigned __int8 *))(v134 + 32);
                v146(a1);
                unint64_t v147 = (void *)((unint64_t)&a1[v454] & v470);
                unint64_t v148 = (const void *)((unint64_t)&a2[v454] & v470);
                if (v456 == v455)
                {
                  int v149 = (*(uint64_t (**)(unint64_t))(v134 + 48))((unint64_t)&a2[v454] & v470);
                  uint64_t v150 = v447;
LABEL_287:
                  if (v149)
                  {
LABEL_288:
                    memcpy(v147, v148, v453);
                    unint64_t v332 = v438;
                    uint64_t v331 = v439;
LABEL_289:
                    size_t v333 = v441;
LABEL_295:
                    unint64_t v394 = ((((v331
                             + ((((((((((v332 + v333 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    unint64_t v395 = (_OWORD *)(((unint64_t)v147 + v394) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v396 = (_OWORD *)(((unint64_t)v148 + v394) & 0xFFFFFFFFFFFFFFF8);
                    *unint64_t v395 = *v396;
                    *(void *)(((unint64_t)v395 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v396 + 23) & 0xFFFFFFFFFFFFFFF8);
                    char v151 = 3;
                    goto LABEL_296;
                  }
                  unint64_t v158 = ((unint64_t)v148 + v457) & v472;
                  unint64_t v159 = (v458 + v158) & v479;
LABEL_291:
                  ((void (*)(void *, const void *, uint64_t))v146)(v147, v148, AssociatedTypeWitness);
                  ((void (*)(unint64_t, unint64_t, uint64_t))v146)(((unint64_t)v147 + v457) & v472, v158, AssociatedTypeWitness);
                  unint64_t v334 = (v458 + (((unint64_t)v147 + v457) & v472)) & v479;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v443 + 32))(v334, v159, v444);
                  long long v335 = (void *)((v442 + v334) & 0xFFFFFFFFFFFFFFF8);
                  long long v336 = (void *)((v442 + v159) & 0xFFFFFFFFFFFFFFF8);
                  *long long v335 = *v336;
                  unint64_t v337 = ((unint64_t)v335 + v433) & v462;
                  unint64_t v338 = ((unint64_t)v336 + v433) & v462;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v434 + 32))(v337, v338, v435);
                  long long v339 = (void *)((v424 + v337) & 0xFFFFFFFFFFFFFFF8);
                  long long v340 = (void *)((v424 + v338) & 0xFFFFFFFFFFFFFFF8);
                  *long long v339 = *v340;
                  *(_OWORD *)(((unint64_t)v339 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v340
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *(_OWORD *)(v448 + v334) = *(_OWORD *)(v448 + v159);
                  unint64_t v341 = (v436 + v448 + v334) & v464;
                  unint64_t v342 = (v436 + v448 + v159) & v464;
                  *(unsigned char *)unint64_t v341 = *(unsigned char *)v342;
                  uint64_t v343 = v341 | 4;
                  int v344 = *(_DWORD *)(v342 | 4);
                  *(unsigned char *)(v343 + 4) = *(unsigned char *)((v342 | 4) + 4);
                  *(_DWORD *)uint64_t v343 = v344;
                  *(_WORD *)(v341 + 10) = *(_WORD *)(v342 + 0xA);
                  long long v345 = *(void (**)(unint64_t, unint64_t, uint64_t))(v150 + 32);
                  v345((v437 + v341) & v55, (v437 + v342) & v55, v432);
                  unint64_t v346 = (v431 + ((v437 + v341) & v55)) & v55;
                  unint64_t v347 = (v431 + ((v437 + v342) & v55)) & v55;
                  v345(v346, v347, v432);
                  unint64_t v348 = (unsigned char *)(v346 + v423);
                  *unint64_t v348 = *(unsigned char *)(v347 + v423);
                  v348[1] = *(unsigned char *)(v347 + v423 + 1);
                  v348[2] = *(unsigned char *)(v347 + v423 + 2);
                  v348[3] = *(unsigned char *)(v347 + v423 + 3);
                  v348[4] = *(unsigned char *)(v347 + v423 + 4);
                  unint64_t v349 = (v346 + v423 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v350 = (v347 + v423 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)unint64_t v349 = *(_OWORD *)v350;
                  *(unsigned char *)(v349 + 16) = *(unsigned char *)(v350 + 16);
                  *(unsigned char *)(v349 + 17) = *(unsigned char *)(v350 + 17);
                  *(unsigned char *)(v349 + 18) = *(unsigned char *)(v350 + 18);
                  *(unsigned char *)(v349 + 19) = *(unsigned char *)(v350 + 19);
                  unint64_t v351 = (v349 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v352 = (v350 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v351 = *(void *)v352;
                  *(unsigned char *)(v351 + 8) = *(unsigned char *)(v352 + 8);
                  *(unsigned char *)(v351 + 9) = *(unsigned char *)(v352 + 9);
                  *(unsigned char *)(v351 + 10) = *(unsigned char *)(v352 + 10);
                  *(unsigned char *)(v351 + 11) = *(unsigned char *)(v352 + 11);
                  *(unsigned char *)(v351 + 12) = *(unsigned char *)(v352 + 12);
                  unint64_t v353 = (void *)((v350 + 47) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v354 = (void *)((v349 + 47) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v354 = *v353;
                  unint64_t v355 = ((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v356 = ((unint64_t)v353 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v355 = *(void *)v356;
                  *(unsigned char *)(v355 + 8) = *(unsigned char *)(v356 + 8);
                  *(unsigned char *)(v355 + 9) = *(unsigned char *)(v356 + 9);
                  unint64_t v357 = (void *)((v425 + v355) & v55);
                  uint64_t v358 = (const void *)((v425 + v356) & v55);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v150 + 48))(v358, 1, v432))
                  {
                    memcpy(v357, v358, v441);
                  }
                  else
                  {
                    v345((unint64_t)v357, (unint64_t)v358, v432);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v150 + 56))(v357, 0, 1, v432);
                  }
                  unint64_t v332 = v438;
                  uint64_t v331 = v439;
                  size_t v333 = v423;
                  unint64_t v148 = (const void *)((unint64_t)&a2[v454] & v470);
                  unint64_t v147 = (void *)((unint64_t)&a1[v454] & v470);
                  int v359 = (void *)(((unint64_t)v357 + v426) & 0xFFFFFFFFFFFFFFF8);
                  unsigned int v360 = (void *)(((unint64_t)v358 + v426) & 0xFFFFFFFFFFFFFFF8);
                  *int v359 = *v360;
                  unint64_t v361 = ((unint64_t)v359 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v362 = ((unint64_t)v360 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v363 = *(void *)v362;
                  *(unsigned char *)(v361 + 8) = *(unsigned char *)(v362 + 8);
                  *(void *)unint64_t v361 = v363;
                  uint64_t v364 = (void *)(((unint64_t)v359 + 31) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v365 = (void *)(((unint64_t)v360 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v364 = *v365;
                  size_t v366 = (_OWORD *)(((unint64_t)v364 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unsigned int v367 = (_OWORD *)(((unint64_t)v365 + 15) & 0xFFFFFFFFFFFFFFF8);
                  _OWORD *v366 = *v367;
                  unint64_t v368 = ((unint64_t)v366 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v369 = ((unint64_t)v367 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v370 = *(void *)v369;
                  *(unsigned char *)(v368 + 8) = *(unsigned char *)(v369 + 8);
                  *(void *)unint64_t v368 = v370;
                  *(unsigned char *)(v368 + 9) = *(unsigned char *)(v369 + 9);
                  unint64_t v371 = (v368 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v372 = (v369 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  LODWORD(v363) = *(_DWORD *)v372;
                  *(unsigned char *)(v371 + 4) = *(unsigned char *)(v372 + 4);
                  *(_DWORD *)unint64_t v371 = v363;
                  *(_OWORD *)((v368 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v369 + 25) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v373 = v427 + v341;
                  long long v374 = *(_OWORD *)(v427 + v342 + 112);
                  long long v376 = *(_OWORD *)(v427 + v342 + 64);
                  long long v375 = *(_OWORD *)(v427 + v342 + 80);
                  *(_OWORD *)(v373 + 96) = *(_OWORD *)(v427 + v342 + 96);
                  *(_OWORD *)(v373 + 112) = v374;
                  *(_OWORD *)(v373 + 64) = v376;
                  *(_OWORD *)(v373 + 80) = v375;
                  long long v377 = *(_OWORD *)(v427 + v342 + 176);
                  long long v379 = *(_OWORD *)(v427 + v342 + 128);
                  long long v378 = *(_OWORD *)(v427 + v342 + 144);
                  *(_OWORD *)(v373 + 160) = *(_OWORD *)(v427 + v342 + 160);
                  *(_OWORD *)(v373 + 176) = v377;
                  *(_OWORD *)(v373 + 128) = v379;
                  *(_OWORD *)(v373 + 144) = v378;
                  long long v381 = *(_OWORD *)(v427 + v342 + 208);
                  long long v380 = *(_OWORD *)(v427 + v342 + 224);
                  long long v382 = *(_OWORD *)(v427 + v342 + 192);
                  *(void *)(v373 + 240) = *(void *)(v427 + v342 + 240);
                  *(_OWORD *)(v373 + 208) = v381;
                  *(_OWORD *)(v373 + 224) = v380;
                  *(_OWORD *)(v373 + 192) = v382;
                  long long v383 = *(_OWORD *)(v427 + v342);
                  long long v384 = *(_OWORD *)(v427 + v342 + 16);
                  long long v385 = *(_OWORD *)(v427 + v342 + 48);
                  *(_OWORD *)(v373 + 32) = *(_OWORD *)(v427 + v342 + 32);
                  *(_OWORD *)(v373 + 48) = v385;
                  *(_OWORD *)unint64_t v373 = v383;
                  *(_OWORD *)(v373 + 16) = v384;
                  uint64_t v386 = (_OWORD *)((v427 + v341 + 255) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v387 = (long long *)((v427 + v342 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v388 = *v387;
                  *(_OWORD *)((char *)v386 + 9) = *(long long *)((char *)v387 + 9);
                  *uint64_t v386 = v388;
                  unint64_t v389 = (v427 + v341 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v390 = (v427 + v342 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v391 = *(_OWORD *)v390;
                  *(unsigned char *)(v389 + 16) = *(unsigned char *)(v390 + 16);
                  *(_OWORD *)unint64_t v389 = v391;
                  uint64_t v392 = (void *)((v427 + v341 + 311) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v393 = (void *)((v427 + v342 + 311) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v392 = *v393;
                  *(_OWORD *)(((unint64_t)v392 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v393
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  if (v419) {
                    goto LABEL_295;
                  }
                  goto LABEL_289;
                }
                unint64_t v158 = ((unint64_t)v148 + v457) & v472;
                unint64_t v159 = (v458 + v158) & v479;
                uint64_t v150 = v447;
                if (v440 == v455)
                {
                  if (v417 == v440)
                  {
                    int v149 = (*(uint64_t (**)(unint64_t))(v443 + 48))((v458 + v158) & v479);
                    goto LABEL_287;
                  }
                  long long v179 = (unint64_t *)((v442 + v159) & 0xFFFFFFFFFFFFFFF8);
                  if (v411 > 0x7FFFFFFE)
                  {
                    int v149 = (*(uint64_t (**)(unint64_t))(v434 + 48))(((unint64_t)v179 + v433) & v462);
                    goto LABEL_287;
                  }
                  unint64_t v180 = *v179;
                }
                else
                {
                  unint64_t v168 = v448 + v159;
                  if ((v416 & 0x80000000) == 0)
                  {
                    unint64_t v169 = *(void *)(v168 + 8);
                    if (v169 >= 0xFFFFFFFF) {
                      LODWORD(v169) = -1;
                    }
                    int v149 = v169 + 1;
                    goto LABEL_287;
                  }
                  uint64_t v183 = (v437 + ((v436 + v168) & v464)) & v55;
                  if (v419 > 0x7FFFFFFD)
                  {
                    int v149 = (*(uint64_t (**)(uint64_t))(v447 + 48))(v183);
                    goto LABEL_287;
                  }
                  unint64_t v180 = *(void *)(((v415 + ((v431 + v183) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
                }
                if (v180 >= 0xFFFFFFFF) {
                  LODWORD(v180) = -1;
                }
                if ((v180 + 1) >= 2) {
                  goto LABEL_288;
                }
                goto LABEL_291;
              case 4u:
                (*(void (**)(unsigned __int8 *))(v134 + 32))(a1);
                char v151 = 4;
                goto LABEL_296;
              case 5u:
                (*(void (**)(unsigned __int8 *))(v134 + 32))(a1);
                char v151 = 5;
                goto LABEL_296;
              case 6u:
                (*(void (**)(unsigned __int8 *))(v134 + 32))(a1);
                unint64_t v152 = (void *)((unint64_t)&a1[v421] & v413);
                unint64_t v153 = (const void *)((unint64_t)&a2[v421] & v413);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v39 + 48))(v153, 1, v474))
                {
                  memcpy(v152, v153, v410);
                }
                else
                {
                  (*(void (**)(void *, const void *, uint64_t))(v39 + 32))(v152, v153, v474);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v39 + 56))(v152, 0, 1, v474);
                }
                char v151 = 6;
                goto LABEL_296;
              case 7u:
                (*(void (**)(unsigned __int8 *))(v134 + 32))(a1);
                char v151 = 7;
                goto LABEL_296;
              default:
                unint64_t v136 = *(void (**)(unsigned __int8 *))(v134 + 32);
                v136(a1);
                char v137 = (void *)((unint64_t)&a1[v454] & v470);
                unint64_t v138 = (const void *)((unint64_t)&a2[v454] & v470);
                if (v456 == v455)
                {
                  int v139 = (*(uint64_t (**)(unint64_t))(v134 + 48))((unint64_t)&a2[v454] & v470);
                  uint64_t v140 = v447;
LABEL_252:
                  if (v139)
                  {
LABEL_253:
                    memcpy(v137, v138, v453);
                    unint64_t v185 = v438;
                    uint64_t v184 = v439;
LABEL_254:
                    size_t v186 = v441;
LABEL_260:
                    char v151 = 0;
                    unint64_t v247 = ((((v184
                             + ((((((((((v185 + v186 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    unint64_t v248 = (void *)(((unint64_t)v137 + v247) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v249 = (void *)(((unint64_t)v138 + v247) & 0xFFFFFFFFFFFFFFF8);
                    void *v248 = *v249;
                    *(void *)(((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
                    goto LABEL_296;
                  }
                  unint64_t v154 = ((unint64_t)v138 + v457) & v472;
                  unint64_t v155 = (v458 + v154) & v479;
LABEL_256:
                  ((void (*)(void *, const void *, uint64_t))v136)(v137, v138, AssociatedTypeWitness);
                  ((void (*)(unint64_t, unint64_t, uint64_t))v136)(((unint64_t)v137 + v457) & v472, v154, AssociatedTypeWitness);
                  unint64_t v187 = (v458 + (((unint64_t)v137 + v457) & v472)) & v479;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v443 + 32))(v187, v155, v444);
                  unint64_t v188 = (void *)((v442 + v187) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v189 = (void *)((v442 + v155) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v188 = *v189;
                  unint64_t v190 = ((unint64_t)v188 + v433) & v462;
                  unint64_t v191 = ((unint64_t)v189 + v433) & v462;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v434 + 32))(v190, v191, v435);
                  unint64_t v192 = (void *)((v424 + v190) & 0xFFFFFFFFFFFFFFF8);
                  long long v193 = (void *)((v424 + v191) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v192 = *v193;
                  *(_OWORD *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v193
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *(_OWORD *)(v448 + v187) = *(_OWORD *)(v448 + v155);
                  unint64_t v194 = (v436 + v448 + v187) & v464;
                  unint64_t v195 = (v436 + v448 + v155) & v464;
                  *(unsigned char *)unint64_t v194 = *(unsigned char *)v195;
                  uint64_t v196 = v194 | 4;
                  int v197 = *(_DWORD *)(v195 | 4);
                  *(unsigned char *)(v196 + 4) = *(unsigned char *)((v195 | 4) + 4);
                  *(_DWORD *)uint64_t v196 = v197;
                  *(_WORD *)(v194 + 10) = *(_WORD *)(v195 + 0xA);
                  long long v198 = *(void (**)(unint64_t, unint64_t, uint64_t))(v140 + 32);
                  v198((v437 + v194) & v55, (v437 + v195) & v55, v432);
                  unint64_t v199 = (v431 + ((v437 + v194) & v55)) & v55;
                  unint64_t v200 = (v431 + ((v437 + v195) & v55)) & v55;
                  v198(v199, v200, v432);
                  uint64_t v201 = (unsigned char *)(v199 + v423);
                  *uint64_t v201 = *(unsigned char *)(v200 + v423);
                  v201[1] = *(unsigned char *)(v200 + v423 + 1);
                  v201[2] = *(unsigned char *)(v200 + v423 + 2);
                  v201[3] = *(unsigned char *)(v200 + v423 + 3);
                  v201[4] = *(unsigned char *)(v200 + v423 + 4);
                  unint64_t v202 = (v199 + v423 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v203 = (v200 + v423 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(_OWORD *)unint64_t v202 = *(_OWORD *)v203;
                  *(unsigned char *)(v202 + 16) = *(unsigned char *)(v203 + 16);
                  *(unsigned char *)(v202 + 17) = *(unsigned char *)(v203 + 17);
                  *(unsigned char *)(v202 + 18) = *(unsigned char *)(v203 + 18);
                  *(unsigned char *)(v202 + 19) = *(unsigned char *)(v203 + 19);
                  unint64_t v204 = (v202 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v205 = (v203 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v204 = *(void *)v205;
                  *(unsigned char *)(v204 + 8) = *(unsigned char *)(v205 + 8);
                  *(unsigned char *)(v204 + 9) = *(unsigned char *)(v205 + 9);
                  *(unsigned char *)(v204 + 10) = *(unsigned char *)(v205 + 10);
                  *(unsigned char *)(v204 + 11) = *(unsigned char *)(v205 + 11);
                  *(unsigned char *)(v204 + 12) = *(unsigned char *)(v205 + 12);
                  unint64_t v206 = (void *)((v203 + 47) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v207 = (void *)((v202 + 47) & 0xFFFFFFFFFFFFFFF8);
                  void *v207 = *v206;
                  unint64_t v208 = ((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v209 = ((unint64_t)v206 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v208 = *(void *)v209;
                  *(unsigned char *)(v208 + 8) = *(unsigned char *)(v209 + 8);
                  *(unsigned char *)(v208 + 9) = *(unsigned char *)(v209 + 9);
                  unint64_t v210 = (void *)((v425 + v208) & v55);
                  unint64_t v211 = (const void *)((v425 + v209) & v55);
                  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v140 + 48))(v211, 1, v432))
                  {
                    memcpy(v210, v211, v441);
                  }
                  else
                  {
                    v198((unint64_t)v210, (unint64_t)v211, v432);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v140 + 56))(v210, 0, 1, v432);
                  }
                  unint64_t v185 = v438;
                  uint64_t v184 = v439;
                  size_t v186 = v423;
                  unint64_t v138 = (const void *)((unint64_t)&a2[v454] & v470);
                  char v137 = (void *)((unint64_t)&a1[v454] & v470);
                  unint64_t v212 = (void *)(((unint64_t)v210 + v426) & 0xFFFFFFFFFFFFFFF8);
                  size_t v213 = (void *)(((unint64_t)v211 + v426) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v212 = *v213;
                  unint64_t v214 = ((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v215 = ((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v216 = *(void *)v215;
                  *(unsigned char *)(v214 + 8) = *(unsigned char *)(v215 + 8);
                  *(void *)unint64_t v214 = v216;
                  uint64_t v217 = (void *)(((unint64_t)v212 + 31) & 0xFFFFFFFFFFFFFFF8);
                  int v218 = (void *)(((unint64_t)v213 + 31) & 0xFFFFFFFFFFFFFFF8);
                  void *v217 = *v218;
                  unint64_t v219 = (_OWORD *)(((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v220 = (_OWORD *)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v219 = *v220;
                  unint64_t v221 = ((unint64_t)v219 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v222 = ((unint64_t)v220 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v223 = *(void *)v222;
                  *(unsigned char *)(v221 + 8) = *(unsigned char *)(v222 + 8);
                  *(void *)unint64_t v221 = v223;
                  *(unsigned char *)(v221 + 9) = *(unsigned char *)(v222 + 9);
                  unint64_t v224 = (v221 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v225 = (v222 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  LODWORD(v216) = *(_DWORD *)v225;
                  *(unsigned char *)(v224 + 4) = *(unsigned char *)(v225 + 4);
                  *(_DWORD *)unint64_t v224 = v216;
                  *(_OWORD *)((v221 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v222 + 25) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v226 = v427 + v194;
                  long long v227 = *(_OWORD *)(v427 + v195 + 112);
                  long long v229 = *(_OWORD *)(v427 + v195 + 64);
                  long long v228 = *(_OWORD *)(v427 + v195 + 80);
                  *(_OWORD *)(v226 + 96) = *(_OWORD *)(v427 + v195 + 96);
                  *(_OWORD *)(v226 + 112) = v227;
                  *(_OWORD *)(v226 + 64) = v229;
                  *(_OWORD *)(v226 + 80) = v228;
                  long long v230 = *(_OWORD *)(v427 + v195 + 176);
                  long long v232 = *(_OWORD *)(v427 + v195 + 128);
                  long long v231 = *(_OWORD *)(v427 + v195 + 144);
                  *(_OWORD *)(v226 + 160) = *(_OWORD *)(v427 + v195 + 160);
                  *(_OWORD *)(v226 + 176) = v230;
                  *(_OWORD *)(v226 + 128) = v232;
                  *(_OWORD *)(v226 + 144) = v231;
                  long long v234 = *(_OWORD *)(v427 + v195 + 208);
                  long long v233 = *(_OWORD *)(v427 + v195 + 224);
                  long long v235 = *(_OWORD *)(v427 + v195 + 192);
                  *(void *)(v226 + 240) = *(void *)(v427 + v195 + 240);
                  *(_OWORD *)(v226 + 208) = v234;
                  *(_OWORD *)(v226 + 224) = v233;
                  *(_OWORD *)(v226 + 192) = v235;
                  long long v236 = *(_OWORD *)(v427 + v195);
                  long long v237 = *(_OWORD *)(v427 + v195 + 16);
                  long long v238 = *(_OWORD *)(v427 + v195 + 48);
                  *(_OWORD *)(v226 + 32) = *(_OWORD *)(v427 + v195 + 32);
                  *(_OWORD *)(v226 + 48) = v238;
                  *(_OWORD *)unint64_t v226 = v236;
                  *(_OWORD *)(v226 + 16) = v237;
                  uint64_t v239 = (_OWORD *)((v427 + v194 + 255) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v240 = (long long *)((v427 + v195 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v241 = *v240;
                  *(_OWORD *)((char *)v239 + 9) = *(long long *)((char *)v240 + 9);
                  *uint64_t v239 = v241;
                  unint64_t v242 = (v427 + v194 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v243 = (v427 + v195 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v244 = *(_OWORD *)v243;
                  *(unsigned char *)(v242 + 16) = *(unsigned char *)(v243 + 16);
                  *(_OWORD *)unint64_t v242 = v244;
                  unint64_t v245 = (void *)((v427 + v194 + 311) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v246 = (void *)((v427 + v195 + 311) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v245 = *v246;
                  *(_OWORD *)(((unint64_t)v245 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v246
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
                  if (v419) {
                    goto LABEL_260;
                  }
                  goto LABEL_254;
                }
                unint64_t v154 = ((unint64_t)v138 + v457) & v472;
                unint64_t v155 = (v458 + v154) & v479;
                uint64_t v140 = v447;
                if (v440 == v455)
                {
                  if (v417 == v440)
                  {
                    int v139 = (*(uint64_t (**)(unint64_t))(v443 + 48))((v458 + v154) & v479);
                    goto LABEL_252;
                  }
                  unint64_t v175 = (unint64_t *)((v442 + v155) & 0xFFFFFFFFFFFFFFF8);
                  if (v411 > 0x7FFFFFFE)
                  {
                    int v139 = (*(uint64_t (**)(unint64_t))(v434 + 48))(((unint64_t)v175 + v433) & v462);
                    goto LABEL_252;
                  }
                  unint64_t v176 = *v175;
                }
                else
                {
                  unint64_t v164 = v448 + v155;
                  if ((v416 & 0x80000000) == 0)
                  {
                    unint64_t v165 = *(void *)(v164 + 8);
                    if (v165 >= 0xFFFFFFFF) {
                      LODWORD(v165) = -1;
                    }
                    int v139 = v165 + 1;
                    goto LABEL_252;
                  }
                  uint64_t v181 = (v437 + ((v436 + v164) & v464)) & v55;
                  if (v419 > 0x7FFFFFFD)
                  {
                    int v139 = (*(uint64_t (**)(uint64_t))(v447 + 48))(v181);
                    goto LABEL_252;
                  }
                  unint64_t v176 = *(void *)(((v415 + ((v431 + v181) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
                }
                if (v176 >= 0xFFFFFFFF) {
                  LODWORD(v176) = -1;
                }
                if ((v176 + 1) >= 2) {
                  goto LABEL_253;
                }
                goto LABEL_256;
            }
          }
          unint64_t v99 = *(uint64_t (**)(unint64_t))(v447 + 48);
        }
        int v66 = v99(v98);
        unint64_t v65 = (unint64_t)&a1[v454] & v470;
        goto LABEL_130;
      case 2u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v476 + 8))(a1, v49);
        unint64_t v67 = (unint64_t)&a1[v422] & v465;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v452 + 48))(v67, 1, v450)) {
          (*(void (**)(unint64_t, uint64_t))(v452 + 8))(v67, v450);
        }
        unint64_t v68 = (v37 + v67) & v467;
        if (v469 == v35)
        {
          if ((*(unsigned int (**)(unint64_t))(v445 + 48))(v68)) {
            goto LABEL_95;
          }
        }
        else
        {
          unsigned int v78 = (uint64_t *)((v449 + v68) & 0xFFFFFFFFFFFFFFF8);
          if (v420 <= 0x7FFFFFFE)
          {
            uint64_t v79 = *v78;
            if ((unint64_t)*v78 >= 0xFFFFFFFF) {
              LODWORD(v79) = -1;
            }
            if ((v79 + 1) >= 2)
            {
LABEL_95:

              goto LABEL_174;
            }
LABEL_94:
            (*(void (**)(unint64_t, uint64_t))(v445 + 8))(v68, v446);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v429 + 8))(((unint64_t)v78 + v428) & v460, v430);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            goto LABEL_95;
          }
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v429 + 48))(((unint64_t)v78 + v428) & v460, v412, v430))
          {
            goto LABEL_95;
          }
        }
        unsigned int v78 = (uint64_t *)((v449 + v68) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_94;
      case 3u:
        unint64_t v403 = v45;
        uint64_t v69 = v27 + v32;
        int v407 = v35;
        uint64_t v70 = *(void (**)(unsigned __int8 *, uint64_t))(v476 + 8);
        v70(a1, v49);
        unint64_t v71 = (unint64_t)&a1[v454] & v470;
        if (v456 == v455)
        {
          int v72 = (*(uint64_t (**)(unint64_t))(v476 + 48))((unint64_t)&a1[v454] & v470);
          unint64_t v71 = (unint64_t)&a1[v454] & v470;
          uint64_t v37 = v69;
LABEL_159:
          unint64_t v45 = v403;
          if (v72)
          {
LABEL_172:
            swift_bridgeObjectRelease();
            goto LABEL_173;
          }
          unint64_t v80 = (v457 + v71) & v472;
          unint64_t v81 = (v458 + v80) & v479;
LABEL_161:
          uint64_t v406 = v26;
          v70((unsigned __int8 *)v71, AssociatedTypeWitness);
          v70((unsigned __int8 *)v80, AssociatedTypeWitness);
          (*(void (**)(unint64_t, uint64_t))(v443 + 8))(v81, v444);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v434 + 8))((v433 + ((v442 + v81) & 0xFFFFFFFFFFFFFFF8)) & v462, v435);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v122 = (v436 + v448 + v81) & v464;
          unint64_t v123 = *(void (**)(unint64_t, uint64_t))(v447 + 8);
          v123((v437 + v122) & v55, v432);
          unint64_t v124 = (v431 + ((v437 + v122) & v55)) & v55;
          v123(v124, v432);
          swift_bridgeObjectRelease();
          unint64_t v125 = (v425
                + ((((((v415 + v124) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v447 + 48))(v125, 1, v432)) {
            v123(v125, v432);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v126 = (uint64_t *)((((((v426 + v125) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v127 = v126[1];
          if ((v127 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v126, v127);
          }
          swift_bridgeObjectRelease();
          unint64_t v128 = v427 + v122;
          int v129 = *(void **)(v427 + v122 + 16);
          LODWORD(v130) = -1;
          if ((unint64_t)v129 < 0xFFFFFFFF) {
            uint64_t v130 = *(void *)(v427 + v122 + 16);
          }
          uint64_t v26 = v406;
          if ((int)v130 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v128 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v128 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v128 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          goto LABEL_172;
        }
        unint64_t v80 = (v457 + v71) & v472;
        unint64_t v81 = (v458 + v80) & v479;
        if (v440 == v455)
        {
          if (v417 == v440)
          {
            int v72 = (*(uint64_t (**)(unint64_t))(v443 + 48))((v458 + v80) & v479);
            unint64_t v71 = (unint64_t)&a1[v454] & v470;
            uint64_t v37 = v69;
            goto LABEL_159;
          }
          unint64_t v92 = (unint64_t *)((v442 + v81) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v37 = v69;
          if (v411 <= 0x7FFFFFFE)
          {
            unint64_t v93 = *v92;
            goto LABEL_299;
          }
          unint64_t v94 = ((unint64_t)v92 + v433) & v462;
          unint64_t v95 = *(uint64_t (**)(unint64_t))(v434 + 48);
        }
        else
        {
          unint64_t v86 = v448 + v81;
          if ((v416 & 0x80000000) == 0)
          {
            unint64_t v87 = *(void *)(v86 + 8);
            if (v87 >= 0xFFFFFFFF) {
              LODWORD(v87) = -1;
            }
            int v72 = v87 + 1;
            uint64_t v37 = v69;
            goto LABEL_159;
          }
          unint64_t v94 = (v437 + ((v436 + v86) & v464)) & v55;
          uint64_t v37 = v69;
          if (v419 <= 0x7FFFFFFD)
          {
            unint64_t v93 = *(void *)(((v415 + ((v431 + v94) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_299:
            if (v93 >= 0xFFFFFFFF) {
              LODWORD(v93) = -1;
            }
            unint64_t v45 = v403;
            if ((v93 + 1) >= 2) {
              goto LABEL_172;
            }
            goto LABEL_161;
          }
          unint64_t v95 = *(uint64_t (**)(unint64_t))(v447 + 48);
        }
        int v72 = v95(v94);
        unint64_t v71 = (unint64_t)&a1[v454] & v470;
        goto LABEL_159;
      case 4u:
      case 5u:
      case 7u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v476 + 8))(a1, v49);
        goto LABEL_174;
      case 6u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v476 + 8))(a1, v49);
        unint64_t v73 = (unint64_t)&a1[v421] & v56;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v39 + 48))(v73, 1, v474)) {
          (*(void (**)(unint64_t, uint64_t))(v39 + 8))(v73, v474);
        }
        goto LABEL_174;
      default:
        unint64_t v401 = v45;
        uint64_t v57 = v27 + v32;
        int v407 = v35;
        uint64_t v58 = *(void (**)(unsigned __int8 *, uint64_t))(v476 + 8);
        v58(a1, v49);
        unint64_t v59 = (unint64_t)&a1[v454];
        unint64_t v60 = (unint64_t)&a1[v454] & v470;
        if (v456 == v455)
        {
          unint64_t v61 = v59 & v470;
          int v62 = (*(uint64_t (**)(unint64_t))(v476 + 48))(v59 & v470);
          unint64_t v60 = v61;
          uint64_t v37 = v57;
LABEL_114:
          unint64_t v45 = v401;
          if (v62) {
            goto LABEL_127;
          }
          unint64_t v74 = (v457 + v60) & v472;
          unint64_t v75 = (v458 + v74) & v479;
          goto LABEL_116;
        }
        unint64_t v74 = (v457 + v60) & v472;
        unint64_t v75 = (v458 + v74) & v479;
        if (v440 == v455)
        {
          if (v417 == v440)
          {
            int v62 = (*(uint64_t (**)(unint64_t))(v443 + 48))((v458 + v74) & v479);
            unint64_t v60 = (unint64_t)&a1[v454] & v470;
            uint64_t v37 = v57;
            goto LABEL_114;
          }
          size_t v88 = (unint64_t *)((v442 + v75) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v37 = v57;
          if (v411 <= 0x7FFFFFFE)
          {
            unint64_t v89 = *v88;
            goto LABEL_304;
          }
          unint64_t v96 = ((unint64_t)v88 + v433) & v462;
          unint64_t v97 = *(uint64_t (**)(unint64_t))(v434 + 48);
        }
        else
        {
          unint64_t v82 = v448 + v75;
          if ((v416 & 0x80000000) == 0)
          {
            unint64_t v83 = *(void *)(v82 + 8);
            if (v83 >= 0xFFFFFFFF) {
              LODWORD(v83) = -1;
            }
            int v62 = v83 + 1;
            uint64_t v37 = v57;
            goto LABEL_114;
          }
          unint64_t v96 = (v437 + ((v436 + v82) & v464)) & v55;
          uint64_t v37 = v57;
          if (v419 <= 0x7FFFFFFD)
          {
            unint64_t v89 = *(void *)(((v415 + ((v431 + v96) & v55)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_304:
            if (v89 >= 0xFFFFFFFF) {
              LODWORD(v89) = -1;
            }
            unint64_t v45 = v401;
            if ((v89 + 1) >= 2)
            {
LABEL_127:

LABEL_173:
              uint64_t v49 = AssociatedTypeWitness;
              int v35 = v407;
              goto LABEL_174;
            }
LABEL_116:
            uint64_t v404 = v26;
            unint64_t v399 = v60;
            v58((unsigned __int8 *)v60, AssociatedTypeWitness);
            v58((unsigned __int8 *)v74, AssociatedTypeWitness);
            (*(void (**)(unint64_t, uint64_t))(v443 + 8))(v75, v444);
            swift_bridgeObjectRelease();
            (*(void (**)(unint64_t, uint64_t))(v434 + 8))((v433 + ((v442 + v75) & 0xFFFFFFFFFFFFFFF8)) & v462, v435);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v100 = (v436 + v448 + v75) & v464;
            int v101 = *(void (**)(unint64_t, uint64_t))(v447 + 8);
            v101((v437 + v100) & v55, v432);
            unint64_t v102 = (v431 + ((v437 + v100) & v55)) & v55;
            v101(v102, v432);
            swift_bridgeObjectRelease();
            unint64_t v103 = (v425
                  + ((((((v415 + v102) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v55;
            if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v447 + 48))(v103, 1, v432)) {
              v101(v103, v432);
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v104 = (uint64_t *)((((((v426 + v103) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v105 = v104[1];
            if ((v105 & 0x3000000000000000) == 0) {
              sub_24D400DCC(*v104, v105);
            }
            swift_bridgeObjectRelease();
            unint64_t v106 = v427 + v100;
            unint64_t v107 = *(void **)(v427 + v100 + 16);
            LODWORD(v108) = -1;
            if ((unint64_t)v107 < 0xFFFFFFFF) {
              uint64_t v108 = *(void *)(v427 + v100 + 16);
            }
            uint64_t v26 = v404;
            if ((int)v108 - 1 < 0)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)(v106 + 192))
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            sub_24D466534(*(void *)((((v106 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v106 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            unint64_t v60 = v399;
            goto LABEL_127;
          }
          unint64_t v97 = *(uint64_t (**)(unint64_t))(v447 + 48);
        }
        int v62 = v97(v96);
        unint64_t v60 = (unint64_t)&a1[v454] & v470;
        goto LABEL_114;
    }
  }
  return a1;
}

uint64_t sub_24DA00CC4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_24DCC8CE8() - 8);
  int v13 = *(_DWORD *)(v12 + 80);
  int v47 = *(_DWORD *)(v12 + 84);
  unint64_t v49 = ((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13);
  unint64_t v48 = (((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
       + v13
       + ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (v13 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v14 = *(void *)(v12 + 64);
  unint64_t v45 = (v13
       + ((((((v14
             + ((v14 + v13 + ((v13 + 12) & ~(unint64_t)v13)) & ~(unint64_t)v13)
             + 12) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~(unint64_t)v13;
  uint64_t v15 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  int v17 = *(_DWORD *)(v15 + 84);
  uint64_t v46 = *(void *)(v15 + 64);
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v21 = *(void *)(v3 - 8);
  uint64_t v22 = 7;
  if (!v47) {
    uint64_t v22 = 8;
  }
  uint64_t v23 = *(unsigned __int8 *)(v20 + 80);
  uint64_t v24 = v19 & 0xF8 | v23 | 7;
  unint64_t v25 = ((((*(void *)(v20 + 64) + ((v23 + ((*(void *)(v18 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v26 = v49
      + ((((v48
          + ((((((((((v22 + v14 + v45) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v27 = v26 + v16;
  unint64_t v28 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = (v27 + 16) & ~v16;
  if (v17) {
    uint64_t v30 = v46;
  }
  else {
    uint64_t v30 = v46 + 1;
  }
  uint64_t v31 = v30 + v24;
  unint64_t v32 = ((((((v31 + v29) & ~v24) + v25 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v32 <= ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v32 = ((v28 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v33 = v25 + ((v31 + ((v5 + v16) & ~v16)) & ~v24) + 16;
  if (v33 <= v32) {
    unint64_t v33 = v32;
  }
  if (((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v33) {
    unint64_t v33 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v5 > v33) {
    unint64_t v33 = v5;
  }
  if (*(_DWORD *)(v21 + 84)) {
    uint64_t v34 = *(void *)(*(void *)(v3 - 8) + 64);
  }
  else {
    uint64_t v34 = *(void *)(*(void *)(v3 - 8) + 64) + 1;
  }
  unint64_t v35 = v34 + ((v5 + *(unsigned __int8 *)(v21 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
  if (v35 > v33) {
    unint64_t v33 = v35;
  }
  if (v5 <= v33) {
    unint64_t v36 = v33;
  }
  else {
    unint64_t v36 = v5;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_41;
  }
  unint64_t v37 = v36 + 1;
  char v38 = 8 * (v36 + 1);
  if ((v36 + 1) <= 3)
  {
    unsigned int v41 = ((a2 + ~(-1 << v38) - 248) >> v38) + 1;
    if (HIWORD(v41))
    {
      int v39 = *(_DWORD *)((char *)a1 + v37);
      if (!v39) {
        goto LABEL_41;
      }
      goto LABEL_33;
    }
    if (v41 > 0xFF)
    {
      int v39 = *(unsigned __int16 *)((char *)a1 + v37);
      if (!*(unsigned __int16 *)((char *)a1 + v37)) {
        goto LABEL_41;
      }
      goto LABEL_33;
    }
    if (v41 < 2)
    {
LABEL_41:
      unsigned int v43 = *((unsigned __int8 *)a1 + v36);
      if (v43 >= 8) {
        return (v43 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v39 = *((unsigned __int8 *)a1 + v37);
  if (!*((unsigned char *)a1 + v37)) {
    goto LABEL_41;
  }
LABEL_33:
  int v42 = (v39 - 1) << v38;
  if (v37 > 3) {
    int v42 = 0;
  }
  if (v37)
  {
    if (v37 > 3) {
      LODWORD(v37) = 4;
    }
    switch((int)v37)
    {
      case 2:
        LODWORD(v37) = *a1;
        break;
      case 3:
        LODWORD(v37) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v37) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v37) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v37 | v42) + 249;
}

void sub_24DA01330(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v9 = *(_DWORD *)(v8 + 80) & 0xF8;
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = v9 | v11 | 7;
  uint64_t v13 = *(void *)(sub_24DCC8CE8() - 8);
  int v14 = *(_DWORD *)(v13 + 80);
  int v46 = *(_DWORD *)(v13 + 84);
  unint64_t v48 = ((v12 | v7 | v14) + v6) & ~(v12 | v7 | v14);
  unint64_t v47 = (((((v6 + v7) & ~v7) + v6 + v12) & ~v12)
       + v14
       + ((((*(void *)(v10 + 64) + ((v11 + ((*(void *)(v8 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (v14 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(void *)(v13 + 64);
  unint64_t v44 = (v14
       + ((((((v15
             + ((v15 + v14 + ((v14 + 12) & ~(unint64_t)v14)) & ~(unint64_t)v14)
             + 12) & 0xFFFFFFFFFFFFFFF8)
           + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~(unint64_t)v14;
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  int v18 = *(_DWORD *)(v16 + 84);
  uint64_t v45 = *(void *)(v16 + 64);
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v20 = *(_DWORD *)(v19 + 80);
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = 7;
  if (!v46) {
    uint64_t v23 = 8;
  }
  uint64_t v24 = *(unsigned __int8 *)(v21 + 80);
  uint64_t v25 = v20 & 0xF8 | v24 | 7;
  unint64_t v26 = ((((*(void *)(v21 + 64) + ((v24 + ((*(void *)(v19 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v27 = v48
      + ((((v47
          + ((((((((((v23 + v15 + v44) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v28 = v27 + v17;
  unint64_t v29 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = (v28 + 16) & ~v17;
  if (v18) {
    uint64_t v31 = v45;
  }
  else {
    uint64_t v31 = v45 + 1;
  }
  uint64_t v32 = v31 + v25;
  unint64_t v33 = ((((((v32 + v30) & ~v25) + v26 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v33 <= ((v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v33 = ((v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v34 = v26 + ((v32 + ((v6 + v17) & ~v17)) & ~v25) + 16;
  if (v34 <= v33) {
    unint64_t v34 = v33;
  }
  if (((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v34) {
    unint64_t v34 = ((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v6 > v34) {
    unint64_t v34 = v6;
  }
  if (*(_DWORD *)(v22 + 84)) {
    uint64_t v35 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    uint64_t v35 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  unint64_t v36 = v35 + ((v6 + *(unsigned __int8 *)(v22 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80));
  if (v36 > v34) {
    unint64_t v34 = v36;
  }
  if (v6 > v34) {
    unint64_t v34 = v6;
  }
  size_t v37 = v34 + 1;
  if (a3 < 0xF9)
  {
    int v39 = 0;
    char v38 = a1;
  }
  else
  {
    char v38 = a1;
    if (v37 <= 3)
    {
      unsigned int v42 = ((a3 + ~(-1 << (8 * v37)) - 248) >> (8 * v37)) + 1;
      if (HIWORD(v42))
      {
        int v39 = 4;
      }
      else if (v42 >= 0x100)
      {
        int v39 = 2;
      }
      else
      {
        int v39 = v42 > 1;
      }
    }
    else
    {
      int v39 = 1;
    }
  }
  if (a2 > 0xF8)
  {
    unsigned int v40 = a2 - 249;
    if (v37 < 4)
    {
      int v41 = (v40 >> (8 * v37)) + 1;
      if (v34 != -1)
      {
        int v43 = v40 & ~(-1 << (8 * v37));
        bzero(v38, v37);
        if (v37 == 3)
        {
          *(_WORD *)char v38 = v43;
          v38[2] = BYTE2(v43);
        }
        else if (v37 == 2)
        {
          *(_WORD *)char v38 = v43;
        }
        else
        {
          *char v38 = v43;
        }
      }
    }
    else
    {
      bzero(v38, v34 + 1);
      *(_DWORD *)char v38 = v40;
      int v41 = 1;
    }
    switch(v39)
    {
      case 1:
        v38[v37] = v41;
        break;
      case 2:
        *(_WORD *)&v38[v37] = v41;
        break;
      case 3:
LABEL_52:
        __break(1u);
        JUMPOUT(0x24DA01A0CLL);
      case 4:
        *(_DWORD *)&v38[v37] = v41;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v39)
    {
      case 1:
        v38[v37] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_41;
      case 2:
        *(_WORD *)&v38[v37] = 0;
        goto LABEL_40;
      case 3:
        goto LABEL_52;
      case 4:
        *(_DWORD *)&v38[v37] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_41;
      default:
LABEL_40:
        if (a2) {
LABEL_41:
        }
          v38[v34] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24DA01A34(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 16);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  uint64_t v11 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  unint64_t v13 = ((v10 | v5 | v12) + v4) & ~(v10 | v5 | v12);
  unint64_t v14 = (((((v4 + v5) & ~v5) + v4 + v10) & ~v10)
       + v12
       + ((((*(void *)(v8 + 64) + ((v9 + ((*(void *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (*(_DWORD *)(v11 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = *(void *)(v11 + 64);
  unint64_t v16 = (v12
       + ((((((v15 + ((v15 + v12 + ((v12 + 12) & ~v12)) & ~v12) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v12;
  uint64_t v17 = 7;
  if (!*(_DWORD *)(v11 + 84)) {
    uint64_t v17 = 8;
  }
  unint64_t v18 = v13
      + ((((v14
          + ((((((((((v17 + v15 + v16) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v19 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = (v18 + v20 + 16) & ~v20;
  uint64_t v22 = *(void *)(v19 + 64);
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v23 = v22;
  }
  else {
    uint64_t v23 = v22 + 1;
  }
  uint64_t v24 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v26 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = v25 | v27 | 7;
  unint64_t v29 = ((((*(void *)(v26 + 64) + ((v27 + ((*(void *)(v24 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v27) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v30 = ((((((v23 + v28 + v40) & ~v28) + v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v31 = v29 + ((v23 + v28 + ((v4 + v20) & ~v20)) & ~v28) + 16;
  uint64_t v32 = *(void *)(v2 - 8);
  unint64_t v33 = (v4 + *(unsigned __int8 *)(v32 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  uint64_t v34 = *(void *)(v32 + 64);
  if (!*(_DWORD *)(v32 + 84)) {
    ++v34;
  }
  unint64_t v35 = v34 + v33;
  unint64_t v36 = ((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v4 > v36) {
    unint64_t v36 = v4;
  }
  if (v30 > v31) {
    unint64_t v31 = v30;
  }
  if (((v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v35) {
    unint64_t v35 = ((v21 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v36 > v31) {
    unint64_t v31 = v36;
  }
  if (v31 > v35) {
    unint64_t v35 = v31;
  }
  uint64_t result = a1[v35];
  if (result >= 8)
  {
    if (v35 <= 3) {
      uint64_t v38 = v35;
    }
    else {
      uint64_t v38 = 4;
    }
    switch(v38)
    {
      case 1:
        int v39 = *a1;
        if (v35 < 4) {
          goto LABEL_28;
        }
        goto LABEL_30;
      case 2:
        int v39 = *(unsigned __int16 *)a1;
        if (v35 >= 4) {
          goto LABEL_30;
        }
        goto LABEL_28;
      case 3:
        int v39 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v35 < 4) {
          goto LABEL_28;
        }
        goto LABEL_30;
      case 4:
        int v39 = *(_DWORD *)a1;
        if (v35 < 4) {
LABEL_28:
        }
          uint64_t result = (v39 | ((result - 8) << (8 * v35))) + 8;
        else {
LABEL_30:
        }
          uint64_t result = (v39 + 8);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24DA02008(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v8 = *(_DWORD *)(v7 + 80) & 0xF8;
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v8 | v10 | 7;
  uint64_t v12 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v13 = *(_DWORD *)(v12 + 80);
  unint64_t v14 = ((v11 | v6 | v13) + v5) & ~(v11 | v6 | v13);
  unint64_t v15 = (((((v5 + v6) & ~v6) + v5 + v11) & ~v11)
       + v13
       + ((((*(void *)(v9 + 64) + ((v10 + ((*(void *)(v7 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 32) & (*(_DWORD *)(v12 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = *(void *)(v12 + 64);
  unint64_t v17 = (v13
       + ((((((v16 + ((v16 + v13 + ((v13 + 12) & ~v13)) & ~v13) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v13;
  uint64_t v18 = 7;
  if (!*(_DWORD *)(v12 + 84)) {
    uint64_t v18 = 8;
  }
  unint64_t v19 = v14
      + ((((v15
          + ((((((((((v18 + v16 + v17) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v20 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v21 = *(unsigned __int8 *)(v20 + 80);
  unint64_t v22 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = *(void *)(v20 + 64);
  if (!*(_DWORD *)(v20 + 84)) {
    ++v23;
  }
  uint64_t v42 = v23;
  uint64_t v24 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v25 = *(_DWORD *)(v24 + 80) & 0xF8;
  uint64_t v26 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v27 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v28 = v25 | v27 | 7;
  unint64_t v29 = ((((*(void *)(v26 + 64) + ((v27 + ((*(void *)(v24 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v27) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v30 = ((((((v42 + v28 + ((v19 + v21 + 16) & ~v21)) & ~v28) + v29 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v30 <= ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v30 = ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v31 = v29 + ((v42 + v28 + ((v5 + v21) & ~v21)) & ~v28) + 16;
  if (v31 <= v30) {
    unint64_t v31 = v30;
  }
  unint64_t v32 = ((v22 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v32 <= v31) {
    unint64_t v32 = v31;
  }
  uint64_t v33 = *(void *)(v3 - 8);
  if (v5 > v32) {
    unint64_t v32 = v5;
  }
  unint64_t v34 = (v5 + *(unsigned __int8 *)(v33 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  int v35 = *(_DWORD *)(v33 + 84);
  uint64_t v36 = *(void *)(v33 + 64);
  if (!v35) {
    ++v36;
  }
  size_t v37 = v36 + v34;
  if (v37 <= v32) {
    size_t v37 = v32;
  }
  if (v5 <= v37) {
    size_t v38 = v37;
  }
  else {
    size_t v38 = v5;
  }
  if (a2 > 7)
  {
    if (v38 <= 3) {
      char v39 = ((a2 - 8) >> (8 * v38)) + 8;
    }
    else {
      char v39 = 8;
    }
    if (v38 <= 3) {
      int v40 = (a2 - 8) & ~(-1 << (8 * v38));
    }
    else {
      int v40 = a2 - 8;
    }
    a1[v38] = v39;
    if (v38 >= 4) {
      int v41 = 4;
    }
    else {
      int v41 = v38;
    }
    bzero(a1, v38);
    switch(v41)
    {
      case 2:
        *(_WORD *)a1 = v40;
        break;
      case 3:
        *(_WORD *)a1 = v40;
        a1[2] = BYTE2(v40);
        break;
      case 4:
        *(_DWORD *)a1 = v40;
        break;
      default:
        *a1 = v40;
        break;
    }
  }
  else
  {
    a1[v38] = a2;
  }
}

uint64_t sub_24DA025F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DA02614@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  unint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = a1[2];
    uint64_t v7 = a1[3];
    uint64_t v11 = a1 + 4;
    uint64_t v9 = a1[4];
    uint64_t v10 = v11[1];
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v10;
    uint64_t v22 = v9;
    uint64_t v12 = type metadata accessor for DirectionalTestingOperation();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a2, v5, v12);
    uint64_t v19 = v7;
    uint64_t v20 = v8;
    uint64_t v21 = v10;
    uint64_t v22 = v9;
  }
  else
  {
    uint64_t v13 = a1[2];
    uint64_t v14 = a1[3];
    uint64_t v16 = a1[4];
    uint64_t v15 = a1[5];
    uint64_t v19 = v13;
    uint64_t v20 = v14;
    uint64_t v21 = v16;
    uint64_t v22 = v15;
    uint64_t v17 = type metadata accessor for DirectionalTestingOperation();
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a2, v5, v17);
    uint64_t v19 = v14;
    uint64_t v20 = v13;
    uint64_t v21 = v15;
    uint64_t v22 = v16;
  }
  type metadata accessor for TestingOperation();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24DA027D0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  self;
  uint64_t v4 = (void *)swift_dynamicCastObjCClass();
  if (v4)
  {
    uint64_t v5 = sub_24D3D3C4C(objc_msgSend(v4, sel_itemIdentifier));

    swift_beginAccess();
    uint64_t v6 = *(void **)(v5 + 32);
    unsigned __int8 v7 = *(unsigned char *)(v5 + 40);
    int v8 = *(unsigned __int8 *)(v5 + 41);
    sub_24D4018B8(v6, v7, *(unsigned char *)(v5 + 41));
    swift_release();
    if (v8 == 1)
    {
      *(void *)a2 = v6;
      *(void *)(a2 + 8) = 0;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
    }
    else
    {
      uint64_t v14 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C660) + 48);
      *(void *)a2 = v6;
      *(unsigned char *)(a2 + 8) = v7;
      uint64_t v15 = type metadata accessor for VFSItem(0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
    }
    goto LABEL_33;
  }
  self;
  uint64_t v9 = (void *)swift_dynamicCastObjCClass();
  if (v9)
  {
    uint64_t v10 = sub_24D3D3C4C(objc_msgSend(v9, sel_itemIdentifier));

    swift_beginAccess();
    uint64_t v11 = *(void **)(v10 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v10 + 40);
    int v13 = *(unsigned __int8 *)(v10 + 41);
    sub_24D4018B8(v11, v12, *(unsigned char *)(v10 + 41));
    swift_release();
    if (v13 == 1) {
      goto LABEL_14;
    }
    goto LABEL_19;
  }
  self;
  uint64_t v16 = (void *)swift_dynamicCastObjCClass();
  if (v16)
  {
    uint64_t v17 = sub_24D3D3C4C(objc_msgSend(v16, sel_itemIdentifier));

    swift_beginAccess();
    uint64_t v11 = *(void **)(v17 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v17 + 40);
    int v18 = *(unsigned __int8 *)(v17 + 41);
    sub_24D4018B8(v11, v12, *(unsigned char *)(v17 + 41));
    swift_release();
    if (v18 == 1) {
      goto LABEL_14;
    }
    goto LABEL_19;
  }
  self;
  uint64_t v19 = (void *)swift_dynamicCastObjCClass();
  if (v19)
  {
    uint64_t v20 = sub_24D3D3C4C(objc_msgSend(v19, sel_itemIdentifier));

    swift_beginAccess();
    uint64_t v11 = *(void **)(v20 + 32);
    unsigned __int8 v12 = *(unsigned char *)(v20 + 40);
    int v21 = *(unsigned __int8 *)(v20 + 41);
    sub_24D4018B8(v11, v12, *(unsigned char *)(v20 + 41));
    swift_release();
    if (v21 == 1)
    {
LABEL_14:
      *(void *)a2 = v11;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
      goto LABEL_33;
    }
LABEL_19:
    *(void *)a2 = v11;
    *(unsigned char *)(a2 + 8) = v12;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
    goto LABEL_33;
  }
  self;
  uint64_t v22 = swift_dynamicCastObjCClass();
  if (v22)
  {
    uint64_t v23 = (void *)v22;
    id v24 = a1;
    id v25 = objc_msgSend(objc_msgSend(v23, sel_renamedItem), sel_filename);
    swift_unknownObjectRelease();
    sub_24DCC97E8();

    unint64_t v96 = sub_24D3F0EB8();
    uint64_t v95 = MEMORY[0x263F8D310];
    uint64_t v26 = sub_24DCCA478();
    uint64_t v28 = v27;
    swift_bridgeObjectRelease();
    id v29 = objc_msgSend(v23, sel_snapshotVersion, v95, v96, v96, v96);
    id v30 = objc_msgSend(objc_msgSend(v23, sel_renamedItem), sel_itemIdentifier);
    swift_unknownObjectRelease();
    uint64_t v31 = sub_24D3D3C4C(v30);

    swift_beginAccess();
    unint64_t v32 = *(void **)(v31 + 32);
    unsigned __int8 v33 = *(unsigned char *)(v31 + 40);
    int v34 = *(unsigned __int8 *)(v31 + 41);
    sub_24D4018B8(v32, v33, *(unsigned char *)(v31 + 41));
    swift_release();
    if (v34 == 1)
    {
      int v35 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C678);
      uint64_t v36 = a2 + v35[12];
      size_t v37 = (uint64_t *)(a2 + v35[16]);
      uint64_t v38 = v35[20];
      *(void *)a2 = v32;
      uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v36, 1, 1, v39);
      *size_t v37 = v26;
      v37[1] = v28;
      *(void *)(a2 + v38) = v29;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
    }
    else
    {
      int v54 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F5C0);
      uint64_t v55 = a2 + v54[12];
      uint64_t v56 = (uint64_t *)(a2 + v54[16]);
      uint64_t v57 = v54[20];
      *(void *)a2 = v32;
      *(unsigned char *)(a2 + 8) = v33;
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v55, 1, 1, v58);
      *uint64_t v56 = v26;
      v56[1] = v28;
      *(void *)(a2 + v57) = v29;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
    }
  }
  else
  {
    self;
    uint64_t v40 = swift_dynamicCastObjCClass();
    if (v40)
    {
      int v41 = (void *)v40;
      id v42 = a1;
      id v43 = objc_msgSend(v41, sel_snapshotVersion);
      id v44 = objc_msgSend(objc_msgSend(v41, sel_sourceItem), sel_itemIdentifier);
      swift_unknownObjectRelease();
      uint64_t v45 = sub_24D3D3C4C(v44);

      swift_beginAccess();
      int v46 = *(void **)(v45 + 32);
      unsigned __int8 v47 = *(unsigned char *)(v45 + 40);
      int v48 = *(unsigned __int8 *)(v45 + 41);
      sub_24D4018B8(v46, v47, *(unsigned char *)(v45 + 41));
      swift_release();
      if (v48 == 1)
      {
        unint64_t v49 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986F100);
        uint64_t v50 = a2 + v49[12];
        uint64_t v51 = v49[16];
        uint64_t v52 = v49[20];
        *(void *)a2 = v46;
        uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v53 - 8) + 56))(v50, 1, 1, v53);
        *(void *)(a2 + v51) = v43;
        *(void *)(a2 + v52) = 0;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
      }
      else
      {
        unint64_t v77 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F330);
        uint64_t v78 = a2 + v77[12];
        uint64_t v79 = v77[16];
        uint64_t v80 = v77[20];
        *(void *)a2 = v46;
        *(unsigned char *)(a2 + 8) = v47;
        uint64_t v81 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56))(v78, 1, 1, v81);
        *(void *)(a2 + v79) = v43;
        *(void *)(a2 + v80) = 0;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
      }
    }
    else
    {
      self;
      uint64_t v59 = swift_dynamicCastObjCClass();
      if (v59)
      {
        unint64_t v60 = (void *)v59;
        id v61 = a1;
        id v62 = objc_msgSend(v60, sel_snapshotVersion);
        id v63 = objc_msgSend(v60, sel_rawFields);
        id v64 = objc_msgSend(objc_msgSend(v60, sel_sourceItem), sel_itemIdentifier);
        swift_unknownObjectRelease();
        uint64_t v65 = sub_24D3D3C4C(v64);

        swift_beginAccess();
        int v66 = *(void **)(v65 + 32);
        unsigned __int8 v67 = *(unsigned char *)(v65 + 40);
        int v68 = *(unsigned __int8 *)(v65 + 41);
        sub_24D4018B8(v66, v67, *(unsigned char *)(v65 + 41));
        swift_release();
        if (v68 == 1)
        {
          uint64_t v69 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986C670);
          uint64_t v70 = a2 + v69[12];
          uint64_t v71 = a2 + v69[16];
          int v72 = (_OWORD *)(a2 + v69[20]);
          uint64_t v73 = v69[24];
          uint64_t v74 = v69[28];
          uint64_t v75 = v69[32];
          *(void *)a2 = v66;
          uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v70, 1, 1, v76);
          *(void *)uint64_t v71 = 0;
          *(unsigned char *)(v71 + 8) = -1;
          v72[4] = 0u;
          v72[5] = 0u;
          v72[2] = 0u;
          v72[3] = 0u;
          *int v72 = 0u;
          v72[1] = 0u;
          *(void *)(a2 + v73) = v63;
          *(void *)(a2 + v74) = v62;
          *(void *)(a2 + v75) = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
        }
        else
        {
          unint64_t v87 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C650);
          uint64_t v88 = a2 + v87[12];
          uint64_t v89 = v87[16];
          uint64_t v90 = a2 + v87[20];
          uint64_t v91 = v87[24];
          uint64_t v92 = v87[28];
          uint64_t v97 = v87[32];
          *(void *)a2 = v66;
          *(unsigned char *)(a2 + 8) = v67;
          uint64_t v93 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v93 - 8) + 56))(v88, 1, 1, v93);
          *(void *)(a2 + v89) = 0;
          *(void *)uint64_t v90 = 0;
          *(void *)(v90 + 8) = 0;
          *(void *)(v90 + 16) = 1;
          *(_OWORD *)(v90 + 24) = 0u;
          *(_OWORD *)(v90 + 40) = 0u;
          *(void *)(v90 + 56) = 0;
          *(void *)(a2 + v91) = v63;
          *(void *)(a2 + v92) = v62;
          *(void *)(a2 + v97) = 0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
        }
      }
      else
      {
        self;
        unint64_t v82 = (void *)swift_dynamicCastObjCClass();
        if (!v82) {
          sub_24DA85EB4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/TestingOperation.swift", 110, 2, 295, a1);
        }
        uint64_t v83 = sub_24D3D3C4C(objc_msgSend(v82, sel_sourceItemIdentifier));

        swift_beginAccess();
        unint64_t v84 = *(void **)(v83 + 32);
        unsigned __int8 v85 = *(unsigned char *)(v83 + 40);
        int v86 = *(unsigned __int8 *)(v83 + 41);
        sub_24D4018B8(v84, v85, *(unsigned char *)(v83 + 41));
        swift_release();
        *(void *)a2 = v84;
        if (v86 == 1)
        {
          *(void *)(a2 + 8) = 0;
          *(unsigned char *)(a2 + 16) = -1;
          *(_OWORD *)(a2 + 24) = 0u;
          *(_OWORD *)(a2 + 40) = 0u;
          *(_OWORD *)(a2 + 56) = 0u;
          *(_OWORD *)(a2 + 72) = 0u;
          *(_OWORD *)(a2 + 88) = 0u;
          *(_OWORD *)(a2 + 104) = 0u;
          *(unsigned char *)(a2 + 120) = 2;
          *(void *)(a2 + 128) = 0;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
        }
        else
        {
          *(unsigned char *)(a2 + 8) = v85;
          *(void *)(a2 + 16) = 0;
          *(void *)(a2 + 24) = 0;
          *(void *)(a2 + 32) = 0;
          *(void *)(a2 + 40) = 1;
          *(_OWORD *)(a2 + 48) = 0u;
          *(_OWORD *)(a2 + 64) = 0u;
          *(void *)(a2 + 80) = 0;
          *(unsigned char *)(a2 + 88) = 2;
          *(void *)(a2 + 96) = 0;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
        }
      }
    }
  }
LABEL_33:
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  return swift_storeEnumTagMultiPayload();
}

char *sub_24DA033B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = a1[3];
  uint64_t v127 = a1[5];
  uint64_t v126 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v132 = sub_24DCCA3F8();
  uint64_t v130 = *(void *)(v132 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v132);
  unsigned int v120 = (ValueMetadata *)((char *)&v118 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v124 = (char *)&v118 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v121 = (char *)&v118 - v10;
  MEMORY[0x270FA5388](v9);
  unint64_t v125 = (uint64_t *)((char *)&v118 - v11);
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[4];
  uint64_t v135 = type metadata accessor for SnapshotItem();
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v133 = *(void *)(v14 - 8);
  unint64_t v134 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v118 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  unint64_t v123 = (char *)&v118 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v122 = (char *)&v118 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  int v129 = (char *)&v118 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v118 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v118 - v27;
  uint64_t v136 = v13;
  uint64_t v137 = v12;
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v138 = *(void *)(v29 - 8);
  uint64_t v139 = v29;
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  unint64_t v32 = (char *)&v118 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  int v35 = (char *)&v118 - v34;
  uint64_t v36 = MEMORY[0x270FA5388](v33);
  uint64_t v38 = (char *)&v118 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  unint64_t v128 = (char *)&v118 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  id v43 = (char *)&v118 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v118 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v46 + 16))(v45, v2, a1);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v118 = (uint64_t)&v118;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v118 - 80, " item destinationItemID baseVersion fields version domainVersion ");
      uint64_t v57 = v139;
      unint64_t v58 = v134;
      uint64_t v140 = (char *)v139;
      unint64_t v141 = v134;
      int v142 = (ValueMetadata *)v132;
      uint64_t v59 = swift_getAssociatedTypeWitness();
      uint64_t v60 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v62 = swift_getAssociatedConformanceWitness();
      unint64_t v124 = (char *)v59;
      uint64_t v147 = v59;
      uint64_t v148 = v60;
      unint64_t v123 = (char *)v60;
      unsigned int v120 = (ValueMetadata *)AssociatedConformanceWitness;
      uint64_t v149 = AssociatedConformanceWitness;
      uint64_t v150 = v62;
      uint64_t v119 = v62;
      type metadata accessor for FileItemVersion();
      uint64_t v143 = sub_24DCCA3F8();
      uint64_t v144 = &type metadata for Fields;
      uint64_t v145 = MEMORY[0x263F8D9D0];
      uint64_t v146 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      id v64 = &v45[TupleTypeMetadata[12]];
      uint64_t v65 = &v45[TupleTypeMetadata[16]];
      uint64_t v66 = *(void *)&v45[TupleTypeMetadata[24]];
      uint64_t v118 = *(void *)&v45[TupleTypeMetadata[28]];

      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v128, v45, v57);
      (*(void (**)(char *, char *, unint64_t))(v133 + 32))(v129, v64, v58);
      uint64_t v67 = v130;
      int v68 = v125;
      uint64_t v69 = v132;
      (*(void (**)(uint64_t *, char *, uint64_t))(v130 + 32))(v125, v65, v132);
      uint64_t v140 = 0;
      unint64_t v141 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      sub_24D97C4E0(v66);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v70 = v121;
      (*(void (**)(char *, uint64_t *, uint64_t))(v67 + 16))(v121, v68, v69);
      uint64_t v71 = *(void *)(AssociatedTypeWitness - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v70, 1, AssociatedTypeWitness) == 1)
      {
        int v72 = v70;
        uint64_t v71 = v67;
      }
      else
      {
        swift_getAssociatedConformanceWitness();
        sub_24DCCAD78();
        uint64_t v69 = AssociatedTypeWitness;
        int v72 = v70;
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v69);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v147 = v118;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v105 = v133;
      unint64_t v104 = v134;
      unint64_t v106 = v122;
      (*(void (**)(char *, char *, unint64_t))(v133 + 16))(v122, v129, v134);
      unint64_t v107 = (int *)v135;
      uint64_t v108 = *(void *)(v135 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v108 + 48))(v106, 1, v135) == 1)
      {
        uint64_t v108 = v105;
        uint64_t v109 = v104;
      }
      else
      {
        sub_24D97A9C4(v107);
        uint64_t v109 = v135;
      }
      (*(void (**)(char *, uint64_t))(v108 + 8))(v106, v109);
      unint64_t v116 = &v45[TupleTypeMetadata[20]];
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v97 = v140;
      (*(void (**)(uint64_t *, uint64_t))(v130 + 8))(v125, v132);
      (*(void (**)(char *, unint64_t))(v105 + 8))(v129, v104);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v128, v139);
      uint64_t v140 = v124;
      unint64_t v141 = (unint64_t)v123;
      int v142 = v120;
      uint64_t v143 = v119;
      type metadata accessor for FileItemVersion();
      uint64_t v115 = sub_24DCCA3F8();
      unint64_t v102 = *(void (**)(char *, uint64_t))(*(void *)(v115 - 8) + 8);
      unint64_t v103 = v116;
      goto LABEL_24;
    case 2:
      unint64_t v128 = (char *)&v118;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      unint64_t v125 = &v118 - 8;
      strcpy((char *)&v118 - 64, " destinationItemID baseVersion recursive domainVersion ");
      uint64_t v73 = v139;
      uint64_t v74 = v132;
      uint64_t v140 = (char *)v139;
      unint64_t v141 = v132;
      uint64_t v75 = swift_getAssociatedTypeWitness();
      uint64_t v76 = swift_getAssociatedTypeWitness();
      uint64_t v77 = swift_getAssociatedConformanceWitness();
      uint64_t v78 = swift_getAssociatedConformanceWitness();
      unint64_t v134 = v76;
      uint64_t v135 = v75;
      uint64_t v147 = v75;
      uint64_t v148 = v76;
      uint64_t v133 = v77;
      uint64_t v149 = v77;
      uint64_t v150 = v78;
      int v129 = (char *)v78;
      type metadata accessor for FileItemVersion();
      int v142 = (ValueMetadata *)sub_24DCCA3F8();
      uint64_t v143 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
      uint64_t v144 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t v79 = (int *)swift_getTupleTypeMetadata();
      uint64_t v80 = &v45[v79[12]];

      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v38, v45, v73);
      uint64_t v81 = v130;
      (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v124, v80, v74);
      uint64_t v140 = 0;
      unint64_t v141 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      unint64_t v82 = v120;
      (*(void (**)(void))(v81 + 16))();
      uint64_t v83 = *(void *)(AssociatedTypeWitness - 8);
      if ((*(unsigned int (**)(ValueMetadata *, uint64_t, uint64_t))(v83 + 48))(v82, 1, AssociatedTypeWitness) == 1)
      {
        uint64_t v83 = v81;
        uint64_t v84 = v74;
      }
      else
      {
        swift_getAssociatedConformanceWitness();
        sub_24DCCAD78();
        uint64_t v84 = AssociatedTypeWitness;
      }
      (*(void (**)(ValueMetadata *, uint64_t))(v83 + 8))(v82, v84);
      unint64_t v110 = &v45[v79[16]];
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v111 = v139;
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      uint64_t v97 = v140;
      (*(void (**)(char *, uint64_t))(v81 + 8))(v124, v74);
      (*(void (**)(char *, uint64_t))(v138 + 8))(v38, v111);
      uint64_t v140 = (char *)v135;
      unint64_t v141 = v134;
      int v142 = (ValueMetadata *)v133;
      uint64_t v143 = (uint64_t)v129;
      type metadata accessor for FileItemVersion();
      uint64_t v112 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v112 - 8) + 8))(v110, v112);
      return v97;
    case 3:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v118 - 32, " item newName version ");
      uint64_t v85 = v139;
      unint64_t v86 = v134;
      uint64_t v140 = (char *)v139;
      unint64_t v141 = v134;
      int v142 = &type metadata for Filename;
      uint64_t v143 = MEMORY[0x263F8D9D0];
      unint64_t v87 = (int *)swift_getTupleTypeMetadata();
      uint64_t v88 = &v45[v87[12]];
      uint64_t v132 = *(void *)&v45[v87[16]];
      uint64_t v89 = *(void *)&v45[v87[20]];
      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v35, v45, v85);
      uint64_t v90 = v133;
      uint64_t v91 = v123;
      (*(void (**)(char *, char *, unint64_t))(v133 + 32))(v123, v88, v86);
      uint64_t v140 = 0;
      unint64_t v141 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v147 = v89;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      (*(void (**)(char *, char *, unint64_t))(v90 + 16))(v17, v91, v86);
      uint64_t v92 = (int *)v135;
      uint64_t v93 = *(void *)(v135 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v17, 1, v135) == 1)
      {
        uint64_t v93 = v90;
        uint64_t v94 = v86;
      }
      else
      {
        sub_24D97A9C4(v92);
        uint64_t v94 = v135;
      }
      (*(void (**)(char *, uint64_t))(v93 + 8))(v17, v94);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v113 = (void *)sub_24DCC97B8();
      id v114 = objc_msgSend(v113, sel_fp_obfuscatedFilename);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v97 = v140;
      (*(void (**)(char *, unint64_t))(v90 + 8))(v123, v86);
      unint64_t v102 = *(void (**)(char *, uint64_t))(v138 + 8);
      unint64_t v103 = v35;
      goto LABEL_21;
    case 4:
    case 5:
    case 7:
      uint64_t v95 = v138;
      uint64_t v96 = v139;
      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v32, v45, v139);
      uint64_t v140 = 0;
      unint64_t v141 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      uint64_t v97 = v140;
      (*(void (**)(char *, uint64_t))(v95 + 8))(v32, v96);
      return v97;
    case 6:
      uint64_t v98 = sub_24DCCA3F8();
      uint64_t v99 = v139;
      unint64_t v100 = &v45[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v101 = v138;
      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v32, v45, v99);
      uint64_t v140 = 0;
      unint64_t v141 = 0xE000000000000000;
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      uint64_t v97 = v140;
      (*(void (**)(char *, uint64_t))(v101 + 8))(v32, v99);
      (*(void (**)(char *, uint64_t))(*(void *)(v98 - 8) + 8))(v100, v98);
      return v97;
    default:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v118 - 48, " item version domainVersion ");
      uint64_t v48 = v139;
      unint64_t v49 = v134;
      uint64_t v140 = (char *)v139;
      unint64_t v141 = v134;
      int v142 = (ValueMetadata *)MEMORY[0x263F8D9D0];
      uint64_t v143 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t v50 = (int *)swift_getTupleTypeMetadata();
      uint64_t v51 = &v45[v50[12]];
      uint64_t v52 = *(void *)&v45[v50[16]];

      (*(void (**)(char *, char *, uint64_t))(v138 + 32))(v43, v45, v48);
      uint64_t v53 = v133;
      (*(void (**)(char *, char *, unint64_t))(v133 + 32))(v28, v51, v49);
      uint64_t v140 = 0;
      unint64_t v141 = 0xE000000000000000;
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v147 = v52;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      (*(void (**)(char *, char *, unint64_t))(v53 + 16))(v26, v28, v49);
      int v54 = (int *)v135;
      uint64_t v55 = *(void *)(v135 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48))(v26, 1, v135) == 1)
      {
        uint64_t v55 = v53;
        uint64_t v56 = v49;
      }
      else
      {
        sub_24D97A9C4(v54);
        uint64_t v56 = v135;
      }
      (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v56);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v97 = v140;
      (*(void (**)(char *, unint64_t))(v53 + 8))(v28, v49);
      unint64_t v102 = *(void (**)(char *, uint64_t))(v138 + 8);
      unint64_t v103 = v43;
LABEL_21:
      uint64_t v115 = v139;
LABEL_24:
      v102(v103, v115);
      return v97;
  }
}

uint64_t sub_24DA04B58(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(char **)(a2 + 16);
  uint64_t v51 = *(void *)(a2 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v42 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, v3, a2);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      unsigned __int8 v47 = (char *)&v42;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      uint64_t v46 = (char *)(&v42 - 10);
      strcpy((char *)&v42 - 80, " item destinationItemID baseVersion fields version domainVersion ");
      uint64_t v52 = AssociatedTypeWitness;
      uint64_t v49 = type metadata accessor for SnapshotItem();
      uint64_t v53 = sub_24DCCA3F8();
      uint64_t v50 = a1;
      uint64_t v48 = (char *)swift_getAssociatedTypeWitness();
      int v54 = (ValueMetadata *)sub_24DCCA3F8();
      uint64_t v20 = swift_getAssociatedTypeWitness();
      uint64_t v42 = v8;
      uint64_t v21 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v45 = v21;
      uint64_t v44 = swift_getAssociatedConformanceWitness();
      uint64_t v59 = v20;
      uint64_t v60 = v21;
      uint64_t v61 = AssociatedConformanceWitness;
      uint64_t v62 = v44;
      type metadata accessor for FileItemVersion();
      uint64_t v55 = sub_24DCCA3F8();
      uint64_t v56 = &type metadata for Fields;
      uint64_t v57 = MEMORY[0x263F8D9D0];
      uint64_t v58 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      unsigned __int8 v47 = &v13[TupleTypeMetadata[12]];
      uint64_t v46 = &v13[TupleTypeMetadata[16]];
      id v43 = &v13[TupleTypeMetadata[20]];

      uint64_t v24 = v42;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v11, v13, AssociatedTypeWitness);
      sub_24DCCB008();
      swift_getAssociatedConformanceWitness();
      sub_24DCC9688();
      sub_24DCCB008();
      sub_24DCCB008();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v11, AssociatedTypeWitness);
      uint64_t v52 = v20;
      uint64_t v53 = v45;
      int v54 = (ValueMetadata *)AssociatedConformanceWitness;
      uint64_t v55 = v44;
      type metadata accessor for FileItemVersion();
      uint64_t v25 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v43, v25);
      uint64_t v26 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v46, v26);
      uint64_t v27 = sub_24DCCA3F8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v47, v27);
      break;
    case 2:
      uint64_t v48 = (char *)&v42;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      unsigned __int8 v47 = (char *)(&v42 - 8);
      strcpy((char *)&v42 - 64, " destinationItemID baseVersion recursive domainVersion ");
      uint64_t v52 = AssociatedTypeWitness;
      uint64_t v49 = swift_getAssociatedTypeWitness();
      uint64_t v53 = sub_24DCCA3F8();
      uint64_t v28 = swift_getAssociatedTypeWitness();
      uint64_t v50 = a1;
      uint64_t v29 = v28;
      uint64_t v30 = swift_getAssociatedTypeWitness();
      uint64_t v46 = v6;
      uint64_t v31 = v30;
      uint64_t v32 = v29;
      uint64_t v33 = swift_getAssociatedConformanceWitness();
      uint64_t v34 = swift_getAssociatedConformanceWitness();
      uint64_t v59 = v32;
      uint64_t v60 = v31;
      uint64_t v61 = v33;
      uint64_t v62 = v34;
      type metadata accessor for FileItemVersion();
      int v54 = (ValueMetadata *)sub_24DCCA3F8();
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
      uint64_t v56 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      int v35 = (int *)swift_getTupleTypeMetadata();
      uint64_t v36 = &v13[v35[12]];
      uint64_t v48 = &v13[v35[16]];

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_24DCCB008();
      swift_getAssociatedConformanceWitness();
      sub_24DCC9688();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      uint64_t v52 = v32;
      uint64_t v53 = v31;
      int v54 = (ValueMetadata *)v33;
      uint64_t v55 = v34;
      type metadata accessor for FileItemVersion();
      uint64_t v37 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v48, v37);
      uint64_t v38 = sub_24DCCA3F8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v36, v38);
      break;
    case 3:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v42 - 32, " item newName version ");
      uint64_t v52 = AssociatedTypeWitness;
      uint64_t v50 = type metadata accessor for SnapshotItem();
      uint64_t v53 = sub_24DCCA3F8();
      int v54 = &type metadata for Filename;
      uint64_t v55 = MEMORY[0x263F8D9D0];
      uint64_t v49 = (uint64_t)&v13[*(int *)(swift_getTupleTypeMetadata() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_24DCCB008();
      swift_getAssociatedConformanceWitness();
      sub_24DCC9688();
      swift_bridgeObjectRetain();
      sub_24DCC98F8();
      swift_bridgeObjectRelease_n();
      sub_24DCCB008();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      uint64_t v39 = sub_24DCCA3F8();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v49, v39);
      break;
    case 4:
    case 5:
    case 7:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_24DCCB008();
      swift_getAssociatedConformanceWitness();
      sub_24DCC9688();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      break;
    case 6:
      uint64_t v40 = sub_24DCCA3F8();
      uint64_t v41 = &v13[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_24DCCB008();
      swift_getAssociatedConformanceWitness();
      sub_24DCC9688();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v41, v40);
      break;
    default:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v42 - 48, " item version domainVersion ");
      uint64_t v52 = AssociatedTypeWitness;
      type metadata accessor for SnapshotItem();
      uint64_t v53 = sub_24DCCA3F8();
      int v54 = (ValueMetadata *)MEMORY[0x263F8D9D0];
      uint64_t v55 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t v16 = swift_getTupleTypeMetadata();
      uint64_t v17 = &v13[*(int *)(v16 + 48)];

      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v13, AssociatedTypeWitness);
      sub_24DCCB008();
      swift_getAssociatedConformanceWitness();
      sub_24DCC9688();
      sub_24DCCB008();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v11, AssociatedTypeWitness);
      uint64_t v18 = sub_24DCCA3F8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      break;
  }
  return result;
}

uint64_t sub_24DA058A0(char *a1, char *a2, uint64_t a3, uint64_t a4, ValueMetadata *a5, uint64_t a6)
{
  long long v236 = a2;
  long long v238 = a1;
  long long v241 = (char *)a3;
  uint64_t v242 = a4;
  long long v228 = (int *)a4;
  unint64_t v243 = a5;
  uint64_t v244 = a6;
  unint64_t v227 = a6;
  uint64_t v8 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v224 = (ValueMetadata *)((char *)&v217 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v222 = (unint64_t)&v217 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v223 = (char *)&v217 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v217 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (char *)&v217 - v20;
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  unint64_t v225 = (char *)&v217 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  unint64_t v226 = (char *)&v217 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v217 - v26;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  long long v232 = *(char **)(TupleTypeMetadata2 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v30 = (char *)&v217 - v29;
  unint64_t v234 = (unint64_t)a5;
  uint64_t v235 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v237 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v221 = (char *)&v217 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  unint64_t v220 = (char *)&v217 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  int v218 = (char *)&v217 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  unint64_t v219 = (char *)&v217 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v217 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v44 = (char *)&v217 - v43;
  uint64_t v45 = MEMORY[0x270FA5388](v42);
  long long v230 = (char *)&v217 - v46;
  MEMORY[0x270FA5388](v45);
  long long v229 = (char *)&v217 - v47;
  long long v233 = (char *)TupleTypeMetadata2;
  uint64_t v48 = &v30[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v231 = v9;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v49(v30, v238, v8);
  long long v238 = v48;
  v49(v48, v236, v8);
  uint64_t v240 = v8;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v57 = v226;
      long long v236 = v30;
      uint64_t v58 = ((uint64_t (*)(char *, char *, uint64_t))v49)(v226, v30, v240);
      long long v230 = (char *)&v217;
      MEMORY[0x270FA5388](v58);
      strcpy((char *)&v217 - 80, " item destinationItemID baseVersion fields version domainVersion ");
      uint64_t v51 = AssociatedTypeWitness;
      long long v241 = (char *)AssociatedTypeWitness;
      unint64_t v225 = (char *)type metadata accessor for SnapshotItem();
      uint64_t v242 = sub_24DCCA3F8();
      long long v229 = (char *)swift_getAssociatedTypeWitness();
      unint64_t v243 = (ValueMetadata *)sub_24DCCA3F8();
      uint64_t v59 = swift_getAssociatedTypeWitness();
      uint64_t v60 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v62 = swift_getAssociatedConformanceWitness();
      uint64_t v248 = v59;
      uint64_t v249 = v60;
      uint64_t v250 = AssociatedConformanceWitness;
      uint64_t v251 = v62;
      type metadata accessor for FileItemVersion();
      uint64_t v244 = sub_24DCCA3F8();
      unint64_t v245 = &type metadata for Fields;
      uint64_t v246 = MEMORY[0x263F8D9D0];
      uint64_t v247 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t v27 = v57;
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      long long v230 = &v57[TupleTypeMetadata[12]];
      id v64 = &v57[TupleTypeMetadata[16]];
      uint64_t v65 = &v27[TupleTypeMetadata[20]];
      unint64_t v227 = *(void *)&v27[TupleTypeMetadata[24]];
      long long v228 = *(int **)&v27[TupleTypeMetadata[28]];

      uint64_t v66 = v238;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        long long v241 = (char *)v59;
        uint64_t v242 = v60;
        unint64_t v243 = (ValueMetadata *)AssociatedConformanceWitness;
        uint64_t v244 = v62;
        type metadata accessor for FileItemVersion();
        uint64_t v143 = sub_24DCCA3F8();
        (*(void (**)(char *, uint64_t))(*(void *)(v143 - 8) + 8))(v65, v143);
        uint64_t v144 = sub_24DCCA3F8();
        (*(void (**)(char *, uint64_t))(*(void *)(v144 - 8) + 8))(v64, v144);
        uint64_t v145 = sub_24DCCA3F8();
        (*(void (**)(char *, uint64_t))(*(void *)(v145 - 8) + 8))(v230, v145);
        goto LABEL_38;
      }
      uint64_t v223 = (char *)v59;
      unint64_t v224 = (ValueMetadata *)AssociatedConformanceWitness;
      long long v232 = v65;
      long long v233 = v64;
      unint64_t v222 = *(void *)&v66[TupleTypeMetadata[24]];
      uint64_t v67 = *(int **)&v66[TupleTypeMetadata[28]];

      uint64_t v68 = v237;
      uint64_t v69 = *(void (**)(void))(v237 + 32);
      uint64_t v70 = v219;
      ((void (*)(char *, char *, uint64_t))v69)(v219, v27, AssociatedTypeWitness);
      uint64_t v71 = v70;
      int v72 = v218;
      v69();
      uint64_t v73 = AssociatedTypeWitness;
      swift_getAssociatedConformanceWitness();
      if (sub_24DCC9798())
      {
        unint64_t v74 = v222 ^ v227;
        uint64_t v75 = *(void (**)(char *, uint64_t))(v68 + 8);
        v75(v72, v73);
        v75(v71, v73);
        char v77 = (v74 & 0xFFFFFDFFFFFFBFFFLL) == 0 && v228 == v67;
      }
      else
      {
        unint64_t v164 = *(void (**)(char *, uint64_t))(v68 + 8);
        v164(v72, v73);
        v164(v71, v73);
        char v77 = 0;
      }
      uint64_t AssociatedTypeWitness = (uint64_t)&v238[TupleTypeMetadata[12]];
      unint64_t v165 = &v238[TupleTypeMetadata[16]];
      unint64_t v166 = &v238[TupleTypeMetadata[20]];
      long long v241 = v223;
      uint64_t v242 = v60;
      unint64_t v243 = v224;
      uint64_t v244 = v62;
      type metadata accessor for FileItemVersion();
      uint64_t v167 = sub_24DCCA3F8();
      unint64_t v168 = *(void (**)(char *, uint64_t))(*(void *)(v167 - 8) + 8);
      v168(v166, v167);
      uint64_t v169 = sub_24DCCA3F8();
      unint64_t v170 = *(void (**)(char *, uint64_t))(*(void *)(v169 - 8) + 8);
      v170(v165, v169);
      uint64_t v171 = sub_24DCCA3F8();
      uint64_t v172 = *(void (**)(uint64_t, uint64_t))(*(void *)(v171 - 8) + 8);
      v172(AssociatedTypeWitness, v171);
      v168(v232, v167);
      v170(v233, v169);
      v172((uint64_t)v230, v171);
      goto LABEL_47;
    case 2u:
      uint64_t v78 = v225;
      long long v236 = v30;
      uint64_t v79 = ((uint64_t (*)(char *, char *, uint64_t))v49)(v225, v30, v240);
      MEMORY[0x270FA5388](v79);
      strcpy((char *)&v217 - 64, " destinationItemID baseVersion recursive domainVersion ");
      long long v241 = (char *)AssociatedTypeWitness;
      unint64_t v226 = (char *)swift_getAssociatedTypeWitness();
      uint64_t v242 = sub_24DCCA3F8();
      uint64_t v80 = swift_getAssociatedTypeWitness();
      uint64_t v81 = swift_getAssociatedTypeWitness();
      uint64_t v82 = swift_getAssociatedConformanceWitness();
      uint64_t v83 = v78;
      uint64_t v84 = swift_getAssociatedConformanceWitness();
      uint64_t v248 = v80;
      uint64_t v249 = v81;
      uint64_t v250 = v82;
      uint64_t v251 = v84;
      type metadata accessor for FileItemVersion();
      unint64_t v243 = (ValueMetadata *)sub_24DCCA3F8();
      uint64_t v244 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
      unint64_t v245 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t v85 = (int *)swift_getTupleTypeMetadata();
      unint64_t v86 = &v78[v85[12]];
      unint64_t v87 = (int *)&v78[v85[16]];

      uint64_t v88 = v238;
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        long long v233 = &v88[v85[12]];
        unint64_t v227 = (unint64_t)&v88[v85[16]];

        long long v228 = v87;
        uint64_t v89 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
        uint64_t v90 = v229;
        long long v232 = v86;
        uint64_t v91 = AssociatedTypeWitness;
        v89(v229, v83, AssociatedTypeWitness);
        uint64_t v92 = (uint64_t)v230;
        v89(v230, v88, v91);
        uint64_t v93 = v90;
        long long v241 = (char *)v80;
        uint64_t v242 = v81;
        unint64_t v243 = (ValueMetadata *)v82;
        uint64_t v244 = v84;
        type metadata accessor for FileItemVersion();
        uint64_t v94 = sub_24DCCA3F8();
        uint64_t v95 = *(void (**)(unint64_t, uint64_t))(*(void *)(v94 - 8) + 8);
        uint64_t v96 = v240;
        v95(v227, v94);
        uint64_t v97 = sub_24DCCA3F8();
        uint64_t v98 = *(void (**)(char *, uint64_t))(*(void *)(v97 - 8) + 8);
        v98(v233, v97);
        v95((unint64_t)v228, v94);
        v98(v232, v97);
        uint64_t v30 = v236;
        uint64_t v99 = v237;
        uint64_t v100 = v231;
        uint64_t v51 = v91;
        goto LABEL_44;
      }
      long long v241 = (char *)v80;
      uint64_t v242 = v81;
      unint64_t v243 = (ValueMetadata *)v82;
      uint64_t v244 = v84;
      type metadata accessor for FileItemVersion();
      uint64_t v146 = sub_24DCCA3F8();
      (*(void (**)(int *, uint64_t))(*(void *)(v146 - 8) + 8))(v87, v146);
      uint64_t v147 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v147 - 8) + 8))(v86, v147);
      uint64_t v27 = v78;
      uint64_t v30 = v236;
      goto LABEL_36;
    case 3u:
      uint64_t v101 = (char *)v224;
      long long v236 = v30;
      uint64_t v102 = ((uint64_t (*)(ValueMetadata *, char *, uint64_t))v49)(v224, v30, v240);
      MEMORY[0x270FA5388](v102);
      strcpy((char *)&v217 - 32, " item newName version ");
      uint64_t v51 = AssociatedTypeWitness;
      long long v241 = (char *)AssociatedTypeWitness;
      uint64_t v103 = type metadata accessor for SnapshotItem();
      uint64_t v242 = sub_24DCCA3F8();
      unint64_t v243 = &type metadata for Filename;
      uint64_t v244 = MEMORY[0x263F8D9D0];
      unint64_t v104 = (int *)swift_getTupleTypeMetadata();
      uint64_t v105 = &v101[v104[12]];
      uint64_t v106 = v104[16];
      unint64_t v107 = *(void *)&v101[v106 + 8];
      long long v230 = *(char **)&v101[v106];
      uint64_t v108 = v104[20];
      long long v229 = *(char **)&v101[v108];
      uint64_t v109 = v238;
      if (swift_getEnumCaseMultiPayload() != 3)
      {
        swift_bridgeObjectRelease();
        uint64_t v148 = sub_24DCCA3F8();
        (*(void (**)(char *, uint64_t))(*(void *)(v148 - 8) + 8))(v105, v148);
        uint64_t v27 = v101;
        goto LABEL_38;
      }
      unint64_t v227 = v107;
      long long v228 = v104;
      long long v232 = v105;
      long long v233 = (char *)v103;
      uint64_t v110 = *(void *)&v109[v106];
      unint64_t v226 = *(char **)&v109[v106 + 8];
      unint64_t v225 = *(char **)&v109[v108];
      uint64_t v111 = v237;
      uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
      uint64_t v113 = v220;
      v112(v220, v101, v51);
      id v114 = v221;
      v112(v221, v109, v51);
      swift_getAssociatedConformanceWitness();
      if ((sub_24DCC9798() & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v173 = *(void (**)(char *, uint64_t))(v111 + 8);
        v173(v114, v51);
        v173(v113, v51);
        char v77 = 0;
        uint64_t v174 = v240;
        uint64_t v175 = v231;
        unint64_t v176 = v238;
        unsigned int v120 = v228;
        goto LABEL_64;
      }
      uint64_t v235 = v110;
      unint64_t v115 = v227;
      swift_bridgeObjectRetain();
      uint64_t v116 = (uint64_t)v230;
      uint64_t v117 = sub_24D40114C((uint64_t)v230, v115);
      uint64_t v119 = v118;
      swift_bridgeObjectRelease();
      unsigned int v120 = v228;
      unint64_t v121 = (unint64_t)v226;
      if (!v119) {
        goto LABEL_51;
      }
      if (v117 == 12565487 && v119 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_50:
        swift_bridgeObjectRetain();
        unint64_t v178 = sub_24DCC9918();
        unint64_t v179 = sub_24D41824C(v178, v116, v115);
        uint64_t v181 = v180;
        uint64_t v183 = v182;
        unint64_t v184 = v121;
        uint64_t v186 = v185;
        swift_bridgeObjectRelease();
        uint64_t v187 = MEMORY[0x253327950](v179, v181, v183, v186);
        unint64_t v234 = v188;
        unint64_t v121 = v184;
        uint64_t v116 = v187;
        swift_bridgeObjectRelease();
        goto LABEL_52;
      }
      char v177 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if (v177) {
        goto LABEL_50;
      }
LABEL_51:
      swift_bridgeObjectRetain();
      unint64_t v234 = v115;
LABEL_52:
      swift_bridgeObjectRetain();
      uint64_t v189 = sub_24D40114C(v235, v121);
      uint64_t v191 = v190;
      swift_bridgeObjectRelease();
      if (!v191) {
        goto LABEL_58;
      }
      if (v189 == 12565487 && v191 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_57:
        swift_bridgeObjectRetain();
        uint64_t v193 = v235;
        unint64_t v194 = sub_24DCC9918();
        unint64_t v195 = sub_24D41824C(v194, v193, v121);
        uint64_t v196 = v116;
        uint64_t v198 = v197;
        uint64_t v200 = v199;
        uint64_t v202 = v201;
        swift_bridgeObjectRelease();
        uint64_t v203 = v198;
        uint64_t v116 = v196;
        id v114 = v221;
        uint64_t v204 = MEMORY[0x253327950](v195, v203, v200, v202);
        unint64_t v206 = v205;
        swift_bridgeObjectRelease();
        goto LABEL_59;
      }
      char v192 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if (v192) {
        goto LABEL_57;
      }
LABEL_58:
      swift_bridgeObjectRetain();
      unint64_t v206 = v121;
      uint64_t v204 = v235;
LABEL_59:
      uint64_t v207 = v237;
      if (v116 == v204 && v234 == v206)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        unint64_t v208 = *(void (**)(char *, uint64_t))(v207 + 8);
        uint64_t v209 = AssociatedTypeWitness;
        v208(v114, AssociatedTypeWitness);
        v208(v113, v209);
        uint64_t v174 = v240;
        uint64_t v175 = v231;
        unint64_t v176 = v238;
      }
      else
      {
        char v210 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v211 = *(void (**)(char *, uint64_t))(v207 + 8);
        uint64_t v212 = AssociatedTypeWitness;
        v211(v114, AssociatedTypeWitness);
        v211(v113, v212);
        char v77 = 0;
        uint64_t v174 = v240;
        uint64_t v175 = v231;
        unint64_t v176 = v238;
        if ((v210 & 1) == 0) {
          goto LABEL_64;
        }
      }
      char v77 = v229 == v225;
LABEL_64:
      size_t v213 = &v176[v120[12]];
      uint64_t v214 = sub_24DCCA3F8();
      unint64_t v215 = *(void (**)(char *, uint64_t))(*(void *)(v214 - 8) + 8);
      v215(v213, v214);
      v215(v232, v214);
      (*(void (**)(char *, uint64_t))(v175 + 8))(v236, v174);
      return v77 & 1;
    case 4u:
      uint64_t v96 = v240;
      v49(v21, v30, v240);
      unint64_t v122 = v238;
      if (swift_getEnumCaseMultiPayload() != 4) {
        goto LABEL_31;
      }
      uint64_t v99 = v237;
      unint64_t v123 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
      uint64_t v93 = v229;
      unint64_t v124 = v229;
      unint64_t v125 = v21;
      goto LABEL_24;
    case 5u:
      uint64_t v96 = v240;
      v49(v18, v30, v240);
      unint64_t v122 = v238;
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v27 = v18;
        goto LABEL_36;
      }
      uint64_t v99 = v237;
      unint64_t v123 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
      uint64_t v93 = v229;
      unint64_t v124 = v229;
      unint64_t v125 = v18;
LABEL_24:
      uint64_t v51 = AssociatedTypeWitness;
      v123(v124, v125, AssociatedTypeWitness);
      uint64_t v92 = (uint64_t)v230;
      v123(v230, v122, v51);
      goto LABEL_43;
    case 6u:
      uint64_t v126 = v223;
      long long v236 = v30;
      uint64_t v96 = v240;
      v49(v223, v30, v240);
      uint64_t v127 = v235;
      uint64_t v128 = sub_24DCCA3F8();
      uint64_t v51 = AssociatedTypeWitness;
      uint64_t v129 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v130 = &v126[v129];
      unsigned int v131 = v238;
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v128 - 8) + 8))(&v126[v129], v128);
        uint64_t v27 = v126;
        goto LABEL_38;
      }
      uint64_t v132 = &v131[v129];
      uint64_t v133 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v127 - 8) + 48);
      int v134 = v133(v130, 1, v127);
      uint64_t v135 = v127;
      uint64_t v99 = v237;
      if (v134 == 1 && v133(v132, 1, v135) == 1)
      {
        uint64_t v136 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
        uint64_t v137 = v126;
        uint64_t v138 = v229;
        v136(v229, v137, v51);
        uint64_t v92 = (uint64_t)v230;
        uint64_t v139 = v131;
        uint64_t v140 = v130;
        uint64_t v93 = v138;
        v136(v230, v139, v51);
        (*(void (**)(char *, uint64_t))(*(void *)(v128 - 8) + 8))(v140, v128);
      }
      else
      {
        unsigned int v160 = *(void (**)(char *, char *, uint64_t))(v99 + 32);
        long long v233 = v130;
        uint64_t v93 = v229;
        v160(v229, v126, v51);
        uint64_t v161 = (uint64_t)v230;
        v160(v230, v131, v51);
        uint64_t v162 = *(void (**)(char *, uint64_t))(*(void *)(v128 - 8) + 8);
        v162(v132, v128);
        v162(v233, v128);
        uint64_t v92 = v161;
      }
      uint64_t v30 = v236;
      goto LABEL_43;
    case 7u:
      uint64_t v21 = (char *)v222;
      v49((char *)v222, v30, v240);
      unint64_t v141 = v238;
      if (swift_getEnumCaseMultiPayload() != 7)
      {
LABEL_31:
        uint64_t v27 = v21;
LABEL_36:
        uint64_t v149 = v237;
        uint64_t v51 = AssociatedTypeWitness;
        goto LABEL_39;
      }
      uint64_t v99 = v237;
      int v142 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
      uint64_t v93 = v229;
      uint64_t v51 = AssociatedTypeWitness;
      v142(v229, v21, AssociatedTypeWitness);
      uint64_t v92 = (uint64_t)v230;
      v142(v230, v141, v51);
      uint64_t v96 = v240;
LABEL_43:
      uint64_t v100 = v231;
LABEL_44:
      (*(void (**)(char *, uint64_t))(v100 + 8))(v30, v96);
      swift_getAssociatedConformanceWitness();
      char v77 = sub_24DCC9798();
      uint64_t v163 = *(void (**)(uint64_t, uint64_t))(v99 + 8);
      v163(v92, v51);
      v163((uint64_t)v93, v51);
      return v77 & 1;
    default:
      uint64_t v50 = ((uint64_t (*)(char *, char *, uint64_t))v49)(v27, v30, v240);
      MEMORY[0x270FA5388](v50);
      long long v236 = v30;
      strcpy((char *)&v217 - 48, " item version domainVersion ");
      uint64_t v51 = AssociatedTypeWitness;
      long long v241 = (char *)AssociatedTypeWitness;
      long long v230 = (char *)type metadata accessor for SnapshotItem();
      uint64_t v242 = sub_24DCCA3F8();
      unint64_t v243 = (ValueMetadata *)MEMORY[0x263F8D9D0];
      uint64_t v244 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t v52 = (int *)swift_getTupleTypeMetadata();
      uint64_t v53 = &v27[v52[12]];
      int v54 = *(char **)&v27[v52[16]];

      uint64_t v55 = v238;
      if (swift_getEnumCaseMultiPayload())
      {
        uint64_t v56 = sub_24DCCA3F8();
        (*(void (**)(char *, uint64_t))(*(void *)(v56 - 8) + 8))(v53, v56);
LABEL_38:
        uint64_t v30 = v236;
        uint64_t v149 = v237;
LABEL_39:
        char v151 = v232;
        uint64_t v150 = v233;
        (*(void (**)(char *, uint64_t))(v149 + 8))(v27, v51);
        (*((void (**)(char *, char *))v151 + 1))(v30, v150);
        char v77 = 0;
      }
      else
      {
        long long v233 = *(char **)&v55[v52[16]];

        long long v229 = v54;
        uint64_t v152 = v237;
        long long v232 = v53;
        unint64_t v153 = v55;
        unint64_t v154 = *(void (**)(char *, char *, uint64_t))(v237 + 32);
        v154(v44, v27, v51);
        v154(v41, v55, v51);
        swift_getAssociatedConformanceWitness();
        char v155 = sub_24DCC9798();
        unint64_t v156 = *(void (**)(char *, uint64_t))(v152 + 8);
        v156(v41, v51);
        v156(v44, v51);
        char v77 = v155 & (v229 == v233);
        unint64_t v157 = &v153[v52[12]];
        uint64_t v158 = sub_24DCCA3F8();
        unint64_t v159 = *(void (**)(char *, uint64_t))(*(void *)(v158 - 8) + 8);
        v159(v157, v158);
        v159(v232, v158);
LABEL_47:
        (*(void (**)(char *, uint64_t))(v231 + 8))(v236, v240);
      }
      return v77 & 1;
  }
}

uint64_t sub_24DA07528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  int v6 = a1;
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  v11(v10, v4, a2);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      uint64_t v81 = &v71;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      uint64_t v80 = (char *)(&v71 - 10);
      strcpy((char *)&v71 - 80, " item destinationItemID baseVersion fields version domainVersion ");
      uint64_t v22 = *(void *)(a2 + 32);
      LODWORD(v82) = v6;
      uint64_t v79 = *(ValueMetadata **)(a2 + 16);
      uint64_t v78 = v22;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      type metadata accessor for SnapshotItem();
      uint64_t v84 = sub_24DCCA3F8();
      swift_getAssociatedTypeWitness();
      uint64_t v85 = (ValueMetadata *)sub_24DCCA3F8();
      uint64_t v23 = swift_getAssociatedTypeWitness();
      uint64_t v24 = swift_getAssociatedTypeWitness();
      uint64_t v76 = v23;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v75 = AssociatedConformanceWitness;
      char v77 = (char *)v24;
      uint64_t v74 = swift_getAssociatedConformanceWitness();
      uint64_t v90 = v23;
      uint64_t v91 = v24;
      uint64_t v92 = AssociatedConformanceWitness;
      uint64_t v93 = v74;
      type metadata accessor for FileItemVersion();
      uint64_t v86 = sub_24DCCA3F8();
      unint64_t v87 = &type metadata for Fields;
      uint64_t v88 = MEMORY[0x263F8D9D0];
      uint64_t v89 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v27 = *(uint64_t **)&v10[TupleTypeMetadata[24]];
      uint64_t v80 = *(char **)&v10[TupleTypeMetadata[28]];
      uint64_t v81 = v27;

      uint64_t v28 = a3 + TupleTypeMetadata[12];
      uint64_t v29 = a3 + TupleTypeMetadata[16];
      uint64_t v72 = a3 + TupleTypeMetadata[20];
      uint64_t v73 = TupleTypeMetadata[24];
      uint64_t v30 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v30 - 8) + 32))(a3, v10, v30);
      uint64_t v31 = type metadata accessor for SnapshotItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v28, 1, 1, v31);
      uint64_t v32 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v29, 1, 1, v32);
      uint64_t AssociatedTypeWitness = v76;
      uint64_t v84 = (uint64_t)v77;
      uint64_t v85 = (ValueMetadata *)v75;
      uint64_t v86 = v74;
      uint64_t v33 = type metadata accessor for FileItemVersion();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v72, 1, 1, v33);
      *(void *)(a3 + v73) = v81;
      uint64_t v34 = v80;
      if ((v82 & 1) == 0) {
        uint64_t v34 = 0;
      }
      uint64_t v35 = &v10[TupleTypeMetadata[12]];
      uint64_t v36 = &v10[TupleTypeMetadata[16]];
      uint64_t v37 = &v10[TupleTypeMetadata[20]];
      uint64_t v38 = TupleTypeMetadata[32];
      *(void *)(a3 + TupleTypeMetadata[28]) = v34;
      *(void *)(a3 + v38) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v39 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v37, v39);
      uint64_t v40 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v36, v40);
      uint64_t v41 = sub_24DCCA3F8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v35, v41);
      break;
    case 2:
      uint64_t v80 = (char *)&v71;
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v71 - 64, " destinationItemID baseVersion recursive domainVersion ");
      uint64_t v42 = *(void *)(a2 + 32);
      uint64_t v81 = *(uint64_t **)(a2 + 16);
      uint64_t v82 = v42;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      uint64_t v84 = sub_24DCCA3F8();
      uint64_t v43 = swift_getAssociatedTypeWitness();
      uint64_t v44 = swift_getAssociatedTypeWitness();
      uint64_t v45 = swift_getAssociatedConformanceWitness();
      uint64_t v79 = (ValueMetadata *)v45;
      uint64_t v78 = swift_getAssociatedConformanceWitness();
      uint64_t v90 = v43;
      uint64_t v91 = v44;
      uint64_t v92 = v45;
      uint64_t v93 = v78;
      type metadata accessor for FileItemVersion();
      uint64_t v85 = (ValueMetadata *)sub_24DCCA3F8();
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
      unint64_t v87 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t v46 = (int *)swift_getTupleTypeMetadata();
      uint64_t v80 = &v10[v46[12]];
      char v77 = &v10[v46[16]];

      uint64_t v47 = a3 + v46[12];
      uint64_t v74 = a3 + v46[16];
      uint64_t v48 = v46[20];
      uint64_t v75 = v46[24];
      uint64_t v76 = v48;
      uint64_t v49 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v49 - 8) + 32))(a3, v10, v49);
      uint64_t v50 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v47, 1, 1, v50);
      uint64_t AssociatedTypeWitness = v43;
      uint64_t v84 = v44;
      uint64_t v85 = v79;
      uint64_t v86 = v78;
      uint64_t v51 = type metadata accessor for FileItemVersion();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v74, 1, 1, v51);
      *(unsigned char *)(a3 + v76) = 2;
      *(void *)(a3 + v75) = 0;
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v52 - 8) + 8))(v77, v52);
      uint64_t v53 = sub_24DCCA3F8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v53 - 8) + 8))(v80, v53);
      break;
    case 3:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v71 - 32, " item newName version ");
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      type metadata accessor for SnapshotItem();
      uint64_t v84 = sub_24DCCA3F8();
      uint64_t v85 = &type metadata for Filename;
      uint64_t v86 = MEMORY[0x263F8D9D0];
      int v54 = (int *)swift_getTupleTypeMetadata();
      uint64_t v55 = v54[16];
      uint64_t v57 = *(void *)&v10[v55];
      uint64_t v56 = *(void *)&v10[v55 + 8];
      uint64_t v81 = *(uint64_t **)&v10[v54[20]];
      uint64_t v82 = v56;
      uint64_t v58 = a3 + v54[12];
      uint64_t v59 = (void *)(a3 + v55);
      uint64_t v60 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v60 - 8) + 32))(a3, v10, v60);
      uint64_t v61 = type metadata accessor for SnapshotItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v58, 1, 1, v61);
      uint64_t v62 = v82;
      *uint64_t v59 = v57;
      v59[1] = v62;
      id v63 = v81;
      if ((v6 & 1) == 0) {
        id v63 = 0;
      }
      uint64_t v20 = &v10[v54[12]];
      *(void *)(a3 + v54[20]) = v63;
      goto LABEL_14;
    case 4:
    case 5:
    case 7:
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, a2);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v11)(a3, v4, a2);
      break;
    case 6:
      uint64_t v65 = *(void *)(a2 + 16);
      uint64_t v66 = swift_getAssociatedTypeWitness();
      uint64_t v67 = sub_24DCCA3F8();
      uint64_t v68 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v69 = &v10[v68];
      uint64_t v70 = a3 + v68;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v66 - 8) + 32))(a3, v10, v66);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v70, 1, 1, v65);
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v67 - 8) + 8))(v69, v67);
      break;
    default:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v71 - 48, " item version domainVersion ");
      LODWORD(v82) = v6;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      type metadata accessor for SnapshotItem();
      uint64_t v84 = sub_24DCCA3F8();
      uint64_t v85 = (ValueMetadata *)MEMORY[0x263F8D9D0];
      uint64_t v86 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
      uint64_t v14 = (int *)swift_getTupleTypeMetadata();
      uint64_t v15 = *(void *)&v10[v14[16]];

      uint64_t v16 = a3 + v14[12];
      uint64_t v17 = swift_getAssociatedTypeWitness();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(a3, v10, v17);
      uint64_t v18 = type metadata accessor for SnapshotItem();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
      if (v82) {
        uint64_t v19 = v15;
      }
      else {
        uint64_t v19 = 0;
      }
      uint64_t v20 = &v10[v14[12]];
      uint64_t v21 = v14[20];
      *(void *)(a3 + v14[16]) = v19;
      *(void *)(a3 + v21) = 0;
LABEL_14:
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = sub_24DCCA3F8();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v64 - 8) + 8))(v20, v64);
      break;
  }
  return result;
}

uint64_t sub_24DA08408(uint64_t a1)
{
  return sub_24DA09190(a1, (void (*)(unsigned char *, uint64_t))sub_24DA04B58);
}

uint64_t sub_24DA08424(char *a1, char *a2, uint64_t a3)
{
  return sub_24DA058A0(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(ValueMetadata **)(a3 + 32), *(void *)(a3 + 40));
}

uint64_t sub_24DA08434(uint64_t a1)
{
  return sub_24DA09190(a1, (void (*)(unsigned char *, uint64_t))sub_24DA04B58);
}

uint64_t sub_24DA08464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA09244(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_24DA04B58);
}

uint64_t sub_24DA0847C()
{
  return swift_getWitnessTable();
}

unint64_t sub_24DA08498(void *a1)
{
  uint64_t v2 = v1;
  unint64_t v5 = a1[2];
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  unint64_t v22 = a1[3];
  unint64_t v4 = v22;
  unint64_t v23 = v5;
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  uint64_t v8 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v22 - v10;
  unint64_t v22 = v5;
  unint64_t v23 = v4;
  uint64_t v24 = v7;
  uint64_t v25 = v6;
  uint64_t v12 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v22 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v19 + 16))(v18, v2, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v18, v8);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_24DCC9968();
    swift_getWitnessTable();
    sub_24DCCADC8();
    unint64_t v20 = v22;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v18, v12);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_24DCC9968();
    swift_getWitnessTable();
    sub_24DCCADC8();
    unint64_t v20 = v22;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  return v20;
}

uint64_t sub_24DA087AC@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = a2[2];
  uint64_t v7 = a2[3];
  uint64_t v10 = a2[4];
  uint64_t v9 = a2[5];
  uint64_t v25 = a3;
  uint64_t v26 = v7;
  uint64_t v27 = v8;
  uint64_t v28 = v9;
  uint64_t v29 = v10;
  uint64_t v11 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v26 = v8;
  uint64_t v27 = v7;
  uint64_t v28 = v10;
  uint64_t v29 = v9;
  uint64_t v15 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v24 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v24 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v22 + 16))(v21, v4, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v21, v11);
    sub_24DA07528(a1 & 1, v11, v25);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v19, v21, v15);
    sub_24DA07528(a1 & 1, v15, v25);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24DA08A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, ValueMetadata *a5, ValueMetadata *a6)
{
  uint64_t v48 = a1;
  uint64_t v49 = a2;
  uint64_t v50 = a4;
  uint64_t v51 = a3;
  uint64_t v52 = a6;
  uint64_t v53 = a5;
  uint64_t v10 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v39 = (char *)&v38 - v11;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v41 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v12 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v38 = (char *)&v38 - v13;
  uint64_t v42 = a3;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v52 = a5;
  uint64_t v53 = a6;
  uint64_t v47 = a6;
  uint64_t v14 = type metadata accessor for TestingOperation();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v38 - v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v40 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v24 = (char *)&v38 - v23;
  uint64_t v25 = (char *)&v38 + *(int *)(v22 + 48) - v23;
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  v26((char *)&v38 - v23, v48, v14);
  v26(v25, v49, v14);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v26(v20, (uint64_t)v24, v14);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      uint64_t v32 = v12;
      uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
      uint64_t v34 = v38;
      uint64_t v35 = v41;
      v33(v38, v25, v41);
      char v30 = sub_24DA058A0(v20, v34, v42, v45, v46, (uint64_t)v47);
      uint64_t v36 = *(void (**)(char *, uint64_t))(v32 + 8);
      v36(v34, v35);
      v36(v20, v35);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v20, v41);
    goto LABEL_7;
  }
  v26(v18, (uint64_t)v24, v14);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v18, v44);
LABEL_7:
    char v30 = 0;
    uint64_t v15 = v40;
    uint64_t v14 = TupleTypeMetadata2;
    goto LABEL_9;
  }
  uint64_t v28 = v43;
  uint64_t v27 = v44;
  uint64_t v29 = v39;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v39, v25, v44);
  char v30 = sub_24DA058A0(v18, v29, v45, v42, v47, (uint64_t)v46);
  uint64_t v31 = *(void (**)(char *, uint64_t))(v28 + 8);
  v31(v29, v27);
  v31(v18, v27);
LABEL_9:
  (*(void (**)(char *, uint64_t))(v15 + 8))(v24, v14);
  return v30 & 1;
}

uint64_t sub_24DA08EE0(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v7 = a2[2];
  uint64_t v9 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v23 = a2[3];
  uint64_t v6 = v23;
  uint64_t v24 = v7;
  uint64_t v25 = v8;
  uint64_t v26 = v9;
  uint64_t v10 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v23 = v7;
  uint64_t v24 = v6;
  uint64_t v25 = v9;
  uint64_t v26 = v8;
  uint64_t v14 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v23 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v23 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v21 + 16))(v20, v3, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v20, v10);
    sub_24DCCB008();
    sub_24DA04B58(a1, v10);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    sub_24DCCB008();
    sub_24DA04B58(a1, v14);
    return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v18, v14);
  }
}

uint64_t sub_24DA09178(uint64_t a1)
{
  return sub_24DA09190(a1, (void (*)(unsigned char *, uint64_t))sub_24DA08EE0);
}

uint64_t sub_24DA09190(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  sub_24DCCAFF8();
  a2(v5, a1);
  return sub_24DCCB048();
}

uint64_t sub_24DA091EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA08A5C(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24), *(ValueMetadata **)(a3 + 32), *(ValueMetadata **)(a3 + 40));
}

uint64_t sub_24DA091FC(uint64_t a1)
{
  return sub_24DA09190(a1, (void (*)(unsigned char *, uint64_t))sub_24DA08EE0);
}

uint64_t sub_24DA0922C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA09244(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_24DA08EE0);
}

uint64_t sub_24DA09244(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  sub_24DCCAFF8();
  a4(v7, a2);
  return sub_24DCCB048();
}

uint64_t sub_24DA092A4(void *a1, uint64_t a2)
{
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v3);
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 16))(v3, v4);
  uint64_t v7 = v6;
  sub_24D73C78C(a2, (uint64_t)v16);
  uint64_t v8 = v17;
  if (v17)
  {
    uint64_t v9 = v18;
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 16))(v8, v9);
    uint64_t v12 = v11;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    if (v5 == v10 && v7 == v12)
    {
      swift_bridgeObjectRelease_n();
      char v14 = 1;
    }
    else
    {
      char v14 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_24D73C7F4((uint64_t)v16);
    swift_bridgeObjectRelease();
    char v14 = 0;
  }
  return v14 & 1;
}

void sub_24DA093D4(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  uint64_t v88 = a6;
  uint64_t v89 = a5;
  id v84 = a3;
  unint64_t v87 = a2;
  uint64_t v9 = sub_24DCC8288();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_24DCC82A8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F05488]), sel_init);
  id v15 = a1;
  unint64_t v16 = sub_24D3FAE2C(v15, 0);
  uint64_t v18 = v6;
  if (!v6)
  {
    uint64_t v22 = v16;
    uint64_t v81 = v13;
    uint64_t v80 = v11;
    uint64_t v82 = a4;
    id v83 = v14;
    int v23 = v17;

    int v86 = v23;
    uint64_t v85 = v22;
    if (v23 != 2 || v22)
    {
      uint64_t v25 = v83;
      if (v23 == 2 && v22 == 1)
      {
        id v24 = (id)*MEMORY[0x263F053F8];
      }
      else
      {
        *(void *)&v90[0] = 0x2F73662F70665F5FLL;
        *((void *)&v90[0] + 1) = 0xE800000000000000;
        sub_24D3D4384(v22, v86);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        id v24 = (id)sub_24DCC97B8();
        uint64_t v18 = 0;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v24 = (id)*MEMORY[0x263F053F0];
      uint64_t v25 = v83;
    }
    uint64_t v26 = v81;
    objc_msgSend(v25, sel_setItemIdentifier_, v24);

    objc_msgSend(v25, sel_setItemPendingReconciliationIsLockedInDB_, objc_msgSend(v15, sel_BOOLAtIndex_, 1));
    unsigned __int8 v27 = objc_msgSend(v15, sel_isNullAtIndex_, 2);
    uint64_t v28 = v10;
    if (v27) {
      id v79 = 0;
    }
    else {
      id v79 = objc_msgSend(v15, sel_integerAtIndex_, 2);
    }
    uint64_t v29 = v80;
    if (objc_msgSend(v15, sel_isNullAtIndex_, 3, v79))
    {
      char v30 = v82;
    }
    else
    {
      uint64_t v32 = v18;
      id v33 = objc_msgSend(v15, sel_dataAtIndex_, 3);
      uint64_t v34 = sub_24DCC8B68();
      unint64_t v36 = v35;

      uint64_t v18 = v32;
      uint64_t v42 = sub_24D73544C(v34, v36);
      sub_24D400DCC(v34, v36);
      if (v42)
      {
        char v30 = v82;
        uint64_t v31 = (char *)v42;
        if ((v27 & 1) == 0)
        {
LABEL_22:
          objc_msgSend(v25, sel_setItemPendingReconciliationJobSchedulingState_, 3);
          char v43 = sub_24DB1B818((uint64_t)v79);
          if (v43 == 70) {
            uint64_t v44 = -1;
          }
          else {
            uint64_t v44 = qword_24DCE2928[v43];
          }
          uint64_t v21 = v89;
          uint64_t v41 = v85;
          objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, v44);
          goto LABEL_48;
        }
LABEL_18:
        uint64_t v37 = v87;
        uint64_t v38 = v87[3];
        *(void *)&v90[0] = v85;
        BYTE8(v90[0]) = v86;
        sub_24D8F045C();
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_24DCCECE0;
        *(void *)(v39 + 32) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986EEC0);
        unint64_t v45 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(void *)v38 + 272))(v90, v39);
        swift_bridgeObjectRelease();
        if (v45 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v78 = sub_24DCCA9C8();
          swift_bridgeObjectRelease();
          uint64_t v46 = v89;
          if (v78) {
            goto LABEL_28;
          }
        }
        else
        {
          uint64_t v46 = v89;
          if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_28:
            uint64_t v81 = v31;
            if ((v45 & 0xC000000000000001) != 0)
            {
              uint64_t v47 = MEMORY[0x253328820](0, v45);
            }
            else
            {
              if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_72:
                __break(1u);
LABEL_73:
                sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v37);
              }
              uint64_t v47 = *(void *)(v45 + 32);
              swift_retain();
            }
            uint64_t v48 = v46;
            swift_bridgeObjectRelease();
            objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, qword_24DCE2928[(char)sub_24D899B04()]);
            unint64_t v49 = *(void *)(v47 + 96);
            unint64_t v50 = *(void *)(v47 + 104);
            unsigned int v51 = *(unsigned __int8 *)(v47 + 112);
            sub_24D3F1C98((id)v49, (id)v50, *(unsigned char *)(v47 + 112));
            char v52 = 0;
LABEL_34:
            uint64_t v37 = (void *)v37[21];
            swift_retain();
            sub_24D3F1C98((id)v49, (id)v50, v51);
            if (objc_sync_enter(v37)) {
              goto LABEL_73;
            }
            swift_beginAccess();
            uint64_t v54 = v37[2];
            swift_bridgeObjectRetain();
            if (objc_sync_exit(v37)) {
              sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v37);
            }
            uint64_t v55 = swift_release();
            if (v52)
            {
              uint64_t v91 = 0;
              memset(v90, 0, sizeof(v90));
            }
            else
            {
              swift_beginAccess();
              uint64_t v55 = sub_24D73C78C(v47 + 56, (uint64_t)v90);
            }
            uint64_t v56 = v51;
            uint64_t v25 = v83;
            switch(v51)
            {
              case 1u:
                uint64_t v56 = 0;
                break;
              case 2u:
                break;
              case 3u:
                uint64_t v56 = 3;
                break;
              case 4u:
                if (v49 | v50) {
                  uint64_t v56 = 5;
                }
                else {
                  uint64_t v56 = 4;
                }
                break;
              default:
                MEMORY[0x270FA5388](v55);
                *(&v79 - 2) = v90;
                char v57 = sub_24D82E784((uint64_t (*)(_OWORD *))sub_24DA0FD24, (uint64_t)(&v79 - 4), v54, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_24D57AF40);
                uint64_t v25 = v83;
                uint64_t v56 = v57 & 1;
                break;
            }
            sub_24D73C7F4((uint64_t)v90);
            swift_bridgeObjectRelease();
            objc_msgSend(v25, sel_setItemPendingReconciliationJobSchedulingState_, v56);
            sub_24D3E380C((void *)v49, (id)v50, v51);
            swift_release();
            sub_24D900154((void *)v49, (id)v50, v51);
            uint64_t v21 = v48;
            uint64_t v31 = v81;
            char v30 = v82;
            uint64_t v18 = 0;
            uint64_t v41 = v85;
LABEL_48:
            if (objc_msgSend(v25, sel_itemPendingReconciliationJobCode) == (id)26)
            {
              if (v31)
              {
                *(void *)&v90[0] = v31;
                uint64_t v58 = v31;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
                sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
                if (swift_dynamicCast())
                {
                  uint64_t v59 = v41;
                  id v60 = v92;
                  uint64_t v61 = objc_msgSend(v92, sel_fp_protectionClassBehindError);
                  if (v61)
                  {
                    uint64_t v37 = v61;
                    uint64_t v81 = v31;
                    uint64_t v89 = v18;
                    uint64_t v62 = sub_24DCC97E8();
                    uint64_t v64 = v63;
                    if (v62 == sub_24DCC97E8() && v64 == v65) {
                      goto LABEL_54;
                    }
                    char v68 = sub_24DCCAE28();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v68) {
                      goto LABEL_59;
                    }
                    uint64_t v73 = sub_24DCC97E8();
                    uint64_t v75 = v74;
                    if (v73 == sub_24DCC97E8() && v75 == v76)
                    {
LABEL_54:
                      swift_bridgeObjectRelease_n();
LABEL_59:
                      id v69 = v84;
                      if ((uint64_t)objc_msgSend(v84, sel_numberOfItemsPendingReconciliation) < 1)
                      {

                        uint64_t v72 = v81;
                        goto LABEL_63;
                      }
                      uint64_t v70 = (char *)objc_msgSend(v69, sel_numberOfItemsPendingReconciliation);
                      uint64_t v71 = v81;
                      if (!__OFSUB__(v70, 1))
                      {
                        objc_msgSend(v69, sel_setNumberOfItemsPendingReconciliation_, v70 - 1);

                        uint64_t v72 = v71;
LABEL_63:

                        id v19 = 0;
                        uint64_t v20 = v88;
                        goto LABEL_57;
                      }
                      goto LABEL_72;
                    }
                    char v77 = sub_24DCCAE28();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v77) {
                      goto LABEL_59;
                    }

                    uint64_t v41 = v59;
                    uint64_t v31 = v81;
                  }
                  else
                  {
                  }
                }
              }
            }
            dispatch_group_enter(v30);
            uint64_t v66 = swift_allocObject();
            *(void *)(v66 + 16) = v25;
            *(void *)(v66 + 24) = v30;
            id v19 = v25;
            uint64_t v67 = v30;
            sub_24D6658A0(v41, v86, (uint64_t)sub_24DA0FCD4, v66);
            swift_release();

            uint64_t v20 = v88;
            goto LABEL_57;
          }
        }
        swift_bridgeObjectRelease();
        objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, -1);
        *(void *)&v90[0] = v85;
        BYTE8(v90[0]) = v86;
        uint64_t v40 = (*(uint64_t (**)(_OWORD *))(*(void *)v38 + 256))(v90);
        uint64_t v53 = v40;
        if (!v40)
        {
          objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, -1);
          objc_msgSend(v25, sel_setItemPendingReconciliationJobSchedulingState_, -1);
          uint64_t v41 = v85;
          uint64_t v21 = v46;
          goto LABEL_48;
        }
        uint64_t v81 = v31;
        uint64_t v48 = v46;
        objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, qword_24DCE2928[(char)sub_24D89A540()]);
        unint64_t v49 = *(void *)(v53 + 96);
        unint64_t v50 = *(void *)(v53 + 104);
        unsigned int v51 = *(unsigned __int8 *)(v53 + 112);
        sub_24D3F1C98((id)v49, (id)v50, *(unsigned char *)(v53 + 112));
        swift_release();
        uint64_t v47 = 0;
        char v52 = 1;
        goto LABEL_34;
      }
      uint64_t v26 = v81;
      char v30 = v82;
    }
    sub_24DCC81E8();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4A4604();
    sub_24DCC8808();
    uint64_t v31 = (char *)sub_24DCC8128();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);

    if ((v27 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }

  id v19 = 0;
  uint64_t v20 = v88;
  uint64_t v21 = v89;
LABEL_57:
  *uint64_t v20 = v19;
}

void sub_24DA09FC4(void *a1@<X0>, void *a2@<X1>, void *a3@<X2>, NSObject *a4@<X3>, void *a5@<X4>, void *a6@<X8>)
{
  uint64_t v88 = a6;
  uint64_t v89 = a5;
  id v84 = a3;
  unint64_t v87 = a2;
  uint64_t v9 = sub_24DCC8288();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v10 = sub_24DCC82A8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F05488]), sel_init);
  id v15 = a1;
  unint64_t v16 = sub_24D3FAE2C(v15, 0);
  uint64_t v18 = v6;
  if (!v6)
  {
    uint64_t v22 = v16;
    uint64_t v81 = v13;
    uint64_t v80 = v11;
    uint64_t v82 = a4;
    id v83 = v14;
    int v23 = v17;

    int v86 = v23;
    uint64_t v85 = v22;
    if (v23 != 2 || v22)
    {
      uint64_t v25 = v83;
      if (v23 == 2 && v22 == 1)
      {
        id v24 = (id)*MEMORY[0x263F053F8];
      }
      else
      {
        *(void *)&v90[0] = 0x2F73662F70665F5FLL;
        *((void *)&v90[0] + 1) = 0xE800000000000000;
        sub_24D3D4384(v22, v86);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        id v24 = (id)sub_24DCC97B8();
        uint64_t v18 = 0;
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      id v24 = (id)*MEMORY[0x263F053F0];
      uint64_t v25 = v83;
    }
    uint64_t v26 = v81;
    objc_msgSend(v25, sel_setItemIdentifier_, v24);

    objc_msgSend(v25, sel_setItemPendingReconciliationIsLockedInDB_, objc_msgSend(v15, sel_BOOLAtIndex_, 1));
    unsigned __int8 v27 = objc_msgSend(v15, sel_isNullAtIndex_, 2);
    uint64_t v28 = v10;
    if (v27) {
      id v79 = 0;
    }
    else {
      id v79 = objc_msgSend(v15, sel_integerAtIndex_, 2);
    }
    uint64_t v29 = v80;
    if (objc_msgSend(v15, sel_isNullAtIndex_, 3, v79))
    {
      char v30 = v82;
    }
    else
    {
      uint64_t v32 = v18;
      id v33 = objc_msgSend(v15, sel_dataAtIndex_, 3);
      uint64_t v34 = sub_24DCC8B68();
      unint64_t v36 = v35;

      uint64_t v18 = v32;
      uint64_t v42 = sub_24D73544C(v34, v36);
      sub_24D400DCC(v34, v36);
      if (v42)
      {
        char v30 = v82;
        uint64_t v31 = (char *)v42;
        if ((v27 & 1) == 0)
        {
LABEL_22:
          objc_msgSend(v25, sel_setItemPendingReconciliationJobSchedulingState_, 3);
          char v43 = sub_24DB1B818((uint64_t)v79);
          if (v43 == 70) {
            uint64_t v44 = -1;
          }
          else {
            uint64_t v44 = qword_24DCE2928[v43];
          }
          uint64_t v21 = v89;
          uint64_t v41 = v85;
          objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, v44);
          goto LABEL_48;
        }
LABEL_18:
        uint64_t v37 = v87;
        uint64_t v38 = v87[3];
        *(void *)&v90[0] = v85;
        BYTE8(v90[0]) = v86;
        sub_24D8F045C();
        uint64_t v39 = swift_allocObject();
        *(_OWORD *)(v39 + 16) = xmmword_24DCCECE0;
        *(void *)(v39 + 32) = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986EEC0);
        unint64_t v45 = (*(uint64_t (**)(_OWORD *, uint64_t))(*(void *)v38 + 272))(v90, v39);
        swift_bridgeObjectRelease();
        if (v45 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v78 = sub_24DCCA9C8();
          swift_bridgeObjectRelease();
          uint64_t v46 = v89;
          if (v78) {
            goto LABEL_28;
          }
        }
        else
        {
          uint64_t v46 = v89;
          if (*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
LABEL_28:
            uint64_t v81 = v31;
            if ((v45 & 0xC000000000000001) != 0)
            {
              uint64_t v47 = MEMORY[0x253328820](0, v45);
            }
            else
            {
              if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                __break(1u);
LABEL_72:
                __break(1u);
LABEL_73:
                sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v37);
              }
              uint64_t v47 = *(void *)(v45 + 32);
              swift_retain();
            }
            uint64_t v48 = v46;
            swift_bridgeObjectRelease();
            objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, qword_24DCE2928[(char)sub_24D899B04()]);
            unint64_t v49 = *(void *)(v47 + 96);
            unint64_t v50 = *(void *)(v47 + 104);
            unsigned int v51 = *(unsigned __int8 *)(v47 + 112);
            sub_24D3F1C98((id)v49, (id)v50, *(unsigned char *)(v47 + 112));
            char v52 = 0;
LABEL_34:
            uint64_t v37 = (void *)v37[21];
            swift_retain();
            sub_24D3F1C98((id)v49, (id)v50, v51);
            if (objc_sync_enter(v37)) {
              goto LABEL_73;
            }
            swift_beginAccess();
            uint64_t v54 = v37[2];
            swift_bridgeObjectRetain();
            if (objc_sync_exit(v37)) {
              sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v37);
            }
            uint64_t v55 = swift_release();
            if (v52)
            {
              uint64_t v91 = 0;
              memset(v90, 0, sizeof(v90));
            }
            else
            {
              swift_beginAccess();
              uint64_t v55 = sub_24D73C78C(v47 + 56, (uint64_t)v90);
            }
            uint64_t v56 = v51;
            uint64_t v25 = v83;
            switch(v51)
            {
              case 1u:
                uint64_t v56 = 0;
                break;
              case 2u:
                break;
              case 3u:
                uint64_t v56 = 3;
                break;
              case 4u:
                if (v49 | v50) {
                  uint64_t v56 = 5;
                }
                else {
                  uint64_t v56 = 4;
                }
                break;
              default:
                MEMORY[0x270FA5388](v55);
                *(&v79 - 2) = v90;
                char v57 = sub_24D82E784((uint64_t (*)(_OWORD *))sub_24DA0FD24, (uint64_t)(&v79 - 4), v54, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_24D57AF40);
                uint64_t v25 = v83;
                uint64_t v56 = v57 & 1;
                break;
            }
            sub_24D73C7F4((uint64_t)v90);
            swift_bridgeObjectRelease();
            objc_msgSend(v25, sel_setItemPendingReconciliationJobSchedulingState_, v56);
            sub_24D3E380C((void *)v49, (id)v50, v51);
            swift_release();
            sub_24D900154((void *)v49, (id)v50, v51);
            uint64_t v21 = v48;
            uint64_t v31 = v81;
            char v30 = v82;
            uint64_t v18 = 0;
            uint64_t v41 = v85;
LABEL_48:
            if (objc_msgSend(v25, sel_itemPendingReconciliationJobCode) == (id)26)
            {
              if (v31)
              {
                *(void *)&v90[0] = v31;
                uint64_t v58 = v31;
                __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
                sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
                if (swift_dynamicCast())
                {
                  uint64_t v59 = v41;
                  id v60 = v92;
                  uint64_t v61 = objc_msgSend(v92, sel_fp_protectionClassBehindError);
                  if (v61)
                  {
                    uint64_t v37 = v61;
                    uint64_t v81 = v31;
                    uint64_t v89 = v18;
                    uint64_t v62 = sub_24DCC97E8();
                    uint64_t v64 = v63;
                    if (v62 == sub_24DCC97E8() && v64 == v65) {
                      goto LABEL_54;
                    }
                    char v68 = sub_24DCCAE28();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v68) {
                      goto LABEL_59;
                    }
                    uint64_t v73 = sub_24DCC97E8();
                    uint64_t v75 = v74;
                    if (v73 == sub_24DCC97E8() && v75 == v76)
                    {
LABEL_54:
                      swift_bridgeObjectRelease_n();
LABEL_59:
                      id v69 = v84;
                      if ((uint64_t)objc_msgSend(v84, sel_numberOfItemsPendingReconciliation) < 1)
                      {

                        uint64_t v72 = v81;
                        goto LABEL_63;
                      }
                      uint64_t v70 = (char *)objc_msgSend(v69, sel_numberOfItemsPendingReconciliation);
                      uint64_t v71 = v81;
                      if (!__OFSUB__(v70, 1))
                      {
                        objc_msgSend(v69, sel_setNumberOfItemsPendingReconciliation_, v70 - 1);

                        uint64_t v72 = v71;
LABEL_63:

                        id v19 = 0;
                        uint64_t v20 = v88;
                        goto LABEL_57;
                      }
                      goto LABEL_72;
                    }
                    char v77 = sub_24DCCAE28();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if (v77) {
                      goto LABEL_59;
                    }

                    uint64_t v41 = v59;
                    uint64_t v31 = v81;
                  }
                  else
                  {
                  }
                }
              }
            }
            dispatch_group_enter(v30);
            uint64_t v66 = swift_allocObject();
            *(void *)(v66 + 16) = v25;
            *(void *)(v66 + 24) = v30;
            id v19 = v25;
            uint64_t v67 = v30;
            sub_24D6658A0(v41, v86, (uint64_t)sub_24DA0FC28, v66);
            swift_release();

            uint64_t v20 = v88;
            goto LABEL_57;
          }
        }
        swift_bridgeObjectRelease();
        objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, -1);
        *(void *)&v90[0] = v85;
        BYTE8(v90[0]) = v86;
        uint64_t v40 = (*(uint64_t (**)(_OWORD *))(*(void *)v38 + 256))(v90);
        uint64_t v53 = v40;
        if (!v40)
        {
          objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, -1);
          objc_msgSend(v25, sel_setItemPendingReconciliationJobSchedulingState_, -1);
          uint64_t v41 = v85;
          uint64_t v21 = v46;
          goto LABEL_48;
        }
        uint64_t v81 = v31;
        uint64_t v48 = v46;
        objc_msgSend(v25, sel_setItemPendingReconciliationJobCode_, qword_24DCE2928[(char)sub_24D89A540()]);
        unint64_t v49 = *(void *)(v53 + 96);
        unint64_t v50 = *(void *)(v53 + 104);
        unsigned int v51 = *(unsigned __int8 *)(v53 + 112);
        sub_24D3F1C98((id)v49, (id)v50, *(unsigned char *)(v53 + 112));
        swift_release();
        uint64_t v47 = 0;
        char v52 = 1;
        goto LABEL_34;
      }
      uint64_t v26 = v81;
      char v30 = v82;
    }
    sub_24DCC81E8();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4A4604();
    sub_24DCC8808();
    uint64_t v31 = (char *)sub_24DCC8128();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v26, v28);

    if ((v27 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_18;
  }

  id v19 = 0;
  uint64_t v20 = v88;
  uint64_t v21 = v89;
LABEL_57:
  *uint64_t v20 = v19;
}

void sub_24DA0ABB4(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v103 = a4;
  uint64_t v101 = a2;
  uint64_t v112 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_24DCC9078();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F05490]), sel_init);
  id v13 = a1;
  unint64_t v14 = sub_24D3FAE2C(v13, 0);
  if (!v5)
  {
    id v19 = (void *)v14;
    int v20 = v15;
    uint64_t v98 = v11;
    uint64_t v94 = v9;
    uint64_t v95 = v8;
    id v104 = v12;

    uint64_t v97 = a3;
    int v100 = v20;
    if (v20 != 2 || v19)
    {
      if (v20 != 2 || v19 != (void *)1)
      {
        uint64_t aBlock = 0x2F73662F70665F5FLL;
        unint64_t v107 = 0xE800000000000000;
        sub_24D3D4384((uint64_t)v19, v20);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        id v22 = (id)sub_24DCC97B8();
        swift_bridgeObjectRelease();
LABEL_11:
        objc_msgSend(v104, sel_setItemIdentifier_, v22);

        uint64_t v23 = v101;
        uint64_t v24 = *(void *)(v101 + 24);
        uint64_t v99 = (uint64_t)v19;
        uint64_t aBlock = (uint64_t)v19;
        LOBYTE(v107) = v100;
        sub_24D8F045C();
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_24DCCECE0;
        *(void *)(v25 + 32) = __swift_instantiateConcreteTypeFromMangledName(qword_26B193CA8);
        uint64_t v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)v24 + 272))(&aBlock, v25);
        uint64_t v93 = (uint64_t (*)())v13;
        unint64_t v32 = v26;
        swift_bridgeObjectRelease();
        if (v32 >> 62) {
          goto LABEL_76;
        }
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_42;
        }
LABEL_77:
        swift_bridgeObjectRelease();
        id v57 = v104;
        objc_msgSend(v104, sel_setItemPendingScanningDiskEnumerationStatus_, -1);
        uint64_t v55 = 0;
        char v89 = v100;
LABEL_12:
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingReconciliation_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingRejection_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUp_, 0);
        unsigned __int8 v27 = *(void **)(v23 + qword_26B1A27B0);
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = v99;
        *(unsigned char *)(v28 + 24) = v89;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_24DA0FDB8;
        *(void *)(v29 + 24) = v28;
        uint64_t v110 = sub_24D3E3980;
        uint64_t v111 = v29;
        uint64_t aBlock = MEMORY[0x263EF8330];
        unint64_t v107 = 1107296256;
        uint64_t v108 = sub_24D3E38DC;
        uint64_t v109 = &block_descriptor_64_1;
        char v30 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t aBlock = 0;
        id v92 = v27;
        id v31 = objc_msgSend(v27, sel_fetchSwift_error_, v30, &aBlock);
        _Block_release(v30);
        uint64_t v23 = aBlock;
        unint64_t v32 = (unint64_t)(id)aBlock;
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (isEscapingClosureAtFileLocation) {
          goto LABEL_73;
        }
        uint64_t v96 = v28;
        if (v31)
        {
          uint64_t v34 = &selRef_createIndexerWithExtension_enabled_error_;
          if (objc_msgSend(v31, sel_next))
          {
            uint64_t v35 = v101;
            do
            {
              unint64_t v36 = (void *)MEMORY[0x253329610]();
              sub_24DA0C998(v31, v57, v35);
            }
            while ((objc_msgSend(v31, sel_next) & 1) != 0);
          }
          v91[1] = v55;
          objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion_, 0);
          objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent_, 0);
          objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDown_, 0);
          uint64_t v37 = v93;
          id v38 = objc_msgSend(v37, sel_stringAtIndex_, 2);
          if (!v38)
          {
            sub_24DCC97E8();
            id v38 = (id)sub_24DCC97B8();
            swift_bridgeObjectRelease();
          }

          uint64_t v39 = swift_allocObject();
          *(void *)(v39 + 16) = v38;
          uint64_t v40 = swift_allocObject();
          *(void *)(v40 + 16) = sub_24DA0FD40;
          *(void *)(v40 + 24) = v39;
          uint64_t v110 = sub_24D3E3980;
          uint64_t v111 = v40;
          uint64_t aBlock = MEMORY[0x263EF8330];
          unint64_t v107 = 1107296256;
          uint64_t v108 = sub_24D3E38DC;
          uint64_t v109 = &block_descriptor_78;
          uint64_t v41 = _Block_copy(&aBlock);
          uint64_t v93 = (uint64_t (*)())v38;
          swift_retain();
          swift_release();
          uint64_t aBlock = 0;
          id v42 = objc_msgSend(v92, sel_fetchSwift_error_, v41, &aBlock);
          _Block_release(v41);
          unint64_t v32 = (unint64_t)(id)aBlock;
          uint64_t v23 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if (v23) {
            goto LABEL_75;
          }
          uint64_t v101 = v39;
          if (v42)
          {
            if (objc_msgSend(v42, sel_next))
            {
              unint64_t v32 = (unint64_t)&selRef_createIndexerWithExtension_enabled_error_;
              do
              {
                uint64_t v23 = (uint64_t)v34;
                char v43 = (void *)MEMORY[0x253329610]();
                unsigned __int8 v44 = objc_msgSend(v42, sel_longAtIndex_, 1);
                id v45 = v104;
                if ((v44 & 0xD) != 0)
                {
                  uint64_t v46 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion);
                  if (__OFADD__(v46, 1))
                  {
                    __break(1u);
LABEL_72:
                    __break(1u);
LABEL_73:
                    __break(1u);
LABEL_74:
                    __break(1u);
LABEL_75:
                    __break(1u);
LABEL_76:
                    swift_bridgeObjectRetain();
                    uint64_t v90 = sub_24DCCA9C8();
                    swift_bridgeObjectRelease();
                    if (!v90) {
                      goto LABEL_77;
                    }
LABEL_42:
                    if ((v32 & 0xC000000000000001) != 0)
                    {
                      uint64_t v55 = MEMORY[0x253328820](0, v32);
                    }
                    else
                    {
                      if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                        __break(1u);
                      }
                      uint64_t v55 = *(void *)(v32 + 32);
                      swift_retain();
                    }
                    swift_bridgeObjectRelease();
                    swift_retain();
                    unsigned int v56 = sub_24D3FAFEC(1);
                    id v57 = v104;
                    LODWORD(v96) = v56;
                    uint64_t v74 = *(void **)(v55 + 96);
                    uint64_t v75 = *(void **)(v55 + 104);
                    char v76 = *(unsigned char *)(v55 + 112);
                    char v77 = *(void **)(v23 + 168);
                    swift_retain();
                    id v92 = v74;
                    sub_24D3F1C98(v74, v75, v76);
                    if (objc_sync_enter(v77)) {
                      sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v77);
                    }
                    swift_beginAccess();
                    swift_bridgeObjectRetain();
                    if (objc_sync_exit(v77)) {
                      sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v77);
                    }
                    swift_release();
                    swift_beginAccess();
                    sub_24D73C78C(v55 + 56, (uint64_t)&aBlock);
                    id v78 = v92;
                    uint64_t v79 = sub_24DA0F1B8(v96, (uint64_t)v92, (uint64_t)v75, v76);
                    char v81 = v80;
                    sub_24D3E380C(v78, v75, v76);
                    sub_24D73C7F4((uint64_t)&aBlock);
                    swift_bridgeObjectRelease();
                    if (v81) {
                      uint64_t v82 = -2;
                    }
                    else {
                      uint64_t v82 = v79;
                    }
                    objc_msgSend(v57, sel_setItemPendingScanningDiskEnumerationStatus_, v82);
                    int v83 = *(unsigned __int8 *)(v55 + 112);
                    if (*(unsigned char *)(v55 + 112))
                    {
                      uint64_t v84 = *(void *)(v55 + 96);
                      BOOL v85 = v84 == 0;
                      BOOL v86 = v84 != 0;
                      unsigned int v87 = !v85;
                      if (v83 != 2) {
                        unsigned int v87 = 0;
                      }
                      if (v83 == 1) {
                        uint64_t v88 = v86;
                      }
                      else {
                        uint64_t v88 = v87;
                      }
                    }
                    else
                    {
                      uint64_t v88 = *(void *)(v55 + 104) != 0;
                    }
                    char v89 = v100;
                    uint64_t v23 = v101;
                    objc_msgSend(v57, sel_setItemPendingScanningDiskHasMultiplePagesEnumeration_, v88);
                    swift_release();
                    goto LABEL_12;
                  }
                  objc_msgSend(v45, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion_, v46 + 1);
                }
                unint64_t v47 = (unint64_t)objc_msgSend(v42, sel_longAtIndex_, 2);
                id v48 = objc_msgSend(v42, sel_longAtIndex_, 3);
                uint64_t v109 = (void *)MEMORY[0x263F8D6C8];
                uint64_t aBlock = (uint64_t)v48;
                if (swift_dynamicCast())
                {
                  uint64_t v49 = v105;
                  id v50 = objc_msgSend(v42, sel_longAtIndex_, 4);
                  if (v49 || v50 != (id)2) {
                    goto LABEL_33;
                  }
                  if (qword_26B199AA0 != -1) {
                    swift_once();
                  }
                  if ((qword_26B1A24C8 & ~v47) != 0)
                  {
LABEL_33:
                    if ((v47 & 2) != 0)
                    {
                      id v51 = v104;
                      char v52 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent);
                      if (__OFADD__(v52, 1)) {
                        goto LABEL_74;
                      }
                      objc_msgSend(v51, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent_, v52 + 1);
                    }
                    else if (!v47)
                    {
                      goto LABEL_23;
                    }
                    id v53 = v104;
                    uint64_t v54 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDown);
                    if (__OFADD__(v54, 1)) {
                      goto LABEL_72;
                    }
                    objc_msgSend(v53, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDown_, v54 + 1);
                  }
                }
LABEL_23:
                uint64_t v34 = (char **)v23;
              }
              while (([v42 (SEL)(v23 + 3480)] & 1) != 0);
            }

            swift_release();
            uint64_t v59 = sub_24DA0FD40;
            uint64_t v18 = v102;
            int v17 = v103;
            id v60 = v97;
LABEL_53:
            dispatch_group_enter(v60);
            uint64_t v71 = swift_allocObject();
            id v72 = v104;
            *(void *)(v71 + 16) = v104;
            *(void *)(v71 + 24) = v60;
            id v16 = v72;
            uint64_t v73 = v60;
            sub_24D6658A0(v99, v100, (uint64_t)sub_24DA0FCFC, v71);
            swift_release();
            swift_release();
            sub_24D43DD74((uint64_t)v59);

            goto LABEL_54;
          }
          uint64_t v58 = (void *)sub_24DCC8828();

          swift_willThrow();
          swift_release();
          uint64_t v93 = sub_24DA0FD40;
        }
        else
        {
          uint64_t v58 = (void *)sub_24DCC8828();

          swift_willThrow();
          swift_release();
          uint64_t v93 = 0;
          uint64_t v101 = 0;
        }
        id v61 = (id)fpfs_current_or_default_log();
        uint64_t v62 = v98;
        sub_24DCC9088();
        id v63 = v58;
        id v64 = v58;
        uint64_t v65 = sub_24DCC9068();
        os_log_type_t v66 = sub_24DCCA128();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          char v68 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v67 = 138412290;
          id v69 = v58;
          uint64_t v70 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t aBlock = v70;
          sub_24DCCA428();
          *char v68 = v70;
          uint64_t v62 = v98;

          _os_log_impl(&dword_24D3D0000, v65, v66, "Failed gathering info for item pending scanning disk %@", v67, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v68, -1, -1);
          MEMORY[0x25332B030](v67, -1, -1);
        }
        else
        {
        }
        uint64_t v18 = v102;
        int v17 = v103;
        id v60 = v97;
        (*(void (**)(char *, uint64_t))(v94 + 8))(v62, v95);
        uint64_t v59 = v93;
        goto LABEL_53;
      }
      uint64_t v21 = (id *)MEMORY[0x263F053F8];
    }
    else
    {
      uint64_t v21 = (id *)MEMORY[0x263F053F0];
    }
    id v22 = *v21;
    goto LABEL_11;
  }

  id v16 = 0;
  uint64_t v18 = v102;
  int v17 = v103;
LABEL_54:
  *uint64_t v18 = v16;
}

void sub_24DA0BA18(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, void *a5@<X8>)
{
  uint64_t v102 = a5;
  uint64_t v103 = a4;
  uint64_t v101 = a2;
  uint64_t v112 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_24DCC9078();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F05490]), sel_init);
  id v13 = a1;
  unint64_t v14 = sub_24D3FAE2C(v13, 0);
  if (!v5)
  {
    id v19 = (void *)v14;
    int v20 = v15;
    uint64_t v98 = v11;
    uint64_t v94 = v9;
    uint64_t v95 = v8;
    id v104 = v12;

    uint64_t v97 = a3;
    int v100 = v20;
    if (v20 != 2 || v19)
    {
      if (v20 != 2 || v19 != (void *)1)
      {
        uint64_t aBlock = 0x2F73662F70665F5FLL;
        unint64_t v107 = 0xE800000000000000;
        sub_24D3D4384((uint64_t)v19, v20);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        id v22 = (id)sub_24DCC97B8();
        swift_bridgeObjectRelease();
LABEL_11:
        objc_msgSend(v104, sel_setItemIdentifier_, v22);

        uint64_t v23 = v101;
        uint64_t v24 = *(void *)(v101 + 24);
        uint64_t v99 = (uint64_t)v19;
        uint64_t aBlock = (uint64_t)v19;
        LOBYTE(v107) = v100;
        sub_24D8F045C();
        uint64_t v25 = swift_allocObject();
        *(_OWORD *)(v25 + 16) = xmmword_24DCCECE0;
        *(void *)(v25 + 32) = __swift_instantiateConcreteTypeFromMangledName(qword_26B193CA8);
        uint64_t v26 = (*(uint64_t (**)(uint64_t *, uint64_t))(*(void *)v24 + 272))(&aBlock, v25);
        uint64_t v93 = (uint64_t (*)(void *))v13;
        unint64_t v32 = v26;
        swift_bridgeObjectRelease();
        if (v32 >> 62) {
          goto LABEL_76;
        }
        if (*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_42;
        }
LABEL_77:
        swift_bridgeObjectRelease();
        id v57 = v104;
        objc_msgSend(v104, sel_setItemPendingScanningDiskEnumerationStatus_, -1);
        uint64_t v55 = 0;
        char v89 = v100;
LABEL_12:
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingReconciliation_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingRejection_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent_, 0);
        objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUp_, 0);
        unsigned __int8 v27 = *(void **)(v23 + qword_26B1A27B0);
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = v99;
        *(unsigned char *)(v28 + 24) = v89;
        uint64_t v29 = swift_allocObject();
        *(void *)(v29 + 16) = sub_24DA0FC60;
        *(void *)(v29 + 24) = v28;
        uint64_t v110 = sub_24D3E3980;
        uint64_t v111 = v29;
        uint64_t aBlock = MEMORY[0x263EF8330];
        unint64_t v107 = 1107296256;
        uint64_t v108 = sub_24D3E38DC;
        uint64_t v109 = &block_descriptor_23;
        char v30 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t aBlock = 0;
        id v92 = v27;
        id v31 = objc_msgSend(v27, sel_fetchSwift_error_, v30, &aBlock);
        _Block_release(v30);
        uint64_t v23 = aBlock;
        unint64_t v32 = (unint64_t)(id)aBlock;
        char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (isEscapingClosureAtFileLocation) {
          goto LABEL_73;
        }
        uint64_t v96 = v28;
        if (v31)
        {
          uint64_t v34 = &selRef_createIndexerWithExtension_enabled_error_;
          if (objc_msgSend(v31, sel_next))
          {
            uint64_t v35 = v101;
            do
            {
              unint64_t v36 = (void *)MEMORY[0x253329610]();
              sub_24DA0C998(v31, v57, v35);
            }
            while ((objc_msgSend(v31, sel_next) & 1) != 0);
          }
          v91[1] = v55;
          objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion_, 0);
          objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent_, 0);
          objc_msgSend(v57, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDown_, 0);
          uint64_t v37 = v93;
          id v38 = objc_msgSend(v37, sel_stringAtIndex_, 2);
          if (!v38)
          {
            sub_24DCC97E8();
            id v38 = (id)sub_24DCC97B8();
            swift_bridgeObjectRelease();
          }

          uint64_t v39 = swift_allocObject();
          *(void *)(v39 + 16) = v38;
          uint64_t v40 = swift_allocObject();
          *(void *)(v40 + 16) = sub_24DA0FCBC;
          *(void *)(v40 + 24) = v39;
          uint64_t v110 = sub_24D3E3980;
          uint64_t v111 = v40;
          uint64_t aBlock = MEMORY[0x263EF8330];
          unint64_t v107 = 1107296256;
          uint64_t v108 = sub_24D3E38DC;
          uint64_t v109 = &block_descriptor_36_0;
          uint64_t v41 = _Block_copy(&aBlock);
          uint64_t v93 = (uint64_t (*)(void *))v38;
          swift_retain();
          swift_release();
          uint64_t aBlock = 0;
          id v42 = objc_msgSend(v92, sel_fetchSwift_error_, v41, &aBlock);
          _Block_release(v41);
          unint64_t v32 = (unint64_t)(id)aBlock;
          uint64_t v23 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if (v23) {
            goto LABEL_75;
          }
          uint64_t v101 = v39;
          if (v42)
          {
            if (objc_msgSend(v42, sel_next))
            {
              unint64_t v32 = (unint64_t)&selRef_createIndexerWithExtension_enabled_error_;
              do
              {
                uint64_t v23 = (uint64_t)v34;
                char v43 = (void *)MEMORY[0x253329610]();
                unsigned __int8 v44 = objc_msgSend(v42, sel_longAtIndex_, 1);
                id v45 = v104;
                if ((v44 & 0xD) != 0)
                {
                  uint64_t v46 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion);
                  if (__OFADD__(v46, 1))
                  {
                    __break(1u);
LABEL_72:
                    __break(1u);
LABEL_73:
                    __break(1u);
LABEL_74:
                    __break(1u);
LABEL_75:
                    __break(1u);
LABEL_76:
                    swift_bridgeObjectRetain();
                    uint64_t v90 = sub_24DCCA9C8();
                    swift_bridgeObjectRelease();
                    if (!v90) {
                      goto LABEL_77;
                    }
LABEL_42:
                    if ((v32 & 0xC000000000000001) != 0)
                    {
                      uint64_t v55 = MEMORY[0x253328820](0, v32);
                    }
                    else
                    {
                      if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
                        __break(1u);
                      }
                      uint64_t v55 = *(void *)(v32 + 32);
                      swift_retain();
                    }
                    swift_bridgeObjectRelease();
                    swift_retain();
                    unsigned int v56 = sub_24D3FAFEC(1);
                    id v57 = v104;
                    LODWORD(v96) = v56;
                    uint64_t v74 = *(void **)(v55 + 96);
                    uint64_t v75 = *(void **)(v55 + 104);
                    char v76 = *(unsigned char *)(v55 + 112);
                    char v77 = *(void **)(v23 + 168);
                    swift_retain();
                    id v92 = v74;
                    sub_24D3F1C98(v74, v75, v76);
                    if (objc_sync_enter(v77)) {
                      sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v77);
                    }
                    swift_beginAccess();
                    swift_bridgeObjectRetain();
                    if (objc_sync_exit(v77)) {
                      sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v77);
                    }
                    swift_release();
                    swift_beginAccess();
                    sub_24D73C78C(v55 + 56, (uint64_t)&aBlock);
                    id v78 = v92;
                    uint64_t v79 = sub_24DA0F1B8(v96, (uint64_t)v92, (uint64_t)v75, v76);
                    char v81 = v80;
                    sub_24D3E380C(v78, v75, v76);
                    sub_24D73C7F4((uint64_t)&aBlock);
                    swift_bridgeObjectRelease();
                    if (v81) {
                      uint64_t v82 = -2;
                    }
                    else {
                      uint64_t v82 = v79;
                    }
                    objc_msgSend(v57, sel_setItemPendingScanningDiskEnumerationStatus_, v82);
                    int v83 = *(unsigned __int8 *)(v55 + 112);
                    if (*(unsigned char *)(v55 + 112))
                    {
                      uint64_t v84 = *(void *)(v55 + 96);
                      BOOL v85 = v84 == 0;
                      BOOL v86 = v84 != 0;
                      unsigned int v87 = !v85;
                      if (v83 != 2) {
                        unsigned int v87 = 0;
                      }
                      if (v83 == 1) {
                        uint64_t v88 = v86;
                      }
                      else {
                        uint64_t v88 = v87;
                      }
                    }
                    else
                    {
                      uint64_t v88 = *(void *)(v55 + 104) != 0;
                    }
                    char v89 = v100;
                    uint64_t v23 = v101;
                    objc_msgSend(v57, sel_setItemPendingScanningDiskHasMultiplePagesEnumeration_, v88);
                    swift_release();
                    goto LABEL_12;
                  }
                  objc_msgSend(v45, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownDeletion_, v46 + 1);
                }
                unint64_t v47 = (unint64_t)objc_msgSend(v42, sel_longAtIndex_, 2);
                id v48 = objc_msgSend(v42, sel_longAtIndex_, 3);
                uint64_t v109 = (void *)MEMORY[0x263F8D6C8];
                uint64_t aBlock = (uint64_t)v48;
                if (swift_dynamicCast())
                {
                  uint64_t v49 = v105;
                  id v50 = objc_msgSend(v42, sel_longAtIndex_, 4);
                  if (v49 || v50 != (id)2) {
                    goto LABEL_33;
                  }
                  if (qword_26B199AA0 != -1) {
                    swift_once();
                  }
                  if ((qword_26B1A24C8 & ~v47) != 0)
                  {
LABEL_33:
                    if ((v47 & 2) != 0)
                    {
                      id v51 = v104;
                      char v52 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent);
                      if (__OFADD__(v52, 1)) {
                        goto LABEL_74;
                      }
                      objc_msgSend(v51, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDownReparent_, v52 + 1);
                    }
                    else if (!v47)
                    {
                      goto LABEL_23;
                    }
                    id v53 = v104;
                    uint64_t v54 = (char *)objc_msgSend(v104, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncDown);
                    if (__OFADD__(v54, 1)) {
                      goto LABEL_72;
                    }
                    objc_msgSend(v53, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncDown_, v54 + 1);
                  }
                }
LABEL_23:
                uint64_t v34 = (char **)v23;
              }
              while (([v42 (SEL)(v23 + 3480)] & 1) != 0);
            }

            swift_release();
            uint64_t v59 = sub_24DA0FCBC;
            uint64_t v18 = v102;
            int v17 = v103;
            id v60 = v97;
LABEL_53:
            dispatch_group_enter(v60);
            uint64_t v71 = swift_allocObject();
            id v72 = v104;
            *(void *)(v71 + 16) = v104;
            *(void *)(v71 + 24) = v60;
            id v16 = v72;
            uint64_t v73 = v60;
            sub_24D6658A0(v99, v100, (uint64_t)sub_24DA0FC28, v71);
            swift_release();
            swift_release();
            sub_24D43DD74((uint64_t)v59);

            goto LABEL_54;
          }
          uint64_t v58 = (void *)sub_24DCC8828();

          swift_willThrow();
          swift_release();
          uint64_t v93 = sub_24DA0FCBC;
        }
        else
        {
          uint64_t v58 = (void *)sub_24DCC8828();

          swift_willThrow();
          swift_release();
          uint64_t v93 = 0;
          uint64_t v101 = 0;
        }
        id v61 = (id)fpfs_current_or_default_log();
        uint64_t v62 = v98;
        sub_24DCC9088();
        id v63 = v58;
        id v64 = v58;
        uint64_t v65 = sub_24DCC9068();
        os_log_type_t v66 = sub_24DCCA128();
        if (os_log_type_enabled(v65, v66))
        {
          uint64_t v67 = (uint8_t *)swift_slowAlloc();
          char v68 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v67 = 138412290;
          id v69 = v58;
          uint64_t v70 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t aBlock = v70;
          sub_24DCCA428();
          *char v68 = v70;
          uint64_t v62 = v98;

          _os_log_impl(&dword_24D3D0000, v65, v66, "Failed gathering info for item pending scanning disk %@", v67, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v68, -1, -1);
          MEMORY[0x25332B030](v67, -1, -1);
        }
        else
        {
        }
        uint64_t v18 = v102;
        int v17 = v103;
        id v60 = v97;
        (*(void (**)(char *, uint64_t))(v94 + 8))(v62, v95);
        uint64_t v59 = v93;
        goto LABEL_53;
      }
      uint64_t v21 = (id *)MEMORY[0x263F053F8];
    }
    else
    {
      uint64_t v21 = (id *)MEMORY[0x263F053F0];
    }
    id v22 = *v21;
    goto LABEL_11;
  }

  id v16 = 0;
  uint64_t v18 = v102;
  int v17 = v103;
LABEL_54:
  *uint64_t v18 = v16;
}

uint64_t sub_24DA0C87C(void *a1, unint64_t a2, char a3)
{
  sub_24DCCA728();
  sub_24DCC9968();
  if (!a3) {
    goto LABEL_5;
  }
  if (a3 != 1)
  {
    a2 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    a2 = -(uint64_t)a2;
  }
LABEL_7:
  id v6 = objc_msgSend(a1, sel_bindLongParameter_, a2, 0, 0xE000000000000000);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v8;
}

uint64_t sub_24DA0C998(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = v3;
  if ((objc_msgSend(a1, sel_isNullAtIndex_, 1) & 1) == 0)
  {
    unsigned __int8 v8 = sub_24D78684C(1);
    if (v3)
    {

      uint64_t v4 = 0;
    }
    else if (!v8)
    {
      uint64_t result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingReconciliation);
      uint64_t v10 = result + 1;
      if (__OFADD__(result, 1))
      {
LABEL_42:
        __break(1u);
        return result;
      }
      uint64_t v11 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingReconciliation_;
      goto LABEL_7;
    }
  }
  uint64_t result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenNotPendingReconciliation);
  uint64_t v10 = result + 1;
  if (__OFADD__(result, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v11 = &selRef_setItemPendingScanningDiskNumberOfChildrenNotPendingReconciliation_;
LABEL_7:
  objc_msgSend(a2, *v11, v10);
  unsigned int v12 = objc_msgSend(a1, sel_longAtIndex_, 2);
  char v13 = v12;
  if ((v12 & 0xD) == 0 || (v12 & 0x10) != 0) {
    goto LABEL_11;
  }
  if ((~v12 & 0x82) != 0 || (*(void *)(a3 + 112) & 0x4000) == 0)
  {
LABEL_19:
    uint64_t result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion);
    uint64_t v15 = result + 1;
    if (__OFADD__(result, 1))
    {
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    id v16 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpDeletion_;
    goto LABEL_21;
  }
  id v18 = a1;
  id v19 = objc_msgSend(v18, sel_stringAtIndex_, 4);
  int v20 = v19;
  if (!v19)
  {
    sub_24DCC97E8();
    int v20 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }

  uint64_t v21 = sub_24D88FD24();
  char v22 = sub_24D8659B4(v20, v21);

  uint64_t result = swift_release();
  if (!v4)
  {
    swift_release();
    if (v22)
    {
LABEL_11:
      if ((v13 & 0x40) == 0)
      {
LABEL_22:
        uint64_t result = (uint64_t)objc_msgSend(a1, sel_longAtIndex_, 3);
        if ((result & 2) != 0)
        {
          uint64_t result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent);
          if (__OFADD__(result, 1))
          {
LABEL_39:
            __break(1u);
            goto LABEL_40;
          }
          objc_msgSend(a2, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUpReparent_, result + 1);
        }
        else if (!result)
        {
          return result;
        }
        uint64_t result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingSyncUp);
        if (!__OFADD__(result, 1)) {
          return (uint64_t)objc_msgSend(a2, sel_setItemPendingScanningDiskNumberOfChildrenPendingSyncUp_, result + 1);
        }
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      uint64_t result = (uint64_t)objc_msgSend(a2, sel_itemPendingScanningDiskNumberOfChildrenPendingRejection);
      uint64_t v15 = result + 1;
      if (__OFADD__(result, 1))
      {
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
      id v16 = &selRef_setItemPendingScanningDiskNumberOfChildrenPendingRejection_;
LABEL_21:
      objc_msgSend(a2, *v16, v15);
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  return result;
}

uint64_t sub_24DA0CC30(void *a1)
{
  uint64_t v2 = sub_24DCC9858();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCC97E8();
  sub_24DCC9848();
  uint64_t v6 = sub_24DCC97F8();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = (void *)sub_24DCC8B28();
    sub_24D416034(v6, v8);
    id v11 = objc_msgSend(a1, sel_bindObjectParameter_, v10);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    return v12[0];
  }
  return result;
}

void sub_24DA0CE18(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, char ***a5@<X8>)
{
  id v6 = v5;
  uint64_t v98 = a4;
  uint64_t v96 = a3;
  uint64_t v97 = a5;
  aBlock[12] = *(id *)MEMORY[0x263EF8340];
  uint64_t v95 = sub_24DCC9078();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v99 = (char *)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  id v11 = objc_msgSend(v10, sel_stringAtIndex_, 0);
  if (!v11)
  {
    sub_24DCC97E8();
    id v11 = (id)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }

  unsigned int v12 = (char **)objc_msgSend(objc_allocWithZone(MEMORY[0x263F05498]), sel_init);
  objc_msgSend(v12, sel_setItemIdentifier_, v11);
  char v13 = *(char ***)(a2 + 24);
  aBlock[0] = v11;
  sub_24D8F04BC();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24DCCECE0;
  *(void *)(v14 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_26986F540);
  uint64_t v15 = (*((uint64_t (**)(id *, uint64_t))*v13 + 33))(aBlock, v14);
  if (!v5)
  {
    unint64_t v31 = v15;
    id v92 = v11;
    uint64_t v93 = a2;
    uint64_t v91 = (uint64_t (*)())v10;
    swift_bridgeObjectRelease();
    if (v31 >> 62) {
      goto LABEL_71;
    }
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      id v18 = v98;
      char v30 = v12;
      if (v32)
      {
        if ((v31 & 0xC000000000000001) != 0)
        {
          uint64_t v33 = MEMORY[0x253328820](0, v31);
        }
        else
        {
          if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_74:
            __break(1u);
          }
          uint64_t v33 = *(void *)(v31 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        swift_retain();
        unsigned int v34 = sub_24D3FAFEC(1);
        if (v6)
        {

          swift_release_n();
          id v16 = 0;
          uint64_t v17 = 0;
          goto LABEL_5;
        }
        LODWORD(v90) = v34;
        unint64_t v36 = *(void **)(v33 + 96);
        uint64_t v35 = *(void **)(v33 + 104);
        int v37 = *(unsigned __int8 *)(v33 + 112);
        BOOL v38 = v36 != 0;
        BOOL v39 = v38;
        if (v37 != 2) {
          BOOL v39 = 0;
        }
        if (v37 != 1) {
          BOOL v38 = v39;
        }
        if (*(unsigned char *)(v33 + 112)) {
          BOOL v40 = v38;
        }
        else {
          BOOL v40 = v35 != 0;
        }
        uint64_t v41 = *(void **)(v93 + 168);
        swift_retain();
        uint64_t v88 = v36;
        sub_24D3F1C98(v36, v35, v37);
        if (objc_sync_enter(v41)) {
          sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v41);
        }
        LODWORD(v89) = v40;
        swift_beginAccess();
        v87[1] = v41[2];
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v41)) {
          sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v41);
        }
        swift_release();
        swift_beginAccess();
        sub_24D73C78C(v33 + 56, (uint64_t)aBlock);
        id v42 = v88;
        uint64_t v90 = sub_24DA0F1B8(v90, (uint64_t)v88, (uint64_t)v35, v37);
        char v44 = v43;
        sub_24D3E380C(v42, v35, v37);
        sub_24D73C7F4((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        id v45 = (id)((v44 & 1) != 0 ? -2 : v90);
        objc_msgSend(v30, sel_setItemPendingScanningProviderEnumerationStatus_, v45);
        objc_msgSend(v30, sel_setItemPendingScanningProviderHasMultiplePagesEnumeration_, v89);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_setItemPendingScanningProviderEnumerationStatus_, -1);
        uint64_t v33 = 0;
      }
      aBlock[0] = v92;
      uint64_t v46 = (*((uint64_t (**)(id *))*v13 + 31))(aBlock);
      unint64_t v47 = (char *)v33;
      if (v6) {
        break;
      }
      uint64_t v48 = v46;
      if (!v46) {
        goto LABEL_34;
      }
      if ((objc_msgSend(v91, sel_longAtIndex_, 2) & 0x10) != 0)
      {
        unint64_t v51 = *(void *)(v48 + 96);
        id v50 = *(void **)(v48 + 104);
        uint64_t v52 = *(unsigned __int8 *)(v48 + 112);
        id v53 = *(void **)(v93 + 168);
        swift_retain_n();
        uint64_t v90 = (uint64_t)v50;
        sub_24D3F1C98((id)v51, v50, v52);
        if (objc_sync_enter(v53)) {
          sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v53);
        }
        swift_beginAccess();
        uint64_t v54 = v53[2];
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v53)) {
          sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v53);
        }
        swift_release_n();
        swift_beginAccess();
        uint64_t v55 = sub_24D73C78C(v48 + 56, (uint64_t)aBlock);
        switch(v52)
        {
          case 1:
            sub_24D3E380C((void *)v51, (id)v90, 1);
            uint64_t v57 = 0;
            break;
          case 2:
            uint64_t v57 = 2;
            sub_24D3E380C((void *)v51, (id)v90, 2);
            break;
          case 3:
            uint64_t v57 = 3;
            sub_24D3E380C((void *)v51, (id)v90, 3);
            break;
          case 4:
            if (v51 | v90) {
              uint64_t v57 = 5;
            }
            else {
              uint64_t v57 = 4;
            }
            break;
          default:
            MEMORY[0x270FA5388](v55);
            v87[-2] = aBlock;
            char v56 = sub_24D82E784((uint64_t (*)(_OWORD *))sub_24DA0FD24, (uint64_t)&v87[-4], v54, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_24D57AF40);
            sub_24D3E380C((void *)v51, (id)v90, 0);
            uint64_t v57 = v56 & 1;
            break;
        }
        char v89 = 0;
        sub_24D73C7F4((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        uint64_t v58 = v30;
        objc_msgSend(v58, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, v57);
      }
      else
      {
        char v89 = 0;
        uint64_t v49 = v30;
        objc_msgSend(v49, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, -1);
      }
      swift_release();
LABEL_50:
      uint64_t v59 = v93;
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildren_, 0);
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildrenPendingCreation_, 0);
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildrenFailingCreation_, 0);
      id v60 = *(void **)(v59 + qword_26B1A27B0);
      uint64_t v61 = swift_allocObject();
      id v62 = v92;
      *(void *)(v61 + 16) = v92;
      id v63 = (void *)swift_allocObject();
      v63[2] = sub_24DA0FD44;
      v63[3] = v61;
      uint64_t v93 = v61;
      aBlock[4] = sub_24D3E3980;
      aBlock[5] = v63;
      aBlock[0] = (id)MEMORY[0x263EF8330];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_24D3E38DC;
      aBlock[3] = &block_descriptor_92_0;
      id v64 = _Block_copy(aBlock);
      uint64_t v90 = (uint64_t)v62;
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      id v6 = objc_msgSend(v60, sel_fetchSwift_error_, v64, aBlock);
      _Block_release(v64);
      id v65 = aBlock[0];
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        goto LABEL_74;
      }
      if (!v6)
      {
        id v6 = (id)sub_24DCC8828();

        swift_willThrow();
        swift_release();
        id v16 = sub_24DA0FD44;
        id v18 = v98;
        uint64_t v17 = v93;
        goto LABEL_5;
      }
      uint64_t v99 = v47;
      if (!objc_msgSend(v6, sel_next))
      {
LABEL_63:
        uint64_t v75 = v91;
        char v76 = v89;
        unint64_t v77 = sub_24D3FAE2C(v75, 3);
        if (v76)
        {

          swift_release();
          id v18 = v98;
        }
        else
        {
          uint64_t v79 = v77;
          char v80 = v78;

          char v81 = v30;
          uint64_t v82 = v96;
          dispatch_group_enter(v96);
          uint64_t v83 = swift_allocObject();
          id v92 = 0;
          uint64_t v84 = v83;
          *(void *)(v83 + 16) = v81;
          *(void *)(v83 + 24) = v82;
          BOOL v85 = v81;
          BOOL v86 = v82;
          id v18 = v98;
          sub_24D6658A0(v79, v80, (uint64_t)sub_24DA0FCFC, v84);

          swift_release();
          swift_release();
        }
        uint64_t v28 = v97;
        swift_release();
        goto LABEL_9;
      }
      char v13 = &selRef_put_;
      unsigned int v12 = &selRef_createIndexerWithExtension_enabled_error_;
      while (1)
      {
        uint64_t v70 = (void *)MEMORY[0x253329610]();
        unint64_t v31 = v30;
        uint64_t v71 = (char *)objc_msgSend((id)v31, sel_itemPendingScanningProviderNumberOfChildren);
        if (__OFADD__(v71, 1)) {
          break;
        }
        objc_msgSend((id)v31, sel_setItemPendingScanningProviderNumberOfChildren_, v71 + 1);

        if (objc_msgSend(v6, sel_isNullAtIndex_, 0))
        {
          unsigned int v72 = objc_msgSend(v6, sel_isNullAtIndex_, 1);
          uint64_t v73 = (id)v31;
          unint64_t v31 = (unint64_t)v73;
          if (v72)
          {
            uint64_t v74 = (char *)objc_msgSend(v73, sel_itemPendingScanningProviderNumberOfChildrenPendingCreation);
            char v68 = v74 + 1;
            if (__OFADD__(v74, 1)) {
              goto LABEL_70;
            }
            id v69 = &selRef_setItemPendingScanningProviderNumberOfChildrenPendingCreation_;
          }
          else
          {
            uint64_t v67 = (char *)objc_msgSend(v73, sel_itemPendingScanningProviderNumberOfChildrenFailingCreation);
            char v68 = v67 + 1;
            if (__OFADD__(v67, 1)) {
              goto LABEL_69;
            }
            id v69 = &selRef_setItemPendingScanningProviderNumberOfChildrenFailingCreation_;
          }
          objc_msgSend((id)v31, *v69, v68);
        }
        if ((objc_msgSend(v6, sel_next) & 1) == 0) {
          goto LABEL_63;
        }
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_24DCCA9C8();
      swift_bridgeObjectRelease();
    }

LABEL_34:
    char v89 = 0;
    objc_msgSend(v30, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, 0);
    goto LABEL_50;
  }

  swift_bridgeObjectRelease();
  id v16 = 0;
  uint64_t v17 = 0;
  id v18 = v98;
LABEL_5:
  id v19 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v20 = v6;
  uint64_t v21 = sub_24DCC9068();
  os_log_type_t v22 = sub_24DCCA128();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    id v92 = 0;
    uint64_t v91 = v16;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 138412290;
    uint64_t v93 = v17;
    swift_getErrorValue();
    id v26 = sub_24DBA2828(v100);
    aBlock[0] = v26;
    sub_24DCCA428();
    *uint64_t v25 = v26;

    _os_log_impl(&dword_24D3D0000, v21, v22, "Error gathering telemetry for scanning provider %@", v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v25, -1, -1);
    unsigned __int8 v27 = v24;
    id v16 = v91;
    MEMORY[0x25332B030](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = v97;
  uint64_t v29 = v96;
  (*(void (**)(char *, uint64_t))(v94 + 8))(v99, v95);
  sub_24D43DD74((uint64_t)v16);

  char v30 = 0;
LABEL_9:
  *uint64_t v28 = v30;
}

void sub_24DA0DC9C(void *a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, void *a4@<X3>, char ***a5@<X8>)
{
  id v6 = v5;
  uint64_t v98 = a4;
  uint64_t v96 = a3;
  uint64_t v97 = a5;
  aBlock[12] = *(id *)MEMORY[0x263EF8340];
  uint64_t v95 = sub_24DCC9078();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x270FA5388](v95);
  uint64_t v99 = (char *)v87 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = a1;
  id v11 = objc_msgSend(v10, sel_stringAtIndex_, 0);
  if (!v11)
  {
    sub_24DCC97E8();
    id v11 = (id)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }

  unsigned int v12 = (char **)objc_msgSend(objc_allocWithZone(MEMORY[0x263F05498]), sel_init);
  objc_msgSend(v12, sel_setItemIdentifier_, v11);
  char v13 = *(char ***)(a2 + 24);
  aBlock[0] = v11;
  sub_24D8F04BC();
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_24DCCECE0;
  *(void *)(v14 + 32) = __swift_instantiateConcreteTypeFromMangledName(&qword_26986F540);
  uint64_t v15 = (*((uint64_t (**)(id *, uint64_t))*v13 + 33))(aBlock, v14);
  if (!v5)
  {
    unint64_t v31 = v15;
    id v92 = v11;
    uint64_t v93 = a2;
    uint64_t v91 = (uint64_t (*)(void *))v10;
    swift_bridgeObjectRelease();
    if (v31 >> 62) {
      goto LABEL_71;
    }
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (1)
    {
      id v18 = v98;
      char v30 = v12;
      if (v32)
      {
        if ((v31 & 0xC000000000000001) != 0)
        {
          uint64_t v33 = MEMORY[0x253328820](0, v31);
        }
        else
        {
          if (!*(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_74:
            __break(1u);
          }
          uint64_t v33 = *(void *)(v31 + 32);
          swift_retain();
        }
        swift_bridgeObjectRelease();
        swift_retain();
        unsigned int v34 = sub_24D3FAFEC(1);
        if (v6)
        {

          swift_release_n();
          id v16 = 0;
          uint64_t v17 = 0;
          goto LABEL_5;
        }
        LODWORD(v90) = v34;
        unint64_t v36 = *(void **)(v33 + 96);
        uint64_t v35 = *(void **)(v33 + 104);
        int v37 = *(unsigned __int8 *)(v33 + 112);
        BOOL v38 = v36 != 0;
        BOOL v39 = v38;
        if (v37 != 2) {
          BOOL v39 = 0;
        }
        if (v37 != 1) {
          BOOL v38 = v39;
        }
        if (*(unsigned char *)(v33 + 112)) {
          BOOL v40 = v38;
        }
        else {
          BOOL v40 = v35 != 0;
        }
        uint64_t v41 = *(void **)(v93 + 168);
        swift_retain();
        uint64_t v88 = v36;
        sub_24D3F1C98(v36, v35, v37);
        if (objc_sync_enter(v41)) {
          sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v41);
        }
        LODWORD(v89) = v40;
        swift_beginAccess();
        v87[1] = v41[2];
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v41)) {
          sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v41);
        }
        swift_release();
        swift_beginAccess();
        sub_24D73C78C(v33 + 56, (uint64_t)aBlock);
        id v42 = v88;
        uint64_t v90 = sub_24DA0F1B8(v90, (uint64_t)v88, (uint64_t)v35, v37);
        char v44 = v43;
        sub_24D3E380C(v42, v35, v37);
        sub_24D73C7F4((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        id v45 = (id)((v44 & 1) != 0 ? -2 : v90);
        objc_msgSend(v30, sel_setItemPendingScanningProviderEnumerationStatus_, v45);
        objc_msgSend(v30, sel_setItemPendingScanningProviderHasMultiplePagesEnumeration_, v89);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_setItemPendingScanningProviderEnumerationStatus_, -1);
        uint64_t v33 = 0;
      }
      aBlock[0] = v92;
      uint64_t v46 = (*((uint64_t (**)(id *))*v13 + 31))(aBlock);
      unint64_t v47 = (char *)v33;
      if (v6) {
        break;
      }
      uint64_t v48 = v46;
      if (!v46) {
        goto LABEL_34;
      }
      if ((objc_msgSend(v91, sel_longAtIndex_, 2) & 0x10) != 0)
      {
        unint64_t v51 = *(void *)(v48 + 96);
        id v50 = *(void **)(v48 + 104);
        uint64_t v52 = *(unsigned __int8 *)(v48 + 112);
        id v53 = *(void **)(v93 + 168);
        swift_retain_n();
        uint64_t v90 = (uint64_t)v50;
        sub_24D3F1C98((id)v51, v50, v52);
        if (objc_sync_enter(v53)) {
          sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v53);
        }
        swift_beginAccess();
        uint64_t v54 = v53[2];
        swift_bridgeObjectRetain();
        if (objc_sync_exit(v53)) {
          sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v53);
        }
        swift_release_n();
        swift_beginAccess();
        uint64_t v55 = sub_24D73C78C(v48 + 56, (uint64_t)aBlock);
        switch(v52)
        {
          case 1:
            sub_24D3E380C((void *)v51, (id)v90, 1);
            uint64_t v57 = 0;
            break;
          case 2:
            uint64_t v57 = 2;
            sub_24D3E380C((void *)v51, (id)v90, 2);
            break;
          case 3:
            uint64_t v57 = 3;
            sub_24D3E380C((void *)v51, (id)v90, 3);
            break;
          case 4:
            if (v51 | v90) {
              uint64_t v57 = 5;
            }
            else {
              uint64_t v57 = 4;
            }
            break;
          default:
            MEMORY[0x270FA5388](v55);
            v87[-2] = aBlock;
            char v56 = sub_24D82E784((uint64_t (*)(_OWORD *))sub_24DA0FC30, (uint64_t)&v87[-4], v54, (void (*)(uint64_t *__return_ptr, _OWORD *))sub_24D57AF40);
            sub_24D3E380C((void *)v51, (id)v90, 0);
            uint64_t v57 = v56 & 1;
            break;
        }
        char v89 = 0;
        sub_24D73C7F4((uint64_t)aBlock);
        swift_bridgeObjectRelease();
        uint64_t v58 = v30;
        objc_msgSend(v58, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, v57);
      }
      else
      {
        char v89 = 0;
        uint64_t v49 = v30;
        objc_msgSend(v49, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, -1);
      }
      swift_release();
LABEL_50:
      uint64_t v59 = v93;
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildren_, 0);
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildrenPendingCreation_, 0);
      objc_msgSend(v30, sel_setItemPendingScanningProviderNumberOfChildrenFailingCreation_, 0);
      id v60 = *(void **)(v59 + qword_26B1A27B0);
      uint64_t v61 = swift_allocObject();
      id v62 = v92;
      *(void *)(v61 + 16) = v92;
      id v63 = (void *)swift_allocObject();
      v63[2] = sub_24DA0FC10;
      v63[3] = v61;
      uint64_t v93 = v61;
      aBlock[4] = sub_24D3E3974;
      aBlock[5] = v63;
      aBlock[0] = (id)MEMORY[0x263EF8330];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_24D3E38DC;
      aBlock[3] = &block_descriptor_6_0;
      id v64 = _Block_copy(aBlock);
      uint64_t v90 = (uint64_t)v62;
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      id v6 = objc_msgSend(v60, sel_fetchSwift_error_, v64, aBlock);
      _Block_release(v64);
      id v65 = aBlock[0];
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        goto LABEL_74;
      }
      if (!v6)
      {
        id v6 = (id)sub_24DCC8828();

        swift_willThrow();
        swift_release();
        id v16 = sub_24DA0FC10;
        id v18 = v98;
        uint64_t v17 = v93;
        goto LABEL_5;
      }
      uint64_t v99 = v47;
      if (!objc_msgSend(v6, sel_next))
      {
LABEL_63:
        uint64_t v75 = v91;
        char v76 = v89;
        unint64_t v77 = sub_24D3FAE2C(v75, 3);
        if (v76)
        {

          swift_release();
          id v18 = v98;
        }
        else
        {
          uint64_t v79 = v77;
          char v80 = v78;

          char v81 = v30;
          uint64_t v82 = v96;
          dispatch_group_enter(v96);
          uint64_t v83 = swift_allocObject();
          id v92 = 0;
          uint64_t v84 = v83;
          *(void *)(v83 + 16) = v81;
          *(void *)(v83 + 24) = v82;
          BOOL v85 = v81;
          BOOL v86 = v82;
          id v18 = v98;
          sub_24D6658A0(v79, v80, (uint64_t)sub_24DA0FC28, v84);

          swift_release();
          swift_release();
        }
        uint64_t v28 = v97;
        swift_release();
        goto LABEL_9;
      }
      char v13 = &selRef_put_;
      unsigned int v12 = &selRef_createIndexerWithExtension_enabled_error_;
      while (1)
      {
        uint64_t v70 = (void *)MEMORY[0x253329610]();
        unint64_t v31 = v30;
        uint64_t v71 = (char *)objc_msgSend((id)v31, sel_itemPendingScanningProviderNumberOfChildren);
        if (__OFADD__(v71, 1)) {
          break;
        }
        objc_msgSend((id)v31, sel_setItemPendingScanningProviderNumberOfChildren_, v71 + 1);

        if (objc_msgSend(v6, sel_isNullAtIndex_, 0))
        {
          unsigned int v72 = objc_msgSend(v6, sel_isNullAtIndex_, 1);
          uint64_t v73 = (id)v31;
          unint64_t v31 = (unint64_t)v73;
          if (v72)
          {
            uint64_t v74 = (char *)objc_msgSend(v73, sel_itemPendingScanningProviderNumberOfChildrenPendingCreation);
            char v68 = v74 + 1;
            if (__OFADD__(v74, 1)) {
              goto LABEL_70;
            }
            id v69 = &selRef_setItemPendingScanningProviderNumberOfChildrenPendingCreation_;
          }
          else
          {
            uint64_t v67 = (char *)objc_msgSend(v73, sel_itemPendingScanningProviderNumberOfChildrenFailingCreation);
            char v68 = v67 + 1;
            if (__OFADD__(v67, 1)) {
              goto LABEL_69;
            }
            id v69 = &selRef_setItemPendingScanningProviderNumberOfChildrenFailingCreation_;
          }
          objc_msgSend((id)v31, *v69, v68);
        }
        if ((objc_msgSend(v6, sel_next) & 1) == 0) {
          goto LABEL_63;
        }
      }
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_24DCCA9C8();
      swift_bridgeObjectRelease();
    }

LABEL_34:
    char v89 = 0;
    objc_msgSend(v30, sel_setItemPendingScanningProviderRemovalOfDatalessBitStatus_, 0);
    goto LABEL_50;
  }

  swift_bridgeObjectRelease();
  id v16 = 0;
  uint64_t v17 = 0;
  id v18 = v98;
LABEL_5:
  id v19 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v20 = v6;
  uint64_t v21 = sub_24DCC9068();
  os_log_type_t v22 = sub_24DCCA128();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = swift_slowAlloc();
    id v92 = 0;
    uint64_t v91 = v16;
    uint64_t v24 = (uint8_t *)v23;
    uint64_t v25 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 138412290;
    uint64_t v93 = v17;
    swift_getErrorValue();
    id v26 = sub_24DBA2828(v100);
    aBlock[0] = v26;
    sub_24DCCA428();
    *uint64_t v25 = v26;

    _os_log_impl(&dword_24D3D0000, v21, v22, "Error gathering telemetry for scanning provider %@", v24, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v25, -1, -1);
    unsigned __int8 v27 = v24;
    id v16 = v91;
    MEMORY[0x25332B030](v27, -1, -1);
  }
  else
  {
  }
  uint64_t v28 = v97;
  uint64_t v29 = v96;
  (*(void (**)(char *, uint64_t))(v94 + 8))(v99, v95);
  sub_24D43DD74((uint64_t)v16);

  char v30 = 0;
LABEL_9:
  *uint64_t v28 = v30;
}

uint64_t sub_24DA0EB20(void *a1)
{
  id v11 = a1;
  uint64_t v1 = sub_24DCC9858();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = 0;
  unint64_t v14 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t v12 = 5;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v12 = 26;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v12 = 1;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v12 = 8;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v12 = 1;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC97E8();
  sub_24DCC9848();
  uint64_t v5 = sub_24DCC97F8();
  unint64_t v7 = v6;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v7 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v9 = (void *)sub_24DCC8B28();
    sub_24D416034(v5, v7);
    id v10 = objc_msgSend(v11, sel_bindObjectParameter_, v9);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    return v13;
  }
  return result;
}

uint64_t sub_24DA0EE74()
{
  return 0;
}

uint64_t sub_24DA0EFD4()
{
  return 0;
}

uint64_t sub_24DA0F094()
{
  return 0;
}

void sub_24DA0F150(void *a1, uint64_t a2, void *a3, void *a4)
{
}

uint64_t sub_24DA0F1B8(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  void (*v8)(uint64_t *__return_ptr, _OWORD *);
  void v9[12];

  uint64_t result = result;
  switch((char)result)
  {
    case 1:
    case 3:
      uint64_t result = 0;
      switch(a4)
      {
        case 1:
          return result;
        case 2:
          uint64_t result = 2;
          break;
        case 3:
          uint64_t result = 3;
          break;
        case 4:
          if (a2 | a3) {
            uint64_t result = 5;
          }
          else {
            uint64_t result = 4;
          }
          break;
        default:
          v9[10] = v4;
          v9[11] = v5;
          MEMORY[0x270FA5388](0);
          v9[2] = v6;
          uint64_t result = sub_24D82E784((uint64_t (*)(_OWORD *))sub_24DA0FD24, (uint64_t)v9, v7, v8) & 1;
          break;
      }
      break;
    case 2:
      uint64_t result = 5;
      break;
    case 4:
      uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

void sub_24DA0F310(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_24DA0F378(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_24DA0F3E0(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_24DA0F448(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id, id))
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  id v11 = *(void **)(a2 + qword_26B1A27B0);
  aBlock[4] = sub_24DA09298;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = a5;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a3;
  id v14 = a4;
  swift_release();
  aBlock[0] = 0;
  id v15 = objc_msgSend(v11, sel_fetchSwift_error_, v12, aBlock);
  _Block_release(v12);
  id v16 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v15)
  {
    id v17 = v13;
    id v18 = v14;
    id v19 = v15;
    swift_retain();
    id v20 = a1;
    a6(v19, v19, a2, v20, v17, v18);

    sub_24D3FB6F8(0, &qword_26986FFF8);
    uint64_t v21 = (void *)sub_24DCC9C18();
    swift_bridgeObjectRelease();
    objc_msgSend(v20, sel_setItemsPendingReconciliation_, v21);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
}

void sub_24DA0F690(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_24DA0F6F8(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id))
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  id v11 = *(void **)(a2 + qword_26B1A27B0);
  aBlock[4] = sub_24DA0929C;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = a5;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a3;
  id v14 = a4;
  swift_release();
  aBlock[0] = 0;
  id v15 = objc_msgSend(v11, sel_fetchSwift_error_, v12, aBlock);
  _Block_release(v12);
  id v16 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v15)
  {
    id v17 = v13;
    id v18 = v14;
    id v19 = v15;
    swift_retain();
    a6(v19, v19, a2, v17, v18);

    sub_24D3FB6F8(0, &qword_26986FFF0);
    id v20 = (void *)sub_24DCC9C18();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setItemsPendingScanningDisk_, v20);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
}

void sub_24DA0F934(void *a1, uint64_t a2, void *a3, void *a4)
{
}

void sub_24DA0F99C(void *a1, uint64_t a2, void *a3, void *a4, void *a5, void (*a6)(id, id, uint64_t, id, id))
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  id v11 = *(void **)(a2 + qword_26B1A27B0);
  aBlock[4] = sub_24DA092A0;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = a5;
  uint64_t v12 = _Block_copy(aBlock);
  id v13 = a3;
  id v14 = a4;
  swift_release();
  aBlock[0] = 0;
  id v15 = objc_msgSend(v11, sel_fetchSwift_error_, v12, aBlock);
  _Block_release(v12);
  id v16 = aBlock[0];
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v15)
  {
    id v17 = v13;
    id v18 = v14;
    id v19 = v15;
    swift_retain();
    a6(v19, v19, a2, v17, v18);

    sub_24D3FB6F8(0, &qword_26986FFE8);
    id v20 = (void *)sub_24DCC9C18();
    swift_bridgeObjectRelease();
    objc_msgSend(a1, sel_setItemsPendingScanningProvider_, v20);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
}

uint64_t sub_24DA0FBD8()
{
  return swift_deallocObject();
}

uint64_t sub_24DA0FC10(void *a1)
{
  return sub_24DA0EB20(a1);
}

uint64_t sub_24DA0FC18()
{
  return swift_deallocObject();
}

void sub_24DA0FC28(unint64_t a1, void *a2)
{
  sub_24D68D9E4(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_24DA0FC30(void *a1)
{
  return sub_24DA092A4(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_24DA0FC50()
{
  return swift_deallocObject();
}

uint64_t sub_24DA0FC60(void *a1)
{
  return sub_24DA0C87C(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_24DA0FC6C()
{
  return swift_deallocObject();
}

uint64_t sub_24DA0FC7C()
{
  return swift_deallocObject();
}

uint64_t sub_24DA0FCBC(void *a1)
{
  return sub_24DA0CC30(a1);
}

uint64_t sub_24DA0FCC4()
{
  return swift_deallocObject();
}

void sub_24DA0FCD4(unint64_t a1, uint64_t a2)
{
  sub_24D6657B8(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_24DA0FCDC()
{
  return swift_deallocObject();
}

uint64_t sub_24DA0FCEC()
{
  return swift_deallocObject();
}

void sub_24DA0FCFC(unint64_t a1, void *a2)
{
  sub_24D665AD4(a1, a2, *(void **)(v2 + 16), *(NSObject **)(v2 + 24));
}

uint64_t sub_24DA0FD04()
{
  return swift_deallocObject();
}

uint64_t sub_24DA0FD14()
{
  return swift_deallocObject();
}

uint64_t sub_24DA0FD24(void *a1)
{
  return sub_24DA0FC30(a1) & 1;
}

unint64_t sub_24DA0FDBC()
{
  return 0xD0000000000000BCLL;
}

unint64_t sub_24DA0FDD8()
{
  return 0xD000000000000030;
}

unint64_t sub_24DA0FDF4()
{
  return 0xD000000000000079;
}

uint64_t sub_24DA0FE10(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8C78();
  uint64_t v10 = a1[3];
  v14[0] = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v10);
  uint64_t v15 = 0;
  uint64_t v16 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  id v11 = (void *)sub_24DCC8C38();
  id v12 = objc_msgSend(a2, sel_stringFromDate_, v11);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D86990C();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v14[1] = *(void *)(v3 + 32);
  v14[2] = 114;
  v14[3] = 0xE100000000000000;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(v15, v16, v10, v14[0]);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24DA100F0()
{
  return sub_24DA101C8(sub_24DA0FDBC, &block_descriptor_38_2);
}

uint64_t sub_24DA1015C()
{
  return sub_24DA101C8(sub_24DA0FDD8, &block_descriptor_35_1);
}

uint64_t sub_24DA101C8(void *a1, void *a2)
{
  aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = *(void **)(v2 + 16);
  aBlock[4] = a1;
  aBlock[5] = 0;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = a2;
  uint64_t v4 = _Block_copy(aBlock);
  swift_release();
  aBlock[0] = 0;
  unsigned int v5 = objc_msgSend(v3, sel_executeSwift_error_, v4, aBlock);
  _Block_release(v4);
  id v6 = aBlock[0];
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  if (!v5)
  {
    sub_24DCC8828();

    return swift_willThrow();
  }
  return result;
}

void sub_24DA10304(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v40 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(void **)(v3 + 16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = sub_24DA118C4;
  v10[3] = v9;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v10;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_32;
  id v11 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  aBlock[0] = 0;
  id v12 = objc_msgSend(v8, sel_fetchSwift_error_, v11, aBlock);
  _Block_release(v11);
  id v13 = aBlock[0];
  LOBYTE(v11) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
    __break(1u);
  }
  if (!v12)
  {
    sub_24DCC8828();

    swift_willThrow();
    goto LABEL_7;
  }
  if (!objc_msgSend(v12, sel_next))
  {
    swift_release();

    uint64_t v24 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    goto LABEL_9;
  }
  sub_24DA115AC(v12, (uint64_t)v31);
  if (v4)
  {
LABEL_7:
    swift_release();
    return;
  }
  uint64_t v28 = v31[1];
  uint64_t v29 = v31[0];
  uint64_t v26 = v32;
  uint64_t v27 = v31[2];
  uint64_t v14 = v34;
  uint64_t v25 = v33;
  uint64_t v15 = v35;
  uint64_t v16 = v36;
  uint64_t v17 = v37;
  uint64_t v18 = v38;
  uint64_t v19 = v39;
  swift_release();
  uint64_t v21 = v25;
  uint64_t v20 = v26;
  uint64_t v23 = v27;
  uint64_t v22 = v28;
  uint64_t v24 = v29;
LABEL_9:
  *a3 = v24;
  a3[1] = v22;
  a3[2] = v23;
  a3[3] = v20;
  a3[4] = v21;
  a3[5] = v14;
  a3[6] = v15;
  a3[7] = v16;
  a3[8] = v17;
  a3[9] = v18;
  a3[10] = v19;
}

uint64_t sub_24DA105A4()
{
  return 0;
}

uint64_t sub_24DA10648(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9)
{
  uint64_t v54 = *MEMORY[0x263EF8340];
  id v16 = (id)FPOSVersion();
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v39 = sub_24DCC97E8();
    uint64_t v40 = v18;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v40 = 0;
  }
  uint64_t v42 = a7;
  uint64_t v43 = a8;
  swift_bridgeObjectRetain();
  if ((a9 & 1) == 0)
  {
    sub_24DA10304(1129530692, 0xE400000000000000, v44);
    if (v10)
    {

      char v19 = 0;
      goto LABEL_25;
    }
    sub_24DA1185C((uint64_t)v44, (uint64_t)v45);
    if (v47)
    {
      if (v40)
      {
        int v20 = v48;
        uint64_t v21 = v49;
        uint64_t v22 = v50;
        uint64_t v23 = v51;
        uint64_t v34 = v53;
        uint64_t v35 = v52;
        if (v46 == v39 && v40 == v47)
        {
          int v24 = a1;
        }
        else
        {
          int v33 = v48;
          if ((sub_24DCCAE28() & 1) == 0) {
            goto LABEL_23;
          }
          int v24 = a1;
          int v20 = v33;
        }
        if (v20 == v24 && v21 == a2 && (v22 == a3 && v23 == a4 || (sub_24DCCAE28() & 1) != 0))
        {
          if (v35 == a5 && v34 == a6)
          {
            sub_24D6DE074(v44);
LABEL_32:
            swift_bridgeObjectRelease();
            char v19 = 0;
            goto LABEL_28;
          }
          char v32 = sub_24DCCAE28();
          sub_24D6DE074(v44);
          if (v32) {
            goto LABEL_32;
          }
LABEL_24:
          uint64_t v42 = 0;
          uint64_t v43 = 0;
          swift_bridgeObjectRelease();
          char v19 = 1;
          goto LABEL_25;
        }
      }
LABEL_23:
      sub_24D6DE074(v44);
      goto LABEL_24;
    }
  }
  char v19 = 0;
LABEL_25:
  uint64_t v25 = *(void **)(v9 + 16);
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = v39;
  *(void *)(v26 + 24) = v40;
  *(_DWORD *)(v26 + 32) = a1;
  *(void *)(v26 + 40) = a2;
  *(void *)(v26 + 48) = a3;
  *(void *)(v26 + 56) = a4;
  *(void *)(v26 + 64) = a5;
  *(void *)(v26 + 72) = a6;
  *(void *)(v26 + 80) = &v42;
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = sub_24DA11814;
  v27[3] = v26;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v27;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_22;
  uint64_t v28 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v29 = objc_msgSend(v25, sel_executeSwift_error_, v28, aBlock);
  _Block_release(v28);
  id v30 = aBlock[0];
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28) {
    __break(1u);
  }
  if (!v29)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();
    return v19 & 1;
  }
  swift_release();
LABEL_28:
  swift_bridgeObjectRelease();
  return v19 & 1;
}

uint64_t sub_24DA10A20(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  v33[2] = a7;
  v33[3] = a8;
  v33[1] = a6;
  uint64_t v15 = sub_24DCC8CE8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = 0;
  unint64_t v35 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v37 = v34;
  unint64_t v38 = v35;
  sub_24DCC9968();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v20 = v19;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  double v21 = v20 * 1000000000.0;
  if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v21 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v21 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v36 = MEMORY[0x263F8D6C8];
  uint64_t v34 = (uint64_t)v21;
  sub_24D3E3EB4((uint64_t)&v34);
  uint64_t v23 = v22;
  sub_24D3E3E54((uint64_t)&v34);
  if (!v23)
  {
LABEL_12:
    uint64_t result = sub_24DCCA978();
    __break(1u);
    return result;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D5F1A28(a2, a3);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v24 = objc_msgSend(a1, sel_bindUnsignedIntegerParameter_, a4);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v25 = objc_msgSend(a1, sel_bindUnsignedLongParameter_, a5);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v26 = (void *)sub_24DCC97B8();
  id v27 = objc_msgSend(a1, sel_bindStringParameter_, v26);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v28 = (void *)sub_24DCC97B8();
  id v29 = objc_msgSend(a1, sel_bindStringParameter_, v28);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (*(void *)(a10 + 8))
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = 0;
  }
  id v31 = objc_msgSend(a1, sel_bindObjectParameter_, v30);
  swift_unknownObjectRelease();
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v37;
}

void sub_24DA10EBC(void *a1)
{
  uint64_t v3 = v2;
  uint64_t v25 = *MEMORY[0x263EF8340];
  unsigned int v5 = *(void **)(v1 + 16);
  double v21 = sub_24DA0FDF4;
  uint64_t v22 = 0;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v18 = 1107296256;
  double v19 = sub_24D3E38DC;
  double v20 = &block_descriptor_12_0;
  id v6 = _Block_copy(&aBlock);
  swift_release();
  id aBlock = 0;
  id v7 = objc_msgSend(v5, sel_fetchSwift_error_, v6, &aBlock);
  _Block_release(v6);
  id v8 = aBlock;
  if (swift_isEscapingClosureAtFileLocation()) {
    __break(1u);
  }
  if (v7)
  {
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
    uint64_t v10 = (void *)sub_24DCC97B8();
    objc_msgSend(v9, sel_setDateFormat_, v10);

    if (objc_msgSend(v7, sel_next))
    {
      id v15 = v9;
      while (1)
      {
        id v11 = (void *)MEMORY[0x253329610]();
        id v12 = v7;
        sub_24DA115AC(v12, (uint64_t)v23);
        if (v3) {
          break;
        }
        sub_24DA0FE10(a1, v9);
        if (v24)
        {
          swift_bridgeObjectRetain();
          sub_24DA11774((uint64_t)v23);
          uint64_t v13 = a1[3];
          uint64_t v16 = a1[4];
          __swift_project_boxed_opaque_existential_1(a1, v13);
          id aBlock = 0;
          uint64_t v18 = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          id aBlock = (id)0xD000000000000011;
          uint64_t v18 = 0x800000024DD14FE0;
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          uint64_t v14 = v13;
          id v9 = v15;
          uint64_t v3 = 0;
          sub_24D90FFEC((uint64_t)aBlock, v18, v14, v16);
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_24DA11774((uint64_t)v23);
        }
        if ((objc_msgSend(v12, sel_next) & 1) == 0) {
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
}

uint64_t sub_24DA111D0(uint64_t a1, uint64_t a2)
{
  id aBlock[6] = *(id *)MEMORY[0x263EF8340];
  unsigned int v5 = *(void **)(v2 + 16);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 24) = a2;
  id v7 = (void *)swift_allocObject();
  unsigned __int8 v8 = v7;
  _OWORD v7[2] = sub_24DA11594;
  v7[3] = v6;
  aBlock[4] = sub_24D3E3974;
  aBlock[5] = v7;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_28;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  aBlock[0] = 0;
  id v10 = objc_msgSend(v5, sel_fetchSwift_error_, v9, aBlock);
  _Block_release(v9);
  id v11 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v10)
  {
    unsigned __int8 v8 = objc_msgSend(v10, sel_next);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return v8 & 1;
}

unint64_t sub_24DA113C8(void *a1)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v2 = (void *)sub_24DCC97B8();
  id v3 = objc_msgSend(a1, sel_bindStringParameter_, v2);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0xD000000000000028;
}

uint64_t sub_24DA1149C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLHistoryTable()
{
  return self;
}

uint64_t sub_24DA11508()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24DA11514()
{
  return sub_24DA100F0();
}

uint64_t sub_24DA11538()
{
  return sub_24DA1015C();
}

uint64_t sub_24DA1155C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_24DA11594(void *a1)
{
  return sub_24DA113C8(a1);
}

uint64_t sub_24DA1159C()
{
  return swift_deallocObject();
}

void sub_24DA115AC(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v24 = objc_msgSend(a1, sel_longAtIndex_, 0);
  id v4 = objc_msgSend(a1, sel_stringAtIndex_, 1);
  uint64_t v5 = sub_24DCC97E8();
  uint64_t v22 = v6;
  uint64_t v23 = v5;

  unsigned int v7 = objc_msgSend(a1, sel_unsignedIntAtIndex_, 2);
  id v8 = objc_msgSend(a1, sel_unsignedLongAtIndex_, 3);
  id v9 = objc_msgSend(a1, sel_stringAtIndex_, 4);
  uint64_t v10 = sub_24DCC97E8();
  uint64_t v20 = v11;
  uint64_t v21 = v10;

  id v12 = objc_msgSend(a1, sel_stringAtIndex_, 5);
  uint64_t v13 = sub_24DCC97E8();
  uint64_t v15 = v14;

  if (objc_msgSend(a1, sel_isNullAtIndex_, 6))
  {

    uint64_t v16 = 0;
    uint64_t v17 = 0;
  }
  else
  {
    id v18 = objc_msgSend(a1, sel_stringAtIndex_, 6);
    uint64_t v16 = sub_24DCC97E8();
    uint64_t v17 = v19;
  }
  *(void *)a2 = v24;
  *(void *)(a2 + 8) = v23;
  *(void *)(a2 + 16) = v22;
  *(_DWORD *)(a2 + 24) = v7;
  *(void *)(a2 + 32) = v8;
  *(void *)(a2 + 40) = v21;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = v13;
  *(void *)(a2 + 64) = v15;
  *(void *)(a2 + 72) = v16;
  *(void *)(a2 + 80) = v17;
}

uint64_t sub_24DA11774(uint64_t a1)
{
  return a1;
}

uint64_t sub_24DA117CC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24DA11814(void *a1)
{
  return sub_24DA10A20(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned int *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_24DA1184C()
{
  return swift_deallocObject();
}

uint64_t sub_24DA1185C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1971E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24DA118C4()
{
  return sub_24DA105A4();
}

uint64_t sub_24DA118CC()
{
  return swift_deallocObject();
}

uint64_t destroy for SQLHistoryTable.Entry()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v3;
  uint64_t v4 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v4;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for SQLHistoryTable.Entry(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLHistoryTable.Entry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLHistoryTable.Entry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLHistoryTable.Entry()
{
  return &type metadata for SQLHistoryTable.Entry;
}

BOOL sub_24DA11BEC(uint64_t a1)
{
  return *(void *)(a1 + 16) == 0;
}

uint64_t sub_24DA11BFC()
{
  sub_24D3F0BA0(v0 + 40, (uint64_t)v6, &qword_26B193F70);
  sub_24D3F0BA0((uint64_t)v6, (uint64_t)&v7, &qword_26B193F70);
  if (v7 && *(void *)(v7 + 16))
  {
    uint64_t v9 = 980510012;
    unint64_t v10 = 0xE400000000000000;
    MEMORY[0x253327CD0]();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
  }
  sub_24D3F0BA0(v0 + 16, (uint64_t)v5, &qword_26B193F70);
  sub_24D3F0BA0((uint64_t)v5, (uint64_t)&v8, &qword_26B193F70);
  if (v8 && *(void *)(v8 + 16))
  {
    uint64_t v9 = 980510012;
    unint64_t v10 = 0xE400000000000000;
    MEMORY[0x253327CD0]();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24D3F0BA0(v0 + 48, (uint64_t)v4, (uint64_t *)&unk_26B199D80);
  sub_24D3F0BA0((uint64_t)v4, (uint64_t)&v9, (uint64_t *)&unk_26B199D80);
  if (v10)
  {
    uint64_t v1 = (void *)sub_24DCC97B8();
    id v2 = objc_msgSend(v1, sel_fp_obfuscatedFilename);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
  }
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCCA948();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCA948();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24DA11EF4()
{
  uint64_t v1 = v0;
  sub_24D3F0BA0(v0 + 72, (uint64_t)v9, &qword_26B193F68);
  sub_24D3F0BA0((uint64_t)v9, (uint64_t)&v10, &qword_26B193F68);
  uint64_t v2 = v10;
  if (v10 && *(void *)(v10 + 16))
  {
    uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1995F0);
    MEMORY[0x253327CD0](v2, v3);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
  }
  sub_24D3F0BA0(v1 + 32, (uint64_t)v8, &qword_26B193F60);
  sub_24D3F0BA0((uint64_t)v8, (uint64_t)&v11, &qword_26B193F60);
  if (v11 && *(void *)(v11 + 16))
  {
    MEMORY[0x253327CD0](v11, &type metadata for VFSVersion);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24D3F0BA0(v1 + 80, (uint64_t)v7, (uint64_t *)&unk_26B199D80);
  sub_24D3F0BA0((uint64_t)v7, (uint64_t)v12, (uint64_t *)&unk_26B199D80);
  if (v12[1])
  {
    uint64_t v4 = (void *)sub_24DCC97B8();
    id v5 = objc_msgSend(v4, sel_fp_obfuscatedFilename, 0x3A65636976656420, 0xE800000000000000);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
  }
  sub_24DCCA728();
  sub_24DCC9968();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1995F0);
  sub_24DCCA948();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCA948();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24DA12208()
{
  uint64_t v1 = v0;
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D3F0BA0(v0 + 160, (uint64_t)v69, qword_26B199BD0);
  sub_24D3F0BA0((uint64_t)v69, (uint64_t)v71, qword_26B199BD0);
  if (v71[1])
  {
    *(void *)&v70[0] = 574254112;
    *((void *)&v70[0] + 1) = 0xE400000000000000;
    uint64_t v2 = (void *)sub_24DCC97B8();
    id v3 = objc_msgSend(v2, sel_fp_obfuscatedFilename);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  if (*(unsigned char *)(v1 + 176)) {
    sub_24DCC9968();
  }
  if (*(unsigned char *)(v1 + 9))
  {
    sub_24DCC9968();
    uint64_t v4 = sub_24DA13838(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v6 = v4[2];
    unint64_t v5 = v4[3];
    if (v6 >= v5 >> 1) {
      uint64_t v4 = sub_24DA13838((void *)(v5 > 1), v6 + 1, 1, v4);
    }
    v4[2] = v6 + 1;
    uint64_t v7 = &v4[2 * v6];
    v7[4] = 0x646564616F6C7075;
    v7[5] = 0xE800000000000000;
    if ((*(unsigned char *)(v1 + 8) & 1) == 0) {
      goto LABEL_18;
    }
    goto LABEL_13;
  }
  if ((*(unsigned char *)(v1 + 8) & 1) == 0)
  {
    sub_24D3F0BA0(v1 + 16, (uint64_t)v68, qword_26B19A060);
    sub_24D3F0BA0((uint64_t)v68, (uint64_t)&v72, qword_26B19A060);
    if (!v72) {
      goto LABEL_25;
    }
  }
  sub_24DCC9968();
  uint64_t v4 = (void *)MEMORY[0x263F8EE78];
  if (*(unsigned char *)(v1 + 8))
  {
LABEL_13:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_24DA13838(0, v4[2] + 1, 1, v4);
    }
    unint64_t v9 = v4[2];
    unint64_t v8 = v4[3];
    if (v9 >= v8 >> 1) {
      uint64_t v4 = sub_24DA13838((void *)(v8 > 1), v9 + 1, 1, v4);
    }
    v4[2] = v9 + 1;
    uint64_t v10 = &v4[2 * v9];
    v10[4] = 0x6E6964616F6C7075;
    v10[5] = 0xE900000000000067;
  }
LABEL_18:
  sub_24D3F0BA0(v1 + 16, (uint64_t)&v67, qword_26B19A060);
  sub_24D3F0BA0((uint64_t)&v67, (uint64_t)&v73, qword_26B19A060);
  uint64_t v11 = v73;
  if (v73)
  {
    *(void *)&v70[0] = 0;
    *((void *)&v70[0] + 1) = 0xE000000000000000;
    sub_24D903F20(&v67);
    sub_24DCC9968();
    v85[0] = v11;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    sub_24DCCA948();
    sub_24DCC9968();
    long long v12 = v70[0];
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v4 = sub_24DA13838(0, v4[2] + 1, 1, v4);
    }
    unint64_t v14 = v4[2];
    unint64_t v13 = v4[3];
    if (v14 >= v13 >> 1) {
      uint64_t v4 = sub_24DA13838((void *)(v13 > 1), v14 + 1, 1, v4);
    }
    v4[2] = v14 + 1;
    *(_OWORD *)&v4[2 * v14 + 4] = v12;
    sub_24D903F4C(&v67);
  }
  *(void *)&v70[0] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D43E3F0();
  sub_24DCC9708();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
LABEL_25:
  sub_24D3F0BA0(v1 + 24, (uint64_t)&v66, qword_26B19A060);
  sub_24D3F0BA0((uint64_t)&v66, (uint64_t)&v74, qword_26B19A060);
  uint64_t v15 = v74;
  if (v74)
  {
    *(void *)&v70[0] = 0;
    *((void *)&v70[0] + 1) = 0xE000000000000000;
    sub_24D903F20(&v66);
    sub_24DCC9968();
    v85[0] = v15;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    sub_24DCCA948();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D903F4C(&v66);
  }
  if (*(unsigned char *)(v1 + 32))
  {
    sub_24DCC9968();
    if (*(unsigned char *)(v1 + 33)) {
      sub_24DCC9968();
    }
    if (*(unsigned char *)(v1 + 34))
    {
      sub_24DCC9968();
    }
    else
    {
      *(void *)&v70[0] = 3832162;
      *((void *)&v70[0] + 1) = 0xE300000000000000;
      sub_24D3F0BA0(v1 + 40, (uint64_t)v65, (uint64_t *)&unk_26B199D80);
      sub_24D3F0BA0((uint64_t)v65, (uint64_t)v75, (uint64_t *)&unk_26B199D80);
      if (v75[1])
      {
        uint64_t v16 = (void *)sub_24DCC97B8();
        id v17 = objc_msgSend(v16, sel_fp_obfuscatedFilename);

        sub_24DCC97E8();
      }
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    if (*(unsigned char *)(v1 + 72))
    {
      sub_24DCC9968();
    }
    else
    {
      *(void *)&v70[0] = 0x3A726F7469646520;
      *((void *)&v70[0] + 1) = 0xE800000000000000;
      sub_24D3F0BA0(v1 + 56, (uint64_t)v64, (uint64_t *)&unk_26B199D80);
      sub_24D3F0BA0((uint64_t)v64, (uint64_t)v76, (uint64_t *)&unk_26B199D80);
      if (v76[1])
      {
        id v18 = (void *)sub_24DCC97B8();
        id v19 = objc_msgSend(v18, sel_fp_obfuscatedFilename);

        sub_24DCC97E8();
      }
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    sub_24D3F0BA0(v1 + 80, (uint64_t)v63, (uint64_t *)&unk_26B199D80);
    sub_24D3F0BA0((uint64_t)v63, (uint64_t)v77, (uint64_t *)&unk_26B199D80);
    if (v77[1])
    {
      *(void *)&v70[0] = 3829792;
      *((void *)&v70[0] + 1) = 0xE300000000000000;
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    sub_24D3F0BA0(v1 + 96, (uint64_t)&v62, &qword_269870000);
    sub_24D3F0BA0((uint64_t)&v62, (uint64_t)&v78, &qword_269870000);
    if (v78)
    {
      *(void *)&v70[0] = 979985184;
      *((void *)&v70[0] + 1) = 0xE400000000000000;
      sub_24DCC97E8();
      sub_24DA15FF0(&v62);
      uint64_t v20 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v21 = objc_msgSend(v20, sel_fp_obfuscatedFilename);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DA1601C(&v62);
    }
    sub_24DCC9968();
  }
  if (*(unsigned char *)(v1 + 104))
  {
    sub_24DCC9968();
    sub_24D3F0BA0(v1 + 112, (uint64_t)v61, (uint64_t *)&unk_26B199D80);
    sub_24D3F0BA0((uint64_t)v61, (uint64_t)v79, (uint64_t *)&unk_26B199D80);
    if (v79[1])
    {
      *(void *)&v70[0] = 0x3A656C646E7562;
      *((void *)&v70[0] + 1) = 0xE700000000000000;
      uint64_t v22 = (void *)sub_24DCC97B8();
      id v23 = objc_msgSend(v22, sel_fp_obfuscatedDotSeparatedComponents);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    sub_24D3F0BA0(v1 + 128, (uint64_t)v60, (uint64_t *)&unk_26B199D80);
    sub_24D3F0BA0((uint64_t)v60, (uint64_t)v80, (uint64_t *)&unk_26B199D80);
    if (v80[1])
    {
      *(void *)&v70[0] = 0x656E6961746E6F63;
      *((void *)&v70[0] + 1) = 0xEA00000000003A72;
      id v24 = (void *)sub_24DCC97B8();
      id v25 = objc_msgSend(v24, sel_fp_obfuscatedDotSeparatedComponents);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    sub_24D3F0BA0(v1 + 144, (uint64_t)v59, (uint64_t *)&unk_26B199D80);
    sub_24D3F0BA0((uint64_t)v59, (uint64_t)v81, (uint64_t *)&unk_26B199D80);
    if (v81[1])
    {
      *(void *)&v70[0] = 0x3A79616C70736964;
      *((void *)&v70[0] + 1) = 0xE900000000000022;
      uint64_t v26 = (void *)sub_24DCC97B8();
      id v27 = objc_msgSend(v26, sel_fp_obfuscatedFilename);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    if (*(unsigned char *)(v1 + 105)) {
      sub_24DCC9968();
    }
    sub_24DCC9968();
  }
  sub_24D3F0BA0(v1 + 184, (uint64_t)v58, &qword_26B19A020);
  sub_24D3F0BA0((uint64_t)v58, (uint64_t)&v82, &qword_26B19A020);
  if (v82 && *(void *)(v82 + 16))
  {
    *(void *)&v70[0] = 0x3C3A6F63656420;
    *((void *)&v70[0] + 1) = 0xE700000000000000;
    v85[0] = v82;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
    sub_24D43E3F0();
    sub_24DCC9708();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24D3F0BA0(v1 + 192, (uint64_t)v57, (uint64_t *)&unk_26B199FE0);
  sub_24D3F0BA0((uint64_t)v57, (uint64_t)&v83, (uint64_t *)&unk_26B199FE0);
  if (v83)
  {
    id v28 = objc_allocWithZone(MEMORY[0x263F05568]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v29 = (void *)sub_24DCC9C18();
    swift_bridgeObjectRelease();
    uint64_t v30 = (void *)sub_24DCC9C18();
    swift_bridgeObjectRelease();
    id v31 = objc_msgSend(v28, sel_initWithKeys_values_, v29, v30);

    id v32 = objc_msgSend(v31, sel_keys);
    uint64_t v33 = sub_24DCC9C28();

    uint64_t v34 = *(void *)(v33 + 16);
    swift_bridgeObjectRelease();
    if (v34)
    {
      *(void *)&v70[0] = 0;
      *((void *)&v70[0] + 1) = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      *(void *)&v70[0] = 0x666E497265737520;
      *((void *)&v70[0] + 1) = 0xEB000000003C3A6FLL;
      id v35 = objc_msgSend(v31, sel_keys);
      uint64_t v36 = sub_24DCC9C28();

      uint64_t v37 = *(void *)(v36 + 16);
      swift_bridgeObjectRelease();
      v85[0] = v37;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  uint64_t v38 = *(void *)(v1 + 208);
  if (v38 != 501)
  {
    if (v38)
    {
      *(void *)&v70[0] = 980443936;
      *((void *)&v70[0] + 1) = 0xE400000000000000;
      sub_24D95F644(v38);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      goto LABEL_67;
    }
    if (!*(void *)(v1 + 216))
    {
      sub_24DCC9968();
      goto LABEL_68;
    }
  }
  *(void *)&v70[0] = 980443936;
  *((void *)&v70[0] + 1) = 0xE400000000000000;
  sub_24D95F644(v38);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D95F644(*(void *)(v1 + 216));
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
LABEL_67:
  sub_24DCC9968();
  swift_bridgeObjectRelease();
LABEL_68:
  sub_24D3F0BA0(v1 + 224, (uint64_t)v56, &qword_26B19A008);
  sub_24D3F0BA0((uint64_t)v56, (uint64_t)&v84, &qword_26B19A008);
  uint64_t v39 = v84;
  if (v84)
  {
    int64_t v40 = *(void *)(v84 + 16);
    if (v40)
    {
      v85[0] = MEMORY[0x263F8EE78];
      sub_24D3E4C28(0, v40, 0);
      uint64_t v41 = v85[0];
      uint64_t v42 = (long long *)(v39 + 32);
      do
      {
        long long v43 = *v42;
        long long v44 = v42[1];
        long long v45 = v42[3];
        v70[2] = v42[2];
        v70[3] = v45;
        v70[0] = v43;
        v70[1] = v44;
        sub_24D5D7CE8((uint64_t *)v70);
        uint64_t v46 = sub_24DA11BFC();
        uint64_t v48 = v47;
        sub_24D5DA4D8((uint64_t *)v70);
        v85[0] = v41;
        unint64_t v50 = *(void *)(v41 + 16);
        unint64_t v49 = *(void *)(v41 + 24);
        if (v50 >= v49 >> 1)
        {
          sub_24D3E4C28(v49 > 1, v50 + 1, 1);
          uint64_t v41 = v85[0];
        }
        *(void *)(v41 + 16) = v50 + 1;
        uint64_t v51 = v41 + 16 * v50;
        *(void *)(v51 + 32) = v46;
        *(void *)(v51 + 40) = v48;
        v42 += 4;
        --v40;
      }
      while (v40);
      v85[0] = v41;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
      sub_24D43E3F0();
      sub_24DCC9708();
      swift_release();
      strcpy((char *)v85, " conflicts:<");
      BYTE5(v85[1]) = 0;
      HIWORD(v85[1]) = -5120;
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
  }
  sub_24D3F0BA0(v1 + 232, (uint64_t)v55, (uint64_t *)&unk_26B199D80);
  sub_24D3F0BA0((uint64_t)v55, (uint64_t)v85, (uint64_t *)&unk_26B199D80);
  if (v85[1])
  {
    uint64_t v52 = (void *)sub_24DCC97B8();
    id v53 = objc_msgSend(v52, sel_fp_obfuscatedFilename, 0x3A65636976656420, 0xE90000000000003CLL);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0x3A7061633CLL;
}

uint64_t sub_24DA133F4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B195E10);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D3E11D8();
  sub_24DCCB0D8();
  uint64_t v14 = a2;
  char v13 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D3E1174(&qword_26B19A1B0);
  sub_24DCCACF8();
  if (!v3)
  {
    uint64_t v14 = a3;
    char v13 = 1;
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_24DA135B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DA180A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DA135DC(uint64_t a1)
{
  unint64_t v2 = sub_24D3E11D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DA13618(uint64_t a1)
{
  unint64_t v2 = sub_24D3E11D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24DA13654(void *a1)
{
  return sub_24DA133F4(a1, *v1, v1[1]);
}

uint64_t sub_24DA13670(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void **)(a1 + 8);
  uint64_t v3 = *(void **)(a2 + 8);
  if ((sub_24D984024(*(void **)a1, *(void **)a2) & 1) == 0) {
    return 0;
  }

  return sub_24D984024(v2, v3);
}

uint64_t sub_24DA136CC()
{
  return sub_24DA12208();
}

void sub_24DA13740()
{
}

void sub_24DA13768()
{
}

void *sub_24DA13790()
{
  uint64_t v1 = *v0;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if (!result)
  {
    uint64_t result = sub_24DA13838(result, v1[2] + 1, 1, v1);
    *uint64_t v0 = result;
  }
  return result;
}

void *sub_24DA137DC(void *result)
{
  unint64_t v2 = (*v1)[3];
  if ((uint64_t)result + 1 > (uint64_t)(v2 >> 1))
  {
    uint64_t result = sub_24DA13838((void *)(v2 > 1), (int64_t)result + 1, 1, *v1);
    *uint64_t v1 = result;
  }
  return result;
}

uint64_t sub_24DA13820(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 16) = result + 1;
  uint64_t v5 = v4 + 16 * result;
  *(void *)(v5 + 32) = a2;
  *(void *)(v5 + 40) = a3;
  return result;
}

void *sub_24DA13838(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197EE0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA16804(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24DA13948(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_24DA13960(a1, a2, a3, a4, &qword_26B197E98);
}

char *sub_24DA13954(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_24DA13960(a1, a2, a3, a4, &qword_26986E988);
}

char *sub_24DA13960(char *result, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      char v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = (char *)MEMORY[0x263F8EE78];
      char v13 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA17174(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_24DA13A58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986BE48);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA168F8(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24DA13B68(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      int64_t v9 = *((void *)a4 + 2);
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941A0);
      int64_t v10 = (char *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * v11 - 64;
      uint64_t v12 = v10 + 32;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[v8 + 32]) {
          memmove(v12, a4 + 32, v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (char *)MEMORY[0x263F8EE78];
      uint64_t v12 = (char *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA17174(0, v8, v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_24DA13C64(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_24DA13960(a1, a2, a3, a4, &qword_26B197EC0);
}

char *sub_24DA13C70(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_24DA13960(a1, a2, a3, a4, &qword_26B197EC8);
}

char *sub_24DA13C7C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_24DA13960(a1, a2, a3, a4, &qword_26B197EB8);
}

void *sub_24DA13C88(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA15088(a1, a2, a3, a4, &qword_26B195E38, &qword_26B1937B0);
}

void *sub_24DA13C9C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B190930);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA17794(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA13DC4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA143F4(a1, a2, a3, a4, &qword_26B197EF8);
}

void *sub_24DA13DD0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B194208);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      char v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      char v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA178A4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA13EE0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, &qword_26B194950, &qword_26B199320);
}

uint64_t sub_24DA13EF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, (uint64_t *)&unk_26986F5F0, (uint64_t *)&unk_26B1912E0);
}

uint64_t sub_24DA13F08(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v13 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = sub_24DCCA968();
    __break(1u);
    return result;
  }
  v16[2] = v11;
  void v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24DA1848C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

void *sub_24DA14174(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA15EE4(a1, a2, a3, a4, (uint64_t *)&unk_26986F9A0);
}

uint64_t sub_24DA14180(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E90);
  uint64_t v10 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_24DCCA968();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_24DA1701C(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_24DA143E8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA143F4(a1, a2, a3, a4, (uint64_t *)&unk_26B197F10);
}

void *sub_24DA143F4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v11 = (void *)MEMORY[0x263F8EE78];
      size_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA17998(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_24DA14500(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986E938);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 96);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[12 * v8 + 4]) {
          memmove(v12, a4 + 4, 96 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA16B14(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA14628(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA15688(a1, a2, a3, a4, &qword_26B194190, &qword_26B199600);
}

void *sub_24DA1463C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986E920);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      int64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA16A04(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA14760(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986F9E0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA16C24(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA14870(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, &qword_269870030, (uint64_t *)&unk_26B193A80);
}

void *sub_24DA14884(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14B90(a1, a2, a3, a4, (uint64_t *)&unk_26986FA60, &qword_26B199CF0);
}

void *sub_24DA14898(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14A4C(a1, a2, a3, a4, (uint64_t *)&unk_26986C630, qword_26B1934D8);
}

void *sub_24DA148AC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14DF8(a1, a2, a3, a4, &qword_269870068, (uint64_t *)&unk_26B194270);
}

void *sub_24DA148C0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA148E8(a1, a2, a3, a4, (uint64_t *)&unk_26986F0E0, &qword_269870010);
}

void *sub_24DA148D4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA148E8(a1, a2, a3, a4, (uint64_t *)&unk_26986F320, &qword_269870018);
}

void *sub_24DA148E8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 48);
      BOOL v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[6 * v11 + 4]) {
          memmove(v15, a4 + 4, 48 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      BOOL v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA1757C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

char *sub_24DA14A18(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_24DA13960(a1, a2, a3, a4, &qword_26B197ED8);
}

uint64_t sub_24DA14A24(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, &qword_269870020, &qword_26986F618);
}

void *sub_24DA14A38(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14A4C(a1, a2, a3, a4, &qword_269870028, &qword_26986F668);
}

void *sub_24DA14A4C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 120);
      BOOL v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[15 * v11 + 4]) {
          memmove(v15, a4 + 4, 120 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      BOOL v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA17B8C(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_24DA14B7C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14B90(a1, a2, a3, a4, &qword_269870038, &qword_269870040);
}

void *sub_24DA14B90(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 25;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 3);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[v11 + 4]) {
          memmove(v16, a4 + 4, 8 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA18180(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_24DA14CAC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986F5E8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA17D90(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA14DD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, (uint64_t *)&unk_26B194960, (uint64_t *)&unk_26B1900B0);
}

void *sub_24DA14DE4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14DF8(a1, a2, a3, a4, &qword_26B194210, (uint64_t *)&unk_26B194270);
}

void *sub_24DA14DF8(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA1736C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_24DA14F14(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14F3C(a1, a2, a3, a4, &qword_269870048, &qword_269870050);
}

void *sub_24DA14F28(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14F3C(a1, a2, a3, a4, &qword_269870058, &qword_269870060);
}

void *sub_24DA14F3C(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 88);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[11 * v11 + 4]) {
          memmove(v15, a4 + 4, 88 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA17474(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_24DA15074(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA15088(a1, a2, a3, a4, (uint64_t *)&unk_26B1941D0, qword_26B193A90);
}

void *sub_24DA15088(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[5 * v11 + 4]) {
          memmove(v15, a4 + 4, 40 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA17688(0, v11, (unint64_t)v15, (uint64_t)a4, a6);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_24DA151B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F960);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA16E20(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA152C8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194170);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA16F2C(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA153EC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194980);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA1725C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA15518(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA15910(a1, a2, a3, a4, &qword_26986FA18, (void (*)(void, int64_t, void *, void *))sub_24DA16D10);
}

void *sub_24DA15538(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA14DF8(a1, a2, a3, a4, (uint64_t *)&unk_26B190900, qword_26B193228);
}

void *sub_24DA1554C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269870078);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA18288(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA15674(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA15688(a1, a2, a3, a4, &qword_26986F560, (uint64_t *)&unk_26986C6B0);
}

void *sub_24DA15688(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = _swift_stdlib_malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v16 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[2 * v11 + 4]) {
          memmove(v16, a4 + 4, 16 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA1736C(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA157A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, &qword_269870090, (uint64_t *)&unk_26986C770);
}

void *sub_24DA157B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B194200);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA17A84(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA158C8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, &qword_269870088, (uint64_t *)&unk_26B1930A8);
}

uint64_t sub_24DA158DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, &qword_26986FA70, &qword_26B18FF40);
}

void *sub_24DA158F0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA15910(a1, a2, a3, a4, &qword_26986E980, (void (*)(void, int64_t, void *, void *))sub_24DA17C98);
}

void *sub_24DA15910(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, void (*a6)(void, int64_t, void *, void *))
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  int64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v10 = a2;
    }
LABEL_8:
    int64_t v11 = a4[2];
    if (v10 <= v11) {
      int64_t v12 = a4[2];
    }
    else {
      int64_t v12 = v10;
    }
    if (v12)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      uint64_t v13 = (void *)swift_allocObject();
      size_t v14 = _swift_stdlib_malloc_size(v13);
      v13[2] = v11;
      v13[3] = 2 * ((uint64_t)(v14 - 32) / 24);
      uint64_t v15 = v13 + 4;
      if (v8)
      {
LABEL_13:
        if (v13 != a4 || v15 >= &a4[3 * v11 + 4]) {
          memmove(v15, a4 + 4, 24 * v11);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v13 = (void *)MEMORY[0x263F8EE78];
      uint64_t v15 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    a6(0, v11, v15, a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_24DA15A40(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1943A0);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA17EA0(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA15B50(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B1914D0);
      int64_t v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 496);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[62 * v8 + 4]) {
          memmove(v12, a4 + 4, 496 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_24DA17F94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA15C80(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269870070);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA17998(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_24DA15D90(void *result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(a4 + 24);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *(void *)(a4 + 16);
    if (v7 <= v8) {
      uint64_t v9 = *(void *)(a4 + 16);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986E958);
      int64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      unint64_t v13 = (unint64_t)(v10 + 4);
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = (void *)MEMORY[0x263F8EE78];
      unint64_t v13 = MEMORY[0x263F8EE78] + 32;
      if (result)
      {
LABEL_15:
        if ((unint64_t)v10 < a4 || v13 >= a4 + 32 + 8 * v8)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v10 != (void *)a4)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        *(void *)(a4 + 16) = 0;
        goto LABEL_26;
      }
    }
    sub_24DA18398(0, v8, v13, a4);
LABEL_26:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA15EC4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_24DA13F08(a1, a2, a3, a4, &qword_26B1908F8, qword_26B18FC00);
}

void *sub_24DA15ED8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_24DA15EE4(a1, a2, a3, a4, &qword_269870008);
}

void *sub_24DA15EE4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      int64_t v11 = (void *)swift_allocObject();
      int64_t v12 = _swift_stdlib_malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v11 = (void *)MEMORY[0x263F8EE78];
      size_t v14 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_24DA16C24(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

id *sub_24DA15FF0(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_24DA1601C(id *a1)
{
  return a1;
}

uint64_t destroy for ItemNonSyncableAttributes(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 192))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  uint64_t v4 = *(void **)(a2 + 16);
  id v5 = v4;
  *(void *)(a1 + 16) = v4;
  char v6 = *(void **)(a2 + 24);
  id v7 = v6;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_WORD *)(a1 + 33) = *(_WORD *)(a2 + 33);
  uint64_t v8 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v8;
  uint64_t v9 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v9;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v10 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v10;
  uint64_t v19 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v19;
  *(_WORD *)(a1 + 104) = *(_WORD *)(a2 + 104);
  uint64_t v11 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v11;
  uint64_t v12 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v12;
  uint64_t v13 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v13;
  uint64_t v20 = *(void *)(a2 + 192);
  uint64_t v14 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v14;
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v15 = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v20)
  {
    uint64_t v16 = *(void *)(a2 + 200);
    *(void *)(a1 + 192) = v20;
    *(void *)(a1 + 200) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  }
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  uint64_t v17 = *(void *)(a2 + 232);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = v17;
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  uint64_t v4 = *(void **)(a1 + 16);
  id v5 = *(void **)(a2 + 16);
  id v6 = v5;
  *(void *)(a1 + 16) = v5;

  id v7 = *(void **)(a1 + 24);
  uint64_t v8 = *(void **)(a2 + 24);
  id v9 = v8;
  *(void *)(a1 + 24) = v8;

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void **)(a1 + 96);
  uint64_t v11 = *(void **)(a2 + 96);
  *(void *)(a1 + 96) = v11;
  id v12 = v11;

  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 192);
  if (!*(void *)(a1 + 192))
  {
    if (v13)
    {
      *(void *)(a1 + 192) = v13;
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_8;
  }
  if (!v13)
  {
    sub_24D5F9A0C(a1 + 192);
    goto LABEL_7;
  }
  *(void *)(a1 + 192) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy248_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  long long v8 = a2[8];
  long long v9 = a2[9];
  long long v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  __n128 result = (__n128)a2[12];
  long long v12 = a2[13];
  long long v13 = a2[14];
  *(void *)(a1 + 240) = *((void *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

uint64_t assignWithTake for ItemNonSyncableAttributes(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  long long v4 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  long long v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v8 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  long long v9 = *(void **)(a1 + 96);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);

  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  *(unsigned char *)(a1 + 105) = *(unsigned char *)(a2 + 105);
  uint64_t v10 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(a2 + 136);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = v11;
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(a2 + 152);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = v12;
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(a2 + 168);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = v13;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 176) = *(unsigned char *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  swift_bridgeObjectRelease();
  uint64_t v14 = *(void *)(a2 + 192);
  if (!*(void *)(a1 + 192)) {
    goto LABEL_5;
  }
  if (!v14)
  {
    sub_24D5F9A0C(a1 + 192);
LABEL_5:
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    goto LABEL_6;
  }
  *(void *)(a1 + 192) = v14;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 240);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ItemNonSyncableAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 248)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ItemNonSyncableAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 248) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 248) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemNonSyncableAttributes()
{
  return &type metadata for ItemNonSyncableAttributes;
}

ValueMetadata *type metadata accessor for UserInfo()
{
  return &type metadata for UserInfo;
}

uint64_t sub_24DA16804(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA168F8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA16A04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986E928);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA16B14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 96 * a1 + 32;
    unint64_t v6 = a3 + 96 * v4;
    if (v5 >= v6 || v5 + 96 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986E940);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

char *sub_24DA16C24(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA16D10(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986BDF0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA16E20(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986BDE8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

char *sub_24DA16F2C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 48 * a1 + 32);
    size_t v6 = 48 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA1701C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_24DCC8A58() - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

char *sub_24DA17174(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    size_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA1725C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1907E0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA1736C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17474(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 88 * a1 + 32;
    unint64_t v7 = a3 + 88 * v5;
    if (v6 >= v7 || v6 + 88 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA1757C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 48 * a1 + 32;
    unint64_t v7 = a3 + 48 * v5;
    if (v6 >= v7 || v6 + 48 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17688(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 40 * a1 + 32;
    unint64_t v7 = a3 + 40 * v5;
    if (v6 >= v7 || v6 + 40 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17794(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_26B1937C0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA178A4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

char *sub_24DA17998(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    unint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17A84(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      type metadata accessor for NSFileProviderItemIdentifier(0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17B8C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 120 * a1 + 32;
    unint64_t v7 = a3 + 120 * v5;
    if (v6 >= v7 || v6 + 120 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17C98(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17D90(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986F5E0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17EA0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA17F94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 496 * a1 + 32;
    unint64_t v6 = a3 + 496 * v4;
    if (v5 >= v6 || v5 + 496 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199728);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA180A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1937335659 && a2 == 0xE400000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7365756C6176 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24DA18180(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 8 * a1 + 32;
    unint64_t v7 = a3 + 8 * v5;
    if (v6 >= v7 || v6 + 8 * v5 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA18288(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_269870080);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA18398(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

unint64_t sub_24DA1848C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v5 < 0
    || ((uint64_t v9 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a5) - 8),
         uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)),
         uint64_t v11 = *(void *)(v9 + 72),
         unint64_t v12 = v10 + v11 * a1,
         unint64_t v13 = a3 + v11 * v5,
         v12 < v13)
      ? (BOOL v14 = v12 + v11 * v5 > a3)
      : (BOOL v14 = 0),
        v14))
  {
LABEL_9:
    sub_24DCCAA08();
    __break(1u);
    JUMPOUT(0x24DA185E4);
  }
  swift_arrayInitWithCopy();
  return v13;
}

ValueMetadata *type metadata accessor for UserInfo.CodingKeys()
{
  return &type metadata for UserInfo.CodingKeys;
}

unint64_t sub_24DA18620()
{
  unint64_t result = qword_269870098;
  if (!qword_269870098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870098);
  }
  return result;
}

unint64_t sub_24DA18678()
{
  unint64_t result = qword_26B199FD0;
  if (!qword_26B199FD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199FD0);
  }
  return result;
}

unint64_t sub_24DA186D0()
{
  unint64_t result = qword_26B199FC8;
  if (!qword_26B199FC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199FC8);
  }
  return result;
}

uint64_t sub_24DA18728(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941D0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_24DCCECE0;
  *(void *)(v5 + 56) = a1;
  *(void *)(v5 + 64) = a2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v5 + 32));
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a1 - 8) + 16))(boxed_opaque_existential_0, v2, a1);
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(a1, a2);
  uint64_t v8 = *(void *)(v7 + 16);
  if (!v8)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return v5;
  }
  uint64_t v9 = v7 + 32;
  while (1)
  {
    sub_24D433858(v9, (uint64_t)v25);
    uint64_t v10 = v26;
    uint64_t v11 = v27;
    __swift_project_boxed_opaque_existential_1(v25, v26);
    uint64_t v12 = sub_24DA18728(v10, v11);
    uint64_t v13 = *(void *)(v12 + 16);
    uint64_t v14 = *(void *)(v5 + 16);
    uint64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    uint64_t v16 = v12;
    if (v15 > *(void *)(v5 + 24) >> 1)
    {
      if (v14 <= v15) {
        int64_t v23 = v14 + v13;
      }
      else {
        int64_t v23 = *(void *)(v5 + 16);
      }
      uint64_t v5 = (uint64_t)sub_24DA15074((void *)1, v23, 1, (void *)v5);
      if (*(void *)(v16 + 16))
      {
LABEL_8:
        uint64_t v17 = *(void *)(v5 + 16);
        if ((*(void *)(v5 + 24) >> 1) - v17 < v13) {
          goto LABEL_25;
        }
        unint64_t v18 = v5 + 40 * v17 + 32;
        if (v16 + 32 < v18 + 40 * v13 && v18 < v16 + 32 + 40 * v13) {
          goto LABEL_27;
        }
        __swift_instantiateConcreteTypeFromMangledName(qword_26B193A90);
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v20 = *(void *)(v5 + 16);
          BOOL v21 = __OFADD__(v20, v13);
          uint64_t v22 = v20 + v13;
          if (v21) {
            goto LABEL_26;
          }
          *(void *)(v5 + 16) = v22;
        }
        goto LABEL_4;
      }
    }
    else if (v13)
    {
      goto LABEL_8;
    }
    if (v13) {
      goto LABEL_24;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
    v9 += 40;
    if (!--v8) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t sub_24DA18988()
{
  id v0 = (id)fpfs_current_or_default_log();

  return sub_24DCC9088();
}

uint64_t (*sub_24DA189C8(os_log_type_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6))(uint64_t a1)
{
  id v12 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  uint64_t v13 = sub_24DCC9068();
  os_log_type_t v14 = a1;
  if (os_log_type_enabled(v13, a1))
  {
    uint64_t v29 = a2;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v28 = a6;
    uint64_t v16 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v30 = v26;
    *(_DWORD *)uint64_t v15 = 138412546;
    os_log_type_t v27 = a1;
    uint64_t v17 = a3;
    char v18 = a4;
    id v19 = objc_msgSend(v12, sel_fork);
    sub_24DCCA428();
    *uint64_t v16 = v19;

    *(_WORD *)(v15 + 12) = 2082;
    uint64_t v20 = sub_24DCCA768();
    sub_24D418FB4(v20, v21, &v30);
    sub_24DCCA428();
    a4 = v18;
    a3 = v17;
    a1 = v27;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v13, v14, "%@ %{public}s", (uint8_t *)v15, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    uint64_t v22 = v16;
    a6 = v28;
    MEMORY[0x25332B030](v22, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v26, -1, -1);
    uint64_t v23 = v15;
    a2 = v29;
    MEMORY[0x25332B030](v23, -1, -1);
  }
  else
  {
  }
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = a1;
  *(void *)(v24 + 24) = v12;
  *(void *)(v24 + 32) = a2;
  *(void *)(v24 + 40) = a3;
  *(unsigned char *)(v24 + 48) = a4;
  *(void *)(v24 + 56) = a5;
  *(void *)(v24 + 64) = a6;
  swift_retain();
  return sub_24DA18F84;
}

uint64_t sub_24DA18C50(uint64_t a1, os_log_type_t a2, void *a3, uint64_t a4, uint64_t a5, int a6, void (*a7)(void), uint64_t a8)
{
  int v39 = a6;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v13 = sub_24DCC9078();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v18 = a3;
  id v19 = sub_24DCC9068();
  if (os_log_type_enabled(v19, a2))
  {
    uint64_t v20 = swift_slowAlloc();
    id v40 = v18;
    uint64_t v21 = v20;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v32 = v14;
    uint64_t v23 = (void *)v22;
    uint64_t v33 = swift_slowAlloc();
    uint64_t v42 = v33;
    *(_DWORD *)uint64_t v21 = 138412546;
    uint64_t v36 = a7;
    id v24 = objc_msgSend(v40, sel_adopt);
    uint64_t v34 = v13;
    uint64_t v35 = a8;
    id v25 = v24;
    uint64_t v41 = (uint64_t)v24;
    sub_24DCCA428();
    *uint64_t v23 = v25;

    *(_WORD *)(v21 + 12) = 2082;
    uint64_t v26 = sub_24DCCA768();
    uint64_t v41 = sub_24D418FB4(v26, v27, &v42);
    a7 = v36;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v19, a2, "%@ %{public}s", (uint8_t *)v21, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v23, -1, -1);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v28, -1, -1);
    uint64_t v29 = v21;
    id v18 = v40;
    MEMORY[0x25332B030](v29, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v16, v34);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  a7(a1);
  return sub_24DA18F9C(a2, v18);
}

uint64_t sub_24DA18F44()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DA18F84(uint64_t a1)
{
  return sub_24DA18C50(a1, (os_log_type_t)*(unsigned char *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void (**)(void))(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_24DA18F9C(os_log_type_t a1, void *a2)
{
  uint64_t v4 = sub_24DCC9078();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v9 = a2;
  uint64_t v10 = sub_24DCC9068();
  os_log_type_t v11 = a1;
  if (os_log_type_enabled(v10, a1))
  {
    id v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v18[0] = v4;
    uint64_t v14 = (void *)v13;
    *(_DWORD *)id v12 = 138412290;
    id v15 = [v9 leave];
    v18[1] = v15;
    sub_24DCCA428();
    *uint64_t v14 = v15;

    _os_log_impl(&dword_24D3D0000, v10, v11, "%@", v12, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    uint64_t v16 = v14;
    uint64_t v4 = v18[0];
    MEMORY[0x25332B030](v16, -1, -1);
    MEMORY[0x25332B030](v12, -1, -1);
  }
  else
  {

    uint64_t v10 = v9;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24DA1919C()
{
  if (*v0) {
    return 1701667182;
  }
  else {
    return 0x64657070617277;
  }
}

uint64_t sub_24DA191D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24DA19D14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24DA191F8(uint64_t a1)
{
  unint64_t v2 = sub_24DA19CC0();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24DA19234(uint64_t a1)
{
  unint64_t v2 = sub_24DA19CC0();

  return MEMORY[0x270FA00B8](a1, v2);
}

void sub_24DA19270()
{
  dword_26B18FA48 = 0;
}

void *sub_24DA1927C()
{
  uint64_t result = (void *)sub_24D429548(MEMORY[0x263F8EE78]);
  off_26B199C58 = result;
  return result;
}

uint64_t sub_24DA192A4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194940);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  os_log_type_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DA19CC0();
  sub_24DCCB0D8();
  swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a4 + 24))(a3, a4);
  char v16 = 1;
  uint64_t v12 = v14[0];
  sub_24DCCACA8();
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v14[1] = a2;
    char v15 = 0;
    sub_24DCCACF8();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_24DA19478(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194918);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DA19CC0();
  sub_24DCCB0B8();
  if (v3)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return a2;
  }
  uint64_t v10 = v7;
  uint64_t v11 = a2;
  LOBYTE(v19) = 1;
  uint64_t v12 = sub_24DCCAB58();
  uint64_t v14 = v13;
  uint64_t v18 = v12;
  if (qword_26B199420 != -1) {
    swift_once();
  }
  swift_beginAccess();
  os_unfair_lock_lock((os_unfair_lock_t)&dword_26B18FA48);
  swift_endAccess();
  if (qword_26B199C68 != -1) {
    swift_once();
  }
  swift_beginAccess();
  if (*((void *)off_26B199C58 + 2))
  {
    swift_bridgeObjectRetain();
    sub_24D4053BC(v18, v14);
    if (v15)
    {
      swift_endAccess();
      swift_bridgeObjectRelease();
      uint64_t v16 = swift_dynamicCastMetatype();
      goto LABEL_11;
    }
    swift_bridgeObjectRelease();
  }
  swift_endAccess();
  uint64_t v16 = 0;
LABEL_11:
  swift_beginAccess();
  os_unfair_lock_unlock((os_unfair_lock_t)&dword_26B18FA48);
  swift_endAccess();
  if (v16)
  {
    swift_bridgeObjectRelease();
    a2 = (*(uint64_t (**)(char *, uint64_t))(v21 + 32))(v9, v11);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v6);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    return a2;
  }
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCCB118();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCCB118();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24DA198C8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_24DA19478(a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t sub_24DA198FC(void *a1, uint64_t a2)
{
  return sub_24DA192A4(a1, *v2, *(void *)(a2 + 16), *(void *)(a2 + 24));
}

uint64_t sub_24DA19920()
{
  return sub_24DCC9868();
}

uint64_t sub_24DA19958()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B194918);
  sub_24DA19A58((unint64_t *)&unk_26B194590);
  uint64_t result = sub_24DCCAB98();
  if (!v0) {
    return v2;
  }
  return result;
}

uint64_t sub_24DA199F0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24DA19A58((unint64_t *)&unk_26B194590);
  uint64_t result = sub_24DA19A58(&qword_26B194588);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24DA19A58(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for Continuation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CodableClassCodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24DA19B68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableClassCodingKeys()
{
  return &type metadata for CodableClassCodingKeys;
}

uint64_t type metadata accessor for CodableClassWrapper()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_24DA19BBC()
{
  unint64_t result = qword_26B194790;
  if (!qword_26B194790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194790);
  }
  return result;
}

unint64_t sub_24DA19C14()
{
  unint64_t result = qword_26B194788;
  if (!qword_26B194788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194788);
  }
  return result;
}

unint64_t sub_24DA19C6C()
{
  unint64_t result = qword_2698700A0;
  if (!qword_2698700A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698700A0);
  }
  return result;
}

unint64_t sub_24DA19CC0()
{
  unint64_t result = qword_26B194780;
  if (!qword_26B194780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194780);
  }
  return result;
}

uint64_t sub_24DA19D14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64657070617277 && a2 == 0xE700000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1701667182 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t *sub_24DA19DF8(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_24D40B3C8(*a2);
  *a1 = v3;
  return a1;
}

unint64_t sub_24DA19E2C(unint64_t *a1)
{
  return sub_24D44E05C(*a1);
}

unint64_t *sub_24DA19E34(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_24D40B3C8(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_24D44E05C(v4);
  return a1;
}

unint64_t *sub_24DA19E70(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_24D44E05C(v3);
  return a1;
}

uint64_t sub_24DA19EA4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x57 && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 87);
  }
  unsigned int v3 = ((((*(void *)a1 >> 57) & 0x78 | *(void *)a1 & 7) >> 1) & 0xFFFFFFBF | ((*(void *)a1 & 1) << 6)) ^ 0x7F;
  if (v3 >= 0x56) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_24DA19F00(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x56)
  {
    *(void *)unint64_t result = a2 - 87;
    if (a3 >= 0x57) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x57) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 6) & 1 | (2 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_24DA19F50(void *a1)
{
  unsigned int v1 = (*a1 >> 58) & 0x3C | (*a1 >> 1) & 3;
  if (v1 <= 0x28) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 41;
  }
}

void *sub_24DA19F74(void *result)
{
  *result &= 0xFFFFFFFFFFFFFF9uLL;
  return result;
}

unint64_t *sub_24DA19F88(unint64_t *result, uint64_t a2)
{
  if (a2 < 0x29) {
    *unint64_t result = (a2 << 58) & 0xF000000000000000 | (2 * (a2 & 3)) | *result & 0xFFFFFFFFFFFFFF8;
  }
  else {
    *unint64_t result = (8 * (a2 - 41)) | 0xA000000000000002;
  }
  return result;
}

uint64_t type metadata accessor for UserRequest()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24DA19FDC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v26 = sub_24DCC8A58();
  unint64_t v4 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  char v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    if (!v7) {
      return v8;
    }
    uint64_t v27 = MEMORY[0x263F8EE78];
    uint64_t result = sub_24D3E4C28(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0) {
      break;
    }
    uint64_t v10 = 0;
    uint64_t v8 = v27;
    v22[1] = v2;
    unint64_t v23 = a1 & 0xC000000000000001;
    uint64_t v11 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v24 = v7;
    unint64_t v25 = a1;
    while (v7 != v10)
    {
      if (v23) {
        id v12 = (id)MEMORY[0x253328820](v10, a1);
      }
      else {
        id v12 = *(id *)(a1 + 8 * v10 + 32);
      }
      id v13 = v12;
      id v14 = objc_msgSend(v13, sel_knownFolder);
      sub_24DCC89E8();

      char v15 = (void *)sub_24DCC8948();
      id v16 = objc_msgSend(v15, sel_fp_shortDescription);

      uint64_t v2 = sub_24DCC97E8();
      uint64_t v18 = v17;

      (*v11)(v6, v26);
      uint64_t v27 = v8;
      unint64_t v20 = *(void *)(v8 + 16);
      unint64_t v19 = *(void *)(v8 + 24);
      unint64_t v4 = v20 + 1;
      if (v20 >= v19 >> 1)
      {
        sub_24D3E4C28(v19 > 1, v20 + 1, 1);
        uint64_t v8 = v27;
      }
      ++v10;
      *(void *)(v8 + 16) = v4;
      uint64_t v21 = v8 + 16 * v20;
      *(void *)(v21 + 32) = v2;
      *(void *)(v21 + 40) = v18;
      uint64_t v7 = v24;
      a1 = v25;
      if (v24 == v10) {
        return v8;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA1A238(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, v1, 0);
    uint64_t v2 = v16;
    uint64_t v4 = *(void *)(sub_24DCC8A58() - 8);
    uint64_t v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    do
    {
      uint64_t v7 = (void *)sub_24DCC8948();
      id v8 = objc_msgSend(v7, sel_fp_shortDescription);

      uint64_t v9 = sub_24DCC97E8();
      uint64_t v11 = v10;

      unint64_t v13 = *(void *)(v16 + 16);
      unint64_t v12 = *(void *)(v16 + 24);
      if (v13 >= v12 >> 1) {
        sub_24D3E4C28(v12 > 1, v13 + 1, 1);
      }
      *(void *)(v16 + 16) = v13 + 1;
      uint64_t v14 = v16 + 16 * v13;
      *(void *)(v14 + 32) = v9;
      *(void *)(v14 + 40) = v11;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

unint64_t sub_24DA1A39C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v36 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  char v15 = (char *)&v36 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  unint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v36 - v20;
  unint64_t v37 = a1;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v22 = sub_24DA1A7B0(a1);
  if (v22)
  {
    unint64_t v23 = v22;
    id v24 = objc_msgSend(v22, sel_date);

    sub_24DCC8CA8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v21, 0, 1, v10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v21, 1, 1, v10);
  }
  sub_24D502A50((uint64_t)v21, (uint64_t)v19);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v19, 1, v10) != 1) {
    goto LABEL_9;
  }
  sub_24D419088((uint64_t)v21);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v26 = v25;
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  v11 += 8;
  unint64_t result = v27(v15, v10);
  double v29 = v26 * 1000000000.0;
  if ((~*(void *)&v29 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v29 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v29 < 9.22337204e18) {
    goto LABEL_13;
  }
  __break(1u);
LABEL_9:
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v19, v10);
  uint64_t v30 = v36;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v36, v15, v10);
  sub_24DCC8C88();
  double v32 = v31;
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t))(v11 + 8);
  unint64_t result = v33(v30, v10);
  double v34 = v32 * 1000000000.0;
  if ((~*(void *)&v34 & 0x7FF0000000000000) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v34 >= 9.22337204e18)
  {
LABEL_20:
    __break(1u);
    return result;
  }
  v33(v15, v10);
  sub_24D419088((uint64_t)v21);
LABEL_13:
  unint64_t result = sub_24DA1D70C(v37, v38, v39, v40, v41);
  if (v35) {
    return 0;
  }
  return result;
}

uint64_t sub_24DA1A738(unint64_t a1)
{
  unint64_t v1 = a1;
  if (((a1 >> 58) & 0x3C | (a1 >> 1) & 3) == 0x1E)
  {
    unint64_t v1 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
    uint64_t v2 = v1;
  }
  else
  {
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    uint64_t v2 = v3 | 0x7000000000000004;
  }
  sub_24D40B3C8(v1);
  return v2;
}

void *sub_24DA1A7B0(unint64_t a1)
{
  unint64_t v1 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      swift_getAssociatedTypeWitness();
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      goto LABEL_16;
    case 1uLL:
    case 3uLL:
    case 0x16uLL:
    case 0x24uLL:
      swift_getAssociatedTypeWitness();
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      goto LABEL_15;
    case 2uLL:
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1907D0);
      uint64_t v5 = swift_projectBox();
      uint64_t v6 = *(int *)(v4 + 64);
      goto LABEL_19;
    case 4uLL:
    case 5uLL:
      swift_getAssociatedTypeWitness();
      sub_24DCCA3F8();
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      goto LABEL_15;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      uint64_t v2 = (uint64_t *)&unk_26B18F620;
      goto LABEL_18;
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
      swift_getAssociatedTypeWitness();
      goto LABEL_4;
    case 0xEuLL:
    case 0xFuLL:
      unint64_t v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      goto LABEL_20;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      swift_getAssociatedTypeWitness();
      swift_getAssociatedTypeWitness();
      swift_getAssociatedConformanceWitness();
      swift_getAssociatedConformanceWitness();
      type metadata accessor for ReconciliationID();
LABEL_4:
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
LABEL_15:
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
LABEL_16:
      uint64_t v5 = swift_projectBox();
      uint64_t v6 = *(int *)(TupleTypeMetadata2 + 48);
      goto LABEL_19;
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      unint64_t v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_20;
    case 0x1AuLL:
      unint64_t v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      if (!v1) {
        return v1;
      }
      goto LABEL_20;
    case 0x23uLL:
      uint64_t v2 = &qword_26B1943E0;
      goto LABEL_18;
    case 0x28uLL:
      uint64_t v2 = (uint64_t *)&unk_26986C420;
LABEL_18:
      uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(v2);
      uint64_t v5 = swift_projectBox();
      uint64_t v6 = *(int *)(v7 + 48);
LABEL_19:
      unint64_t v1 = *(void **)(v5 + v6);
LABEL_20:
      id v8 = v1;
      break;
    default:
      return v1;
  }
  return v1;
}

unint64_t sub_24DA1AC70(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v152 = sub_24DCCA3F8();
  uint64_t v150 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  char v151 = (char *)&v149 - v11;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  v158[0] = v12;
  v158[1] = AssociatedTypeWitness;
  v158[2] = AssociatedConformanceWitness;
  v158[3] = v14;
  uint64_t v155 = v14;
  uint64_t v15 = type metadata accessor for ReconciliationID();
  uint64_t v154 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  unint64_t v153 = (char *)&v149 - v16;
  uint64_t v17 = sub_24DCC8A58();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v156 = AssociatedTypeWitness;
  uint64_t v22 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v27 = 0xD000000000000016;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 1uLL:
    case 3uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x16uLL:
    case 0x24uLL:
      uint64_t v28 = (char *)&v149 - v24;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v29 = v156;
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v64 = swift_projectBox();
      id v65 = *(void **)(v64 + *(int *)(TupleTypeMetadata2 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v64, v29);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v33 = v65;
      sub_24DCCA728();
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      id v34 = objc_msgSend(v33, sel_description);
      goto LABEL_43;
    case 2uLL:
      uint64_t v35 = v23;
      uint64_t v36 = v26;
      uint64_t v37 = v25;
      uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1907D0);
      uint64_t v39 = swift_projectBox();
      uint64_t v40 = *(void **)(v39 + *(int *)(v38 + 64));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v39 + *(int *)(v38 + 48), v35);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v41 = v40;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v158, "coordination(");
      HIWORD(v158[1]) = -4864;
      sub_24DCC9968();
      sub_24DCC9968();
      uint64_t v42 = (void *)sub_24DCC8948();
      id v43 = objc_msgSend(v42, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v44 = objc_msgSend(v41, sel_description);
      goto LABEL_27;
    case 4uLL:
      uint64_t v28 = (char *)&v149 - v24;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v45 = v152;
      uint64_t v46 = swift_getTupleTypeMetadata2();
      uint64_t v47 = swift_projectBox();
      uint64_t v48 = *(void **)(v47 + *(int *)(v46 + 48));
      uint64_t v29 = v156;
      if ((*(unsigned int (**)(void))(v22 + 48))() != 1) {
        goto LABEL_42;
      }
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v49 = v48;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0xD00000000000001ALL;
      v158[1] = 0x800000024DD0AF50;
      id v50 = objc_msgSend(v49, sel_description);
      goto LABEL_34;
    case 5uLL:
      uint64_t v28 = (char *)&v149 - v24;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v45 = v152;
      uint64_t v51 = swift_getTupleTypeMetadata2();
      uint64_t v47 = swift_projectBox();
      uint64_t v48 = *(void **)(v47 + *(int *)(v51 + 48));
      uint64_t v29 = v156;
      if ((*(unsigned int (**)(void))(v22 + 48))() == 1)
      {
        v158[0] = 0;
        v158[1] = 0xE000000000000000;
        id v49 = v48;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v158[0] = 0xD00000000000001BLL;
        v158[1] = 0x800000024DD0AF30;
        id v50 = objc_msgSend(v49, sel_description);
LABEL_34:
        id v124 = v50;
        sub_24DCC97E8();

        sub_24DCC9968();
LABEL_35:
        swift_bridgeObjectRelease();
        sub_24DCC9968();

        return v158[0];
      }
      else
      {
LABEL_42:
        uint64_t v146 = v151;
        (*(void (**)(char *, uint64_t, uint64_t))(v150 + 16))(v151, v47, v45);
        (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v28, v146, v29);
        v158[0] = 0;
        v158[1] = 0xE000000000000000;
        id v33 = v48;
        sub_24DCCA728();
        sub_24DCC9968();
        sub_24DCCADC8();
        sub_24DCC9968();
        id v34 = objc_msgSend(v33, sel_description);
LABEL_43:
        id v147 = v34;
        sub_24DCC97E8();

        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();

        uint64_t v27 = v158[0];
        (*(void (**)(char *, uint64_t))(v22 + 8))(v28, v29);
      }
      return v27;
    case 6uLL:
      uint64_t v35 = v23;
      uint64_t v36 = v26;
      uint64_t v37 = v25;
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v53 = swift_projectBox();
      uint64_t v54 = *(void **)(v53 + *(int *)(v52 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v53, v35);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v41 = v54;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v158, "eviction(");
      WORD1(v158[1]) = 0;
      HIDWORD(v158[1]) = -385875968;
      uint64_t v55 = (void *)sub_24DCC8948();
      id v56 = objc_msgSend(v55, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v44 = objc_msgSend(v41, sel_description);
      goto LABEL_27;
    case 7uLL:
      uint64_t v57 = v23;
      uint64_t v58 = v26;
      uint64_t v59 = v25;
      uint64_t v60 = swift_projectBox();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16))(v59, v60, v57);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0x676E496563726F66;
      v158[1] = 0xEF286E6F69747365;
      uint64_t v61 = (void *)sub_24DCC8948();
      id v62 = objc_msgSend(v61, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v27 = v158[0];
      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v59, v57);
      return v27;
    case 8uLL:
    case 0x1DuLL:
      unint64_t v125 = (char *)&v149 - v24;
      uint64_t v126 = swift_projectBox();
      uint64_t v127 = v156;
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v125, v126, v156);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v27 = v158[0];
      (*(void (**)(char *, uint64_t))(v22 + 8))(v125, v127);
      return v27;
    case 0xBuLL:
      unint64_t v66 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      strcpy((char *)v158, "background(");
      HIDWORD(v158[1]) = -352321536;
      sub_24D97BE98(v66);
      goto LABEL_21;
    case 0xEuLL:
      unint64_t v68 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v67 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v49 = v67;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v158, "detachRoots(");
      BYTE5(v158[1]) = 0;
      HIWORD(v158[1]) = -5120;
      uint64_t v157 = sub_24DA19FDC(v68);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
      sub_24D43E3F0();
      sub_24DCC9708();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v50 = objc_msgSend(v49, sel_description);
      goto LABEL_34;
    case 0xFuLL:
      uint64_t v70 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      id v69 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v49 = v69;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v158, "attachRoots(");
      BYTE5(v158[1]) = 0;
      HIWORD(v158[1]) = -5120;
      uint64_t v157 = sub_24DA1A238(v70);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
      sub_24D43E3F0();
      sub_24DCC9708();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v50 = objc_msgSend(v49, sel_description);
      goto LABEL_34;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v112 = v15;
      uint64_t v113 = swift_getTupleTypeMetadata2();
      uint64_t v114 = swift_projectBox();
      unint64_t v115 = *(void **)(v114 + *(int *)(v113 + 48));
      uint64_t v117 = v153;
      uint64_t v116 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v153, v114, v112);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v118 = v115;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      id v119 = objc_msgSend(v118, sel_description);
      sub_24DCC97E8();

      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();

      uint64_t v27 = v158[0];
      (*(void (**)(char *, uint64_t))(v116 + 8))(v117, v112);
      return v27;
    case 0x14uLL:
      uint64_t v35 = v23;
      uint64_t v36 = v26;
      uint64_t v37 = v25;
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v72 = swift_projectBox();
      uint64_t v73 = *(void **)(v72 + *(int *)(v71 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v72, v35);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v41 = v73;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v158, "trashItem(");
      BYTE3(v158[1]) = 0;
      HIDWORD(v158[1]) = -369098752;
      uint64_t v74 = (void *)sub_24DCC8948();
      id v75 = objc_msgSend(v74, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v44 = objc_msgSend(v41, sel_description);
      goto LABEL_27;
    case 0x15uLL:
    case 0x22uLL:
      uint64_t v120 = swift_projectBox();
      unint64_t v122 = v153;
      uint64_t v121 = v154;
      (*(void (**)(char *, uint64_t, uint64_t))(v154 + 16))(v153, v120, v15);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v27 = v158[0];
      (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v15);
      return v27;
    case 0x17uLL:
      char v76 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v49 = v76;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0xD000000000000011;
      v158[1] = 0x800000024DD0AEA0;
      id v50 = objc_msgSend(v49, sel_description);
      goto LABEL_34;
    case 0x18uLL:
      unint64_t v77 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v49 = v77;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0xD00000000000001ALL;
      v158[1] = 0x800000024DD0AE80;
      id v50 = objc_msgSend(v49, sel_description);
      goto LABEL_34;
    case 0x19uLL:
      unint64_t v123 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v49 = v123;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0xD000000000000019;
      v158[1] = 0x800000024DD0AE60;
      id v50 = objc_msgSend(v49, sel_description);
      goto LABEL_34;
    case 0x1AuLL:
      uint64_t v78 = *(void **)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v49 = v78;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0xD00000000000001ELL;
      v158[1] = 0x800000024DD0AE40;
      if (v78)
      {
        id v79 = objc_msgSend(v49, sel_description);
        sub_24DCC97E8();
      }
      sub_24DCC9968();
      goto LABEL_35;
    case 0x1BuLL:
      return v27;
    case 0x1CuLL:
      return 0xD000000000000019;
    case 0x1EuLL:
      unint64_t v80 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_24D40B3C8(v80);
      uint64_t v27 = sub_24DA1AC70(v80, a3, a2, a5, a4);
      sub_24D44E05C(v80);
      return v27;
    case 0x1FuLL:
      unint64_t v81 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0x756F72676B636162;
      v158[1] = 0xEF286B726F57646ELL;
      sub_24D97BE98(v81);
LABEL_21:
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      return v158[0];
    case 0x20uLL:
      uint64_t v82 = v23;
      uint64_t v83 = v26;
      uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F630);
      uint64_t v85 = swift_projectBox();
      BOOL v86 = *(void **)(v85 + *(int *)(v84 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v83 + 16))(v20, v85, v82);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v87 = v86;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v158, "itemID(");
      v158[1] = 0xE700000000000000;
      uint64_t v88 = (void *)sub_24DCC8948();
      id v89 = objc_msgSend(v88, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v90 = objc_msgSend(v87, sel_description);
      sub_24DCC97E8();

      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();

      uint64_t v27 = v158[0];
      (*(void (**)(char *, uint64_t))(v83 + 8))(v20, v82);
      return v27;
    case 0x21uLL:
      uint64_t v35 = v23;
      uint64_t v36 = v26;
      uint64_t v37 = v25;
      uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v92 = swift_projectBox();
      uint64_t v93 = *(void **)(v92 + *(int *)(v91 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v92, v35);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v41 = v93;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0xD000000000000010;
      v158[1] = 0x800000024DD0AD20;
      uint64_t v94 = (void *)sub_24DCC8948();
      id v95 = objc_msgSend(v94, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v44 = objc_msgSend(v41, sel_description);
      goto LABEL_27;
    case 0x23uLL:
      uint64_t v35 = v23;
      uint64_t v36 = v26;
      uint64_t v37 = v25;
      uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1943E0);
      uint64_t v97 = swift_projectBox();
      uint64_t v98 = *(void **)(v97 + *(int *)(v96 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v97, v35);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v41 = v98;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v158, "itemForURL(");
      HIDWORD(v158[1]) = -352321536;
      uint64_t v99 = (void *)sub_24DCC8948();
      id v100 = objc_msgSend(v99, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v44 = objc_msgSend(v41, sel_description);
      goto LABEL_27;
    case 0x25uLL:
      uint64_t v35 = v23;
      uint64_t v36 = v26;
      uint64_t v37 = v25;
      uint64_t v101 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v102 = swift_projectBox();
      uint64_t v103 = *(void **)(v102 + *(int *)(v101 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v102, v35);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v41 = v103;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0xD000000000000018;
      v158[1] = 0x800000024DD0AD40;
      id v104 = (void *)sub_24DCC8948();
      id v105 = objc_msgSend(v104, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v44 = objc_msgSend(v41, sel_description);
      goto LABEL_27;
    case 0x26uLL:
      uint64_t v128 = v23;
      uint64_t v129 = v26;
      uint64_t v130 = v25;
      uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C410);
      uint64_t v132 = swift_projectBox();
      uint64_t v133 = *(void *)(v132 + *(int *)(v131 + 48));
      int v134 = *(void **)(v132 + *(int *)(v131 + 64));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 16))(v130, v132, v128);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v135 = v134;
      sub_24DCCA728();
      sub_24DCC9968();
      uint64_t v136 = (void *)sub_24DCC8948();
      id v137 = objc_msgSend(v136, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v157 = v133;
      type metadata accessor for FPPauseBehavior(0);
      sub_24DCCA948();
      sub_24DCC9968();
      id v138 = objc_msgSend(v135, sel_description);
      goto LABEL_41;
    case 0x27uLL:
      uint64_t v128 = v23;
      uint64_t v129 = v26;
      uint64_t v130 = v25;
      uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F5D0);
      uint64_t v140 = swift_projectBox();
      uint64_t v141 = *(void *)(v140 + *(int *)(v139 + 48));
      int v142 = *(void **)(v140 + *(int *)(v139 + 64));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v129 + 16))(v130, v140, v128);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v135 = v142;
      sub_24DCCA728();
      sub_24DCC9968();
      uint64_t v143 = (void *)sub_24DCC8948();
      id v144 = objc_msgSend(v143, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v157 = v141;
      type metadata accessor for FPResumeBehavior(0);
      sub_24DCCA948();
      sub_24DCC9968();
      id v138 = objc_msgSend(v135, sel_description);
LABEL_41:
      id v145 = v138;
      sub_24DCC97E8();

      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();

      uint64_t v27 = v158[0];
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v130, v128);
      return v27;
    case 0x28uLL:
      uint64_t v35 = v23;
      uint64_t v36 = v26;
      uint64_t v37 = v25;
      uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C420);
      uint64_t v107 = swift_projectBox();
      uint64_t v108 = *(void **)(v107 + *(int *)(v106 + 48));
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16))(v37, v107, v35);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v41 = v108;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v158[0] = 0x636E7953656C6966;
      v158[1] = 0xEF28656D75736552;
      uint64_t v109 = (void *)sub_24DCC8948();
      id v110 = objc_msgSend(v109, sel_fp_shortDescription);

      sub_24DCC97E8();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      id v44 = objc_msgSend(v41, sel_description);
LABEL_27:
      id v111 = v44;
      sub_24DCC97E8();

      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();

      uint64_t v27 = v158[0];
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v37, v35);
      return v27;
    case 0x29uLL:
      if (a1 == 0xA000000000000002) {
        return 0xD00000000000001BLL;
      }
      if (a1 == 0xA00000000000000ALL) {
        return 0xD000000000000018;
      }
      return 0xD000000000000015;
    default:
      uint64_t v28 = (char *)&v149 - v24;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v29 = v156;
      uint64_t v30 = swift_getTupleTypeMetadata2();
      uint64_t v31 = swift_projectBox();
      double v32 = *(void **)(v31 + *(int *)(v30 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v28, v31, v29);
      v158[0] = 0;
      v158[1] = 0xE000000000000000;
      id v33 = v32;
      sub_24DCCA728();
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      id v34 = objc_msgSend(v33, sel_description);
      goto LABEL_43;
  }
}

unint64_t sub_24DA1D70C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = 0;
  switch((a1 >> 58) & 0x3C | (a1 >> 1) & 3)
  {
    case 0uLL:
      swift_getAssociatedTypeWitness();
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      goto LABEL_17;
    case 1uLL:
    case 3uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x16uLL:
    case 0x24uLL:
      swift_getAssociatedTypeWitness();
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      goto LABEL_16;
    case 2uLL:
      uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1907D0);
      uint64_t v28 = swift_projectBox();
      uint64_t v29 = *(int *)(v27 + 64);
      goto LABEL_20;
    case 4uLL:
    case 5uLL:
      swift_getAssociatedTypeWitness();
      sub_24DCCA3F8();
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
LABEL_16:
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      goto LABEL_17;
    case 6uLL:
    case 0x14uLL:
    case 0x25uLL:
      uint64_t v20 = (uint64_t *)&unk_26B18F620;
      goto LABEL_19;
    case 0xEuLL:
    case 0xFuLL:
      uint64_t v21 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 24);
      goto LABEL_21;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      v42[1] = a1 & 0xFFFFFFFFFFFFFF9;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v16 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v18 = swift_getAssociatedConformanceWitness();
      uint64_t v43 = AssociatedTypeWitness;
      uint64_t v44 = v16;
      uint64_t v45 = AssociatedConformanceWitness;
      uint64_t v46 = v18;
      type metadata accessor for ReconciliationID();
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
LABEL_17:
      uint64_t v28 = swift_projectBox();
      uint64_t v29 = *(int *)(TupleTypeMetadata2 + 48);
      goto LABEL_20;
    case 0x15uLL:
    case 0x22uLL:
      uint64_t v22 = swift_getAssociatedTypeWitness();
      uint64_t v23 = swift_getAssociatedTypeWitness();
      uint64_t v24 = swift_getAssociatedConformanceWitness();
      uint64_t v25 = swift_getAssociatedConformanceWitness();
      uint64_t v43 = v22;
      uint64_t v44 = v23;
      uint64_t v45 = v24;
      uint64_t v46 = v25;
      type metadata accessor for ReconciliationID();
      uint64_t v26 = swift_getTupleTypeMetadata2();
      return *(void *)(swift_projectBox() + *(int *)(v26 + 48));
    case 0x17uLL:
    case 0x18uLL:
    case 0x19uLL:
      uint64_t v21 = (id *)((a1 & 0xFFFFFFFFFFFFFF9) + 16);
      goto LABEL_21;
    case 0x1AuLL:
      return *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x18);
    case 0x1BuLL:
    case 0x1CuLL:
      return *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
    case 0x1EuLL:
      unint64_t v30 = *(void *)((a1 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_24D40B3C8(v30);
      uint64_t v14 = sub_24DA1D70C(v30, a3, a2, a5, a4);
      sub_24D44E05C(v30);
      return v14;
    case 0x1FuLL:
      return 0;
    case 0x23uLL:
      uint64_t v20 = &qword_26B1943E0;
      goto LABEL_19;
    case 0x28uLL:
      uint64_t v20 = (uint64_t *)&unk_26986C420;
LABEL_19:
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(v20);
      uint64_t v28 = swift_projectBox();
      uint64_t v29 = *(int *)(v31 + 48);
LABEL_20:
      uint64_t v21 = (id *)(v28 + v29);
LABEL_21:
      id v32 = *v21;
      unsigned int v33 = objc_msgSend(v32, sel_qos);
      uint64_t v34 = 0x6000000000000000;
      unint64_t v35 = 0x4000000000000000;
      if (v33 <= 0x14) {
        unint64_t v35 = (unint64_t)(v33 - 17 < 0xFFFFFFF0) << 61;
      }
      if (v33 <= 0x18) {
        uint64_t v34 = v35;
      }
      if (v33 <= 0x20) {
        unint64_t v36 = v34;
      }
      else {
        unint64_t v36 = 0x8000000000000000;
      }
      id v37 = objc_msgSend(v32, sel_date);

      sub_24DCC8CA8();
      sub_24DCC8C88();
      double v39 = v38;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      double v40 = v39 * 1000000000.0;
      if ((~COERCE__INT64(v39 * 1000000000.0) & 0x7FF0000000000000) == 0)
      {
        __break(1u);
        goto LABEL_34;
      }
      if (v40 <= -9.22337204e18)
      {
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      if (v40 >= 9.22337204e18)
      {
LABEL_35:
        __break(1u);
        JUMPOUT(0x24DA1DE28);
      }
      return ((uint64_t)v40 & ~((uint64_t)v40 >> 63)) + v36;
    default:
      return v14;
  }
}

void sub_24DA1DECC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v104 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v105 = AssociatedTypeWitness;
  uint64_t v106 = v12;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v108 = swift_getAssociatedConformanceWitness();
  uint64_t v103 = v108;
  uint64_t v100 = type metadata accessor for ReconciliationID();
  uint64_t v102 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v101 = (char *)&v99 - v13;
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v99 - v16;
  uint64_t v18 = sub_24DCC8A58();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v99 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  switch((a2 >> 58) & 0x3C | (a2 >> 1) & 3)
  {
    case 1uLL:
    case 3uLL:
    case 9uLL:
    case 0xAuLL:
    case 0xCuLL:
    case 0xDuLL:
    case 0x16uLL:
    case 0x24uLL:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v99 - v24;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v88 = swift_projectBox();
      id v32 = *(void **)(v88 + *(int *)(TupleTypeMetadata2 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v88, v12);
      goto LABEL_20;
    case 2uLL:
      uint64_t v33 = v23;
      uint64_t v34 = v26;
      unint64_t v35 = v27;
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1907D0);
      uint64_t v37 = swift_projectBox();
      double v38 = *(void **)(v37 + *(int *)(v36 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v35, v37 + *(int *)(v36 + 48), v33);
      sub_24DCCB008();
      id v39 = v38;
      sub_24DCC98F8();
      sub_24D718E44();
      sub_24DCC9688();
      sub_24DCCA3A8();
      sub_24DCCB008();

      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
      return;
    case 4uLL:
    case 5uLL:
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v40 = swift_getTupleTypeMetadata2();
      uint64_t v41 = swift_projectBox();
      uint64_t v42 = *(void **)(v41 + *(int *)(v40 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v41, v14);
      sub_24DCCB008();
      id v43 = v42;
      sub_24DCCA408();
      sub_24DCCA3A8();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);

      return;
    case 6uLL:
    case 0x14uLL:
    case 0x21uLL:
    case 0x25uLL:
      uint64_t v68 = v23;
      uint64_t v69 = v26;
      uint64_t v70 = v27;
      uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v75 = swift_projectBox();
      uint64_t v73 = *(void **)(v75 + *(int *)(v74 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v70, v75, v68);
      goto LABEL_17;
    case 7uLL:
      uint64_t v12 = v23;
      uint64_t v44 = v26;
      uint64_t v45 = v27;
      uint64_t v46 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v45, v46, v12);
      sub_24DCCB008();
      sub_24D718E44();
      goto LABEL_29;
    case 8uLL:
    case 0x1DuLL:
      uint64_t v44 = v25;
      uint64_t v45 = (char *)&v99 - v24;
      uint64_t v90 = swift_projectBox();
      (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v45, v90, v12);
      sub_24DCCB008();
LABEL_29:
      sub_24DCC9688();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v12);
      return;
    case 0xBuLL:
    case 0x1BuLL:
    case 0x1CuLL:
    case 0x1FuLL:
      sub_24DCCB008();
      goto LABEL_27;
    case 0xEuLL:
      unint64_t v47 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v48 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v49 = v104;
      sub_24DCCB008();
      id v50 = v48;
      sub_24DA22918(v49, v47);
      goto LABEL_23;
    case 0xFuLL:
      uint64_t v51 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v52 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v53 = v104;
      sub_24DCCB008();
      id v50 = v52;
      sub_24DA226D4(v53, v51);
      goto LABEL_23;
    case 0x10uLL:
    case 0x11uLL:
    case 0x12uLL:
    case 0x13uLL:
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v79 = v100;
      uint64_t v80 = swift_getTupleTypeMetadata2();
      uint64_t v81 = swift_projectBox();
      uint64_t v82 = *(void **)(v81 + *(int *)(v80 + 48));
      uint64_t v84 = v101;
      uint64_t v83 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v81, v79);
      uint64_t v85 = v104;
      sub_24DCCB008();
      id v86 = v82;
      sub_24D3E0C18(v85, v79);
      sub_24DCCA3A8();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v84, v79);

      return;
    case 0x15uLL:
    case 0x22uLL:
      uint64_t v63 = v100;
      swift_getTupleTypeMetadata2();
      uint64_t v64 = swift_projectBox();
      unint64_t v66 = v101;
      uint64_t v65 = v102;
      (*(void (**)(char *, uint64_t, uint64_t))(v102 + 16))(v101, v64, v63);
      uint64_t v67 = v104;
      sub_24DCCB008();
      sub_24D3E0C18(v67, v63);
      sub_24DCCB008();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v63);
      return;
    case 0x17uLL:
      uint64_t v54 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_22;
    case 0x18uLL:
      uint64_t v54 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      goto LABEL_22;
    case 0x19uLL:
      uint64_t v54 = *(void **)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
LABEL_22:
      sub_24DCCB008();
      id v50 = v54;
LABEL_23:
      sub_24DCCA3A8();

      return;
    case 0x1AuLL:
      id v89 = *(id *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_24DCCB008();
      sub_24DCCB018();
      if (v89)
      {
        id v89 = v89;
        sub_24DCCA3A8();
      }
      sub_24DCCB008();

      return;
    case 0x1EuLL:
      uint64_t v55 = *(void *)((a2 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v56 = v104;
      sub_24DCCB008();
      sub_24DA1DECC(v56, v55, a4, a3, a6, a5);
      return;
    case 0x20uLL:
      uint64_t v57 = v23;
      uint64_t v58 = v26;
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F630);
      uint64_t v60 = swift_projectBox();
      uint64_t v61 = *(void **)(v60 + *(int *)(v59 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v21, v60, v57);
      sub_24DCCB008();
      sub_24D718E44();
      id v62 = v61;
      sub_24DCC9688();
      sub_24DCCB018();
      sub_24DCCA3A8();
      (*(void (**)(char *, uint64_t))(v58 + 8))(v21, v57);
      goto LABEL_33;
    case 0x23uLL:
      uint64_t v68 = v23;
      uint64_t v69 = v26;
      uint64_t v70 = v27;
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1943E0);
      uint64_t v72 = swift_projectBox();
      uint64_t v73 = *(void **)(v72 + *(int *)(v71 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v70, v72, v68);
      goto LABEL_17;
    case 0x26uLL:
      uint64_t v91 = v23;
      uint64_t v92 = v26;
      uint64_t v93 = v27;
      uint64_t v94 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C410);
      uint64_t v95 = swift_projectBox();
      uint64_t v96 = *(void **)(v95 + *(int *)(v94 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v93, v95, v91);
      goto LABEL_32;
    case 0x27uLL:
      uint64_t v91 = v23;
      uint64_t v92 = v26;
      uint64_t v93 = v27;
      uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F5D0);
      uint64_t v98 = swift_projectBox();
      uint64_t v96 = *(void **)(v98 + *(int *)(v97 + 64));
      (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v93, v98, v91);
LABEL_32:
      sub_24DCCB008();
      sub_24D718E44();
      id v62 = v96;
      sub_24DCC9688();
      sub_24DCCB008();
      sub_24DCCA3A8();
      (*(void (**)(char *, uint64_t))(v92 + 8))(v93, v91);
      goto LABEL_33;
    case 0x28uLL:
      uint64_t v68 = v23;
      uint64_t v69 = v26;
      uint64_t v70 = v27;
      uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C420);
      uint64_t v77 = swift_projectBox();
      uint64_t v73 = *(void **)(v77 + *(int *)(v76 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v70, v77, v68);
LABEL_17:
      sub_24DCCB008();
      sub_24D718E44();
      id v78 = v73;
      sub_24DCC9688();
      sub_24DCCA3A8();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v68);

      return;
    case 0x29uLL:
LABEL_27:
      sub_24DCCB008();
      return;
    default:
      uint64_t v28 = v25;
      uint64_t v29 = (char *)&v99 - v24;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v30 = swift_getTupleTypeMetadata2();
      uint64_t v31 = swift_projectBox();
      id v32 = *(void **)(v31 + *(int *)(v30 + 48));
      (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v29, v31, v12);
LABEL_20:
      sub_24DCCB008();
      id v62 = v32;
      sub_24DCC9688();
      sub_24DCCA3A8();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v12);
LABEL_33:

      return;
  }
}

uint64_t sub_24DA1F41C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v534 = a2;
  unint64_t v535 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v517 = a5;
  uint64_t v515 = a3;
  uint64_t v516 = a6;
  uint64_t v514 = a4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v529 = AssociatedTypeWitness;
  v536[0] = AssociatedTypeWitness;
  v536[1] = v11;
  uint64_t v537 = AssociatedConformanceWitness;
  uint64_t v538 = swift_getAssociatedConformanceWitness();
  unint64_t v532 = v538;
  uint64_t v12 = type metadata accessor for ReconciliationID();
  unint64_t v530 = *(void *)(v12 - 8);
  uint64_t v531 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v509 = (char *)&v476 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v510 = (char *)&v476 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v505 = (char *)&v476 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v506 = (char *)&v476 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  v512[1] = (char *)&v476 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v513 = (char *)&v476 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v511 = (char *)&v476 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v512[0] = (char *)&v476 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v507 = (char *)&v476 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  size_t v508 = (char *)&v476 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  size_t v503 = (char *)&v476 - v34;
  MEMORY[0x270FA5388](v33);
  unint64_t v504 = (char *)&v476 - v35;
  uint64_t v36 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v518 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v520 = (char *)&v476 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v519 = (char *)&v476 - v40;
  uint64_t v527 = v36;
  uint64_t v526 = *(void *)(v36 - 8);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  unint64_t v478 = (char *)&v476 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v524 = (char *)&v476 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  unint64_t v477 = (char *)&v476 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v523 = (char *)&v476 - v47;
  uint64_t v48 = sub_24DCC8A58();
  uint64_t v49 = MEMORY[0x270FA5388](v48);
  uint64_t v50 = MEMORY[0x270FA5388](v49);
  uint64_t v51 = MEMORY[0x270FA5388](v50);
  uint64_t v52 = MEMORY[0x270FA5388](v51);
  uint64_t v53 = MEMORY[0x270FA5388](v52);
  uint64_t v54 = MEMORY[0x270FA5388](v53);
  uint64_t v55 = MEMORY[0x270FA5388](v54);
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v501 = (char *)&v476 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v502 = (char *)&v476 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  unsigned int v497 = (char *)&v476 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v498 = (char *)&v476 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v499 = (char *)&v476 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  size_t v500 = (char *)&v476 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v495 = (char *)&v476 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  unsigned int v496 = (char *)&v476 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  unsigned int v490 = (char *)&v476 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  uint64_t v77 = (char *)&v476 - v76;
  uint64_t v78 = MEMORY[0x270FA5388](v75);
  unsigned int v493 = (char *)&v476 - v79;
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  unsigned int v494 = (char *)&v476 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  uint64_t v521 = (char *)&v476 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  uint64_t v522 = (char *)&v476 - v85;
  uint64_t v533 = v11;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  uint64_t v491 = (char *)&v476 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = MEMORY[0x270FA5388](v86);
  size_t v492 = (char *)&v476 - v89;
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  uint64_t v479 = (char *)&v476 - v91;
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  uint64_t v94 = (char *)&v476 - v93;
  uint64_t v95 = MEMORY[0x270FA5388](v92);
  size_t v488 = (char *)&v476 - v96;
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  unsigned int v489 = (char *)&v476 - v98;
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  int v486 = (char *)&v476 - v100;
  uint64_t v101 = MEMORY[0x270FA5388](v99);
  int v487 = (char *)&v476 - v102;
  uint64_t v103 = MEMORY[0x270FA5388](v101);
  uint64_t v484 = (char *)&v476 - v104;
  uint64_t v105 = MEMORY[0x270FA5388](v103);
  int v485 = (char *)&v476 - v106;
  uint64_t v107 = MEMORY[0x270FA5388](v105);
  size_t v482 = (char *)&v476 - v108;
  uint64_t v109 = MEMORY[0x270FA5388](v107);
  uint64_t v483 = (char *)&v476 - v110;
  uint64_t v111 = MEMORY[0x270FA5388](v109);
  size_t v480 = (char *)&v476 - v112;
  uint64_t v113 = MEMORY[0x270FA5388](v111);
  size_t v481 = (char *)&v476 - v114;
  uint64_t v115 = MEMORY[0x270FA5388](v113);
  uint64_t v117 = (char *)&v476 - v116;
  uint64_t v118 = MEMORY[0x270FA5388](v115);
  uint64_t v120 = (char *)&v476 - v119;
  uint64_t v121 = MEMORY[0x270FA5388](v118);
  uint64_t v476 = (char *)&v476 - v122;
  uint64_t v123 = MEMORY[0x270FA5388](v121);
  unint64_t v125 = (char *)&v476 - v124;
  uint64_t v126 = MEMORY[0x270FA5388](v123);
  uint64_t v128 = (char *)&v476 - v127;
  uint64_t v129 = MEMORY[0x270FA5388](v126);
  uint64_t v131 = (char *)&v476 - v130;
  uint64_t v132 = MEMORY[0x270FA5388](v129);
  int v134 = (char *)&v476 - v133;
  uint64_t v135 = MEMORY[0x270FA5388](v132);
  id v137 = (char *)&v476 - v136;
  uint64_t v138 = MEMORY[0x270FA5388](v135);
  uint64_t v150 = (char *)&v476 - v149;
  switch((v535 >> 58) & 0x3C | (v535 >> 1) & 3)
  {
    case 1uLL:
      uint64_t v164 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v165 = swift_getTupleTypeMetadata2();
      uint64_t v166 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 1) {
        goto LABEL_153;
      }
      uint64_t v167 = v166;
      uint64_t v168 = *(int *)(v165 + 48);
      uint64_t v169 = *(void **)(v166 + v168);
      uint64_t v170 = swift_projectBox();
      uint64_t v171 = *(void **)(v170 + v168);
      uint64_t v172 = *(void (**)(char *, uint64_t, uint64_t))(v164 + 16);
      uint64_t v173 = v533;
      v172(v134, v167, v533);
      v172(v131, v170, v173);
      id v174 = v169;
      id v175 = v171;
      if ((sub_24DCC9798() & 1) == 0)
      {

        uint64_t v435 = *(void (**)(char *, uint64_t))(v164 + 8);
        v435(v131, v173);
        v435(v134, v173);
        goto LABEL_153;
      }
      sub_24D3FB6F8(0, &qword_26B19A050);
      char v176 = sub_24DCCA398();

      char v177 = *(void (**)(char *, uint64_t))(v164 + 8);
      unint64_t v178 = v131;
      char v162 = v176;
      v177(v178, v173);
      v177(v134, v173);
      return v162 & 1;
    case 2uLL:
      uint64_t v533 = v138;
      unint64_t v179 = v147;
      uint64_t v180 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1907D0);
      uint64_t v181 = (uint64_t *)swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 2) {
        goto LABEL_153;
      }
      uint64_t v182 = *v181;
      uint64_t v183 = v181[1];
      uint64_t v184 = v180[16];
      unint64_t v535 = *(uint64_t *)((char *)v181 + v184);
      uint64_t v185 = v180[20];
      unint64_t v532 = *(uint64_t *)((char *)v181 + v185);
      uint64_t v186 = v180[12];
      uint64_t v187 = (char *)v181 + v186;
      unint64_t v188 = (uint64_t *)swift_projectBox();
      uint64_t v189 = *v188;
      uint64_t v190 = v188[1];
      uint64_t v191 = *(void **)((char *)v188 + v184);
      char v192 = (char *)v188 + v186;
      unint64_t v534 = *(uint64_t *)((char *)v188 + v185);
      uint64_t v193 = *(void (**)(char *, char *, uint64_t))(v179 + 16);
      unint64_t v194 = v187;
      uint64_t v195 = v533;
      v193(v522, v194, v533);
      v193(v521, v192, v195);
      if ((v182 != v189 || v183 != v190) && (sub_24DCCAE28() & 1) == 0)
      {
        unsigned int v416 = *(void (**)(char *, uint64_t))(v179 + 8);
        uint64_t v417 = v533;
        v416(v521, v533);
        uint64_t v418 = v522;
        goto LABEL_138;
      }
      id v196 = (id)v535;
      id v197 = v191;
      uint64_t v199 = v521;
      uint64_t v198 = v522;
      if ((MEMORY[0x253326A50](v522, v521) & 1) == 0)
      {

        unsigned int v416 = *(void (**)(char *, uint64_t))(v179 + 8);
        uint64_t v417 = v533;
        v416(v199, v533);
        uint64_t v418 = v198;
        goto LABEL_138;
      }
      sub_24D3FB6F8(0, &qword_26B19A050);
      char v200 = sub_24DCCA398();

      uint64_t v201 = *(void (**)(char *, uint64_t))(v179 + 8);
      uint64_t v202 = v533;
      v201(v199, v533);
      v201(v198, v202);
      char v162 = v200 & (v532 == v534);
      return v162 & 1;
    case 3uLL:
      uint64_t v203 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v204 = swift_getTupleTypeMetadata2();
      uint64_t v205 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 3) {
        goto LABEL_153;
      }
      uint64_t v206 = v205;
      uint64_t v207 = *(int *)(v204 + 48);
      unint64_t v208 = *(void **)(v205 + v207);
      uint64_t v209 = swift_projectBox();
      char v210 = *(void **)(v209 + v207);
      unint64_t v211 = *(void (**)(char *, uint64_t, uint64_t))(v203 + 16);
      uint64_t v212 = v533;
      v211(v128, v206, v533);
      v211(v125, v209, v212);
      id v213 = v208;
      id v214 = v210;
      if ((sub_24DCC9798() & 1) == 0)
      {

        uint64_t v436 = *(void (**)(char *, uint64_t))(v203 + 8);
        v436(v125, v212);
        v436(v128, v212);
        goto LABEL_153;
      }
      sub_24D3FB6F8(0, &qword_26B19A050);
      char v162 = sub_24DCCA398();

      unint64_t v215 = *(void (**)(char *, uint64_t))(v203 + 8);
      v215(v125, v212);
      v215(v128, v212);
      return v162 & 1;
    case 4uLL:
      uint64_t v216 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v217 = v527;
      uint64_t v218 = swift_getTupleTypeMetadata2();
      uint64_t v219 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 4) {
        goto LABEL_153;
      }
      uint64_t v220 = v219;
      uint64_t v221 = *(int *)(v218 + 48);
      unint64_t v535 = *(void *)(v219 + v221);
      uint64_t v222 = swift_projectBox();
      uint64_t v223 = *(void **)(v222 + v221);
      unint64_t v224 = *(void (**)(char *, uint64_t, uint64_t))(v526 + 16);
      unint64_t v225 = v523;
      v224(v523, v222, v217);
      unint64_t v226 = v519;
      unint64_t v227 = &v519[*(int *)(TupleTypeMetadata2 + 48)];
      v224(v519, v220, v217);
      v224(v227, (uint64_t)v225, v217);
      long long v228 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48);
      uint64_t v229 = v533;
      if (v228(v226, 1, v533) == 1)
      {
        if (v228(v227, 1, v229) == 1)
        {
          long long v230 = *(void (**)(char *, uint64_t))(v526 + 8);
          id v231 = (id)v535;
          id v232 = (id)v535;
          id v233 = v223;
          v230(v519, v217);
LABEL_149:
          sub_24D3FB6F8(0, &qword_26B19A050);
          char v464 = sub_24DCCA398();

          uint64_t v465 = v523;
          goto LABEL_157;
        }
        id v231 = (id)v535;
        id v452 = (id)v535;
        id v453 = v223;
        uint64_t v443 = v519;
        goto LABEL_145;
      }
      unint64_t v534 = (unint64_t)v223;
      uint64_t v437 = v477;
      v224(v477, (uint64_t)v226, v217);
      if (v228(v227, 1, v229) == 1)
      {
        unint64_t v438 = *(void (**)(char *, uint64_t))(v216 + 8);
        id v231 = (id)v535;
        id v439 = (id)v535;
        unint64_t v440 = v534;
        id v441 = (id)v534;
        uint64_t v442 = v437;
        uint64_t v223 = (void *)v440;
        v438(v442, v229);
        uint64_t v443 = v226;
LABEL_145:
        (*(void (**)(char *, uint64_t))(v518 + 8))(v443, TupleTypeMetadata2);
        long long v230 = *(void (**)(char *, uint64_t))(v526 + 8);
        goto LABEL_150;
      }
      uint64_t v456 = v216;
      uint64_t v457 = v476;
      (*(void (**)(char *, char *, uint64_t))(v216 + 32))(v476, v227, v229);
      id v231 = (id)v535;
      id v458 = (id)v535;
      unint64_t v459 = v534;
      id v460 = (id)v534;
      char v461 = sub_24DCC9798();
      uint64_t v462 = *(void (**)(char *, uint64_t))(v456 + 8);
      v462(v457, v229);
      uint64_t v463 = v437;
      uint64_t v223 = (void *)v459;
      v462(v463, v229);
      long long v230 = *(void (**)(char *, uint64_t))(v526 + 8);
      v230(v226, v217);
      if (v461) {
        goto LABEL_149;
      }
LABEL_150:
      uint64_t v466 = v523;
      goto LABEL_151;
    case 5uLL:
      uint64_t v321 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v217 = v527;
      uint64_t v322 = swift_getTupleTypeMetadata2();
      uint64_t v323 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 5) {
        goto LABEL_153;
      }
      uint64_t v324 = v323;
      uint64_t v325 = *(int *)(v322 + 48);
      unint64_t v535 = *(void *)(v323 + v325);
      uint64_t v326 = swift_projectBox();
      uint64_t v223 = *(void **)(v326 + v325);
      long long v327 = *(void (**)(char *, uint64_t, uint64_t))(v526 + 16);
      long long v328 = v524;
      v327(v524, v326, v217);
      unint64_t v329 = v520;
      unint64_t v330 = &v520[*(int *)(TupleTypeMetadata2 + 48)];
      v327(v520, v324, v217);
      v327(v330, (uint64_t)v328, v217);
      uint64_t v331 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v321 + 48);
      uint64_t v332 = v533;
      if (v331(v329, 1, v533) == 1)
      {
        if (v331(v330, 1, v332) == 1)
        {
          long long v230 = *(void (**)(char *, uint64_t))(v526 + 8);
          id v231 = (id)v535;
          id v333 = (id)v535;
          id v334 = v223;
          v230(v520, v217);
          goto LABEL_156;
        }
        id v231 = (id)v535;
        id v454 = (id)v535;
        id v455 = v223;
        uint64_t v450 = v520;
LABEL_147:
        (*(void (**)(char *, uint64_t))(v518 + 8))(v450, TupleTypeMetadata2);
        (*(void (**)(char *, uint64_t))(v526 + 8))(v524, v217);
        goto LABEL_152;
      }
      unint64_t v534 = (unint64_t)v223;
      uint64_t v444 = v478;
      v327(v478, (uint64_t)v329, v217);
      if (v331(v330, 1, v332) == 1)
      {
        uint64_t v445 = *(void (**)(char *, uint64_t))(v321 + 8);
        id v231 = (id)v535;
        id v446 = (id)v535;
        unint64_t v447 = v534;
        id v448 = (id)v534;
        uint64_t v449 = v444;
        uint64_t v223 = (void *)v447;
        v445(v449, v332);
        uint64_t v450 = v329;
        goto LABEL_147;
      }
      uint64_t v468 = v321;
      unsigned int v469 = v476;
      (*(void (**)(char *, char *, uint64_t))(v321 + 32))(v476, v330, v332);
      id v231 = (id)v535;
      id v470 = (id)v535;
      unint64_t v471 = v534;
      id v472 = (id)v534;
      char v473 = sub_24DCC9798();
      uint64_t v474 = *(void (**)(char *, uint64_t))(v468 + 8);
      v474(v469, v332);
      uint64_t v475 = v444;
      uint64_t v223 = (void *)v471;
      v474(v475, v332);
      long long v230 = *(void (**)(char *, uint64_t))(v526 + 8);
      v230(v329, v217);
      if ((v473 & 1) == 0)
      {
        uint64_t v466 = v524;
LABEL_151:
        v230(v466, v217);
LABEL_152:

        goto LABEL_153;
      }
LABEL_156:
      sub_24D3FB6F8(0, &qword_26B19A050);
      char v464 = sub_24DCCA398();

      uint64_t v465 = v524;
LABEL_157:
      v230(v465, v217);
      char v162 = v464;
      return v162 & 1;
    case 6uLL:
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v335 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v336 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 6) {
        goto LABEL_153;
      }
      uint64_t v337 = v336;
      uint64_t v338 = *(int *)(v335 + 48);
      unint64_t v288 = *(void **)(v336 + v338);
      uint64_t v289 = swift_projectBox();
      unint64_t v290 = *(void **)(v289 + v338);
      size_t v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      uint64_t v278 = (uint64_t)v494;
      v291(v494, v337, v268);
      p_uint64_t AssociatedConformanceWitness = (unint64_t *)&v524;
      goto LABEL_72;
    case 7uLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 7) {
        goto LABEL_153;
      }
      uint64_t v234 = v138;
      unint64_t v235 = v147;
      uint64_t v236 = swift_projectBox();
      uint64_t v237 = swift_projectBox();
      long long v238 = *(void (**)(char *, uint64_t, uint64_t))(v235 + 16);
      uint64_t v239 = v236;
      uint64_t v240 = v234;
      v238(v77, v239, v234);
      long long v241 = v490;
      v238(v490, v237, v240);
      char v162 = MEMORY[0x253326A50](v77, v241);
      uint64_t v242 = *(void (**)(char *, uint64_t))(v235 + 8);
      v242(v241, v240);
      v242(v77, v240);
      return v162 & 1;
    case 8uLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 8) {
        goto LABEL_153;
      }
      uint64_t v342 = v146;
      uint64_t v343 = swift_projectBox();
      uint64_t v344 = swift_projectBox();
      long long v345 = *(void (**)(char *, uint64_t, uint64_t))(v342 + 16);
      uint64_t v346 = v343;
      uint64_t v347 = v533;
      v345(v120, v346, v533);
      v345(v117, v344, v347);
      char v162 = sub_24DCC9798();
      unint64_t v348 = *(void (**)(char *, uint64_t))(v342 + 8);
      v348(v117, v347);
      unint64_t v349 = v120;
      goto LABEL_109;
    case 9uLL:
      uint64_t v243 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v244 = swift_getTupleTypeMetadata2();
      uint64_t v245 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 9) {
        goto LABEL_153;
      }
      uint64_t v246 = v245;
      uint64_t v247 = *(int *)(v244 + 48);
      uint64_t v248 = *(void **)(v245 + v247);
      uint64_t v249 = swift_projectBox();
      uint64_t v250 = *(void **)(v249 + v247);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v481;
      uint64_t v253 = v533;
      v251(v481, v246, v533);
      uint64_t v254 = (char **)v512;
      goto LABEL_95;
    case 0xAuLL:
      uint64_t v243 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v350 = swift_getTupleTypeMetadata2();
      uint64_t v351 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xA) {
        goto LABEL_153;
      }
      uint64_t v352 = v351;
      uint64_t v353 = *(int *)(v350 + 48);
      uint64_t v248 = *(void **)(v351 + v353);
      uint64_t v249 = swift_projectBox();
      uint64_t v250 = *(void **)(v249 + v353);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v483;
      uint64_t v253 = v533;
      v251(v483, v352, v533);
      uint64_t v254 = &v513;
      goto LABEL_95;
    case 0xBuLL:
      unint64_t v255 = v534;
      if (((v255 >> 58) & 0x3C | (v255 >> 1) & 3) != 0xB) {
        goto LABEL_153;
      }
      goto LABEL_106;
    case 0xCuLL:
      uint64_t v243 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v256 = swift_getTupleTypeMetadata2();
      uint64_t v257 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xC) {
        goto LABEL_153;
      }
      uint64_t v258 = v257;
      uint64_t v259 = *(int *)(v256 + 48);
      uint64_t v248 = *(void **)(v257 + v259);
      uint64_t v249 = swift_projectBox();
      uint64_t v250 = *(void **)(v249 + v259);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v485;
      uint64_t v253 = v533;
      v251(v485, v258, v533);
      uint64_t v254 = (char **)&v515;
      goto LABEL_95;
    case 0xDuLL:
      uint64_t v243 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v354 = swift_getTupleTypeMetadata2();
      uint64_t v355 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xD) {
        goto LABEL_153;
      }
      uint64_t v356 = v355;
      uint64_t v357 = *(int *)(v354 + 48);
      uint64_t v248 = *(void **)(v355 + v357);
      uint64_t v249 = swift_projectBox();
      uint64_t v250 = *(void **)(v249 + v357);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v487;
      uint64_t v253 = v533;
      v251(v487, v356, v533);
      uint64_t v254 = (char **)&v517;
      goto LABEL_95;
    case 0xEuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xE) {
        goto LABEL_153;
      }
      uint64_t v260 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v262 = *(void *)((v534 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v261 = *(void **)((v534 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v263 = *(id *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v264 = v261;
      if (sub_24D9844A8(v260, v262)) {
        goto LABEL_31;
      }
      goto LABEL_34;
    case 0xFuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0xF) {
        goto LABEL_153;
      }
      uint64_t v265 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v267 = *(void *)((v534 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v266 = *(void **)((v534 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v263 = *(id *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x18);
      id v264 = v266;
      if (sub_24D984728(v265, v267))
      {
LABEL_31:
        sub_24D3FB6F8(0, &qword_26B19A050);
        char v162 = sub_24DCCA398();

        return v162 & 1;
      }
LABEL_34:

      goto LABEL_153;
    case 0x10uLL:
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v268 = v531;
      uint64_t v269 = swift_getTupleTypeMetadata2();
      uint64_t v270 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x10) {
        goto LABEL_153;
      }
      uint64_t v271 = v270;
      uint64_t v272 = *(int *)(v269 + 48);
      unint64_t v273 = *(void **)(v270 + v272);
      uint64_t v274 = swift_projectBox();
      unint64_t v275 = *(void **)(v274 + v272);
      unint64_t v276 = v530;
      uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v504;
      v277(v504, v271, v268);
      unint64_t v279 = &v534;
      goto LABEL_86;
    case 0x11uLL:
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v268 = v531;
      uint64_t v280 = swift_getTupleTypeMetadata2();
      uint64_t v281 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x11) {
        goto LABEL_153;
      }
      uint64_t v282 = v281;
      uint64_t v283 = *(int *)(v280 + 48);
      unint64_t v273 = *(void **)(v281 + v283);
      uint64_t v274 = swift_projectBox();
      unint64_t v275 = *(void **)(v274 + v283);
      unint64_t v276 = v530;
      uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v508;
      v277(v508, v282, v268);
      unint64_t v279 = (unint64_t *)&v537;
      goto LABEL_86;
    case 0x12uLL:
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v268 = v531;
      uint64_t v358 = swift_getTupleTypeMetadata2();
      uint64_t v359 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x12) {
        goto LABEL_153;
      }
      uint64_t v360 = v359;
      uint64_t v361 = *(int *)(v358 + 48);
      unint64_t v273 = *(void **)(v359 + v361);
      uint64_t v274 = swift_projectBox();
      unint64_t v275 = *(void **)(v274 + v361);
      unint64_t v276 = v530;
      uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = v512[0];
      v277((char *)v512[0], v360, v268);
      unint64_t v279 = (unint64_t *)&v540;
      goto LABEL_86;
    case 0x13uLL:
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v268 = v531;
      uint64_t v362 = swift_getTupleTypeMetadata2();
      uint64_t v363 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x13) {
        goto LABEL_153;
      }
      uint64_t v364 = v363;
      uint64_t v365 = *(int *)(v362 + 48);
      unint64_t v273 = *(void **)(v363 + v365);
      uint64_t v274 = swift_projectBox();
      unint64_t v275 = *(void **)(v274 + v365);
      unint64_t v276 = v530;
      uint64_t v277 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v513;
      v277(v513, v364, v268);
      unint64_t v279 = (unint64_t *)&v541;
LABEL_86:
      uint64_t v315 = *(v279 - 32);
      v277((char *)v315, v274, v268);
      id v339 = v273;
      id v340 = v275;
      if ((sub_24D3EC388(v278, v315, v529, v533) & 1) == 0) {
        goto LABEL_87;
      }
      goto LABEL_74;
    case 0x14uLL:
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v284 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v285 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x14) {
        goto LABEL_153;
      }
      uint64_t v286 = v285;
      uint64_t v287 = *(int *)(v284 + 48);
      unint64_t v288 = *(void **)(v285 + v287);
      uint64_t v289 = swift_projectBox();
      unint64_t v290 = *(void **)(v289 + v287);
      size_t v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      uint64_t v278 = (uint64_t)v496;
      v291(v496, v286, v268);
      p_uint64_t AssociatedConformanceWitness = (unint64_t *)&v526;
      goto LABEL_72;
    case 0x15uLL:
      uint64_t v268 = v531;
      uint64_t v367 = swift_getTupleTypeMetadata2();
      uint64_t v368 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x15) {
        goto LABEL_153;
      }
      uint64_t v369 = v368;
      uint64_t v370 = *(int *)(v367 + 48);
      uint64_t v302 = *(void *)(v368 + v370);
      uint64_t v303 = swift_projectBox();
      uint64_t v304 = *(void *)(v303 + v370);
      unint64_t v276 = v530;
      long long v305 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v506;
      v305(v506, v369, v268);
      long long v306 = (char *)v536;
      goto LABEL_91;
    case 0x16uLL:
      uint64_t v243 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v371 = swift_getTupleTypeMetadata2();
      uint64_t v372 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x16) {
        goto LABEL_153;
      }
      uint64_t v373 = v372;
      uint64_t v374 = *(int *)(v371 + 48);
      uint64_t v248 = *(void **)(v372 + v374);
      uint64_t v249 = swift_projectBox();
      uint64_t v250 = *(void **)(v249 + v374);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v489;
      uint64_t v253 = v533;
      v251(v489, v373, v533);
      uint64_t v254 = &v519;
      goto LABEL_95;
    case 0x17uLL:
      unint64_t v293 = v534;
      if (((v293 >> 58) & 0x3C | (v293 >> 1) & 3) == 0x17) {
        goto LABEL_99;
      }
      goto LABEL_153;
    case 0x18uLL:
      unint64_t v293 = v534;
      if (((v293 >> 58) & 0x3C | (v293 >> 1) & 3) != 0x18) {
        goto LABEL_153;
      }
      goto LABEL_99;
    case 0x19uLL:
      unint64_t v293 = v534;
      if (((v293 >> 58) & 0x3C | (v293 >> 1) & 3) != 0x19) {
        goto LABEL_153;
      }
LABEL_99:
      long long v380 = *(void **)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      long long v381 = *(void **)((v293 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_24D3FB6F8(0, &qword_26B19A050);
      id v382 = v380;
      id v383 = v381;
      char v162 = sub_24DCCA398();

      return v162 & 1;
    case 0x1AuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x1A) {
        goto LABEL_153;
      }
      long long v384 = *(void **)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v385 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x18);
      uint64_t v386 = *(void **)((v534 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v387 = *(void *)((v534 & 0xFFFFFFFFFFFFFF9) + 0x18);
      if (!v384)
      {
        if (v386) {
          goto LABEL_153;
        }
        goto LABEL_142;
      }
      if (v386)
      {
        sub_24D3FB6F8(0, (unint64_t *)&qword_26B1947F0);
        id v388 = v386;
        id v389 = v384;
        char v390 = sub_24DCCA398();

        if (v390)
        {
LABEL_142:
          char v162 = v385 == v387;
          return v162 & 1;
        }
      }
      goto LABEL_153;
    case 0x1BuLL:
      unint64_t v255 = v534;
      if (((v255 >> 58) & 0x3C | (v255 >> 1) & 3) != 0x1B) {
        goto LABEL_153;
      }
      goto LABEL_106;
    case 0x1CuLL:
      unint64_t v255 = v534;
      if (((v255 >> 58) & 0x3C | (v255 >> 1) & 3) == 0x1C) {
        goto LABEL_106;
      }
      goto LABEL_153;
    case 0x1DuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x1D) {
        goto LABEL_153;
      }
      uint64_t v391 = v146;
      uint64_t v392 = swift_projectBox();
      uint64_t v393 = swift_projectBox();
      unint64_t v394 = *(void (**)(char *, uint64_t, uint64_t))(v391 + 16);
      uint64_t v395 = v392;
      uint64_t v347 = v533;
      v394(v94, v395, v533);
      uint64_t v396 = v479;
      v394(v479, v393, v347);
      char v162 = sub_24DCC9798();
      unint64_t v348 = *(void (**)(char *, uint64_t))(v391 + 8);
      v348(v396, v347);
      unint64_t v349 = v94;
      goto LABEL_109;
    case 0x1EuLL:
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x1E) {
        goto LABEL_153;
      }
      unint64_t v397 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10);
      unint64_t v398 = *(void *)((v534 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_24D40B3C8(v397);
      sub_24D40B3C8(v398);
      char v162 = sub_24DA1F41C(v397, v398, v514, v515, v516, v517);
      sub_24D44E05C(v398);
      sub_24D44E05C(v397);
      return v162 & 1;
    case 0x1FuLL:
      unint64_t v255 = v534;
      if (((v255 >> 58) & 0x3C | (v255 >> 1) & 3) != 0x1F) {
        goto LABEL_153;
      }
LABEL_106:
      char v162 = *(void *)((v535 & 0xFFFFFFFFFFFFFF9) + 0x10) == *(void *)((v255 & 0xFFFFFFFFFFFFFF9) + 0x10);
      return v162 & 1;
    case 0x20uLL:
      uint64_t v533 = v138;
      unint64_t v399 = v147;
      uint64_t v400 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F630);
      uint64_t v401 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x20) {
        goto LABEL_153;
      }
      uint64_t v402 = v401;
      uint64_t v403 = *(int *)(v400 + 48);
      LODWORD(v535) = *(unsigned __int8 *)(v401 + v403);
      uint64_t v404 = *(int *)(v400 + 64);
      uint64_t v405 = *(void **)(v401 + v404);
      uint64_t v406 = swift_projectBox();
      LODWORD(v534) = *(unsigned __int8 *)(v406 + v403);
      int v407 = *(void **)(v406 + v404);
      int v408 = *(void (**)(char *, uint64_t, uint64_t))(v399 + 16);
      int v409 = v500;
      uint64_t v410 = v533;
      v408(v500, v402, v533);
      unsigned int v411 = v499;
      v408(v499, v406, v410);
      id v412 = v405;
      uint64_t v413 = v411;
      id v414 = v412;
      id v415 = v407;
      if ((MEMORY[0x253326A50](v409, v413) & 1) == 0)
      {

        uint64_t v433 = *(void (**)(char *, uint64_t))(v399 + 8);
        v433(v413, v410);
        uint64_t v434 = v409;
        goto LABEL_136;
      }
      if (v535 != v534)
      {

        unsigned int v416 = *(void (**)(char *, uint64_t))(v399 + 8);
        uint64_t v417 = v533;
        v416(v413, v533);
        uint64_t v418 = v409;
        goto LABEL_138;
      }
      sub_24D3FB6F8(0, &qword_26B19A050);
      char v162 = sub_24DCCA398();

      unint64_t v348 = *(void (**)(char *, uint64_t))(v399 + 8);
      uint64_t v347 = v533;
      v348(v413, v533);
      unint64_t v349 = v409;
      goto LABEL_109;
    case 0x21uLL:
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v294 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v295 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x21) {
        goto LABEL_153;
      }
      uint64_t v296 = v295;
      uint64_t v297 = *(int *)(v294 + 48);
      unint64_t v288 = *(void **)(v295 + v297);
      uint64_t v289 = swift_projectBox();
      unint64_t v290 = *(void **)(v289 + v297);
      size_t v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      uint64_t v278 = (uint64_t)v498;
      v291(v498, v296, v268);
      p_uint64_t AssociatedConformanceWitness = (unint64_t *)&AssociatedConformanceWitness;
      goto LABEL_72;
    case 0x22uLL:
      uint64_t v268 = v531;
      uint64_t v298 = swift_getTupleTypeMetadata2();
      uint64_t v299 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x22) {
        goto LABEL_153;
      }
      uint64_t v300 = v299;
      uint64_t v301 = *(int *)(v298 + 48);
      uint64_t v302 = *(void *)(v299 + v301);
      uint64_t v303 = swift_projectBox();
      uint64_t v304 = *(void *)(v303 + v301);
      unint64_t v276 = v530;
      long long v305 = *(void (**)(char *, uint64_t, uint64_t))(v530 + 16);
      uint64_t v278 = (uint64_t)v510;
      v305(v510, v300, v268);
      long long v306 = &v539;
LABEL_91:
      uint64_t v315 = *((void *)v306 - 32);
      v305((char *)v315, v303, v268);
      if ((sub_24D3EC388(v278, v315, v529, v533) & 1) == 0) {
        goto LABEL_88;
      }
      char v162 = v302 == v304;
      goto LABEL_75;
    case 0x23uLL:
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v307 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1943E0);
      uint64_t v308 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x23) {
        goto LABEL_153;
      }
      uint64_t v309 = v308;
      uint64_t v310 = *(int *)(v307 + 48);
      unint64_t v288 = *(void **)(v308 + v310);
      uint64_t v289 = swift_projectBox();
      unint64_t v290 = *(void **)(v289 + v310);
      size_t v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      uint64_t v278 = (uint64_t)v502;
      v291(v502, v309, v268);
      p_uint64_t AssociatedConformanceWitness = &v532;
LABEL_72:
      uint64_t v315 = *(p_AssociatedConformanceWitness - 32);
      goto LABEL_73;
    case 0x24uLL:
      uint64_t v243 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v311 = swift_getTupleTypeMetadata2();
      uint64_t v312 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x24) {
        goto LABEL_153;
      }
      uint64_t v313 = v312;
      uint64_t v314 = *(int *)(v311 + 48);
      uint64_t v248 = *(void **)(v312 + v314);
      uint64_t v249 = swift_projectBox();
      uint64_t v250 = *(void **)(v249 + v314);
      uint64_t v251 = *(void (**)(char *, uint64_t, uint64_t))(v243 + 16);
      uint64_t v252 = v492;
      uint64_t v253 = v533;
      v251(v492, v313, v533);
      uint64_t v254 = &v522;
LABEL_95:
      long long v375 = *(v254 - 32);
      v251(v375, v249, v253);
      id v376 = v248;
      id v377 = v250;
      if (sub_24DCC9798())
      {
        sub_24D3FB6F8(0, &qword_26B19A050);
        char v162 = sub_24DCCA398();

        long long v378 = *(void (**)(uint64_t, uint64_t))(v243 + 8);
        v378((uint64_t)v375, v253);
        v378((uint64_t)v252, v253);
        return v162 & 1;
      }

      long long v379 = *(void (**)(uint64_t, uint64_t))(v243 + 8);
      v379((uint64_t)v375, v253);
      v379((uint64_t)v252, v253);
      goto LABEL_153;
    case 0x25uLL:
      uint64_t v315 = v145;
      uint64_t v278 = v144;
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
      uint64_t v317 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x25) {
        goto LABEL_153;
      }
      goto LABEL_60;
    case 0x26uLL:
      unint64_t v530 = v143;
      uint64_t v531 = v142;
      unint64_t v532 = v147;
      uint64_t v533 = v138;
      uint64_t v419 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C410);
      uint64_t v420 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x26) {
        goto LABEL_153;
      }
      goto LABEL_119;
    case 0x27uLL:
      unint64_t v530 = v139;
      uint64_t v531 = v148;
      unint64_t v532 = v147;
      uint64_t v533 = v138;
      uint64_t v419 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F5D0);
      uint64_t v420 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x27) {
        goto LABEL_153;
      }
LABEL_119:
      uint64_t v421 = v420;
      uint64_t v422 = *(int *)(v419 + 48);
      unint64_t v535 = *(void *)(v420 + v422);
      uint64_t v423 = *(int *)(v419 + 64);
      uint64_t v424 = *(void **)(v420 + v423);
      uint64_t v425 = swift_projectBox();
      unint64_t v534 = *(void *)(v425 + v422);
      size_t v426 = *(void **)(v425 + v423);
      uint64_t v427 = v531;
      unint64_t v428 = v532;
      uint64_t v429 = *(void (**)(uint64_t, uint64_t, uint64_t))(v532 + 16);
      uint64_t v410 = v533;
      v429(v531, v421, v533);
      unint64_t v430 = v530;
      v429(v530, v425, v410);
      id v431 = v424;
      id v432 = v426;
      if ((MEMORY[0x253326A50](v427, v430) & 1) == 0)
      {

        uint64_t v433 = *(void (**)(char *, uint64_t))(v428 + 8);
        v433((char *)v430, v410);
        uint64_t v434 = (char *)v427;
LABEL_136:
        v433(v434, v410);
        goto LABEL_153;
      }
      if (v535 != v534)
      {

        uint64_t v417 = v533;
        unsigned int v416 = *(void (**)(char *, uint64_t))(v532 + 8);
        v416((char *)v530, v533);
        uint64_t v418 = (char *)v531;
LABEL_138:
        v416(v418, v417);
        goto LABEL_153;
      }
      sub_24D3FB6F8(0, &qword_26B19A050);
      char v162 = sub_24DCCA398();

      uint64_t v347 = v533;
      unint64_t v348 = *(void (**)(char *, uint64_t))(v532 + 8);
      v348((char *)v530, v533);
      unint64_t v349 = (char *)v531;
LABEL_109:
      v348(v349, v347);
      return v162 & 1;
    case 0x28uLL:
      uint64_t v315 = v141;
      uint64_t v278 = v140;
      uint64_t v268 = v138;
      unint64_t v276 = v147;
      uint64_t v316 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C420);
      uint64_t v317 = swift_projectBox();
      if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x28) {
        goto LABEL_153;
      }
LABEL_60:
      uint64_t v318 = v317;
      uint64_t v319 = *(int *)(v316 + 48);
      unint64_t v288 = *(void **)(v317 + v319);
      uint64_t v289 = swift_projectBox();
      unint64_t v290 = *(void **)(v289 + v319);
      size_t v291 = *(void (**)(char *, uint64_t, uint64_t))(v276 + 16);
      v291((char *)v278, v318, v268);
LABEL_73:
      v291((char *)v315, v289, v268);
      id v339 = v288;
      id v340 = v290;
      if ((MEMORY[0x253326A50](v278, v315) & 1) == 0)
      {
LABEL_87:

LABEL_88:
        size_t v366 = *(void (**)(uint64_t, uint64_t))(v276 + 8);
        v366(v315, v268);
        v366(v278, v268);
        goto LABEL_153;
      }
LABEL_74:
      sub_24D3FB6F8(0, &qword_26B19A050);
      char v162 = sub_24DCCA398();

LABEL_75:
      unint64_t v341 = *(void (**)(uint64_t, uint64_t))(v276 + 8);
      v341(v315, v268);
      v341(v278, v268);
      return v162 & 1;
    case 0x29uLL:
      if (v535 == 0xA000000000000002)
      {
        if (((v534 >> 58) & 0x3C | (v534 >> 1) & 3) != 0x29 || v534 != 0xA000000000000002) {
          goto LABEL_153;
        }
      }
      else
      {
        int v320 = (v534 >> 58) & 0x3C | (v534 >> 1) & 3;
        if (v535 == 0xA00000000000000ALL)
        {
          if (v320 != 41 || v534 != 0xA00000000000000ALL)
          {
LABEL_153:
            char v162 = 0;
            return v162 & 1;
          }
        }
        else if (v320 != 41 || v534 != 0xA000000000000012)
        {
          goto LABEL_153;
        }
      }
      char v162 = 1;
      return v162 & 1;
    default:
      uint64_t v151 = v146;
      sub_24D3FB6F8(255, (unint64_t *)&qword_26B1947F0);
      uint64_t v152 = swift_getTupleTypeMetadata2();
      uint64_t v153 = swift_projectBox();
      if ((v534 >> 58) & 0x3C | (v534 >> 1) & 3) {
        goto LABEL_153;
      }
      uint64_t v154 = *(int *)(v152 + 48);
      uint64_t v155 = *(void **)(v153 + v154);
      uint64_t v156 = swift_projectBox();
      uint64_t v157 = *(void **)(v156 + v154);
      uint64_t v158 = *(void (**)(char *, uint64_t, uint64_t))(v151 + 16);
      uint64_t v159 = v533;
      v158(v150, v153, v533);
      v158(v137, v156, v159);
      id v160 = v155;
      id v161 = v157;
      if (sub_24DCC9798())
      {
        sub_24D3FB6F8(0, &qword_26B19A050);
        char v162 = sub_24DCCA398();

        uint64_t v163 = *(void (**)(char *, uint64_t))(v151 + 8);
        v163(v137, v159);
        v163(v150, v159);
        return v162 & 1;
      }

      size_t v451 = *(void (**)(char *, uint64_t))(v151 + 8);
      v451(v137, v159);
      v451(v150, v159);
      goto LABEL_153;
  }
}

uint64_t sub_24DA225A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24DCCAFF8();
  sub_24DA1DECC((uint64_t)v11, a1, a2, a3, a4, a5);
  return sub_24DCCB048();
}

unint64_t sub_24DA22618(uint64_t *a1)
{
  return sub_24DA1AC70(*v1, a1[2], a1[3], a1[4], a1[5]);
}

uint64_t sub_24DA2262C(uint64_t *a1)
{
  return sub_24DA225A0(*v1, a1[2], a1[3], a1[4], a1[5]);
}

void sub_24DA22640(uint64_t a1, uint64_t *a2)
{
  sub_24DA1DECC(a1, *v2, a2[2], a2[3], a2[4], a2[5]);
}

uint64_t sub_24DA22654(uint64_t a1, uint64_t *a2)
{
  sub_24DCCAFF8();
  sub_24DA1DECC((uint64_t)v5, *v2, a2[2], a2[3], a2[4], a2[5]);
  return sub_24DCCB048();
}

uint64_t sub_24DA226A0(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_24DA1F41C(*a1, *a2, a3[2], a3[3], a3[4], a3[5]);
}

uint64_t sub_24DA226B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24DA226D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC8A58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a2 + 16);
  uint64_t v27 = a1;
  sub_24DCCB008();
  if (v11)
  {
    uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v14 = a2 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
    unint64_t v15 = v12 + 40;
    uint64_t v16 = v12;
    uint64_t v17 = (uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v24 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v25 = v13;
    uint64_t v18 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v26 = v16;
    uint64_t v19 = *(void *)(v16 + 56);
    unint64_t v22 = v15 & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v23 = v19;
    while (1)
    {
      v25(v10, v14, v4);
      uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))v15;
      (*(void (**)(char *, void, uint64_t, uint64_t))v15)(v10, 0, 1, v4);
      uint64_t result = (*v17)(v10, 1, v4);
      if (result == 1) {
        break;
      }
      (*v24)(v7, v10, v4);
      sub_24D718E44();
      sub_24DCC9688();
      (*v18)(v7, v4);
      v14 += v23;
      if (!--v11) {
        return v20(v10, 1, 1, v4);
      }
    }
  }
  else
  {
    uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    return v20(v10, 1, 1, v4);
  }
  return result;
}

void sub_24DA22918(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    sub_24DCCB008();
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    if (!v3) {
      return;
    }
  }
  else
  {
    sub_24DCCB008();
    uint64_t v3 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v3) {
      return;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
  }
  else if ((a2 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x253328820](i, a2);
      sub_24DCCA3A8();
      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v5 = (void **)(a2 + 32);
    do
    {
      uint64_t v6 = *v5++;
      id v7 = v6;
      sub_24DCCA3A8();

      --v3;
    }
    while (v3);
  }
}

BOOL sub_24DA22A30(uint64_t a1)
{
  return (a1 & 0xC000000000000001) == 0;
}

uint64_t sub_24DA22A3C()
{
  sub_24D44E05C(*(void *)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_24DA22A78(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unint64_t v63 = a5;
  uint64_t v55 = a4;
  uint64_t v64 = a3;
  uint64_t v75 = *MEMORY[0x263EF8340];
  uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698700A8);
  uint64_t v59 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v62 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698700B0);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v61 = (uint64_t)&v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = sub_24DCC9498();
  uint64_t v65 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v60 = (char *)&v54 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC9858();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = objc_msgSend(a1, sel_providerID);
  id v15 = objc_msgSend(a1, sel_domainIdentifier);
  id v16 = objc_msgSend(a1, sel_identifier);
  uint64_t v17 = sub_24DA24C28();
  uint64_t v19 = v18;

  sub_24DCC9848();
  uint64_t v57 = v17;
  uint64_t v58 = v19;
  uint64_t v20 = sub_24DCC97F8();
  unint64_t v22 = (unint64_t)v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
  v23(v13, v10);
  if (v22 >> 60 == 15) {
    goto LABEL_17;
  }
  uint64_t v71 = v20;
  uint64_t v72 = (char *)v22;
  sub_24DCC9848();
  uint64_t v24 = sub_24DCC97F8();
  unint64_t v26 = v25;
  v23(v13, v10);
  if (v26 >> 60 == 15)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  sub_24DCC8BA8();
  sub_24D416034(v24, v26);
  unint64_t v27 = v63;
  if (v63 >> 60 == 15)
  {
    sub_24DCC9848();
    uint64_t v28 = sub_24DCC97F8();
    unint64_t v30 = v29;
    v23(v13, v10);
    if (v30 >> 60 == 15)
    {
      __break(1u);
      JUMPOUT(0x24DA232DCLL);
    }
    sub_24DCC8BA8();
    uint64_t v31 = v28;
    unint64_t v32 = v30;
  }
  else
  {
    uint64_t v33 = v55;
    sub_24D3F9C18(v55, v63);
    sub_24DCC8BA8();
    uint64_t v31 = v33;
    unint64_t v32 = v27;
  }
  sub_24D416034(v31, v32);
  uint64_t v34 = v67;
  uint64_t v35 = v65;
  uint64_t v36 = v61;
  uint64_t v37 = v62;
  uint64_t v39 = v71;
  unint64_t v38 = (unint64_t)v72;
  sub_24DA233E8(1, v61);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v36, 1, v34) == 1) {
LABEL_19:
  }
    __break(1u);
  uint64_t v40 = v60;
  uint64_t v41 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 32))(v60, v36, v34);
  MEMORY[0x270FA5388](v41);
  switch(v38 >> 62)
  {
    case 1uLL:
      if (v39 >> 32 < (int)v39)
      {
        __break(1u);
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
      uint64_t v42 = v37;
      swift_retain();
      sub_24DA24A18((int)v39, v39 >> 32, (uint64_t (*)(uint64_t, uint64_t))sub_24DA24D5C);
      sub_24D400DCC(v39, v38);
LABEL_15:
      uint64_t v45 = v40;
      uint64_t v46 = v56;
      uint64_t v73 = v56;
      unint64_t v74 = sub_24DA24D78();
      uint64_t v47 = __swift_allocate_boxed_opaque_existential_0(&v71);
      uint64_t v48 = v59;
      (*(void (**)(uint64_t *, char *, uint64_t))(v59 + 16))(v47, v42, v46);
      __swift_project_boxed_opaque_existential_1(&v71, v73);
      sub_24DCC85C8();
      (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v46);
      long long v49 = v70;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v71);
      uint64_t v71 = sub_24DCC8B38();
      uint64_t v72 = v50;
      *(void *)&long long v70 = 47;
      *((void *)&v70 + 1) = 0xE100000000000000;
      uint64_t v68 = 95;
      unint64_t v69 = 0xE100000000000000;
      sub_24D3F0EB8();
      sub_24DCCA478();
      swift_bridgeObjectRelease();
      uint64_t v51 = (void *)sub_24DCC8B28();
      objc_msgSend(v66, sel_addLRUSignature_, v51);

      uint64_t v71 = 792359014;
      uint64_t v72 = (char *)0xE400000000000000;
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24D400DCC(v49, *((unint64_t *)&v49 + 1));
      sub_24D400DCC(v39, v38);
      uint64_t v52 = v71;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v45, v67);
      return v52;
    case 2uLL:
      uint64_t v42 = v37;
      uint64_t v43 = *(void *)(v39 + 16);
      uint64_t v44 = *(void *)(v39 + 24);
      swift_retain();
      swift_retain();
      sub_24DA24A18(v43, v44, (uint64_t (*)(uint64_t, uint64_t))sub_24DA24D5C);
      swift_release();
      swift_release();
      goto LABEL_15;
    case 3uLL:
      *(void *)((char *)&v70 + 6) = 0;
      *(void *)&long long v70 = 0;
      uint64_t v71 = (uint64_t)&v70;
      uint64_t v72 = (char *)&v70;
      goto LABEL_12;
    default:
      *(void *)&long long v70 = v39;
      WORD4(v70) = v38;
      BYTE10(v70) = BYTE2(v38);
      BYTE11(v70) = BYTE3(v38);
      BYTE12(v70) = BYTE4(v38);
      BYTE13(v70) = BYTE5(v38);
      uint64_t v71 = (uint64_t)&v70;
      uint64_t v72 = (char *)&v70 + BYTE6(v38);
LABEL_12:
      sub_24DCC9508();
      sub_24DA24DD4();
      sub_24DA24E2C();
      sub_24DCC94C8();
      uint64_t v42 = v37;
      goto LABEL_15;
  }
}

id sub_24DA232EC(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v8 = sub_24DCC97E8();
  uint64_t v10 = v9;
  id v11 = a3;
  id v12 = a1;
  if (a5)
  {
    id v13 = a5;
    a5 = (void *)sub_24DCC8B68();
    unint64_t v15 = v14;
  }
  else
  {
    unint64_t v15 = 0xF000000000000000;
  }
  sub_24DA22A78(a3, v8, v10, (uint64_t)a5, v15);
  uint64_t v17 = v16;
  sub_24D416034((uint64_t)a5, v15);

  swift_bridgeObjectRelease();
  if (v17)
  {
    uint64_t v18 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = 0;
  }

  return v18;
}

uint64_t sub_24DA233E8@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  uint64_t v39 = *MEMORY[0x263EF8340];
  uint64_t v5 = sub_24DCC9498();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v32[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void *)sub_24DCC97B8();
  uint64_t v37 = sub_24DA237EC;
  uint64_t v38 = 0;
  id aBlock = (void *)MEMORY[0x263EF8330];
  uint64_t v34 = 1107296256;
  uint64_t v35 = sub_24DA23990;
  uint64_t v36 = &block_descriptor_29;
  uint64_t v10 = _Block_copy(&aBlock);
  id v11 = objc_msgSend(v2, sel_keyForBundleIdentifier_generateIfNotFound_keyGenBlock_, v9, a1 & 1, v10);
  _Block_release(v10);

  if (!v11)
  {
    uint64_t v15 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v15, 1, v5);
  }
  uint64_t v12 = sub_24DCC8B68();
  unint64_t v14 = v13;

  switch(v14 >> 62)
  {
    case 1uLL:
      if (v12 >> 32 < (int)v12)
      {
        __break(1u);
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
      sub_24D3F9C18(v12, v14);
      uint64_t v16 = sub_24DCC84D8();
      if (!v16) {
        goto LABEL_9;
      }
      uint64_t v17 = sub_24DCC84F8();
      if (__OFSUB__((int)v12, v17))
      {
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
      }
      v16 += (int)v12 - v17;
LABEL_9:
      uint64_t v18 = sub_24DCC84E8();
      if (v18 >= (v12 >> 32) - (int)v12) {
        uint64_t v19 = (v12 >> 32) - (int)v12;
      }
      else {
        uint64_t v19 = v18;
      }
      uint64_t v20 = v16 + v19;
      if (!v16) {
        uint64_t v20 = 0;
      }
      id aBlock = (void *)v16;
      uint64_t v34 = v20;
      sub_24DCC9478();
      sub_24D400DCC(v12, v14);
LABEL_27:
      sub_24D400DCC(v12, v14);
      (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a2, v8, v5);
      uint64_t v15 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v15, 1, v5);
    case 2uLL:
      uint64_t v21 = *(void *)(v12 + 16);
      uint64_t v22 = *(void *)(v12 + 24);
      swift_retain();
      swift_retain();
      uint64_t v23 = sub_24DCC84D8();
      if (!v23) {
        goto LABEL_18;
      }
      uint64_t v24 = sub_24DCC84F8();
      if (__OFSUB__(v21, v24)) {
        goto LABEL_32;
      }
      v23 += v21 - v24;
LABEL_18:
      BOOL v25 = __OFSUB__(v22, v21);
      uint64_t v26 = v22 - v21;
      if (v25) {
        goto LABEL_30;
      }
      uint64_t v27 = sub_24DCC84E8();
      if (v27 >= v26) {
        uint64_t v28 = v26;
      }
      else {
        uint64_t v28 = v27;
      }
      uint64_t v29 = v23 + v28;
      if (!v23) {
        uint64_t v29 = 0;
      }
      id aBlock = (void *)v23;
      uint64_t v34 = v29;
      sub_24DCC9478();
      swift_release();
      swift_release();
      goto LABEL_27;
    case 3uLL:
      memset(v32, 0, 14);
      id aBlock = v32;
      uint64_t v34 = (uint64_t)v32;
      goto LABEL_26;
    default:
      v32[0] = v12;
      LOWORD(v32[1]) = v14;
      BYTE2(v32[1]) = BYTE2(v14);
      BYTE3(v32[1]) = BYTE3(v14);
      BYTE4(v32[1]) = BYTE4(v14);
      BYTE5(v32[1]) = BYTE5(v14);
      id aBlock = v32;
      uint64_t v34 = (uint64_t)v32 + BYTE6(v14);
LABEL_26:
      sub_24DCC9478();
      goto LABEL_27;
  }
}

uint64_t sub_24DA237EC()
{
  uint64_t v0 = sub_24DCC94B8();
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v1 = sub_24DCC9498();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC94A8();
  sub_24DCC9488();
  sub_24DCC9468();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6[2];
}

uint64_t sub_24DA23938@<X0>(size_t a1@<X0>, unint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  size_t v4 = sub_24DA24B74(a1, a2);
  uint64_t v5 = sub_24DB04148(v4);
  uint64_t v7 = v6;
  uint64_t result = swift_release();
  *a3 = v5;
  a3[1] = v7;
  return result;
}

id sub_24DA23990(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  unint64_t v5 = v4;
  swift_release();
  uint64_t v6 = (void *)sub_24DCC8B28();
  sub_24D400DCC(v3, v5);

  return v6;
}

id sub_24DA23A08(uint64_t a1, unint64_t a2, uint64_t a3)
{
  unint64_t v4 = v3;
  uint64_t v25 = *MEMORY[0x263EF8340];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698700A8);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[4] = a3;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      swift_retain();
      sub_24DA24A18((int)a1, a1 >> 32, (uint64_t (*)(uint64_t, uint64_t))sub_24DA25278);
      sub_24D400DCC(a1, a2);
      break;
    case 2uLL:
      uint64_t v12 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      sub_24DA24A18(v12, v13, (uint64_t (*)(uint64_t, uint64_t))sub_24DA25278);
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)((char *)&v20 + 6) = 0;
      *(void *)&long long v20 = 0;
      uint64_t v21 = &v20;
      uint64_t v22 = (char *)&v20;
      goto LABEL_7;
    default:
      *(void *)&long long v20 = a1;
      WORD4(v20) = a2;
      BYTE10(v20) = BYTE2(a2);
      BYTE11(v20) = BYTE3(a2);
      BYTE12(v20) = BYTE4(a2);
      BYTE13(v20) = BYTE5(a2);
      uint64_t v21 = &v20;
      uint64_t v22 = (char *)&v20 + BYTE6(a2);
LABEL_7:
      sub_24DCC9508();
      sub_24DA24DD4();
      sub_24DA24E2C();
      sub_24DCC94C8();
      break;
  }
  uint64_t v23 = v8;
  unint64_t v24 = sub_24DA24D78();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v21);
  (*(void (**)(uint64_t *, char *, uint64_t))(v9 + 16))(boxed_opaque_existential_0, v11, v8);
  __swift_project_boxed_opaque_existential_1(&v21, v23);
  sub_24DCC85C8();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  long long v15 = v20;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v21);
  uint64_t v16 = (void *)sub_24DCC8B28();
  id v17 = objc_msgSend(v4, sel_lookupLRUSignature_, v16);
  sub_24D400DCC(v15, *((unint64_t *)&v15 + 1));

  return v17;
}

uint64_t sub_24DA23D8C()
{
  return sub_24DCC94C8();
}

id sub_24DA23E10(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, unint64_t a6)
{
  uint64_t v78 = a5;
  id v82 = a4;
  uint64_t v94 = *MEMORY[0x263EF8340];
  uint64_t v79 = sub_24DCC9858();
  unint64_t v80 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v12 = (char *)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698700B0);
  MEMORY[0x270FA5388](v13 - 8);
  long long v15 = (char *)&v68 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC9498();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  long long v20 = (char *)&v68 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v81 = (char *)&v68 - v21;
  sub_24DA24E80(a1, a2, v88);
  sub_24DA2513C((uint64_t)v88, (uint64_t)&v89);
  uint64_t v22 = v90;
  if (!v90) {
    return 0;
  }
  unint64_t v76 = a6;
  uint64_t v73 = v20;
  unint64_t v74 = v89;
  uint64_t v23 = v91;
  unint64_t v24 = v92;
  uint64_t v25 = v93;
  uint64_t v75 = a3;
  uint64_t v77 = v6;
  sub_24DA233E8(0, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    swift_bridgeObjectRelease();

    sub_24DA251A4((uint64_t)v15);
    return 0;
  }
  uint64_t v69 = v17;
  uint64_t v26 = *(void (**)(void, void, void))(v17 + 32);
  uint64_t v70 = v16;
  v26(v81, v15, v16);
  id v68 = v24;
  id v72 = v25;
  sub_24DA24C28();
  uint64_t v28 = v27;
  sub_24DCC9848();
  uint64_t v71 = v28;
  uint64_t v29 = sub_24DCC97F8();
  unint64_t v31 = (unint64_t)v30;
  unint64_t v32 = *(void (**)(void, void))(v80 + 8);
  uint64_t v33 = v79;
  v32(v12, v79);
  if (v31 >> 60 == 15)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v34 = v23;
  uint64_t v86 = (long long *)v29;
  uint64_t v87 = (char *)v31;
  sub_24DCC9848();
  uint64_t v35 = sub_24DCC97F8();
  unint64_t v37 = v36;
  v32(v12, v33);
  unint64_t v38 = v76;
  if (v37 >> 60 == 15)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  id v82 = v34;
  sub_24DCC8BA8();
  sub_24D416034(v35, v37);
  if (v38 >> 60 != 15)
  {
    uint64_t v44 = v78;
    sub_24D3F9C18(v78, v38);
    sub_24DCC8BA8();
    sub_24D416034(v44, v38);
    uint64_t v43 = v81;
    id v42 = v72;
    goto LABEL_10;
  }
  sub_24DCC9848();
  uint64_t v39 = sub_24DCC97F8();
  unint64_t v41 = v40;
  v32(v12, v33);
  id v42 = v72;
  if (v41 >> 60 == 15)
  {
LABEL_30:
    __break(1u);
    JUMPOUT(0x24DA24724);
  }
  sub_24DCC8BA8();
  sub_24D416034(v39, v41);
  uint64_t v43 = v81;
LABEL_10:
  uint64_t v45 = v74;
  swift_bridgeObjectRelease();
  uint64_t v47 = (uint64_t)v86;
  unint64_t v46 = (unint64_t)v87;
  uint64_t v86 = v45;
  uint64_t v87 = v22;
  uint64_t v84 = 95;
  unint64_t v85 = 0xE100000000000000;
  *(void *)&long long v83 = 47;
  *((void *)&v83 + 1) = 0xE100000000000000;
  sub_24D3F0EB8();
  sub_24DCCA478();
  uint64_t v48 = sub_24DCC8AB8();
  unint64_t v50 = v49;
  swift_bridgeObjectRelease();
  uint64_t v51 = swift_bridgeObjectRelease();
  if (v50 >> 60 != 15)
  {
    MEMORY[0x270FA5388](v51);
    unint64_t v80 = v46;
    uint64_t v79 = v47;
    uint64_t v78 = v54;
    switch(v50 >> 62)
    {
      case 1uLL:
        if (v48 >> 32 < (int)v48) {
          __break(1u);
        }
        swift_retain();
        char v57 = sub_24DA24AC0((int)v48, v48 >> 32, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24DA25204);
        sub_24D416034(v48, v50);
        break;
      case 2uLL:
        uint64_t v55 = *(void *)(v48 + 16);
        uint64_t v56 = *(void *)(v48 + 24);
        swift_retain();
        swift_retain();
        char v57 = sub_24DA24AC0(v55, v56, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_24DA25204);
        swift_release();
        swift_release();
        break;
      case 3uLL:
        *(void *)((char *)&v83 + 6) = 0;
        *(void *)&long long v83 = 0;
        uint64_t v86 = &v83;
        uint64_t v87 = (char *)&v83;
        goto LABEL_20;
      default:
        *(void *)&long long v83 = v48;
        WORD4(v83) = v50;
        BYTE10(v83) = BYTE2(v50);
        BYTE11(v83) = BYTE3(v50);
        BYTE12(v83) = BYTE4(v50);
        BYTE13(v83) = BYTE5(v50);
        uint64_t v86 = &v83;
        uint64_t v87 = (char *)&v83 + BYTE6(v50);
LABEL_20:
        uint64_t v84 = v47;
        unint64_t v85 = v46;
        sub_24DCC9508();
        sub_24DA24DD4();
        sub_24DA25224();
        char v57 = sub_24DCC94D8();
        break;
    }
    uint64_t v58 = v69;
    uint64_t v59 = (uint64_t)v73;
    uint64_t v60 = v70;
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v73, v43, v70);
    if (v57)
    {
      uint64_t v61 = *(void (**)(void, void))(v58 + 8);
      v61(v59, v60);
      id v62 = v68;
    }
    else
    {
      uint64_t v63 = v79;
      unint64_t v64 = v80;
      unsigned __int8 v65 = sub_24DA23A08(v79, v80, v59);
      uint64_t v61 = *(void (**)(void, void))(v58 + 8);
      v61(v59, v60);
      if ((v65 & 1) == 0)
      {
        sub_24D400DCC(v63, v64);

        sub_24D416034(v48, v50);
        v61(v81, v60);
        return 0;
      }
      id v62 = v68;
      id v42 = v72;
      uint64_t v43 = v81;
    }
    id v66 = objc_allocWithZone(MEMORY[0x263F054B8]);
    id v67 = v82;
    id v52 = objc_msgSend(v66, sel_initWithProviderID_domainIdentifier_itemIdentifier_, v82, v62, v42);

    sub_24D400DCC(v79, v80);
    sub_24D416034(v48, v50);
    v61(v43, v60);
    return v52;
  }
  sub_24D400DCC(v47, v46);

  (*(void (**)(char *, uint64_t))(v69 + 8))(v43, v70);
  return 0;
}

uint64_t sub_24DA24734@<X0>(unsigned char *a1@<X8>)
{
  sub_24DCC9508();
  sub_24DA24DD4();
  sub_24DA25224();
  uint64_t result = sub_24DCC94D8();
  *a1 = result & 1;
  return result;
}

id sub_24DA247D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v7 = sub_24DCC97E8();
  unint64_t v9 = v8;
  uint64_t v10 = sub_24DCC97E8();
  uint64_t v12 = v11;
  id v13 = a1;
  if (a5)
  {
    id v14 = a5;
    a5 = (void *)sub_24DCC8B68();
    unint64_t v16 = v15;
  }
  else
  {
    unint64_t v16 = 0xF000000000000000;
  }
  id v17 = sub_24DA23E10(v7, v9, v10, v12, (uint64_t)a5, v16);
  sub_24D416034((uint64_t)a5, v16);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v17;
}

id sub_24DA248B8(void *a1)
{
  uint64_t v2 = sub_24DCC97E8();
  unint64_t v4 = v3;
  id v5 = a1;
  sub_24DA24E80(v2, v4, v11);
  sub_24DA2513C((uint64_t)v11, (uint64_t)v12);
  if (v13)
  {
    uint64_t v6 = v14;
    uint64_t v7 = v15;
    unint64_t v8 = v16;
    swift_bridgeObjectRelease();
    id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F054B8]), sel_initWithProviderID_domainIdentifier_itemIdentifier_, v6, v7, v8);

    swift_bridgeObjectRelease();
  }
  else
  {

    swift_bridgeObjectRelease();
    id v9 = 0;
  }

  return v9;
}

unsigned char *sub_24DA249A0@<X0>(unsigned char *result@<X0>, unsigned char *a2@<X1>, void *a3@<X8>)
{
  if (!result) {
    goto LABEL_4;
  }
  uint64_t v4 = a2 - result;
  if (a2 == result)
  {
    uint64_t result = 0;
LABEL_4:
    unint64_t v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    uint64_t result = (unsigned char *)sub_24DC9FBB8(result, a2);
    unint64_t v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    uint64_t result = (unsigned char *)sub_24DAFB238((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v8 | 0x8000000000000000;
  }
  else
  {
    uint64_t result = (unsigned char *)sub_24DAFB2B4((uint64_t)result, (uint64_t)a2);
    unint64_t v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_24DA24A18(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = sub_24DCC84D8();
  uint64_t v7 = result;
  if (result)
  {
    uint64_t result = sub_24DCC84F8();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v7 += a1 - result;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t v9 = a2 - a1;
  if (v8)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = sub_24DCC84E8();
  if (v10 >= v9) {
    uint64_t v11 = v9;
  }
  else {
    uint64_t v11 = v10;
  }
  uint64_t v12 = v7 + v11;
  if (v7) {
    uint64_t v13 = v12;
  }
  else {
    uint64_t v13 = 0;
  }
  return a3(v7, v13);
}

uint64_t sub_24DA24AC0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t result = sub_24DCC84D8();
  uint64_t v8 = result;
  if (result)
  {
    uint64_t result = sub_24DCC84F8();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v8 += a1 - result;
  }
  BOOL v9 = __OFSUB__(a2, a1);
  uint64_t v10 = a2 - a1;
  if (v9)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v11 = sub_24DCC84E8();
  if (v11 >= v10) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v11;
  }
  uint64_t v13 = v8 + v12;
  if (v8) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  a3(&v16, v8, v14);
  if (!v3) {
    char v15 = v16;
  }
  return v15 & 1;
}

size_t sub_24DA24B74(size_t result, unint64_t a2)
{
  if (!result) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v3 = (const void *)result;
  int64_t v4 = a2 - result;
  if (a2 == result) {
    return MEMORY[0x263F8EE78];
  }
  if (v4 < 1)
  {
    unint64_t v5 = (void *)MEMORY[0x263F8EE78];
    if (!a2) {
      goto LABEL_13;
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197F08);
    unint64_t v5 = (void *)swift_allocObject();
    uint64_t result = _swift_stdlib_malloc_size(v5);
    _OWORD v5[2] = v4;
    v5[3] = 2 * result - 64;
    if (!a2) {
      goto LABEL_13;
    }
  }
  if ((unint64_t)v3 < a2)
  {
    if ((v4 & 0x8000000000000000) == 0)
    {
      memmove(v5 + 4, v3, v4);
      return (size_t)v5;
    }
    __break(1u);
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_24DA24C28()
{
  uint64_t v0 = sub_24DCC97E8();
  uint64_t v2 = v1;
  if (v0 == sub_24DCC97E8() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v5 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
LABEL_8:
    uint64_t v7 = sub_24DCC97E8();
    goto LABEL_9;
  }
  uint64_t v7 = sub_24DCC97E8();
  sub_24DCC9968();
  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
LABEL_9:
  sub_24DCC9968();
  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_24DA24D5C()
{
  return sub_24DA23D8C();
}

unint64_t sub_24DA24D78()
{
  unint64_t result = qword_2698700B8;
  if (!qword_2698700B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698700A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698700B8);
  }
  return result;
}

unint64_t sub_24DA24DD4()
{
  unint64_t result = qword_26B18F690[0];
  if (!qword_26B18F690[0])
  {
    sub_24DCC9508();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B18F690);
  }
  return result;
}

unint64_t sub_24DA24E2C()
{
  unint64_t result = qword_2698700C0;
  if (!qword_2698700C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698700C0);
  }
  return result;
}

id sub_24DA24E80@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  v29[0] = 47;
  v29[1] = 0xE100000000000000;
  v28[2] = v29;
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_24DC72A9C(4, 0, sub_24D6DEE88, (uint64_t)v28, a1, a2);
  int64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    v29[0] = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, v7, 0);
    uint64_t v8 = (void *)v29[0];
    BOOL v9 = (uint64_t *)(v6 + 56);
    do
    {
      uint64_t v10 = *(v9 - 3);
      uint64_t v11 = *(v9 - 2);
      uint64_t v12 = *(v9 - 1);
      uint64_t v13 = *v9;
      swift_bridgeObjectRetain();
      uint64_t v14 = MEMORY[0x253327950](v10, v11, v12, v13);
      uint64_t v16 = v15;
      swift_bridgeObjectRelease();
      v29[0] = v8;
      unint64_t v18 = v8[2];
      unint64_t v17 = v8[3];
      if (v18 >= v17 >> 1)
      {
        sub_24D3E4C28(v17 > 1, v18 + 1, 1);
        uint64_t v8 = (void *)v29[0];
      }
      v8[2] = v18 + 1;
      uint64_t v19 = &v8[2 * v18];
      v19[4] = v14;
      v19[5] = v16;
      v9 += 4;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (void *)MEMORY[0x263F8EE78];
  }
  if (v8[2] != 5
    || (v8[4] == 3829862 ? (BOOL v20 = v8[5] == 0xE300000000000000) : (BOOL v20 = 0), !v20 && (sub_24DCCAE28() & 1) == 0))
  {
    id result = (id)swift_bridgeObjectRelease();
    uint64_t v22 = 0;
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
LABEL_21:
    *a3 = v22;
    a3[1] = v21;
    a3[2] = v23;
    a3[3] = v26;
    a3[4] = v27;
    return result;
  }
  uint64_t v22 = v8[6];
  uint64_t v21 = v8[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v23 = sub_24DCC97B8();
  id result = (id)swift_bridgeObjectRelease();
  if (v8[2] < 4uLL)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24DCC9908();
    swift_bridgeObjectRelease();
    if (v25)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_24DCC97B8();
      id result = (id)swift_bridgeObjectRelease();
    }
    else
    {
      id result = (id)*MEMORY[0x263F05360];
      uint64_t v26 = (uint64_t)result;
    }
    if (v8[2] >= 5uLL)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v27 = sub_24DCC97B8();
      id result = (id)swift_bridgeObjectRelease();
      goto LABEL_21;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA2513C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698700C8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24DA251A4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2698700B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24DA25204@<X0>(unsigned char *a1@<X8>)
{
  return sub_24DA24734(a1);
}

unint64_t sub_24DA25224()
{
  unint64_t result = qword_26B1949F0[0];
  if (!qword_26B1949F0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1949F0);
  }
  return result;
}

uint64_t sub_24DA25278()
{
  return sub_24DA24D5C();
}

uint64_t sub_24DA25290(char a1, char a2)
{
  if (a2 == 1) {
    char v2 = a1 ^ 1;
  }
  else {
    char v2 = 1;
  }
  if (a2 == 2) {
    char v3 = 0;
  }
  else {
    char v3 = v2;
  }
  return v3 & 1;
}

uint64_t sub_24DA252B4(char a1, char a2)
{
  if (qword_24DCE3258[a2] == qword_24DCE3258[a1]) {
    return 1;
  }
  if (a2 != 3) {
    return !a2 && a1 == 3;
  }
  return !a1;
}

BOOL sub_24DA2530C(char a1)
{
  return a1 != 1;
}

uint64_t sub_24DA2531C(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t result = sub_24DCC8F18();
      break;
    case 2:
      uint64_t result = sub_24DCC8EA8();
      break;
    case 3:
      uint64_t result = sub_24DCC8F48();
      break;
    default:
      uint64_t result = sub_24DCC8F08();
      break;
  }
  return result;
}

BOOL sub_24DA25360(unsigned __int8 a1)
{
  return a1 - 3 < 0xFFFFFFFE;
}

uint64_t sub_24DA25374(char a1)
{
  return qword_24DCE3258[a1];
}

uint64_t sub_24DA2538C(char a1)
{
  uint64_t result = 6516580;
  switch(a1)
  {
    case 1:
      uint64_t result = 7498084;
      break;
    case 2:
      uint64_t result = 0x6B6E696C6D7973;
      break;
    case 3:
      uint64_t result = 0x7361696C61;
      break;
    default:
      return result;
  }
  return result;
}

void *sub_24DA25408()
{
  return &unk_26FFA3800;
}

uint64_t sub_24DA25414(char a1)
{
  uint64_t v2 = sub_24DCC8F78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  char v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(a1)
  {
    case 1:
      sub_24DCC8F18();
      break;
    case 2:
      sub_24DCC8EA8();
      break;
    case 3:
      sub_24DCC8F48();
      break;
    default:
      sub_24DCC8F08();
      break;
  }
  uint64_t v6 = sub_24DCC8E88();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v6;
}

uint64_t sub_24DA2554C()
{
  return sub_24DCCB048();
}

uint64_t sub_24DA2559C()
{
  return sub_24DCCB008();
}

uint64_t sub_24DA255D4()
{
  return sub_24DCCB048();
}

uint64_t sub_24DA25620@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24DA257C0(*a1);
  *a2 = result;
  return result;
}

void sub_24DA2564C(void *a1@<X8>)
{
  *a1 = qword_24DCE3258[*v1];
}

uint64_t sub_24DA25664()
{
  uint64_t result = 6516580;
  switch(*v0)
  {
    case 1:
      uint64_t result = 7498084;
      break;
    case 2:
      uint64_t result = 0x6B6E696C6D7973;
      break;
    case 3:
      uint64_t result = 0x7361696C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24DA256DC()
{
  return sub_24DCC9BD8();
}

uint64_t sub_24DA2573C()
{
  return sub_24DCC9B68();
}

BOOL sub_24DA2578C(char *a1, char *a2)
{
  return qword_24DCE3258[*a1] == qword_24DCE3258[*a2];
}

void sub_24DA257B0(void *a1@<X8>)
{
  *a1 = &unk_26FFA1018;
}

uint64_t sub_24DA257C0(unint64_t a1)
{
  if (a1 >= 5) {
    return 4;
  }
  else {
    return (0x304020100uLL >> (8 * a1));
  }
}

unint64_t sub_24DA257E8()
{
  unint64_t result = qword_2698700D0;
  if (!qword_2698700D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698700D0);
  }
  return result;
}

unint64_t sub_24DA25840()
{
  unint64_t result = qword_2698700D8;
  if (!qword_2698700D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_2698700E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698700D8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileItemKind()
{
  return &type metadata for FileItemKind;
}

uint64_t sub_24DA258D4()
{
  char v0 = byte_26FFA37F8;
  uint64_t v1 = MEMORY[0x263F8EE78];
  if (byte_26FFA37F8 != 2)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_24D7C72CC(0, 1, 1);
    uint64_t v1 = v14;
    unint64_t v3 = *(void *)(v14 + 16);
    unint64_t v2 = *(void *)(v14 + 24);
    if (v3 >= v2 >> 1)
    {
      sub_24D7C72CC(v2 > 1, v3 + 1, 1);
      uint64_t v1 = v14;
    }
    *(void *)(v1 + 16) = v3 + 1;
    *(unsigned char *)(v1 + v3 + 32) = v0;
  }
  char v4 = byte_26FFA37F9;
  if (byte_26FFA37F9 != 2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_24D7C72CC(0, *(void *)(v1 + 16) + 1, 1);
    }
    unint64_t v6 = *(void *)(v1 + 16);
    unint64_t v5 = *(void *)(v1 + 24);
    if (v6 >= v5 >> 1) {
      sub_24D7C72CC(v5 > 1, v6 + 1, 1);
    }
    *(void *)(v1 + 16) = v6 + 1;
    *(unsigned char *)(v1 + v6 + 32) = v4;
  }
  char v7 = byte_26FFA37FA;
  if (byte_26FFA37FA != 2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_24D7C72CC(0, *(void *)(v1 + 16) + 1, 1);
    }
    unint64_t v9 = *(void *)(v1 + 16);
    unint64_t v8 = *(void *)(v1 + 24);
    if (v9 >= v8 >> 1) {
      sub_24D7C72CC(v8 > 1, v9 + 1, 1);
    }
    *(void *)(v1 + 16) = v9 + 1;
    *(unsigned char *)(v1 + v9 + 32) = v7;
  }
  char v10 = byte_26FFA37FB;
  if (byte_26FFA37FB != 2)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_24D7C72CC(0, *(void *)(v1 + 16) + 1, 1);
    }
    unint64_t v12 = *(void *)(v1 + 16);
    unint64_t v11 = *(void *)(v1 + 24);
    if (v12 >= v11 >> 1) {
      sub_24D7C72CC(v11 > 1, v12 + 1, 1);
    }
    *(void *)(v1 + 16) = v12 + 1;
    *(unsigned char *)(v1 + v12 + 32) = v10;
  }
  return v1;
}

unint64_t sub_24DA25AE4()
{
  unint64_t result = qword_2698700E8;
  if (!qword_2698700E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698700E8);
  }
  return result;
}

unint64_t sub_24DA25B3C(uint64_t a1)
{
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  return a1 & 0xFFFFFFFFFF7FFFEFLL & (qword_26B1A24C8 | 0x409000000C000);
}

uint64_t *sub_24DA25BB4()
{
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  return &qword_26B1A24C8;
}

void *sub_24DA25C00()
{
  return &unk_24DCE32B0;
}

void *sub_24DA25C0C()
{
  return &unk_24DCE3310;
}

void *sub_24DA25C18()
{
  return &unk_24DCE32A0;
}

void *sub_24DA25C24()
{
  return &unk_24DCE33E0;
}

void *sub_24DA25C30()
{
  return &unk_24DCE3330;
}

void *sub_24DA25C3C()
{
  return &unk_24DCE3418;
}

void *sub_24DA25C48()
{
  return &unk_24DCE3430;
}

void *sub_24DA25C54()
{
  return &unk_24DCE3438;
}

void *sub_24DA25C60()
{
  return &unk_24DCE33E8;
}

void *sub_24DA25C6C()
{
  return &unk_24DCE3298;
}

void *sub_24DA25C78()
{
  return &unk_24DCE3290;
}

uint64_t sub_24DA25C84(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

void *sub_24DA25C8C()
{
  return &unk_24DCE3328;
}

void *sub_24DA25C98()
{
  return &unk_24DCE32A8;
}

void *sub_24DA25CA4()
{
  return &unk_24DCE32B8;
}

void *sub_24DA25CB0()
{
  return &unk_24DCE32E8;
}

void *sub_24DA25CBC()
{
  return &unk_24DCE32C0;
}

void *sub_24DA25CC8()
{
  return &unk_24DCE32F0;
}

void *sub_24DA25CD4()
{
  return &unk_24DCE32F8;
}

void *sub_24DA25CE0()
{
  return &unk_24DCE3300;
}

void *sub_24DA25CEC()
{
  return &unk_24DCE3308;
}

void *sub_24DA25CF8()
{
  return &unk_24DCE3318;
}

void *sub_24DA25D04()
{
  return &unk_24DCE33F0;
}

void *sub_24DA25D10()
{
  return &unk_24DCE32C8;
}

void *sub_24DA25D1C()
{
  return &unk_24DCE32D0;
}

void *sub_24DA25D28()
{
  return &unk_24DCE32D8;
}

void *sub_24DA25D34()
{
  return &unk_24DCE32E0;
}

void *sub_24DA25D40()
{
  return &unk_24DCE3320;
}

void *sub_24DA25D4C()
{
  return &unk_24DCE33F8;
}

void *sub_24DA25D58()
{
  return &unk_24DCE3400;
}

void *sub_24DA25D64()
{
  return &unk_24DCE3408;
}

void *sub_24DA25D70()
{
  return &unk_24DCE3360;
}

void *sub_24DA25D7C()
{
  return &unk_24DCE3370;
}

void *sub_24DA25D88()
{
  return &unk_24DCE3378;
}

void *sub_24DA25D94()
{
  return &unk_24DCE3428;
}

void *sub_24DA25DA0()
{
  return &unk_24DCE3440;
}

uint64_t sub_24DA25DAC()
{
  return 0x80000000;
}

uint64_t sub_24DA25DB8()
{
  return 0x40000000;
}

uint64_t *sub_24DA25DC0()
{
  if (qword_26B190338 != -1) {
    swift_once();
  }
  return &qword_26B1A22B8;
}

void *sub_24DA25E0C()
{
  return &unk_24DCE3448;
}

void *sub_24DA25E18()
{
  return &unk_24DCE3450;
}

void *sub_24DA25E24()
{
  return &unk_24DCE3410;
}

BOOL sub_24DA25E30(char a1)
{
  return (a1 & 0x18) != 0;
}

unint64_t sub_24DA25E3C(uint64_t a1)
{
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  return a1 & 0xFE9FFFFFFFFEBFE7 & (qword_26B1A24C8 | 0x10000000000);
}

void *sub_24DA25EAC()
{
  return &unk_24DCE3338;
}

void *sub_24DA25EB8()
{
  return &unk_24DCE3340;
}

void *sub_24DA25EC4()
{
  return &unk_24DCE3348;
}

void *sub_24DA25ED0()
{
  return &unk_24DCE3350;
}

void *sub_24DA25EDC()
{
  return &unk_24DCE3358;
}

void *sub_24DA25EE8()
{
  return &unk_24DCE3368;
}

void *sub_24DA25EF4()
{
  return &unk_24DCE3380;
}

void *sub_24DA25F00()
{
  return &unk_24DCE3388;
}

void *sub_24DA25F0C()
{
  return &unk_24DCE3390;
}

void *sub_24DA25F18()
{
  return &unk_24DCE3398;
}

void *sub_24DA25F24()
{
  return &unk_24DCE33A0;
}

void *sub_24DA25F30()
{
  return &unk_24DCE33A8;
}

void *sub_24DA25F3C()
{
  return &unk_24DCE33B0;
}

void *sub_24DA25F48()
{
  return &unk_24DCE33B8;
}

void *sub_24DA25F54()
{
  return &unk_24DCE33C0;
}

void *sub_24DA25F60()
{
  return &unk_24DCE33C8;
}

void *sub_24DA25F6C()
{
  return &unk_24DCE33D0;
}

void *sub_24DA25F78()
{
  return &unk_24DCE33D8;
}

void *sub_24DA25F84()
{
  return &unk_24DCE3420;
}

uint64_t *sub_24DA25F90()
{
  if (qword_26B193848 != -1) {
    swift_once();
  }
  return &qword_26B1A22B0;
}

uint64_t sub_24DA25FE0()
{
  return 0x10000000000;
}

uint64_t sub_24DA25FE8()
{
  return 16;
}

uint64_t sub_24DA25FF0()
{
  return 0x200000000000;
}

uint64_t sub_24DA25FF8()
{
  return 0x2000;
}

uint64_t sub_24DA26000()
{
  return 0x10000;
}

uint64_t sub_24DA26008()
{
  return 0x20000;
}

uint64_t sub_24DA26010()
{
  return 0x20000000000;
}

uint64_t sub_24DA26018()
{
  return 0x8000;
}

uint64_t sub_24DA26020()
{
  return 0x40000;
}

uint64_t sub_24DA26028()
{
  return 0x80000;
}

uint64_t sub_24DA26030()
{
  return 0x100000;
}

uint64_t sub_24DA26038()
{
  return 0x200000;
}

uint64_t sub_24DA26040()
{
  return 0x400000;
}

uint64_t sub_24DA26048()
{
  return 0x1000000;
}

uint64_t sub_24DA26050()
{
  return 0x2000000;
}

uint64_t sub_24DA26058()
{
  return 0x4000000;
}

uint64_t sub_24DA26060()
{
  return 0x8000000;
}

uint64_t sub_24DA26068()
{
  return 0x10000000;
}

uint64_t sub_24DA26070()
{
  return 0x20000000;
}

uint64_t sub_24DA26078()
{
  return 0x100000000;
}

uint64_t sub_24DA26080()
{
  return 0x200000000;
}

uint64_t sub_24DA26088()
{
  return 0x400000000;
}

uint64_t sub_24DA26090()
{
  return 0x800000000;
}

uint64_t sub_24DA26098()
{
  return 0x1000000000;
}

uint64_t sub_24DA260A0()
{
  return 0x2000000000;
}

uint64_t sub_24DA260A8()
{
  return 0x4000000000;
}

uint64_t sub_24DA260B0()
{
  return 0x8000000000;
}

uint64_t sub_24DA260B8()
{
  return 0x80000000000;
}

uint64_t sub_24DA260C0()
{
  return 0x100000000000;
}

uint64_t sub_24DA260C8()
{
  return 0x800000;
}

uint64_t sub_24DA260D0()
{
  return 0x400000000000;
}

uint64_t sub_24DA260D8()
{
  return 0x800000000000;
}

uint64_t sub_24DA260E0()
{
  return 0x1000000000000;
}

uint64_t sub_24DA260E8()
{
  return 0x2000000000000;
}

uint64_t sub_24DA260F0()
{
  return 0x4000000000000;
}

uint64_t sub_24DA260F8()
{
  return 0x8000000000000;
}

uint64_t sub_24DA26100()
{
  return 0x10000000000000;
}

uint64_t sub_24DA26108()
{
  return 0x20000000000000;
}

uint64_t sub_24DA26110()
{
  return 0x40000000000000;
}

uint64_t sub_24DA26118()
{
  return 0x100000000000000;
}

uint64_t sub_24DA26120()
{
  return 0x400000000000000;
}

uint64_t sub_24DA26128()
{
  return 0x800000000000000;
}

void sub_24DA26130()
{
  uint64_t v0 = unk_26FFA0E28;
  if ((unk_26FFA0E28 & ~qword_26FFA0E20) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = v0 | qword_26FFA0E20;
  uint64_t v2 = qword_26FFA0E30;
  if ((qword_26FFA0E30 & ~v1) == 0) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | v1;
  if ((unk_26FFA0E38 & ~v3) != 0) {
    uint64_t v4 = unk_26FFA0E38;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v4 | v3;
  uint64_t v6 = qword_26FFA0E40;
  if ((qword_26FFA0E40 & ~v5) == 0) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v6 | v5;
  if ((unk_26FFA0E48 & ~v7) != 0) {
    uint64_t v8 = unk_26FFA0E48;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | v7;
  uint64_t v10 = qword_26FFA0E50;
  if ((qword_26FFA0E50 & ~v9) == 0) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v9;
  if ((unk_26FFA0E58 & ~v11) != 0) {
    uint64_t v12 = unk_26FFA0E58;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = v12 | v11;
  uint64_t v14 = qword_26FFA0E60;
  if ((qword_26FFA0E60 & ~v13) == 0) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v14 | v13;
  if ((unk_26FFA0E68 & ~v15) != 0) {
    uint64_t v16 = unk_26FFA0E68;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v16 | v15;
  uint64_t v18 = qword_26FFA0E70;
  if ((qword_26FFA0E70 & ~v17) == 0) {
    uint64_t v18 = 0;
  }
  uint64_t v19 = v18 | v17;
  if ((unk_26FFA0E78 & ~v19) != 0) {
    uint64_t v20 = unk_26FFA0E78;
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v21 = v20 | v19;
  uint64_t v22 = qword_26FFA0E80;
  if ((qword_26FFA0E80 & ~v21) == 0) {
    uint64_t v22 = 0;
  }
  uint64_t v23 = v22 | v21;
  if ((unk_26FFA0E88 & ~v23) != 0) {
    uint64_t v24 = unk_26FFA0E88;
  }
  else {
    uint64_t v24 = 0;
  }
  uint64_t v25 = v24 | v23;
  uint64_t v26 = qword_26FFA0E90;
  if ((qword_26FFA0E90 & ~v25) == 0) {
    uint64_t v26 = 0;
  }
  uint64_t v27 = v26 | v25;
  if ((unk_26FFA0E98 & ~v27) != 0) {
    uint64_t v28 = unk_26FFA0E98;
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = v28 | v27;
  uint64_t v30 = qword_26FFA0EA0;
  if ((qword_26FFA0EA0 & ~v29) == 0) {
    uint64_t v30 = 0;
  }
  uint64_t v31 = v30 | v29;
  if ((unk_26FFA0EA8 & ~v31) != 0) {
    uint64_t v32 = unk_26FFA0EA8;
  }
  else {
    uint64_t v32 = 0;
  }
  uint64_t v33 = v32 | v31;
  uint64_t v34 = qword_26FFA0EB0;
  if ((qword_26FFA0EB0 & ~v33) == 0) {
    uint64_t v34 = 0;
  }
  uint64_t v35 = v34 | v33;
  if ((unk_26FFA0EB8 & ~v35) != 0) {
    uint64_t v36 = unk_26FFA0EB8;
  }
  else {
    uint64_t v36 = 0;
  }
  uint64_t v37 = v36 | v35;
  uint64_t v38 = qword_26FFA0EC0;
  if ((qword_26FFA0EC0 & ~v37) == 0) {
    uint64_t v38 = 0;
  }
  uint64_t v39 = v38 | v37;
  if ((unk_26FFA0EC8 & ~v39) != 0) {
    uint64_t v40 = unk_26FFA0EC8;
  }
  else {
    uint64_t v40 = 0;
  }
  uint64_t v41 = v40 | v39;
  uint64_t v43 = qword_26FFA0ED0;
  uint64_t v42 = unk_26FFA0ED8;
  if ((qword_26FFA0ED0 & ~v41) == 0) {
    uint64_t v43 = 0;
  }
  uint64_t v44 = v43 | v41;
  if ((unk_26FFA0ED8 & ~v44) == 0) {
    uint64_t v42 = 0;
  }
  qword_26B199AA8 = v42 | v44;
}

void sub_24DA26288()
{
  uint64_t v0 = unk_26FFA22B0;
  if ((unk_26FFA22B0 & ~qword_26FFA22A8) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = v0 | qword_26FFA22A8;
  uint64_t v2 = qword_26FFA22B8;
  if ((qword_26FFA22B8 & ~v1) == 0) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | v1;
  if ((unk_26FFA22C0 & ~v3) != 0) {
    uint64_t v4 = unk_26FFA22C0;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v4 | v3;
  uint64_t v6 = qword_26FFA22C8;
  if ((qword_26FFA22C8 & ~v5) == 0) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v6 | v5;
  if ((unk_26FFA22D0 & ~v7) != 0) {
    uint64_t v8 = unk_26FFA22D0;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | v7;
  uint64_t v10 = qword_26FFA22D8;
  if ((qword_26FFA22D8 & ~v9) == 0) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v9;
  if ((unk_26FFA22E0 & ~v11) != 0) {
    uint64_t v12 = unk_26FFA22E0;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = v12 | v11;
  uint64_t v14 = qword_26FFA22E8;
  if ((qword_26FFA22E8 & ~v13) == 0) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v14 | v13;
  if ((unk_26FFA22F0 & ~v15) != 0) {
    uint64_t v16 = unk_26FFA22F0;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v16 | v15;
  uint64_t v18 = qword_26FFA22F8;
  if ((qword_26FFA22F8 & ~v17) == 0) {
    uint64_t v18 = 0;
  }
  uint64_t v19 = v18 | v17;
  if ((unk_26FFA2300 & ~v19) != 0) {
    uint64_t v20 = unk_26FFA2300;
  }
  else {
    uint64_t v20 = 0;
  }
  uint64_t v21 = v20 | v19;
  uint64_t v23 = qword_26FFA2308;
  uint64_t v22 = unk_26FFA2310;
  if ((qword_26FFA2308 & ~v21) == 0) {
    uint64_t v23 = 0;
  }
  uint64_t v24 = v23 | v21;
  if ((unk_26FFA2310 & ~v24) == 0) {
    uint64_t v22 = 0;
  }
  qword_26B1A22B0 = v22 | v24;
}

uint64_t sub_24DA26354()
{
  return sub_24DA263F0(&qword_26B193848, (uint64_t)&qword_26B1A22B0);
}

uint64_t sub_24DA26378()
{
  if (qword_26B199AB0 != -1) {
    uint64_t result = swift_once();
  }
  qword_26B1A24C8 = qword_26B199AA8;
  return result;
}

uint64_t sub_24DA263CC()
{
  return sub_24DA263F0(&qword_26B199AA0, (uint64_t)&qword_26B1A24C8);
}

uint64_t sub_24DA263F0(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(void *)a2;
}

uint64_t sub_24DA2642C()
{
  if (qword_26B199AA0 != -1) {
    uint64_t result = swift_once();
  }
  uint64_t v0 = qword_26B1A24C8;
  if (qword_26B190338 != -1) {
    uint64_t result = swift_once();
  }
  qword_26B1A2370 = v0 & ~qword_26B1A22B8;
  return result;
}

uint64_t sub_24DA264C4()
{
  if (qword_26B199AA0 != -1) {
    uint64_t result = swift_once();
  }
  qword_26B1A2368 = qword_26B1A24C8 | 0x4000;
  return result;
}

uint64_t sub_24DA2651C(uint64_t a1)
{
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  if (qword_26B1A24C8 == a1) {
    return 7105633;
  }
  if (qword_26B193858 != -1) {
    swift_once();
  }
  if (qword_26B1A2370 == a1) {
    return 0x70662D6C6C61;
  }
  uint64_t result = 0;
  if (a1 > 0xFFFFFFF)
  {
    if (a1 > 0x7FFFFFFFFFFLL)
    {
      if (a1 <= 0x3FFFFFFFFFFFFLL)
      {
        if (a1 <= 0x3FFFFFFFFFFFLL)
        {
          switch(a1)
          {
            case 0x80000000000:
              return 0x6165726C4179616DLL;
            case 0x100000000000:
              return 0x746F6F72636E7973;
            case 0x200000000000:
              return 0x6567616B636170;
          }
        }
        else if (a1 > 0xFFFFFFFFFFFFLL)
        {
          if (a1 == 0x1000000000000)
          {
            return 0xD000000000000017;
          }
          else if (a1 == 0x2000000000000)
          {
            return 0x50746E65746E6F63;
          }
        }
        else if (a1 == 0x400000000000)
        {
          return 0x43646E4165707974;
        }
        else if (a1 == 0x800000000000)
        {
          return 0x6E756F436B6E696CLL;
        }
        return result;
      }
      if (a1 > 0x1FFFFFFFFFFFFFLL)
      {
        if (a1 > 0xFFFFFFFFFFFFFFLL)
        {
          if (a1 == 0x100000000000000) {
            return 0x6E6F697463697665;
          }
          if (a1 == 0x400000000000000) {
            return 0xD000000000000016;
          }
        }
        else if (a1 == 0x20000000000000)
        {
          return 0x73756150636E7973;
        }
        else if (a1 == 0x40000000000000)
        {
          return 0xD000000000000020;
        }
        return result;
      }
      if (a1 == 0x4000000000000) {
        return 0xD000000000000013;
      }
      if (a1 != 0x8000000000000)
      {
        if (a1 == 0x10000000000000) {
          return 0x6465686361746564;
        }
        return result;
      }
    }
    else
    {
      if (a1 <= 0x7FFFFFFFFLL)
      {
        if (a1 <= 0x7FFFFFFF)
        {
          switch(a1)
          {
            case 0x10000000:
              return 0xD000000000000020;
            case 0x20000000:
              return 0xD000000000000017;
            case 0x40000000:
              return 0xD000000000000012;
          }
        }
        else if (a1 > 0x1FFFFFFFFLL)
        {
          if (a1 == 0x200000000)
          {
            return 0xD00000000000001CLL;
          }
          else if (a1 == 0x400000000)
          {
            return 0xD000000000000018;
          }
        }
        else if (a1 == 0x80000000)
        {
          return 0x6961746E6F437369;
        }
        else if (a1 == 0x100000000)
        {
          return 0xD000000000000013;
        }
        return result;
      }
      if (a1 > 0x3FFFFFFFFFLL)
      {
        if (a1 > 0xFFFFFFFFFFLL)
        {
          if (a1 == 0x10000000000)
          {
            return 1684957547;
          }
          else if (a1 == 0x20000000000)
          {
            return 0x7275746375727473;
          }
        }
        else if (a1 == 0x4000000000)
        {
          return 0x6F6365446D657469;
        }
        else if (a1 == 0x8000000000)
        {
          return 0x6F666E4972657375;
        }
        return result;
      }
      if (a1 != 0x800000000)
      {
        if (a1 == 0x1000000000) {
          return 0x4E79616C70736964;
        }
        if (a1 == 0x2000000000) {
          return 0xD000000000000016;
        }
        return result;
      }
    }
    return 0xD000000000000014;
  }
  if (a1 < 0x4000)
  {
    if (a1 > 127)
    {
      if (a1 <= 1023)
      {
        switch(a1)
        {
          case 128:
            return 0x657469726F766166;
          case 256:
            return 0x737274746178;
          case 512:
            return 0x64656B636F6CLL;
        }
      }
      else if (a1 > 4095)
      {
        if (a1 == 4096)
        {
          return 0x6E6564646968;
        }
        else if (a1 == 0x2000)
        {
          return 0x6564646948747865;
        }
      }
      else if (a1 == 1024)
      {
        return 0x656D697462;
      }
      else if (a1 == 2048)
      {
        return 0x656D69746DLL;
      }
    }
    else
    {
      switch(a1)
      {
        case 1:
          uint64_t result = 0x656D616E656C6966;
          break;
        case 2:
          uint64_t result = 0x4449746E65726170;
          break;
        case 4:
          uint64_t result = 0xD000000000000010;
          break;
        case 8:
          uint64_t result = 0x746E65746E6F63;
          break;
        case 16:
          uint64_t result = 0x7373656C61746164;
          break;
        case 32:
          uint64_t result = 0x646573557473616CLL;
          break;
        case 64:
          uint64_t result = 1936154996;
          break;
        default:
          return result;
      }
    }
    return result;
  }
  if (a1 < 0x200000)
  {
    if (a1 >= 0x20000)
    {
      if (a1 >= 0x80000)
      {
        if (a1 == 0x80000 || a1 == 0x100000) {
          return 0x64616F6C70557369;
        }
      }
      else if (a1 == 0x20000)
      {
        return 0x64656E6E6970;
      }
      else if (a1 == 0x40000)
      {
        return 0x696C696261706163;
      }
      return result;
    }
    switch(a1)
    {
      case 0x4000:
        return 0x6572646C6968636ELL;
      case 0x8000:
        return 0x7272757365527369;
      case 0x10000:
        return 0x6E6F697463697665;
    }
    return result;
  }
  if (a1 <= 0xFFFFFF)
  {
    switch(a1)
    {
      case 0x200000:
        return 0x6E6964616F6C7075;
      case 0x400000:
        return 0xD000000000000010;
      case 0x800000:
        return 0x65726F6E6769;
    }
    return result;
  }
  if (a1 > 0x3FFFFFF)
  {
    if (a1 == 0x4000000) {
      return 0xD000000000000015;
    }
    if (a1 == 0x8000000) {
      return 0xD000000000000015;
    }
    return result;
  }
  if (a1 == 0x1000000) {
    return 0x6465726168537369;
  }
  if (a1 == 0x2000000) {
    return 0xD000000000000014;
  }
  return result;
}

uint64_t sub_24DA26FDC(uint64_t a1)
{
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  if ((qword_26B1A24C8 & a1) == qword_26B1A24C8) {
    return 7105633;
  }
  else {
    return 0;
  }
}

unint64_t sub_24DA27058(uint64_t a1)
{
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  return a1 & 0xFFFFDFFFFFFEF6E7 & (qword_26B1A24C8 | 0x6409000000C000);
}

uint64_t sub_24DA270D4(uint64_t a1)
{
  return a1 | 0x918;
}

unint64_t sub_24DA270E0(uint64_t a1)
{
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  return a1 & 0xFFFFFFFFFFFFFFF4 & (qword_26B1A24C8 | 0x409000000C000);
}

void sub_24DA27154()
{
  uint64_t v0 = unk_26FFA0F08;
  if ((unk_26FFA0F08 & ~qword_26FFA0F00) == 0) {
    uint64_t v0 = 0;
  }
  uint64_t v1 = v0 | qword_26FFA0F00;
  uint64_t v2 = qword_26FFA0F10;
  if ((qword_26FFA0F10 & ~v1) == 0) {
    uint64_t v2 = 0;
  }
  uint64_t v3 = v2 | v1;
  if ((unk_26FFA0F18 & ~v3) != 0) {
    uint64_t v4 = unk_26FFA0F18;
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v4 | v3;
  uint64_t v6 = qword_26FFA0F20;
  if ((qword_26FFA0F20 & ~v5) == 0) {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v6 | v5;
  if ((unk_26FFA0F28 & ~v7) != 0) {
    uint64_t v8 = unk_26FFA0F28;
  }
  else {
    uint64_t v8 = 0;
  }
  uint64_t v9 = v8 | v7;
  uint64_t v10 = qword_26FFA0F30;
  if ((qword_26FFA0F30 & ~v9) == 0) {
    uint64_t v10 = 0;
  }
  uint64_t v11 = v10 | v9;
  if ((unk_26FFA0F38 & ~v11) != 0) {
    uint64_t v12 = unk_26FFA0F38;
  }
  else {
    uint64_t v12 = 0;
  }
  uint64_t v13 = v12 | v11;
  uint64_t v14 = qword_26FFA0F40;
  if ((qword_26FFA0F40 & ~v13) == 0) {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v14 | v13;
  if ((unk_26FFA0F48 & ~v15) != 0) {
    uint64_t v16 = unk_26FFA0F48;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v16 | v15;
  uint64_t v19 = qword_26FFA0F50;
  uint64_t v18 = unk_26FFA0F58;
  if ((qword_26FFA0F50 & ~v17) == 0) {
    uint64_t v19 = 0;
  }
  uint64_t v20 = v19 | v17;
  if ((unk_26FFA0F58 & ~v20) == 0) {
    uint64_t v18 = 0;
  }
  qword_26B1A22B8 = v18 | v20;
}

uint64_t sub_24DA27204()
{
  return sub_24DA2651C(*v0);
}

int8x16_t sub_24DA2720C@<Q0>(int8x16_t *a1@<X8>)
{
  uint64_t v3 = *v1;
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  uint64_t v4 = v3 & ~qword_26B1A24C8;
  if ((qword_26B1A24C8 & v3) != qword_26B1A24C8) {
    uint64_t v4 = 0;
  }
  int32x2_t v5 = vdup_n_s32((qword_26B1A24C8 & v3) == qword_26B1A24C8);
  v6.i64[0] = v5.u32[0];
  v6.i64[1] = v5.u32[1];
  int8x16_t result = vandq_s8((int8x16_t)vcltzq_s64(vshlq_n_s64(v6, 0x3FuLL)), (int8x16_t)xmmword_24DCE3280);
  *a1 = result;
  a1[1].i64[0] = v4;
  return result;
}

uint64_t sub_24DA272A0()
{
  return sub_24D97C4E0(*v0);
}

uint64_t sub_24DA272A8()
{
  return sub_24DA605C4(*v0);
}

uint64_t sub_24DA272B0(uint64_t a1)
{
  uint64_t result = 0;
  if (a1 > 127)
  {
    uint64_t v3 = 0x43646E4165707974;
    if (a1 == 0x80000000) {
      unint64_t v4 = 0xD000000000000013;
    }
    else {
      unint64_t v4 = 0;
    }
    if (a1 == 0x40000000) {
      uint64_t v5 = 0x64656873617274;
    }
    else {
      uint64_t v5 = v4;
    }
    if (a1 != 1024) {
      uint64_t v3 = v5;
    }
    uint64_t v6 = 0x656D69746DLL;
    uint64_t v7 = 0x74737953656C6966;
    uint64_t v8 = 0x737274746178;
    if (a1 != 512) {
      uint64_t v8 = 0;
    }
    if (a1 != 256) {
      uint64_t v7 = v8;
    }
    if (a1 != 128) {
      uint64_t v6 = v7;
    }
    if (a1 <= 1023) {
      return v6;
    }
    else {
      return v3;
    }
  }
  else
  {
    switch(a1)
    {
      case 1:
        uint64_t result = 0x73746E65746E6F63;
        break;
      case 2:
        uint64_t result = 0x656D616E656C6966;
        break;
      case 4:
        uint64_t result = 0x4449746E65726170;
        break;
      case 8:
        uint64_t result = 0x646573557473616CLL;
        break;
      case 16:
        uint64_t result = 0x61746144676174;
        break;
      case 32:
        uint64_t result = 0x657469726F766166;
        break;
      case 64:
        uint64_t result = 0x656D697463;
        break;
      default:
        return result;
    }
  }
  return result;
}

uint64_t sub_24DA27594()
{
  return sub_24DA272B0(*v0);
}

unint64_t sub_24DA2759C()
{
  return sub_24D97C90C(*v0);
}

uint64_t sub_24DA275A4()
{
  return sub_24DA60750(*v0);
}

uint64_t sub_24DA275AC(uint64_t a1)
{
  if ((a1 & 1) == 0)
  {
    if ((a1 & 2) == 0)
    {
      if ((a1 & 0x3004) == 0)
      {
        if ((a1 & 0x800) != 0)
        {
          uint64_t v1 = 128;
          if ((a1 & 0x400) == 0) {
            goto LABEL_21;
          }
        }
        else
        {
          if ((a1 & 0x400) == 0)
          {
            if ((a1 & 0x18) != 0)
            {
              uint64_t v1 = 0;
              goto LABEL_22;
            }
            uint64_t v1 = 0;
            if ((a1 & 0x20) == 0) {
              goto LABEL_34;
            }
LABEL_23:
            v1 |= 8uLL;
            if ((a1 & 0x40) != 0) {
              goto LABEL_24;
            }
            goto LABEL_35;
          }
          uint64_t v1 = 0;
        }
        goto LABEL_32;
      }
      uint64_t v1 = 0;
      goto LABEL_11;
    }
    uint64_t v1 = 4;
LABEL_10:
    if ((a1 & 0x3004) == 0) {
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if ((a1 & 2) != 0)
  {
    uint64_t v1 = 6;
    goto LABEL_10;
  }
  if ((a1 & 0x3004) != 0)
  {
    uint64_t v1 = 2;
LABEL_11:
    v1 |= 0x100uLL;
LABEL_12:
    if ((a1 & 0x800) == 0) {
      goto LABEL_13;
    }
LABEL_20:
    v1 |= 0x80uLL;
    if ((a1 & 0x400) == 0) {
      goto LABEL_21;
    }
    goto LABEL_32;
  }
  uint64_t v1 = 2;
  if ((a1 & 0x800) != 0) {
    goto LABEL_20;
  }
LABEL_13:
  if ((a1 & 0x400) == 0)
  {
LABEL_21:
    if ((a1 & 0x18) != 0) {
      goto LABEL_22;
    }
    goto LABEL_33;
  }
LABEL_32:
  v1 |= 0x40uLL;
  if ((a1 & 0x18) == 0)
  {
LABEL_33:
    if ((a1 & 0x20) == 0) {
      goto LABEL_34;
    }
    goto LABEL_23;
  }
LABEL_22:
  v1 |= 1uLL;
  if ((a1 & 0x20) != 0) {
    goto LABEL_23;
  }
LABEL_34:
  if ((a1 & 0x40) != 0)
  {
LABEL_24:
    v1 |= 0x10uLL;
    if ((a1 & 0x80) != 0) {
      goto LABEL_25;
    }
    goto LABEL_36;
  }
LABEL_35:
  if ((a1 & 0x80) != 0)
  {
LABEL_25:
    v1 |= 0x20uLL;
    if ((a1 & 0x100) != 0) {
      goto LABEL_26;
    }
    goto LABEL_37;
  }
LABEL_36:
  if ((a1 & 0x100) != 0)
  {
LABEL_26:
    v1 |= 0x200uLL;
    if ((a1 & 0x400000000000) != 0) {
      goto LABEL_27;
    }
    goto LABEL_38;
  }
LABEL_37:
  if ((a1 & 0x400000000000) != 0)
  {
LABEL_27:
    v1 |= 0x400uLL;
    if ((a1 & 0x4000000000000) == 0) {
      return v1;
    }
    return v1 | 0x80000000;
  }
LABEL_38:
  if ((a1 & 0x4000000000000) != 0) {
    return v1 | 0x80000000;
  }
  return v1;
}

uint64_t sub_24DA276BC(int a1)
{
  if ((a1 & 2) != 0)
  {
    if ((a1 & 4) == 0)
    {
      if ((a1 & 0x100) == 0)
      {
        uint64_t v1 = 1;
        if ((a1 & 0x80) == 0) {
          goto LABEL_27;
        }
        goto LABEL_5;
      }
      uint64_t v2 = a1 & 0x100;
      uint64_t v1 = 1;
      goto LABEL_23;
    }
    uint64_t v1 = 3;
    if ((a1 & 0x100) != 0)
    {
LABEL_19:
      uint64_t v2 = a1 & 0x100;
LABEL_23:
      v1 |= 4uLL;
LABEL_24:
      if (v2) {
        v1 |= 0x3000uLL;
      }
      if ((a1 & 0x80) == 0) {
        goto LABEL_27;
      }
LABEL_5:
      v1 |= 0x800uLL;
      if ((a1 & 0x40) != 0) {
        goto LABEL_6;
      }
      goto LABEL_28;
    }
LABEL_21:
    uint64_t v2 = 0;
    goto LABEL_24;
  }
  if ((a1 & 4) != 0)
  {
    uint64_t v1 = 2;
    if ((a1 & 0x100) != 0) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  uint64_t v1 = 0;
  if ((a1 & 0x100) != 0) {
    goto LABEL_19;
  }
  if ((a1 & 0x80) != 0) {
    goto LABEL_5;
  }
LABEL_27:
  if ((a1 & 0x40) != 0)
  {
LABEL_6:
    v1 |= 0x400uLL;
    if (a1) {
      goto LABEL_7;
    }
    goto LABEL_29;
  }
LABEL_28:
  if (a1)
  {
LABEL_7:
    v1 |= 8uLL;
    if ((a1 & 8) != 0) {
      goto LABEL_8;
    }
    goto LABEL_30;
  }
LABEL_29:
  if ((a1 & 8) != 0)
  {
LABEL_8:
    v1 |= 0x20uLL;
    if ((a1 & 0x10) != 0) {
      goto LABEL_9;
    }
    goto LABEL_31;
  }
LABEL_30:
  if ((a1 & 0x10) != 0)
  {
LABEL_9:
    v1 |= 0x40uLL;
    if ((a1 & 0x20) != 0) {
      goto LABEL_10;
    }
    goto LABEL_32;
  }
LABEL_31:
  if ((a1 & 0x20) != 0)
  {
LABEL_10:
    v1 |= 0x80uLL;
    if ((a1 & 0x200) != 0) {
      goto LABEL_11;
    }
    goto LABEL_33;
  }
LABEL_32:
  if ((a1 & 0x200) != 0)
  {
LABEL_11:
    v1 |= 0x100uLL;
    if ((a1 & 0x400) != 0) {
      goto LABEL_12;
    }
    goto LABEL_34;
  }
LABEL_33:
  if ((a1 & 0x400) != 0)
  {
LABEL_12:
    v1 |= 0x400000000000uLL;
    if ((a1 & 0x80000000) == 0) {
      return v1;
    }
    return v1 | 0x4000000000000;
  }
LABEL_34:
  if (a1 < 0) {
    return v1 | 0x4000000000000;
  }
  return v1;
}

uint64_t sub_24DA27790(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA278E8(a1, a2, a3, (uint64_t (*)(void))sub_24DA277BC, (uint64_t (*)(void))sub_24DA27810);
}

unint64_t sub_24DA277BC()
{
  unint64_t result = qword_2698700F0;
  if (!qword_2698700F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698700F0);
  }
  return result;
}

unint64_t sub_24DA27810()
{
  unint64_t result = qword_2698700F8;
  if (!qword_2698700F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2698700F8);
  }
  return result;
}

unint64_t sub_24DA27868()
{
  unint64_t result = qword_269870100;
  if (!qword_269870100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870100);
  }
  return result;
}

uint64_t sub_24DA278BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA278E8(a1, a2, a3, (uint64_t (*)(void))sub_24DA27924, (uint64_t (*)(void))sub_24DA27978);
}

uint64_t sub_24DA278E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24DA27924()
{
  unint64_t result = qword_269870108;
  if (!qword_269870108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870108);
  }
  return result;
}

unint64_t sub_24DA27978()
{
  unint64_t result = qword_269870110;
  if (!qword_269870110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870110);
  }
  return result;
}

unint64_t sub_24DA279D0()
{
  unint64_t result = qword_269870118;
  if (!qword_269870118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870118);
  }
  return result;
}

unint64_t sub_24DA27A28()
{
  unint64_t result = qword_269870120;
  if (!qword_269870120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870120);
  }
  return result;
}

uint64_t sub_24DA27A7C()
{
  return sub_24DA27C30(&qword_269870128, &qword_269870130);
}

unint64_t sub_24DA27AA8()
{
  unint64_t result = qword_269870138;
  if (!qword_269870138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269870138);
  }
  return result;
}

uint64_t sub_24DA27AFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA27B38(a1, a2, a3, &qword_269870140, (uint64_t)&unk_24DCE3734, &qword_269870148);
}

uint64_t sub_24DA27B38(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  *(void *)(a1 + 8) = sub_24DA27BC4(a4);
  uint64_t result = sub_24DA27BC4(a6);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24DA27B88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA27B38(a1, a2, a3, &qword_269870150, (uint64_t)&unk_24DCD1024, &qword_269870158);
}

uint64_t sub_24DA27BC4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSFileProviderItemFields(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24DA27C08()
{
  return sub_24DA27C30(&qword_269870160, &qword_269870168);
}

uint64_t sub_24DA27C30(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Fields()
{
  return &type metadata for Fields;
}

uint64_t *sub_24DA27C94()
{
  if (qword_26B194080 != -1) {
    swift_once();
  }
  return &qword_26B1A22F0;
}

uint64_t *sub_24DA27CE0()
{
  if (qword_26B194088 != -1) {
    swift_once();
  }
  return &qword_26B1A22F8;
}

id sub_24DA27D2C(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_stringAtIndex_, a2);
  if (!v3)
  {
    sub_24DCC97E8();
    id v3 = (id)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }

  return v3;
}

uint64_t sub_24DA27D9C()
{
  uint64_t v0 = sub_24DCC97E8();
  uint64_t v2 = v1;
  if (v0 == sub_24DCC97E8() && v2 == v3) {
    char v4 = 0;
  }
  else {
    char v4 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_24DA27E28()
{
  uint64_t v0 = sub_24DCC97E8();
  uint64_t v2 = v1;
  if (v0 == sub_24DCC97E8() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24DA27EB4()
{
  uint64_t v0 = sub_24DCC97E8();
  uint64_t v2 = v1;
  if (v0 == sub_24DCC97E8() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_24DA27F4C()
{
  uint64_t v0 = sub_24DCC97E8();
  uint64_t v2 = v1;
  if (v0 == sub_24DCC97E8() && v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    char v6 = 1;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v6 = v5 ^ 1;
  }
  return v6 & 1;
}

uint64_t sub_24DA27FE4()
{
  uint64_t v0 = sub_24DCC97E8();
  uint64_t v2 = v1;
  if (v0 == sub_24DCC97E8() && v2 == v3) {
    char v5 = 0;
  }
  else {
    char v5 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

const char *sub_24DA28070()
{
  return "BLOB";
}

uint64_t sub_24DA28080()
{
  uint64_t v0 = sub_24DCC97B8();
  swift_bridgeObjectRelease();
  return v0;
}

id sub_24DA280B4()
{
  qword_26B1A22F0 = *MEMORY[0x263F053F0];
  return (id)qword_26B1A22F0;
}

id sub_24DA280CC()
{
  return sub_24DA2812C(&qword_26B194080, (void **)&qword_26B1A22F0);
}

id sub_24DA280F0()
{
  qword_26B1A22F8 = *MEMORY[0x263F053F8];
  return (id)qword_26B1A22F8;
}

id sub_24DA28108()
{
  return sub_24DA2812C(&qword_26B194088, (void **)&qword_26B1A22F8);
}

id sub_24DA2812C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;

  return v3;
}

uint64_t sub_24DA28178(sqlite3_value *a1)
{
  return sub_24DA28590(a1);
}

id sub_24DA28190@<X0>(void **a1@<X8>)
{
  return sub_24DA281D8(&qword_26B194080, (void **)&qword_26B1A22F0, a1);
}

id sub_24DA281B4@<X0>(void **a1@<X8>)
{
  return sub_24DA281D8(&qword_26B194088, (void **)&qword_26B1A22F8, a1);
}

id sub_24DA281D8@<X0>(void *a1@<X2>, void **a2@<X3>, void **a3@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  char v5 = *a2;
  *a3 = *a2;

  return v5;
}

uint64_t sub_24DA28230()
{
  return sub_24DCC97E8();
}

uint64_t sub_24DA28238@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_24DCC97B8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_24DA28278@<X0>(sqlite3_value *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24DA28590(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24DA282A4()
{
  return sub_24DCC9BC8();
}

uint64_t sub_24DA28320()
{
  return sub_24DCC9B58();
}

id sub_24DA2838C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 64))(v12, v11) & 1) != 0 && (a2)
  {
    uint64_t v13 = (void **)MEMORY[0x263F053F0];
LABEL_7:
    uint64_t v14 = *v13;
    return v14;
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(a4 + 72))(a3, a4) & 1) != 0 && (a2)
  {
    uint64_t v13 = (void **)MEMORY[0x263F053F8];
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  type metadata accessor for NSFileProviderItemIdentifier(0);
  if (swift_dynamicCast())
  {
    uint64_t v16 = (void *)v18[0];
    sub_24DCC97E8();
    uint64_t v17 = sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    v18[0] = 0x2F73662F70665F5FLL;
    v18[1] = 0xE800000000000000;
    (*(void (**)(uint64_t, uint64_t))(a4 + 80))(a3, a4);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  return (id)v17;
}

uint64_t sub_24DA28590(sqlite3_value *a1)
{
  uint64_t v3 = sub_24DCC9858();
  MEMORY[0x270FA5388](v3 - 8);
  char v4 = sqlite3_value_blob(a1);
  uint64_t result = sqlite3_value_bytes(a1);
  if (v4)
  {
    uint64_t v6 = sub_24D4C41B0(v4, (int)result);
    unint64_t v8 = v7;
    sub_24DCC9848();
    uint64_t v9 = sub_24DCC9808();
    if (v10)
    {
      uint64_t v11 = HIBYTE(v10) & 0xF;
      if ((v10 & 0x2000000000000000) == 0) {
        uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
      }
      if (v11)
      {
        uint64_t v1 = sub_24DCC97B8();
        sub_24D400DCC(v6, v8);
        swift_bridgeObjectRelease();
        return v1;
      }
      swift_bridgeObjectRelease();
    }
    sub_24D4A5DD0();
    swift_allocError();
    *(_OWORD *)uint64_t v12 = 0u;
    *(_OWORD *)(v12 + 16) = 0u;
    *(_OWORD *)(v12 + 32) = 0u;
    *(unsigned char *)(v12 + 48) = 9;
    swift_willThrow();
    sub_24D400DCC(v6, v8);
    return v1;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA286EC()
{
  return sub_24DA287D0(&qword_26B199E50);
}

uint64_t sub_24DA28720(void *a1)
{
  a1[1] = sub_24DA287D0(&qword_26B197E30);
  a1[2] = sub_24DA287D0((unint64_t *)&unk_26B199E58);
  a1[3] = sub_24DA287D0(&qword_26B199E38);
  uint64_t result = sub_24DA287D0((unint64_t *)&unk_26B199E40);
  a1[4] = result;
  return result;
}

uint64_t sub_24DA287D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for NSFileProviderItemIdentifier(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24DA28814()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1923D0);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_24DCC9328();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  qos_class_self();
  sub_24DCC9308();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F090], v3);
    sub_24DA28998((uint64_t)v2);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v2, v3);
  }
  return sub_24DCC9378();
}

uint64_t sub_24DA28998(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1923D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24DA289F8(dispatch_time_t a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClassUnconditional();

  dispatch_source_set_timer(v2, a1, 0xFFFFFFFFFFFFFFFFLL, 0);
}

void sub_24DA28A58(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v10 = v9;
  uint64_t v30 = a6;
  uint64_t v31 = a7;
  uint64_t v32 = a9;
  id v17 = a1;
  if (!a1) {
    id v17 = (id)fpfs_current_log();
  }
  id v18 = a1;
  id v19 = (id)fpfs_adopt_log();
  uint64_t v20 = v19;
  uint64_t v35 = 0;
  char v36 = 1;
  if ((a2 & 1) == 0)
  {
    uint64_t v33 = sub_24DCCA238();
    uint64_t v34 = v21;
    sub_24DCC9968();
    sub_24DCCA768();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9898();
    swift_bridgeObjectRelease();
    uint64_t v22 = __fp_log_fork();
    id v19 = (id)swift_release();
    uint64_t v35 = v22;
    char v36 = 0;
  }
  uint64_t v23 = MEMORY[0x270FA5388](v19);
  v26[6] = a8;
  v26[7] = v17;
  v26[8] = &v35;
  v26[9] = v10;
  v26[10] = a3;
  v26[11] = a4;
  char v27 = a5;
  uint64_t v28 = v30;
  uint64_t v29 = v31;
  MEMORY[0x270FA5388](v23);
  v26[2] = a8;
  sub_24DA290E0((uint64_t)sub_24DA29578, v24, (void (*)(id))sub_24DA295B0, (uint64_t)v26, a8, v32);
  id v25 = (id)fpfs_adopt_log();
}

uint64_t sub_24DA28C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v23 = a5;
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  uint64_t v20 = sub_24DCCA1F8();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCCA188();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v19 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v14);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a4, v10);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F138], v20);
  uint64_t v17 = sub_24DCCA228();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(a4, v10);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(a3, v14);
  return v17;
}

uint64_t sub_24DA28EC4(const void *a1)
{
  uint64_t v2 = sub_24DCC92F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24DCC9398();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _Block_copy(a1);
  sub_24DCC9368();
  v12[1] = MEMORY[0x263F8EE78];
  sub_24D3E31CC((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
  sub_24D3E3170();
  sub_24DCCA5B8();
  sub_24DCCA278();
  _Block_release(v10);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_24DA290E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(id)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v28 = a6;
  v26[1] = a4;
  char v27 = a3;
  uint64_t v30 = sub_24DCCA3F8();
  uint64_t v10 = *(void *)(v30 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v30);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v26 - v14;
  uint64_t v16 = *(void *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))((char *)v26 - v14, 1, 1, a5);
  id v32 = 0;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = a5;
  void v17[3] = v15;
  v17[4] = a1;
  v17[5] = a2;
  v17[6] = &v32;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24DA29B74;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_24D58FA9C;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24DCA4078;
  aBlock[3] = &block_descriptor_25_0;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  FPDispatchAsyncAndWait(v6, v19);
  _Block_release(v19);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    id v22 = v32;
    if (v32)
    {
      id v23 = v32;
      uint64_t v24 = v29;
      v27(v22);
      if (v24)
      {

        (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v30);
        return swift_release();
      }

      uint64_t v25 = v30;
LABEL_8:

      (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v25);
      return swift_release();
    }
    uint64_t v25 = v30;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v30);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v13, 1, a5);
    if (result != 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v28, v13, a5);
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA29430(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v14 - v11;
  a2(v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(v12, 0, 1, a5);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 40))(a1, v12, v8);
}

void sub_24DA29578()
{
  sub_24D6A8CEC(*(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned __int8 *)(v0 + 64), *(void (**)(void))(v0 + 72));
}

id sub_24DA295B0(void *a1)
{
  return a1;
}

BOOL sub_24DA295E4()
{
  uint64_t v0 = sub_24DCC9328();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_24DCC9388();
  unsigned int v7 = sub_24DCC9318();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_24DCC9388();
  unsigned int v9 = sub_24DCC9318();
  v8(v4, v0);
  return v7 < v9;
}

uint64_t sub_24DA2971C()
{
  return sub_24D3E31CC(&qword_269870170, MEMORY[0x263F8F0B0]);
}

BOOL sub_24DA29764()
{
  uint64_t v0 = sub_24DCC9328();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_24DCC9388();
  unsigned int v7 = sub_24DCC9318();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_24DCC9388();
  unsigned int v9 = sub_24DCC9318();
  v8(v4, v0);
  return v7 >= v9;
}

BOOL sub_24DA2989C()
{
  uint64_t v0 = sub_24DCC9328();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_24DCC9388();
  unsigned int v7 = sub_24DCC9318();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_24DCC9388();
  unsigned int v9 = sub_24DCC9318();
  v8(v4, v0);
  return v7 >= v9;
}

BOOL sub_24DA299D4()
{
  uint64_t v0 = sub_24DCC9328();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v11 - v5;
  sub_24DCC9388();
  unsigned int v7 = sub_24DCC9318();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v6, v0);
  sub_24DCC9388();
  unsigned int v9 = sub_24DCC9318();
  v8(v4, v0);
  return v7 < v9;
}

uint64_t sub_24DA29B0C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24DA29B4C()
{
  return swift_deallocObject();
}

uint64_t sub_24DA29B64()
{
  return swift_deallocObject();
}

uint64_t sub_24DA29B74()
{
  return sub_24DA29430(*(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 16));
}

uint64_t sub_24DA29B84()
{
  return swift_deallocObject();
}

void sub_24DA29B9C()
{
  sub_24DA58470();
  if (v0 <= 0x3F)
  {
    type metadata accessor for DBCounters();
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

id sub_24DA29D64()
{
  unint64_t v0 = (void *)sub_24DA637A8();

  return v0;
}

void sub_24DA29D90(void (*a1)(void, void, void), unint64_t a2, unint64_t a3, void (*a4)(void), void (*a5)(void))
{
  uint64_t v119 = a5;
  uint64_t v120 = a4;
  unint64_t v114 = a2;
  unint64_t v115 = a3;
  uint64_t v109 = a1;
  uint64_t v6 = *(void *)(*(void *)v5 + 584);
  uint64_t v7 = *(void *)(*(void *)v5 + 600);
  uint64_t v8 = *(void *)(*(void *)v5 + 592);
  uint64_t v108 = *(ValueMetadata **)(*(void *)v5 + 576);
  uint64_t v107 = v8;
  uint64_t v122 = type metadata accessor for UserRequest();
  uint64_t v123 = &type metadata for NSecTimestamp;
  uint64_t v124 = sub_24DCC9398();
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B194270);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v97 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v9 = *(void *)(v97 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata);
  unint64_t v11 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v101 = (void *)((char *)v93 - v11);
  MEMORY[0x270FA5388](v10);
  uint64_t v106 = (void *)((char *)v93 - v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1923D0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v100 = (char *)v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v93 - v15;
  uint64_t v17 = sub_24DCC9328();
  uint64_t v110 = *(void *)(v17 - 8);
  uint64_t v111 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v99 = (char *)v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v103 = (char *)v93 - v20;
  uint64_t v118 = sub_24DCC9398();
  uint64_t v112 = *(void *)(v118 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v118);
  uint64_t v98 = (char *)v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v102 = (char *)v93 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v105 = (void *)((char *)v93 - v11);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v117 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v26 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v28 = (char *)v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v104 = (char *)v93 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v116 = (void *)((char *)v93 - v31);
  uint64_t v32 = sub_24DCC93F8();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (void *)((char *)v93 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  char v36 = *(void **)(v5 + 64);
  *uint64_t v35 = v36;
  (*(void (**)(void *, void, uint64_t))(v33 + 104))(v35, *MEMORY[0x263F8F0E0], v32);
  id v37 = v36;
  LOBYTE(v36) = sub_24DCC9418();
  (*(void (**)(void *, uint64_t))(v33 + 8))(v35, v32);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (*(unsigned char *)(v5 + 184) == 1)
  {
    id v38 = (id)FPDomainUnavailableError();
    v120();

    return;
  }
  uint64_t v94 = v28;
  uint64_t v39 = (void *)(v5 + qword_26B1A2690);
  swift_beginAccess();
  uint64_t v40 = *v39;
  swift_bridgeObjectRetain();
  uint64_t v122 = v6;
  uint64_t v123 = v108;
  uint64_t v124 = v7;
  uint64_t v125 = v107;
  uint64_t v122 = type metadata accessor for UserRequest();
  uint64_t v123 = &type metadata for NSecTimestamp;
  uint64_t v124 = v118;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B190988);
  uint64_t v41 = swift_getTupleTypeMetadata();
  uint64_t v42 = sub_24DCC9D48();
  uint64_t v43 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  uint64_t v44 = v109;
  MEMORY[0x2533276F0](&v122, v109, v40, AssociatedTypeWitness, v42, v43);
  swift_bridgeObjectRelease();
  uint64_t v45 = v122;
  swift_bridgeObjectRelease();
  unint64_t v46 = *(void (**)(char *, void, uint64_t))(v117 + 16);
  uint64_t v96 = AssociatedTypeWitness;
  uint64_t v95 = v39;
  uint64_t v108 = (ValueMetadata *)v42;
  uint64_t v107 = v43;
  if (!v45)
  {
    v46(v94, v44, AssociatedTypeWitness);
    sub_24DCCAD88();
    swift_allocObject();
    uint64_t v50 = sub_24DCC9C58();
    uint64_t v116 = v51;
    uint64_t v117 = v50;
    unint64_t v52 = v114;
    sub_24D40B3C8(v114);
    qos_class_self();
    uint64_t v53 = (uint64_t)v100;
    sub_24DCC9308();
    uint64_t v55 = v110;
    uint64_t v54 = v111;
    int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v53, 1, v111);
    v93[1] = v41;
    if (v56 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v55 + 104))(v99, *MEMORY[0x263F8F090], v54);
      sub_24D415F74(v53, qword_26B1923D0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v99, v53, v54);
    }
    unint64_t v80 = v98;
    sub_24DCC9378();
    uint64_t v81 = TupleTypeMetadata;
    id v82 = v101;
    long long v83 = (char *)v101 + *(int *)(TupleTypeMetadata + 64);
    uint64_t v84 = (void (**)(void))((char *)v101 + *(int *)(TupleTypeMetadata + 80));
    unint64_t v85 = v115;
    *uint64_t v101 = v52;
    v82[1] = v85;
    uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
    uint64_t v87 = v118;
    v86(v83, v80, v118);
    uint64_t v89 = v119;
    uint64_t v88 = v120;
    *uint64_t v84 = v120;
    v84[1] = v89;
    uint64_t v90 = v116;
    *uint64_t v116 = v52;
    v90[1] = v85;
    v86((char *)v90 + *(int *)(v81 + 64), v83, v87);
    uint64_t v91 = (unint64_t *)((char *)v90 + *(int *)(v81 + 80));
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = v88;
    *(void *)(v92 + 24) = v89;
    *uint64_t v91 = sub_24DA6BA7C;
    v91[1] = v92;
    uint64_t v121 = sub_24D785484(v117);
    swift_beginAccess();
    sub_24DCC9638();
    swift_retain();
    sub_24DCC9668();
    goto LABEL_14;
  }
  uint64_t v109 = (void (*)(void, void, void))v46;
  uint64_t v101 = (unint64_t *)(v117 + 16);
  v46((char *)v116, v44, AssociatedTypeWitness);
  unint64_t v47 = v114;
  sub_24D40B3C8(v114);
  qos_class_self();
  sub_24DCC9308();
  uint64_t v49 = v110;
  uint64_t v48 = v111;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v16, 1, v111) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v49 + 104))(v103, *MEMORY[0x263F8F090], v48);
    sub_24D415F74((uint64_t)v16, qword_26B1923D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v103, v16, v48);
  }
  char v57 = v120;
  uint64_t v58 = v106;
  uint64_t v59 = v102;
  sub_24DCC9378();
  uint64_t v61 = v112;
  uint64_t v60 = TupleTypeMetadata;
  id v62 = (char *)v58 + *(int *)(TupleTypeMetadata + 64);
  uint64_t v63 = (void (**)(void))((char *)v58 + *(int *)(TupleTypeMetadata + 80));
  unint64_t v64 = v47;
  unint64_t v65 = v115;
  *uint64_t v58 = v47;
  v58[1] = v65;
  id v66 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  uint64_t v67 = v118;
  v66(v62, v59, v118);
  id v68 = v119;
  *uint64_t v63 = v57;
  v63[1] = v68;
  uint64_t v69 = v105;
  *uint64_t v105 = v64;
  v69[1] = v65;
  uint64_t v70 = v69;
  v66((char *)v69 + *(int *)(v60 + 64), v62, v67);
  uint64_t v71 = (unint64_t *)((char *)v70 + *(int *)(v60 + 80));
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = v57;
  *(void *)(v72 + 24) = v68;
  *uint64_t v71 = sub_24DA6BA7C;
  v71[1] = v72;
  swift_beginAccess();
  uint64_t v73 = v104;
  unint64_t v74 = v116;
  uint64_t v75 = v96;
  v109(v104, v116, v96);
  swift_retain();
  sub_24DCC9618();
  uint64_t v76 = sub_24DCC9628();
  if (!*v77)
  {
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v78 = (void (*)(uint64_t *, void))v76;
  sub_24DCC9D08();
  v78(&v122, 0);
  uint64_t v79 = *(void (**)(char *, uint64_t))(v117 + 8);
  v79(v73, v75);
  v79((char *)v74, v75);
LABEL_14:
  swift_endAccess();
}

void sub_24DA2A928(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v88 = a7;
  uint64_t v89 = a8;
  uint64_t v85 = a6;
  uint64_t v81 = a5;
  int v73 = a4;
  uint64_t v79 = *v10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18F680);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v87 = (uint64_t)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC8FC8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v72 = (uint64_t (*)(uint64_t))((char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v70 - v23;
  uint64_t v25 = type metadata accessor for Signpost(0);
  uint64_t v74 = *(void *)(v25 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v77 = (uint64_t)&v70 - ((unint64_t)(v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v86 = (uint64_t)&v70 - v28;
  uint64_t v90 = v10;
  id v80 = (id)fpfs_adopt_log();
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v78 = a10;
  uint64_t v76 = a9;
  uint64_t v29 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v24, 1, 1, v16);
  strcpy((char *)v91, "async batch ");
  BYTE5(v91[1]) = 0;
  HIWORD(v91[1]) = -5120;
  uint64_t v82 = a1;
  uint64_t v83 = a2;
  int v84 = a3;
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v30 = v91[1];
  uint64_t v71 = v91[0];
  sub_24D415FD0((uint64_t)v24, (uint64_t)v22, &qword_26B1990B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
  {
    id v31 = v29;
    uint64_t v32 = v72;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v22, &qword_26B1990B0);
  }
  else
  {
    uint64_t v32 = v72;
    (*(void (**)(uint64_t (*)(uint64_t), char *, uint64_t))(v17 + 32))(v72, v22, v16);
  }
  v73 &= 1u;
  uint64_t v33 = v86;
  (*(void (**)(uint64_t, uint64_t (*)(uint64_t), uint64_t))(v17 + 16))(v86, v32, v16);
  *(void *)(v33 + *(int *)(v25 + 20)) = v29;
  uint64_t v34 = v33 + *(int *)(v25 + 24);
  *(void *)uint64_t v34 = "DB queue wait";
  *(void *)(v34 + 8) = 13;
  *(unsigned char *)(v34 + 16) = 2;
  id v35 = v29;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_24DCCECE0;
  *(void *)(v36 + 56) = MEMORY[0x263F8D310];
  *(void *)(v36 + 64) = sub_24D3F7B98();
  *(void *)(v36 + 32) = v71;
  *(void *)(v36 + 40) = v30;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(v17 + 8))(v32, v16);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v24, &qword_26B1990B0);
  uint64_t v37 = v77;
  sub_24DA6996C(v33, v77, type metadata accessor for Signpost);
  uint64_t v38 = *(unsigned __int8 *)(v74 + 80);
  uint64_t v39 = (v38 + 16) & ~v38;
  uint64_t v40 = v75 + 7;
  unint64_t v41 = (unint64_t)&v75[v39 + 7] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  uint64_t v72 = type metadata accessor for Signpost;
  sub_24DA699D4(v37, v42 + v39, type metadata accessor for Signpost);
  uint64_t v43 = (void *)(v42 + v41);
  uint64_t v44 = v89;
  *uint64_t v43 = v88;
  v43[1] = v44;
  uint64_t v45 = (char *)v90[8];
  uint64_t v74 = v90[25];
  uint64_t v75 = v45;
  uint64_t v46 = sub_24DCC9398();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v87, 1, 1, v46);
  sub_24DA6996C(v33, v37, type metadata accessor for Signpost);
  uint64_t v47 = (v38 + 48) & ~v38;
  unint64_t v48 = (unint64_t)&v40[v47] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v50 = (v49 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v50 + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = (v51 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = (v52 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = swift_allocObject();
  uint64_t v55 = v79;
  *(void *)(v54 + 16) = *(void *)(v79 + 576);
  *(_OWORD *)(v54 + 24) = *(_OWORD *)(v55 + 584);
  *(void *)(v54 + 40) = *(void *)(v55 + 600);
  sub_24DA699D4(v37, v54 + v47, v72);
  int v56 = (void *)(v54 + v48);
  uint64_t v57 = v85;
  *int v56 = v81;
  v56[1] = v57;
  *(void *)(v54 + v49) = v90;
  unint64_t v58 = v54 + v50;
  uint64_t v59 = v83;
  *(void *)unint64_t v58 = v82;
  *(void *)(v58 + 8) = v59;
  *(unsigned char *)(v58 + 16) = v84;
  *(unsigned char *)(v58 + 17) = v73;
  uint64_t v60 = (void *)(v54 + v51);
  uint64_t v61 = v89;
  *uint64_t v60 = v88;
  v60[1] = v61;
  id v62 = (void *)(v54 + v52);
  uint64_t v63 = v78;
  *id v62 = v76;
  v62[1] = v63;
  unint64_t v64 = (void *)(v54 + v53);
  *unint64_t v64 = sub_24DA67B4C;
  v64[1] = v42;
  unint64_t v65 = (void *)swift_allocObject();
  v65[2] = sub_24DA67B4C;
  v65[3] = v42;
  v65[4] = v74;
  swift_retain_n();
  swift_retain_n();
  id v66 = v75;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v67 = v87;
  sub_24D3FD33C(v66, v87, sub_24D5DC2E0, v65, (uint64_t)sub_24DA68094, v54);
  swift_release();

  swift_release();
  swift_release();
  sub_24D415F74(v67, &qword_26B18F680);
  sub_24DA684C4(v86, type metadata accessor for Signpost);
  id v68 = v80;
  id v69 = (id)fpfs_adopt_log();
}

void sub_24DA2B11C(void (*a1)(void, void, void), unint64_t a2, unint64_t a3, void (*a4)(void), void (*a5)(void))
{
  uint64_t v119 = a5;
  uint64_t v120 = a4;
  unint64_t v114 = a2;
  unint64_t v115 = a3;
  uint64_t v109 = a1;
  uint64_t v6 = *(void *)(*(void *)v5 + 576);
  uint64_t v7 = *(void *)(*(void *)v5 + 592);
  uint64_t v8 = *(void *)(*(void *)v5 + 600);
  uint64_t v108 = *(ValueMetadata **)(*(void *)v5 + 584);
  uint64_t v107 = v8;
  uint64_t v122 = type metadata accessor for UserRequest();
  uint64_t v123 = &type metadata for NSecTimestamp;
  uint64_t v124 = sub_24DCC9398();
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B194270);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v97 = *(void *)(TupleTypeMetadata - 8);
  uint64_t v9 = *(void *)(v97 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](TupleTypeMetadata);
  unint64_t v11 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v101 = (void *)((char *)v93 - v11);
  MEMORY[0x270FA5388](v10);
  uint64_t v106 = (void *)((char *)v93 - v11);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1923D0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v100 = (char *)v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v93 - v15;
  uint64_t v17 = sub_24DCC9328();
  uint64_t v110 = *(void *)(v17 - 8);
  uint64_t v111 = v17;
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v99 = (char *)v93 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v103 = (char *)v93 - v20;
  uint64_t v118 = sub_24DCC9398();
  uint64_t v112 = *(void *)(v118 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v118);
  uint64_t v98 = (char *)v93 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v102 = (char *)v93 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v105 = (void *)((char *)v93 - v11);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v117 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v26 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v28 = (char *)v93 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v104 = (char *)v93 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v116 = (void *)((char *)v93 - v31);
  uint64_t v32 = sub_24DCC93F8();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  id v35 = (void *)((char *)v93 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v36 = *(void **)(v5 + 64);
  *id v35 = v36;
  (*(void (**)(void *, void, uint64_t))(v33 + 104))(v35, *MEMORY[0x263F8F0E0], v32);
  id v37 = v36;
  LOBYTE(v36) = sub_24DCC9418();
  (*(void (**)(void *, uint64_t))(v33 + 8))(v35, v32);
  if ((v36 & 1) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (*(unsigned char *)(v5 + 184) == 1)
  {
    id v38 = (id)FPDomainUnavailableError();
    v120();

    return;
  }
  uint64_t v94 = v28;
  uint64_t v39 = (void *)(v5 + qword_26B1A2698);
  swift_beginAccess();
  uint64_t v40 = *v39;
  swift_bridgeObjectRetain();
  uint64_t v122 = v6;
  uint64_t v123 = v108;
  uint64_t v124 = v7;
  uint64_t v125 = v107;
  uint64_t v122 = type metadata accessor for UserRequest();
  uint64_t v123 = &type metadata for NSecTimestamp;
  uint64_t v124 = v118;
  uint64_t v125 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B190988);
  uint64_t v41 = swift_getTupleTypeMetadata();
  uint64_t v42 = sub_24DCC9D48();
  uint64_t v43 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  uint64_t v44 = v109;
  MEMORY[0x2533276F0](&v122, v109, v40, AssociatedTypeWitness, v42, v43);
  swift_bridgeObjectRelease();
  uint64_t v45 = v122;
  swift_bridgeObjectRelease();
  uint64_t v46 = *(void (**)(char *, void, uint64_t))(v117 + 16);
  uint64_t v96 = AssociatedTypeWitness;
  uint64_t v95 = v39;
  uint64_t v108 = (ValueMetadata *)v42;
  uint64_t v107 = v43;
  if (!v45)
  {
    v46(v94, v44, AssociatedTypeWitness);
    sub_24DCCAD88();
    swift_allocObject();
    uint64_t v50 = sub_24DCC9C58();
    uint64_t v116 = v51;
    uint64_t v117 = v50;
    unint64_t v52 = v114;
    sub_24D40B3C8(v114);
    qos_class_self();
    uint64_t v53 = (uint64_t)v100;
    sub_24DCC9308();
    uint64_t v55 = v110;
    uint64_t v54 = v111;
    int v56 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v53, 1, v111);
    v93[1] = v41;
    if (v56 == 1)
    {
      (*(void (**)(char *, void, uint64_t))(v55 + 104))(v99, *MEMORY[0x263F8F090], v54);
      sub_24D415F74(v53, qword_26B1923D0);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v99, v53, v54);
    }
    id v80 = v98;
    sub_24DCC9378();
    uint64_t v81 = TupleTypeMetadata;
    uint64_t v82 = v101;
    uint64_t v83 = (char *)v101 + *(int *)(TupleTypeMetadata + 64);
    int v84 = (void (**)(void))((char *)v101 + *(int *)(TupleTypeMetadata + 80));
    unint64_t v85 = v115;
    *uint64_t v101 = v52;
    v82[1] = v85;
    uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v112 + 32);
    uint64_t v87 = v118;
    v86(v83, v80, v118);
    uint64_t v89 = v119;
    uint64_t v88 = v120;
    *int v84 = v120;
    v84[1] = v89;
    uint64_t v90 = v116;
    *uint64_t v116 = v52;
    v90[1] = v85;
    v86((char *)v90 + *(int *)(v81 + 64), v83, v87);
    uint64_t v91 = (unint64_t *)((char *)v90 + *(int *)(v81 + 80));
    uint64_t v92 = swift_allocObject();
    *(void *)(v92 + 16) = v88;
    *(void *)(v92 + 24) = v89;
    *uint64_t v91 = sub_24DA6BA7C;
    v91[1] = v92;
    uint64_t v121 = sub_24D785484(v117);
    swift_beginAccess();
    sub_24DCC9638();
    swift_retain();
    sub_24DCC9668();
    goto LABEL_14;
  }
  uint64_t v109 = (void (*)(void, void, void))v46;
  uint64_t v101 = (unint64_t *)(v117 + 16);
  v46((char *)v116, v44, AssociatedTypeWitness);
  unint64_t v47 = v114;
  sub_24D40B3C8(v114);
  qos_class_self();
  sub_24DCC9308();
  uint64_t v49 = v110;
  uint64_t v48 = v111;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v16, 1, v111) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v49 + 104))(v103, *MEMORY[0x263F8F090], v48);
    sub_24D415F74((uint64_t)v16, qword_26B1923D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v103, v16, v48);
  }
  uint64_t v57 = v120;
  unint64_t v58 = v106;
  uint64_t v59 = v102;
  sub_24DCC9378();
  uint64_t v61 = v112;
  uint64_t v60 = TupleTypeMetadata;
  id v62 = (char *)v58 + *(int *)(TupleTypeMetadata + 64);
  uint64_t v63 = (void (**)(void))((char *)v58 + *(int *)(TupleTypeMetadata + 80));
  unint64_t v64 = v47;
  unint64_t v65 = v115;
  *unint64_t v58 = v47;
  v58[1] = v65;
  id v66 = *(void (**)(char *, char *, uint64_t))(v61 + 32);
  uint64_t v67 = v118;
  v66(v62, v59, v118);
  id v68 = v119;
  *uint64_t v63 = v57;
  v63[1] = v68;
  id v69 = v105;
  *uint64_t v105 = v64;
  v69[1] = v65;
  uint64_t v70 = v69;
  v66((char *)v69 + *(int *)(v60 + 64), v62, v67);
  uint64_t v71 = (unint64_t *)((char *)v70 + *(int *)(v60 + 80));
  uint64_t v72 = swift_allocObject();
  *(void *)(v72 + 16) = v57;
  *(void *)(v72 + 24) = v68;
  *uint64_t v71 = sub_24DA6BA7C;
  v71[1] = v72;
  swift_beginAccess();
  int v73 = v104;
  uint64_t v74 = v116;
  uint64_t v75 = v96;
  v109(v104, v116, v96);
  swift_retain();
  sub_24DCC9618();
  uint64_t v76 = sub_24DCC9628();
  if (!*v77)
  {
LABEL_17:
    __break(1u);
    return;
  }
  uint64_t v78 = (void (*)(uint64_t *, void))v76;
  sub_24DCC9D08();
  v78(&v122, 0);
  uint64_t v79 = *(void (**)(char *, uint64_t))(v117 + 8);
  v79(v73, v75);
  v79((char *)v74, v75);
LABEL_14:
  swift_endAccess();
}

uint64_t sub_24DA2BCB0(uint64_t a1, void (*a2)(void))
{
  uint64_t v347 = a2;
  uint64_t v352 = a1;
  uint64_t v3 = (void *)*v2;
  uint64_t v314 = sub_24DCC8CE8();
  uint64_t v313 = *(void *)(v314 - 8);
  MEMORY[0x270FA5388](v314);
  uint64_t v312 = (char *)&v290 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v3[72];
  uint64_t v6 = v3[73];
  uint64_t v7 = v3[74];
  uint64_t v8 = v3[75];
  uint64_t v371 = (void (*)(void, void, void))v5;
  uint64_t v372 = v6;
  uint64_t v373 = v7;
  uint64_t v374 = v8;
  uint64_t v350 = type metadata accessor for ConcreteDatabase.MaterializationRequest();
  uint64_t v330 = sub_24DCCA3F8();
  uint64_t v329 = *(void *)(v330 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v330);
  uint64_t v311 = (char *)&v290 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  int v320 = (char *)&v290 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v321 = (char *)&v290 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v319 = (void (*)(void))((char *)&v290 - v16);
  MEMORY[0x270FA5388](v15);
  uint64_t v335 = (char *)&v290 - v17;
  uint64_t v332 = sub_24DCC9078();
  uint64_t v331 = *(void (***)(char *, uint64_t))(v332 - 8);
  MEMORY[0x270FA5388](v332);
  uint64_t v336 = (char *)&v290 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v371 = (void (*)(void, void, void))v5;
  uint64_t v372 = v6;
  uint64_t v354 = v6;
  uint64_t v373 = v7;
  uint64_t v374 = v8;
  uint64_t v355 = (unsigned __int8 *)v8;
  uint64_t v371 = (void (*)(void, void, void))type metadata accessor for UserRequest();
  uint64_t v346 = sub_24D3FB6F8(255, &qword_26B193FD0);
  uint64_t v372 = v346;
  uint64_t v345 = sub_24DCC9398();
  uint64_t v373 = v345;
  uint64_t v374 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B194270);
  uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
  uint64_t v360 = *(uint64_t (**)())(TupleTypeMetadata - 8);
  uint64_t v20 = MEMORY[0x270FA5388](TupleTypeMetadata);
  uint64_t v343 = (char *)&v290 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v353 = (unsigned __int8 *)&v290 - v23;
  MEMORY[0x270FA5388](v22);
  unint64_t v348 = (int64_t *)((char *)&v290 - v24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v27 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v309 = (char *)&v290 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v322 = (char *)&v290 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v323 = (void (**)(void))((char *)&v290 - v32);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v290 - v33;
  uint64_t v362 = TupleTypeMetadata;
  uint64_t v361 = sub_24DCCA3F8();
  uint64_t v338 = *(void *)(v361 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v361);
  uint64_t v307 = (char *)&v290 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v344 = (char *)&v290 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v351 = (char *)&v290 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v308 = (char *)&v290 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v310 = (char *)&v290 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v342 = (int64_t *)((char *)&v290 - v46);
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  unint64_t v341 = (char *)&v290 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v337 = (char *)&v290 - v50;
  MEMORY[0x270FA5388](v49);
  unint64_t v52 = (id *)((char *)&v290 - v51);
  uint64_t v349 = v26;
  uint64_t v54 = *(void (**)(void, void, void))(v26 + 16);
  uint64_t v53 = v26 + 16;
  uint64_t v324 = v54;
  v54(v34, v352, AssociatedTypeWitness);
  uint64_t v325 = v2;
  uint64_t v359 = sub_24DA3C5C4();
  uint64_t v356 = v7;
  uint64_t v357 = (void (*)(void, void, void))v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v56 = *(void *)(AssociatedConformanceWitness + 32);
  uint64_t v340 = AssociatedTypeWitness;
  uint64_t v57 = v350;
  uint64_t v58 = sub_24DCC9638();
  uint64_t v363 = (uint64_t)v34;
  uint64_t v358 = (void (*)(uint64_t *, void))sub_24DCC9648();
  uint64_t v59 = *(void *)(v57 - 8);
  uint64_t v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48);
  if (v60(v61, 1, v57))
  {
    v358(&v369, 0);
    (*(void (**)(uint64_t, uint64_t))(v349 + 8))(v363, v340);
    ((void (*)(void, void))v359)(&v371, 0);
    (*((void (**)(id *, uint64_t, uint64_t, uint64_t))v360 + 7))(v52, 1, 1, v362);
    uint64_t v62 = v361;
    uint64_t v63 = v338;
    return (*(uint64_t (**)(id *, uint64_t))(v63 + 8))(v52, v62);
  }
  id v334 = v52;
  uint64_t v317 = (_OWORD *)AssociatedConformanceWitness;
  uint64_t v318 = v56;
  uint64_t v300 = v59;
  uint64_t v302 = v53;
  uint64_t v297 = v58;
  uint64_t v303 = v60;
  uint64_t v304 = (unsigned __int8 *)(v59 + 48);
  uint64_t v364 = (uint64_t)v357;
  uint64_t v365 = v354;
  uint64_t v366 = v356;
  uint64_t v367 = (uint64_t)v355;
  uint64_t v368 = v347;
  uint64_t v364 = type metadata accessor for UserRequest();
  uint64_t v365 = v346;
  uint64_t v366 = v345;
  uint64_t v367 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B190988);
  uint64_t v64 = swift_getTupleTypeMetadata();
  uint64_t v65 = sub_24DCC9638();
  id v66 = v351;
  sub_24DCC9598();
  v358(&v369, 0);
  uint64_t v67 = v349 + 8;
  uint64_t v68 = v340;
  uint64_t v299 = *(void (**)(uint64_t, uint64_t))(v349 + 8);
  v299(v363, v340);
  ((void (*)(void, void))v359)(&v371, 0);
  id v69 = v360;
  uint64_t v70 = v66;
  uint64_t v71 = v362;
  uint64_t v358 = (void (*)(uint64_t *, void))*((void *)v360 + 6);
  uint64_t v359 = (uint64_t (*)())((char *)v360 + 48);
  int v72 = ((uint64_t (*)(char *, uint64_t, uint64_t))v358)(v70, 1, v362);
  uint64_t v349 = v67;
  uint64_t v296 = v65;
  if (v72 == 1)
  {
    int v73 = (char *)*((void *)v69 + 7);
    uint64_t v74 = v337;
    uint64_t v75 = v337;
    uint64_t v76 = 1;
  }
  else
  {
    uint64_t v77 = *(int *)(v71 + 64);
    uint64_t v78 = v351;
    uint64_t v79 = &v351[v77];
    uint64_t v363 = *(int *)(v71 + 80);
    uint64_t v80 = *((void *)v351 + 1);
    uint64_t v81 = v348;
    *unint64_t v348 = *(void *)v351;
    v81[1] = v80;
    uint64_t v82 = v64;
    uint64_t v83 = (char *)v81 + v77;
    uint64_t v84 = sub_24DCC9398();
    uint64_t v85 = v68;
    uint64_t v86 = *(void (**)(char *, char *, uint64_t))(*(void *)(v84 - 8) + 32);
    v86(v83, v79, v84);
    uint64_t v87 = swift_allocObject();
    uint64_t v88 = v362;
    *(_OWORD *)(v87 + 16) = *(_OWORD *)&v78[v363];
    uint64_t v89 = *v81;
    uint64_t v90 = v81[1];
    uint64_t v91 = v337;
    uint64_t v92 = &v337[*(int *)(v88 + 64)];
    uint64_t v93 = (uint64_t (**)(uint64_t))&v337[*(int *)(v362 + 80)];
    *(void *)uint64_t v337 = v89;
    *((void *)v91 + 1) = v90;
    uint64_t v94 = v83;
    uint64_t v64 = v82;
    v86(v92, v94, v84);
    uint64_t v68 = v85;
    uint64_t v74 = v91;
    uint64_t v71 = v362;
    *uint64_t v93 = sub_24DA6BB3C;
    v93[1] = (uint64_t (*)(uint64_t))v87;
    int v73 = (char *)*((void *)v360 + 7);
    uint64_t v75 = v74;
    uint64_t v76 = 0;
  }
  uint64_t v351 = v73;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v73)(v75, v76, 1, v71);
  uint64_t v95 = v352;
  uint64_t v62 = v361;
  uint64_t v63 = v338;
  unint64_t v52 = v334;
  uint64_t v96 = *(void (**)(void, void, void))(v338 + 32);
  uint64_t v97 = v334;
  id v334 = (id *)(v338 + 32);
  id v333 = (void (*)(char *, void *, uint64_t))v96;
  v96(v97, v74, v361);
  if (((unsigned int (*)(id *, uint64_t, uint64_t))v358)(v52, 1, v71) == 1) {
    return (*(uint64_t (**)(id *, uint64_t))(v63 + 8))(v52, v62);
  }
  uint64_t v346 = v64;
  unint64_t v99 = (unint64_t)*v52;

  uint64_t v100 = (char *)v52 + *(int *)(v71 + 64);
  uint64_t v101 = (void (**)(void))((char *)v52 + *(int *)(v71 + 80));
  uint64_t v103 = *v101;
  uint64_t v102 = v101[1];
  uint64_t v347 = v103;
  uint64_t v298 = v102;
  uint64_t v104 = sub_24DCC9398();
  uint64_t v337 = *(char **)(v104 - 8);
  uint64_t v105 = (void (*)(void))*((void *)v337 + 1);
  uint64_t v363 = v104;
  long long v328 = v337 + 8;
  long long v327 = (void (*)(void (*)(void), uint64_t))v105;
  v105(v100);
  id v106 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  id v107 = (id)fpfs_current_or_default_log();
  uint64_t v108 = v336;
  sub_24DCC9088();
  uint64_t v109 = v323;
  uint64_t v110 = (void (*)(char *, void (**)(void), uint64_t))v324;
  v324(v323, v95, v68);
  sub_24D40B3C8(v99);
  sub_24D40B3C8(v99);
  id v111 = v106;
  uint64_t v112 = sub_24DCC9068();
  os_log_type_t v113 = sub_24DCCA118();
  LODWORD(v345) = v113;
  BOOL v114 = os_log_type_enabled(v112, v113);
  unint64_t v326 = v99;
  uint64_t v295 = v111;
  if (v114)
  {
    unint64_t v115 = v111;
    uint64_t v116 = swift_slowAlloc();
    uint64_t v117 = (void *)swift_slowAlloc();
    uint64_t v315 = v117;
    uint64_t v316 = (void (*)(void, void, void))swift_slowAlloc();
    uint64_t v371 = v316;
    *(_DWORD *)uint64_t v116 = 138412802;
    uint64_t v118 = v109;
    id v119 = objc_msgSend(v115, sel_enter);
    os_log_t v306 = v112;
    uint64_t v120 = v68;
    id v121 = v119;
    uint64_t v369 = (uint64_t)v119;
    long long v305 = (unsigned __int8 *)&v370;
    sub_24DCCA428();
    *uint64_t v117 = v121;

    *(_WORD *)(v116 + 12) = 2080;
    uint64_t v122 = v322;
    v110(v322, v118, v120);
    uint64_t v123 = (void (*)(char *, uint64_t))v299;
    v299((uint64_t)v118, v120);
    uint64_t v124 = sub_24DCCAD78();
    unint64_t v126 = v125;
    v123(v122, v120);
    uint64_t v369 = sub_24D418FB4(v124, v126, (uint64_t *)&v371);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    *(_WORD *)(v116 + 22) = 2080;
    unint64_t v127 = v326;
    unint64_t v128 = sub_24DA1AC70(v326, (uint64_t)v357, v354, v356, (uint64_t)v355);
    unint64_t v130 = v129;
    sub_24D44E05C(v127);
    uint64_t v131 = v352;
    uint64_t v369 = sub_24D418FB4(v128, v130, (uint64_t *)&v371);
    sub_24DCCA428();
    uint64_t v68 = v120;
    swift_bridgeObjectRelease();
    sub_24D44E05C(v127);
    os_log_t v132 = v306;
    _os_log_impl(&dword_24D3D0000, v306, (os_log_type_t)v345, "%@ 🛑  cancelling request for %s: %s", (uint8_t *)v116, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    uint64_t v133 = v315;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v133, -1, -1);
    int v134 = v316;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v134, -1, -1);
    MEMORY[0x25332B030](v116, -1, -1);

    v331[1](v336, v332);
    uint64_t v135 = v330;
    uint64_t v136 = v325;
  }
  else
  {
    sub_24D44E05C(v99);
    v299((uint64_t)v109, v68);

    sub_24D44E05C(v99);
    v331[1](v108, v332);
    uint64_t v135 = v330;
    uint64_t v136 = v325;
    uint64_t v131 = v95;
  }
  uint64_t v137 = v318;
  sub_24D472A28();
  uint64_t v138 = (void *)swift_allocError();
  *unint64_t v139 = 0;
  v347();

  uint64_t v140 = (void *)((char *)v136 + qword_26B1A2680);
  swift_beginAccess();
  unint64_t v293 = v140;
  uint64_t v141 = *v140;
  swift_bridgeObjectRetain();
  uint64_t v142 = v335;
  uint64_t v143 = v68;
  uint64_t v144 = v350;
  MEMORY[0x2533276F0](v131, v141, v143, v350, v137);
  swift_bridgeObjectRelease();
  uint64_t v145 = v304;
  uint64_t v146 = v136;
  unint64_t v147 = (unsigned int (*)(unsigned __int8 *, uint64_t, uint64_t))v303;
  if (v303(v142, 1, v144))
  {
    uint64_t v148 = *(void (**)(char *, uint64_t))(v329 + 8);
    v148(v142, v135);
LABEL_19:
    unint64_t v158 = v326;
    uint64_t v159 = sub_24DA1A7B0(v326);
    if (v159)
    {
      id v160 = v159;
      unsigned __int8 v161 = objc_msgSend(v159, sel_selectedForMaterialization);

      if ((v161 & 1) == 0) {
        goto LABEL_68;
      }
    }
    uint64_t v145 = v355;
    char v162 = sub_24DA1A7B0(v158);
    if (v162)
    {
      uint64_t v163 = v162;
      id v164 = objc_msgSend(v162, sel_requestedExtent);

      uint64_t v145 = v355;
      if (v164 == (id)-1)
      {
LABEL_68:
        long long v238 = v295;
        sub_24DA5FD24(v295, MEMORY[0x263F90278]);
        swift_release();

        return sub_24D44E05C(v158);
      }
    }
    unint64_t v292 = (void (*)(unsigned __int8 *, uint64_t))v148;
    uint64_t v165 = sub_24DA1A7B0(v158);
    if (!v165) {
      goto LABEL_105;
    }
    uint64_t v166 = v165;
    uint64_t v167 = (char *)objc_msgSend(v165, sel_requestedExtent);

    uint64_t v168 = sub_24DA1A7B0(v158);
    if (!v168)
    {
LABEL_106:
      __break(1u);
LABEL_107:
      __break(1u);
LABEL_108:
      v292(v145, v330);
      goto LABEL_111;
    }
    uint64_t v169 = v168;
    objc_msgSend(v168, sel_requestedExtent);
    uint64_t v171 = v170;

    BOOL v172 = __OFADD__(v167, v171);
    long long v305 = (unsigned __int8 *)&v167[v171];
    uint64_t v173 = v362;
    id v174 = v320;
    uint64_t v175 = v318;
    uint64_t v176 = v352;
    if (!v172)
    {
      uint64_t v177 = *v293;
      swift_bridgeObjectRetain();
      unint64_t v178 = v321;
      uint64_t v179 = v176;
      uint64_t v180 = v350;
      MEMORY[0x2533276F0](v179, v177, v340, v350, v175);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, char *, uint64_t))(v329 + 16))(v174, v178, v330);
      unsigned int v181 = v303(v174, 1, v180);
      uint64_t v182 = (char *)v348;
      if (v181 != 1)
      {
        uint64_t v183 = *(void *)&v174[*(int *)(v180 + 56)];
        uint64_t v184 = *(void (**)(void, void))(v300 + 8);
        v300 += 8;
        swift_bridgeObjectRetain();
        size_t v291 = (void (*)(unsigned __int8 *, uint64_t))v184;
        v184(v174, v180);
        uint64_t v185 = nullsub_1(v183);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v186 = 0;
        uint64_t v187 = *(void *)(v185 + 64);
        uint64_t v294 = v185 + 64;
        uint64_t v315 = (void *)v185;
        uint64_t v188 = 1 << *(unsigned char *)(v185 + 32);
        uint64_t v189 = -1;
        if (v188 < 64) {
          uint64_t v189 = ~(-1 << v188);
        }
        unint64_t v190 = v189 & v187;
        os_log_t v306 = (os_log_t)((char *)v360 + 16);
        uint64_t v336 = v337 + 32;
        uint64_t v323 = (void (**)(void))(v337 + 16);
        uint64_t v322 = (char *)v360 + 8;
        int64_t v301 = (unint64_t)(v188 + 63) >> 6;
        int64_t v290 = v301 - 1;
        uint64_t v191 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v351;
        char v192 = v344;
        uint64_t v335 = (char *)v360 + 56;
        while (1)
        {
          if (v190)
          {
            uint64_t v345 = (v190 - 1) & v190;
            uint64_t v346 = v186;
            unint64_t v193 = __clz(__rbit64(v190)) | (v186 << 6);
            goto LABEL_34;
          }
          int64_t v195 = v186 + 1;
          if (__OFADD__(v186, 1)) {
            goto LABEL_94;
          }
          if (v195 >= v301) {
            break;
          }
          unint64_t v196 = *(void *)(v294 + 8 * v195);
          if (v196) {
            goto LABEL_38;
          }
          int64_t v237 = v186 + 2;
          if (v186 + 2 >= v301)
          {
            uint64_t v345 = 0;
            uint64_t v194 = 1;
LABEL_55:
            uint64_t v346 = v195;
          }
          else
          {
            unint64_t v196 = *(void *)(v294 + 8 * v237);
            if (v196) {
              goto LABEL_53;
            }
            if (v186 + 3 >= v301)
            {
              uint64_t v346 = v186 + 2;
              goto LABEL_40;
            }
            unint64_t v196 = *(void *)(v294 + 8 * (v186 + 3));
            if (v196)
            {
              int64_t v195 = v186 + 3;
              goto LABEL_38;
            }
            int64_t v237 = v186 + 4;
            if (v186 + 4 < v301)
            {
              unint64_t v196 = *(void *)(v294 + 8 * v237);
              if (!v196)
              {
                while (1)
                {
                  int64_t v195 = v237 + 1;
                  if (__OFADD__(v237, 1)) {
                    goto LABEL_102;
                  }
                  if (v195 >= v301)
                  {
                    uint64_t v345 = 0;
                    uint64_t v194 = 1;
                    int64_t v195 = v290;
                    goto LABEL_55;
                  }
                  unint64_t v196 = *(void *)(v294 + 8 * v195);
                  ++v237;
                  if (v196) {
                    goto LABEL_38;
                  }
                }
              }
LABEL_53:
              int64_t v195 = v237;
LABEL_38:
              uint64_t v345 = (v196 - 1) & v196;
              unint64_t v193 = __clz(__rbit64(v196)) + (v195 << 6);
              uint64_t v346 = v195;
LABEL_34:
              (*((void (**)(char *, unint64_t, uint64_t))v360 + 2))(v192, v315[7] + *((void *)v360 + 9) * v193, v173);
              uint64_t v194 = 0;
              goto LABEL_41;
            }
            uint64_t v345 = 0;
            uint64_t v194 = 1;
            uint64_t v346 = v186 + 3;
          }
LABEL_41:
          v191(v192, v194, 1, v173);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v358)(v192, 1, v173) == 1)
          {
            id v197 = v342;
            v191((char *)v342, 1, 1, v173);
            uint64_t v198 = v361;
            uint64_t v199 = v343;
            uint64_t v200 = v363;
          }
          else
          {
            uint64_t v201 = *(int *)(v173 + 64);
            uint64_t v351 = (char *)*(int *)(v173 + 80);
            uint64_t v202 = *((void *)v192 + 1);
            *(void *)uint64_t v182 = *(void *)v192;
            *((void *)v182 + 1) = v202;
            uint64_t v203 = &v182[v201];
            uint64_t v204 = *(void (**)(char *, char *, uint64_t))v336;
            uint64_t v205 = (char *)v191;
            uint64_t v206 = v363;
            (*(void (**)(char *, char *, uint64_t))v336)(&v182[v201], &v192[v201], v363);
            uint64_t v207 = swift_allocObject();
            *(_OWORD *)(v207 + 16) = *(_OWORD *)&v351[(void)v192];
            uint64_t v208 = *(void *)v182;
            uint64_t v209 = *((void *)v182 + 1);
            uint64_t v200 = v206;
            uint64_t v191 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v205;
            id v197 = v342;
            char v210 = (char *)v342 + *(int *)(v173 + 64);
            unint64_t v211 = (uint64_t (**)(uint64_t))((char *)v342 + *(int *)(v173 + 80));
            *uint64_t v342 = v208;
            v197[1] = v209;
            v204(v210, v203, v200);
            *unint64_t v211 = sub_24DA6BB3C;
            v211[1] = (uint64_t (*)(uint64_t))v207;
            v191((char *)v197, 0, 1, v173);
            uint64_t v198 = v361;
            uint64_t v199 = v343;
          }
          uint64_t v212 = v341;
          v333(v341, (char *)v197, v198);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v358)(v212, 1, v173) == 1) {
            goto LABEL_91;
          }
          uint64_t v351 = (char *)v191;
          uint64_t v213 = *(int *)(v173 + 64);
          id v214 = v353;
          unint64_t v215 = (char *)&v353[v213];
          uint64_t v216 = *(int *)(v173 + 80);
          uint64_t v217 = &v353[v216];
          uint64_t v218 = *(char **)v212;
          uint64_t v219 = (char *)*((void *)v212 + 1);
          uint64_t v220 = &v212[v213];
          uint64_t v221 = v200;
          uint64_t v223 = *(void *)&v212[v216];
          uint64_t v222 = *(void *)&v212[v216 + 8];
          *(void *)uint64_t v353 = v218;
          *((void *)v214 + 1) = v219;
          uint64_t v316 = *(void (**)(void, void, void))v336;
          v316(v215, v220, v221);
          *(void *)uint64_t v217 = v223;
          *((void *)v217 + 1) = v222;
          uint64_t v317 = v217;
          unint64_t v224 = (void (*)(void))((char *)v199 + *(int *)(v173 + 64));
          unint64_t v225 = (void *)((char *)v199 + *(int *)(v173 + 80));
          *uint64_t v199 = v218;
          v199[1] = v219;
          uint64_t v337 = v219;
          unint64_t v226 = *v323;
          uint64_t v347 = v224;
          int v320 = v215;
          uint64_t v319 = v226;
          v226();
          uint64_t v318 = v223;
          *unint64_t v225 = v223;
          v225[1] = v222;
          uint64_t v227 = v354;
          long long v228 = sub_24DA1A7B0((unint64_t)v218);
          if (v228)
          {
            uint64_t v229 = v228;
            uint64_t v331 = v337;
            uint64_t v332 = v222;
            swift_retain();
            uint64_t v337 = v218;
            sub_24D40B3C8((unint64_t)v218);
            uint64_t v145 = (unsigned __int8 *)objc_msgSend(v229, sel_requestedExtent);
            uint64_t v231 = v230;

            v327(v347, v363);
            id v232 = sub_24DA1A7B0(v326);
            if (!v232) {
              goto LABEL_104;
            }
            id v233 = v232;
            uint64_t v234 = (unsigned __int8 *)objc_msgSend(v232, sel_requestedExtent);

            BOOL v235 = (uint64_t)v145 < (uint64_t)v234;
            uint64_t v173 = v362;
            uint64_t v236 = v363;
            uint64_t v191 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v351;
            if (v235)
            {
LABEL_69:
              uint64_t v371 = v357;
              uint64_t v372 = v227;
              uint64_t v373 = v356;
              uint64_t v374 = (uint64_t)v355;
              type metadata accessor for ConcreteJobResult();
              uint64_t v239 = (void *)sub_24D907530();
              swift_beginAccess();
              uint64_t v145 = (unsigned __int8 *)v311;
              sub_24DCC9598();
              swift_endAccess();
              uint64_t v240 = v350;
              if (v303(v145, 1, v350) == 1) {
                goto LABEL_108;
              }
              int v241 = *v145;
              v291(v145, v240);
              uint64_t v145 = (unsigned __int8 *)v325;
              uint64_t v242 = (void (*)(char *, uint64_t, uint64_t))v324;
              uint64_t v243 = v331;
              if (v241) {
                goto LABEL_111;
              }
              uint64_t v244 = v339;
              sub_24DC11530(v352, v325, (uint64_t)v239);
              if (v244)
              {

                swift_release();
                swift_release();
                sub_24D44E05C((unint64_t)v337);
                (*(void (**)(unsigned __int8 *, uint64_t))v322)(v353, v173);
                swift_release();
                v292((unsigned __int8 *)v321, v330);
                goto LABEL_92;
              }
              uint64_t v245 = v312;
              sub_24DCC8CD8();
              sub_24DCC8C88();
              double v247 = v246;
              (*(void (**)(char *, uint64_t))(v313 + 8))(v245, v314);
              double v248 = v247 * 1000000000.0;
              if ((~COERCE__INT64(v247 * 1000000000.0) & 0x7FF0000000000000) != 0)
              {
                if (v248 <= -9.22337204e18) {
                  goto LABEL_100;
                }
                if (v248 >= 9.22337204e18) {
                  goto LABEL_101;
                }
                sub_24D9126EC(v239, (uint64_t)v248);
                uint64_t v339 = 0;
                uint64_t v252 = v348;
                uint64_t v253 = (char *)v348 + *(int *)(v173 + 64);
                uint64_t v254 = (uint64_t *)((char *)v348 + *(int *)(v173 + 80));
                *unint64_t v348 = (uint64_t)v337;
                v252[1] = (uint64_t)v243;
                ((void (*)(void (*)(void), char *, uint64_t))v319)((void (*)(void))v253, v320, v236);
                uint64_t v255 = v332;
                void *v254 = v318;
                v254[1] = v255;

                v327((void (*)(void))v253, v236);
                uint64_t v256 = v309;
                v242(v309, v352, v340);
                uint64_t v360 = sub_24DA3C5C4();
                uint64_t v257 = (void (*)(uint64_t *, void))sub_24DCC9648();
                if (v303(v258, 1, v350))
                {
                  v257(&v369, 0);
                  v299((uint64_t)v256, v340);
                  ((void (*)(void, void))v360)(&v371, 0);
                  uint64_t v259 = v310;
                  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v351)(v310, 1, 1, v173);
                  uint64_t v260 = v361;
                }
                else
                {
                  uint64_t v368 = (void (*)(void))v331;
                  uint64_t v261 = (uint64_t *)v307;
                  sub_24DCC9598();
                  v257(&v369, 0);
                  v299((uint64_t)v256, v340);
                  ((void (*)(void, void))v360)(&v371, 0);
                  uint64_t v262 = 1;
                  int v263 = ((uint64_t (*)(uint64_t *, uint64_t, uint64_t))v358)(v261, 1, v173);
                  uint64_t v264 = v173;
                  uint64_t v265 = (uint64_t *)v308;
                  if (v263 != 1)
                  {
                    uint64_t v266 = *(int *)(v264 + 64);
                    uint64_t v359 = (uint64_t (*)())*(int *)(v264 + 80);
                    uint64_t v267 = v261[1];
                    uint64_t v268 = v348;
                    *unint64_t v348 = *v261;
                    v268[1] = v267;
                    uint64_t v360 = (uint64_t (*)())((char *)v268 + v266);
                    uint64_t v269 = (void (*)(char *, uint64_t (*)(), uint64_t))v316;
                    ((void (*)(void))v316)();
                    uint64_t v270 = swift_allocObject();
                    uint64_t v271 = v360;
                    *(_OWORD *)(v270 + 16) = *(_OWORD *)((char *)v359 + (void)v261);
                    uint64_t v272 = v268[1];
                    unint64_t v273 = (char *)v265 + *(int *)(v264 + 64);
                    uint64_t v274 = (uint64_t (**)(uint64_t))((char *)v265 + *(int *)(v264 + 80));
                    *uint64_t v265 = *v268;
                    v265[1] = v272;
                    v269(v273, v271, v236);
                    uint64_t v262 = 0;
                    *uint64_t v274 = sub_24DA6BB3C;
                    v274[1] = (uint64_t (*)(uint64_t))v270;
                  }
                  ((void (*)(uint64_t *, uint64_t, uint64_t, uint64_t))v351)(v265, v262, 1, v264);
                  uint64_t v259 = v310;
                  uint64_t v260 = v361;
                  v333(v310, v265, v361);
                  uint64_t v173 = v264;
                }
                unint64_t v275 = (unint64_t)v337;
                uint64_t v276 = v332;
                (*(void (**)(char *, uint64_t))(v338 + 8))(v259, v260);
                uint64_t v277 = v320;
                uint64_t v278 = (void *)sub_24D44D054(v352, v275, v320, v318, v276);
                swift_release();
                sub_24D44E05C(v275);
                uint64_t v279 = *(int *)(v173 + 64);
                uint64_t v280 = v173;
                uint64_t v281 = v348;
                uint64_t v282 = (char *)v348 + v279;
                uint64_t v283 = *(int *)(v280 + 80);
                uint64_t v284 = v353;
                uint64_t v145 = (unsigned __int8 *)*((void *)v353 + 1);
                *unint64_t v348 = *(void *)v353;
                v281[1] = (uint64_t)v145;
                uint64_t v285 = v277;
                uint64_t v286 = v363;
                ((void (*)(char *, char *, uint64_t))v319)((char *)v281 + v279, v285, v363);
                *(_OWORD *)((char *)v281 + v283) = *v317;
                uint64_t v287 = v145;
                v327((void (*)(void))v282, v286);
                unint64_t v288 = (char *)objc_msgSend(v287, sel_totalUnitCount);
                if (!__OFADD__(v288, 1))
                {
                  objc_msgSend(v287, sel_setTotalUnitCount_, v288 + 1);
                  objc_msgSend(v287, sel_addChild_withPendingUnitCount_, v278, 1);
                  swift_release();

                  (*(void (**)(unsigned __int8 *, uint64_t))v322)(v284, v280);
LABEL_91:
                  swift_release();
                  v292((unsigned __int8 *)v321, v330);
                  goto LABEL_92;
                }
LABEL_103:
                __break(1u);
LABEL_104:
                __break(1u);
LABEL_105:
                __break(1u);
                goto LABEL_106;
              }
LABEL_99:
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
              goto LABEL_103;
            }
            if (__OFADD__(v145, v231))
            {
              __break(1u);
LABEL_94:
              __break(1u);
              goto LABEL_95;
            }
            if ((uint64_t)v305 < (uint64_t)&v145[v231]) {
              goto LABEL_69;
            }
            (*(void (**)(unsigned __int8 *, uint64_t))v322)(v353, v362);
            swift_release();
            sub_24D44E05C((unint64_t)v337);

            uint64_t v182 = (char *)v348;
          }
          else
          {
            uint64_t v145 = v214;
            v327(v347, v363);
            (*(void (**)(unsigned __int8 *, uint64_t))v322)(v214, v173);
            uint64_t v182 = (char *)v348;
            uint64_t v191 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v351;
          }
          char v192 = v344;
          uint64_t v186 = v346;
          unint64_t v190 = v345;
        }
        uint64_t v346 = v186;
LABEL_40:
        uint64_t v345 = 0;
        uint64_t v194 = 1;
        goto LABEL_41;
      }
      goto LABEL_107;
    }
LABEL_95:
    __break(1u);
    goto LABEL_96;
  }
  uint64_t v149 = *(void *)&v142[*(int *)(v144 + 56)];
  uint64_t v150 = *(void (**)(void, void))(v329 + 8);
  swift_bridgeObjectRetain();
  unint64_t v292 = (void (*)(unsigned __int8 *, uint64_t))v150;
  v150(v142, v135);
  LOBYTE(v150) = MEMORY[0x2533276A0](v149, MEMORY[0x263F8D1F0], v346, MEMORY[0x263F8D1F8]);
  swift_bridgeObjectRelease();
  if ((v150 & 1) == 0)
  {
    uint64_t v148 = (void (*)(char *, uint64_t))v292;
    goto LABEL_19;
  }
  uint64_t v371 = v357;
  uint64_t v372 = v354;
  uint64_t v373 = v356;
  uint64_t v374 = (uint64_t)v355;
  type metadata accessor for ConcreteJobResult();
  uint64_t v151 = (void *)sub_24D907530();
  swift_beginAccess();
  uint64_t v152 = (unsigned __int8 *)v319;
  sub_24DCC9598();
  swift_endAccess();
  if (v147(v152, 1, v144) == 1)
  {
    v292(v152, v330);
LABEL_111:
    uint64_t result = sub_24DCCA978();
    __break(1u);
    return result;
  }
  int v153 = *v152;
  (*(void (**)(unsigned __int8 *, uint64_t))(v300 + 8))(v152, v144);
  uint64_t v154 = v314;
  uint64_t v155 = v313;
  uint64_t v156 = v312;
  if (!v153)
  {
    uint64_t v157 = v339;
    sub_24DC11530(v352, v146, (uint64_t)v151);
LABEL_78:
    if (v157) {
      goto LABEL_83;
    }
    goto LABEL_79;
  }
  if (v153 == 1)
  {
    uint64_t v157 = v339;
    sub_24DC12A54(v352, v146, (uint64_t)v151);
    goto LABEL_78;
  }
LABEL_79:
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v250 = v249;
  (*(void (**)(char *, uint64_t))(v155 + 8))(v156, v154);
  double v251 = v250 * 1000000000.0;
  if ((~COERCE__INT64(v250 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  if (v251 <= -9.22337204e18)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  if (v251 >= 9.22337204e18)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  sub_24D9126EC(v151, (uint64_t)v251);
LABEL_83:
  swift_release();
LABEL_92:
  uint64_t v289 = v295;
  sub_24DA5FD24(v295, MEMORY[0x263F90278]);
  swift_release();

  return sub_24D44E05C(v326);
}

uint64_t sub_24DA2E3B4(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, void (*a5)(void), void (*a6)(void))
{
  uint64_t v24 = a6;
  uint64_t v23 = a5;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1923D0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24DCC9328();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC9398();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  qos_class_self();
  sub_24DCC9308();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F090], v12);
    sub_24D415F74((uint64_t)v11, qword_26B1923D0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  }
  sub_24DCC9378();
  uint64_t v20 = sub_24DA5D6D4(0, a1, a2, a3, v19, v23, v24);
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  return v20;
}

void sub_24DA2E61C(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v17 = (void *)MEMORY[0x253329610]();
  sub_24DA4B5E0(v8, a2, a3, a4, a1, a5, a6, a7, a8);
}

void sub_24DA2E6C4(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v74 = a6;
  uint64_t v75 = a7;
  uint64_t v77 = a5;
  uint64_t v11 = *v7;
  id v67 = a4;
  uint64_t v68 = v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18F680);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v78 = (uint64_t)&v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC8FC8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v63 = (char *)&v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v62 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v62 - v21;
  uint64_t v23 = type metadata accessor for Signpost(0);
  uint64_t v64 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v65 = v25;
  uint64_t v66 = (uint64_t)&v62 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v76 = (uint64_t)&v62 - v26;
  int v72 = v7;
  id v69 = (id)fpfs_adopt_log();
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v27 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v22, 1, 1, v14);
  uint64_t v79 = 0x657220636E797361;
  unint64_t v80 = 0xEB00000000206461;
  uint64_t v70 = a1;
  uint64_t v71 = a2;
  int v73 = a3;
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v28 = v80;
  uint64_t v62 = v79;
  sub_24D415FD0((uint64_t)v22, (uint64_t)v20, &qword_26B1990B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    id v29 = v27;
    uint64_t v30 = v63;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v20, &qword_26B1990B0);
  }
  else
  {
    uint64_t v30 = v63;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v63, v20, v14);
  }
  uint64_t v31 = v76;
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 16))(v76, v30, v14);
  *(void *)(v31 + *(int *)(v23 + 20)) = v27;
  uint64_t v32 = v31 + *(int *)(v23 + 24);
  *(void *)uint64_t v32 = "DB queue wait";
  *(void *)(v32 + 8) = 13;
  *(unsigned char *)(v32 + 16) = 2;
  id v33 = v27;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_24DCCECE0;
  *(void *)(v34 + 56) = MEMORY[0x263F8D310];
  *(void *)(v34 + 64) = sub_24D3F7B98();
  *(void *)(v34 + 32) = v62;
  *(void *)(v34 + 40) = v28;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v30, v14);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v22, &qword_26B1990B0);
  uint64_t v35 = v31;
  uint64_t v36 = v66;
  sub_24DA6996C(v31, v66, type metadata accessor for Signpost);
  uint64_t v37 = v65;
  uint64_t v38 = *(unsigned __int8 *)(v64 + 80);
  uint64_t v39 = (v38 + 16) & ~v38;
  unint64_t v40 = (v65 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  sub_24DA699D4(v36, v41 + v39, type metadata accessor for Signpost);
  uint64_t v42 = (void *)(v41 + v40);
  uint64_t v43 = v77;
  *uint64_t v42 = v67;
  v42[1] = v43;
  uint64_t v44 = v72;
  uint64_t v64 = v72[25];
  id v67 = (id)v72[8];
  uint64_t v45 = sub_24DCC9398();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 56))(v78, 1, 1, v45);
  sub_24DA6996C(v35, v36, type metadata accessor for Signpost);
  uint64_t v46 = (v38 + 48) & ~v38;
  unint64_t v47 = (v46 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = (v46 + v37 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = (v48 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v50 = swift_allocObject();
  uint64_t v51 = v68;
  *(void *)(v50 + 16) = *(void *)(v68 + 576);
  *(_OWORD *)(v50 + 24) = *(_OWORD *)(v51 + 584);
  *(void *)(v50 + 40) = *(void *)(v51 + 600);
  sub_24DA699D4(v36, v50 + v46, type metadata accessor for Signpost);
  unint64_t v52 = v50 + v47;
  uint64_t v53 = v71;
  *(void *)unint64_t v52 = v70;
  *(void *)(v52 + 8) = v53;
  *(unsigned char *)(v52 + 16) = v73;
  uint64_t v54 = (void *)(v50 + v48);
  uint64_t v55 = v75;
  *uint64_t v54 = v74;
  v54[1] = v55;
  *(void *)(v50 + v49) = v44;
  uint64_t v56 = (void *)(v50 + ((v49 + 15) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v56 = sub_24DA67B4C;
  v56[1] = v41;
  uint64_t v57 = (void *)swift_allocObject();
  v57[2] = sub_24DA67B4C;
  v57[3] = v41;
  v57[4] = v64;
  swift_retain_n();
  id v58 = v67;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v59 = v78;
  sub_24D3FD33C(v58, v78, sub_24D5D7AB4, v57, (uint64_t)sub_24DA67C84, v50);
  swift_release();

  swift_release();
  swift_release();
  sub_24D415F74(v59, &qword_26B18F680);
  sub_24DA684C4(v76, type metadata accessor for Signpost);
  uint64_t v60 = v69;
  id v61 = (id)fpfs_adopt_log();
}

uint64_t sub_24DA2EE44()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986C648);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24DCCECD0;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_24DCCECD0;
  uint64_t v3 = MEMORY[0x263F8D310];
  *(void *)(v2 + 32) = 0x756F436873756C66;
  *(void *)(v2 + 40) = 0xEA0000000000746ELL;
  uint64_t v4 = *v0;
  *(void *)(v2 + 88) = MEMORY[0x263F8E970];
  *(void *)(v2 + 56) = v3;
  *(void *)(v2 + 64) = v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986BE60);
  *(void *)(v1 + 56) = v5;
  *(void *)(v1 + 32) = v2;
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_24DCCECD0;
  *(void *)(v6 + 56) = v3;
  *(void *)(v6 + 32) = 0x7461447465736572;
  *(void *)(v6 + 40) = 0xE900000000000065;
  uint64_t v7 = (char *)v0 + *(int *)(type metadata accessor for DBCounters() + 20);
  uint64_t v8 = sub_24DCC8CE8();
  *(void *)(v6 + 88) = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v6 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_0, v7, v8);
  *(void *)(v1 + 88) = v5;
  *(void *)(v1 + 64) = v6;
  return v1;
}

uint64_t sub_24DA2EFB8(int a1)
{
  uint64_t v3 = v1;
  int v44 = a1;
  uint64_t v4 = *v1;
  uint64_t v48 = sub_24DCC9078();
  uint64_t v45 = *(void *)(v48 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v48);
  uint64_t v42 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v43 = (char *)&v42 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v42 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v42 - v12;
  uint64_t v14 = sub_24DCC93F8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char **)((char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = (void *)v3[8];
  *uint64_t v17 = v18;
  (*(void (**)(void *, void, uint64_t))(v15 + 104))(v17, *MEMORY[0x263F8F0E0], v14);
  id v19 = v18;
  LOBYTE(v18) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    swift_beginAccess();
    uint64_t v21 = v3[28];
    swift_bridgeObjectRetain();
    long long v22 = *(_OWORD *)(v4 + 592);
    long long v46 = *(_OWORD *)(v4 + 576);
    long long v47 = v22;
    uint64_t v23 = type metadata accessor for FSOrFPJob();
    char v24 = MEMORY[0x2533276A0](v21, MEMORY[0x263F8D310], v23, MEMORY[0x263F8D320]);
    uint64_t v25 = swift_bridgeObjectRelease();
    if (v24)
    {
      uint64_t v26 = v3[3];
      if ((*(uint64_t (**)(uint64_t))(*(void *)v26 + 192))(v25))
      {
        id v27 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        unint64_t v28 = sub_24DCC9068();
        os_log_type_t v29 = sub_24DCCA118();
        if (!os_log_type_enabled(v28, v29))
        {
          uint64_t v13 = v11;
          goto LABEL_14;
        }
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        _os_log_impl(&dword_24D3D0000, v28, v29, "🚀  scheduler not stable: some throttles are still active", v30, 2u);
        uint64_t v13 = v11;
        goto LABEL_10;
      }
      char v36 = (*(uint64_t (**)(void))(*(void *)v26 + 184))(v44 & 1);
      if (v2) {
        return v37 & 1;
      }
      if (v36)
      {
        id v38 = (id)fpfs_current_or_default_log();
        uint64_t v13 = v43;
        sub_24DCC9088();
        unint64_t v28 = sub_24DCC9068();
        os_log_type_t v32 = sub_24DCCA118();
        if (!os_log_type_enabled(v28, v32)) {
          goto LABEL_14;
        }
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        id v33 = "🚀  scheduler not stable: some jobs are still pending execution";
        goto LABEL_8;
      }
      char v39 = (*(uint64_t (**)(void))(*(void *)v3[2] + 304))();
      if ((v39 & 1) == 0)
      {
        char v37 = 1;
        return v37 & 1;
      }
      id v40 = (id)fpfs_current_or_default_log();
      uint64_t v13 = v42;
      sub_24DCC9088();
      unint64_t v28 = sub_24DCC9068();
      os_log_type_t v41 = sub_24DCCA118();
      if (os_log_type_enabled(v28, v41))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        id v33 = "🚀  scheduler not stable: some reconciliations are pending scheduling";
        uint64_t v34 = v28;
        os_log_type_t v35 = v41;
        goto LABEL_9;
      }
    }
    else
    {
      id v31 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      unint64_t v28 = sub_24DCC9068();
      os_log_type_t v32 = sub_24DCCA118();
      if (os_log_type_enabled(v28, v32))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v30 = 0;
        id v33 = "🚀  scheduler not stable: jobs are running";
LABEL_8:
        uint64_t v34 = v28;
        os_log_type_t v35 = v32;
LABEL_9:
        _os_log_impl(&dword_24D3D0000, v34, v35, v33, v30, 2u);
LABEL_10:
        MEMORY[0x25332B030](v30, -1, -1);
      }
    }
LABEL_14:

    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v48);
    char v37 = 0;
    return v37 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_24DA2F500(char a1)
{
  sub_24DA63854(a1);

  return swift_retain();
}

uint64_t sub_24DA2F528()
{
  return 0x756F436873756C66;
}

void sub_24DA2F61C()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_24DCC9078();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v90 = v3;
  uint64_t v91 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v88 = (char *)v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v89 = ((char *)v81 - v8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v81 - v9;
  uint64_t v11 = sub_24DCC93F8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (void *)((char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = *(void **)(v2 + 64);
  *uint64_t v14 = v15;
  (*(void (**)(void *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F8F0E0], v11);
  id v16 = v15;
  LOBYTE(v15) = sub_24DCC9418();
  (*(void (**)(void *, uint64_t))(v12 + 8))(v14, v11);
  if ((v15 & 1) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  if ((*(unsigned char *)(v2 + 112) & 0x40) == 0)
  {
    if ((fp_task_tracker_is_cancelled(*(void **)(*(void *)(v2 + 200) + 16)) & 1) != 0 || *(unsigned char *)(v2 + 184) == 1)
    {
      sub_24D71E6DC();
      swift_allocError();
      swift_willThrow();
      return;
    }
    uint64_t v17 = *(void **)(v2 + qword_26B1A2620);
    uint64_t v18 = (uint8_t *)type metadata accessor for FileTreeChangeAggregator();
    uint64_t v85 = type metadata accessor for FileTreeChangeAggregator();
    uint64_t v86 = v18;
    swift_getTupleTypeMetadata2();
    sub_24D6006D8(v17, (void (*)(void))sub_24DA64078);
    uint64_t v19 = v1;
    long long v104 = v92;
    long long v105 = v93;
    long long v106 = v94;
    long long v107 = v95;
    long long v100 = v96;
    long long v101 = v97;
    long long v102 = v98;
    long long v103 = v99;
    id v20 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
    id v21 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v87 = v20;
    long long v22 = sub_24DCC9068();
    os_log_type_t v23 = sub_24DCCA118();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      LODWORD(v84) = v24;
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v83 = v25;
      *(_DWORD *)uint64_t v25 = 138412290;
      uint64_t v19 = v1;
      uint64_t v82 = v25 + 4;
      id v27 = v87;
      id v28 = [v87 enter];
      *(void *)&long long v92 = v28;
      sub_24DCCA428();
      *uint64_t v26 = v28;

      os_log_type_t v29 = v83;
      _os_log_impl(&dword_24D3D0000, v22, (os_log_type_t)v84, "%@ 👁  processing ingestion", v83, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v26, -1, -1);
      MEMORY[0x25332B030](v29, -1, -1);
    }
    else
    {

      long long v22 = v87;
    }
    uint64_t v30 = v90;
    uint64_t v31 = v91;

    uint64_t v34 = *(void (**)(void, void))(v31 + 8);
    uint64_t v32 = v31 + 8;
    id v33 = v34;
    v34(v10, v30);
    if (!sub_24DA40ED8())
    {
      uint64_t v84 = v33;
      id v35 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
      id v36 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      char v37 = (uint8_t *)v35;
      id v38 = sub_24DCC9068();
      os_log_type_t v39 = sub_24DCCA108();
      if (os_log_type_enabled(v38, v39))
      {
        id v40 = (uint8_t *)swift_slowAlloc();
        uint64_t v41 = swift_slowAlloc();
        uint64_t v42 = v37;
        uint64_t v43 = (void *)v41;
        uint64_t v91 = v32;
        *(_DWORD *)id v40 = 138412290;
        v81[1] = v40 + 4;
        uint64_t v82 = v40;
        int v44 = v42;
        uint64_t v83 = v42;
        id v45 = [(uint8_t *)v42 enter];
        *(void *)&long long v92 = v45;
        uint64_t v32 = v91;
        sub_24DCCA428();
        *uint64_t v43 = v45;

        long long v46 = v82;
        _os_log_impl(&dword_24D3D0000, v38, v39, "%@ 👁  processing FS tree changes", v82, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v43, -1, -1);
        long long v47 = v46;
        uint64_t v30 = v90;
        MEMORY[0x25332B030](v47, -1, -1);
        char v37 = v83;
      }
      else
      {

        id v38 = v37;
      }

      id v33 = v84;
      v84(v89, v30);
      sub_24DA438D8((void *)v2, (uint64_t)v86);
      if (v19)
      {
        sub_24D824B68((uint64_t)&v100);
        sub_24D824B68((uint64_t)&v104);
        sub_24DA5FD24(v37, MEMORY[0x263F90270]);

LABEL_38:
        unint64_t v80 = v87;
        sub_24DA5FD24(v87, MEMORY[0x263F90278]);

        return;
      }
      sub_24DA5FD24(v37, MEMORY[0x263F90270]);
    }
    if (!sub_24DA40ED8())
    {
      id v48 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
      id v49 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v89 = v48;
      uint64_t v50 = sub_24DCC9068();
      os_log_type_t v51 = sub_24DCCA108();
      if (os_log_type_enabled(v50, v51))
      {
        uint64_t v52 = swift_slowAlloc();
        uint64_t v84 = v33;
        uint64_t v53 = (uint8_t *)v52;
        uint64_t v54 = (void *)swift_slowAlloc();
        uint64_t v91 = v32;
        uint64_t v86 = v53;
        *(_DWORD *)uint64_t v53 = 138412290;
        uint64_t v83 = v53 + 4;
        uint64_t v55 = v89;
        id v56 = [v89 enter];
        *(void *)&long long v92 = v56;
        sub_24DCCA428();
        *uint64_t v54 = v56;
        uint64_t v30 = v90;

        os_log_type_t v57 = v51;
        id v58 = v86;
        _os_log_impl(&dword_24D3D0000, v50, v57, "%@ 👁  processing FP tree changes", v86, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v54, -1, -1);
        id v33 = v84;
        MEMORY[0x25332B030](v58, -1, -1);
      }
      else
      {

        uint64_t v55 = v89;
        uint64_t v50 = v89;
      }

      v33(v88, v30);
      uint64_t v59 = sub_24DA3C510();
      sub_24DA438D8(v59, v85);
      if (v19)
      {
        sub_24D824B68((uint64_t)&v100);
        sub_24D824B68((uint64_t)&v104);
        swift_release();
        sub_24DA5FD24(v55, MEMORY[0x263F90270]);

        goto LABEL_38;
      }
      swift_release();
      sub_24DA5FD24(v55, MEMORY[0x263F90270]);
    }
    if (*(unsigned char *)(*(void *)(v2 + 192) + 48) == 1)
    {
      uint64_t v60 = v19;
      uint64_t v61 = swift_allocObject();
      long long v62 = v105;
      *(_OWORD *)(v61 + 16) = v104;
      *(_OWORD *)(v61 + 32) = v62;
      long long v63 = v107;
      *(_OWORD *)(v61 + 48) = v106;
      *(_OWORD *)(v61 + 64) = v63;
      *(void *)(v61 + 80) = v2;
      uint64_t v64 = *(void (**)(const char *, uint64_t, uint64_t, void, uint64_t, uint64_t (*)(void), void, void (*)(), uint64_t))(*(void *)v2 + 424);
      swift_retain();
      v64("processPendingIngestion()", 25, 2, 0, 1, nullsub_1, 0, sub_24DA640BC, v61);
      swift_release();
LABEL_31:
      if (*(unsigned char *)(*(void *)(v2 + 192) + 49) == 1)
      {
        uint64_t v70 = swift_allocObject();
        long long v71 = v101;
        *(_OWORD *)(v70 + 16) = v100;
        *(_OWORD *)(v70 + 32) = v71;
        long long v72 = v103;
        *(_OWORD *)(v70 + 48) = v102;
        *(_OWORD *)(v70 + 64) = v72;
        *(void *)(v70 + 80) = v2;
        int v73 = *(void (**)(const char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(void), void, void (*)(), uint64_t))(*(void *)v2 + 424);
        swift_retain();
        v73("processPendingIngestion()", 25, 2, 1, 1, nullsub_1, 0, sub_24DA64098, v70);
        swift_release();
        goto LABEL_38;
      }
      uint64_t v74 = *((void *)&v103 + 1);
      uint64_t v109 = *((void *)&v103 + 1);
      swift_bridgeObjectRetain();
      sub_24D824B68((uint64_t)&v100);
      uint64_t v75 = *(void *)(v74 + 16);
      uint64_t v76 = v60;
      if (!v75)
      {
LABEL_37:
        sub_24D4C6A78((uint64_t)&v109);
        goto LABEL_38;
      }
      uint64_t v77 = (_OWORD *)(v74 + 32);
      while (1)
      {
        uint64_t v78 = swift_allocObject();
        *(_OWORD *)(v78 + 16) = *v77;
        uint64_t v79 = swift_retain();
        uint64_t v14 = (void *)MEMORY[0x253329610](v79);
        (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v2 + 2368))(sub_24DA6BB3C, v78);
        if (v76) {
          goto LABEL_40;
        }
        swift_release();
        ++v77;
        if (!--v75) {
          goto LABEL_37;
        }
      }
    }
    uint64_t v65 = *((void *)&v107 + 1);
    uint64_t v108 = *((void *)&v107 + 1);
    swift_bridgeObjectRetain();
    sub_24D824B68((uint64_t)&v104);
    uint64_t v66 = *(void *)(v65 + 16);
    if (!v66)
    {
LABEL_30:
      uint64_t v60 = v19;
      sub_24D4C6A78((uint64_t)&v108);
      goto LABEL_31;
    }
    id v67 = (_OWORD *)(v65 + 32);
    while (1)
    {
      uint64_t v68 = swift_allocObject();
      *(_OWORD *)(v68 + 16) = *v67;
      uint64_t v69 = swift_retain();
      uint64_t v14 = (void *)MEMORY[0x253329610](v69);
      (*(void (**)(uint64_t (*)(uint64_t), uint64_t))(*(void *)v2 + 2368))(sub_24DA6BB3C, v68);
      if (v19) {
        break;
      }
      swift_release();
      ++v67;
      if (!--v66) {
        goto LABEL_30;
      }
    }
LABEL_40:
    __break(1u);
  }
}

void sub_24DA3024C(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v58 = a5;
  uint64_t v8 = v7;
  uint64_t v57 = a4;
  LODWORD(v55) = a3;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v52 = a7;
  uint64_t v61 = a6;
  uint64_t v9 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v60 = (char *)&v50 - v10;
  uint64_t v11 = sub_24DCC8FC8();
  uint64_t v56 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  long long v63 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  id v16 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v50 - v17;
  uint64_t v19 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v19);
  long long v62 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24DCC93F8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  int v24 = (uint64_t *)((char *)&v50 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v66 = (id)fpfs_adopt_log();
  uint64_t v25 = *(void **)(v8 + 64);
  *int v24 = v25;
  (*(void (**)(void *, void, uint64_t))(v22 + 104))(v24, *MEMORY[0x263F8F0E0], v21);
  id v26 = v25;
  LOBYTE(v25) = sub_24DCC9418();
  (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  if ((v25 & 1) == 0)
  {
    __break(1u);
LABEL_18:
    swift_once();
    goto LABEL_8;
  }
  if ((fp_task_tracker_is_cancelled(*(void **)(*(void *)(v8 + 200) + 16)) & 1) != 0 || *(unsigned char *)(v8 + 184) == 1)
  {
    sub_24D71E6DC();
    swift_allocError();
    swift_willThrow();
LABEL_5:
    id v27 = v66;
    id v28 = (void *)fpfs_adopt_log();
LABEL_6:
    id v29 = v28;

    return;
  }
  if (qword_26B1990F8 != -1) {
    goto LABEL_18;
  }
LABEL_8:
  uint64_t v30 = (void *)qword_26B1A23B0;
  uint64_t v31 = v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v56 + 56))(v18, 1, 1, v11);
  uint64_t v64 = 0x63746162206E7572;
  unint64_t v65 = 0xEA00000000002068;
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v32 = v65;
  uint64_t v54 = v64;
  sub_24D415FD0((uint64_t)v18, (uint64_t)v16, &qword_26B1990B0);
  int v33 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48))(v16, 1, v11);
  unint64_t v55 = v32;
  if (v33 == 1)
  {
    id v34 = v30;
    id v35 = v63;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v16, &qword_26B1990B0);
  }
  else
  {
    id v35 = v63;
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v63, v16, v11);
  }
  id v36 = v62;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v62, v35, v11);
  uint64_t v51 = *(int *)(v19 + 20);
  *(void *)&v36[v51] = v30;
  char v37 = &v36[*(int *)(v19 + 24)];
  *(void *)char v37 = "DB queue";
  *((void *)v37 + 1) = 8;
  uint64_t v53 = v37;
  v37[16] = 2;
  id v38 = v30;
  unint64_t v39 = v55;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_24DCCECE0;
  *(void *)(v40 + 56) = MEMORY[0x263F8D310];
  *(void *)(v40 + 64) = sub_24D3F7B98();
  *(void *)(v40 + 32) = v54;
  *(void *)(v40 + 40) = v39;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v63, v11);
  swift_bridgeObjectRelease();
  uint64_t v41 = sub_24D415F74((uint64_t)v18, &qword_26B1990B0);
  MEMORY[0x270FA5388](v41);
  uint64_t v43 = v60;
  uint64_t v42 = v61;
  int v44 = v59;
  (*(void (**)(uint64_t (*)()))(*(void *)v8 + 2376))(sub_24DA681C0);
  if (v44)
  {
    uint64_t v64 = (uint64_t)v44;
    id v45 = v44;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    if (swift_dynamicCast())
    {

      sub_24D71E6DC();
      swift_allocError();
      swift_willThrow();

      sub_24DCCA2C8();
      uint64_t v46 = (uint64_t)v62;
      sub_24DCC8F98();
      sub_24DA684C4(v46, type metadata accessor for Signpost);
    }
    else
    {

      (*(void (**)(void *, uint64_t, const char *, uint64_t, uint64_t))(*(void *)v8 + 464))(v44, 1, "runBatch(function:updateBlock:)", 31, 2);
      sub_24DCCA2C8();
      uint64_t v49 = (uint64_t)v62;
      sub_24DCC8F98();
      sub_24DA684C4(v49, type metadata accessor for Signpost);
    }
    goto LABEL_5;
  }
  uint64_t v47 = *(void *)(v42 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v43, 1, v42) != 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v47 + 32))(v52, v43, v42);
    sub_24DCCA2C8();
    uint64_t v48 = (uint64_t)v62;
    sub_24DCC8F98();
    sub_24DA684C4(v48, type metadata accessor for Signpost);
    id v27 = v66;
    id v28 = (void *)fpfs_adopt_log();
    goto LABEL_6;
  }
  __break(1u);
}

uint64_t sub_24DA30ACC()
{
  uint64_t v1 = sub_24DCC8FC8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = &v15[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = &v15[-v9];
  uint64_t result = fp_task_tracker_is_cancelled(*(void **)(*(void *)(v0 + 200) + 16));
  if ((result & 1) == 0 && (*(unsigned char *)(v0 + 184) & 1) == 0)
  {
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    uint64_t v12 = (void *)qword_26B1A23B0;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v10, 1, 1, v1);
    sub_24D415FD0((uint64_t)v10, (uint64_t)v8, &qword_26B1990B0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v2 + 48))(v8, 1, v1) == 1)
    {
      id v13 = v12;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v8, &qword_26B1990B0);
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v2 + 32))(v4, v8, v1);
    }
    sub_24DCCA2E8();
    sub_24DCC8F98();
    (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, v1);
    sub_24D415F74((uint64_t)v10, &qword_26B1990B0);
    sub_24D6006D8((void *)v0, sub_24DA6822C);
    uint64_t ObjectType = swift_getObjectType();
    swift_unknownObjectRetain();
    MEMORY[0x2533283F0](1, ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_24DA30D78(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v3[24];
  uint64_t v7 = *(void *)(v6 + 16);
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v6 + 16) = v9;
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = a1;
    *(void *)(v2 + 24) = a2;
    uint64_t v4 = (void **)((char *)v3 + qword_26B1A2610);
    swift_beginAccess();
    uint64_t v5 = *v4;
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v4 = v5;
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_3;
    }
  }
  uint64_t v5 = sub_24DA148AC(0, v5[2] + 1, 1, v5);
  *uint64_t v4 = v5;
LABEL_3:
  unint64_t v14 = v5[2];
  unint64_t v13 = v5[3];
  if (v14 >= v13 >> 1)
  {
    uint64_t v5 = sub_24DA148AC((void *)(v13 > 1), v14 + 1, 1, v5);
    *uint64_t v4 = v5;
  }
  _OWORD v5[2] = v14 + 1;
  uint64_t v15 = &v5[2 * v14];
  v15[4] = sub_24DA6BA7C;
  v15[5] = v2;
  uint64_t v16 = swift_endAccess();
  return (*(uint64_t (**)(uint64_t))(*v3 + 2352))(v16);
}

uint64_t sub_24DA30ED8()
{
  sub_24DA6384C();

  return swift_retain();
}

uint64_t sub_24DA30F00()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v101 = sub_24DCC9078();
  uint64_t v100 = *(void *)(v101 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v101);
  long long v99 = (char *)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  long long v98 = (char *)&v93 - v5;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  long long v96 = (char *)&v93 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  long long v95 = (char *)&v93 - v9;
  MEMORY[0x270FA5388](v8);
  long long v97 = (char *)&v93 - v10;
  uint64_t v11 = v1[73];
  uint64_t v12 = v1[74];
  uint64_t v13 = v1[75];
  uint64_t v106 = v1[72];
  os_log_type_t v113 = v106;
  uint64_t v114 = v11;
  uint64_t v105 = v11;
  uint64_t v104 = v12;
  uint64_t v115 = v12;
  uint64_t v116 = v13;
  uint64_t v103 = v13;
  uint64_t v14 = type metadata accessor for PersistenceTrigger();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v93 - v19;
  uint64_t v110 = v0;
  uint64_t v21 = (void *)((char *)v0 + qword_26B1A2628);
  swift_beginAccess();
  uint64_t v22 = sub_24DCC9D48();
  os_log_type_t v113 = *v21;
  swift_getWitnessTable();
  long long v107 = (uint8_t *)v22;
  if (sub_24DCC9FE8())
  {
LABEL_2:
    uint64_t v23 = (uint64_t)v110;
    if (fp_task_tracker_is_cancelled(*(void **)(v110[25] + 16))) {
      int v24 = 1;
    }
    else {
      int v24 = *(unsigned __int8 *)(v23 + 184);
    }
    LODWORD(v109) = v24;
    int v38 = v24 ^ 1;
    unint64_t v39 = (void *)(v23 + qword_26B1A2630);
    if (*(_OWORD *)(v23 + qword_26B1A2630) == 0 || (int v40 = v24 ^ 1, (~*(_DWORD *)(v23 + 112) & 0x1C0) == 0)) {
      int v40 = 0;
    }
    uint64_t v41 = (void *)(v23 + qword_26B1A2658);
    if (*(_OWORD *)(v23 + qword_26B1A2658) == 0 || (~*(_DWORD *)(v23 + 112) & 0x1C0) == 0) {
      int v38 = 0;
    }
    uint64_t v42 = (uint64_t *)(v23 + qword_26B1A2668);
    swift_beginAccess();
    uint64_t v118 = *v42;
    os_log_type_t v113 = v106;
    uint64_t v114 = v105;
    uint64_t v115 = v104;
    uint64_t v116 = v103;
    type metadata accessor for UserRequest();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B190988);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    sub_24DCC9D48();
    swift_getWitnessTable();
    if (!(v40 & 1 | ((sub_24DCC9FE8() & 1) == 0)) && !v38) {
      goto LABEL_27;
    }
    uint64_t v57 = v111;
    uint64_t result = sub_24DA2EFB8(1);
    if (v57) {
      return result;
    }
    uint64_t v111 = 0;
    if ((result & 1) == 0)
    {
LABEL_27:
      uint64_t v44 = (uint64_t)v110;
      goto LABEL_28;
    }
    if (v40)
    {
      if (*((unsigned char *)v110 + 121) == 1) {
        goto LABEL_74;
      }
      id v58 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v59 = sub_24DCC9068();
      os_log_type_t v60 = sub_24DCCA128();
      uint64_t v108 = v59;
      if (os_log_type_enabled(v59, v60))
      {
        uint64_t v61 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v61 = 0;
        _os_log_impl(&dword_24D3D0000, v108, v60, "🤯  job scheduler is stable, upload jobs are not!", v61, 2u);
        MEMORY[0x25332B030](v61, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v100 + 8))(v97, v101);
      *unint64_t v39 = 0;
      v39[1] = 0;
      *(int64x2_t *)((char *)v110 + qword_26B1A2660) = vdupq_n_s64(1uLL);
    }
    if (!v38) {
      goto LABEL_45;
    }
    if (*((unsigned char *)v110 + 121) != 1)
    {
      id v62 = (id)fpfs_current_or_default_log();
      long long v63 = v95;
      sub_24DCC9088();
      uint64_t v64 = sub_24DCC9068();
      os_log_type_t v65 = sub_24DCCA128();
      if (os_log_type_enabled(v64, v65))
      {
        id v66 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v66 = 0;
        _os_log_impl(&dword_24D3D0000, v64, v65, "🤯  job scheduler is stable, download jobs are not!", v66, 2u);
        MEMORY[0x25332B030](v66, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v100 + 8))(v63, v101);
      *uint64_t v41 = 0;
      v41[1] = 0;
      *(int64x2_t *)((char *)v110 + qword_26B1A2670) = vdupq_n_s64(1uLL);
LABEL_45:
      os_log_type_t v113 = *v42;
      char v67 = sub_24DCC9FE8();
      uint64_t v44 = (uint64_t)v110;
      if ((v67 & 1) == 0)
      {
        id v68 = (id)fpfs_current_or_default_log();
        uint64_t v28 = (uint64_t)v96;
        sub_24DCC9088();
        uint64_t v69 = sub_24DCC9068();
        os_log_type_t v70 = sub_24DCCA148();
        if (os_log_type_enabled(v69, v70))
        {
          long long v71 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)long long v71 = 0;
          _os_log_impl(&dword_24D3D0000, v69, v70, "🚀  job scheduler is stable, calling the stabilization waiters", v71, 2u);
          uint64_t v44 = (uint64_t)v110;
          MEMORY[0x25332B030](v71, -1, -1);
        }

        (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v28, v101);
        uint64_t v72 = *v42;
        uint64_t v73 = swift_bridgeObjectRetain();
        if (MEMORY[0x253327DC0](v73, TupleTypeMetadata2))
        {
          uint64_t v74 = 0;
          uint64_t v75 = v72 + 48;
          while (1)
          {
            char v76 = sub_24DCC9CB8();
            sub_24DCC9C68();
            if ((v76 & 1) == 0) {
              break;
            }
            uint64_t v28 = *(void *)(v75 - 16);
            uint64_t v77 = *(void (**)(NSObject **))(v75 - 8);
            sub_24D40B3C8(v28);
            uint64_t v78 = v74 + 1;
            BOOL v79 = __OFADD__(v74, 1);
            swift_retain();
            if (v79) {
              goto LABEL_70;
            }
            os_log_type_t v113 = 0;
            v77(&v113);
            sub_24D44E05C(v28);
            swift_release();
            ++v74;
            v75 += 24;
            if (v78 == MEMORY[0x253327DC0](v72, TupleTypeMetadata2))
            {
              swift_bridgeObjectRelease();
              uint64_t v44 = (uint64_t)v110;
              goto LABEL_68;
            }
          }
          sub_24DCCA778();
          __break(1u);
LABEL_70:
          __break(1u);
LABEL_71:
          __break(1u);
LABEL_72:
          swift_retain();
          sub_24DA85EFC((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 106, 2, 1383, v28);
        }
        swift_bridgeObjectRelease();
LABEL_68:
        *uint64_t v42 = sub_24DCC9C98();
        swift_bridgeObjectRelease();
      }
LABEL_28:
      swift_beginAccess();
      uint64_t v45 = *(void *)(v44 + 224);
      swift_bridgeObjectRetain();
      os_log_type_t v113 = v106;
      uint64_t v114 = v105;
      uint64_t v115 = v104;
      uint64_t v116 = v103;
      uint64_t v46 = type metadata accessor for FSOrFPJob();
      char v47 = MEMORY[0x2533276A0](v45, MEMORY[0x263F8D310], v46, MEMORY[0x263F8D320]);
      swift_bridgeObjectRelease();
      if ((v47 & 1) != 0 && ((sub_24D57AF4C() | v109) & 1) == 0)
      {
        uint64_t v48 = type metadata accessor for StringDumper();
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 32) = 0;
        *(void *)(v28 + 40) = 0xE000000000000000;
        *(void *)(v28 + 16) = 0;
        *(void *)(v28 + 24) = 0xE000000000000000;
        uint64_t v116 = v48;
        uint64_t v117 = &off_26FFC6110;
        os_log_type_t v113 = v28;
        swift_retain();
        sub_24D57B2CC();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
        if ((*(unsigned char *)(v44 + 113) & 4) != 0) {
          goto LABEL_72;
        }
        id v49 = (id)fpfs_current_or_default_log();
        uint64_t v50 = v98;
        sub_24DCC9088();
        swift_retain();
        uint64_t v51 = sub_24DCC9068();
        os_log_type_t v52 = sub_24DCCA138();
        if (os_log_type_enabled(v51, v52))
        {
          uint64_t v53 = (uint8_t *)swift_slowAlloc();
          uint64_t v108 = swift_slowAlloc();
          os_log_type_t v113 = v108;
          *(_DWORD *)uint64_t v53 = 136315138;
          long long v107 = v53 + 4;
          swift_beginAccess();
          uint64_t v54 = *(void *)(v28 + 16);
          unint64_t v55 = *(void *)(v28 + 24);
          swift_bridgeObjectRetain();
          uint64_t v119 = sub_24D418FB4(v54, v55, (uint64_t *)&v113);
          sub_24DCCA428();
          swift_release();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_24D3D0000, v51, v52, "🤯  there is no running jobs but the FS job lock is not empty!\n%s", v53, 0xCu);
          uint64_t v56 = v108;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v56, -1, -1);
          MEMORY[0x25332B030](v53, -1, -1);

          (*(void (**)(char *, uint64_t))(v100 + 8))(v98, v101);
        }
        else
        {

          swift_release();
          (*(void (**)(char *, uint64_t))(v100 + 8))(v50, v101);
        }
        sub_24D57B0F8();
        sub_24DA30ACC();
        swift_release();
      }
      uint64_t v80 = swift_bridgeObjectRetain();
      char v81 = MEMORY[0x2533276A0](v80, MEMORY[0x263F8D310], v46, MEMORY[0x263F8D320]);
      uint64_t result = swift_bridgeObjectRelease();
      if (v81)
      {
        uint64_t v82 = (uint64_t)v110;
        uint64_t result = sub_24D57AF4C();
        if (((result | v109) & 1) == 0)
        {
          uint64_t v83 = type metadata accessor for StringDumper();
          uint64_t v84 = swift_allocObject();
          v84[4].uint64_t isa = 0;
          v84[5].uint64_t isa = (Class)0xE000000000000000;
          v84[2].uint64_t isa = 0;
          v84[3].uint64_t isa = (Class)0xE000000000000000;
          uint64_t v116 = v83;
          uint64_t v117 = &off_26FFC6110;
          os_log_type_t v113 = v84;
          swift_retain();
          sub_24D57B2CC();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v113);
          if ((*(unsigned char *)(v82 + 113) & 4) != 0)
          {
            swift_retain();
            sub_24DA85F10((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/ConcreteDatabase.swift", 106, 2, 1397, (uint64_t)v84);
          }
          id v85 = (id)fpfs_current_or_default_log();
          uint64_t v86 = v99;
          sub_24DCC9088();
          swift_retain();
          uint64_t v87 = sub_24DCC9068();
          os_log_type_t v88 = sub_24DCCA138();
          if (os_log_type_enabled(v87, v88))
          {
            uint64_t v89 = (uint8_t *)swift_slowAlloc();
            uint64_t v90 = swift_slowAlloc();
            uint64_t v119 = v90;
            *(_DWORD *)uint64_t v89 = 136315138;
            swift_beginAccess();
            uint64_t isa = (uint64_t)v84[2].isa;
            unint64_t v92 = (unint64_t)v84[3].isa;
            swift_bridgeObjectRetain();
            uint64_t v112 = sub_24D418FB4(isa, v92, &v119);
            sub_24DCCA428();
            swift_release();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24D3D0000, v87, v88, "🤯  there is no running jobs but the FP job lock is not empty!\n%s", v89, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25332B030](v90, -1, -1);
            MEMORY[0x25332B030](v89, -1, -1);

            (*(void (**)(char *, uint64_t))(v100 + 8))(v99, v101);
          }
          else
          {

            swift_release();
            (*(void (**)(char *, uint64_t))(v100 + 8))(v86, v101);
          }
          sub_24D57B0F8();
          sub_24DA30ACC();
          return swift_release();
        }
      }
      return result;
    }
LABEL_74:
    uint64_t result = sub_24DCCA978();
    __break(1u);
    return result;
  }
  uint64_t v109 = v20;
  uint64_t v94 = v16;
  uint64_t v108 = (v15 + 16);
  uint64_t v25 = (void (**)(char *, uint64_t))(v15 + 8);
  long long v102 = v21;
  while (1)
  {
    id v26 = *v21;
    swift_bridgeObjectRetain();
    *uint64_t v21 = sub_24DCC9C98();
    swift_bridgeObjectRelease();
    if (MEMORY[0x253327DC0](v26, v14)) {
      break;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    uint64_t v21 = v102;
    os_log_type_t v113 = *v102;
    swift_getWitnessTable();
    if (sub_24DCC9FE8()) {
      goto LABEL_2;
    }
  }
  uint64_t v27 = 0;
  while (1)
  {
    uint64_t v28 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if ((v28 & 1) == 0) {
      break;
    }
    id v29 = v109;
    uint64_t v30 = (void *)(*(uint64_t (**)(char *, unint64_t, uint64_t))(v15 + 16))(v109, (unint64_t)v26+ ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))+ *(void *)(v15 + 72) * v27, v14);
    uint64_t v31 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      goto LABEL_16;
    }
LABEL_10:
    uint64_t v32 = (*(uint64_t (**)(char *, char *, uint64_t))(v15 + 32))(v18, v29, v14);
    int v33 = (void *)MEMORY[0x253329610](v32);
    uint64_t v34 = v111;
    sub_24DA4A4D8((uint64_t)v18, (uint64_t)v110);
    uint64_t v111 = v34;
    uint64_t v30 = v33;
    if (v34) {
      goto LABEL_17;
    }
    (*v25)(v18, v14);
    ++v27;
    if (v31 == MEMORY[0x253327DC0](v26, v14)) {
      goto LABEL_5;
    }
  }
  uint64_t v35 = sub_24DCCA778();
  if (v94 != 8) {
    goto LABEL_71;
  }
  os_log_type_t v113 = v35;
  id v36 = v109;
  ((void (*)(char *, NSObject **, uint64_t))v108->isa)(v109, &v113, v14);
  id v29 = v36;
  uint64_t v30 = (void *)swift_unknownObjectRelease();
  uint64_t v31 = v27 + 1;
  if (!__OFADD__(v27, 1)) {
    goto LABEL_10;
  }
LABEL_16:
  __break(1u);
LABEL_17:
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))*v25)(v18, v14);
}

uint64_t sub_24DA31F44()
{
  uint64_t v0 = sub_24D6E809C();

  swift_bridgeObjectRelease();
  swift_release();
  sub_24D43DD74(*(void *)(v0 + 128));
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  sub_24D415F74(v0 + qword_26B1A23E0, &qword_26B197780);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();

  sub_24DA684C4(v0 + qword_26B1A26B0, (uint64_t (*)(void))type metadata accessor for DBCounters);
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

void sub_24DA321C0()
{
  uint64_t v0 = sub_24DCC9078();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v0);
  uint64_t v4 = (char *)&v79 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v83 = (char *)&v79 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  os_log_type_t v88 = (char *)&v79 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v82 = (char *)&v79 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v87 = (char *)&v79 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v86 = (char *)&v79 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  char v81 = (char *)&v79 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v80 = (char *)&v79 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v79 - v19;
  id v21 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  id v22 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v23 = v21;
  int v24 = sub_24DCC9068();
  os_log_type_t v25 = sub_24DCCA148();
  BOOL v26 = os_log_type_enabled(v24, v25);
  id v85 = v4;
  if (v26)
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v79 = v1;
    uint64_t v28 = (uint8_t *)v27;
    id v29 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v28 = 138412290;
    id v30 = [v23 enter];
    id v89 = v30;
    sub_24DCCA428();
    *id v29 = v30;
    uint64_t v31 = v23;

    _os_log_impl(&dword_24D3D0000, v24, v25, "%@ ✋🏻  invalidating database", v28, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v29, -1, -1);
    uint64_t v32 = v28;
    uint64_t v1 = v79;
    MEMORY[0x25332B030](v32, -1, -1);
  }
  else
  {

    uint64_t v31 = v23;
    int v24 = v23;
  }

  int v33 = *(void (**)(char *, uint64_t))(v1 + 8);
  v33(v20, v0);
  uint64_t v34 = v84;
  id v35 = *(id *)(v84 + 64);
  sub_24D6050CC(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_24DA68274, v34);

  id v36 = v80;
  if (qword_26B199560 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_26B1A23D8, sel_removeWatcher_, v34);
  id v37 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  int v38 = sub_24DCC9068();
  os_log_type_t v39 = sub_24DCCA148();
  if (os_log_type_enabled(v38, v39))
  {
    int v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v40 = 0;
    _os_log_impl(&dword_24D3D0000, v38, v39, "disable event aggregation", v40, 2u);
    MEMORY[0x25332B030](v40, -1, -1);
  }

  v33(v36, v0);
  uint64_t v41 = *(void (**)(uint64_t))(**(void **)(*(void *)(v34 + 32) + 16) + 824);
  uint64_t v42 = swift_retain();
  v41(v42);
  swift_release();
  uint64_t v43 = *(void (**)(uint64_t))(**(void **)(*(void *)(v34 + 40) + 16) + 824);
  uint64_t v44 = swift_retain();
  v43(v44);
  swift_release();
  uint64_t v45 = v31;
  uint64_t v46 = v83;
  if (*(unsigned char *)(v34 + 104) == 1)
  {
    id v47 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v48 = sub_24DCC9068();
    os_log_type_t v49 = sub_24DCCA148();
    if (os_log_type_enabled(v48, v49))
    {
      uint64_t v50 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v50 = 0;
      _os_log_impl(&dword_24D3D0000, v48, v49, "cancel trees", v50, 2u);
      MEMORY[0x25332B030](v50, -1, -1);
    }

    v33(v81, v0);
    sub_24DA3CCFC();
  }
  id v51 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  os_log_type_t v52 = sub_24DCC9068();
  os_log_type_t v53 = sub_24DCCA148();
  if (os_log_type_enabled(v52, v53))
  {
    uint64_t v54 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v54 = 0;
    _os_log_impl(&dword_24D3D0000, v52, v53, "stopping scheduler", v54, 2u);
    MEMORY[0x25332B030](v54, -1, -1);
  }

  v33(v86, v0);
  sub_24DA3CE8C();
  (*(void (**)(void))(**(void **)(v34 + 24) + 120))();
  id v55 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v56 = sub_24DCC9068();
  os_log_type_t v57 = sub_24DCCA148();
  if (os_log_type_enabled(v56, v57))
  {
    id v58 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v58 = 0;
    _os_log_impl(&dword_24D3D0000, v56, v57, "cancelling in-flight requests", v58, 2u);
    MEMORY[0x25332B030](v58, -1, -1);
  }

  v33(v87, v0);
  id v59 = *(id *)(v34 + 64);
  sub_24D6050CC(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_24DA68290, v34);

  os_log_type_t v60 = v85;
  if (*(unsigned char *)(v34 + 104) == 1)
  {
    id v61 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v62 = sub_24DCC9068();
    os_log_type_t v63 = sub_24DCCA148();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v64 = 0;
      _os_log_impl(&dword_24D3D0000, v62, v63, "closing trees", v64, 2u);
      MEMORY[0x25332B030](v64, -1, -1);
    }

    v33(v82, v0);
    sub_24DA3CCFC();
    sub_24DA3CDC4();
  }
  id v65 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v66 = sub_24DCC9068();
  os_log_type_t v67 = sub_24DCCA148();
  if (os_log_type_enabled(v66, v67))
  {
    id v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v68 = 0;
    _os_log_impl(&dword_24D3D0000, v66, v67, "waiting for job completion", v68, 2u);
    MEMORY[0x25332B030](v68, -1, -1);
  }

  v33(v88, v0);
  id v69 = *(id *)(v34 + 208);
  sub_24DCCA168();

  id v70 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  long long v71 = sub_24DCC9068();
  os_log_type_t v72 = sub_24DCCA148();
  if (os_log_type_enabled(v71, v72))
  {
    uint64_t v73 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v73 = 0;
    _os_log_impl(&dword_24D3D0000, v71, v72, "stopping tracker", v73, 2u);
    MEMORY[0x25332B030](v73, -1, -1);
  }

  v33(v46, v0);
  uint64_t v74 = *(void **)(*(void *)(v34 + 200) + 16);
  fp_task_tracker_cancel(v74);
  fp_task_tracker_wait((uint64_t)v74);
  id v75 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  char v76 = sub_24DCC9068();
  os_log_type_t v77 = sub_24DCCA148();
  if (os_log_type_enabled(v76, v77))
  {
    uint64_t v78 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v78 = 0;
    _os_log_impl(&dword_24D3D0000, v76, v77, "closing the wharf", v78, 2u);
    MEMORY[0x25332B030](v78, -1, -1);
  }

  v33(v60, v0);
  if (*(unsigned char *)(v34 + 104) == 1) {
    sub_24DCA8870();
  }
  sub_24DA5FD24(v45, MEMORY[0x263F90290]);
}

uint64_t sub_24DA32C14(unsigned __int8 *a1)
{
  long long v747 = a1;
  uint64_t v3 = *(void (**)(void, void, void))(*(void *)v1 + 576);
  uint64_t v4 = *(void (**)(void, void))(*(void *)v1 + 600);
  uint64_t v5 = *(void (**)(void, void))(*(void *)v1 + 592);
  long long v748 = *(void (**)(void, void, void))(*(void *)v1 + 584);
  uint64_t v2 = v748;
  long long v749 = v3;
  unint64_t v750 = v4;
  uint64_t v751 = (uint64_t)v5;
  uint64_t v699 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v698 = *(void *)(v699 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v699);
  unint64_t v674 = (char *)&v630 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  size_t v697 = (char *)&v630 - v8;
  long long v748 = v3;
  long long v749 = v2;
  unint64_t v750 = v5;
  uint64_t v751 = (uint64_t)v4;
  uint64_t v696 = type metadata accessor for DirectionalTestingOperation();
  uint64_t v695 = *(void *)(v696 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v696);
  long long v673 = (char *)&v630 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v694 = (char *)&v630 - v11;
  long long v748 = v2;
  long long v749 = v3;
  unint64_t v750 = v4;
  uint64_t v751 = (uint64_t)v5;
  uint64_t v12 = type metadata accessor for TestingOperation();
  uint64_t v662 = sub_24DCCA3F8();
  uint64_t v679 = *(void *)(v662 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v662);
  size_t v678 = (char *)&v630 - v14;
  long long v661 = (void *)v12;
  uint64_t v660 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v13);
  long long v676 = (char *)&v630 - v15;
  long long v748 = v3;
  long long v749 = v2;
  unint64_t v750 = v5;
  uint64_t v751 = (uint64_t)v4;
  uint64_t v16 = type metadata accessor for TestingOperation();
  uint64_t v658 = sub_24DCCA3F8();
  uint64_t v657 = *(void *)(v658 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v658);
  unint64_t v656 = (char *)&v630 - v18;
  uint64_t v722 = v16;
  uint64_t v683 = *(void *)(v16 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  unint64_t v675 = (char *)&v630 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v647 = (uint64_t)&v630 - v22;
  MEMORY[0x270FA5388](v21);
  unint64_t v646 = (char *)&v630 - v23;
  uint64_t v721 = type metadata accessor for SnapshotItem();
  uint64_t v720 = *(void *)(v721 - 8);
  MEMORY[0x270FA5388](v721);
  uint64_t v703 = (uint64_t)&v630 - v24;
  size_t v677 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v655 = *((void *)v677 - 1);
  MEMORY[0x270FA5388](v677);
  unint64_t v654 = (char *)&v630 - v25;
  uint64_t v26 = type metadata accessor for SnapshotItem();
  uint64_t v723 = *(void *)(v26 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  long long v649 = (char *)&v630 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  long long v669 = (char *)&v630 - v30;
  MEMORY[0x270FA5388](v29);
  size_t v710 = (char *)&v630 - v31;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v665 = sub_24DCCA3F8();
  uint64_t v664 = *(void *)(v665 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v665);
  size_t v681 = (char *)&v630 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v33);
  unint64_t v672 = (char *)&v630 - v35;
  uint64_t v650 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v650);
  uint64_t v639 = (uint64_t)&v630 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v724 = v26;
  uint64_t v731 = sub_24DCCA3F8();
  uint64_t v725 = *(void *)(v731 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v731);
  unsigned int v685 = (char *)&v630 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  unint64_t v719 = (char *)&v630 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  size_t v730 = (char *)&v630 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v729 = (char *)&v630 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v643 = (char *)&v630 - v45;
  uint64_t v46 = swift_getAssociatedTypeWitness();
  uint64_t v667 = sub_24DCCA3F8();
  uint64_t v666 = *(void *)(v667 - 8);
  uint64_t v47 = MEMORY[0x270FA5388](v667);
  unint64_t v653 = (char *)&v630 - v48;
  unint64_t v737 = (void (*)(void, void, void))v46;
  unint64_t v732 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v46 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v648 = (char *)&v630 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  unint64_t v640 = (char *)&v630 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  unsigned int v718 = (char *)&v630 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v693 = (char *)&v630 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v717 = (char *)&v630 - v58;
  MEMORY[0x270FA5388](v57);
  long long v651 = (char *)&v630 - v59;
  long long v748 = v3;
  long long v749 = v2;
  unint64_t v750 = v5;
  uint64_t v751 = (uint64_t)v4;
  uint64_t v60 = type metadata accessor for ItemReconciliation();
  uint64_t v701 = sub_24DCCA3F8();
  uint64_t v684 = *(void *)(v701 - 8);
  uint64_t v61 = MEMORY[0x270FA5388](v701);
  uint64_t v692 = (uint64_t)&v630 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  unint64_t v671 = (char *)&v630 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v706 = (uint64_t)&v630 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v652 = (uint64_t)&v630 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  uint64_t v642 = (uint64_t)&v630 - v70;
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v691 = (uint64_t)&v630 - v72;
  uint64_t v709 = v60;
  uint64_t v708 = *(void *)(v60 - 8);
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  long long v663 = (char *)&v630 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  long long v638 = (char *)&v630 - v76;
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  unint64_t v644 = (char *)&v630 - v78;
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  long long v670 = (char *)&v630 - v80;
  uint64_t v739 = AssociatedTypeWitness;
  uint64_t v733 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  uint64_t v702 = (uint64_t)&v630 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  uint64_t v690 = (char *)&v630 - v84;
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  long long v668 = (char *)&v630 - v86;
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  unint64_t v641 = (char *)&v630 - v88;
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  size_t v704 = (char *)&v630 - v90;
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  long long v659 = (char *)&v630 - v92;
  uint64_t v93 = MEMORY[0x270FA5388](v91);
  unsigned int v682 = (char *)&v630 - v94;
  uint64_t v95 = MEMORY[0x270FA5388](v93);
  uint64_t v728 = (char *)&v630 - v96;
  uint64_t v97 = MEMORY[0x270FA5388](v95);
  unint64_t v689 = (char *)&v630 - v98;
  uint64_t v99 = MEMORY[0x270FA5388](v97);
  uint64_t v727 = (char *)&v630 - v100;
  uint64_t v101 = MEMORY[0x270FA5388](v99);
  uint64_t v705 = (uint64_t)&v630 - v102;
  uint64_t v103 = MEMORY[0x270FA5388](v101);
  size_t v680 = (char *)&v630 - v104;
  uint64_t v105 = MEMORY[0x270FA5388](v103);
  unint64_t v645 = (char *)&v630 - v106;
  uint64_t v107 = MEMORY[0x270FA5388](v105);
  unsigned int v700 = (char *)&v630 - v108;
  uint64_t v109 = MEMORY[0x270FA5388](v107);
  uint64_t v688 = (char *)&v630 - v110;
  uint64_t v111 = MEMORY[0x270FA5388](v109);
  size_t v687 = (char *)&v630 - v112;
  uint64_t v113 = MEMORY[0x270FA5388](v111);
  uint64_t v686 = (char *)&v630 - v114;
  MEMORY[0x270FA5388](v113);
  uint64_t v707 = (char *)&v630 - v115;
  uint64_t v734 = v3;
  long long v748 = v3;
  long long v749 = v2;
  unint64_t v735 = v2;
  long long v738 = v5;
  unint64_t v750 = v5;
  uint64_t v751 = (uint64_t)v4;
  unint64_t v736 = v4;
  uint64_t v116 = type metadata accessor for PersistenceTrigger();
  uint64_t v743 = *(void *)(v116 - 8);
  uint64_t v744 = v116;
  uint64_t v117 = MEMORY[0x270FA5388](v116);
  unint64_t v716 = (char *)&v630 - ((v118 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = MEMORY[0x270FA5388](v117);
  long long v742 = (char *)&v630 - v120;
  uint64_t v121 = MEMORY[0x270FA5388](v119);
  unint64_t v741 = (unint64_t)&v630 - v122;
  uint64_t v123 = MEMORY[0x270FA5388](v121);
  unint64_t v713 = (char *)&v630 - v124;
  uint64_t v125 = MEMORY[0x270FA5388](v123);
  long long v740 = (char *)&v630 - v126;
  uint64_t v127 = MEMORY[0x270FA5388](v125);
  uint64_t v712 = (char *)&v630 - v128;
  uint64_t v129 = MEMORY[0x270FA5388](v127);
  unint64_t v715 = (char *)&v630 - v130;
  uint64_t v131 = MEMORY[0x270FA5388](v129);
  unint64_t v714 = (char *)&v630 - v132;
  uint64_t v133 = MEMORY[0x270FA5388](v131);
  size_t v711 = (char *)&v630 - v134;
  uint64_t v135 = MEMORY[0x270FA5388](v133);
  uint64_t v137 = (char *)&v630 - v136;
  uint64_t v138 = MEMORY[0x270FA5388](v135);
  uint64_t v140 = (char *)&v630 - v139;
  uint64_t v141 = MEMORY[0x270FA5388](v138);
  uint64_t v143 = (char *)&v630 - v142;
  uint64_t v144 = MEMORY[0x270FA5388](v141);
  uint64_t v146 = (char *)&v630 - v145;
  uint64_t v147 = MEMORY[0x270FA5388](v144);
  uint64_t v149 = (char *)&v630 - v148;
  uint64_t v150 = MEMORY[0x270FA5388](v147);
  uint64_t v152 = (char *)&v630 - v151;
  uint64_t v153 = MEMORY[0x270FA5388](v150);
  uint64_t v155 = (char *)&v630 - v154;
  uint64_t v156 = MEMORY[0x270FA5388](v153);
  unint64_t v158 = (char *)&v630 - v157;
  MEMORY[0x270FA5388](v156);
  id v160 = (char *)&v630 - v159;
  unsigned __int8 v161 = v745;
  uint64_t result = sub_24D77FA28((uint64_t)v747, v746);
  if (v161) {
    return result;
  }
  size_t v631 = v158;
  size_t v632 = v155;
  long long v633 = v140;
  unint64_t v634 = v152;
  unint64_t v635 = v149;
  uint64_t v163 = v740;
  unint64_t v636 = v146;
  unint64_t v637 = v137;
  unint64_t v165 = v741;
  id v164 = (unsigned __int8 *)v742;
  v630 = v143;
  long long v745 = 0;
  uint64_t v166 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v743 + 16);
  v166(v160, v747, v744);
  unint64_t v726 = v160;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v167 = v711;
      uint64_t v168 = v744;
      v166(v711, (unsigned __int8 *)v726, v744);
      uint64_t v169 = v739;
      uint64_t v170 = v737;
      uint64_t v171 = &v167[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v172 = v733;
      uint64_t v173 = (uint64_t)v727;
      (*(void (**)(char *, char *, uint64_t))(v733 + 32))(v727, v167, v169);
      id v174 = v732;
      uint64_t v175 = (uint64_t)v717;
      (*((void (**)(char *, char *, void))v732 + 4))(v717, v171, v170);
      uint64_t v176 = v745;
      sub_24DA4FB58(v173, 0);
      if (v176) {
        goto LABEL_28;
      }
      sub_24DA513B4(v175, 0);
      long long v745 = 0;
      (*((void (**)(uint64_t, void (*)(void, void, void)))v174 + 1))(v175, v170);
      id v441 = *(void (**)(void, uint64_t))(v172 + 8);
      uint64_t v442 = (uint64_t *)&v754;
      goto LABEL_111;
    case 2u:
      id v164 = (unsigned __int8 *)v631;
      v166(v631, (unsigned __int8 *)v726, v744);
      uint64_t v177 = v739;
      unint64_t v178 = v734;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v180 = v735;
      unsigned int v181 = v737;
      uint64_t v182 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v177;
      long long v749 = v181;
      unint64_t v750 = (void (*)(void, void))AssociatedConformanceWitness;
      uint64_t v751 = v182;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_37;
      }
      uint64_t v184 = v733;
      uint64_t v185 = (uint64_t)v707;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v733 + 32))(v707, v164, v177);
      uint64_t v186 = v745;
      uint64_t v187 = v746;
      uint64_t v188 = v691;
      sub_24D4759C8(v185, v691);
      long long v745 = v186;
      if (v186)
      {
        (*(void (**)(uint64_t, uint64_t))(v184 + 8))(v185, v177);
        goto LABEL_151;
      }
      uint64_t v405 = v708;
      uint64_t v406 = v709;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v708 + 48))(v188, 1, v709) == 1)
      {
        (*(void (**)(char *, uint64_t))(v733 + 8))(v707, v177);
        goto LABEL_86;
      }
      uint64_t v468 = v670;
      (*(void (**)(char *, uint64_t, uint64_t))(v405 + 32))(v670, v188, v406);
      unsigned int v469 = *(void (**)(char *))(v666 + 16);
      id v470 = v653;
      long long v747 = (unsigned __int8 *)&v468[*(int *)(v406 + 52)];
      v469(v653);
      unint64_t v471 = v732;
      id v472 = v737;
      if ((*((unsigned int (**)(char *, uint64_t, void))v732 + 6))(v470, 1, v737) == 1)
      {
        (*(void (**)(char *, uint64_t))(v708 + 8))(v468, v709);
        (*(void (**)(char *, uint64_t))(v733 + 8))(v707, v177);
        (*(void (**)(char *, uint64_t))(v666 + 8))(v470, v667);
        goto LABEL_151;
      }
      uint64_t v512 = (void (*)(char *, char *, void))*((void *)v471 + 4);
      uint64_t v513 = (uint64_t)v651;
      v512(v651, v470, v472);
      if ((v747[*(int *)(type metadata accessor for ItemReconciliationHalf() + 52)] | 4) == 4)
      {
        int v514 = v670[v677[14]];
        uint64_t v515 = v708;
        uint64_t v516 = v644;
        uint64_t v517 = v709;
        (*(void (**)(char *))(v708 + 16))(v644);
        if (v514 == 6)
        {
          uint64_t v518 = v516;
          uint64_t v519 = *(void (**)(char *, uint64_t))(v515 + 8);
          v519(v518, v517);
          goto LABEL_201;
        }
        int v558 = v516[*(int *)(v517 + 56)];
        uint64_t v559 = v516;
        uint64_t v519 = *(void (**)(char *, uint64_t))(v515 + 8);
        v519(v559, v517);
        if (v558 != 1)
        {
LABEL_201:
          int v560 = v643;
          unint64_t v561 = v745;
          (*(void (**)(char *, uint64_t))(*(void *)v187[2].Kind + 240))(v707, 1);
          long long v747 = (unsigned __int8 *)v519;
          if (v561)
          {

            long long v745 = 0;
          }
          else
          {
            long long v745 = 0;
            uint64_t v570 = v723;
            uint64_t v571 = v724;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v723 + 48))(v560, 1, v724) == 1)
            {
              (*(void (**)(char *, uint64_t))(v725 + 8))(v560, v731);
            }
            else
            {
              uint64_t v586 = v639;
              sub_24DA6996C((uint64_t)&v560[*(int *)(v571 + 48)], v639, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
              (*(void (**)(char *, uint64_t))(v570 + 8))(v560, v571);
              int v587 = *(unsigned __int8 *)(v586 + *(int *)(v650 + 80));
              sub_24DA684C4(v586, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
              if (v587 == 1)
              {
                (*((void (**)(char *, void (*)(void, void, void)))v732 + 1))(v651, v737);
                v519(v670, v709);
LABEL_266:
                (*(void (**)(char *, uint64_t))(v733 + 8))(v707, v739);
                goto LABEL_151;
              }
            }
          }
          long long v748 = v178;
          long long v749 = v180;
          unint64_t v588 = v738;
          uint64_t v589 = (uint64_t)v736;
          unint64_t v750 = v738;
          uint64_t v751 = (uint64_t)v736;
          type metadata accessor for Mutation();
          long long v742 = (char *)sub_24DCC9C98();
          long long v748 = v178;
          long long v749 = v180;
          unint64_t v750 = v588;
          uint64_t v751 = v589;
          type metadata accessor for ReconciliationMutation();
          sub_24DCCAD88();
          swift_allocObject();
          uint64_t v590 = sub_24DCC9C58();
          uint64_t v592 = v591;
          type metadata accessor for ReconciliationSideMutation();
          long long v593 = (unsigned char *)(v592 + *(int *)(swift_getTupleTypeMetadata2() + 48));
          uint64_t v594 = v733;
          long long v595 = v707;
          uint64_t v596 = v739;
          (*(void (**)(uint64_t, char *, uint64_t))(v733 + 16))(v592, v707, v739);
          swift_storeEnumTagMultiPayload();
          *long long v593 = 2;
          swift_storeEnumTagMultiPayload();
          swift_storeEnumTagMultiPayload();
          uint64_t v597 = v590;
          uint64_t v598 = (uint64_t)v742;
          uint64_t v599 = sub_24D785484(v597);
          long long v600 = v745;
          sub_24D6E6464(v598, v599);
          long long v745 = v600;
          if (v600)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            (*((void (**)(char *, void (*)(void, void, void)))v732 + 1))(v651, v737);
            ((void (*)(char *, uint64_t))v747)(v670, v709);
            (*(void (**)(char *, uint64_t))(v594 + 8))(v595, v596);
            goto LABEL_151;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v601 = v709;
          size_t v602 = v670;
          if (v670[*(int *)(v709 + 56)] == 1)
          {
            sub_24DA3C510();
            long long v748 = v735;
            long long v749 = v734;
            unint64_t v750 = v736;
            uint64_t v751 = (uint64_t)v738;
            type metadata accessor for Ingestion.FetchChildrenMetadata();
            uint64_t v603 = sub_24D7C0440();
            uint64_t v604 = (uint64_t)v651;
            uint64_t v606 = sub_24DC09730((uint64_t)v651, v603, v605, 0);
            sub_24D9ACA64();
            long long v607 = v745;
            sub_24D912448(v606);
            long long v745 = v607;
            if (v607)
            {
              swift_release();
              swift_release();
              (*((void (**)(uint64_t, void (*)(void, void, void)))v732 + 1))(v604, v737);
              long long v608 = v602;
              uint64_t v609 = v709;
LABEL_265:
              ((void (*)(char *, uint64_t))v747)(v608, v609);
              goto LABEL_266;
            }
            swift_release();
            swift_release();
            uint64_t v601 = v709;
          }
          else
          {
            uint64_t v604 = (uint64_t)v651;
          }
          (*((void (**)(uint64_t, void (*)(void, void, void)))v732 + 1))(v604, v737);
          long long v608 = v602;
          uint64_t v609 = v601;
          goto LABEL_265;
        }
        (*((void (**)(char *, void (*)(void, void, void)))v732 + 1))(v651, v737);
        v519(v670, v517);
      }
      else
      {
        (*((void (**)(uint64_t, void (*)(void, void, void)))v732 + 1))(v513, v737);
        (*(void (**)(char *, uint64_t))(v708 + 8))(v670, v709);
      }
      (*(void (**)(char *, uint64_t))(v733 + 8))(v707, v177);
      goto LABEL_151;
    case 3u:
      id v164 = (unsigned __int8 *)v632;
      uint64_t v189 = (void (*)(char *, char *, uint64_t))v166;
      unint64_t v190 = v726;
      uint64_t v191 = v744;
      v189(v632, v726, v744);
      uint64_t v192 = v739;
      uint64_t v193 = swift_getAssociatedConformanceWitness();
      uint64_t v194 = v737;
      uint64_t v195 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v192;
      long long v749 = v194;
      unint64_t v750 = (void (*)(void, void))v193;
      uint64_t v751 = v195;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_37;
      }
      uint64_t v196 = v733;
      uint64_t v197 = (uint64_t)v686;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v733 + 32))(v686, v164, v192);
      uint64_t v198 = v745;
      sub_24DA4CF70(v197, 0, 0);
      long long v745 = v198;
      if (v198)
      {
        (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v197, v192);
        uint64_t v199 = *(uint64_t (**)(char *, uint64_t))(v743 + 8);
        uint64_t v200 = v190;
        goto LABEL_49;
      }
      (*(void (**)(uint64_t, uint64_t))(v196 + 8))(v197, v192);
      goto LABEL_151;
    case 4u:
      uint64_t v201 = v635;
      uint64_t v202 = v726;
      uint64_t v191 = v744;
      v166(v635, (unsigned __int8 *)v726, v744);
      uint64_t v203 = v739;
      uint64_t v204 = swift_getAssociatedConformanceWitness();
      uint64_t v205 = v737;
      uint64_t v206 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v203;
      long long v749 = v205;
      unint64_t v750 = (void (*)(void, void))v204;
      uint64_t v751 = v206;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      uint64_t v207 = &v201[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v208 = *(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8);
        v208(v207, v183);
        v208(v201, v183);
        goto LABEL_151;
      }
      uint64_t v329 = v733;
      uint64_t v330 = (uint64_t)v688;
      (*(void (**)(char *, char *, uint64_t))(v733 + 32))(v688, v201, v203);
      uint64_t v331 = v745;
      sub_24DA4CF70(v330, 1, 0);
      long long v745 = v331;
      if (!v331)
      {
        (*(void (**)(uint64_t, uint64_t))(v329 + 8))(v330, v203);
        goto LABEL_90;
      }
      (*(void (**)(uint64_t, uint64_t))(v329 + 8))(v330, v203);
      (*(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8))(v207, v183);
      uint64_t v199 = *(uint64_t (**)(char *, uint64_t))(v743 + 8);
      uint64_t v200 = v202;
LABEL_49:
      uint64_t v332 = v191;
      return v199(v200, v332);
    case 5u:
      uint64_t v209 = (void (*)(char *, char *, uint64_t))v166;
      char v210 = v633;
      v209(v633, v726, v744);
      uint64_t v211 = v731;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v213 = &v210[*(int *)(TupleTypeMetadata3 + 48)];
      unint64_t v741 = *(void *)&v210[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v214 = v725;
      unint64_t v215 = *(void (**)(char *, char *, uint64_t))(v725 + 32);
      uint64_t v216 = v729;
      v215(v729, v210, v211);
      uint64_t v217 = v730;
      v215(v730, v213, v211);
      uint64_t v218 = v719;
      long long v747 = *(unsigned __int8 **)(v214 + 16);
      long long v742 = (char *)(v214 + 16);
      ((void (*)(char *, char *, uint64_t))v747)(v719, v216, v211);
      uint64_t v219 = v723;
      uint64_t v220 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v723 + 48);
      uint64_t v221 = v724;
      if (v220(v218, 1, v724) == 1)
      {
        uint64_t v222 = *(void (**)(char *, uint64_t))(v214 + 8);
        v222(v216, v211);
        v222(v217, v211);
        v222(v218, v211);
        goto LABEL_151;
      }
      id v333 = *(void (**)(void, void, void))(v219 + 32);
      id v334 = v217;
      uint64_t v335 = v710;
      long long v740 = (char *)(v219 + 32);
      unint64_t v737 = v333;
      v333(v710, v218, v221);
      if (v220(v334, 1, v221) == 1)
      {
        unint64_t v732 = v220;
        uint64_t v336 = v733;
        uint64_t v337 = (uint64_t)v680;
        uint64_t v338 = v335;
        uint64_t v339 = (uint64_t)v335;
        uint64_t v340 = v739;
        (*(void (**)(char *, char *, uint64_t))(v733 + 16))(v680, v338, v739);
        sub_24D472A28();
        unint64_t v341 = (void *)swift_allocError();
        *uint64_t v342 = 2;
        uint64_t v343 = v745;
        sub_24DA4CF70(v337, 3, (uint64_t)v341);
        uint64_t v344 = v685;
        if (v343)
        {

          (*(void (**)(uint64_t, uint64_t))(v336 + 8))(v337, v340);
          (*(void (**)(uint64_t, uint64_t))(v723 + 8))(v339, v724);
          uint64_t v345 = *(void (**)(char *, uint64_t))(v725 + 8);
          uint64_t v346 = v731;
          v345(v729, v731);
          v345(v730, v346);
          return (*(uint64_t (**)(char *, uint64_t))(v743 + 8))(v726, v744);
        }
        (*(void (**)(uint64_t, uint64_t))(v336 + 8))(v337, v340);

        uint64_t v463 = v652;
        sub_24D4759C8(v339, v652);
        long long v745 = 0;
        uint64_t v464 = v339;
        uint64_t v524 = v708;
        uint64_t v525 = v709;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v708 + 48))(v463, 1, v709) == 1)
        {
          (*(void (**)(uint64_t, uint64_t))(v684 + 8))(v463, v701);
          unint64_t v397 = v736;
          uint64_t v214 = v725;
LABEL_193:
          unint64_t v553 = v745;
          sub_24DA4FB58(v464, 0);
          long long v745 = v553;
          uint64_t v220 = v732;
          if (v553)
          {
            (*(void (**)(uint64_t, uint64_t))(v723 + 8))(v464, v724);
            goto LABEL_117;
          }
          uint64_t v221 = v724;
          uint64_t v219 = v723;
          goto LABEL_79;
        }
        BOOL v552 = sub_24DB86F3C(v525);
        (*(void (**)(uint64_t, uint64_t))(v524 + 8))(v463, v525);
        uint64_t v464 = (uint64_t)v710;
        unint64_t v397 = v736;
        uint64_t v214 = v725;
        if (!v552) {
          goto LABEL_193;
        }
        uint64_t v221 = v724;
        uint64_t v219 = v723;
        uint64_t v220 = v732;
      }
      else
      {
        unint64_t v397 = v736;
        uint64_t v344 = v685;
      }
LABEL_79:
      unint64_t v398 = v730;
      uint64_t v399 = v731;
      ((void (*)(char *, char *, uint64_t))v747)(v344, v730, v731);
      if (v220(v344, 1, v221) == 1)
      {
        (*(void (**)(char *, uint64_t))(v219 + 8))(v710, v221);
        uint64_t v400 = *(void (**)(char *, uint64_t))(v214 + 8);
        v400(v729, v399);
        v400(v398, v399);
        v400(v344, v399);
        goto LABEL_151;
      }
      uint64_t v444 = v669;
      v737(v669, v344, v221);
      if ((v741 & 0x100000000000) == 0)
      {
        uint64_t v445 = *(void (**)(char *, uint64_t))(v219 + 8);
        v445(v444, v221);
        v445(v710, v221);
LABEL_117:
        id v446 = *(void (**)(char *, uint64_t))(v214 + 8);
        uint64_t v447 = v731;
        v446(v729, v731);
        v446(v730, v447);
        goto LABEL_151;
      }
      uint64_t v492 = (uint64_t)v397;
      uint64_t v493 = v650;
      uint64_t v494 = v219;
      char v495 = v444[*(int *)(v221 + 48) + *(int *)(v650 + 60)];
      unsigned int v496 = v649;
      (*(void (**)(char *, char *, uint64_t))(v494 + 16))(v649, v444, v221);
      uint64_t v497 = v731;
      if (v495)
      {
        uint64_t v498 = *(void (**)(char *, uint64_t))(v494 + 8);
        v498(v496, v221);
LABEL_142:
        uint64_t v499 = v710;
        size_t v500 = v730;
LABEL_211:
        unint64_t v568 = v729;
        v498(v444, v221);
        v498(v499, v221);
        long long v569 = *(void (**)(char *, uint64_t))(v725 + 8);
        v569(v568, v497);
        v569(v500, v497);
        goto LABEL_151;
      }
      uint64_t v537 = *(void *)&v496[*(int *)(v221 + 48) + *(int *)(v493 + 76)];
      uint64_t v498 = *(void (**)(char *, uint64_t))(v494 + 8);
      v498(v496, v221);
      uint64_t v379 = v743;
      if (!v537)
      {
        uint64_t v499 = v710;
        size_t v500 = v730;
        uint64_t v444 = v669;
        goto LABEL_211;
      }
      long long v748 = v734;
      long long v749 = v735;
      unint64_t v750 = v738;
      uint64_t v751 = v492;
      uint64_t updated = type metadata accessor for Maintenance.UpdateClosestSyncRoot();
      uint64_t v539 = sub_24D7C043C(updated);
      uint64_t v444 = v669;
      uint64_t v541 = sub_24D732E04(v669, v539, v540, 0x4000000);
      sub_24D9ACA64();
      uint64_t v542 = v745;
      sub_24D912448(v541);
      long long v745 = v542;
      if (!v542)
      {
        swift_release();
        uint64_t v221 = v724;
        goto LABEL_142;
      }
      swift_release();
      uint64_t v543 = v724;
      v498(v444, v724);
      v498(v710, v543);
      uint64_t v544 = *(void (**)(char *, uint64_t))(v725 + 8);
      v544(v729, v497);
      v544(v730, v497);
      return (*(uint64_t (**)(char *, uint64_t))(v379 + 8))(v726, v744);
    case 6u:
      uint64_t v223 = v715;
      unint64_t v224 = (void (*)(char *, char *, uint64_t))v166;
      unint64_t v225 = v726;
      uint64_t v226 = v744;
      v224(v715, v726, v744);
      uint64_t v227 = v721;
      uint64_t v183 = sub_24DCCA3F8();
      uint64_t v228 = swift_getTupleTypeMetadata3();
      uint64_t v207 = &v223[*(int *)(v228 + 48)];
      uint64_t v229 = v720;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v720 + 48))(v223, 1, v227) == 1)
      {
        uint64_t v230 = *(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8);
        v230(v207, v183);
        uint64_t v231 = v223;
        goto LABEL_40;
      }
      uint64_t v347 = *(void *)&v223[*(int *)(v228 + 64)];
      uint64_t v348 = v703;
      (*(void (**)(uint64_t, char *, uint64_t))(v229 + 32))(v703, v223, v227);
      if ((v347 & 2) != 0)
      {
        long long v747 = (unsigned __int8 *)v207;
        uint64_t v401 = v745;
        uint64_t v402 = v681;
        (*(void (**)(uint64_t))(*(void *)v746[1].Kind + 152))(v348);
        uint64_t v403 = v348;
        uint64_t v404 = v743;
        long long v745 = v401;
        if (v401)
        {
          (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v403, v227);
          (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v747, v183);
          return (*(uint64_t (**)(char *, uint64_t))(v404 + 8))(v225, v226);
        }
        int v465 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v733 + 48))(v402, 1, v739);
        (*(void (**)(char *, uint64_t))(v664 + 8))(v402, v665);
        if (v465 == 1)
        {
          uint64_t v466 = v703;
          uint64_t v467 = v745;
          sub_24DA513B4(v703, 0);
          long long v745 = v467;
          id v164 = v747;
          if (v467)
          {
            (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v466, v227);
            (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v164, v183);
            return (*(uint64_t (**)(char *, uint64_t))(v404 + 8))(v225, v226);
          }
        }
        else
        {
          id v164 = v747;
        }
        (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v703, v227);
LABEL_37:
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v164, v183);
        goto LABEL_151;
      }
      (*(void (**)(uint64_t, uint64_t))(v229 + 8))(v348, v227);
LABEL_90:
      (*(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8))(v207, v183);
LABEL_151:
      uint64_t v332 = v744;
      uint64_t v199 = *(uint64_t (**)(char *, uint64_t))(v743 + 8);
      uint64_t v200 = v726;
      return v199(v200, v332);
    case 9u:
      id v232 = v714;
      id v233 = v726;
      uint64_t v234 = v744;
      v166(v714, (unsigned __int8 *)v726, v744);
      uint64_t v235 = v739;
      uint64_t v236 = swift_getAssociatedConformanceWitness();
      int64_t v237 = v737;
      uint64_t v238 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v235;
      long long v749 = v237;
      unint64_t v750 = (void (*)(void, void))v236;
      uint64_t v751 = v238;
      type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v239 = v732;
        uint64_t v240 = (uint64_t)v693;
        (*((void (**)(char *, char *, void))v732 + 4))(v693, v232, v237);
        int v241 = v745;
        sub_24DA513B4(v240, 0);
        uint64_t v242 = v743;
        long long v745 = v241;
        if (!v241)
        {
          (*((void (**)(uint64_t, void (*)(void, void, void)))v239 + 1))(v240, v237);
          goto LABEL_151;
        }
        (*((void (**)(uint64_t, void (*)(void, void, void)))v239 + 1))(v240, v237);
      }
      else
      {
        uint64_t v349 = v733;
        uint64_t v350 = (uint64_t)v689;
        (*(void (**)(char *, char *, uint64_t))(v733 + 32))(v689, v232, v235);
        uint64_t v351 = v745;
        sub_24DA4FB58(v350, 0);
        uint64_t v242 = v743;
        long long v745 = v351;
        if (!v351)
        {
          (*(void (**)(uint64_t, uint64_t))(v349 + 8))(v350, v235);
          goto LABEL_151;
        }
        (*(void (**)(uint64_t, uint64_t))(v349 + 8))(v350, v235);
      }
      return (*(uint64_t (**)(char *, uint64_t))(v242 + 8))(v233, v234);
    case 0xEu:
      uint64_t v243 = v634;
      uint64_t v244 = (void (*)(char *, char *, uint64_t))v166;
      uint64_t v245 = v726;
      uint64_t v246 = v744;
      v244(v634, v726, v744);
      uint64_t v247 = v739;
      uint64_t v248 = swift_getAssociatedConformanceWitness();
      double v249 = v737;
      uint64_t v250 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v247;
      long long v749 = v249;
      unint64_t v750 = (void (*)(void, void))v248;
      uint64_t v751 = v250;
      uint64_t v251 = type metadata accessor for ReconciliationID();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
      uint64_t v252 = *(void **)&v243[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      if (swift_getEnumCaseMultiPayload() == 1)
      {

        (*(void (**)(char *, uint64_t))(*(void *)(v251 - 8) + 8))(v243, v251);
        goto LABEL_151;
      }
      uint64_t v352 = v733;
      uint64_t v353 = (uint64_t)v687;
      (*(void (**)(char *, char *, uint64_t))(v733 + 32))(v687, v243, v247);
      id v354 = v252;
      uint64_t v355 = v745;
      sub_24DA4CF70(v353, 0, (uint64_t)v252);
      long long v745 = v355;
      if (v355)
      {
        (*(void (**)(uint64_t, uint64_t))(v352 + 8))(v353, v247);

        return (*(uint64_t (**)(char *, uint64_t))(v743 + 8))(v245, v246);
      }
      (*(void (**)(uint64_t, uint64_t))(v352 + 8))(v353, v247);

      goto LABEL_151;
    case 0xFu:
      uint64_t v253 = v636;
      v166(v636, (unsigned __int8 *)v726, v744);
      uint64_t v254 = v739;
      uint64_t v255 = (unsigned __int8 *)swift_getAssociatedConformanceWitness();
      uint64_t v256 = v737;
      uint64_t v257 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v254;
      long long v749 = v256;
      unint64_t v750 = (void (*)(void, void))v255;
      uint64_t v751 = v257;
      uint64_t v258 = type metadata accessor for ReconciliationID();
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v260 = *(void **)&v253[*(int *)(TupleTypeMetadata2 + 48)];
      if (swift_getEnumCaseMultiPayload() == 1)
      {

        uint64_t v261 = *(void (**)(void, uint64_t))(*(void *)(v258 - 8) + 8);
        uint64_t v262 = (void (*)(void, void))v253;
        goto LABEL_24;
      }
      long long v747 = v255;
      long long v742 = (char *)TupleTypeMetadata2;
      uint64_t v356 = v733;
      uint64_t v357 = *(void (**)(char *, char *, uint64_t))(v733 + 32);
      uint64_t v358 = (uint64_t)v700;
      v357(v700, v253, v254);
      id v359 = v260;
      uint64_t v361 = v745;
      uint64_t v360 = v746;
      sub_24DA4CF70(v358, 1, (uint64_t)v260);
      uint64_t v362 = v254;
      uint64_t v363 = v743;
      if (v361)
      {
        (*(void (**)(uint64_t, uint64_t))(v356 + 8))(v358, v362);

        return (*(uint64_t (**)(char *, uint64_t))(v363 + 8))(v726, v744);
      }
      unint64_t v741 = (unint64_t)v357;

      int v407 = v672;
      (*(void (**)(uint64_t))(*(void *)v360[2].Kind + 280))(v358);
      long long v745 = 0;
      uint64_t v490 = v733;
      uint64_t v491 = v739;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v733 + 48))(v407, 1, v739) == 1)
      {
        (*(void (**)(char *, uint64_t))(v490 + 8))(v700, v491);

        (*(void (**)(char *, uint64_t))(v664 + 8))(v407, v665);
        goto LABEL_151;
      }
      uint64_t v533 = (uint64_t)v645;
      ((void (*)(char *, char *, uint64_t))v741)(v645, v407, v491);
      unint64_t v534 = v700;
      if (sub_24DCC9798())
      {

        unint64_t v535 = *(void (**)(uint64_t, uint64_t))(v490 + 8);
        v535(v533, v491);
        uint64_t v536 = v534;
        goto LABEL_178;
      }
      uint64_t v554 = v745;
      uint64_t v188 = v642;
      sub_24D4759C8(v533, v642);
      long long v745 = v554;
      unint64_t v555 = v726;
      if (v554)
      {

        uint64_t v556 = *(void (**)(uint64_t, uint64_t))(v490 + 8);
        uint64_t v557 = v739;
        v556(v533, v739);
        v556((uint64_t)v534, v557);
        return (*(uint64_t (**)(char *, uint64_t))(v363 + 8))(v555, v744);
      }
      uint64_t v579 = v708;
      uint64_t v580 = v709;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v708 + 48))(v188, 1, v709) != 1)
      {
        unint64_t v610 = v638;
        (*(void (**)(char *, uint64_t, uint64_t))(v579 + 32))(v638, v188, v580);
        uint64_t v611 = v579;
        if (v610[v677[11]] == 1)
        {
          uint64_t v612 = *((int *)v742 + 12);
          uint64_t v613 = (uint64_t)v630;
          uint64_t v614 = v533;
          uint64_t v615 = v739;
          (*(void (**)(char *, uint64_t, uint64_t))(v490 + 16))(v630, v614, v739);
          swift_storeEnumTagMultiPayload();
          *(void *)(v613 + v612) = v260;
          uint64_t v616 = v744;
          swift_storeEnumTagMultiPayload();
          id v617 = v260;
          sub_24DA38760(v613);

          (*(void (**)(uint64_t, uint64_t))(v743 + 8))(v613, v616);
          (*(void (**)(char *, uint64_t))(v611 + 8))(v610, v709);
          unint64_t v618 = *(void (**)(char *, uint64_t))(v490 + 8);
          v618(v645, v615);
          v618(v700, v615);
          goto LABEL_151;
        }

        (*(void (**)(char *, uint64_t))(v579 + 8))(v610, v709);
        unint64_t v535 = *(void (**)(uint64_t, uint64_t))(v490 + 8);
        uint64_t v491 = v739;
        v535(v533, v739);
        uint64_t v536 = v700;
LABEL_178:
        v535((uint64_t)v536, v491);
        goto LABEL_151;
      }

      unint64_t v581 = *(void (**)(uint64_t, uint64_t))(v490 + 8);
      uint64_t v582 = v739;
      v581(v533, v739);
      v581((uint64_t)v534, v582);
LABEL_86:
      uint64_t v261 = *(void (**)(void, uint64_t))(v684 + 8);
      uint64_t v262 = (void (*)(void, void))v188;
LABEL_101:
      uint64_t v263 = v701;
      goto LABEL_150;
    case 0x10u:
      uint64_t v264 = v712;
      uint64_t v265 = v726;
      uint64_t v266 = v744;
      v166(v712, (unsigned __int8 *)v726, v744);
      long long v267 = *((_OWORD *)v264 + 1);
      v752[0] = *(_OWORD *)v264;
      v752[1] = v267;
      v752[2] = *((_OWORD *)v264 + 2);
      uint64_t v753 = *((void *)v264 + 6);
      long long v748 = v734;
      long long v749 = v735;
      unint64_t v750 = v738;
      uint64_t v751 = (uint64_t)v736;
      type metadata accessor for Ingestion.CollectCapturedContent();
      uint64_t v268 = sub_24D5D7B80((uint64_t)v752);
      uint64_t v269 = sub_24D7C043C(v268);
      uint64_t v271 = sub_24DBCB860((uint64_t)v752, v269, v270, 0x4000);
      sub_24D9ACA64();
      uint64_t v272 = v745;
      sub_24D912448(v271);
      long long v745 = v272;
      if (v272)
      {
        swift_release();
        sub_24D5D96E8((uint64_t)v752);
        return (*(uint64_t (**)(char *, uint64_t))(v743 + 8))(v265, v266);
      }
      swift_release();
      sub_24D5D96E8((uint64_t)v752);
      goto LABEL_151;
    case 0x12u:
      unint64_t v273 = v163;
      uint64_t v168 = v744;
      v166(v163, (unsigned __int8 *)v726, v744);
      uint64_t v169 = v739;
      uint64_t v170 = v737;
      uint64_t v274 = &v163[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v172 = v733;
      uint64_t v173 = (uint64_t)v728;
      (*(void (**)(char *, char *, uint64_t))(v733 + 32))(v728, v273, v169);
      id v174 = v732;
      uint64_t v175 = (uint64_t)v718;
      (*((void (**)(char *, char *, void))v732 + 4))(v718, v274, v170);
      unint64_t v275 = v745;
      sub_24DA4FB58(v173, 0);
      if (v275)
      {
LABEL_28:
        (*((void (**)(uint64_t, void (*)(void, void, void)))v174 + 1))(v175, v170);
        (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v173, v169);
        return (*(uint64_t (**)(char *, uint64_t))(v743 + 8))(v726, v168);
      }
      sub_24DA513B4(v175, 0);
      long long v745 = 0;
      (*((void (**)(uint64_t, void (*)(void, void, void)))v174 + 1))(v175, v170);
      id v441 = *(void (**)(void, uint64_t))(v172 + 8);
      uint64_t v442 = &v755;
LABEL_111:
      v441(*(v442 - 32), v169);
      goto LABEL_151;
    case 0x15u:
      uint64_t v276 = (uint64_t *)v713;
      v166(v713, (unsigned __int8 *)v726, v744);
      uint64_t v277 = *v276;
      if ((*v276 & 0x8000000000000000) == 0)
      {
        uint64_t v278 = v735;
        uint64_t v279 = v738;
        if ((*(unsigned char *)(v277 + 137) & 0x80) != 0)
        {
          uint64_t v387 = v745;
          sub_24DA3D018();
          uint64_t v280 = v743;
          long long v745 = v387;
          uint64_t v281 = (uint64_t)v704;
          if (v387)
          {
LABEL_74:
            swift_release();
            return (*(uint64_t (**)(char *, uint64_t))(v280 + 8))(v726, v744);
          }
        }
        else
        {
          uint64_t v280 = v743;
          uint64_t v281 = (uint64_t)v704;
        }
        id v388 = v734;
        long long v748 = v734;
        long long v749 = v278;
        id v389 = v736;
        unint64_t v750 = v279;
        uint64_t v751 = (uint64_t)v736;
        type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v390 = swift_dynamicCastClass();
        if (v390)
        {
          uint64_t v391 = v390;
          uint64_t v392 = v390 + *(void *)(*(void *)v390 + 576);
          uint64_t v393 = *(void (**)(char *, uint64_t, uint64_t))(v733 + 16);
          uint64_t v394 = (uint64_t)v682;
          v393(v682, v392, v739);
          if (*(unsigned char *)(v391 + 112) == 3)
          {
            uint64_t v395 = *(void **)(v391 + 96);
            id v396 = v395;
          }
          else
          {
            uint64_t v395 = 0;
          }
          swift_retain();
          uint64_t v443 = v745;
          sub_24DA4FB58(v394, v395);
          if (v443)
          {
            swift_release();

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v733 + 8))(v394, v739);
            return (*(uint64_t (**)(char *, uint64_t))(v743 + 8))(v726, v744);
          }
          uint64_t v448 = v394;
          uint64_t v449 = *(void (**)(uint64_t, uint64_t))(v733 + 8);
          uint64_t v450 = v739;
          v733 += 8;
          v449(v448, v739);

          uint64_t v451 = (uint64_t)v659;
          v393(v659, v392, v450);
          int v452 = sub_24DB1702C();
          id v453 = *(void (**)(long long *))(v391 + 128);
          if (*(unsigned char *)(v391 + 112) == 3)
          {
            id v454 = *(void **)(v391 + 96);
            id v455 = v454;
          }
          else
          {
            id v454 = 0;
          }
          sub_24DA52C48(v451, v452, v453, (uint64_t)v454);
          long long v745 = 0;
          swift_release();

          uint64_t v501 = ((uint64_t (*)(uint64_t, uint64_t))v449)(v451, v739);
          goto LABEL_252;
        }
        long long v748 = v388;
        long long v749 = v278;
        unint64_t v750 = v279;
        uint64_t v751 = (uint64_t)v389;
        type metadata accessor for Ingestion.FetchChildrenMetadata();
        uint64_t v434 = swift_dynamicCastClass();
        if (v434)
        {
          uint64_t v435 = v434;
          uint64_t v436 = v434 + *(void *)(*(void *)v434 + 576);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v733 + 16))(v281, v436, v739);
          int v437 = sub_24DB1702C();
          unint64_t v438 = *(void (**)(long long *))(v435 + 128);
          if (*(unsigned char *)(v435 + 112) == 3)
          {
            id v439 = *(void **)(v435 + 96);
            id v440 = v439;
          }
          else
          {
            id v439 = 0;
          }
          swift_retain();
          uint64_t v511 = v745;
          sub_24DA52C48(v281, v437, v438, (uint64_t)v439);
          long long v745 = v511;
          if (v511)
          {
            swift_release();

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v733 + 8))(v281, v739);
            return (*(uint64_t (**)(char *, uint64_t))(v280 + 8))(v726, v744);
          }
          (*(void (**)(uint64_t, uint64_t))(v733 + 8))(v281, v739);

          if (*(unsigned char *)(v435 + 112) == 3)
          {
            uint64_t v521 = *(void **)(v435 + 96);
            uint64_t v520 = *(void **)(v435 + 104);
            id v522 = v521;
            uint64_t v523 = v745;
            sub_24DA4FB58(v436, v521);
            long long v745 = v523;
            if (v523)
            {
              swift_release();
              uint64_t v506 = v521;
              uint64_t v507 = v520;
              goto LABEL_168;
            }
            swift_release();
            long long v576 = v521;
            unint64_t v577 = v520;
            goto LABEL_251;
          }
          uint64_t v501 = swift_release();
LABEL_252:
          uint64_t v258 = v722;
          uint64_t v621 = v658;
          uint64_t v622 = v657;
          unint64_t v623 = v656;
          (*(void (**)(uint64_t))(*(void *)v277 + 528))(v501);
          uint64_t v624 = v683;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v683 + 48))(v623, 1, v258) == 1)
          {
            swift_release();
            (*(void (**)(char *, uint64_t))(v622 + 8))(v623, v621);
            goto LABEL_151;
          }
          uint64_t v625 = (uint64_t)v646;
          (*(void (**)(char *, char *, uint64_t))(v624 + 32))(v646, v623, v258);
          if (*(unsigned char *)(v277 + 112) == 3)
          {
            size_t v626 = *(void **)(v277 + 96);
            id v627 = v626;
          }
          else
          {
            size_t v626 = 0;
          }
          sub_24DA39900(v625, (uint64_t)v626);

          swift_release();
          uint64_t v261 = *(void (**)(void, uint64_t))(v683 + 8);
          uint64_t v262 = (void (*)(void, void))v625;
LABEL_24:
          uint64_t v263 = v258;
LABEL_150:
          v261(v262, v263);
          goto LABEL_151;
        }
        long long v748 = v388;
        long long v749 = v278;
        unint64_t v750 = v279;
        uint64_t v751 = (uint64_t)v389;
        type metadata accessor for Ingestion.FetchContent();
        uint64_t v501 = swift_dynamicCastClass();
        if (v501)
        {
          if (*(unsigned char *)(v501 + 112) != 3) {
            goto LABEL_252;
          }
          uint64_t v502 = *(void **)(v501 + 96);
          size_t v503 = *(void **)(v501 + 104);
          uint64_t v504 = v501 + *(void *)(*(void *)v501 + 576);
          swift_retain();
          sub_24D3F1C98(v502, v503, 3);
          uint64_t v505 = v745;
          sub_24DA4FB58(v504, v502);
          long long v745 = v505;
          if (v505)
          {
            swift_release();
            uint64_t v506 = v502;
            uint64_t v507 = v503;
LABEL_168:
            sub_24D3E380C(v506, v507, 3);
            goto LABEL_74;
          }
        }
        else
        {
          long long v748 = v388;
          long long v749 = v278;
          unint64_t v750 = v279;
          uint64_t v751 = (uint64_t)v389;
          type metadata accessor for Ingestion.MergeItems();
          uint64_t v546 = swift_dynamicCastClass();
          if (v546)
          {
            uint64_t v547 = v546;
            uint64_t v548 = (uint64_t)v641;
            (*(void (**)(char *, uint64_t, uint64_t))(v733 + 16))(v641, v546 + *(void *)(*(void *)v546 + 584), v739);
            if (*(unsigned char *)(v547 + 112) == 3)
            {
              uint64_t v549 = *(void **)(v547 + 96);
              id v550 = v549;
            }
            else
            {
              uint64_t v549 = 0;
            }
            swift_retain();
            unint64_t v578 = v745;
            sub_24DA4FB58(v548, v549);
            long long v745 = v578;
            if (v578)
            {

              swift_release_n();
              (*(void (**)(uint64_t, uint64_t))(v733 + 8))(v548, v739);
              return (*(uint64_t (**)(char *, uint64_t))(v280 + 8))(v726, v744);
            }

            swift_release();
            uint64_t v501 = (*(uint64_t (**)(uint64_t, uint64_t))(v733 + 8))(v548, v739);
            goto LABEL_252;
          }
          long long v748 = v278;
          long long v749 = v388;
          unint64_t v750 = v389;
          uint64_t v751 = (uint64_t)v279;
          type metadata accessor for Propagation.PropagationJob();
          uint64_t v572 = swift_dynamicCastClass();
          if (v572)
          {
            uint64_t v573 = v572;
            (*((void (**)(char *, uint64_t, void))v732 + 2))(v640, v572 + *(void *)(*(void *)v572 + 576), v737);
            if (*(unsigned char *)(v573 + 112) == 3)
            {
              uint64_t v574 = *(void **)(v573 + 96);
              id v575 = v574;
            }
            else
            {
              uint64_t v574 = 0;
            }
            swift_retain();
            uint64_t v628 = (uint64_t)v640;
            int v629 = v745;
            sub_24DA513B4((uint64_t)v640, v574);
            long long v745 = v629;
            if (v629)
            {

              swift_release_n();
              (*((void (**)(uint64_t, void (*)(void, void, void)))v732 + 1))(v628, v737);
              goto LABEL_151;
            }

            swift_release();
            uint64_t v501 = (*((uint64_t (**)(uint64_t, void (*)(void, void, void)))v732 + 1))(v628, v737);
            goto LABEL_252;
          }
          long long v748 = v388;
          long long v749 = v278;
          unint64_t v750 = v279;
          uint64_t v751 = (uint64_t)v389;
          type metadata accessor for Materialization.MaterializeItem();
          uint64_t v501 = swift_dynamicCastClass();
          if (!v501 || *(unsigned char *)(v501 + 112) != 3) {
            goto LABEL_252;
          }
          uint64_t v502 = *(void **)(v501 + 96);
          size_t v503 = *(void **)(v501 + 104);
          uint64_t v619 = v501 + *(void *)(*(void *)v501 + 576);
          swift_retain();
          sub_24D3F1C98(v502, v503, 3);
          size_t v620 = v745;
          sub_24DA4CF70(v619, 0, (uint64_t)v502);
          long long v745 = v620;
          if (v620)
          {
            swift_release();
            sub_24D3E380C(v502, v503, 3);
            swift_release();
            goto LABEL_151;
          }
        }
        swift_release();
        long long v576 = v502;
        unint64_t v577 = v503;
LABEL_251:
        sub_24D3E380C(v576, v577, 3);
        goto LABEL_252;
      }
      uint64_t v385 = v277 & 0x7FFFFFFFFFFFFFFFLL;
      if ((*(unsigned char *)((v277 & 0x7FFFFFFFFFFFFFFFLL) + 0x89) & 0x80) != 0)
      {
        uint64_t v421 = v745;
        sub_24DA3D018();
        uint64_t v379 = v743;
        uint64_t v422 = v744;
        long long v745 = v421;
        uint64_t v423 = v726;
        uint64_t v386 = v733;
        if (v421)
        {
          swift_release();
          return (*(uint64_t (**)(char *, uint64_t))(v379 + 8))(v423, v422);
        }
      }
      else
      {
        uint64_t v379 = v743;
        uint64_t v386 = v733;
      }
      uint64_t v424 = v734;
      uint64_t v425 = v735;
      long long v748 = v734;
      long long v749 = v735;
      uint64_t v426 = (uint64_t)v738;
      uint64_t v427 = v736;
      unint64_t v750 = v738;
      uint64_t v751 = (uint64_t)v736;
      type metadata accessor for Propagation.PropagationJob();
      uint64_t v428 = swift_dynamicCastClass();
      if (v428)
      {
        uint64_t v429 = v428;
        uint64_t v430 = (uint64_t)v668;
        (*(void (**)(char *, uint64_t, uint64_t))(v386 + 16))(v668, v428 + *(void *)(*(void *)v428 + 576), v739);
        if (*(unsigned char *)(v429 + 112) == 3)
        {
          id v431 = *(void **)(v429 + 96);
          id v432 = v431;
        }
        else
        {
          id v431 = 0;
        }
        int v486 = v676;
        uint64_t v487 = v679;
        size_t v488 = v678;
        swift_retain();
        unsigned int v489 = v745;
        sub_24DA4FB58(v430, v431);
        long long v745 = v489;
        if (v489)
        {

          swift_release_n();
          (*(void (**)(uint64_t, uint64_t))(v386 + 8))(v430, v739);
          return (*(uint64_t (**)(char *, uint64_t))(v379 + 8))(v726, v744);
        }

        swift_release();
        uint64_t v508 = (*(uint64_t (**)(uint64_t, uint64_t))(v386 + 8))(v430, v739);
        uint64_t v509 = v661;
        uint64_t v510 = v660;
LABEL_189:
        uint64_t v551 = v662;
        goto LABEL_229;
      }
      long long v748 = v425;
      long long v749 = v424;
      unint64_t v750 = v427;
      uint64_t v751 = v426;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v456 = swift_dynamicCastClass();
      if (v456)
      {
        uint64_t v457 = v456;
        id v458 = v732;
        uint64_t v459 = (uint64_t)v648;
        id v460 = v737;
        (*((void (**)(char *, uint64_t, void))v732 + 2))(v648, v456 + *(void *)(*(void *)v456 + 576), v737);
        if (*(unsigned char *)(v457 + 112) == 3)
        {
          char v461 = *(void **)(v457 + 96);
          id v462 = v461;
        }
        else
        {
          char v461 = 0;
        }
        uint64_t v487 = v679;
        size_t v488 = v678;
        swift_retain();
        uint64_t v545 = v745;
        sub_24DA513B4(v459, v461);
        long long v745 = v545;
        if (v545)
        {
          swift_release();

          swift_release();
          (*((void (**)(uint64_t, void (*)(void, void, void)))v458 + 1))(v459, v460);
          return (*(uint64_t (**)(char *, uint64_t))(v379 + 8))(v726, v744);
        }
        swift_release();

        uint64_t v508 = (*((uint64_t (**)(uint64_t, void (*)(void, void, void)))v458 + 1))(v459, v460);
        uint64_t v509 = v661;
        uint64_t v510 = v660;
        int v486 = v676;
        goto LABEL_189;
      }
      long long v748 = v425;
      long long v749 = v424;
      unint64_t v750 = v427;
      uint64_t v751 = v426;
      type metadata accessor for Ingestion.FetchChildrenMetadata();
      uint64_t v508 = swift_dynamicCastClass();
      if (v508)
      {
        if (*(unsigned char *)(v508 + 112) != 3)
        {
LABEL_227:
          uint64_t v509 = v661;
          uint64_t v510 = v660;
          int v486 = v676;
          uint64_t v551 = v662;
          goto LABEL_228;
        }
      }
      else
      {
        long long v748 = v425;
        long long v749 = v424;
        unint64_t v750 = v427;
        uint64_t v751 = v426;
        type metadata accessor for Ingestion.FetchContent();
        uint64_t v508 = swift_dynamicCastClass();
        uint64_t v551 = v662;
        if (!v508 || *(unsigned char *)(v508 + 112) != 3)
        {
          uint64_t v509 = v661;
          uint64_t v510 = v660;
          int v486 = v676;
LABEL_228:
          uint64_t v487 = v679;
          size_t v488 = v678;
LABEL_229:
          (*(void (**)(uint64_t))(*(void *)v385 + 528))(v508);
          if ((*(unsigned int (**)(char *, uint64_t, void *))(v510 + 48))(v488, 1, v509) == 1)
          {
            swift_release();
            (*(void (**)(char *, uint64_t))(v487 + 8))(v488, v551);
          }
          else
          {
            (*(void (**)(char *, char *, void *))(v510 + 32))(v486, v488, v509);
            uint64_t v583 = v647;
            sub_24DA02614(v509, v647);
            if (*(unsigned char *)(v385 + 112) == 3)
            {
              unint64_t v584 = *(void **)(v385 + 96);
              id v585 = v584;
            }
            else
            {
              unint64_t v584 = 0;
            }
            sub_24DA39900(v583, (uint64_t)v584);

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v683 + 8))(v583, v722);
            (*(void (**)(char *, void *))(v510 + 8))(v486, v509);
          }
          goto LABEL_151;
        }
      }
      size_t v562 = *(void **)(v508 + 96);
      size_t v563 = *(void **)(v508 + 104);
      uint64_t v564 = v508 + *(void *)(*(void *)v508 + 576);
      swift_retain();
      sub_24D3F1C98(v562, v563, 3);
      uint64_t v565 = v745;
      sub_24DA513B4(v564, v562);
      long long v745 = v565;
      if (v565)
      {
        swift_release();
        sub_24D3E380C(v562, v563, 3);
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v379 + 8))(v726, v744);
      }
      swift_release();
      sub_24D3E380C(v562, v563, 3);
      goto LABEL_227;
    case 0x1Bu:
      unint64_t v282 = v165;
      unint64_t v283 = v165;
      uint64_t v284 = v726;
      uint64_t v285 = v744;
      v166((char *)v283, (unsigned __int8 *)v726, v744);
      uint64_t v286 = v722;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v287 = v698;
        unint64_t v288 = v697;
        uint64_t v289 = v699;
        (*(void (**)(char *, unint64_t, uint64_t))(v698 + 32))(v697, v282, v699);
        int64_t v290 = v746;
        size_t v291 = (void *)MEMORY[0x270FA5388](*(uint64_t *)((char *)&v746->Kind + qword_26B1A2620));
        *(&v630 - 2) = (char *)v290;
        *(&v630 - 1) = v288;
        unint64_t v292 = v745;
        sub_24D6006D8(v291, (void (*)(void))sub_24DA6848C);
        uint64_t v293 = v743;
        long long v745 = v292;
        if (!v292)
        {
          uint64_t v294 = *(void (**)(char *, char *, uint64_t))(v287 + 16);
          uint64_t v295 = v674;
          v294(v674, v288, v289);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            uint64_t v296 = sub_24DCCA3F8();
            long long v747 = (unsigned __int8 *)v294;
            uint64_t v297 = v296;
            uint64_t v298 = v737;
            uint64_t v299 = swift_getTupleTypeMetadata2();
            (*(void (**)(char *, uint64_t))(*(void *)(v297 - 8) + 8))(&v295[*(int *)(v299 + 48)], v297);
            (*((void (**)(char *, void (*)(void, void, void)))v732 + 1))(v295, v298);
            uint64_t v300 = (uint64_t)v675;
            ((void (*)(char *, char *, uint64_t))v747)(v675, v288, v289);
LABEL_96:
            swift_storeEnumTagMultiPayload();
            sub_24DA39900(v300, 0);
            (*(void (**)(uint64_t, uint64_t))(v683 + 8))(v300, v286);
            (*(void (**)(char *, uint64_t))(v287 + 8))(v288, v289);
            goto LABEL_151;
          }
          goto LABEL_107;
        }
      }
      else
      {
        uint64_t v287 = v695;
        unint64_t v288 = v694;
        uint64_t v289 = v696;
        (*(void (**)(char *, unint64_t, uint64_t))(v695 + 32))(v694, v282, v696);
        uint64_t v364 = v746;
        uint64_t v365 = (void *)MEMORY[0x270FA5388](*(uint64_t *)((char *)&v746->Kind + qword_26B1A2620));
        *(&v630 - 2) = (char *)v364;
        *(&v630 - 1) = v288;
        uint64_t v366 = v745;
        sub_24D6006D8(v365, (void (*)(void))sub_24DA684A8);
        uint64_t v293 = v743;
        long long v745 = v366;
        if (!v366)
        {
          int v408 = *(void (**)(char *, char *, uint64_t))(v287 + 16);
          uint64_t v295 = v673;
          v408(v673, v288, v289);
          if (swift_getEnumCaseMultiPayload() == 6)
          {
            uint64_t v409 = sub_24DCCA3F8();
            long long v747 = (unsigned __int8 *)v408;
            uint64_t v410 = v409;
            uint64_t v411 = v739;
            uint64_t v412 = swift_getTupleTypeMetadata2();
            (*(void (**)(char *, uint64_t))(*(void *)(v410 - 8) + 8))(&v295[*(int *)(v412 + 48)], v410);
            (*(void (**)(char *, uint64_t))(v733 + 8))(v295, v411);
            uint64_t v300 = (uint64_t)v675;
            ((void (*)(char *, char *, uint64_t))v747)(v675, v288, v289);
            goto LABEL_96;
          }
LABEL_107:
          uint64_t v433 = *(void (**)(char *, uint64_t))(v287 + 8);
          v433(v288, v289);
          v433(v295, v289);
          goto LABEL_151;
        }
      }
      (*(void (**)(char *, uint64_t))(v287 + 8))(v288, v289);
      return (*(uint64_t (**)(char *, uint64_t))(v293 + 8))(v284, v285);
    case 0x1Eu:
      v166((char *)v164, (unsigned __int8 *)v726, v744);
      uint64_t v301 = v739;
      uint64_t v302 = v734;
      uint64_t v303 = swift_getAssociatedConformanceWitness();
      uint64_t v304 = (uint64_t)v736;
      long long v305 = v735;
      os_log_t v306 = v737;
      uint64_t v307 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v301;
      long long v749 = v306;
      unint64_t v750 = (void (*)(void, void))v303;
      uint64_t v751 = v307;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1) {
        goto LABEL_37;
      }
      uint64_t v367 = v733;
      uint64_t v368 = v690;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v733 + 32))(v690, v164, v301);
      long long v748 = v302;
      long long v749 = v305;
      unint64_t v750 = v738;
      uint64_t v751 = v304;
      uint64_t v369 = type metadata accessor for Maintenance.IgnoreChildrenOfIgnoredHierarchy();
      uint64_t v370 = sub_24D7C043C(v369);
      uint64_t v372 = sub_24D732E04(v368, v370, v371, 0);
      sub_24D9ACA64();
      uint64_t v373 = v745;
      sub_24D912448(v372);
      long long v745 = v373;
      (*(void (**)(char *, uint64_t))(v367 + 8))(v368, v301);
      swift_release();
      goto LABEL_151;
    case 0x1Fu:
      uint64_t v308 = v637;
      uint64_t v309 = (void (*)(char *, char *, uint64_t))v166;
      uint64_t v310 = v744;
      v309(v637, v726, v744);
      uint64_t v311 = v739;
      uint64_t v312 = swift_getAssociatedConformanceWitness();
      uint64_t v313 = v737;
      uint64_t v314 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v311;
      long long v749 = v313;
      unint64_t v750 = (void (*)(void, void))v312;
      uint64_t v751 = v314;
      uint64_t v183 = type metadata accessor for ReconciliationID();
      uint64_t v315 = (unsigned __int8 *)&v308[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v230 = *(void (**)(char *, uint64_t))(*(void *)(v183 - 8) + 8);
        v230((char *)v315, v183);
        uint64_t v231 = v308;
LABEL_40:
        v230(v231, v183);
        goto LABEL_151;
      }
      long long v747 = v315;
      uint64_t v374 = v308;
      uint64_t v375 = v733;
      uint64_t v376 = v705;
      (*(void (**)(uint64_t, char *, uint64_t))(v733 + 32))(v705, v374, v311);
      id v377 = v745;
      uint64_t v378 = v706;
      sub_24D4759C8(v376, v706);
      uint64_t v379 = v743;
      long long v745 = v377;
      if (v377)
      {
        (*(void (**)(uint64_t, uint64_t))(v375 + 8))(v376, v311);
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v747, v183);
        return (*(uint64_t (**)(char *, uint64_t))(v379 + 8))(v726, v310);
      }
      uint64_t v413 = v684;
      id v414 = v671;
      uint64_t v415 = v378;
      uint64_t v416 = v701;
      (*(void (**)(char *, uint64_t, uint64_t))(v684 + 16))(v671, v415, v701);
      uint64_t v417 = v708;
      uint64_t v418 = v709;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v708 + 48))(v414, 1, v709) == 1)
      {
        (*(void (**)(char *, uint64_t))(v413 + 8))(v414, v416);
      }
      else
      {
        uint64_t v473 = v655;
        uint64_t v474 = v654;
        uint64_t v475 = v677;
        (*(void (**)(char *, char *, int *))(v655 + 16))(v654, v414, v677);
        (*(void (**)(char *, uint64_t))(v417 + 8))(v414, v418);
        uint64_t v476 = *(void *)&v474[v475[9]];
        unint64_t v477 = v475;
        uint64_t v413 = v684;
        (*(void (**)(char *, int *))(v473 + 8))(v474, v477);
        if ((v476 & 1) == 0)
        {
          uint64_t v478 = v739;
          uint64_t v479 = v701;
          uint64_t v480 = v706;
          uint64_t v481 = v705;
LABEL_149:
          (*(void (**)(uint64_t, uint64_t))(v413 + 8))(v480, v479);
          (*(void (**)(uint64_t, uint64_t))(v375 + 8))(v481, v478);
          uint64_t v261 = *(void (**)(void, uint64_t))(*(void *)(v183 - 8) + 8);
          uint64_t v262 = (void (*)(void, void))v747;
          uint64_t v263 = v183;
          goto LABEL_150;
        }
      }
      sub_24D472A28();
      size_t v482 = (void *)swift_allocError();
      *uint64_t v483 = 2;
      uint64_t v481 = v705;
      uint64_t v484 = v745;
      sub_24DA4CF70(v705, 3, (uint64_t)v482);
      long long v745 = v484;
      uint64_t v480 = v706;
      if (v484)
      {

        (*(void (**)(uint64_t, uint64_t))(v413 + 8))(v480, v701);
        (*(void (**)(uint64_t, uint64_t))(v375 + 8))(v481, v739);
        (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v183 - 8) + 8))(v747, v183);
        return (*(uint64_t (**)(char *, uint64_t))(v379 + 8))(v726, v744);
      }

      uint64_t v478 = v739;
      uint64_t v479 = v701;
      goto LABEL_149;
    case 0x27u:
      uint64_t v316 = v716;
      v166(v716, (unsigned __int8 *)v726, v744);
      uint64_t v317 = v739;
      uint64_t v318 = v734;
      uint64_t v319 = swift_getAssociatedConformanceWitness();
      uint64_t v320 = (uint64_t)v736;
      uint64_t v321 = v737;
      uint64_t v322 = swift_getAssociatedConformanceWitness();
      long long v748 = (void (*)(void, void, void))v317;
      long long v749 = v321;
      unint64_t v750 = (void (*)(void, void))v319;
      uint64_t v751 = v322;
      uint64_t v323 = type metadata accessor for ReconciliationID();
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        (*(void (**)(char *, uint64_t))(*(void *)(v323 - 8) + 8))(v316, v323);
        goto LABEL_151;
      }
      uint64_t v380 = v733;
      uint64_t v381 = v702;
      (*(void (**)(uint64_t, char *, uint64_t))(v733 + 32))(v702, v316, v317);
      id v382 = v745;
      uint64_t v383 = v692;
      sub_24D4759C8(v381, v692);
      uint64_t v384 = v743;
      long long v745 = v382;
      if (v382)
      {
        (*(void (**)(uint64_t, uint64_t))(v380 + 8))(v381, v317);
        return (*(uint64_t (**)(char *, uint64_t))(v384 + 8))(v726, v744);
      }
      uint64_t v419 = v708;
      uint64_t v420 = v709;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v708 + 48))(v383, 1, v709) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v380 + 8))(v381, v317);
        uint64_t v261 = *(void (**)(void, uint64_t))(v684 + 8);
        uint64_t v262 = (void (*)(void, void))v383;
        goto LABEL_101;
      }
      int v485 = v663;
      (*(void (**)(char *, uint64_t, uint64_t))(v419 + 32))(v663, v383, v420);
      if (*(void *)&v485[v677[9]])
      {
        (*(void (**)(char *, uint64_t))(v419 + 8))(v485, v420);
        (*(void (**)(uint64_t, uint64_t))(v380 + 8))(v702, v317);
      }
      else
      {
        long long v748 = v318;
        long long v749 = v735;
        unint64_t v750 = v738;
        uint64_t v751 = v320;
        uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
        uint64_t v527 = sub_24D7C043C(ItemMetadata);
        uint64_t v528 = v702;
        uint64_t v530 = sub_24DC0963C(v702, v527, v529, 0x80000000000);
        sub_24D8F94C4(0x2000000);
        sub_24D9ACA64();
        unint64_t v532 = v745;
        uint64_t v531 = v746;
        sub_24D912448(v530);
        long long v745 = v532;
        if (!v532)
        {
          unint64_t v566 = *(void (**)(uint64_t))(**(void **)(v531[2].Kind + 16) + 848);
          uint64_t v567 = swift_retain();
          v566(v567);
          swift_release();
        }
        swift_release();
        (*(void (**)(char *, uint64_t))(v708 + 8))(v663, v709);
        (*(void (**)(uint64_t, uint64_t))(v380 + 8))(v528, v317);
      }
      goto LABEL_151;
    case 0x2Au:
      uint64_t v324 = (uint64_t *)((char *)&v746->Kind + qword_26B1A2610);
      swift_beginAccess();
      uint64_t v325 = *v324;
      uint64_t *v324 = MEMORY[0x263F8EE78];
      uint64_t v326 = *(void *)(v325 + 16);
      if (v326)
      {
        uint64_t v327 = v325 + 40;
        do
        {
          long long v328 = *(void (**)(uint64_t *))(v327 - 8);
          uint64_t v756 = 0;
          swift_retain();
          v328(&v756);
          swift_release();
          v327 += 16;
          --v326;
        }
        while (v326);
      }
      swift_bridgeObjectRelease();
      goto LABEL_151;
    default:
      goto LABEL_151;
  }
}

uint64_t sub_24DA38170(void *a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v27 = a1;
  char v7 = a2 & 1;
  char v28 = a2;
  uint64_t v8 = MEMORY[0x263F8EE60] + 8;
  sub_24DA2E61C(0, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, (uint64_t)sub_24DA682D0, (uint64_t)v26, MEMORY[0x263F8EE60] + 8, MEMORY[0x263F8EE60]);
  uint64_t v9 = *(void (**)(void *))(**(void **)(*(void *)(v3 + 32) + 16) + 864);
  swift_retain();
  v9(a1);
  uint64_t v10 = swift_release();
  if (a3)
  {
    uint64_t v11 = a1[3];
    uint64_t v12 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v11);
    sub_24D90FFEC(0x662065657274202BLL, 0xEA00000000003A73, v11, v12);
    uint64_t v13 = a1[3];
    uint64_t v14 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v13);
    uint64_t v10 = sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24DA68390, v4, v13, v8, v14);
  }
  uint64_t v15 = *(void **)(v4 + qword_26B1A2620);
  MEMORY[0x270FA5388](v10);
  uint64_t v24 = v4;
  uint64_t v25 = a1;
  uint64_t v16 = sub_24D6006D8(v15, (void (*)(void))sub_24DA682F0);
  MEMORY[0x270FA5388](v16);
  id v23[2] = a1;
  v23[3] = v4;
  LOBYTE(v24) = v7;
  sub_24DA2E61C(0, (uint64_t)"dump(to:limitNumberOfItems:includingFileTrees:)", 47, 2, (uint64_t)sub_24DA6830C, (uint64_t)v23, v8, (uint64_t)v26);
  if (a3)
  {
    uint64_t v18 = a1[3];
    uint64_t v19 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v18);
    sub_24D90FFEC(0x662065657274202BLL, 0xEA00000000003A70, v18, v19);
    uint64_t v20 = a1[3];
    uint64_t v21 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v20);
    uint64_t v17 = sub_24D9100BC(8224, 0xE200000000000000, (void (*)(void *))sub_24DA68348, v4, v20, MEMORY[0x263F8EE60] + 8, v21);
  }
  MEMORY[0x270FA5388](v17);
  uint64_t v24 = v4;
  uint64_t v25 = a1;
  return sub_24D6006D8(v15, (void (*)(void))sub_24DA6832C);
}

uint64_t sub_24DA38478()
{
  return *(void *)(v0 + 112);
}

uint64_t sub_24DA38480()
{
  return *(unsigned __int8 *)(v0 + 122);
}

uint64_t sub_24DA38488()
{
  swift_retain();
  sub_24D905A04((uint64_t)&v1);
  swift_release();
  return v1;
}

uint64_t sub_24DA384D4()
{
  sub_24DA637B0();

  return swift_retain();
}

uint64_t sub_24DA384FC()
{
  sub_24DA637B8();

  return swift_retain();
}

id sub_24DA38524()
{
  uint64_t v0 = (void *)sub_24DA682AC();

  return v0;
}

uint64_t sub_24DA38550()
{
  if (fp_task_tracker_is_cancelled(*(void **)(*(void *)(v0 + 200) + 16))) {
    return 1;
  }
  else {
    return *(unsigned __int8 *)(v0 + 184);
  }
}

uint64_t sub_24DA38584()
{
  swift_beginAccess();
  uint64_t v1 = *(void *)(v0 + 224);
  type metadata accessor for FSOrFPJob();
  nullsub_1(v1);
  sub_24DCC95E8();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  return sub_24DCCA6B8();
}

uint64_t sub_24DA38684()
{
  return sub_24D60053C(v0, (void (*)(uint64_t *__return_ptr))sub_24DA68218) & 1;
}

uint64_t sub_24DA386D0()
{
  return sub_24D60060C(v0, (void (*)(uint64_t *__return_ptr))sub_24DA681E0);
}

uint64_t sub_24DA38718()
{
  return sub_24D60060C(v0, (void (*)(uint64_t *__return_ptr))sub_24DA69DFC);
}

uint64_t sub_24DA38760(uint64_t a1)
{
  long long v3 = *(_OWORD *)(*(void *)v1 + 592);
  v8[0] = *(_OWORD *)(*(void *)v1 + 576);
  v8[1] = v3;
  uint64_t v4 = type metadata accessor for PersistenceTrigger();
  uint64_t result = MEMORY[0x270FA5388](v4);
  if (*(unsigned char *)(v1 + qword_26B199578) == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)v8 - v6, a1, v4);
    swift_beginAccess();
    sub_24DCC9D48();
    sub_24DCC9D08();
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_24DA388A4(uint64_t a1, void *a2)
{
  id v58 = a2;
  uint64_t v65 = a1;
  long long v3 = (void *)*v2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190800);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v60 = (char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v3[74];
  uint64_t v7 = v3[72];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = v3[75];
  uint64_t v10 = v3[73];
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v66 = v6;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v64 = v9;
  uint64_t v13 = swift_getAssociatedConformanceWitness();
  uint64_t v67 = AssociatedTypeWitness;
  uint64_t v68 = v11;
  uint64_t v69 = AssociatedConformanceWitness;
  uint64_t v70 = v13;
  uint64_t v14 = type metadata accessor for ReconciliationID();
  uint64_t v61 = *(void **)(v14 - 8);
  uint64_t v15 = v61[8];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v59 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v63 = (char *)&v50 - v17;
  uint64_t v62 = sub_24DCCA3F8();
  uint64_t v18 = *(void *)(v62 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v62);
  uint64_t v21 = (char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (char *)&v50 - v23;
  if (*(void *)((char *)v2 + qword_269891678))
  {
    uint64_t v56 = *(void *)((char *)v2 + qword_269891678);
    uint64_t v57 = v18;
    uint64_t v25 = v65;
    if (v65 < 0)
    {
      uint64_t v67 = v7;
      uint64_t v68 = v10;
      uint64_t v31 = v66;
      uint64_t v54 = v10;
      uint64_t v32 = v64;
      uint64_t v69 = v66;
      uint64_t v70 = v64;
      type metadata accessor for Propagation.PropagationJob();
      uint64_t v55 = v25 & 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v33 = swift_dynamicCastClass();
      if (v33)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v24, v33 + *(void *)(*(void *)v33 + 576), AssociatedTypeWitness);
        LODWORD(v55) = 253;
        uint64_t v30 = v61;
        uint64_t v29 = v62;
        uint64_t v10 = v54;
        goto LABEL_12;
      }
      uint64_t v34 = v54;
      uint64_t v67 = v54;
      uint64_t v68 = v7;
      uint64_t v69 = v32;
      uint64_t v70 = v31;
      type metadata accessor for ItemJob();
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      uint64_t v10 = v34;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v24, result + *(void *)(*(void *)result + 576), v11);
      LODWORD(v55) = 255;
    }
    else
    {
      uint64_t v54 = v15;
      uint64_t v67 = v10;
      uint64_t v68 = v7;
      uint64_t v26 = v64;
      uint64_t v27 = v66;
      uint64_t v69 = v64;
      uint64_t v70 = v66;
      type metadata accessor for Propagation.PropagationJob();
      uint64_t v28 = swift_dynamicCastClass();
      if (v28)
      {
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v24, v28 + *(void *)(*(void *)v28 + 576), v11);
        LODWORD(v55) = 252;
        uint64_t v30 = v61;
        uint64_t v29 = v62;
        goto LABEL_12;
      }
      uint64_t v67 = v7;
      uint64_t v68 = v10;
      uint64_t v69 = v27;
      uint64_t v70 = v26;
      type metadata accessor for ItemJob();
      uint64_t result = swift_dynamicCastClass();
      if (!result) {
        return result;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v24, result + *(void *)(*(void *)result + 576), AssociatedTypeWitness);
      LODWORD(v55) = 251;
    }
    uint64_t v30 = v61;
    uint64_t v29 = v62;
LABEL_12:
    swift_storeEnumTagMultiPayload();
    ((void (*)(char *, void, uint64_t, uint64_t))v30[7])(v24, 0, 1, v14);
    uint64_t v35 = v57;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v21, v24, v29);
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v30[6])(v21, 1, v14) == 1)
    {
      uint64_t v36 = *(void (**)(char *, uint64_t))(v35 + 8);
      v36(v24, v29);
      return ((uint64_t (*)(char *, uint64_t))v36)(v21, v29);
    }
    else
    {
      uint64_t v50 = v7;
      uint64_t v37 = (void *)v30[4];
      uint64_t v54 = (uint64_t)(v30 + 4);
      uint64_t v61 = v37;
      ((void (*)(char *, char *, uint64_t))v37)(v63, v21, v14);
      swift_retain();
      uint64_t v38 = (void *)sub_24DCC8818();
      id v58 = v38;
      id v39 = objc_msgSend(v38, sel_domain);
      uint64_t v40 = sub_24DCC97E8();
      uint64_t v52 = v41;
      uint64_t v53 = v40;

      id v51 = objc_msgSend(v38, sel_code);
      uint64_t v42 = v64;
      LODWORD(v65) = sub_24D987F6C();
      uint64_t v43 = sub_24DCC9DF8();
      uint64_t v44 = (uint64_t)v60;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v60, 1, 1, v43);
      uint64_t v45 = v59;
      ((void (*)(char *, char *, uint64_t))v30[2])(v59, v63, v14);
      unint64_t v46 = (*((unsigned __int8 *)v30 + 80) + 106) & ~(unint64_t)*((unsigned __int8 *)v30 + 80);
      uint64_t v47 = swift_allocObject();
      *(void *)(v47 + 16) = 0;
      *(void *)(v47 + 24) = 0;
      *(void *)(v47 + 32) = v50;
      *(void *)(v47 + 40) = v10;
      *(void *)(v47 + 48) = v66;
      *(void *)(v47 + 56) = v42;
      uint64_t v48 = v53;
      *(void *)(v47 + 64) = v56;
      *(void *)(v47 + 72) = v48;
      id v49 = v51;
      *(void *)(v47 + 80) = v52;
      *(void *)(v47 + 88) = v49;
      *(void *)(v47 + 96) = 0;
      *(unsigned char *)(v47 + 104) = v55;
      *(unsigned char *)(v47 + 105) = v65;
      ((void (*)(unint64_t, char *, uint64_t))v61)(v47 + v46, v45, v14);
      swift_retain();
      sub_24DB42D50(v44, (uint64_t)&unk_269870230, v47);
      swift_release();

      swift_release();
      ((void (*)(char *, uint64_t))v30[1])(v63, v14);
      return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v24, v62);
    }
  }
  return result;
}

void sub_24DA39044()
{
  uint64_t v1 = v0;
  if ((sub_24D60053C((void *)v0, (void (*)(uint64_t *__return_ptr))sub_24DA68218) & 1) == 0)
  {
    sub_24D6006D8((void *)v0, sub_24DA6858C);
    uint64_t v2 = (void *)sub_24D60060C((void *)v0, (void (*)(uint64_t *__return_ptr))sub_24DA681E0);
    objc_msgSend(v2, sel_addWatcher_, v0);

    if ((*(unsigned char *)(v0 + 184) & 1) == 0
      && (fp_task_tracker_is_cancelled(*(void **)(*(void *)(v0 + 200) + 16)) & 1) == 0
      && (*(unsigned char *)(v0 + 184) & 1) == 0
      && (*(unsigned char *)(v0 + 113) & 0x20) != 0)
    {
      type metadata accessor for DiskImport.Monitor();
      uint64_t v3 = swift_retain();
      uint64_t v4 = sub_24D771F6C(v3, 600, 600, 60);
      uint64_t v5 = qword_26B1A2648;
      *(void *)(v1 + qword_26B1A2648) = v4;
      swift_release();
      if (*(void *)(v1 + v5))
      {
        swift_retain();
        sub_24D7720C0();
        swift_release();
      }
    }
  }
}

uint64_t sub_24DA391CC()
{
  uint64_t v1 = v0;
  uint64_t result = sub_24D60053C(v0, (void (*)(uint64_t *__return_ptr))sub_24DA68218);
  if (result)
  {
    uint64_t v3 = qword_26B1A2648;
    if (*(void *)&v0[qword_26B1A2648])
    {
      swift_retain();
      sub_24D77348C(1);
      swift_release();
    }
    *(void *)&v0[v3] = 0;
    swift_release();
    uint64_t v4 = (void *)sub_24D60060C(v0, (void (*)(uint64_t *__return_ptr))sub_24DA681E0);
    objc_msgSend(v4, sel_removeWatcher_, v1);

    return sub_24D6006D8(v1, sub_24DA6858C);
  }
  return result;
}

void *sub_24DA392C8()
{
  return sub_24DA3C3B8(&qword_26B1A26A0, &qword_26B199A70, (void **)&qword_26B1A24C0);
}

void *sub_24DA392F4()
{
  return sub_24DA3C3B8(&qword_26B1A27C8, &qword_26B1997F0, (void **)&qword_26B1A2490);
}

uint64_t sub_24DA39320(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 576);
  uint64_t v4 = *(void *)(*(void *)v1 + 584);
  uint64_t v5 = *(void *)(*(void *)v1 + 592);
  uint64_t v6 = *(void *)(*(void *)v1 + 600);
  sub_24D987E98(a1, (uint64_t)v11);
  if (!v12) {
    return sub_24D415F74((uint64_t)v11, &qword_26B1937B8);
  }
  __swift_project_boxed_opaque_existential_1(v11, v12);
  sub_24DCCAD78();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  swift_beginAccess();
  swift_retain();
  v11[0] = v3;
  v11[1] = v4;
  v11[2] = v5;
  uint64_t v12 = v6;
  type metadata accessor for FSOrFPJob();
  sub_24DCC9638();
  sub_24DCC9668();
  swift_endAccess();
  uint64_t result = sub_24D987F90(a1);
  if ((result & 0x8000) != 0)
  {
    uint64_t v8 = *(void *)(v1 + qword_26B1995B8);
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      __break(1u);
    }
    else {
      *(void *)(v1 + qword_26B1995B8) = v10;
    }
  }
  return result;
}

uint64_t sub_24DA394D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 576);
  uint64_t v4 = *(void *)(*(void *)v1 + 584);
  uint64_t v5 = *(void *)(*(void *)v1 + 592);
  uint64_t v6 = *(void *)(*(void *)v1 + 600);
  sub_24D987E98(a1, (uint64_t)v11);
  if (!v12) {
    return sub_24D415F74((uint64_t)v11, &qword_26B1937B8);
  }
  __swift_project_boxed_opaque_existential_1(v11, v12);
  sub_24DCCAD78();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  swift_beginAccess();
  v11[0] = v3;
  v11[1] = v4;
  v11[2] = v5;
  uint64_t v12 = v6;
  type metadata accessor for FSOrFPJob();
  sub_24DCC9638();
  sub_24DCC9668();
  swift_endAccess();
  uint64_t result = sub_24D987F90(a1);
  if ((result & 0x8000) != 0)
  {
    uint64_t v8 = *(void *)(v1 + qword_26B1995B8);
    BOOL v9 = __OFSUB__(v8, 1);
    uint64_t v10 = v8 - 1;
    if (v9) {
      __break(1u);
    }
    else {
      *(void *)(v1 + qword_26B1995B8) = v10;
    }
  }
  return result;
}

uint64_t sub_24DA39670(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)v1 + 576);
  uint64_t v5 = *(void *)(*(void *)v1 + 584);
  uint64_t v6 = *(void *)(*(void *)v1 + 592);
  uint64_t v7 = *(void *)(*(void *)v1 + 600);
  sub_24D987E98(a1, (uint64_t)v16);
  if (v17)
  {
    __swift_project_boxed_opaque_existential_1(v16, v17);
    uint64_t v8 = sub_24DCCAD78();
    uint64_t v10 = v9;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
    swift_beginAccess();
    uint64_t v11 = *(void *)(v2 + 224);
    v15[0] = v8;
    v15[1] = v10;
    swift_bridgeObjectRetain();
    v16[0] = v4;
    v16[1] = v5;
    v16[2] = v6;
    uint64_t v17 = v7;
    uint64_t v12 = type metadata accessor for FSOrFPJob();
    MEMORY[0x2533276F0](v16, v15, v11, MEMORY[0x263F8D310], v12, MEMORY[0x263F8D320]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v13 = v16[0];
    if ((~v16[0] & 0xF000000000000007) == 0)
    {
      swift_retain();
      return v3;
    }
    return v13;
  }
  else
  {
    sub_24D415F74((uint64_t)v16, &qword_26B1937B8);
    swift_retain();
  }
  return v3;
}

BOOL sub_24DA39804(char a1)
{
  if (a1)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(**(void **)(v1[5] + 16) + 304);
    uint64_t v6 = swift_retain();
    LOBYTE(v5) = v5(v6);
    swift_release();
    if (v5)
    {
      uint64_t v4 = (void *)(v1[24] + 40);
      return *v4 > 0;
    }
  }
  else
  {
    uint64_t v2 = *(uint64_t (**)(uint64_t))(**(void **)(v1[4] + 16) + 304);
    uint64_t v3 = swift_retain();
    LOBYTE(v2) = v2(v3);
    swift_release();
    if (v2)
    {
      uint64_t v4 = (void *)(v1[24] + 32);
      return *v4 > 0;
    }
  }
  return 0;
}

uint64_t sub_24DA398F0(uint64_t a1)
{
  return sub_24DA3D194(a1, 0);
}

uint64_t sub_24DA398F8(uint64_t a1)
{
  return sub_24DA3D194(a1, 1);
}

uint64_t sub_24DA39900(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = sub_24DCC9078();
  uint64_t v40 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v8 = *(_OWORD *)(v5 + 592);
  v43[0] = *(_OWORD *)(v5 + 576);
  v43[1] = v8;
  uint64_t v9 = (void *)type metadata accessor for TestingOperation();
  uint64_t v10 = *(v9 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v33 - v14;
  sub_24DA087AC(0, v9, (uint64_t)&v33 - v14);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1907E8);
  swift_getWitnessTable();
  sub_24DCC9638();
  sub_24DCC9598();
  uint64_t v16 = *(void (**)(char *, void *))(v10 + 8);
  v16(v15, v9);
  uint64_t result = swift_endAccess();
  uint64_t v39 = v42;
  if (v42)
  {
    uint64_t v38 = v6;
    id v18 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v19 = *(void (**)(char *, uint64_t, void *))(v10 + 16);
    v19(v13, a1, v9);
    uint64_t v20 = sub_24DCC9068();
    os_log_type_t v21 = sub_24DCCA118();
    int v22 = v21;
    if (os_log_type_enabled(v20, v21))
    {
      os_log_t v37 = v20;
      uint64_t v23 = swift_slowAlloc();
      int v35 = v22;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v36 = swift_slowAlloc();
      *(void *)&v43[0] = v36;
      uint64_t v34 = v24;
      *(_DWORD *)uint64_t v24 = 136315138;
      uint64_t v33 = v24 + 4;
      v19(v15, (uint64_t)v13, v9);
      v16(v13, v9);
      unint64_t v25 = sub_24DA08498(v9);
      unint64_t v27 = v26;
      v16(v15, v9);
      uint64_t v42 = sub_24D418FB4(v25, v27, (uint64_t *)v43);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      uint64_t v20 = v37;
      uint64_t v28 = v34;
      _os_log_impl(&dword_24D3D0000, v37, (os_log_type_t)v35, "unblocking waiters on %s", v34, 0xCu);
      uint64_t v29 = v36;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v29, -1, -1);
      MEMORY[0x25332B030](v28, -1, -1);
    }
    else
    {
      v16(v13, v9);
    }

    (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v38);
    uint64_t v30 = *(void *)(v39 + 16);
    if (v30)
    {
      uint64_t v31 = v39 + 40;
      do
      {
        uint64_t v32 = *(void (**)(_OWORD *))(v31 - 8);
        *(void *)&v43[0] = a2;
        swift_retain();
        v32(v43);
        swift_release();
        v31 += 16;
        --v30;
      }
      while (v30);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24DA39D5C(char a1, uint64_t a2, char a3, char a4)
{
  uint64_t v5 = v4;
  int v9 = a1 & 1;
  uint64_t v10 = sub_24DCC9078();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (!v9)
    {
      if (a3) {
        goto LABEL_4;
      }
      goto LABEL_8;
    }
LABEL_14:
    if (a3)
    {
      int v22 = (uint64_t *)(v5 + qword_26B1A2658);
      uint64_t v23 = *(void *)(v5 + qword_26B1A2658);
      uint64_t v24 = v23 + 1;
      if (!__OFADD__(v23, 1))
      {
        *int v22 = v24;
        goto LABEL_19;
      }
    }
    else
    {
      int v22 = (uint64_t *)(v5 + qword_26B1A2658);
      uint64_t v25 = *(void *)(v5 + qword_26B1A2658);
      uint64_t v24 = v25 - 1;
      if (!__OFSUB__(v25, 1))
      {
        *int v22 = v24;
        BOOL v18 = __OFSUB__(0, a2);
        a2 = -a2;
        if (v18)
        {
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
LABEL_19:
        uint64_t v26 = v22[1];
        uint64_t v27 = v26 + a2;
        if (!__OFADD__(v26, a2))
        {
          v22[1] = v27;
          uint64_t v28 = 1;
          if ((a3 & 1) == 0) {
            uint64_t v28 = -1;
          }
          if ((a4 & 1) == 0) {
            uint64_t v28 = 0;
          }
          uint64_t v29 = qword_26B1A27D0;
          uint64_t v30 = *(void *)(v5 + qword_26B1A27D0);
          BOOL v18 = __OFADD__(v30, v28);
          uint64_t v31 = v30 + v28;
          if (!v18)
          {
            *(void *)(v5 + qword_26B1A27D0) = v31;
            uint64_t result = sub_24DA3E370(v24, v27, v9);
            if (*v22 < 1 || v22[1] <= 0)
            {
              *int v22 = 0;
              v22[1] = 0;
            }
            else
            {
              if ((*(void *)(v5 + v29) & 0x8000000000000000) == 0) {
                return result;
              }
              if (*(unsigned char *)(v5 + 121) == 1)
              {
LABEL_42:
                uint64_t result = sub_24DCCA978();
                __break(1u);
                return result;
              }
              id v32 = (id)fpfs_current_or_default_log();
              sub_24DCC9088();
              uint64_t v33 = sub_24DCC9068();
              os_log_type_t v34 = sub_24DCCA128();
              if (os_log_type_enabled(v33, v34))
              {
                int v35 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)int v35 = 0;
                _os_log_impl(&dword_24D3D0000, v33, v34, "🤯 [GlobalProgress] pausableDownloadsCounter counter is negative", v35, 2u);
                MEMORY[0x25332B030](v35, -1, -1);
              }

              uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
            }
            *(void *)(v5 + v29) = 0;
            return result;
          }
          goto LABEL_39;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  a2 = 1;
  if (v9) {
    goto LABEL_14;
  }
  if (a3)
  {
LABEL_4:
    uint64_t v14 = (uint64_t *)(v5 + qword_26B1A2630);
    uint64_t v15 = *(void *)(v5 + qword_26B1A2630);
    uint64_t v16 = v15 + 1;
    if (!__OFADD__(v15, 1))
    {
      *uint64_t v14 = v16;
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_8:
  uint64_t v14 = (uint64_t *)(v5 + qword_26B1A2630);
  uint64_t v17 = *(void *)(v5 + qword_26B1A2630);
  uint64_t v16 = v17 - 1;
  if (__OFSUB__(v17, 1))
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  *uint64_t v14 = v16;
  BOOL v18 = __OFSUB__(0, a2);
  a2 = -a2;
  if (v18)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_10:
  uint64_t v19 = v14[1];
  uint64_t v20 = v19 + a2;
  if (__OFADD__(v19, a2))
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  v14[1] = v20;
  uint64_t result = sub_24DA3E370(v16, v20, 0);
  if (*v14 < 1 || v14[1] <= 0)
  {
    *uint64_t v14 = 0;
    v14[1] = 0;
  }
  return result;
}

uint64_t sub_24DA3A094(unsigned char *a1, int a2)
{
  uint64_t v4 = v2;
  LODWORD(v45) = a2;
  uint64_t v6 = *(void **)v2;
  uint64_t v7 = sub_24DCC9078();
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  MEMORY[0x270FA5388](v7);
  id v49 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v6[72];
  uint64_t v10 = v6[74];
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v50 = *(void (**)(char *, uint64_t))(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v46 = (char *)v44 - v12;
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  uint64_t v52 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v53 = (char *)v44 - v18;
  uint64_t v19 = v6[73];
  uint64_t v20 = v6[75];
  uint64_t v54 = (char *)v9;
  uint64_t v55 = v19;
  uint64_t v56 = v10;
  uint64_t v57 = v20;
  type metadata accessor for Propagation.CreateItem();
  uint64_t result = swift_dynamicCastClass();
  if (result)
  {
    if (*(unsigned char *)(result + 138)) {
      return result;
    }
LABEL_6:
    int v22 = &a1[*(void *)(*(void *)a1 + 576)];
    uint64_t v23 = v53;
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(**((void **)v4 + 4) + 240))(v22, 1);
    if (v3) {
      return result;
    }
    v44[1] = v22;
    v44[2] = 0;
    uint64_t v25 = v51;
    uint64_t v24 = v52;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v17, v23, v51);
    uint64_t v26 = v50;
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v50 + 6))(v17, 1, v11) == 1)
    {
      uint64_t v4 = *(void (**)(char *, uint64_t))(v24 + 8);
      uint64_t v52 = v24 + 8;
      v4(v17, v25);
      id v27 = (id)fpfs_current_or_default_log();
      uint64_t v28 = (unsigned __int8 *)v49;
      sub_24DCC9088();
      swift_retain();
      uint64_t v11 = sub_24DCC9068();
      os_log_type_t v29 = sub_24DCCA128();
      if (os_log_type_enabled((os_log_t)v11, v29))
      {
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        unint64_t v46 = (char *)swift_slowAlloc();
        uint64_t v54 = v46;
        *(_DWORD *)uint64_t v30 = 136446210;
        uint64_t v45 = v30 + 4;
        swift_getAssociatedTypeWitness();
        uint64_t v50 = v4;
        swift_getAssociatedConformanceWitness();
        uint64_t v31 = sub_24DCCAD78();
        uint64_t v58 = sub_24D418FB4(v31, v32, (uint64_t *)&v54);
        sub_24DCCA428();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D3D0000, (os_log_t)v11, v29, "[GlobalProgress] accountUploadJob, snapshot missing for itemID %{public}s", v30, 0xCu);
        uint64_t v33 = v46;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v33, -1, -1);
        MEMORY[0x25332B030](v30, -1, -1);

        (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
        return ((uint64_t (*)(char *, uint64_t))v50)(v53, v51);
      }
      goto LABEL_19;
    }
    os_log_type_t v34 = v46;
    (*((void (**)(char *, char *, uint64_t))v26 + 4))(v46, v17, v11);
    uint64_t v28 = (unsigned __int8 *)&v34[*(int *)(v11 + 48)];
    int v35 = *v28;
    uint64_t result = type metadata accessor for ItemMetadata();
    if (v35 == 1) {
      goto LABEL_23;
    }
    uint64_t v36 = *(void *)&v28[*(int *)(result + 100)];
    char v37 = (char)v45;
    if ((v45 & 1) != 0 || a1[112] == 3)
    {
LABEL_22:
      sub_24DA39D5C(0, v36, v37 & 1, 1);
LABEL_23:
      (*((void (**)(char *, uint64_t))v26 + 1))(v34, v11);
      return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v53, v25);
    }
    uint64_t v38 = (void *)((char *)v4 + qword_26B1A2660);
    uint64_t v39 = *(void *)((char *)v4 + qword_26B1A2660);
    BOOL v40 = __OFADD__(v39, 1);
    uint64_t v41 = v39 + 1;
    if (v40)
    {
      __break(1u);
    }
    else
    {
      *uint64_t v38 = v41;
      uint64_t v42 = v38[1];
      if (v36)
      {
        BOOL v40 = __OFADD__(v42, v36);
        uint64_t v43 = v42 + v36;
        if (v40)
        {
          __break(1u);
LABEL_19:
          swift_release();

          (*(void (**)(unsigned __int8 *, uint64_t))(v47 + 8))(v28, v48);
          return ((uint64_t (*)(char *, uint64_t))v4)(v53, v25);
        }
        goto LABEL_21;
      }
      BOOL v40 = __OFADD__(v42, 1);
      uint64_t v43 = v42 + 1;
      if (!v40)
      {
LABEL_21:
        v38[1] = v43;
        goto LABEL_22;
      }
    }
    __break(1u);
    return result;
  }
  uint64_t v54 = (char *)v9;
  uint64_t v55 = v19;
  uint64_t v56 = v10;
  uint64_t v57 = v20;
  type metadata accessor for Propagation.UpdateItem();
  uint64_t result = swift_dynamicCastClass();
  if (result && (*(unsigned char *)(result + *(void *)(*(void *)result + 640)) & 8) != 0) {
    goto LABEL_6;
  }
  return result;
}

uint64_t sub_24DA3A6DC(uint64_t a1, int a2)
{
  int v187 = a2;
  uint64_t v220 = a1;
  uint64_t v3 = *v2;
  uint64_t v4 = (*v2)[72];
  uint64_t v5 = (*v2)[74];
  uint64_t v6 = type metadata accessor for SnapshotItem();
  uint64_t v184 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v179 = (char *)&v170 - v7;
  uint64_t v186 = v8;
  uint64_t v185 = sub_24DCCA3F8();
  uint64_t v188 = *(char **)(v185 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v185);
  uint64_t v183 = (char *)&v170 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v196 = (char *)&v170 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v202 = sub_24DCCA3F8();
  uint64_t v201 = *(void *)(v202 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v202);
  uint64_t v200 = (char *)&v170 - v14;
  uint64_t v207 = AssociatedTypeWitness;
  uint64_t v204 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v176 = (char *)&v170 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v178 = (char *)&v170 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v199 = (char *)&v170 - v19;
  uint64_t v20 = sub_24DCC9078();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v216 = v20;
  uint64_t v217 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v212 = (uint8_t *)&v170 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v198 = (char *)&v170 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v180 = (char *)&v170 - v27;
  MEMORY[0x270FA5388](v26);
  uint64_t v189 = (char *)&v170 - v28;
  uint64_t v29 = v3[73];
  uint64_t v30 = v3[75];
  uint64_t v31 = type metadata accessor for SnapshotItem();
  uint64_t v193 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31);
  uint64_t v182 = (char *)&v170 - v32;
  uint64_t v194 = v33;
  uint64_t v195 = sub_24DCCA3F8();
  uint64_t v197 = *(void *)(v195 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v195);
  uint64_t v192 = (char *)&v170 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v34);
  uint64_t v203 = (char *)&v170 - v36;
  char v37 = (uint8_t *)swift_getAssociatedTypeWitness();
  uint64_t v38 = sub_24DCCA3F8();
  uint64_t v210 = *(void *)(v38 - 8);
  uint64_t v211 = (uint8_t *)v38;
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  uint64_t v209 = (char *)&v170 - v40;
  unint64_t v215 = v37;
  uint64_t v214 = (uint8_t *)*((void *)v37 - 1);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v177 = (char *)&v170 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  unsigned int v181 = (char *)&v170 - v44;
  MEMORY[0x270FA5388](v43);
  uint64_t v206 = (char *)&v170 - v45;
  uint64_t v213 = v4;
  v221[0] = (uint64_t)v4;
  v221[1] = v29;
  uint64_t v190 = v29;
  uint64_t v205 = v5;
  v221[2] = v5;
  v221[3] = v30;
  uint64_t v191 = v30;
  uint64_t v46 = type metadata accessor for ItemReconciliation();
  uint64_t v47 = sub_24DCCA3F8();
  uint64_t v208 = *(void *)(v47 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v47);
  uint64_t v50 = (char *)&v170 - v49;
  uint64_t v218 = *(void *)(v46 - 8);
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  uint64_t v53 = (char *)&v170 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x270FA5388](v51);
  uint64_t v56 = (char *)&v170 - v55;
  MEMORY[0x270FA5388](v54);
  uint64_t v58 = (char *)&v170 - v57;
  uint64_t v59 = v2;
  uint64_t v60 = v219;
  uint64_t v61 = v220 + *(void *)(*(void *)v220 + 576);
  uint64_t result = sub_24D4759C8(v61, (uint64_t)v50);
  if (v60) {
    return result;
  }
  uint64_t v174 = v47;
  uint64_t v173 = v61;
  uint64_t v172 = v56;
  uint64_t v171 = v53;
  uint64_t v175 = v58;
  uint64_t v63 = v218;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v50, 1, v46) != 1)
  {
    uint64_t v72 = v175;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v175, v50, v46);
    uint64_t v170 = v46;
    uint64_t v73 = &v72[*(int *)(v46 + 52)];
    uint64_t v74 = v209;
    uint64_t v75 = v210;
    uint64_t v76 = v211;
    (*(void (**)(char *, char *, uint8_t *))(v210 + 16))(v209, v73, v211);
    uint64_t v77 = v214;
    uint64_t v78 = v215;
    if ((*((unsigned int (**)(char *, uint64_t, uint8_t *))v214 + 6))(v74, 1, v215) == 1)
    {
      uint64_t v219 = 0;
      (*(void (**)(char *, uint8_t *))(v75 + 8))(v74, v76);
      uint64_t v79 = v201;
      uint64_t v80 = v200;
      uint64_t v81 = v202;
      (*(void (**)(char *, char *, uint64_t))(v201 + 16))(v200, v72, v202);
      uint64_t v82 = v204;
      uint64_t v83 = (uint8_t *)v207;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v204 + 48))(v80, 1, v207) == 1)
      {
        (*(void (**)(char *, uint64_t))(v79 + 8))(v80, v81);
        id v84 = (id)fpfs_current_or_default_log();
        uint64_t v85 = v198;
        sub_24DCC9088();
        uint64_t v86 = *(void (**)(char *, char *, uint64_t))(v63 + 16);
        uint64_t v87 = v172;
        uint64_t v88 = v170;
        v86(v172, v72, v170);
        uint64_t v89 = sub_24DCC9068();
        os_log_type_t v90 = sub_24DCCA128();
        if (os_log_type_enabled(v89, v90))
        {
          uint64_t v91 = (uint8_t *)swift_slowAlloc();
          uint64_t v220 = swift_slowAlloc();
          v221[0] = v220;
          unint64_t v215 = v91;
          *(_DWORD *)uint64_t v91 = 136315138;
          uint64_t v214 = v91 + 4;
          uint64_t v92 = v171;
          v86(v171, v87, v88);
          uint64_t v93 = *(void (**)(char *, uint64_t))(v63 + 8);
          v93(v87, v88);
          uint64_t v94 = sub_24DB8E8F4(v88);
          uint64_t v95 = v88;
          unint64_t v97 = v96;
          v93(v92, v95);
          uint64_t v222 = sub_24D418FB4(v94, v97, v221);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          uint64_t v98 = v215;
          _os_log_impl(&dword_24D3D0000, v89, v90, "RT entry missing both sides, cannot account download job: %s", v215, 0xCu);
          uint64_t v99 = v220;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v99, -1, -1);
          MEMORY[0x25332B030](v98, -1, -1);

          (*(void (**)(char *, uint64_t))(v217 + 8))(v198, v216);
          return ((uint64_t (*)(char *, uint64_t))v93)(v175, v95);
        }
        else
        {
          uint64_t v139 = *(void (**)(char *, uint64_t))(v63 + 8);
          v139(v87, v88);

          (*(void (**)(char *, uint64_t))(v217 + 8))(v85, v216);
          return ((uint64_t (*)(char *, uint64_t))v139)(v175, v88);
        }
      }
      uint64_t v102 = v199;
      (*(void (**)(char *, char *, uint8_t *))(v82 + 32))(v199, v80, v83);
      uint64_t v103 = *(void (**)(char *, uint64_t))(*v59[4] + 240);
      uint64_t v104 = v59;
      uint64_t v105 = v82;
      uint64_t v106 = v196;
      uint64_t v107 = v219;
      v103(v102, 1);
      uint64_t v108 = v170;
      if (v107)
      {
        (*(void (**)(char *, uint8_t *))(v105 + 8))(v102, v83);
        return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v72, v108);
      }
      uint64_t v219 = v104;
      uint64_t v101 = v188;
      uint64_t v140 = v183;
      uint64_t v141 = v185;
      (*((void (**)(char *, char *, uint64_t))v188 + 2))(v183, v106, v185);
      uint64_t v142 = v184;
      int v143 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v184 + 48))(v140, 1, v186);
      uint64_t v144 = (void (*)(char *, uint64_t))*((void *)v101 + 1);
      if (v143 == 1)
      {
        uint64_t v219 = 0;
        uint64_t v220 = (uint64_t)v144;
        uint64_t v188 = v101 + 8;
        v144(v140, v141);
        id v145 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        uint64_t v120 = v83;
        uint64_t v110 = v204;
        uint64_t v146 = *(void (**)(char *, char *, uint8_t *))(v204 + 16);
        uint64_t v101 = v178;
        v146(v178, v199, v83);
        uint64_t v147 = sub_24DCC9068();
        os_log_type_t v148 = sub_24DCCA128();
        int v149 = v148;
        if (os_log_type_enabled(v147, v148))
        {
          uint64_t v150 = swift_slowAlloc();
          LODWORD(v215) = v149;
          uint64_t v151 = (uint8_t *)v150;
          uint64_t v152 = swift_slowAlloc();
          v221[0] = v152;
          uint64_t v214 = v151;
          *(_DWORD *)uint64_t v151 = 136315138;
          uint64_t v212 = v151 + 4;
          uint64_t v153 = v176;
          v146(v176, v101, v83);
          uint64_t v154 = *(void (**)(char *, uint8_t *))(v110 + 8);
          v154(v101, v83);
          uint64_t v131 = v154;
          swift_getAssociatedConformanceWitness();
          uint64_t v155 = sub_24DCCAD78();
          unint64_t v157 = v156;
          v154(v153, v120);
          uint64_t v222 = sub_24D418FB4(v155, v157, v221);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          unint64_t v158 = v214;
          _os_log_impl(&dword_24D3D0000, v147, (os_log_type_t)v215, "item missing from FS snapshot, cannot account for download job: %s", v214, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v152, -1, -1);
          MEMORY[0x25332B030](v158, -1, -1);

          (*(void (**)(char *, uint64_t))(v217 + 8))(v180, v216);
          ((void (*)(char *, uint64_t))v220)(v196, v185);
          uint64_t v138 = v199;
          goto LABEL_21;
        }
        goto LABEL_32;
      }
      v144(v106, v141);
      (*(void (**)(char *, uint8_t *))(v204 + 8))(v199, v83);
      uint64_t v110 = (uint64_t)v179;
      uint64_t v161 = v186;
      (*(void (**)(char *, char *, uint64_t))(v142 + 32))(v179, v140, v186);
      uint64_t v147 = sub_24DA64118(v110);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v142 + 8))(v110, v161);
    }
    else
    {
      uint64_t v100 = v206;
      (*((void (**)(char *, char *, uint8_t *))v77 + 4))(v206, v74, v78);
      uint64_t v101 = v203;
      (*(void (**)(char *, uint64_t))(*v2[5] + 240))(v100, 1);
      uint64_t v219 = v2;
      uint64_t v109 = v197;
      uint64_t v110 = (uint64_t)v192;
      uint64_t v111 = v195;
      (*(void (**)(char *, char *, uint64_t))(v197 + 16))(v192, v101, v195);
      uint64_t v112 = v193;
      uint64_t v113 = v194;
      int v114 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v193 + 48))(v110, 1, v194);
      uint64_t v117 = *(void (**)(uint64_t, uint64_t))(v109 + 8);
      uint64_t v116 = v109 + 8;
      uint64_t v115 = v117;
      uint64_t v108 = v170;
      if (v114 == 1)
      {
        uint64_t v219 = 0;
        uint64_t v220 = (uint64_t)v115;
        v115(v110, v111);
        id v118 = (id)fpfs_current_or_default_log();
        sub_24DCC9088();
        uint64_t v197 = v116;
        uint64_t v119 = v214;
        uint64_t v120 = v215;
        uint64_t v121 = (void (*)(char *, char *, uint8_t *))*((void *)v214 + 2);
        uint64_t v122 = v181;
        v121(v181, v206, v215);
        uint64_t v123 = sub_24DCC9068();
        uint64_t v124 = v111;
        os_log_type_t v125 = sub_24DCCA128();
        uint64_t v213 = v123;
        BOOL v126 = os_log_type_enabled(v123, v125);
        uint64_t v63 = v218;
        if (v126)
        {
          uint64_t v127 = (uint8_t *)swift_slowAlloc();
          uint64_t v128 = swift_slowAlloc();
          v221[0] = v128;
          *(_DWORD *)uint64_t v127 = 136315138;
          uint64_t v211 = v127 + 4;
          uint64_t v212 = v127;
          uint64_t v129 = v177;
          v121(v177, v122, v120);
          uint64_t v130 = (void (*)(char *, uint8_t *))*((void *)v119 + 1);
          v130(v122, v120);
          uint64_t v131 = v130;
          swift_getAssociatedConformanceWitness();
          uint64_t v132 = sub_24DCCAD78();
          unint64_t v134 = v133;
          v130(v129, v120);
          uint64_t v222 = sub_24D418FB4(v132, v134, v221);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          uint64_t v135 = v213;
          os_log_type_t v136 = v125;
          uint64_t v137 = v212;
          _os_log_impl(&dword_24D3D0000, v213, v136, "item missing from FP snapshot, cannot account for download job: %s", v212, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v128, -1, -1);
          MEMORY[0x25332B030](v137, -1, -1);

          (*(void (**)(char *, uint64_t))(v217 + 8))(v189, v216);
          ((void (*)(char *, uint64_t))v220)(v203, v195);
          uint64_t v138 = v206;
LABEL_21:
          v131(v138, v120);
          return (*(uint64_t (**)(char *, uint64_t))(v218 + 8))(v175, v170);
        }
        id v160 = (void (*)(char *, uint8_t *))*((void *)v119 + 1);
        v160(v122, v120);

        (*(void (**)(char *, uint64_t))(v217 + 8))(v189, v216);
        ((void (*)(char *, uint64_t))v220)(v203, v124);
        v160(v206, v120);
        return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v175, v108);
      }
      v115((uint64_t)v101, v111);
      (*((void (**)(char *, uint8_t *))v214 + 1))(v206, v215);
      uint64_t v159 = (uint64_t)v182;
      (*(void (**)(char *, uint64_t, uint64_t))(v112 + 32))(v182, v110, v113);
      uint64_t v147 = sub_24DA64118(v159);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v112 + 8))(v159, v113);
      uint64_t v63 = v218;
    }
    uint64_t v120 = 0;
    char v162 = v187;
    if ((v187 & 1) != 0 || *(unsigned char *)(v220 + 112) == 3)
    {
LABEL_36:
      sub_24DA39D5C(1, (uint64_t)v147, v162 & 1, (*(void *)(v220 + 136) & 0x4000000000) != 0);
      return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v175, v108);
    }
    uint64_t v163 = (void **)((char *)v219 + qword_26B1A2670);
    uint64_t v164 = *(uint64_t *)((char *)v219 + qword_26B1A2670);
    BOOL v165 = __OFADD__(v164, 1);
    uint64_t v166 = v164 + 1;
    if (v165)
    {
      __break(1u);
    }
    else
    {
      *uint64_t v163 = v166;
      uint64_t v167 = v163[1];
      if (v147)
      {
        BOOL v165 = __OFADD__(v167, v147);
        uint64_t v168 = (char *)v147 + v167;
        if (v165)
        {
          __break(1u);
LABEL_32:
          uint64_t v169 = *(void (**)(char *, uint8_t *))(v110 + 8);
          v169(v101, v120);

          (*(void (**)(char *, uint64_t))(v217 + 8))(v180, v216);
          ((void (*)(char *, uint64_t))v220)(v196, v185);
          v169(v199, v120);
          return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v175, v108);
        }
        goto LABEL_35;
      }
      BOOL v165 = __OFADD__(v167, 1);
      uint64_t v168 = (char *)(v167 + 1);
      if (!v165)
      {
LABEL_35:
        v163[1] = v168;
        goto LABEL_36;
      }
    }
    __break(1u);
    return result;
  }
  uint64_t v219 = 0;
  (*(void (**)(char *, uint64_t))(v208 + 8))(v50, v174);
  id v64 = (id)fpfs_current_or_default_log();
  uint64_t v65 = v212;
  sub_24DCC9088();
  swift_retain();
  uint64_t v66 = sub_24DCC9068();
  os_log_type_t v67 = sub_24DCCA128();
  if (os_log_type_enabled(v66, v67))
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    uint64_t v69 = swift_slowAlloc();
    v221[0] = v69;
    *(_DWORD *)uint64_t v68 = 136315138;
    swift_getAssociatedConformanceWitness();
    uint64_t v70 = sub_24DCCAD78();
    uint64_t v222 = sub_24D418FB4(v70, v71, v221);
    sub_24DCCA428();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v66, v67, "item missing from RT, cannot account for download job: %s", v68, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v69, -1, -1);
    MEMORY[0x25332B030](v68, -1, -1);
  }
  else
  {

    swift_release();
  }
  return (*(uint64_t (**)(uint8_t *, uint64_t))(v217 + 8))(v65, v216);
}