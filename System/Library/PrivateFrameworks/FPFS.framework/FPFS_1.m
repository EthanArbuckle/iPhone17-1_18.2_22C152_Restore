uint64_t sub_24D47C608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v34 = a1;
  v4 = *v2;
  v5 = *(void *)(*v2 + 104);
  v6 = *(void *)(*v2 + 88);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v33 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  v35 = (char *)&v30 - v8;
  v9 = *(void *)(v4 + 96);
  v10 = *(void *)(v4 + 80);
  v11 = swift_getAssociatedTypeWitness();
  v32 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  v31 = (char *)&v30 - v12;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = swift_getAssociatedConformanceWitness();
  v36 = v11;
  v37 = AssociatedTypeWitness;
  v38 = AssociatedConformanceWitness;
  v39 = v14;
  v15 = type metadata accessor for ReconciliationID();
  v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  v18 = (char *)&v30 - v17;
  sub_24DB86810(v10, v6, v9, v5, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v34, v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v19 = v33;
    v20 = *(void (**)(char *, char *, uint64_t))(v33 + 32);
    v20(v35, v18, AssociatedTypeWitness);
    v36 = v10;
    v37 = v6;
    v38 = v9;
    v39 = v5;
    v21 = a2 + *(int *)(type metadata accessor for ItemReconciliation() + 52);
    v22 = type metadata accessor for ItemReconciliationHalf();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
    sub_24DB86A84(v21);
    v23 = sub_24DCCA3F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v21, v23);
    v20((char *)v21, v35, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, AssociatedTypeWitness);
  }
  else
  {
    v26 = v31;
    v25 = v32;
    v27 = *(void (**)(char *, char *, uint64_t))(v32 + 32);
    v27(v31, v18, v11);
    v28 = type metadata accessor for ItemReconciliationHalf();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(a2, v28);
    sub_24DB86A84(a2);
    v29 = sub_24DCCA3F8();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a2, v29);
    v27((char *)a2, v26, v11);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v25 + 56))(a2, 0, 1, v11);
  }
}

uint64_t sub_24D47CABC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v3 = v2;
  uint64_t v42 = a2;
  uint64_t v5 = *v2;
  uint64_t v6 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v38 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v5 + 96);
  uint64_t v40 = *(void *)(v5 + 80);
  uint64_t v41 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v35 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  v36 = (char *)&v33 - v12;
  uint64_t v39 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v37 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  v16 = (char *)&v33 - v15;
  swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v18 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64);
  uint64_t v19 = swift_checkMetadataState();
  if (v18(v19, AssociatedConformanceWitness))
  {
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      swift_retain();
      swift_release();
      sub_24DBB275C();
LABEL_7:
      swift_release();
      uint64_t v21 = v39;
LABEL_8:
      uint64_t v22 = (uint64_t)v37;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v37, v16, AssociatedTypeWitness);
      uint64_t v23 = type metadata accessor for ItemState();
      v24 = (uint64_t *)(a1 + *(int *)(v23 + 36));
      uint64_t v25 = *v24;
      uint64_t v26 = v24[1];
      uint64_t v27 = v38;
      sub_24D409F80(a1 + *(int *)(v23 + 40), v38);
      swift_getAssociatedConformanceWitness();
      uint64_t v28 = v42;
      sub_24D958E58(v22, v25, v26, v27, AssociatedTypeWitness, v42);
      uint64_t v29 = type metadata accessor for ItemState();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v28, 0, 1, v29);
      return swift_bridgeObjectRetain();
    }
    __break(1u);
    goto LABEL_15;
  }
  if ((*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(v19, AssociatedConformanceWitness))
  {
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      swift_retain();
      swift_release();
      sub_24DBB27A0();
      goto LABEL_7;
    }
LABEL_15:
    __break(1u);
    return result;
  }
  v30 = v36;
  uint64_t v31 = v43;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*v3 + 152))(a1);
  if (!v31)
  {
    uint64_t v21 = v39;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v30, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v35);
      swift_getAssociatedConformanceWitness();
      uint64_t v32 = type metadata accessor for ItemState();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v42, 1, 1, v32);
    }
    uint64_t v43 = 0;
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v16, v30, AssociatedTypeWitness);
    goto LABEL_8;
  }
  return result;
}

unint64_t sub_24D47CFE4(unint64_t result, char a2, uint64_t a3, unsigned __int8 a4)
{
  if (a2 == -1 || a2 == 2 && result == 3)
  {
    if ((a4 & 0xFE) != 0) {
      return a3;
    }
    else {
      return 3;
    }
  }
  else if (a4 >= 2u)
  {
    if (a4 != 2)
    {
LABEL_18:
      sub_24DCCA978();
      __break(1u);
      JUMPOUT(0x24D47D108);
    }
    switch(a3)
    {
      case 0:
        if (a2 != 2 || result >= 2) {
          goto LABEL_18;
        }
        return result;
      case 1:
        if (a2 != 2 || result >= 2) {
          goto LABEL_18;
        }
        uint64_t result = 1;
        break;
      case 2:
        return 2;
      case 3:
        return result;
      default:
        goto LABEL_18;
    }
  }
  return result;
}

uint64_t sub_24D47D118(uint64_t a1, uint64_t a2, void *a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v359 = a8;
  uint64_t v335 = a7;
  uint64_t v311 = a6;
  uint64_t v350 = a5;
  int v303 = a4;
  v342 = a3;
  uint64_t v356 = a1;
  uint64_t v357 = a2;
  uint64_t v10 = (void *)*v9;
  uint64_t v316 = sub_24DCC9078();
  uint64_t v315 = *(void *)(v316 - 8);
  MEMORY[0x270FA5388](v316);
  v314 = &v302[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = (ValueMetadata *)v10[12];
  uint64_t v13 = v10[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v310 = sub_24DCCA3F8();
  uint64_t v309 = *(void *)(v310 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v310);
  v308 = &v302[-v16];
  uint64_t v312 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v15);
  v304 = &v302[-v17];
  v18 = (ValueMetadata *)v10[13];
  v351 = v9;
  uint64_t v19 = v10[11];
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v334 = sub_24DCCA3F8();
  uint64_t v318 = *(void *)(v334 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v334);
  v317 = &v302[-v22];
  uint64_t v319 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v21);
  v305 = &v302[-v23];
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v25 = swift_getAssociatedConformanceWitness();
  uint64_t v313 = AssociatedTypeWitness;
  uint64_t v361 = AssociatedTypeWitness;
  uint64_t v362 = v20;
  uint64_t v320 = v20;
  v363 = (ValueMetadata *)AssociatedConformanceWitness;
  v364 = (ValueMetadata *)v25;
  uint64_t v349 = type metadata accessor for ReconciliationID();
  uint64_t v346 = *(void *)(v349 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v349);
  v321 = &v302[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v26);
  v331 = &v302[-v28];
  uint64_t v329 = v13;
  uint64_t v361 = v13;
  uint64_t v362 = v19;
  uint64_t v327 = v19;
  v330 = v12;
  v363 = v12;
  v364 = v18;
  v328 = v18;
  uint64_t v345 = type metadata accessor for PersistenceTrigger();
  uint64_t v344 = *(void *)(v345 - 8);
  MEMORY[0x270FA5388](v345);
  v343 = (uint64_t *)&v302[-v29];
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v307 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  v326 = &v302[-v31];
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v306 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  v325 = &v302[-v33];
  uint64_t v34 = swift_getAssociatedConformanceWitness();
  uint64_t v35 = swift_getAssociatedConformanceWitness();
  uint64_t v332 = v32;
  uint64_t v361 = v32;
  uint64_t v362 = v30;
  uint64_t v333 = v30;
  uint64_t v324 = v34;
  v363 = (ValueMetadata *)v34;
  v364 = (ValueMetadata *)v35;
  uint64_t v323 = v35;
  uint64_t v36 = type metadata accessor for FileItemVersion();
  uint64_t v347 = sub_24DCCA3F8();
  uint64_t v339 = *(void *)(v347 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v347);
  v322 = &v302[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v338 = &v302[-v40];
  uint64_t v341 = v36;
  uint64_t v340 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v39);
  v352 = &v302[-v41];
  v358 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v337 = *((void *)v358 - 1);
  MEMORY[0x270FA5388](v358);
  v336 = &v302[-v42];
  uint64_t v353 = swift_getAssociatedTypeWitness();
  uint64_t v43 = sub_24DCCA3F8();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v354 = v43;
  uint64_t v355 = v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v47 = &v302[-((v46 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v48 = MEMORY[0x270FA5388](v45);
  v50 = &v302[-v49];
  uint64_t v51 = MEMORY[0x270FA5388](v48);
  v53 = &v302[-v52];
  uint64_t v54 = MEMORY[0x270FA5388](v51);
  v56 = &v302[-v55];
  uint64_t v57 = MEMORY[0x270FA5388](v54);
  v59 = &v302[-v58];
  uint64_t v60 = MEMORY[0x270FA5388](v57);
  v62 = &v302[-v61];
  uint64_t v63 = MEMORY[0x270FA5388](v60);
  v65 = &v302[-v64];
  MEMORY[0x270FA5388](v63);
  v67 = &v302[-v66];
  uint64_t v348 = a9;
  uint64_t v68 = type metadata accessor for ReconciliationSideMutation();
  MEMORY[0x270FA5388](v68);
  v70 = &v302[-v69];
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v71 + 16))(&v302[-v69], v356, v68);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v172 = *(void *)v70;
      uint64_t v174 = v354;
      uint64_t v173 = v355;
      uint64_t v75 = v357;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v355 + 16))(v65, v357, v354);
      int v175 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v353 - 8) + 48))(v65, 1);
      (*(void (**)(unsigned char *, uint64_t))(v173 + 8))(v65, v174);
      v176 = v358;
      if (v175 == 1) {
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 408);
      }
      *(void *)(v75 + v358[10]) &= ~v172;
      uint64_t v78 = v176[9];
      uint64_t v177 = *(void *)(v75 + v78);
      if ((v177 & 1) == 0) {
        return 1;
      }
      unint64_t v80 = v177 & 0xFFFFFFFFFFFFFFFELL;
      goto LABEL_88;
    case 2u:
      uint64_t v81 = v357;
      v82 = v358;
      uint64_t v83 = v358[9];
      if ((*(void *)(v357 + v83) & 9) == 1) {
        goto LABEL_34;
      }
      unint64_t v84 = *(void *)(v357 + v83) & 0xFFFFFFFFFFFFFFF6 | 1;
      goto LABEL_33;
    case 3u:
      unsigned __int8 v163 = *v70;
      uint64_t v165 = v354;
      uint64_t v164 = v355;
      uint64_t v166 = v357;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v355 + 16))(v59, v357, v354);
      int v167 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v353 - 8) + 48))(v59, 1);
      (*(void (**)(unsigned char *, uint64_t))(v164 + 8))(v59, v165);
      if (v167 == 1) {
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 468);
      }
      uint64_t v168 = v358[9];
      uint64_t v169 = *(void *)(v166 + v168);
      if (v163)
      {
        uint64_t result = 0;
        if ((v169 & 2) == 0) {
          *(void *)(v166 + v168) = v169 | 2;
        }
      }
      else
      {
        if ((v169 & 0x22) == 0) {
          return 0;
        }
        uint64_t result = 0;
        *(void *)(v166 + v168) = v169 & 0xFFFFFFFFFFFFFFDDLL;
      }
      return result;
    case 4u:
      unsigned __int8 v136 = *v70;
      uint64_t v138 = v354;
      uint64_t v137 = v355;
      uint64_t v139 = v357;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v355 + 16))(v53, v357, v354);
      int v140 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v353 - 8) + 48))(v53, 1);
      (*(void (**)(unsigned char *, uint64_t))(v137 + 8))(v53, v138);
      if (v140 == 1) {
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 487);
      }
      uint64_t v141 = v358[9];
      uint64_t v142 = *(void *)(v139 + v141);
      uint64_t result = 0;
      if (v136)
      {
        if ((v142 & 4) != 0) {
          return result;
        }
        unint64_t v143 = v142 | 4;
      }
      else
      {
        if ((v142 & 4) == 0) {
          return result;
        }
        unint64_t v143 = v142 & 0xFFFFFFFFFFFFFFFBLL;
      }
      goto LABEL_95;
    case 5u:
      unsigned __int8 v180 = *v70;
      uint64_t v182 = v354;
      uint64_t v181 = v355;
      uint64_t v139 = v357;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v355 + 16))(v50, v357, v354);
      int v183 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v353 - 8) + 48))(v50, 1);
      (*(void (**)(unsigned char *, uint64_t))(v181 + 8))(v50, v182);
      if (v183 == 1) {
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 496);
      }
      uint64_t v141 = v358[9];
      uint64_t v184 = *(void *)(v139 + v141);
      if (v180)
      {
        uint64_t result = 0;
        if ((v184 & 0x10) != 0) {
          return result;
        }
        unint64_t v143 = v184 | 0x10;
        goto LABEL_95;
      }
      if ((v184 & 0x30) != 0)
      {
        uint64_t result = 0;
        unint64_t v143 = v184 & 0xFFFFFFFFFFFFFFCFLL;
        goto LABEL_95;
      }
      return 0;
    case 6u:
      uint64_t v191 = v358[9];
      uint64_t v192 = *(void *)(v357 + v191);
      if (*v70 == 1)
      {
        uint64_t result = 0;
        if ((v192 & 0x20) == 0) {
          *(void *)(v357 + v191) = v192 | 0x20;
        }
      }
      else
      {
        uint64_t result = 0;
        if ((v192 & 0x20) != 0) {
          *(void *)(v357 + v191) = v192 & 0xFFFFFFFFFFFFFFDFLL;
        }
      }
      return result;
    case 7u:
      uint64_t v170 = v358[9];
      uint64_t v171 = *(void *)(v357 + v170);
      if (*v70 == 1)
      {
        uint64_t result = 0;
        if ((v171 & 0x40) == 0) {
          *(void *)(v357 + v170) = v171 | 0x40;
        }
      }
      else
      {
        uint64_t result = 0;
        if ((v171 & 0x40) != 0) {
          *(void *)(v357 + v170) = v171 & 0xFFFFFFFFFFFFFFBFLL;
        }
      }
      return result;
    case 8u:
      uint64_t v193 = v341;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      int v195 = v70[*(int *)(TupleTypeMetadata3 + 48)];
      int v196 = v70[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v197 = v340;
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v340 + 32))(v352, v70, v193);
      uint64_t v199 = v354;
      uint64_t v198 = v355;
      uint64_t v200 = v357;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v355 + 16))(v62, v357, v354);
      int v201 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v353 - 8) + 48))(v62, 1);
      (*(void (**)(unsigned char *, uint64_t))(v198 + 8))(v62, v199);
      if (v201 == 1) {
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 451);
      }
      uint64_t v202 = v200 + v358[12];
      uint64_t v203 = v339;
      v204 = v338;
      uint64_t v205 = v347;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v339 + 16))(v338, v202, v347);
      uint64_t v359 = *(void *)(v197 + 48);
      int v206 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v359)(v204, 1, v193);
      (*(void (**)(unsigned char *, uint64_t))(v203 + 8))(v204, v205);
      if (v206 == 1)
      {
        LODWORD(v358) = v196;
        uint64_t v207 = v324;
        v208 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v324 + 40);
        LODWORD(v357) = v195;
        uint64_t v209 = v203;
        uint64_t v210 = (uint64_t)v325;
        uint64_t v356 = v202;
        v211 = v352;
        uint64_t v212 = v332;
        v208(v352, v332, v324);
        v213 = &v211[*(int *)(v193 + 56)];
        uint64_t v214 = v323;
        v215 = v326;
        uint64_t v216 = v333;
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v323 + 40))(v213, v333, v323);
        uint64_t v300 = v207;
        uint64_t v301 = v214;
        int v196 = (int)v358;
        v217 = v322;
        uint64_t v218 = (uint64_t)v215;
        uint64_t v202 = v356;
        sub_24DB33528(v210, 0, v218, 0, 0, 0, v212, v216, (uint64_t)v322);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v197 + 56))(v217, 0, 1, v193);
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(v209 + 40))(v202, v217, v347);
        int v195 = v357;
      }
      if (v195 && !((unsigned int (*)(uint64_t, uint64_t, uint64_t))v359)(v202, 1, v193)) {
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(v306 + 24))(v202, v352, v332);
      }
      if (v196 && !((unsigned int (*)(uint64_t, uint64_t, uint64_t))v359)(v202, 1, v193)) {
        (*(void (**)(uint64_t, unsigned char *, uint64_t))(v307 + 24))(v202 + *(int *)(v193 + 56), &v352[*(int *)(v193 + 56)], v333);
      }
      (*(void (**)(unsigned char *, uint64_t))(v197 + 8))(v352, v193);
      return 0;
    case 9u:
      unint64_t v152 = *(void *)v70;
      uint64_t v153 = v357;
      uint64_t v154 = v358[18];

      uint64_t result = 0;
      *(void *)(v153 + v154) = v152;
      return result;
    case 0xAu:
      uint64_t v219 = *v70;
      uint64_t v221 = v357;
      v220 = v358;
      uint64_t v222 = v358[13];
      v223 = (int *)*(unsigned __int8 *)(v357 + v222);
      uint64_t v224 = v349;
      uint64_t v225 = v350;
      switch(*(unsigned char *)(v357 + v222))
      {
        case 1:
          if (v219 == 1) {
            goto LABEL_137;
          }
          goto LABEL_120;
        case 2:
          if (!v219 || v219 == 3) {
            goto LABEL_120;
          }
          if (v219 == 1 && v303 != 1 && v303 != 4) {
            goto LABEL_110;
          }
          goto LABEL_137;
        case 3:
          if (v219 >= 3) {
            goto LABEL_137;
          }
LABEL_120:
          *(unsigned char *)(v357 + v222) = v219;
          if (!v219)
          {
            v228 = (void *)(v221 + v220[17]);
            unint64_t v229 = v228[2];
            if (v229 >> 60 != 11)
            {
              uint64_t v230 = v228[1];
              uint64_t v357 = *v228;
              v358 = v223;
              uint64_t v231 = v228[3];
              uint64_t v355 = v228[4];
              uint64_t v356 = v231;
              uint64_t v359 = v228[5];
              uint64_t v354 = v228[6];
              uint64_t Strong = swift_weakLoadStrong();
              if (Strong)
              {
                uint64_t v233 = Strong;
                v234 = v343;
                uint64_t *v343 = v357;
                v234[1] = v230;
                uint64_t v235 = v356;
                v234[2] = v229;
                v234[3] = v235;
                v234[4] = v355;
                *((unsigned char *)v234 + 40) = v359 & 1;
                v234[6] = v354;
                swift_storeEnumTagMultiPayload();
                v236 = *(void (**)(uint64_t *))(*(void *)v233 + 312);
                sub_24D416048(v230, v229);
                sub_24D416048(v230, v229);
                v236(v234);
                uint64_t v224 = v349;
                swift_release();
                sub_24D3E3850(v357, v230, v229);
                v237 = v234;
                uint64_t v225 = v350;
                (*(void (**)(uint64_t *, uint64_t))(v344 + 8))(v237, v345);
              }
              sub_24D3E3850(*v228, v228[1], v228[2]);
              void *v228 = 0;
              v228[1] = 0;
              v228[2] = 0xB000000000000000;
              *(_OWORD *)(v228 + 3) = 0u;
              *(_OWORD *)(v228 + 5) = 0u;
              v223 = v358;
            }
          }
          goto LABEL_125;
        case 4:
          if ((v219 - 1) < 2) {
            goto LABEL_110;
          }
          if (v219)
          {
LABEL_137:
            if (v223 != v219)
            {
              id v277 = (id)fpfs_current_or_default_log();
              v278 = v314;
              sub_24DCC9088();
              v279 = sub_24DCC9068();
              os_log_type_t v280 = sub_24DCCA128();
              if (os_log_type_enabled(v279, v280))
              {
                unint64_t v281 = 0xED00006465747365;
                uint64_t v282 = 0x7265746E49746F6ELL;
                uint64_t v283 = swift_slowAlloc();
                uint64_t v284 = swift_slowAlloc();
                uint64_t v361 = v284;
                *(_DWORD *)uint64_t v283 = 136446466;
                uint64_t v285 = v223;
                uint64_t v286 = v284;
                uint64_t v287 = 0x7265746E49746F6ELL;
                unint64_t v288 = 0xED00006465747365;
                switch(v285)
                {
                  case 1:
                    uint64_t v287 = 0x746F687370616E73;
                    unint64_t v288 = 0xEC000000676E6974;
                    break;
                  case 2:
                    unint64_t v288 = 0xE800000000000000;
                    uint64_t v287 = 0x676E696863746177;
                    break;
                  case 3:
                    unint64_t v288 = 0x800000024DCFBCB0;
                    uint64_t v287 = 0xD000000000000011;
                    break;
                  case 4:
                    uint64_t v287 = 0xD000000000000015;
                    unint64_t v288 = 0x800000024DCFBC90;
                    break;
                  default:
                    break;
                }
                uint64_t v360 = sub_24D418FB4(v287, v288, &v361);
                sub_24DCCA428();
                swift_bridgeObjectRelease();
                *(_WORD *)(v283 + 12) = 2082;
                switch((int)v219)
                {
                  case 1:
                    uint64_t v282 = 0x746F687370616E73;
                    unint64_t v281 = 0xEC000000676E6974;
                    break;
                  case 2:
                    unint64_t v281 = 0xE800000000000000;
                    uint64_t v282 = 0x676E696863746177;
                    break;
                  case 3:
                    unint64_t v281 = 0x800000024DCFBCB0;
                    uint64_t v282 = 0xD000000000000011;
                    break;
                  case 4:
                    uint64_t v282 = 0xD000000000000015;
                    unint64_t v281 = 0x800000024DCFBC90;
                    break;
                  default:
                    break;
                }
                uint64_t v360 = sub_24D418FB4(v282, v281, &v361);
                sub_24DCCA428();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_24D3D0000, v279, v280, "❌  invalid transition %{public}s -> %{public}s", (uint8_t *)v283, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x25332B030](v286, -1, -1);
                MEMORY[0x25332B030](v283, -1, -1);
              }

              (*(void (**)(unsigned char *, uint64_t))(v315 + 8))(v278, v316);
            }
          }
          goto LABEL_170;
        default:
          if ((v219 - 1) >= 3) {
            goto LABEL_137;
          }
LABEL_110:
          *(unsigned char *)(v357 + v222) = v219;
LABEL_125:
          uint64_t v238 = v219;
          uint64_t v239 = v346;
          uint64_t v241 = v346 + 16;
          v240 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v346 + 16);
          v242 = v331;
          v240((uint64_t *)v331, v225, v224);
          int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          v244 = *(void (**)(unsigned char *, uint64_t))(v239 + 8);
          v244(v242, v224);
          if (EnumCaseMultiPayload == 1) {
            goto LABEL_128;
          }
          uint64_t v356 = v241;
          uint64_t v357 = (uint64_t)v240;
          v358 = v223;
          uint64_t v359 = v238;
          uint64_t v245 = v318;
          v246 = v317;
          uint64_t v247 = v334;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v318 + 16))(v317, v335, v334);
          uint64_t v248 = v319;
          uint64_t v249 = v320;
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v319 + 48))(v246, 1, v320) != 1)
          {
            v266 = v305;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v248 + 32))(v305, v246, v249);
            uint64_t v267 = swift_weakLoadStrong();
            if (v267)
            {
              uint64_t v268 = v267;
              uint64_t v361 = v224;
              uint64_t v362 = sub_24DCCA3F8();
              v363 = &type metadata for ContentStatus;
              v364 = &type metadata for ContentStatus;
              TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
              uint64_t v270 = v224;
              v271 = v343;
              v272 = v266;
              v273 = (char *)v343 + TupleTypeMetadata[12];
              uint64_t v274 = TupleTypeMetadata[16];
              uint64_t v275 = TupleTypeMetadata[20];
              ((void (*)(uint64_t *, uint64_t, uint64_t))v357)(v343, v350, v270);
              (*(void (**)(char *, unsigned char *, uint64_t))(v248 + 16))(v273, v272, v249);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(char *, void, uint64_t, uint64_t))(v346 + 56))(v273, 0, 1, v270);
              *((unsigned char *)v271 + v274) = (_BYTE)v358;
              *((unsigned char *)v271 + v275) = v359;
              uint64_t v276 = v345;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(uint64_t *))(*(void *)v268 + 312))(v271);
              swift_release();
              (*(void (**)(uint64_t *, uint64_t))(v344 + 8))(v271, v276);
              (*(void (**)(unsigned char *, uint64_t))(v248 + 8))(v272, v249);
            }
            else
            {
              (*(void (**)(unsigned char *, uint64_t))(v248 + 8))(v266, v249);
            }
            return 0;
          }
          (*(void (**)(unsigned char *, uint64_t))(v245 + 8))(v246, v247);
          LOBYTE(v223) = (_BYTE)v358;
          uint64_t v238 = v359;
          uint64_t v225 = v350;
          v240 = (void (*)(uint64_t *, uint64_t, uint64_t))v357;
LABEL_128:
          v250 = v321;
          v240((uint64_t *)v321, v225, v224);
          int v251 = swift_getEnumCaseMultiPayload();
          v244(v250, v224);
          v252 = v240;
          if (v251 != 1) {
            goto LABEL_131;
          }
          uint64_t v253 = v309;
          v254 = v308;
          uint64_t v255 = v310;
          (*(void (**)(unsigned char *, uint64_t, uint64_t))(v309 + 16))(v308, v311, v310);
          uint64_t v256 = v312;
          uint64_t v257 = v313;
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v312 + 48))(v254, 1, v313) != 1)
          {
            v289 = v304;
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v256 + 32))(v304, v254, v257);
            uint64_t v290 = swift_weakLoadStrong();
            if (v290)
            {
              uint64_t v291 = v290;
              uint64_t v361 = v224;
              uint64_t v362 = sub_24DCCA3F8();
              v363 = &type metadata for ContentStatus;
              v364 = &type metadata for ContentStatus;
              v292 = (int *)swift_getTupleTypeMetadata();
              uint64_t v293 = v292[12];
              uint64_t v294 = v224;
              v295 = v343;
              uint64_t v359 = v238;
              v296 = (char *)v343 + v293;
              v297 = (int *)v292[20];
              uint64_t v357 = v292[16];
              v358 = v297;
              v252(v343, v350, v294);
              (*(void (**)(char *, unsigned char *, uint64_t))(v256 + 16))(v296, v289, v257);
              swift_storeEnumTagMultiPayload();
              (*(void (**)(char *, void, uint64_t, uint64_t))(v346 + 56))(v296, 0, 1, v294);
              v298 = v358;
              *((unsigned char *)v295 + v357) = (_BYTE)v223;
              *((unsigned char *)v298 + (void)v295) = v359;
              uint64_t v299 = v345;
              swift_storeEnumTagMultiPayload();
              (*(void (**)(uint64_t *))(*(void *)v291 + 312))(v295);
              swift_release();
              (*(void (**)(uint64_t *, uint64_t))(v344 + 8))(v295, v299);
            }
            (*(void (**)(unsigned char *, uint64_t))(v256 + 8))(v289, v257);
            return 0;
          }
          (*(void (**)(unsigned char *, uint64_t))(v253 + 8))(v254, v255);
LABEL_131:
          uint64_t result = swift_weakLoadStrong();
          if (!result) {
            return result;
          }
          uint64_t v258 = result;
          uint64_t v361 = v224;
          uint64_t v362 = sub_24DCCA3F8();
          v363 = &type metadata for ContentStatus;
          v364 = &type metadata for ContentStatus;
          v259 = (int *)swift_getTupleTypeMetadata();
          uint64_t v260 = v224;
          v261 = v343;
          v262 = (char *)v343 + v259[12];
          uint64_t v263 = v259[16];
          uint64_t v264 = v259[20];
          v240(v343, v350, v260);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v346 + 56))(v262, 1, 1, v260);
          *((unsigned char *)v261 + v263) = (_BYTE)v223;
          *((unsigned char *)v261 + v264) = v238;
          uint64_t v265 = v345;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *))(*(void *)v258 + 312))(v261);
          swift_release();
          (*(void (**)(uint64_t *, uint64_t))(v344 + 8))(v261, v265);
          break;
      }
      return 0;
    case 0xBu:
      unsigned int v114 = *v70;
      unsigned __int8 v115 = v70[1];
      uint64_t v117 = v354;
      uint64_t v116 = v355;
      uint64_t v118 = v357;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v355 + 16))(v47, v357, v354);
      int v119 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v353 - 8) + 48))(v47, 1);
      (*(void (**)(unsigned char *, uint64_t))(v116 + 8))(v47, v117);
      v120 = v358;
      if (v119 == 1) {
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 506);
      }
      uint64_t v121 = v358[14];
      uint64_t v122 = *(unsigned __int8 *)(v118 + v121);
      if (v115)
      {
LABEL_19:
        *(unsigned char *)(v118 + v121) = v114;
        uint64_t v123 = swift_weakLoadStrong();
        if (v123)
        {
          uint64_t v124 = v123;
          MEMORY[0x270FA5388](v123);
          strcpy(&v302[-32], " otherID from to ");
          uint64_t v356 = v122;
          uint64_t v125 = v349;
          uint64_t v361 = v349;
          uint64_t v362 = sub_24DCCA3F8();
          v363 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1995E0);
          v364 = v363;
          v126 = (int *)swift_getTupleTypeMetadata();
          v127 = v343;
          uint64_t v128 = (uint64_t)v343 + v126[12];
          uint64_t v129 = v126[16];
          uint64_t v130 = v126[20];
          uint64_t v131 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v346 + 16))(v343, v350, v125);
          MEMORY[0x270FA5388](v131);
          uint64_t v132 = v327;
          *(void *)&v302[-48] = v329;
          *(void *)&v302[-40] = v132;
          v133 = v330;
          *(void *)&v302[-32] = v359;
          *(void *)&v302[-24] = v133;
          uint64_t v300 = (uint64_t)v328;
          uint64_t v301 = v348;
          sub_24DB86C94((void (*)(char *, char *))sub_24D4A5E24, (uint64_t)&v302[-64], MEMORY[0x263F8E628], v125, v134, v128);
          *((unsigned char *)v127 + v129) = v356;
          v120 = v358;
          *((unsigned char *)v127 + v130) = v114;
          uint64_t v135 = v345;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(uint64_t *))(*(void *)v124 + 312))(v127);
          swift_release();
          (*(void (**)(uint64_t *, uint64_t))(v344 + 8))(v127, v135);
        }
        if (v114 == 6)
        {
          *(unsigned char *)(v118 + v120[15]) = 0;
          return 1;
        }
        else
        {
          return 1;
        }
      }
      else
      {
        switch(*(unsigned char *)(v118 + v121))
        {
          case 1:
            if (v114 != 2) {
              goto LABEL_170;
            }
            goto LABEL_19;
          case 2:
            if (v114 != 3) {
              goto LABEL_170;
            }
            goto LABEL_19;
          case 3:
            if ((v114 | 2) != 6) {
              goto LABEL_170;
            }
            goto LABEL_19;
          case 4:
            if (v114 != 6) {
              goto LABEL_170;
            }
            goto LABEL_19;
          case 5:
            if (v114 != 6 && v114) {
              goto LABEL_170;
            }
            goto LABEL_19;
          case 6:
            if (v114 && v114 != 5) {
              goto LABEL_170;
            }
            goto LABEL_19;
          default:
            uint64_t result = 3;
            if (v114 <= 6 && ((1 << v114) & 0x4E) != 0) {
              goto LABEL_19;
            }
            break;
        }
      }
      return result;
    case 0xCu:
      unint64_t v145 = *(void *)v70;
      unint64_t v144 = *((void *)v70 + 1);
      int v146 = v70[16];
      uint64_t v147 = v357;
      v148 = v358;
      uint64_t v149 = v357 + v358[16];
      v150 = *(void **)v149;
      v151 = *(void **)(v149 + 8);
      switch(*(unsigned char *)(v149 + 16))
      {
        case 1:
          if (v146 != 2) {
            goto LABEL_108;
          }
          sub_24D3E380C(v150, v151, 1);
          goto LABEL_107;
        case 2:
          if (v146 != 3 && (v146 != 4 || __PAIR128__(v144, v145) >= 2)) {
            goto LABEL_108;
          }
          sub_24D3E380C(v150, v151, 2);
          uint64_t v226 = v148[9];
          uint64_t v227 = *(void *)(v147 + v226);
          if ((v227 & 8) != 0) {
            *(void *)(v147 + v226) = v227 & 0xFFFFFFFFFFFFFFF7;
          }
          goto LABEL_107;
        case 3:
          if (v146 != 2) {
            goto LABEL_108;
          }
          sub_24D3E380C(v150, v151, 3);
LABEL_107:
          uint64_t result = 0;
          *(void *)uint64_t v149 = v145;
          *(void *)(v149 + 8) = v144;
          *(unsigned char *)(v149 + 16) = v146;
          break;
        case 4:
          if (v150 != (void *)1 || v151 || v146 != 2) {
            goto LABEL_108;
          }
          goto LABEL_107;
        default:
LABEL_108:
          sub_24D3E380C(*(void **)v70, *((id *)v70 + 1), v70[16]);
LABEL_170:
          uint64_t result = 3;
          break;
      }
      return result;
    case 0xDu:
      int v185 = *v70;
      int v186 = v70[1];
      uint64_t v187 = v357;
      v188 = v358;
      uint64_t v189 = v358[11];
      if (v185 != 3)
      {
        int v190 = *(unsigned __int8 *)(v357 + v189);
        uint64_t result = 3;
        if (v190 == 3 || v190 != v185) {
          return result;
        }
      }
      *(unsigned char *)(v357 + v189) = v186;
      if ((v186 - 1) < 3) {
        return 0;
      }
      uint64_t result = 0;
      *(unsigned char *)(v187 + v188[15]) = 0;
      return result;
    case 0xEu:
      uint64_t v85 = *(void *)v70;
      uint64_t v86 = *((void *)v70 + 1);
      unint64_t v88 = *((void *)v70 + 2);
      uint64_t v87 = *((void *)v70 + 3);
      uint64_t v89 = *((void *)v70 + 4);
      v90 = (unsigned char *)*((void *)v70 + 5);
      uint64_t v91 = *((void *)v70 + 6);
      v92 = v358;
      if ((v70[56] & 1) == 0)
      {
        v93 = (uint64_t *)(v357 + v358[17]);
        unint64_t v94 = v93[2];
        if (v94 >> 60 != 11)
        {
          uint64_t v95 = *v93;
          uint64_t v96 = v93[1];
          uint64_t v98 = v93[3];
          uint64_t v97 = v93[4];
          uint64_t v359 = v85;
          uint64_t v100 = v93[5];
          uint64_t v99 = v93[6];
          uint64_t v355 = v86;
          uint64_t v356 = v87;
          uint64_t v353 = v88;
          uint64_t v354 = v89;
          v351 = (void *)v91;
          v352 = v90;
          uint64_t v101 = swift_weakLoadStrong();
          uint64_t v91 = (uint64_t)v351;
          v90 = v352;
          unint64_t v88 = v353;
          uint64_t v89 = v354;
          uint64_t v86 = v355;
          uint64_t v87 = v356;
          uint64_t v85 = v359;
          if (v101)
          {
            uint64_t v102 = v101;
            uint64_t v103 = v98;
            uint64_t v350 = v98;
            v104 = v343;
            uint64_t *v343 = v95;
            v104[1] = v96;
            v104[2] = v94;
            v104[3] = v103;
            uint64_t v349 = v97;
            v104[4] = v97;
            *((unsigned char *)v104 + 40) = v100 & 1;
            v104[6] = v99;
            uint64_t v105 = v345;
            swift_storeEnumTagMultiPayload();
            v106 = *(void (**)(uint64_t *))(*(void *)v102 + 312);
            sub_24D416048(v96, v94);
            sub_24D416048(v96, v94);
            v106(v104);
            swift_release();
            sub_24D3E3850(v95, v96, v94);
            v92 = v358;
            (*(void (**)(uint64_t *, uint64_t))(v344 + 8))(v104, v105);
            uint64_t v91 = (uint64_t)v351;
            v90 = v352;
            unint64_t v88 = v353;
            uint64_t v89 = v354;
            uint64_t v86 = v355;
            uint64_t v87 = v356;
            uint64_t v85 = v359;
          }
        }
      }
      v107 = (uint64_t *)(v357 + v92[17]);
      uint64_t v108 = v107[1];
      uint64_t v359 = *v107;
      unint64_t v109 = v107[2];
      v358 = (int *)v107[3];
      uint64_t v357 = v107[4];
      uint64_t v356 = v107[5];
      uint64_t *v107 = v85;
      v107[1] = v86;
      v107[2] = v88;
      v107[3] = v87;
      v107[4] = v89;
      v107[5] = (uint64_t)v90;
      v107[6] = v91;
      uint64_t v110 = v85;
      uint64_t v111 = v86;
      unint64_t v112 = v88;
      sub_24D3F1CDC(v85, v86, v88);
      sub_24D3E3850(v359, v108, v109);
      if (v112 >> 60 == 11) {
        return 0;
      }
      sub_24D3E3850(v110, v111, v112);
      return 1;
    case 0xFu:
      int v155 = *v70;
      uint64_t v157 = v354;
      uint64_t v156 = v355;
      uint64_t v139 = v357;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v355 + 16))(v56, v357, v354);
      int v158 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v353 - 8) + 48))(v56, 1);
      (*(void (**)(unsigned char *, uint64_t))(v156 + 8))(v56, v157);
      v159 = v358;
      if (v158 == 1) {
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 478);
      }
      uint64_t v160 = swift_weakLoadStrong();
      if (!v160)
      {
        __break(1u);
LABEL_173:
        sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 398);
      }
      unsigned int v161 = (*(uint64_t (**)(uint64_t))(*(void *)v160 + 152))(v160);
      swift_release();
      uint64_t v141 = v159[9];
      uint64_t v162 = *(void *)(v139 + v141);
      uint64_t result = 0;
      if (v155 & (v161 >> 14))
      {
        if ((v162 & 0x80) != 0) {
          return result;
        }
        unint64_t v143 = v162 | 0x80;
      }
      else
      {
        if ((v162 & 0x80) == 0) {
          return result;
        }
        unint64_t v143 = v162 & 0xFFFFFFFFFFFFFF7FLL;
      }
LABEL_95:
      *(void *)(v139 + v141) = v143;
      return result;
    case 0x10u:
      uint64_t v81 = v357;
      v82 = v358;
      uint64_t v83 = v358[9];
      if ((*(void *)(v357 + v83) & 9) == 8) {
        goto LABEL_34;
      }
      unint64_t v84 = *(void *)(v357 + v83) & 0xFFFFFFFFFFFFFFF6 | 8;
LABEL_33:
      *(void *)(v81 + v83) = v84;
LABEL_34:
      uint64_t result = 0;
      *(void *)(v81 + v82[10]) = 0;
      return result;
    case 0x11u:
      v178 = v336;
      double v179 = sub_24DB86A84((uint64_t)v336);
      (*(void (**)(uint64_t, unsigned char *, int *, double))(v337 + 40))(v357, v178, v358, v179);
      return 1;
    case 0x12u:
      uint64_t result = 1;
      *(unsigned char *)(v357 + v358[15]) = 1;
      return result;
    default:
      unint64_t v72 = *(void *)v70;
      uint64_t v74 = v354;
      uint64_t v73 = v355;
      uint64_t v75 = v357;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v355 + 16))(v67, v357, v354);
      int v76 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)(v353 - 8) + 48))(v67, 1);
      (*(void (**)(unsigned char *, uint64_t))(v73 + 8))(v67, v74);
      v77 = v358;
      if (v76 == 1) {
        goto LABEL_173;
      }
      if ((v72 & ~*v342) != 0) {
        *v342 |= v72;
      }
      if (qword_26B199AA0 != -1) {
        swift_once();
      }
      *(void *)(v75 + v77[10]) |= v72 & 0xFFFFFFFFFF7FFFEFLL & (qword_26B1A24C8 | 0x409000000C000);
      uint64_t v78 = v77[9];
      uint64_t v79 = *(void *)(v75 + v78);
      if ((v79 & 9) == 0) {
        return 1;
      }
      unint64_t v80 = v79 & 0xFFFFFFFFFFFFFFF6;
LABEL_88:
      *(void *)(v75 + v78) = v80;
      return 1;
  }
}

uint64_t sub_24D47F970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24D47FAA4(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v290 = a4;
  v289 = a3;
  uint64_t v322 = a1;
  uint64_t v323 = a2;
  uint64_t v6 = *(void (**)(void, void))(*(void *)v4 + 88);
  uint64_t v7 = *(void *)(*(void *)v4 + 96);
  uint64_t v8 = *(void *)(*(void *)v4 + 104);
  uint64_t v324 = *(void (**)(void, void))(*(void *)v4 + 80);
  uint64_t v5 = v324;
  v325 = v6;
  uint64_t v326 = v7;
  uint64_t v327 = v8;
  uint64_t v270 = type metadata accessor for PersistenceTrigger();
  uint64_t v269 = *(void *)(v270 - 8);
  MEMORY[0x270FA5388](v270);
  uint64_t v268 = (char *)&v259 - v9;
  int v303 = (void (*)(char *, uint64_t, uint64_t))type metadata accessor for ReconciliationSideMutation();
  uint64_t v302 = *((void *)v303 - 1);
  MEMORY[0x270FA5388](v303);
  uint64_t v301 = (uint64_t *)((char *)&v259 - v10);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v14 = swift_getAssociatedConformanceWitness();
  uint64_t v324 = (void (*)(void, void))AssociatedTypeWitness;
  v325 = (void (*)(void, void))v12;
  uint64_t v266 = AssociatedConformanceWitness;
  uint64_t v326 = AssociatedConformanceWitness;
  uint64_t v327 = v14;
  uint64_t v261 = v14;
  uint64_t v15 = type metadata accessor for ReconciliationID();
  uint64_t v288 = sub_24DCCA3F8();
  uint64_t v287 = *(void *)(v288 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v288);
  uint64_t v286 = (uint64_t)&v259 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v285 = (uint64_t)&v259 - v18;
  uint64_t v300 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v299 = *(void *)(v300 - 8);
  MEMORY[0x270FA5388](v300);
  v298 = (uint64_t *)((char *)&v259 - v19);
  uint64_t v20 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v263 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v291 = (char *)&v259 - v22;
  uint64_t v306 = v20;
  uint64_t v313 = *(void *)(v20 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v297 = (char *)&v259 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v262 = (char *)&v259 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v272 = (char *)&v259 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  v278 = (char *)&v259 - v30;
  uint64_t v321 = v15;
  uint64_t v320 = *(void *)(v15 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  os_log_type_t v280 = (char *)&v259 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v282 = (char *)&v259 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v284 = (char *)&v259 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v296 = (void (*)(char *, char *, uint64_t))((char *)&v259 - v38);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  unint64_t v281 = (char *)&v259 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v283 = (char *)&v259 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v310 = (char *)&v259 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v279 = (char *)&v259 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v295 = (char *)&v259 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v265 = (char *)&v259 - v50;
  MEMORY[0x270FA5388](v49);
  uint64_t v276 = (char *)&v259 - v51;
  uint64_t v52 = sub_24DCCA3F8();
  uint64_t v292 = swift_getTupleTypeMetadata2();
  uint64_t v267 = *(void *)(v292 - 8);
  uint64_t v53 = MEMORY[0x270FA5388](v292);
  uint64_t v293 = (char *)&v259 - v54;
  v314 = *(char **)(v52 - 8);
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v294 = (char *)&v259 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  id v277 = (char *)&v259 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v61 = (char *)&v259 - v60;
  MEMORY[0x270FA5388](v59);
  v305 = (char *)&v259 - v62;
  uint64_t v324 = v5;
  v325 = v6;
  uint64_t v326 = v7;
  uint64_t v327 = v8;
  uint64_t v319 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v273 = *((void *)v319 - 1);
  uint64_t v63 = MEMORY[0x270FA5388](v319);
  uint64_t v264 = (uint64_t)&v259 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  uint64_t v275 = (uint64_t)&v259 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  uint64_t v274 = (char *)&v259 - v68;
  uint64_t v304 = v12;
  uint64_t v69 = *(void *)(v12 - 8);
  uint64_t v70 = MEMORY[0x270FA5388](v67);
  uint64_t v260 = (char *)&v259 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  v308 = (char *)&v259 - v73;
  uint64_t v311 = (uint64_t (*)(void))AssociatedTypeWitness;
  uint64_t v307 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  int v76 = (char *)&v259 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v74);
  uint64_t v309 = (uint64_t *)((char *)&v259 - v77);
  uint64_t v317 = v7;
  uint64_t v318 = v5;
  uint64_t v324 = v5;
  v325 = v6;
  uint64_t v315 = v8;
  uint64_t v316 = v6;
  uint64_t v326 = v7;
  uint64_t v327 = v8;
  uint64_t v78 = type metadata accessor for ReconciliationMutation();
  uint64_t v79 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v81 = (char *)&v259 - v80;
  (*(void (**)(char *, uint64_t, uint64_t))(v79 + 16))((char *)&v259 - v80, v322, v78);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v85 = v311;
      uint64_t v86 = v304;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v310 = &v81[*(int *)(TupleTypeMetadata3 + 48)];
      LODWORD(v300) = v81[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v88 = v307;
      uint64_t v89 = *(void **)(v307 + 32);
      v90 = (void (*)(void, void))v309;
      uint64_t v299 = v307 + 32;
      v298 = v89;
      ((void (*)(uint64_t *, char *, uint64_t (*)(void)))v89)(v309, v81, v85);
      uint64_t v322 = v69;
      uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v69 + 32);
      v297 = (char *)(v69 + 32);
      v296 = v91;
      v91(v308, v310, v86);
      int v303 = (void (*)(char *, uint64_t, uint64_t))*((void *)v314 + 2);
      v92 = v305;
      v303(v305, v323, v52);
      v93 = *(void **)(v88 + 16);
      uint64_t v302 = v88 + 16;
      uint64_t v301 = v93;
      ((void (*)(char *, void (*)(void, void), uint64_t (*)(void)))v93)(v61, v90, v85);
      (*(void (**)(char *, void, uint64_t, uint64_t (*)(void)))(v88 + 56))(v61, 0, 1, v85);
      unint64_t v94 = v293;
      uint64_t v95 = &v293[*(int *)(v292 + 48)];
      uint64_t v96 = v92;
      uint64_t v97 = (void (*)(char *, char *, uint64_t))v303;
      v303(v293, (uint64_t)v96, v52);
      uint64_t v310 = v95;
      v97(v95, v61, v52);
      uint64_t v98 = *(uint64_t (**)(char *, uint64_t, uint64_t (*)(void)))(v88 + 48);
      if (v98(v94, 1, v85) == 1)
      {
        uint64_t v99 = (void (*)(char *, uint64_t))*((void *)v314 + 1);
        v99(v61, v52);
        v99(v305, v52);
        uint64_t v100 = v311;
        int v101 = v98(v310, 1, v311);
        uint64_t v102 = v291;
        if (v101 == 1)
        {
          v99(v293, v52);
          goto LABEL_51;
        }
      }
      else
      {
        uint64_t v177 = v277;
        v97(v277, v94, v52);
        v178 = v310;
        int v179 = v98(v310, 1, v311);
        unsigned __int8 v180 = (void (**)(char *, uint64_t (*)(void)))(v307 + 8);
        if (v179 != 1)
        {
          v208 = v311;
          ((void (*)(char *, char *, uint64_t (*)(void)))v298)(v76, v178, v311);
          char v209 = sub_24DCC9798();
          uint64_t v210 = *v180;
          (*v180)(v76, v208);
          v211 = (void (*)(char *, uint64_t))*((void *)v314 + 1);
          v211(v61, v52);
          v211(v305, v52);
          v210(v277, v208);
          v211(v94, v52);
          uint64_t v100 = v208;
          uint64_t v102 = v291;
          if (v209)
          {
LABEL_51:
            uint64_t v212 = *(void (**)(char *))(v313 + 16);
            v213 = v278;
            int v303 = (void (*)(char *, uint64_t, uint64_t))(v323 + v319[13]);
            uint64_t v214 = v306;
            v212(v278);
            uint64_t v215 = v322;
            uint64_t v216 = *(char **)(v322 + 16);
            v217 = v272;
            uint64_t v218 = v304;
            uint64_t v310 = (char *)(v322 + 16);
            v305 = v216;
            ((void (*)(char *, char *, uint64_t))v216)(v272, v308, v304);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v215 + 56))(v217, 0, 1, v218);
            uint64_t v219 = &v102[*(int *)(TupleTypeMetadata2 + 48)];
            v220 = v213;
            uint64_t v221 = v214;
            ((void (*)(char *, char *, uint64_t))v212)(v102, v220, v214);
            v314 = v219;
            ((void (*)(char *, char *, uint64_t))v212)(v219, v217, v214);
            uint64_t v222 = v102;
            v223 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v215 + 48);
            if (v223(v222, 1, v218) == 1)
            {
              uint64_t v224 = *(void (**)(char *, uint64_t))(v313 + 8);
              v224(v217, v214);
              v224(v278, v214);
              uint64_t v192 = v218;
              if (v223(v314, 1, v218) == 1)
              {
                v224(v291, v214);
                int v225 = 0;
                uint64_t v226 = v322;
                uint64_t v227 = v307;
                v228 = v274;
LABEL_69:
                uint64_t v254 = (uint64_t)v308;
                uint64_t v255 = (void (*)(void, void))v309;
                sub_24D4A5E98(v323, (void (*)(void, void))v309, (uint64_t)v308, v300, (uint64_t)v318, (uint64_t)v316, v317, v315);
                (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v254, v192);
                (*(void (**)(void, uint64_t (*)(void)))(v227 + 8))(v255, v311);
                if (v225) {
                  (*(void (**)(char *, int *))(v273 + 8))(v228, v319);
                }
                return 1;
              }
            }
            else
            {
              v232 = v262;
              ((void (*)(char *, char *, uint64_t))v212)(v262, v291, v221);
              uint64_t v233 = v314;
              v234 = (void (**)(char *, uint64_t))(v215 + 8);
              if (v223(v314, 1, v218) != 1)
              {
                v244 = v260;
                v296(v260, v233, v218);
                uint64_t v245 = v218;
                char v246 = sub_24DCC9798();
                uint64_t v247 = *v234;
                (*v234)(v244, v245);
                uint64_t v248 = *(void (**)(char *, uint64_t))(v313 + 8);
                v248(v272, v221);
                v248(v278, v221);
                v247(v232, v245);
                v248(v291, v221);
                uint64_t v237 = v328;
                uint64_t v192 = v245;
                v228 = v274;
                if (v246)
                {
                  int v225 = 0;
                  uint64_t v226 = v322;
LABEL_68:
                  uint64_t v227 = v307;
                  goto LABEL_69;
                }
                goto LABEL_59;
              }
              uint64_t v235 = v218;
              v236 = *(void (**)(char *, uint64_t))(v313 + 8);
              v236(v272, v221);
              v236(v278, v221);
              (*v234)(v232, v235);
              uint64_t v192 = v235;
            }
            (*(void (**)(char *, uint64_t))(v263 + 8))(v291, TupleTypeMetadata2);
            uint64_t v237 = v328;
            v228 = v274;
LABEL_59:
            uint64_t v238 = (uint64_t)v265;
            ((void (*)(char *, char *, uint64_t))v305)(v265, v308, v192);
            uint64_t v239 = v321;
            swift_storeEnumTagMultiPayload();
            uint64_t v240 = v264;
            uint64_t v241 = v312;
            v242 = sub_24D47C288(v264, v238);
            if (v237)
            {
              (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v238, v239);
              uint64_t v190 = v322;
              uint64_t v191 = v307;
              uint64_t v100 = v311;
              goto LABEL_66;
            }
            uint64_t v249 = v242;
            char v250 = v243;
            (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v238, v239);
            (*(void (**)(char *, uint64_t, int *))(v273 + 32))(v228, v240, v319);
            uint64_t v226 = v322;
            if ((v250 & 1) == 0)
            {
              (*(void (**)(char *, uint64_t *, void))(*(void *)v241 + 200))(v228, v249, 0);
              v252 = &v228[v319[13]];
              uint64_t v253 = type metadata accessor for ItemReconciliationHalf();
              (*(void (**)(void *, char *, uint64_t))(*(void *)(v253 - 8) + 24))(v303, v252, v253);
            }
LABEL_67:
            int v225 = 1;
            goto LABEL_68;
          }
LABEL_32:
          uint64_t v183 = (uint64_t)v276;
          ((void (*)(char *, uint64_t *, uint64_t (*)(void)))v301)(v276, v309, v100);
          uint64_t v184 = v321;
          swift_storeEnumTagMultiPayload();
          uint64_t v185 = v275;
          uint64_t v186 = v312;
          uint64_t v187 = v328;
          v188 = sub_24D47C288(v275, v183);
          if (v187)
          {
            (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v183, v184);
            uint64_t v190 = v322;
            uint64_t v191 = v307;
            uint64_t v192 = v304;
LABEL_66:
            (*(void (**)(char *, uint64_t))(v190 + 8))(v308, v192);
            int v251 = *(void (**)(uint64_t *, uint64_t (*)(void)))(v191 + 8);
            uint64_t v84 = v191 + 8;
            v251(v309, v100);
            return v84;
          }
          unint64_t v229 = v188;
          char v230 = v189;
          (*(void (**)(uint64_t, uint64_t))(v320 + 8))(v183, v184);
          v228 = v274;
          (*(void (**)(char *, uint64_t, int *))(v273 + 32))(v274, v185, v319);
          uint64_t v226 = v322;
          if (v230)
          {
            int v225 = 1;
            uint64_t v227 = v307;
            uint64_t v192 = v304;
            goto LABEL_69;
          }
          (*(void (**)(char *, uint64_t *, void))(*(void *)v186 + 200))(v228, v229, 0);
          uint64_t v192 = v304;
          uint64_t v231 = type metadata accessor for ItemReconciliationHalf();
          (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v231 - 8) + 24))(v323, v228, v231);
          goto LABEL_67;
        }
        uint64_t v181 = v177;
        uint64_t v182 = (void (*)(char *, uint64_t))*((void *)v314 + 1);
        v182(v61, v52);
        v182(v305, v52);
        uint64_t v100 = v311;
        (*v180)(v181, v311);
      }
      (*(void (**)(char *, uint64_t))(v267 + 8))(v293, v292);
      goto LABEL_32;
    case 2u:
      uint64_t v103 = v321;
      *(unsigned char *)(v323 + v319[14]) = v81[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      goto LABEL_26;
    case 3u:
      uint64_t v104 = type metadata accessor for ItemReconciliationHalf();
      uint64_t v105 = v323;
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v104 - 8) + 8))(v323, v104);
      sub_24DB86A84(v105);
      v106 = v319;
      uint64_t v107 = v105 + v319[13];
      uint64_t v108 = type metadata accessor for ItemReconciliationHalf();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v108 - 8) + 8))(v107, v108);
      sub_24DB86A84(v107);
      uint64_t v109 = sub_24DCC9C98();
      uint64_t v110 = v106[15];
      swift_bridgeObjectRelease();
      *(void *)(v105 + v110) = v109;
      (*(void (**)(char *, uint64_t))(v79 + 8))(v81, v78);
      return 2;
    case 4u:
    case 5u:
      uint64_t v83 = v321;
      uint64_t v84 = *(void *)&v81[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, uint64_t))(v320 + 8))(v81, v83);
      return v84;
    case 6u:
      uint64_t v111 = v321;
      uint64_t v112 = swift_getTupleTypeMetadata2();
      uint64_t v113 = v320;
      unsigned int v114 = v295;
      (*(void (**)(char *, char *, uint64_t))(v320 + 32))(v295, &v81[*(int *)(v112 + 48)], v111);
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v279, v114, v111);
      sub_24DCC9D48();
      sub_24DCC9D08();
      unsigned __int8 v115 = *(void (**)(char *, uint64_t))(v113 + 8);
      v115(v114, v111);
      v115(v81, v111);
      return 1;
    case 7u:
      uint64_t v116 = v321;
      uint64_t v117 = swift_getTupleTypeMetadata2();
      uint64_t v118 = v320;
      int v119 = v295;
      uint64_t v120 = (*(uint64_t (**)(char *, char *, uint64_t))(v320 + 32))(v295, &v81[*(int *)(v117 + 48)], v116);
      MEMORY[0x270FA5388](v120);
      uint64_t v121 = v316;
      *(&v259 - 6) = (uint64_t)v318;
      *(&v259 - 5) = (uint64_t)v121;
      uint64_t v122 = v315;
      *(&v259 - 4) = v317;
      *(&v259 - 3) = v122;
      uint64_t v257 = (uint64_t)v119;
      sub_24DCC9D48();
      swift_getWitnessTable();
      swift_getWitnessTable();
      sub_24DCCA058();
      uint64_t v123 = *(void (**)(char *, uint64_t))(v118 + 8);
      v123(v119, v116);
      v123(v81, v116);
      return 0;
    case 8u:
      uint64_t v124 = v321;
      uint64_t v125 = v300;
      v126 = &v81[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v127 = v320;
      v314 = *(char **)(v320 + 32);
      ((void (*)(char *, char *, uint64_t))v314)(v310, v81, v124);
      (*(void (**)(void *, char *, uint64_t))(v299 + 32))(v298, v126, v125);
      uint64_t v128 = v319[13];
      LODWORD(v322) = *(unsigned __int8 *)(v323 + v319[14]);
      uint64_t v129 = v313;
      uint64_t v130 = *(uint64_t (**)(void))(v313 + 16);
      uint64_t v131 = v297;
      uint64_t v319 = (int *)(v323 + v128);
      uint64_t v132 = v306;
      uint64_t v311 = v130;
      uint64_t v133 = v130(v297);
      MEMORY[0x270FA5388](v133);
      uint64_t v134 = v316;
      *(&v259 - 4) = (uint64_t)v318;
      *(&v259 - 3) = (uint64_t)v134;
      uint64_t v257 = v317;
      uint64_t v258 = v315;
      uint64_t v135 = v285;
      uint64_t v136 = v328;
      sub_24DB86C94((void (*)(char *, char *))sub_24D4B7DAC, (uint64_t)(&v259 - 6), MEMORY[0x263F8E628], v124, v137, v285);
      uint64_t v328 = v136;
      uint64_t v138 = *(void (**)(uint64_t, uint64_t))(v129 + 8);
      uint64_t v313 = v129 + 8;
      uint64_t v318 = v138;
      v138((uint64_t)v131, v132);
      uint64_t v139 = v281;
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v281, v310, v124);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v135, 1, v124) == 1)
      {
        uint64_t v140 = (uint64_t)v283;
        ((void (*)(char *, char *, uint64_t))v314)(v283, v139, v124);
        (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v135, v288);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v127 + 8))(v139, v124);
        uint64_t v140 = (uint64_t)v283;
        ((void (*)(char *, uint64_t, uint64_t))v314)(v283, v135, v124);
      }
      uint64_t v193 = v290;
      uint64_t v194 = (uint64_t)v297;
      uint64_t v195 = (uint64_t)v319;
      uint64_t v196 = v306;
      ((void (*)(char *, int *, uint64_t))v311)(v297, v319, v306);
      uint64_t v197 = (void (*)(void, void, void))v298;
      uint64_t v84 = sub_24D47D118((uint64_t)v298, v195, v193, v322, v140, v323, v194, (uint64_t)v316, v315);
      v318(v194, v196);
      uint64_t v198 = *(void (**)(uint64_t, uint64_t))(v127 + 8);
      v198(v140, v124);
      (*(void (**)(void (*)(void, void, void), uint64_t))(v299 + 8))(v197, v300);
      uint64_t v199 = v310;
      uint64_t v200 = v124;
      goto LABEL_38;
    case 9u:
      uint64_t v141 = v321;
      uint64_t v142 = v303;
      unint64_t v143 = &v81[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v144 = v320;
      unint64_t v145 = (char *)v296;
      uint64_t v313 = *(void *)(v320 + 32);
      ((void (*)(void, char *, uint64_t))v313)(v296, v81, v141);
      (*(void (**)(void *, char *, void *))(v302 + 32))(v301, v143, v142);
      LODWORD(v322) = *(unsigned __int8 *)(v323 + v319[14]);
      int v146 = v314;
      uint64_t v147 = v294;
      uint64_t v311 = (uint64_t (*)(void))*((void *)v314 + 2);
      uint64_t v148 = v311(v294);
      uint64_t v310 = (char *)&v259;
      MEMORY[0x270FA5388](v148);
      uint64_t v149 = v316;
      *(&v259 - 4) = (uint64_t)v318;
      *(&v259 - 3) = (uint64_t)v149;
      uint64_t v257 = v317;
      uint64_t v258 = v315;
      uint64_t v150 = v286;
      uint64_t v151 = v328;
      sub_24DB86C94((void (*)(char *, char *))sub_24D4A5E4C, (uint64_t)(&v259 - 6), MEMORY[0x263F8E628], v141, v152, v286);
      uint64_t v328 = v151;
      uint64_t v153 = (void (*)(void, void))*((void *)v146 + 1);
      v314 = v146 + 8;
      uint64_t v316 = v153;
      v153(v147, v52);
      uint64_t v154 = v282;
      (*(void (**)(char *, char *, uint64_t))(v144 + 16))(v282, v145, v141);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v150, 1, v141) == 1)
      {
        uint64_t v155 = (uint64_t)v284;
        ((void (*)(char *, char *, uint64_t))v313)(v284, v154, v141);
        (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v150, v288);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v144 + 8))(v154, v141);
        uint64_t v155 = (uint64_t)v284;
        ((void (*)(char *, uint64_t, uint64_t))v313)(v284, v150, v141);
      }
      int v201 = v289;
      uint64_t v202 = (uint64_t)v294;
      uint64_t v203 = v323;
      ((void (*)(char *, uint64_t, uint64_t))v311)(v294, v323, v52);
      v204 = (void (*)(void, void, void))v301;
      uint64_t v84 = sub_24D47D118((uint64_t)v301, v203, v201, v322, v155, v202, v203 + v319[13], (uint64_t)v318, v317);
      v316(v202, v52);
      uint64_t v198 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
      v198(v155, v141);
      (*(void (**)(void (*)(void, void, void), void (*)(char *, uint64_t, uint64_t)))(v302 + 8))(v204, v303);
      uint64_t v199 = (char *)v296;
      uint64_t v200 = v141;
LABEL_38:
      v198((uint64_t)v199, v200);
      return v84;
    case 0xAu:
      uint64_t v156 = v321;
      uint64_t v157 = &v81[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v158 = *(void *)v157;
      char v159 = v157[8];
      uint64_t v160 = *(int *)(type metadata accessor for ItemReconciliationHalf() + 76);
      uint64_t v161 = *(void *)(v323 + v160);
      if (v159)
      {
        uint64_t v162 = v161 & ~v158;
        uint64_t v163 = v320;
LABEL_47:
        *(void *)(v323 + v160) = v162;
        goto LABEL_48;
      }
      BOOL v205 = (*(void *)(v323 + v160) & 3) != 0 && (v158 & 3) != 0;
      if (v205) {
        v161 &= 0xFFFFFFFFFFFFFFFCLL;
      }
      uint64_t v206 = v161 & v158;
      uint64_t v163 = v320;
      if (v205 || v206 != v158)
      {
        if (v206 == v158) {
          uint64_t v207 = 0;
        }
        else {
          uint64_t v207 = v158;
        }
        uint64_t v162 = v207 | v161;
        goto LABEL_47;
      }
LABEL_48:
      (*(void (**)(char *, uint64_t))(v163 + 8))(v81, v156);
      return 0;
    case 0xBu:
      (*(void (**)(char *, uint64_t))(v320 + 8))(v81, v321);
      return 0;
    case 0xCu:
      uint64_t v164 = v321;
      int v165 = v81[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v166 = v320;
      int v167 = v280;
      (*(void (**)(char *, char *, uint64_t))(v320 + 32))(v280, v81, v164);
      uint64_t v168 = v319[18];
      if (v165 != *(unsigned __int8 *)(v323 + v168))
      {
        uint64_t Strong = swift_weakLoadStrong();
        if (!Strong)
        {
          __break(1u);
          JUMPOUT(0x24D481EE4);
        }
        uint64_t v170 = Strong;
        uint64_t v171 = v268;
        (*(void (**)(char *, char *, uint64_t))(v166 + 16))(v268, v167, v164);
        uint64_t v172 = v270;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))(*(void *)v170 + 312))(v171);
        swift_release();
        (*(void (**)(char *, uint64_t))(v269 + 8))(v171, v172);
      }
      (*(void (**)(char *, uint64_t))(v166 + 8))(v167, v164);
      uint64_t v84 = 0;
      *(unsigned char *)(v323 + v168) = v165;
      return v84;
    case 0xDu:
      uint64_t v103 = v321;
      uint64_t v173 = swift_getTupleTypeMetadata3();
      uint64_t v174 = *(void *)&v81[*(int *)(v173 + 48)];
      uint64_t v175 = v319[19];
      uint64_t v176 = *(void *)(v323 + v175);
      if ((v174 & ~v176) == 0) {
        uint64_t v174 = 0;
      }
      *(void *)(v323 + v175) = (v174 | v176) & ~*(void *)&v81[*(int *)(v173 + 64)];
LABEL_26:
      (*(void (**)(char *, uint64_t))(v320 + 8))(v81, v103);
      return 0;
    default:
      uint64_t v82 = v321;
      *(unsigned char *)(v323 + v319[14]) = v81[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, uint64_t))(v320 + 8))(v81, v82);
      return 1;
  }
}

uint64_t sub_24D481F1C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  return sub_24D3EC388(a1, a2, AssociatedTypeWitness, v4) & 1;
}

uint64_t sub_24D482018@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24D482150(uint64_t a1, uint64_t a2)
{
  uint64_t v135 = a2;
  uint64_t v136 = a1;
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 104);
  uint64_t v5 = *(void *)(*v2 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v105 = sub_24DCCA3F8();
  uint64_t v104 = *(void *)(v105 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v105);
  uint64_t v103 = (char *)&v100 - v8;
  uint64_t v108 = AssociatedTypeWitness;
  uint64_t v107 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v7);
  v106 = (char *)&v100 - v9;
  uint64_t v10 = *(void *)(v3 + 96);
  uint64_t v123 = v2;
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v128 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v111 = (char *)&v100 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v100 = (char *)&v100 - v16;
  MEMORY[0x270FA5388](v15);
  int v101 = (char *)&v100 - v17;
  uint64_t v18 = sub_24DCC8CE8();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v121 = v18;
  uint64_t v122 = v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v132 = (char *)&v100 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v125 = v12;
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v126 = *(void *)(v21 - 8);
  uint64_t v127 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v110 = (char *)&v100 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v102 = (char *)&v100 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v131 = (uint64_t)&v100 - v26;
  uint64_t v137 = v11;
  uint64_t v138 = v5;
  uint64_t v119 = v5;
  uint64_t v139 = v10;
  uint64_t v140 = v4;
  uint64_t v120 = v4;
  uint64_t v27 = type metadata accessor for ItemReconciliation();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v112 = (char *)&v100 - v29;
  uint64_t v117 = v11;
  uint64_t v118 = v10;
  uint64_t v30 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v31 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v124 = (char *)&v100 - v32;
  uint64_t v33 = sub_24DCCA3F8();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v116 = (char *)&v100 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v100 - v37;
  uint64_t v109 = *(int *)(v30 + 36);
  uint64_t v133 = *(void *)(v136 + v109);
  unsigned __int8 v115 = *(void (**)(char *, uint64_t, uint64_t))(v34 + 16);
  v115((char *)&v100 - v37, v135, v33);
  uint64_t v130 = v28;
  uint64_t v39 = v27;
  unsigned int v114 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48);
  int v40 = v114(v38, 1, v27);
  uint64_t v129 = v27;
  uint64_t v113 = v30;
  if (v40 == 1)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v38, v33);
    if ((v133 & 0x10) == 0) {
      return result;
    }
    goto LABEL_10;
  }
  uint64_t v42 = v124;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v124, v38, v30);
  (*(void (**)(char *, uint64_t))(v130 + 8))(v38, v39);
  uint64_t v43 = *(void *)&v42[*(int *)(v30 + 36)];
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v42, v30);
  if ((v133 & 0x10) == 0)
  {
    uint64_t v44 = v134;
    if ((v43 & 0x10) == 0) {
      return result;
    }
    uint64_t v45 = v129;
    uint64_t v46 = *(int *)(v129 + 56);
    uint64_t v47 = v136;
    if (*(unsigned char *)(v136 + v46) != 1)
    {
      uint64_t v52 = v125;
      uint64_t v49 = v126;
      uint64_t v48 = v127;
      uint64_t v51 = v128;
      goto LABEL_27;
    }
    uint64_t v49 = v126;
    uint64_t v48 = v127;
    uint64_t v50 = v102;
    (*(void (**)(char *, uint64_t, uint64_t))(v126 + 16))(v102, v136, v127);
    uint64_t v51 = v128;
    uint64_t v52 = v125;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v128 + 48))(v50, 1, v125) == 1)
    {
      (*(void (**)(char *, uint64_t))(v49 + 8))(v50, v48);
      goto LABEL_27;
    }
    uint64_t v135 = v46;
    uint64_t v79 = v101;
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v101, v50, v52);
    uint64_t v137 = v117;
    uint64_t v138 = v119;
    uint64_t v139 = v118;
    uint64_t v140 = v120;
    type metadata accessor for Ingestion.FetchChildrenMetadata();
    uint64_t v80 = (uint64_t)v100;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v100, v79, v52);
    uint64_t v81 = v132;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v83 = v82;
    uint64_t v84 = *(uint64_t (**)(char *, uint64_t))(v122 + 8);
    v122 += 8;
    uint64_t result = v84(v81, v121);
    double v85 = v83 * 1000000000.0;
    if ((~COERCE__INT64(v83 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v85 > -9.22337204e18)
      {
        if (v85 < 9.22337204e18)
        {
          uint64_t v86 = sub_24DC09730(v80, 0, (uint64_t)v85, 0x4000000);
          uint64_t v87 = *(void (**)(uint64_t, uint64_t))(v128 + 8);
          v87(v80, v52);
          uint64_t result = swift_weakLoadStrong();
          if (!result)
          {
LABEL_73:
            __break(1u);
            return result;
          }
          uint64_t v88 = v132;
          sub_24DCC8CD8();
          sub_24DCC8C88();
          double v90 = v89;
          uint64_t result = v84(v88, v121);
          double v91 = v90 * 1000000000.0;
          if ((~COERCE__INT64(v90 * 1000000000.0) & 0x7FF0000000000000) != 0)
          {
            if (v91 > -9.22337204e18)
            {
              if (v91 < 9.22337204e18)
              {
                sub_24D912448(v86);
                if (v44)
                {
                  swift_release();
                  swift_release();
                  return ((uint64_t (*)(char *, uint64_t))v87)(v101, v52);
                }
                swift_release();
                swift_release();
                v87((uint64_t)v101, v52);
                uint64_t v46 = v135;
                uint64_t v47 = v136;
                uint64_t v49 = v126;
                uint64_t v48 = v127;
                uint64_t v51 = v128;
                uint64_t v45 = v129;
LABEL_27:
                BOOL v71 = sub_24DB86F3C(v45);
                uint64_t v60 = v110;
                uint64_t v72 = v113;
                if (v71) {
                  goto LABEL_31;
                }
                if (qword_26B199AA0 == -1)
                {
LABEL_29:
                  *(void *)(v47 + *(int *)(v72 + 40)) |= qword_26B1A24C8 & 0xFFFFFFFFFF7FFFEFLL;
                  uint64_t v73 = *(void *)(v47 + v109);
                  if ((v73 & 9) != 0) {
                    *(void *)(v47 + v109) = v73 & 0xFFFFFFFFFFFFFFF6;
                  }
LABEL_31:
                  int v74 = *(unsigned __int8 *)(v47 + v46);
                  if (v74 != 1)
                  {
                    uint64_t v75 = v111;
                    if (v74 != 4)
                    {
LABEL_36:
                      (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v60, v47, v48);
                      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v60, 1, v52) == 1)
                      {
                        (*(void (**)(char *, uint64_t))(v49 + 8))(v60, v48);
LABEL_51:
                        uint64_t v92 = v104;
                        v93 = v103;
                        uint64_t v94 = v105;
                        (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v103, v47 + *(int *)(v129 + 52), v105);
                        uint64_t v95 = v107;
                        uint64_t v96 = v108;
                        int v97 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v107 + 48))(v93, 1, v108);
                        uint64_t v98 = v106;
                        if (v97 == 1) {
                          return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v93, v94);
                        }
                        (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v106, v93, v96);
                        uint64_t result = swift_weakLoadStrong();
                        if (result)
                        {
                          uint64_t v99 = *(void *)(result + 24);
                          swift_retain();
                          swift_release();
                          (*(void (**)(char *))(*(void *)v99 + 360))(v98);
                          (*(void (**)(char *, uint64_t))(v95 + 8))(v98, v96);
                          return swift_release();
                        }
                        goto LABEL_72;
                      }
                      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v75, v60, v52);
                      uint64_t result = swift_weakLoadStrong();
                      if (result)
                      {
                        uint64_t v78 = *(void *)(result + 24);
                        swift_retain();
                        swift_release();
                        (*(void (**)(char *))(*(void *)v78 + 352))(v75);
                        if (v44)
                        {
                          (*(void (**)(char *, uint64_t))(v51 + 8))(v75, v52);
                          return swift_release();
                        }
                        (*(void (**)(char *, uint64_t))(v51 + 8))(v75, v52);
                        swift_release();
                        goto LABEL_51;
                      }
LABEL_71:
                      __break(1u);
LABEL_72:
                      __break(1u);
                      goto LABEL_73;
                    }
                    __break(1u);
                  }
                  uint64_t v76 = *(int *)(v72 + 40);
                  uint64_t v77 = *(void *)(v47 + v76);
                  uint64_t v75 = v111;
                  if ((v77 & 0x100000000000) == 0) {
                    *(void *)(v47 + v76) = v77 | 0x100000000000;
                  }
                  goto LABEL_36;
                }
LABEL_62:
                swift_once();
                uint64_t v72 = v113;
                goto LABEL_29;
              }
LABEL_68:
              __break(1u);
LABEL_69:
              __break(1u);
              goto LABEL_70;
            }
LABEL_67:
            __break(1u);
            goto LABEL_68;
          }
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
LABEL_65:
        __break(1u);
        goto LABEL_66;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_65;
  }
  if ((v43 & 0x10) != 0) {
    return result;
  }
LABEL_10:
  uint64_t v53 = v116;
  v115(v116, v135, v33);
  uint64_t v54 = v129;
  if (v114(v53, 1, v129) == 1)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v53, v33);
    uint64_t v52 = 0x2000000;
  }
  else
  {
    uint64_t v55 = v130;
    uint64_t v56 = v112;
    (*(void (**)(char *, char *, uint64_t))(v130 + 32))(v112, v53, v54);
    int v57 = v56[*(int *)(v113 + 56)];
    (*(void (**)(char *, uint64_t))(v55 + 8))(v56, v54);
    if (v57) {
      uint64_t v52 = 0x2000000;
    }
    else {
      uint64_t v52 = 0x40000000;
    }
  }
  uint64_t v46 = v125;
  uint64_t v51 = v128;
  uint64_t v44 = v121;
  uint64_t v58 = v122;
  uint64_t v59 = v131;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v126 + 16))(v131, v136, v127);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v59, 1, v46);
  uint64_t v48 = v134;
  if (result == 1) {
    goto LABEL_69;
  }
  uint64_t v137 = v117;
  uint64_t v138 = v119;
  uint64_t v139 = v118;
  uint64_t v140 = v120;
  uint64_t v47 = type metadata accessor for Materialization.MaterializeIgnoredItem();
  uint64_t v60 = v132;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v62 = v61;
  uint64_t v64 = *(void (**)(char *, uint64_t))(v58 + 8);
  uint64_t v49 = v58 + 8;
  uint64_t v63 = v64;
  v64(v60, v44);
  double v65 = v62 * 1000000000.0;
  if ((~COERCE__INT64(v62 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_57;
  }
  if (v65 <= -9.22337204e18)
  {
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  if (v65 >= 9.22337204e18)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v66 = v52;
  uint64_t v52 = v48;
  uint64_t v48 = v131;
  uint64_t v47 = sub_24DC1BC80(v131, 0, (uint64_t)v65, v66);
  uint64_t v67 = *(void (**)(uint64_t, uint64_t))(v51 + 8);
  v51 += 8;
  v67(v48, v46);
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  uint64_t v46 = result;
  uint64_t v60 = v132;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v69 = v68;
  v63(v60, v44);
  double v70 = v69 * 1000000000.0;
  if ((~COERCE__INT64(v69 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (v70 <= -9.22337204e18)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v70 >= 9.22337204e18)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  sub_24D912448(v47);
  swift_release();
  return swift_release();
}

void *sub_24D483140(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, int a5)
{
  LODWORD(v280) = a5;
  uint64_t v281 = a4;
  uint64_t v282 = a3;
  uint64_t v283 = a2;
  uint64_t v288 = a1;
  uint64_t v6 = (void *)*v5;
  uint64_t v247 = sub_24DCC8CE8();
  uint64_t v246 = *(void *)(v247 - 8);
  MEMORY[0x270FA5388](v247);
  uint64_t v259 = &v220[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  unint64_t v8 = v6[11];
  unint64_t v9 = v6[10];
  uint64_t v10 = v6[13];
  v279 = (void (*)(void))v5;
  uint64_t v11 = v6[12];
  uint64_t v289 = v8;
  unint64_t v290 = v9;
  uint64_t v291 = v10;
  uint64_t v292 = v11;
  uint64_t v286 = (int *)type metadata accessor for ItemReconciliation();
  uint64_t v248 = sub_24DCCA3F8();
  uint64_t v251 = *(void *)(v248 - 8);
  MEMORY[0x270FA5388](v248);
  char v250 = &v220[-v12];
  uint64_t v289 = v9;
  unint64_t v290 = v8;
  uint64_t v291 = v11;
  uint64_t v292 = v10;
  uint64_t v287 = type metadata accessor for PersistenceTrigger();
  uint64_t v273 = *(void *)(v287 - 8);
  MEMORY[0x270FA5388](v287);
  uint64_t v231 = &v220[-v13];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v289 = AssociatedTypeWitness;
  unint64_t v290 = v15;
  uint64_t v230 = AssociatedConformanceWitness;
  uint64_t v291 = AssociatedConformanceWitness;
  uint64_t v292 = v17;
  uint64_t v229 = v17;
  uint64_t v234 = type metadata accessor for ThrottlingKey();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v233 = sub_24DCCA3F8();
  uint64_t v232 = *(void *)(v233 - 8);
  MEMORY[0x270FA5388](v233);
  v236 = &v220[-v18];
  uint64_t v242 = sub_24DCCA3F8();
  uint64_t v241 = *(void *)(v242 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v242);
  uint64_t v240 = &v220[-v20];
  unint64_t v262 = AssociatedTypeWitness;
  uint64_t v243 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v238 = &v220[-v21];
  uint64_t v254 = sub_24DCCA3F8();
  uint64_t v253 = *(void *)(v254 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v254);
  uint64_t v257 = (void (**)(void))&v220[-v23];
  uint64_t v255 = v15;
  uint64_t v258 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v245 = &v220[-v24];
  uint64_t v264 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v260 = *(void *)(v264 - 8);
  MEMORY[0x270FA5388](v264);
  v244 = &v220[-v25];
  uint64_t v270 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v252 = *((void *)v270 - 1);
  MEMORY[0x270FA5388](v270);
  uint64_t v237 = &v220[-v26];
  uint64_t v289 = v9;
  unint64_t v290 = v8;
  uint64_t v291 = v11;
  uint64_t v292 = v10;
  uint64_t v27 = (void *)type metadata accessor for ItemReconciliation();
  uint64_t v263 = sub_24DCCA3F8();
  uint64_t v265 = *(void *)(v263 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v263);
  uint64_t v249 = &v220[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v256 = &v220[-v31];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v261 = &v220[-v33];
  MEMORY[0x270FA5388](v32);
  uint64_t v239 = &v220[-v34];
  unint64_t v277 = v9;
  unint64_t v278 = v8;
  uint64_t v289 = v8;
  unint64_t v290 = v9;
  uint64_t v275 = v11;
  uint64_t v276 = v10;
  uint64_t v291 = v10;
  uint64_t v292 = v11;
  uint64_t v266 = type metadata accessor for PersistenceTrigger();
  uint64_t v269 = sub_24DCCA3F8();
  uint64_t v268 = *(void *)(v269 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v269);
  uint64_t v267 = (void (*)(uint64_t, int *))&v220[-v36];
  uint64_t v271 = *((void *)v286 - 1);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v39 = &v220[-((v38 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v40 = MEMORY[0x270FA5388](v37);
  uint64_t v42 = &v220[-v41];
  MEMORY[0x270FA5388](v40);
  uint64_t v44 = &v220[-v43];
  uint64_t v45 = sub_24DCCA3F8();
  v272 = *(uint64_t **)(v45 - 8);
  uint64_t v46 = MEMORY[0x270FA5388](v45);
  uint64_t v48 = &v220[-v47];
  uint64_t v274 = *(v27 - 1);
  uint64_t v49 = MEMORY[0x270FA5388](v46);
  uint64_t v51 = &v220[-((v50 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v52 = MEMORY[0x270FA5388](v49);
  uint64_t v54 = &v220[-v53];
  MEMORY[0x270FA5388](v52);
  uint64_t v56 = &v220[-v55];
  uint64_t v284 = v27;
  uint64_t v57 = (uint64_t)v285;
  uint64_t result = (void *)sub_24DB87278(v27);
  if (v57) {
    return result;
  }
  v228 = v56;
  uint64_t v285 = v48;
  uint64_t v227 = (void (*)(uint64_t, uint64_t))v45;
  uint64_t v224 = v54;
  uint64_t v59 = v279;
  v223 = v42;
  int v225 = v51;
  uint64_t v226 = v39;
  uint64_t v60 = v283;
  if (v280) {
    sub_24D482150(v288, (uint64_t)v283);
  }
  uint64_t v61 = (uint64_t)v284;
  uint64_t v63 = v281;
  uint64_t v62 = v282;
  uint64_t v64 = (uint64_t)v44;
  uint64_t v65 = (uint64_t)v59 + 16;
  uint64_t result = (void *)swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  int v66 = sub_24DB87D50((uint64_t)v60, v62, v63, (uint64_t)result, v61);
  swift_release();
  uint64_t v280 = 0;
  uint64_t v67 = v274;
  uint64_t v68 = v274 + 16;
  uint64_t v69 = (uint64_t)v228;
  v279 = *(void (**)(void))(v274 + 16);
  ((void (*)(unsigned char *, uint64_t, uint64_t))v279)(v228, v288, v61);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v273 + 56))(v285, 1, 1, v287);
  if (qword_26B193080 != -1) {
    swift_once();
  }
  uint64_t v70 = qword_26B1A2270;
  uint64_t result = (void *)swift_weakLoadStrong();
  if (!result) {
    goto LABEL_123;
  }
  uint64_t v71 = (uint64_t)result;
  uint64_t v289 = v277;
  unint64_t v290 = v278;
  uint64_t v291 = v275;
  uint64_t v292 = v276;
  type metadata accessor for ReconciliationTable();
  uint64_t v72 = v69;
  uint64_t v73 = v69;
  uint64_t v74 = (uint64_t)v285;
  uint64_t v75 = v280;
  uint64_t v76 = sub_24D48552C(v72, (uint64_t)v285, v70, v71);
  uint64_t v280 = v75;
  if (v75)
  {
    swift_release();
    ((void (*)(uint64_t, void))v272[1])(v74, v227);
    return (void *)(*(uint64_t (**)(uint64_t, void *))(v67 + 8))(v73, v284);
  }
  uint64_t v79 = (uint64_t)v76;
  uint64_t v222 = v68;
  int v221 = v66;
  uint64_t v80 = v77;
  char v81 = v78;
  swift_release();
  ((void (*)(uint64_t, void))v272[1])(v74, v227);
  double v82 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
  uint64_t v83 = v73;
  uint64_t v84 = (uint64_t)v284;
  v228 = (unsigned char *)(v67 + 8);
  uint64_t v227 = v82;
  v82(v83, (uint64_t)v284);
  uint64_t v85 = v288;
  uint64_t v86 = (uint64_t *)(v288 + v270[16]);
  sub_24D3E380C((void *)*v86, (id)v86[1], *((unsigned char *)v86 + 16));
  *uint64_t v86 = v79;
  v86[1] = v80;
  v272 = v86;
  *((unsigned char *)v86 + 16) = v81;
  sub_24DB864D4(v84, v64);
  uint64_t v87 = v64;
  uint64_t v88 = (uint64_t)v267;
  (*(void (**)(void (*)(uint64_t, int *), uint64_t, uint64_t))(*(void *)(v266 - 8) + 56))(v267, 1, 1);
  uint64_t v89 = qword_26B1A2270;
  uint64_t v285 = (unsigned char *)v65;
  uint64_t result = (void *)swift_weakLoadStrong();
  if (!result) {
    goto LABEL_127;
  }
  double v90 = result;
  uint64_t v289 = v278;
  unint64_t v290 = v277;
  uint64_t v291 = v276;
  uint64_t v292 = v275;
  type metadata accessor for ReconciliationTable();
  uint64_t v91 = (*(uint64_t (**)(void))(*v90 + 176))();
  swift_release();
  uint64_t v92 = v280;
  v93 = sub_24D48552C(v87, v88, v89, v91);
  uint64_t v96 = v286;
  uint64_t v280 = v92;
  if (v92)
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v268 + 8))(v88, v269);
    return (void *)(*(uint64_t (**)(uint64_t, int *))(v271 + 8))(v87, v96);
  }
  int v97 = v93;
  uint64_t v98 = v94;
  char v99 = v95;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v268 + 8))(v88, v269);
  uint64_t v100 = *(void (**)(uint64_t, int *))(v271 + 8);
  uint64_t v268 = v271 + 8;
  uint64_t v267 = v100;
  v100(v87, v96);
  uint64_t v101 = *(int *)(v264 + 64);
  uint64_t v266 = v85 + *(int *)(v84 + 52);
  uint64_t v102 = v266 + v101;
  sub_24D3E380C(*(void **)(v266 + v101), *(id *)(v266 + v101 + 8), *(unsigned char *)(v266 + v101 + 16));
  *(void *)uint64_t v102 = v97;
  *(void *)(v102 + 8) = v98;
  *(unsigned char *)(v102 + 16) = v99;
  if (*((unsigned char *)v272 + 16))
  {
    uint64_t v103 = v283;
    uint64_t v104 = v265;
    uint64_t v105 = v261;
    goto LABEL_34;
  }
  uint64_t v106 = *v272;
  uint64_t v103 = v283;
  if ((*v272 & 0x100) != 0)
  {
    uint64_t v108 = *(int *)(v84 + 64);
    unint64_t v109 = *(void *)(v85 + v108);
    if (v109 >= 0x2000000000000000) {
      unint64_t v109 = 0x2000000000000000;
    }
    *(void *)(v85 + v108) = v109;
    uint64_t v107 = v252;
    if (v282)
    {
      uint64_t v110 = (uint64_t)v224;
      v279(v224);
      uint64_t result = (void *)swift_weakLoadStrong();
      if (!result)
      {
LABEL_133:
        __break(1u);
        goto LABEL_134;
      }
      uint64_t v111 = v280;
      sub_24D4A567C(v110, v103, result);
      uint64_t v280 = v111;
      uint64_t v105 = v261;
      uint64_t v112 = v110;
      if (v111)
      {
        uint64_t v113 = v84;
LABEL_65:
        v227(v112, v113);
        return (void *)swift_release();
      }
      uint64_t v104 = v265;
      v227(v112, v84);
      swift_release();
    }
    else
    {
      uint64_t v104 = v265;
      uint64_t v105 = v261;
    }
  }
  else
  {
    uint64_t v104 = v265;
    uint64_t v105 = v261;
    uint64_t v107 = v252;
  }
  if ((v106 & 0x200) != 0)
  {
    unsigned int v114 = v239;
    uint64_t v115 = v263;
    (*(void (**)(unsigned char *, char *, uint64_t))(v104 + 16))(v239, v103, v263);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v274 + 48))(v114, 1, v84) == 1)
    {
      (*(void (**)(unsigned char *, uint64_t))(v104 + 8))(v114, v115);
LABEL_31:
      uint64_t result = (void *)swift_weakLoadStrong();
      if (!result)
      {
LABEL_132:
        __break(1u);
        goto LABEL_133;
      }
      uint64_t v125 = result[4];
      swift_retain();
      swift_release();
      uint64_t v126 = *(void *)(v125 + 16);
      swift_retain();
      uint64_t v127 = swift_release();
      (*(void (**)(uint64_t))(*(void *)v126 + 848))(v127);
      swift_release();
      goto LABEL_33;
    }
    uint64_t v116 = v237;
    uint64_t v117 = v114;
    uint64_t v118 = v114;
    uint64_t v119 = v107;
    uint64_t v120 = v270;
    (*(void (**)(unsigned char *, unsigned char *, int *))(v107 + 16))(v237, v117, v270);
    v227((uint64_t)v118, v84);
    uint64_t v121 = &v116[v120[16]];
    id v123 = *(id *)v121;
    uint64_t v122 = (void *)*((void *)v121 + 1);
    int v124 = v121[16];
    sub_24D3F1C98(*(id *)v121, v122, v121[16]);
    (*(void (**)(unsigned char *, int *))(v119 + 8))(v116, v120);
    if (v124)
    {
      sub_24D3E380C(v123, v122, v124);
      uint64_t v104 = v265;
      goto LABEL_31;
    }
    sub_24D3E380C(v123, v122, 0);
    uint64_t v104 = v265;
    if (((unsigned __int16)v123 & 0x200) == 0) {
      goto LABEL_31;
    }
  }
LABEL_33:
  char v99 = *(unsigned char *)(v102 + 16);
LABEL_34:
  unint64_t v128 = v262;
  uint64_t v129 = v263;
  uint64_t v130 = v260;
  if (v99) {
    int v131 = 0;
  }
  else {
    int v131 = *(unsigned char *)(v102 + 1) & 1;
  }
  uint64_t v132 = v103;
  uint64_t v133 = *(void (**)(char *, char *, uint64_t))(v104 + 16);
  v133(v105, v132, v263);
  uint64_t v269 = (uint64_t)v133;
  if (!v131)
  {
    uint64_t v261 = *(char **)(v104 + 8);
    ((void (*)(char *, uint64_t))v261)(v105, v129);
    uint64_t v139 = (uint64_t)v225;
    goto LABEL_61;
  }
  uint64_t v134 = v256;
  uint64_t v252 = v104 + 16;
  v133(v256, v105, v129);
  uint64_t v135 = v134;
  uint64_t v136 = v134;
  uint64_t v137 = (uint64_t)v284;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, void *))(v274 + 48))(v136, 1, v284) == 1)
  {
    uint64_t v138 = *(void (**)(char *, uint64_t))(v265 + 8);
    v138(v105, v129);
    uint64_t v261 = (char *)v138;
    v138(v135, v129);
  }
  else
  {
    uint64_t v140 = v105;
    uint64_t v141 = v244;
    uint64_t v142 = v264;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v130 + 16))(v244, &v135[*(int *)(v137 + 52)], v264);
    v227((uint64_t)v135, v137);
    unint64_t v143 = &v141[*(int *)(v142 + 64)];
    id v144 = *(id *)v143;
    unint64_t v145 = (void *)*((void *)v143 + 1);
    int v146 = v143[16];
    sub_24D3F1C98(*(id *)v143, v145, v143[16]);
    (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v141, v142);
    uint64_t v261 = *(char **)(v265 + 8);
    ((void (*)(char *, uint64_t))v261)(v140, v129);
    if (!v146)
    {
      sub_24D3E380C(v144, v145, 0);
      unint64_t v128 = v262;
      uint64_t v139 = (uint64_t)v225;
      uint64_t v147 = v257;
      if (((unsigned __int16)v144 & 0x100) != 0) {
        goto LABEL_61;
      }
      goto LABEL_44;
    }
    sub_24D3E380C(v144, v145, v146);
    unint64_t v128 = v262;
  }
  uint64_t v139 = (uint64_t)v225;
  uint64_t v147 = v257;
LABEL_44:
  uint64_t v148 = v102;
  uint64_t v149 = *((int *)v284 + 16);
  unint64_t v150 = *(void *)(v288 + v149);
  if (v150 >= 0x2000000000000000) {
    unint64_t v150 = 0x2000000000000000;
  }
  *(void *)(v288 + v149) = v150;
  uint64_t v151 = v253;
  uint64_t v152 = v254;
  (*(void (**)(void))(v253 + 16))(v147);
  uint64_t v153 = v258;
  uint64_t v154 = v255;
  if ((*(unsigned int (**)(void (**)(void), uint64_t, uint64_t))(v258 + 48))(v147, 1, v255) == 1)
  {
    (*(void (**)(void (**)(void), uint64_t))(v151 + 8))(v147, v152);
    uint64_t v102 = v148;
    goto LABEL_61;
  }
  uint64_t v260 = v148;
  uint64_t v155 = v245;
  (*(void (**)(unsigned char *, void (**)(void), uint64_t))(v153 + 32))(v245, v147, v154);
  uint64_t v156 = v241;
  uint64_t v157 = v240;
  uint64_t v158 = v242;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v241 + 16))(v240, v266, v242);
  uint64_t v159 = v243;
  if ((*(unsigned int (**)(unsigned char *, uint64_t, unint64_t))(v243 + 48))(v157, 1, v128) == 1)
  {
    (*(void (**)(unsigned char *, uint64_t))(v153 + 8))(v155, v154);
    (*(void (**)(unsigned char *, uint64_t))(v156 + 8))(v157, v158);
    goto LABEL_52;
  }
  uint64_t v160 = v238;
  (*(void (**)(unsigned char *, unsigned char *, unint64_t))(v159 + 32))(v238, v157, v128);
  unint64_t v161 = v128;
  int v162 = *(unsigned __int8 *)(v288 + v270[11]);
  if (v162 == 3)
  {
    (*(void (**)(unsigned char *, unint64_t))(v159 + 8))(v160, v161);
    (*(void (**)(unsigned char *, uint64_t))(v258 + 8))(v245, v154);
    goto LABEL_52;
  }
  uint64_t v163 = v245;
  uint64_t v102 = v260;
  if (*(unsigned char *)(v288 + v270[14]) == 6)
  {
    uint64_t v164 = (uint64_t)v223;
    sub_24DB864D4((uint64_t)v284, (uint64_t)v223);
    uint64_t result = (void *)swift_weakLoadStrong();
    if (!result)
    {
LABEL_136:
      __break(1u);
      goto LABEL_137;
    }
    uint64_t v165 = (*(uint64_t (**)(void *))(*result + 176))(result);
    swift_release();
    uint64_t v166 = v286;
    uint64_t v167 = v280;
    uint64_t v168 = sub_24DB88314(v165, v286);
    uint64_t v280 = v167;
    if (v167)
    {
      swift_release();
      v267(v164, v166);
      (*(void (**)(unsigned char *, unint64_t))(v159 + 8))(v160, v262);
      return (void *)(*(uint64_t (**)(unsigned char *, uint64_t))(v258 + 8))(v163, v255);
    }
    uint64_t v197 = v168;
    v267(v164, v166);
    swift_release();
    if (v197 != 70)
    {
      uint64_t result = (void *)swift_weakLoadStrong();
      if (!result)
      {
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
        goto LABEL_139;
      }
      uint64_t v198 = result[3];
      swift_retain();
      swift_release();
      uint64_t v199 = v280;
      uint64_t v200 = (*(uint64_t (**)(unsigned char *, uint64_t))(*(void *)v198 + 336))(v160, v197);
      uint64_t v280 = v199;
      if (v199)
      {
        swift_release();
        (*(void (**)(unsigned char *, unint64_t))(v243 + 8))(v238, v262);
        return (void *)(*(uint64_t (**)(unsigned char *, uint64_t))(v258 + 8))(v245, v255);
      }
      uint64_t v201 = v200;
      swift_release();
      uint64_t v289 = v201;
      uint64_t v202 = TupleTypeMetadata2;
      sub_24DCC9D48();
      swift_getWitnessTable();
      uint64_t v203 = v236;
      sub_24DCC9FD8();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v202 - 8) + 48))(v203, 1, v202) == 1)
      {
        (*(void (**)(unsigned char *, uint64_t))(v232 + 8))(v236, v233);
      }
      else
      {
        v204 = v236;
        BOOL v205 = *(void **)&v236[*(int *)(TupleTypeMetadata2 + 48) + 40];
        id v206 = v205;

        swift_bridgeObjectRelease();
        (*(void (**)(unsigned char *))(*(void *)(v234 - 8) + 8))(v204);
        if (v205)
        {
          if (v162)
          {
            if (v162 != 1)
            {
              sub_24D4A5DD0();
              swift_allocError();
              uint64_t v218 = v217;
              uint64_t v289 = 0;
              unint64_t v290 = 0xE000000000000000;
              sub_24DCCA728();
              sub_24DCC9968();
              swift_getWitnessTable();
              sub_24DCCADC8();
              unint64_t v219 = v290;
              *(void *)uint64_t v218 = v289;
              *(void *)(v218 + 8) = v219;
              *(unsigned char *)(v218 + 48) = 8;
              swift_willThrow();

              (*(void (**)(unsigned char *, unint64_t))(v243 + 8))(v238, v262);
              return (void *)(*(uint64_t (**)(unsigned char *, uint64_t))(v258 + 8))(v245, v255);
            }
            uint64_t result = (void *)swift_weakLoadStrong();
            if (!result) {
              goto LABEL_138;
            }
          }
          else
          {
            uint64_t result = (void *)swift_weakLoadStrong();
            if (!result)
            {
LABEL_139:
              __break(1u);
              return result;
            }
          }
          uint64_t v207 = result;
          uint64_t v208 = v255;
          unint64_t v209 = v262;
          uint64_t v289 = v255;
          unint64_t v290 = v262;
          uint64_t v291 = v229;
          uint64_t v292 = v230;
          type metadata accessor for ReconciliationID();
          __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
          uint64_t v210 = *(int *)(swift_getTupleTypeMetadata2() + 48);
          uint64_t v211 = v258;
          uint64_t v212 = v231;
          v213 = v245;
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v258 + 16))(v231, v245, v208);
          swift_storeEnumTagMultiPayload();
          *(void *)&v212[v210] = v205;
          uint64_t v214 = v287;
          swift_storeEnumTagMultiPayload();
          uint64_t v257 = (void (**)(void))(*v207 + 312);
          uint64_t v215 = *v257;
          id v216 = v205;
          v215(v212);
          swift_release();

          (*(void (**)(unsigned char *, uint64_t))(v273 + 8))(v212, v214);
          (*(void (**)(unsigned char *, unint64_t))(v243 + 8))(v238, v209);
          (*(void (**)(unsigned char *, uint64_t))(v211 + 8))(v213, v208);
          goto LABEL_52;
        }
      }
      (*(void (**)(unsigned char *, unint64_t))(v243 + 8))(v238, v262);
      (*(void (**)(unsigned char *, uint64_t))(v258 + 8))(v245, v255);
LABEL_52:
      uint64_t v129 = v263;
      uint64_t v139 = (uint64_t)v225;
      uint64_t v102 = v260;
      goto LABEL_61;
    }
    (*(void (**)(unsigned char *, unint64_t))(v159 + 8))(v160, v262);
    (*(void (**)(unsigned char *, uint64_t))(v258 + 8))(v163, v255);
  }
  else
  {
    (*(void (**)(unsigned char *, unint64_t))(v159 + 8))(v160, v262);
    (*(void (**)(unsigned char *, uint64_t))(v258 + 8))(v163, v154);
  }
  uint64_t v129 = v263;
  uint64_t v139 = (uint64_t)v225;
LABEL_61:
  uint64_t v169 = (uint64_t)v226;
  if (v282)
  {
    ((void (*)(uint64_t, uint64_t, void *))v279)(v139, v288, v284);
    uint64_t result = (void *)swift_weakLoadStrong();
    if (!result)
    {
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
      goto LABEL_130;
    }
    uint64_t v170 = v280;
    sub_24D4A567C(v139, v283, result);
    uint64_t v280 = v170;
    uint64_t v112 = v139;
    if (v170)
    {
      uint64_t v113 = (uint64_t)v284;
      goto LABEL_65;
    }
    v227(v139, (uint64_t)v284);
    swift_release();
  }
  uint64_t v171 = v271;
  uint64_t v172 = (void (*)(unsigned char *, char *, uint64_t))v269;
  if (v281)
  {
    uint64_t v173 = (uint64_t)v284;
    sub_24DB864D4((uint64_t)v284, v169);
    uint64_t v174 = v249;
    v172(v249, v283, v129);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v274 + 48))(v174, 1, v173) == 1)
    {
      ((void (*)(unsigned char *, uint64_t))v261)(v174, v129);
      uint64_t v175 = 1;
      uint64_t v176 = v248;
      uint64_t v177 = v251;
      v178 = v250;
    }
    else
    {
      v178 = v250;
      sub_24DB864D4(v173, (uint64_t)v250);
      v227((uint64_t)v174, v173);
      uint64_t v175 = 0;
      uint64_t v176 = v248;
      uint64_t v177 = v251;
    }
    uint64_t v181 = v286;
    (*(void (**)(char *, uint64_t, uint64_t, int *))(v171 + 56))(v178, v175, 1, v286);
    uint64_t result = (void *)swift_weakLoadStrong();
    uint64_t v179 = v288;
    unsigned __int8 v180 = v259;
    if (!result) {
      goto LABEL_129;
    }
    uint64_t v182 = (void *)(*(uint64_t (**)(void *))(*result + 176))(result);
    swift_release();
    uint64_t v183 = (uint64_t)v226;
    uint64_t v184 = v280;
    sub_24D4A567C((uint64_t)v226, v178, v182);
    uint64_t v280 = v184;
    if (v184)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v177 + 8))(v178, v176);
      return (void *)((uint64_t (*)(uint64_t, int *))v267)(v183, v181);
    }
    swift_release();
    (*(void (**)(char *, uint64_t))(v177 + 8))(v178, v176);
    v267(v183, v181);
  }
  else
  {
    uint64_t v179 = v288;
    unsigned __int8 v180 = v259;
  }
  BOOL v185 = sub_24DB86F3C((uint64_t)v284);
  uint64_t v186 = v247;
  uint64_t v187 = v246;
  if (!v185) {
    goto LABEL_95;
  }
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  uint64_t v188 = qword_26B1A24C8;
  if (!qword_26B1A24C8)
  {
    uint64_t v189 = 16;
    goto LABEL_84;
  }
  if ((qword_26B1A24C8 & 0x10) == 0)
  {
    uint64_t v189 = qword_26B1A24C8 | 0x10;
LABEL_84:
    if (sub_24DB89D64(v189, 0, (uint64_t)v270)) {
      goto LABEL_95;
    }
    v188 |= 0x10uLL;
    goto LABEL_87;
  }
  if (sub_24DB89D64(qword_26B1A24C8, 0, (uint64_t)v270)) {
    goto LABEL_95;
  }
LABEL_87:
  if (!sub_24DB89D64(v188, 0, v264)
    && *(unsigned char *)(v179 + v270[11]) == 3
    && *((unsigned char *)v272 + 16) != 2
    && *(unsigned char *)(v102 + 16) != 2)
  {
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v191 = v190;
    uint64_t result = (void *)(*(uint64_t (**)(unsigned char *, uint64_t))(v187 + 8))(v180, v186);
    double v192 = v191 * 1000000000.0;
    if ((~COERCE__INT64(v191 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v192 > -9.22337204e18)
      {
        if (v192 < 9.22337204e18)
        {
          uint64_t v193 = (void *)(v179 + *((int *)v284 + 16));
          *uint64_t v193 = 0x2000000000000000;
          v193[1] = (uint64_t)v192;
          goto LABEL_95;
        }
        goto LABEL_126;
      }
LABEL_125:
      __break(1u);
LABEL_126:
      __break(1u);
LABEL_127:
      __break(1u);
      goto LABEL_128;
    }
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
LABEL_95:
  uint64_t result = (void *)swift_weakLoadStrong();
  if (!result)
  {
LABEL_130:
    __break(1u);
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  char v194 = (*(uint64_t (**)(void *))(*result + 152))(result);
  swift_release();
  unsigned __int8 v195 = v221;
  if ((((v194 & 8) != 0) & v221) == 1 && *((unsigned char *)v272 + 16) == 1)
  {
    uint64_t result = (void *)swift_weakLoadStrong();
    if (!result)
    {
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    (*(void (**)(void *))(*result + 304))(result);
    swift_release();
  }
  uint64_t result = (void *)swift_weakLoadStrong();
  if (!result) {
    goto LABEL_131;
  }
  char v196 = (*(uint64_t (**)(void *))(*result + 152))(result);
  uint64_t result = (void *)swift_release();
  if ((((v196 & 8) != 0) & v195) == 1 && *(unsigned char *)(v102 + 16) == 1)
  {
    uint64_t result = (void *)swift_weakLoadStrong();
    if (result)
    {
      (*(void (**)(void *))(*result + 304))(result);
      return (void *)swift_release();
    }
    goto LABEL_135;
  }
  return result;
}

void *sub_24D48552C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = a1 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64);
  unint64_t v11 = *(void *)v9;
  uint64_t v10 = *(void **)(v9 + 8);
  if (*(unsigned char *)(v9 + 16))
  {
    sub_24D3F1C98(*(id *)v9, *(id *)(v9 + 8), *(unsigned char *)(v9 + 16));
  }
  else
  {
    unint64_t v12 = v11 & a3;
    swift_retain();
    if (v12)
    {
      uint64_t v20 = (void *)v11;
      while (1)
      {
        unint64_t v13 = __clz(__rbit64(v12));
        uint64_t v14 = v12 & ~(1 << v13);
        if (((1 << v13) & v12) == 0) {
          uint64_t v14 = v12;
        }
        if (v13 >= 0x40) {
          uint64_t v15 = 0;
        }
        else {
          uint64_t v15 = 1 << v13;
        }
        if (v13 < 0x40) {
          unint64_t v12 = v14;
        }
        char v16 = sub_24D4905A4(v15, a1, a2, a4);
        if (v4) {
          break;
        }
        BOOL v17 = (v15 & v11) == 0 || (v16 & 1) == 0;
        uint64_t v18 = -1;
        if (!v17) {
          uint64_t v18 = ~v15;
        }
        v11 &= v18;
        if (!v12) {
          goto LABEL_19;
        }
      }
      sub_24D3E380C(v20, v10, 0);
    }
    else
    {
LABEL_19:
      if (!v11) {
        return v10;
      }
    }
  }
  return (void *)v11;
}

uint64_t sub_24D485664@<X0>(void (*a1)(char *, char *, uint64_t)@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  v590 = a1;
  uint64_t v582 = a2;
  v587 = a3;
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 96);
  uint64_t v6 = *(void *)(*v3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v593 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v595 = swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for FileItemVersion();
  uint64_t v527 = sub_24DCCA3F8();
  uint64_t v526 = *(void *)(v527 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v527);
  v523 = (char *)&v494 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  v504 = (char *)&v494 - v11;
  uint64_t v533 = v7;
  uint64_t v528 = *(void *)(v7 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  v524 = (char *)&v494 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v505 = (char *)&v494 - v14;
  uint64_t v15 = *(void *)(v4 + 88);
  v569 = v3;
  uint64_t v16 = *(void *)(v4 + 104);
  uint64_t v568 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v566 = *(void *)(v568 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v568);
  v564 = (char *)&v494 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v563 = (char *)&v494 - v20;
  MEMORY[0x270FA5388](v19);
  v516 = (char *)&v494 - v21;
  uint64_t v22 = type metadata accessor for SnapshotItem();
  uint64_t v520 = sub_24DCCA3F8();
  uint64_t v518 = *(void *)(v520 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v520);
  v547 = (char *)&v494 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  v546 = (char *)&v494 - v26;
  uint64_t v537 = v22;
  uint64_t v534 = *(void *)(v22 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  v513 = (char *)&v494 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v511 = (char *)&v494 - v29;
  uint64_t v30 = swift_getAssociatedTypeWitness();
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v32 = swift_getAssociatedConformanceWitness();
  uint64_t v33 = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = v30;
  uint64_t v593 = v31;
  uint64_t AssociatedConformanceWitness = v32;
  uint64_t v595 = v33;
  uint64_t v34 = type metadata accessor for FileItemVersion();
  uint64_t v529 = sub_24DCCA3F8();
  uint64_t v525 = *(void *)(v529 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v529);
  v522 = (char *)&v494 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v502 = (char *)&v494 - v38;
  uint64_t v532 = v34;
  uint64_t v531 = *(void *)(v34 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v514 = (char *)&v494 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  v503 = (char *)&v494 - v41;
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t v573 = sub_24DCCA3F8();
  uint64_t v571 = *(void *)(v573 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v573);
  v562 = (char *)&v494 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  v561 = (char *)&v494 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  v560 = (char *)&v494 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  v580 = (char *)&v494 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v579 = (char *)&v494 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  v545 = (char *)&v494 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  v508 = (char *)&v494 - v56;
  uint64_t v577 = v42;
  v574 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v42 - 8);
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  v544 = (char *)&v494 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  v543 = (char *)&v494 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  v552 = (char *)&v494 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  v548 = (char *)&v494 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  v550 = (char *)&v494 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  v530 = (char *)&v494 - v68;
  MEMORY[0x270FA5388](v67);
  v509 = (char *)&v494 - v69;
  uint64_t v567 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v565 = *(void *)(v567 - 8);
  uint64_t v70 = MEMORY[0x270FA5388](v567);
  v559 = (char *)&v494 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  v558 = (char *)&v494 - v73;
  MEMORY[0x270FA5388](v72);
  v515 = (char *)&v494 - v74;
  uint64_t v75 = type metadata accessor for SnapshotItem();
  uint64_t v519 = sub_24DCCA3F8();
  uint64_t v517 = *(void *)(v519 - 8);
  uint64_t v76 = MEMORY[0x270FA5388](v519);
  v542 = (char *)&v494 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  v541 = (char *)&v494 - v79;
  uint64_t v536 = v75;
  uint64_t v535 = *(void *)(v75 - 8);
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  v512 = (char *)&v494 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v80);
  v510 = (char *)&v494 - v82;
  uint64_t v83 = swift_getAssociatedTypeWitness();
  uint64_t v572 = sub_24DCCA3F8();
  uint64_t v570 = *(void *)(v572 - 8);
  uint64_t v84 = MEMORY[0x270FA5388](v572);
  v540 = (char *)&v494 - ((v85 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  v506 = (char *)&v494 - v87;
  uint64_t v88 = MEMORY[0x270FA5388](v86);
  v557 = (char *)&v494 - v89;
  uint64_t v90 = MEMORY[0x270FA5388](v88);
  v556 = (char *)&v494 - v91;
  uint64_t v92 = MEMORY[0x270FA5388](v90);
  v554 = (char *)&v494 - v93;
  uint64_t v94 = MEMORY[0x270FA5388](v92);
  v578 = (uint64_t *)((char *)&v494 - v95);
  uint64_t v96 = MEMORY[0x270FA5388](v94);
  v555 = (char *)&v494 - v97;
  uint64_t v575 = v83;
  uint64_t v576 = *(void *)(v83 - 8);
  uint64_t v98 = MEMORY[0x270FA5388](v96);
  v521 = (char *)&v494 - ((v99 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = MEMORY[0x270FA5388](v98);
  v507 = (char *)&v494 - v101;
  uint64_t v102 = MEMORY[0x270FA5388](v100);
  v539 = (char *)&v494 - v103;
  uint64_t v104 = MEMORY[0x270FA5388](v102);
  v538 = (char *)&v494 - v105;
  uint64_t v106 = MEMORY[0x270FA5388](v104);
  v551 = (char *)&v494 - v107;
  uint64_t v108 = MEMORY[0x270FA5388](v106);
  v553 = (char *)&v494 - v109;
  MEMORY[0x270FA5388](v108);
  v549 = (char *)&v494 - v110;
  uint64_t v111 = sub_24DCC9078();
  uint64_t v588 = *(void *)(v111 - 8);
  uint64_t v589 = v111;
  uint64_t v112 = MEMORY[0x270FA5388](v111);
  unsigned int v114 = (char *)&v494 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v112);
  v581 = (char *)&v494 - v115;
  uint64_t v585 = v6;
  uint64_t v586 = v5;
  uint64_t AssociatedTypeWitness = v6;
  uint64_t v593 = v15;
  uint64_t v583 = v15;
  uint64_t v584 = v16;
  uint64_t AssociatedConformanceWitness = v5;
  uint64_t v595 = v16;
  uint64_t v116 = type metadata accessor for ItemReconciliation();
  uint64_t v117 = sub_24DCCA3F8();
  uint64_t v118 = *(void *)(v117 - 8);
  uint64_t v119 = MEMORY[0x270FA5388](v117);
  uint64_t v121 = (char *)&v494 - v120;
  uint64_t v122 = *(void *)(v116 - 8);
  uint64_t v123 = MEMORY[0x270FA5388](v119);
  uint64_t v125 = (char *)&v494 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = MEMORY[0x270FA5388](v123);
  unint64_t v128 = (char *)&v494 - v127;
  MEMORY[0x270FA5388](v126);
  uint64_t v130 = (char *)&v494 - v129;
  (*(void (**)(char *, void (*)(void, void), uint64_t))(v118 + 16))(v121, (void (*)(void, void))v590, v117);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48))(v121, 1, v116) == 1)
  {
    (*(void (**)(char *, uint64_t))(v118 + 8))(v121, v117);
    id v131 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v132 = sub_24DCC9068();
    os_log_type_t v133 = sub_24DCCA118();
    if (os_log_type_enabled(v132, v133))
    {
      uint64_t v134 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v134 = 0;
      _os_log_impl(&dword_24D3D0000, v132, v133, "[interactive] testingOperationForEntry, missing entry", v134, 2u);
      MEMORY[0x25332B030](v134, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v588 + 8))(v114, v589);
    uint64_t AssociatedTypeWitness = v585;
    uint64_t v593 = v583;
    uint64_t AssociatedConformanceWitness = v586;
    uint64_t v595 = v584;
    uint64_t v135 = type metadata accessor for TestingOperation();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v135 - 8) + 56))(v587, 1, 1, v135);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v122 + 32))(v130, v121, v116);
    uint64_t v137 = v591;
    uint64_t v138 = sub_24DB89ED4(v582, v116);
    uint64_t v141 = v122;
    if (v137) {
      return (*(uint64_t (**)(char *, uint64_t))(v122 + 8))(v130, v116);
    }
    uint64_t v142 = v139;
    uint64_t v591 = 0;
    unint64_t v143 = v140;
    unint64_t v144 = v138;
    id v145 = (id)fpfs_current_or_default_log();
    int v146 = v581;
    sub_24DCC9088();
    uint64_t v501 = v141;
    uint64_t v147 = *(void (**)(char *, char *, uint64_t))(v141 + 16);
    v500 = v130;
    v590 = v147;
    v147(v128, v130, v116);
    unint64_t v499 = v144 >> 62;
    sub_24D4A4340(v144, v142, v143);
    sub_24D4A4340(v144, v142, v143);
    uint64_t v148 = v146;
    uint64_t v149 = sub_24DCC9068();
    os_log_type_t v150 = sub_24DCCA118();
    v498 = v149;
    int v497 = v150;
    BOOL v151 = os_log_type_enabled(v149, v150);
    uint64_t v582 = (uint64_t)v143;
    if (v151)
    {
      uint64_t v152 = swift_slowAlloc();
      uint64_t v496 = v142;
      uint64_t v153 = v152;
      uint64_t v495 = swift_slowAlloc();
      uint64_t AssociatedTypeWitness = v495;
      *(_DWORD *)uint64_t v153 = 136315394;
      uint64_t v494 = v153 + 4;
      v590(v125, v128, v116);
      uint64_t v154 = *(void (**)(char *, char *, uint64_t))(v501 + 8);
      v590 = v154;
      ((void (*)(char *, uint64_t))v154)(v128, v116);
      uint64_t v155 = sub_24DB8E8F4(v116);
      unint64_t v157 = v156;
      ((void (*)(char *, uint64_t))v154)(v125, v116);
      uint64_t v599 = sub_24D418FB4(v155, v157, &AssociatedTypeWitness);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v153 + 12) = 2080;
      uint64_t v158 = v496;
      sub_24D4A4340(v144, v496, v143);
      uint64_t v159 = sub_24DB91CB0(v144, v158, (unint64_t)v143);
      unint64_t v161 = v160;
      sub_24D4A434C(v144);
      uint64_t v599 = sub_24D418FB4(v159, v161, &AssociatedTypeWitness);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D4A434C(v144);
      uint64_t v162 = v144;
      sub_24D4A434C(v144);
      uint64_t v163 = v498;
      _os_log_impl(&dword_24D3D0000, v498, (os_log_type_t)v497, "[interactive] testingOperationForEntry, entry=%s, status=%s", (uint8_t *)v153, 0x16u);
      uint64_t v164 = v495;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v164, -1, -1);
      MEMORY[0x25332B030](v153, -1, -1);

      (*(void (**)(char *, uint64_t))(v588 + 8))(v581, v589);
      uint64_t v165 = v158;
    }
    else
    {
      v590 = *(void (**)(char *, char *, uint64_t))(v501 + 8);
      ((void (*)(char *, uint64_t))v590)(v128, v116);
      sub_24D4A434C(v144);
      uint64_t v162 = v144;
      sub_24D4A434C(v144);

      (*(void (**)(char *, uint64_t))(v588 + 8))(v148, v589);
      uint64_t v165 = v142;
    }
    uint64_t v166 = v579;
    uint64_t v167 = v580;
    uint64_t v168 = v500;
    uint64_t v169 = v578;
    if (v499 == 1)
    {
      switch((char)v162)
      {
        case 0:
          uint64_t v589 = v162;
          uint64_t v496 = v165;
          uint64_t Strong = swift_weakLoadStrong();
          if (!Strong) {
            goto LABEL_100;
          }
          uint64_t v180 = *(void *)(Strong + 40);
          swift_retain();
          swift_release();
          uint64_t v181 = &v168[*(int *)(v116 + 52)];
          uint64_t v182 = v571;
          uint64_t v183 = v573;
          (*(void (**)(char *, char *, uint64_t))(v571 + 16))(v166, v181, v573);
          uint64_t v184 = v168;
          BOOL v185 = v574;
          if (v574[6](v166, 1, v577) == 1)
          {
            swift_release();
            sub_24D4A434C(v589);
            ((void (*)(char *, uint64_t))v590)(v184, v116);
            (*(void (**)(char *, uint64_t))(v182 + 8))(v166, v183);
            goto LABEL_21;
          }
          v581 = v181;
          uint64_t v588 = v116;
          uint64_t v275 = v185[4];
          uint64_t v276 = v550;
          uint64_t v277 = v577;
          v275(v550, (uint64_t)v166, v577);
          unint64_t v278 = v546;
          uint64_t v279 = v591;
          (*(void (**)(char *, uint64_t))(*(void *)v180 + 240))(v276, 1);
          if (v279)
          {
            swift_release();
            sub_24D4A434C(v589);
            ((void (*)(char *, uint64_t))v185[1])(v276, v277);
            return ((uint64_t (*)(char *, uint64_t))v590)(v500, v588);
          }
          uint64_t v306 = v534;
          uint64_t v307 = v537;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v534 + 48))(v278, 1, v537) == 1)
          {
            swift_release();
            sub_24D4A434C(v589);
            ((void (*)(char *, uint64_t))v574[1])(v550, v577);
            ((void (*)(char *, uint64_t))v590)(v500, v588);
            (*(void (**)(char *, uint64_t))(v518 + 8))(v278, v520);
            goto LABEL_21;
          }
          uint64_t v367 = v307;
          v368 = (char *)(v306 + 32);
          v369 = *(void (**)(char *, char *, uint64_t))(v306 + 32);
          v370 = v278;
          v371 = v511;
          v369(v511, v370, v367);
          uint64_t v372 = (*(uint64_t (**)(char *))(*(void *)v180 + 296))(v550);
          uint64_t v591 = 0;
          char v406 = v373;
          v580 = (char *)v372;
          uint64_t v407 = v537;
          v579 = v368;
          swift_release();
          uint64_t v408 = sub_24D4A434C(v589);
          if ((v406 & 1) == 0)
          {
            MEMORY[0x270FA5388](v408);
            strcpy((char *)&v494 - 48, " item version domainVersion ");
            uint64_t v409 = v577;
            uint64_t AssociatedTypeWitness = v577;
            uint64_t v593 = v520;
            uint64_t AssociatedConformanceWitness = MEMORY[0x263F8D9D0];
            uint64_t v595 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
            TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
            uint64_t v341 = v587;
            v411 = &v587[TupleTypeMetadata[12]];
            uint64_t v412 = TupleTypeMetadata[16];
            uint64_t v589 = TupleTypeMetadata[20];
            v275(v587, (uint64_t)v550, v409);
            v369(v411, v371, v407);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v534 + 56))(v411, 0, 1, v407);
            v413 = v581;
            *(void *)&v341[v412] = v580;
            uint64_t v414 = v566;
            v415 = v516;
            uint64_t v416 = v568;
            (*(void (**)(char *, char *, uint64_t))(v566 + 16))(v516, v413, v568);
            ((void (*)(char *, uint64_t))v590)(v500, v588);
            v417 = *(void **)&v415[*(int *)(v416 + 72)];
            v418 = *(void (**)(char *, uint64_t))(v414 + 8);
            id v419 = v417;
            v418(v415, v416);
            *(void *)&v341[v589] = v417;
            uint64_t v420 = v583;
            uint64_t v352 = v584;
            uint64_t v421 = v585;
            uint64_t v354 = v586;
            uint64_t AssociatedTypeWitness = v583;
            uint64_t v593 = v585;
            uint64_t AssociatedConformanceWitness = v584;
            uint64_t v595 = v586;
            type metadata accessor for DirectionalTestingOperation();
            swift_storeEnumTagMultiPayload();
            uint64_t AssociatedTypeWitness = v421;
            uint64_t v593 = v420;
            goto LABEL_69;
          }
          (*(void (**)(char *, uint64_t))(v534 + 8))(v371, v407);
          v430 = v574[1];
          v432 = &v582;
          goto LABEL_88;
        case 1:
          uint64_t v589 = v162;
          uint64_t v496 = v165;
          uint64_t v214 = swift_weakLoadStrong();
          if (!v214) {
            goto LABEL_102;
          }
          uint64_t v215 = *(void *)(v214 + 40);
          swift_retain();
          swift_release();
          id v216 = &v168[*(int *)(v116 + 52)];
          uint64_t v217 = v571;
          uint64_t v218 = v573;
          (*(void (**)(char *, char *, uint64_t))(v571 + 16))(v167, v216, v573);
          unint64_t v219 = v574;
          uint64_t v220 = v577;
          if (v574[6](v167, 1, v577) == 1)
          {
            swift_release();
            sub_24D4A434C(v589);
            ((void (*)(char *, uint64_t))v590)(v500, v116);
            (*(void (**)(char *, uint64_t))(v217 + 8))(v167, v218);
            goto LABEL_21;
          }
          v581 = v216;
          uint64_t v270 = v215;
          uint64_t v271 = v219[4];
          v272 = v548;
          v271(v548, (uint64_t)v167, v220);
          uint64_t v273 = v547;
          uint64_t v274 = v591;
          (*(void (**)(char *, uint64_t))(*(void *)v215 + 240))(v272, 1);
          if (v274)
          {
            swift_release();
            sub_24D4A434C(v589);
            ((void (*)(char *, uint64_t))v219[1])(v272, v220);
            return ((uint64_t (*)(char *, uint64_t))v590)(v500, v116);
          }
          v579 = (char *)(v219 + 4);
          v580 = (char *)v271;
          uint64_t v304 = v534;
          uint64_t v305 = v537;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v534 + 48))(v273, 1, v537) == 1)
          {
            swift_release();
            sub_24D4A434C(v589);
            ((void (*)(char *, uint64_t))v574[1])(v272, v577);
            ((void (*)(char *, uint64_t))v590)(v500, v116);
            (*(void (**)(char *, uint64_t))(v518 + 8))(v273, v520);
            goto LABEL_21;
          }
          uint64_t v588 = v116;
          uint64_t v363 = v304 + 32;
          uint64_t v362 = *(void (**)(char *, char *, uint64_t))(v304 + 32);
          v364 = v513;
          v362(v513, v273, v305);
          uint64_t v365 = (*(uint64_t (**)(char *))(*(void *)v270 + 296))(v272);
          uint64_t v591 = 0;
          uint64_t v399 = v365;
          char v400 = v366;
          swift_release();
          sub_24D4A434C(v589);
          if (v400)
          {
            (*(void (**)(char *, uint64_t))(v304 + 8))(v364, v305);
            v430 = v574[1];
            v432 = (uint64_t *)&v580;
LABEL_88:
            v431 = (char *)*(v432 - 32);
            v433 = &v602;
LABEL_91:
            ((void (*)(char *, void))v430)(v431, *(v433 - 32));
            ((void (*)(char *, uint64_t))v590)(v500, v588);
            goto LABEL_21;
          }
          uint64_t v589 = (uint64_t)v362;
          uint64_t v401 = v570;
          v402 = v506;
          v403 = v500;
          (*(void (**)(char *, char *, uint64_t))(v570 + 16))(v506, v500, v572);
          uint64_t v404 = v576;
          uint64_t v405 = v575;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v576 + 48))(v402, 1, v575) == 1)
          {
            (*(void (**)(char *, uint64_t))(v534 + 8))(v364, v537);
            ((void (*)(char *, uint64_t))v574[1])(v548, v577);
            ((void (*)(char *, uint64_t))v590)(v403, v588);
            (*(void (**)(char *, uint64_t))(v401 + 8))(v402, v572);
            goto LABEL_21;
          }
          uint64_t v582 = v363;
          v434 = *(void (**)(char *, char *, uint64_t))(v404 + 32);
          v578 = (uint64_t *)(v404 + 32);
          uint64_t v573 = (uint64_t)v434;
          v434(v507, v402, v405);
          v435 = &v403[*(int *)(v567 + 48)];
          uint64_t v436 = v526;
          v437 = v504;
          uint64_t v438 = v527;
          (*(void (**)(char *, char *))(v526 + 16))(v504, v435);
          uint64_t v439 = v528;
          uint64_t v440 = v533;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v528 + 48))(v437, 1, v533) == 1)
          {
            (*(void (**)(char *, uint64_t))(v404 + 8))(v507, v405);
            (*(void (**)(char *, uint64_t))(v534 + 8))(v513, v537);
            ((void (*)(char *, uint64_t))v574[1])(v548, v577);
            ((void (*)(char *, uint64_t))v590)(v500, v588);
            (*(void (**)(char *, uint64_t))(v436 + 8))(v437, v438);
            goto LABEL_21;
          }
          v446 = *(unsigned int (***)(char *, uint64_t, uint64_t))(v439 + 32);
          uint64_t v571 = v439 + 32;
          v574 = v446;
          uint64_t v447 = ((uint64_t (*)(char *, char *, uint64_t))v446)(v505, v437, v440);
          MEMORY[0x270FA5388](v447);
          strcpy((char *)&v494 - 80, " item destinationItemID baseVersion fields version domainVersion ");
          uint64_t v448 = v577;
          uint64_t AssociatedTypeWitness = v577;
          uint64_t v593 = v520;
          uint64_t AssociatedConformanceWitness = v572;
          uint64_t v595 = v438;
          v596 = &type metadata for Fields;
          uint64_t v597 = MEMORY[0x263F8D9D0];
          uint64_t v598 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
          v449 = (int *)swift_getTupleTypeMetadata();
          v450 = v587;
          v451 = &v587[v449[12]];
          v452 = &v587[v449[16]];
          v453 = &v587[v449[20]];
          uint64_t v570 = v449[24];
          v569 = (uint64_t *)v449[28];
          uint64_t v572 = v449[32];
          ((void (*)(char *, char *, uint64_t))v580)(v587, v548, v448);
          uint64_t v454 = v439;
          uint64_t v455 = v537;
          ((void (*)(char *, char *, uint64_t))v589)(v451, v513, v537);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v534 + 56))(v451, 0, 1, v455);
          ((void (*)(char *, char *, uint64_t))v573)(v452, v507, v405);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v404 + 56))(v452, 0, 1, v405);
          v456 = v453;
          v457 = v453;
          uint64_t v458 = v533;
          ((void (*)(char *, char *, uint64_t))v574)(v457, v505, v533);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v454 + 56))(v456, 0, 1, v458);
          *(void *)&v450[v570] = v496;
          *(uint64_t *)((char *)v569 + (void)v450) = v399;
          uint64_t v459 = v566;
          v460 = v516;
          uint64_t v461 = v568;
          (*(void (**)(char *, char *, uint64_t))(v566 + 16))(v516, v581, v568);
          ((void (*)(char *, uint64_t))v590)(v500, v588);
          v462 = *(void **)&v460[*(int *)(v461 + 72)];
          v463 = *(void (**)(char *, uint64_t))(v459 + 8);
          id v464 = v462;
          v463(v460, v461);
          *(void *)&v450[v572] = v462;
          uint64_t v466 = v583;
          uint64_t v465 = v584;
          uint64_t v468 = v585;
          uint64_t v467 = v586;
          uint64_t AssociatedTypeWitness = v583;
          uint64_t v593 = v585;
          uint64_t AssociatedConformanceWitness = v584;
          uint64_t v595 = v586;
          type metadata accessor for DirectionalTestingOperation();
          swift_storeEnumTagMultiPayload();
          uint64_t AssociatedTypeWitness = v468;
          uint64_t v593 = v466;
          uint64_t AssociatedConformanceWitness = v467;
          uint64_t v595 = v465;
          uint64_t v469 = type metadata accessor for TestingOperation();
          swift_storeEnumTagMultiPayload();
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v469 - 8) + 56))(v450, 0, 1, v469);
        case 2:
          v228 = v500;
          sub_24D4A434C(v162);
          uint64_t v229 = &v168[*(int *)(v116 + 52)];
          uint64_t v230 = v571;
          uint64_t v231 = v560;
          uint64_t v232 = v573;
          (*(void (**)(char *, char *, uint64_t))(v571 + 16))(v560, v229, v573);
          uint64_t v233 = v574;
          uint64_t v234 = v577;
          if (v574[6](v231, 1, v577) == 1)
          {
            ((void (*)(char *, uint64_t))v590)(v228, v116);
            (*(void (**)(char *, uint64_t))(v230 + 8))(v231, v232);
            goto LABEL_21;
          }
          uint64_t v588 = v116;
          uint64_t v253 = v233[4];
          uint64_t v254 = v552;
          uint64_t v589 = (uint64_t)(v233 + 4);
          uint64_t v582 = (uint64_t)v253;
          v253(v552, (uint64_t)v231, v234);
          uint64_t v255 = v570;
          uint64_t v256 = v540;
          uint64_t v257 = v572;
          (*(void (**)(char *, char *, uint64_t))(v570 + 16))(v540, v228, v572);
          uint64_t v258 = v575;
          if ((*(unsigned int (**)(char *, uint64_t))(v576 + 48))(v256, 1) == 1)
          {
            ((void (*)(char *, uint64_t))v233[1])(v254, v234);
            ((void (*)(char *, uint64_t))v590)(v500, v588);
            uint64_t v259 = *(void (**)(char *, uint64_t))(v255 + 8);
            uint64_t v260 = v256;
            uint64_t v261 = v257;
LABEL_44:
            v259(v260, v261);
            goto LABEL_21;
          }
          v581 = v229;
          uint64_t v293 = v521;
          uint64_t v294 = v256;
          uint64_t v295 = v258;
          v579 = *(char **)(v576 + 32);
          v580 = (char *)(v576 + 32);
          ((void (*)(char *, char *, uint64_t))v579)(v521, v294, v258);
          v296 = v500;
          uint64_t v297 = v526;
          v298 = v523;
          uint64_t v299 = v527;
          (*(void (**)(char *, char *, uint64_t))(v526 + 16))(v523, &v500[*(int *)(v567 + 48)], v527);
          uint64_t v300 = v528;
          uint64_t v301 = v533;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v528 + 48))(v298, 1, v533) == 1)
          {
            (*(void (**)(char *, uint64_t))(v576 + 8))(v293, v295);
            ((void (*)(char *, uint64_t))v574[1])(v552, v577);
            ((void (*)(char *, uint64_t))v590)(v296, v588);
            (*(void (**)(char *, uint64_t))(v297 + 8))(v298, v299);
            goto LABEL_21;
          }
          uint64_t v335 = v299;
          v336 = *(uint64_t (**)(char *, char *, uint64_t))(v300 + 32);
          v578 = (uint64_t *)(v300 + 32);
          uint64_t v337 = v336(v524, v298, v301);
          uint64_t v338 = v300;
          MEMORY[0x270FA5388](v337);
          strcpy((char *)&v494 - 64, " destinationItemID baseVersion recursive domainVersion ");
          uint64_t v339 = v577;
          uint64_t AssociatedTypeWitness = v577;
          uint64_t v593 = v572;
          uint64_t AssociatedConformanceWitness = v335;
          uint64_t v595 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
          v596 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
          uint64_t v340 = (int *)swift_getTupleTypeMetadata();
          uint64_t v341 = v587;
          v342 = &v587[v340[12]];
          v343 = &v587[v340[16]];
          v574 = (unsigned int (**)(char *, uint64_t, uint64_t))v340[20];
          uint64_t v344 = v340[24];
          ((void (*)(char *, char *, uint64_t))v582)(v587, v552, v339);
          ((void (*)(char *, char *, uint64_t))v579)(v342, v293, v295);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v576 + 56))(v342, 0, 1, v295);
          uint64_t v345 = v533;
          v336(v343, v524, v533);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v338 + 56))(v343, 0, 1, v345);
          *((unsigned char *)v574 + (void)v341) = 0;
          uint64_t v346 = v566;
          uint64_t v347 = v516;
          uint64_t v348 = v568;
          (*(void (**)(char *, char *, uint64_t))(v566 + 16))(v516, v581, v568);
          ((void (*)(char *, uint64_t))v590)(v500, v588);
          uint64_t v349 = *(void **)&v347[*(int *)(v348 + 72)];
          uint64_t v350 = *(void (**)(char *, uint64_t))(v346 + 8);
          id v351 = v349;
          v350(v347, v348);
          *(void *)&v341[v344] = v349;
          uint64_t v353 = v583;
          uint64_t v352 = v584;
          uint64_t v355 = v585;
          uint64_t v354 = v586;
          uint64_t AssociatedTypeWitness = v583;
          uint64_t v593 = v585;
          uint64_t AssociatedConformanceWitness = v584;
          uint64_t v595 = v586;
          type metadata accessor for DirectionalTestingOperation();
          swift_storeEnumTagMultiPayload();
          uint64_t AssociatedTypeWitness = v355;
          uint64_t v593 = v353;
LABEL_69:
          uint64_t AssociatedConformanceWitness = v354;
          uint64_t v595 = v352;
          uint64_t v356 = type metadata accessor for TestingOperation();
          swift_storeEnumTagMultiPayload();
          return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v356 - 8) + 56))(v341, 0, 1, v356);
        case 6:
          sub_24D4A434C(v162);
          uint64_t v192 = v566;
          uint64_t v193 = v564;
          uint64_t v194 = v568;
          (*(void (**)(char *, char *, uint64_t))(v566 + 16))(v564, &v168[*(int *)(v116 + 52)], v568);
          ((void (*)(char *, uint64_t))v590)(v168, v116);
          uint64_t v195 = v571;
          char v196 = v562;
          uint64_t v197 = v573;
          (*(void (**)(char *, char *, uint64_t))(v571 + 16))(v562, v193, v573);
          (*(void (**)(char *, uint64_t))(v192 + 8))(v193, v194);
          uint64_t v198 = v574;
          uint64_t v199 = v577;
          if (v574[6](v196, 1, v577) == 1) {
            goto LABEL_39;
          }
          uint64_t v200 = v198[4];
          uint64_t v201 = v544;
          v200(v544, (uint64_t)v196, v199);
          uint64_t v202 = v587;
          v200(v587, (uint64_t)v201, v199);
          uint64_t v204 = v583;
          uint64_t v203 = v584;
          uint64_t v206 = v585;
          uint64_t v205 = v586;
          uint64_t AssociatedTypeWitness = v583;
          uint64_t v593 = v585;
          uint64_t AssociatedConformanceWitness = v584;
          uint64_t v595 = v586;
          type metadata accessor for DirectionalTestingOperation();
          goto LABEL_46;
        case 12:
          goto LABEL_20;
        case 23:
          sub_24D4A434C(v162);
          uint64_t v235 = v566;
          v236 = v563;
          uint64_t v237 = v568;
          (*(void (**)(char *, char *, uint64_t))(v566 + 16))(v563, &v168[*(int *)(v116 + 52)], v568);
          ((void (*)(char *, uint64_t))v590)(v168, v116);
          uint64_t v195 = v571;
          char v196 = v561;
          uint64_t v197 = v573;
          (*(void (**)(char *, char *, uint64_t))(v571 + 16))(v561, v236, v573);
          (*(void (**)(char *, uint64_t))(v235 + 8))(v236, v237);
          uint64_t v238 = v574;
          uint64_t v239 = v577;
          if (v574[6](v196, 1, v577) == 1)
          {
LABEL_39:
            (*(void (**)(char *, uint64_t))(v195 + 8))(v196, v197);
            goto LABEL_21;
          }
          uint64_t v240 = v238[4];
          uint64_t v241 = v543;
          v240(v543, (uint64_t)v196, v239);
          uint64_t v202 = v587;
          v240(v587, (uint64_t)v241, v239);
          uint64_t v204 = v583;
          uint64_t v203 = v584;
          uint64_t v206 = v585;
          uint64_t v205 = v586;
          uint64_t AssociatedTypeWitness = v583;
          uint64_t v593 = v585;
          uint64_t AssociatedConformanceWitness = v584;
          uint64_t v595 = v586;
          type metadata accessor for DirectionalTestingOperation();
LABEL_46:
          swift_storeEnumTagMultiPayload();
          uint64_t AssociatedTypeWitness = v206;
          uint64_t v593 = v204;
          uint64_t AssociatedConformanceWitness = v205;
          uint64_t v595 = v203;
          uint64_t v264 = type metadata accessor for TestingOperation();
          swift_storeEnumTagMultiPayload();
          uint64_t result = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v264 - 8) + 56))(v202, 0, 1, v264);
          break;
        default:
          sub_24DA84A18("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 1050, v162);
      }
    }
    else
    {
      if (!v499)
      {
        switch((char)v162)
        {
          case 0:
            uint64_t v589 = v162;
            uint64_t v496 = v165;
            uint64_t v170 = swift_weakLoadStrong();
            if (!v170)
            {
              __break(1u);
LABEL_100:
              __break(1u);
LABEL_101:
              __break(1u);
LABEL_102:
              __break(1u);
LABEL_103:
              sub_24DA84A18("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 999, v162);
            }
            uint64_t v171 = *(void *)(v170 + 32);
            swift_retain();
            swift_release();
            uint64_t v172 = v570;
            uint64_t v173 = v555;
            uint64_t v174 = v168;
            uint64_t v175 = v168;
            uint64_t v176 = v572;
            (*(void (**)(char *, char *, uint64_t))(v570 + 16))(v555, v174, v572);
            uint64_t v177 = v576;
            uint64_t v178 = v575;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v576 + 48))(v173, 1, v575) == 1)
            {
              swift_release();
              sub_24D4A434C(v589);
              ((void (*)(char *, uint64_t))v590)(v175, v116);
              (*(void (**)(char *, uint64_t))(v172 + 8))(v173, v176);
              goto LABEL_21;
            }
            uint64_t v588 = v116;
            uint64_t v265 = v171;
            uint64_t v266 = *(void (**)(char *, char *, uint64_t))(v177 + 32);
            uint64_t v267 = v549;
            v266(v549, v173, v178);
            uint64_t v268 = v541;
            uint64_t v269 = v591;
            (*(void (**)(char *, uint64_t))(*(void *)v265 + 240))(v267, 1);
            if (v269)
            {
              swift_release();
              sub_24D4A434C(v589);
              (*(void (**)(char *, uint64_t))(v177 + 8))(v267, v178);
              return ((uint64_t (*)(char *, uint64_t))v590)(v500, v588);
            }
            uint64_t v302 = v535;
            uint64_t v303 = v536;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v535 + 48))(v268, 1, v536) == 1)
            {
              swift_release();
              sub_24D4A434C(v589);
              (*(void (**)(char *, uint64_t))(v576 + 8))(v549, v575);
              ((void (*)(char *, uint64_t))v590)(v500, v588);
              (*(void (**)(char *, uint64_t))(v517 + 8))(v268, v519);
              goto LABEL_21;
            }
            v581 = (char *)v266;
            uint64_t v357 = *(void (**)(char *, char *, uint64_t))(v302 + 32);
            v358 = v510;
            v357(v510, v268, v303);
            uint64_t v359 = v549;
            uint64_t v360 = (*(uint64_t (**)(char *))(*(void *)v265 + 296))(v549);
            uint64_t v591 = 0;
            char v378 = v361;
            uint64_t v379 = v360;
            swift_release();
            uint64_t v380 = sub_24D4A434C(v589);
            if ((v378 & 1) == 0)
            {
              MEMORY[0x270FA5388](v380);
              strcpy((char *)&v494 - 48, " item version domainVersion ");
              uint64_t v381 = v575;
              uint64_t AssociatedTypeWitness = v575;
              uint64_t v593 = v519;
              uint64_t AssociatedConformanceWitness = MEMORY[0x263F8D9D0];
              uint64_t v595 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
              v382 = (int *)swift_getTupleTypeMetadata();
              v383 = &v587[v382[12]];
              uint64_t v582 = v382[16];
              uint64_t v589 = v382[20];
              v384 = v587;
              ((void (*)(char *, char *, uint64_t))v581)(v587, v359, v381);
              uint64_t v385 = v536;
              v357(v383, v358, v536);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v535 + 56))(v383, 0, 1, v385);
              *(void *)&v384[v582] = v379;
              v386 = v384;
              uint64_t v387 = v565;
              v388 = v515;
              v389 = v500;
              uint64_t v390 = v567;
              (*(void (**)(char *, char *, uint64_t))(v565 + 16))(v515, v500, v567);
              ((void (*)(char *, uint64_t))v590)(v389, v588);
              v391 = *(void **)&v388[*(int *)(v390 + 72)];
              v392 = *(void (**)(char *, uint64_t))(v387 + 8);
              id v393 = v391;
              v392(v388, v390);
              *(void *)&v386[v589] = v391;
              uint64_t v395 = v585;
              uint64_t v394 = v586;
              uint64_t v397 = v583;
              uint64_t v396 = v584;
              uint64_t AssociatedTypeWitness = v585;
              uint64_t v593 = v583;
              uint64_t AssociatedConformanceWitness = v586;
              uint64_t v595 = v584;
              type metadata accessor for DirectionalTestingOperation();
              swift_storeEnumTagMultiPayload();
              uint64_t AssociatedTypeWitness = v395;
              uint64_t v593 = v397;
              uint64_t AssociatedConformanceWitness = v394;
              uint64_t v595 = v396;
              uint64_t v398 = type metadata accessor for TestingOperation();
              swift_storeEnumTagMultiPayload();
              return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v398 - 8) + 56))(v386, 0, 1, v398);
            }
            (*(void (**)(char *, uint64_t))(v535 + 8))(v358, v536);
            v430 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v576 + 8);
            v431 = v359;
LABEL_90:
            v433 = &v601;
            goto LABEL_91;
          case 1:
            uint64_t v589 = v162;
            uint64_t v496 = v165;
            uint64_t v207 = swift_weakLoadStrong();
            if (!v207) {
              goto LABEL_101;
            }
            uint64_t v208 = *(void *)(v207 + 32);
            swift_retain();
            swift_release();
            uint64_t v209 = v570;
            uint64_t v210 = v572;
            (*(void (**)(uint64_t *, char *, uint64_t))(v570 + 16))(v169, v168, v572);
            uint64_t v211 = v168;
            uint64_t v212 = v576;
            uint64_t v213 = v575;
            if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v576 + 48))(v169, 1, v575) == 1)
            {
              swift_release();
              sub_24D4A434C(v589);
              ((void (*)(char *, uint64_t))v590)(v211, v116);
              (*(void (**)(uint64_t *, uint64_t))(v209 + 8))(v169, v210);
              goto LABEL_21;
            }
            uint64_t v588 = v116;
            uint64_t v280 = v553;
            uint64_t v281 = v169;
            uint64_t v282 = *(void (**)(char *, uint64_t *, uint64_t))(v212 + 32);
            v282(v553, v281, v213);
            uint64_t v283 = *(void (**)(char *, uint64_t))(*(void *)v208 + 240);
            uint64_t v284 = v208;
            uint64_t v285 = v542;
            uint64_t v286 = v591;
            v283(v280, 1);
            if (v286)
            {
              swift_release();
              sub_24D4A434C(v589);
              (*(void (**)(char *, uint64_t))(v212 + 8))(v280, v213);
              return ((uint64_t (*)(char *, uint64_t))v590)(v500, v588);
            }
            uint64_t v308 = v284;
            uint64_t v309 = v535;
            uint64_t v310 = v536;
            uint64_t v311 = v285;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v535 + 48))(v285, 1, v536) == 1)
            {
              swift_release();
              sub_24D4A434C(v589);
              (*(void (**)(char *, uint64_t))(v576 + 8))(v553, v575);
              ((void (*)(char *, uint64_t))v590)(v500, v588);
              (*(void (**)(char *, uint64_t))(v517 + 8))(v285, v519);
              goto LABEL_21;
            }
            v581 = (char *)v282;
            v374 = *(void (**)(char *, char *, uint64_t))(v309 + 32);
            v375 = v512;
            v374(v512, v311, v310);
            uint64_t v376 = (*(uint64_t (**)(char *))(*(void *)v308 + 296))(v553);
            uint64_t v591 = 0;
            uint64_t v422 = v376;
            char v423 = v377;
            v580 = (char *)v374;
            swift_release();
            sub_24D4A434C(v589);
            if (v423)
            {
              (*(void (**)(char *, uint64_t))(v535 + 8))(v375, v536);
              v430 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v576 + 8);
              v431 = v553;
              goto LABEL_90;
            }
            uint64_t v589 = v422;
            v424 = &v500[*(int *)(v588 + 52)];
            uint64_t v425 = v571;
            v426 = v508;
            (*(void (**)(char *, char *, uint64_t))(v571 + 16))(v508, v424, v573);
            v427 = v574;
            uint64_t v428 = v577;
            if (v574[6](v426, 1, v577) == 1)
            {
              (*(void (**)(char *, uint64_t))(v535 + 8))(v375, v536);
              (*(void (**)(char *, uint64_t))(v576 + 8))(v553, v575);
              ((void (*)(char *, uint64_t))v590)(v500, v588);
              uint64_t v259 = *(void (**)(char *, uint64_t))(v425 + 8);
              uint64_t v260 = v426;
              v429 = (char **)&v600;
            }
            else
            {
              v441 = (char *)v427[4];
              uint64_t v582 = (uint64_t)(v427 + 4);
              v579 = v441;
              ((void (*)(char *, char *, uint64_t))v441)(v509, v426, v428);
              uint64_t v442 = v525;
              v443 = v502;
              (*(void (**)(char *, char *, uint64_t))(v525 + 16))(v502, &v424[*(int *)(v568 + 48)], v529);
              uint64_t v444 = v531;
              uint64_t v445 = v532;
              if ((*(unsigned int (**)(char *, uint64_t))(v531 + 48))(v443, 1) != 1)
              {
                uint64_t v571 = *(void *)(v444 + 32);
                uint64_t v572 = v444 + 32;
                uint64_t v470 = ((uint64_t (*)(char *, char *, uint64_t))v571)(v503, v443, v445);
                v578 = &v494;
                MEMORY[0x270FA5388](v470);
                strcpy((char *)&v494 - 80, " item destinationItemID baseVersion fields version domainVersion ");
                uint64_t v471 = v575;
                uint64_t AssociatedTypeWitness = v575;
                uint64_t v593 = v519;
                uint64_t AssociatedConformanceWitness = v573;
                uint64_t v595 = v529;
                v596 = &type metadata for Fields;
                uint64_t v597 = MEMORY[0x263F8D9D0];
                uint64_t v598 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
                v472 = (int *)swift_getTupleTypeMetadata();
                v473 = v587;
                v474 = &v587[v472[12]];
                v475 = &v587[v472[16]];
                v476 = &v587[v472[20]];
                uint64_t v576 = v472[24];
                uint64_t v573 = v472[28];
                v578 = (uint64_t *)v472[32];
                ((void (*)(char *, char *, uint64_t))v581)(v587, v553, v471);
                uint64_t v477 = v536;
                ((void (*)(char *, char *, uint64_t))v580)(v474, v512, v536);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v535 + 56))(v474, 0, 1, v477);
                uint64_t v478 = v577;
                ((void (*)(char *, char *, uint64_t))v579)(v475, v509, v577);
                ((void (*)(char *, void, uint64_t, uint64_t))v427[7])(v475, 0, 1, v478);
                v479 = v476;
                v480 = v476;
                uint64_t v481 = v532;
                ((void (*)(char *, char *, uint64_t))v571)(v480, v503, v532);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v444 + 56))(v479, 0, 1, v481);
                *(void *)&v473[v576] = v496;
                *(void *)&v473[v573] = v589;
                uint64_t v482 = v565;
                v483 = v515;
                v484 = v500;
                uint64_t v485 = v567;
                (*(void (**)(char *, char *, uint64_t))(v565 + 16))(v515, v500, v567);
                ((void (*)(char *, uint64_t))v590)(v484, v588);
                v486 = *(void **)&v483[*(int *)(v485 + 72)];
                v487 = *(void (**)(char *, uint64_t))(v482 + 8);
                id v488 = v486;
                v487(v483, v485);
                *(uint64_t *)((char *)v578 + (void)v473) = (uint64_t)v486;
                uint64_t v490 = v585;
                uint64_t v489 = v586;
                uint64_t v492 = v583;
                uint64_t v491 = v584;
                uint64_t AssociatedTypeWitness = v585;
                uint64_t v593 = v583;
                uint64_t AssociatedConformanceWitness = v586;
                uint64_t v595 = v584;
                type metadata accessor for DirectionalTestingOperation();
                swift_storeEnumTagMultiPayload();
                uint64_t AssociatedTypeWitness = v490;
                uint64_t v593 = v492;
                uint64_t AssociatedConformanceWitness = v489;
                uint64_t v595 = v491;
                uint64_t v493 = type metadata accessor for TestingOperation();
                swift_storeEnumTagMultiPayload();
                return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v493 - 8) + 56))(v473, 0, 1, v493);
              }
              ((void (*)(char *, uint64_t))v427[1])(v509, v577);
              (*(void (**)(char *, uint64_t))(v535 + 8))(v512, v536);
              (*(void (**)(char *, uint64_t))(v576 + 8))(v553, v575);
              ((void (*)(char *, uint64_t))v590)(v500, v588);
              uint64_t v259 = *(void (**)(char *, uint64_t))(v442 + 8);
              uint64_t v260 = v443;
              v429 = &v561;
            }
            uint64_t v261 = (uint64_t)*(v429 - 32);
            goto LABEL_44;
          case 2:
            sub_24D4A434C(v162);
            uint64_t v187 = v570;
            uint64_t v188 = v554;
            uint64_t v189 = v572;
            (*(void (**)(char *, char *, uint64_t))(v570 + 16))(v554, v168, v572);
            uint64_t v190 = v576;
            uint64_t v191 = v575;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v576 + 48))(v188, 1, v575) == 1)
            {
              ((void (*)(char *, uint64_t))v590)(v168, v116);
              (*(void (**)(char *, uint64_t))(v187 + 8))(v188, v189);
              goto LABEL_21;
            }
            uint64_t v247 = v551;
            uint64_t v582 = *(void *)(v190 + 32);
            ((void (*)(char *, char *, uint64_t))v582)(v551, v188, v191);
            uint64_t v248 = v571;
            uint64_t v249 = *(void (**)(char *))(v571 + 16);
            char v250 = v545;
            uint64_t v589 = (uint64_t)&v168[*(int *)(v116 + 52)];
            uint64_t v251 = v573;
            v249(v545);
            uint64_t v252 = v574;
            if (v574[6](v250, 1, v577) == 1)
            {
              (*(void (**)(char *, uint64_t))(v190 + 8))(v247, v575);
              ((void (*)(char *, uint64_t))v590)(v500, v116);
              (*(void (**)(char *, uint64_t))(v248 + 8))(v250, v251);
              goto LABEL_21;
            }
            v581 = (char *)(v190 + 32);
            uint64_t v287 = v530;
            v580 = (char *)v252[4];
            ((void (*)(char *, char *, uint64_t))v580)(v530, v250, v577);
            uint64_t v288 = v525;
            uint64_t v289 = v522;
            uint64_t v290 = v529;
            (*(void (**)(char *, uint64_t, uint64_t))(v525 + 16))(v522, v589 + *(int *)(v568 + 48), v529);
            uint64_t v291 = v531;
            uint64_t v292 = v532;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v531 + 48))(v289, 1, v532) == 1)
            {
              ((void (*)(char *, uint64_t))v574[1])(v287, v577);
              (*(void (**)(char *, uint64_t))(v576 + 8))(v551, v575);
              ((void (*)(char *, uint64_t))v590)(v500, v116);
              (*(void (**)(char *, uint64_t))(v288 + 8))(v289, v290);
              goto LABEL_21;
            }
            uint64_t v312 = *(uint64_t (**)(char *, char *, uint64_t))(v291 + 32);
            v579 = (char *)(v291 + 32);
            uint64_t v589 = (uint64_t)v312;
            uint64_t v313 = v514;
            uint64_t v314 = v312(v514, v289, v292);
            MEMORY[0x270FA5388](v314);
            strcpy((char *)&v494 - 64, " destinationItemID baseVersion recursive domainVersion ");
            uint64_t v315 = v575;
            uint64_t AssociatedTypeWitness = v575;
            uint64_t v593 = v573;
            uint64_t AssociatedConformanceWitness = v290;
            uint64_t v595 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
            v596 = (ValueMetadata *)__swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197E20);
            uint64_t v316 = (int *)swift_getTupleTypeMetadata();
            uint64_t v317 = v500;
            uint64_t v318 = v587;
            uint64_t v319 = &v587[v316[12]];
            uint64_t v320 = &v587[v316[16]];
            uint64_t v588 = v116;
            uint64_t v321 = v316[20];
            v578 = (uint64_t *)v316[24];
            ((void (*)(char *, char *, uint64_t))v582)(v587, v551, v315);
            uint64_t v322 = v577;
            ((void (*)(char *, char *, uint64_t))v580)(v319, v530, v577);
            ((void (*)(char *, void, uint64_t, uint64_t))v574[7])(v319, 0, 1, v322);
            uint64_t v323 = v532;
            ((void (*)(char *, char *, uint64_t))v589)(v320, v313, v532);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v531 + 56))(v320, 0, 1, v323);
            v318[v321] = 1;
            uint64_t v324 = v565;
            v325 = v515;
            uint64_t v326 = v567;
            (*(void (**)(char *, char *, uint64_t))(v565 + 16))(v515, v317, v567);
            ((void (*)(char *, uint64_t))v590)(v317, v588);
            uint64_t v327 = *(void **)&v325[*(int *)(v326 + 72)];
            uint64_t v328 = *(void (**)(char *, uint64_t))(v324 + 8);
            id v329 = v327;
            v328(v325, v326);
            *(uint64_t *)((char *)v578 + (void)v318) = (uint64_t)v327;
            uint64_t v331 = v585;
            uint64_t v330 = v586;
            uint64_t v333 = v583;
            uint64_t v332 = v584;
            uint64_t AssociatedTypeWitness = v585;
            uint64_t v593 = v583;
            uint64_t AssociatedConformanceWitness = v586;
            uint64_t v595 = v584;
            type metadata accessor for DirectionalTestingOperation();
            swift_storeEnumTagMultiPayload();
            uint64_t AssociatedTypeWitness = v331;
            uint64_t v593 = v333;
            uint64_t AssociatedConformanceWitness = v330;
            uint64_t v595 = v332;
            uint64_t v334 = type metadata accessor for TestingOperation();
            swift_storeEnumTagMultiPayload();
            return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v334 - 8) + 56))(v318, 0, 1, v334);
          case 6:
            sub_24D4A434C(v162);
            uint64_t v242 = v565;
            uint64_t v243 = v559;
            uint64_t v244 = v567;
            (*(void (**)(char *, char *, uint64_t))(v565 + 16))(v559, v168, v567);
            ((void (*)(char *, uint64_t))v590)(v168, v116);
            uint64_t v195 = v570;
            char v196 = v557;
            uint64_t v197 = v572;
            (*(void (**)(char *, char *, uint64_t))(v570 + 16))(v557, v243, v572);
            (*(void (**)(char *, uint64_t))(v242 + 8))(v243, v244);
            uint64_t v245 = v576;
            uint64_t v246 = v575;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v576 + 48))(v196, 1, v575) == 1) {
              goto LABEL_39;
            }
            unint64_t v262 = *(void (**)(char *, char *, uint64_t))(v245 + 32);
            uint64_t v263 = v539;
            v262(v539, v196, v246);
            uint64_t v202 = v587;
            v262(v587, v263, v246);
            uint64_t v206 = v585;
            uint64_t v205 = v586;
            uint64_t v204 = v583;
            uint64_t v203 = v584;
            uint64_t AssociatedTypeWitness = v585;
            uint64_t v593 = v583;
            uint64_t AssociatedConformanceWitness = v586;
            uint64_t v595 = v584;
            type metadata accessor for DirectionalTestingOperation();
            goto LABEL_46;
          case 12:
            break;
          case 23:
            sub_24D4A434C(v162);
            uint64_t v221 = v565;
            uint64_t v222 = v558;
            uint64_t v223 = v567;
            (*(void (**)(char *, char *, uint64_t))(v565 + 16))(v558, v168, v567);
            ((void (*)(char *, uint64_t))v590)(v168, v116);
            uint64_t v195 = v570;
            char v196 = v556;
            uint64_t v197 = v572;
            (*(void (**)(char *, char *, uint64_t))(v570 + 16))(v556, v222, v572);
            (*(void (**)(char *, uint64_t))(v221 + 8))(v222, v223);
            uint64_t v224 = v576;
            uint64_t v225 = v575;
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v576 + 48))(v196, 1, v575) == 1) {
              goto LABEL_39;
            }
            uint64_t v226 = *(void (**)(char *, char *, uint64_t))(v224 + 32);
            uint64_t v227 = v538;
            v226(v538, v196, v225);
            uint64_t v202 = v587;
            v226(v587, v227, v225);
            uint64_t v206 = v585;
            uint64_t v205 = v586;
            uint64_t v204 = v583;
            uint64_t v203 = v584;
            uint64_t AssociatedTypeWitness = v585;
            uint64_t v593 = v583;
            uint64_t AssociatedConformanceWitness = v586;
            uint64_t v595 = v584;
            type metadata accessor for DirectionalTestingOperation();
            goto LABEL_46;
          default:
            goto LABEL_103;
        }
      }
LABEL_20:
      sub_24D4A434C(v162);
      ((void (*)(char *, uint64_t))v590)(v168, v116);
LABEL_21:
      uint64_t AssociatedTypeWitness = v585;
      uint64_t v593 = v583;
      uint64_t AssociatedConformanceWitness = v586;
      uint64_t v595 = v584;
      uint64_t v186 = type metadata accessor for TestingOperation();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v186 - 8) + 56))(v587, 1, 1, v186);
    }
  }
  return result;
}

uint64_t sub_24D48A014(unsigned char *a1, void (*a2)(char *, char *, uint64_t))
{
  unsigned int v114 = a2;
  uint64_t v111 = a1;
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = sub_24DCC8288();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v95 = &v89[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v97 = sub_24DCC82A8();
  uint64_t v96 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v94 = &v89[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = v3[11];
  uint64_t v9 = (ValueMetadata *)v3[12];
  uint64_t v10 = (ValueMetadata *)v3[13];
  uint64_t v117 = v3[10];
  uint64_t v7 = v117;
  uint64_t v118 = v8;
  uint64_t v119 = v9;
  uint64_t v120 = v10;
  uint64_t v11 = type metadata accessor for TestingOperation();
  uint64_t v12 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v93 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v101 = &v89[-v14];
  uint64_t v104 = v12;
  uint64_t v103 = *(void *)(v12 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v92 = &v89[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v99 = &v89[-v18];
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v100 = &v89[-v20];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v110 = &v89[-v22];
  uint64_t v112 = v11;
  uint64_t v107 = *(void *)(v11 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v91 = &v89[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v23);
  uint64_t v102 = &v89[-v25];
  uint64_t v108 = v9;
  uint64_t v109 = v7;
  uint64_t v117 = v7;
  uint64_t v118 = v8;
  uint64_t v105 = v10;
  uint64_t v106 = v8;
  uint64_t v119 = v9;
  uint64_t v120 = v10;
  uint64_t v26 = type metadata accessor for ItemReconciliation();
  uint64_t v27 = sub_24DCCA3F8();
  uint64_t v115 = *(char **)(v27 - 8);
  uint64_t v116 = (void (*)(void, void, void))v27;
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v30 = (void (*)(char *, char *, uint64_t))&v89[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = &v89[-v32];
  uint64_t v34 = *(void *)(v26 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v31);
  uint64_t v37 = &v89[-((v36 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v35);
  uint64_t v39 = &v89[-v38];
  uint64_t v113 = v2 + 2;
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_31;
  }
  char v41 = (*(uint64_t (**)(uint64_t))(*(void *)result + 152))(result);
  uint64_t result = swift_release();
  if ((v41 & 0x80) == 0) {
    return result;
  }
  uint64_t v42 = v115;
  uint64_t v43 = v116;
  (*((void (**)(unsigned char *, void, void))v115 + 2))(v33, v114, v116);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v34 + 48))(v33, 1, v26) == 1)
  {
    (*((void (**)(unsigned char *, void (*)(void, void, void)))v42 + 1))(v33, v43);
    uint64_t v44 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 16);
    goto LABEL_6;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 32))(v39, v33, v26);
  uint64_t v48 = type metadata accessor for ItemReconciliationHalf();
  if (v39[*(int *)(v48 + 64) + 16] == 2) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v34 + 8))(v39, v26);
  }
  uint64_t v49 = v48;
  uint64_t v50 = &v39[*(int *)(v26 + 52)];
  uint64_t v51 = type metadata accessor for ItemReconciliationHalf();
  if (v50[*(int *)(v51 + 64) + 16] == 2) {
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v34 + 8))(v39, v26);
  }
  uint64_t v55 = v51;
  int v90 = v39[*(int *)(v49 + 52)];
  uint64_t v44 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v34 + 16);
  v44(v37, v39, v26);
  if (v90 == 1)
  {
    uint64_t v56 = *(void (**)(unsigned char *, uint64_t))(v34 + 8);
    v56(v37, v26);
    return ((uint64_t (*)(unsigned char *, uint64_t))v56)(v39, v26);
  }
  int v90 = v37[*(int *)(v26 + 52) + *(int *)(v55 + 52)];
  uint64_t v62 = v37;
  uint64_t v63 = *(void (**)(unsigned char *, uint64_t))(v34 + 8);
  v63(v62, v26);
  uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v63)(v39, v26);
  if (v90 != 1)
  {
LABEL_6:
    uint64_t v45 = v121;
    v44(v30, v111, v26);
    (*(void (**)(void (*)(char *, char *, uint64_t), void, uint64_t, uint64_t))(v34 + 56))(v30, 0, 1, v26);
    uint64_t result = swift_weakLoadStrong();
    uint64_t v46 = v112;
    if (result)
    {
      uint64_t v47 = v110;
      sub_24D485664(v30, result, v110);
      if (v45)
      {
        (*((void (**)(void (*)(char *, char *, uint64_t), void (*)(void, void, void)))v115
         + 1))(v30, v116);
        return swift_release();
      }
      (*((void (**)(void (*)(char *, char *, uint64_t), void (*)(void, void, void)))v115
       + 1))(v30, v116);
      swift_release();
      uint64_t v52 = v107;
      uint64_t v53 = v46;
      uint64_t v54 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v107 + 48);
      if (v54(v47, 1, v53) == 1) {
        return (*(uint64_t (**)(char *, uint64_t))(v103 + 8))(v47, v104);
      }
      uint64_t v57 = *(void (**)(void, void, void))(v52 + 32);
      uint64_t v58 = v102;
      uint64_t v121 = v52 + 32;
      uint64_t v116 = v57;
      v57(v102, v47, v53);
      uint64_t v59 = v100;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v52 + 16))(v100, v58, v53);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v52 + 56))(v59, 0, 1, v53);
      uint64_t result = swift_weakLoadStrong();
      if (result)
      {
        uint64_t v60 = v99;
        sub_24D485664(v114, result, v99);
        uint64_t v61 = v101;
        swift_release();
        uint64_t v64 = &v61[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v65 = v59;
        uint64_t v66 = v104;
        uint64_t v67 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v103 + 16);
        v67(v61, v65, v104);
        uint64_t v115 = v64;
        uint64_t v68 = v64;
        uint64_t v69 = v112;
        uint64_t v70 = v66;
        uint64_t v71 = v67;
        v67(v68, v60, v70);
        if (v54(v61, 1, v69) == 1)
        {
          uint64_t v72 = v104;
          uint64_t v73 = *(void (**)(char *, uint64_t))(v103 + 8);
          v73(v60, v104);
          v73(v100, v72);
          uint64_t v74 = v69;
          if (v54(v115, 1, v69) == 1)
          {
            v73(v101, v72);
            return (*(uint64_t (**)(unsigned char *, uint64_t))(v107 + 8))(v102, v69);
          }
        }
        else
        {
          uint64_t v75 = (uint64_t)v92;
          v71(v92, v101, v104);
          uint64_t v76 = v115;
          uint64_t v74 = v69;
          if (v54(v115, 1, v69) != 1)
          {
            uint64_t v84 = (uint64_t)v91;
            v116(v91, v76, v69);
            char v85 = sub_24DA08A5C(v75, v84, v109, v106, v108, v105);
            uint64_t v86 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
            v86(v84, v69);
            uint64_t v87 = v104;
            uint64_t v88 = *(void (**)(char *, uint64_t))(v103 + 8);
            v88(v99, v104);
            v88(v100, v87);
            v86(v75, v69);
            v88(v101, v87);
            if (v85) {
              return ((uint64_t (*)(unsigned char *, uint64_t))v86)(v102, v69);
            }
            goto LABEL_26;
          }
          uint64_t v77 = v104;
          uint64_t v78 = *(void (**)(char *, uint64_t))(v103 + 8);
          v78(v99, v104);
          v78(v100, v77);
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v75, v69);
        }
        (*(void (**)(char *, uint64_t))(v93 + 8))(v101, TupleTypeMetadata2);
LABEL_26:
        uint64_t result = swift_weakLoadStrong();
        if (result)
        {
          uint64_t v79 = result;
          sub_24DCC81E8();
          sub_24D5F77E0(MEMORY[0x263F8EE78]);
          sub_24D4A4604();
          uint64_t v80 = v94;
          uint64_t v81 = v97;
          sub_24DCC8808();
          uint64_t v82 = (void *)sub_24DCC8128();
          (*(void (**)(unsigned char *, uint64_t))(v96 + 8))(v80, v81);
          uint64_t v83 = v102;
          (*(void (**)(unsigned char *, void *))(*(void *)v79 + 488))(v102, v82);
          swift_release();

          return (*(uint64_t (**)(unsigned char *, uint64_t))(v107 + 8))(v83, v74);
        }
        goto LABEL_33;
      }
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  return result;
}

BOOL sub_24D48AC94(char *a1, uint64_t a2)
{
  uint64_t v191 = a1;
  uint64_t v3 = *(void *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v180 = *(void *)(v6 - 8);
  uint64_t v181 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v179 = (char *)&v152 - v8;
  uint64_t v186 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v168 = (char *)&v152 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v174 = (char *)&v152 - v11;
  uint64_t v12 = *(void *)(a2 + 32);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  uint64_t v195 = v14;
  uint64_t v196 = AssociatedTypeWitness;
  uint64_t v189 = AssociatedTypeWitness;
  uint64_t v184 = v16;
  uint64_t v185 = AssociatedConformanceWitness;
  uint64_t v197 = AssociatedConformanceWitness;
  uint64_t v198 = v16;
  uint64_t v17 = type metadata accessor for ReconciliationID();
  uint64_t v18 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v163 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v164 = (char *)&v152 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v170 = (char *)&v152 - v22;
  uint64_t v182 = v18;
  uint64_t v172 = *(void *)(v18 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v161 = (char *)&v152 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v162 = (char *)&v152 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v165 = (char *)&v152 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  unint64_t v160 = (char *)&v152 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v166 = (char *)&v152 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v169 = (char *)&v152 - v33;
  uint64_t v175 = v13;
  uint64_t v195 = v13;
  uint64_t v196 = v4;
  uint64_t v177 = v4;
  uint64_t v176 = v12;
  uint64_t v197 = v12;
  uint64_t v198 = v3;
  uint64_t v178 = v3;
  uint64_t v194 = type metadata accessor for ReconciliationMutation();
  uint64_t v188 = *(void *)(v194 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v194);
  uint64_t v171 = (char *)&v152 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v183 = (char *)&v152 - v37;
  uint64_t v192 = v17;
  uint64_t v193 = *(void *)(v17 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v40 = (char *)&v152 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  uint64_t v42 = (char *)&v152 - v41;
  uint64_t v43 = sub_24DCCA3F8();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v47 = (char *)&v152 - v46;
  uint64_t v48 = MEMORY[0x270FA5388](v45);
  uint64_t v50 = (char *)&v152 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v52 = (char *)&v152 - v51;
  uint64_t v53 = v187 + *(int *)(a2 + 56);
  uint64_t v55 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v47, v53, v43);
  uint64_t v56 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
  uint64_t v190 = v14;
  int v57 = v56(v47, 1, v14);
  uint64_t v167 = v42;
  if (v57 == 1)
  {
    uint64_t v187 = (uint64_t)v40;
    (*(void (**)(char *, uint64_t))(v44 + 8))(v47, v43);
    uint64_t v58 = v191;
    uint64_t v59 = v193;
    goto LABEL_12;
  }
  uint64_t v157 = v53;
  uint64_t v60 = v190;
  (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v47, v190);
  sub_24D4E0014(v194, (uint64_t)v42);
  uint64_t v158 = v55;
  uint64_t v159 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  v159(v40, v52, v60);
  uint64_t v61 = v192;
  swift_storeEnumTagMultiPayload();
  LODWORD(v187) = sub_24D3EC388((uint64_t)v42, (uint64_t)v40, v60, v189);
  uint64_t v62 = v193 + 8;
  uint64_t v63 = *(void (**)(char *, uint64_t))(v193 + 8);
  v63(v40, v61);
  v63(v42, v61);
  uint64_t v64 = v188;
  uint64_t v65 = v183;
  (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v183, v191, v194);
  uint64_t v66 = v60;
  uint64_t v67 = v159;
  v159(v50, v52, v66);
  if ((v187 & 1) == 0)
  {
    uint64_t v153 = (void (*)(uint64_t, uint64_t))v63;
    uint64_t v154 = v62;
    unint64_t v156 = v52;
    uint64_t v187 = (uint64_t)v40;
    uint64_t v70 = (uint64_t)v169;
    sub_24D4E07F0(v194, (uint64_t)v169);
    uint64_t v71 = v166;
    v67(v166, v50, v190);
    uint64_t v72 = v192;
    swift_storeEnumTagMultiPayload();
    uint64_t v73 = v193;
    (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v71, 0, 1, v72);
    uint64_t v74 = v170;
    uint64_t v75 = &v170[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v76 = v172;
    uint64_t v159 = (void (*)(char *, char *, uint64_t))v50;
    uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v172 + 16);
    uint64_t v78 = v182;
    v77(v170, v70, v182);
    uint64_t v155 = v75;
    v77(v75, (uint64_t)v71, v78);
    uint64_t v79 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v73 + 48);
    int v80 = v79(v74, 1, v72);
    uint64_t v81 = v183;
    if (v80 == 1)
    {
      uint64_t v82 = *(void (**)(char *, uint64_t))(v76 + 8);
      uint64_t v83 = v182;
      v82(v71, v182);
      v82(v169, v83);
      uint64_t v84 = *(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v158 + 8);
      uint64_t v85 = v190;
      v84(v159, v190);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v81, v194);
      v84((void (*)(char *, char *, uint64_t))v156, v85);
      if (v79(v155, 1, v192) == 1)
      {
        v82(v170, v182);
        return 1;
      }
    }
    else
    {
      uint64_t v86 = (uint64_t)v160;
      v77(v160, (uint64_t)v74, v182);
      uint64_t v87 = v155;
      uint64_t v88 = v192;
      if (v79(v155, 1, v192) != 1)
      {
        uint64_t v93 = (uint64_t)v167;
        (*(void (**)(char *, char *, uint64_t))(v193 + 32))(v167, v87, v88);
        uint64_t v94 = v190;
        LODWORD(v155) = sub_24D3EC388(v86, v93, v190, v189);
        uint64_t v95 = v153;
        v153(v93, v88);
        uint64_t v96 = *(void (**)(char *, uint64_t))(v172 + 8);
        uint64_t v97 = v182;
        v96(v166, v182);
        v96(v169, v97);
        uint64_t v98 = *(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v158 + 8);
        v98(v159, v94);
        (*(void (**)(char *, uint64_t))(v188 + 8))(v183, v194);
        uint64_t v99 = v94;
        uint64_t v59 = v193;
        v98((void (*)(char *, char *, uint64_t))v156, v99);
        v95(v86, v88);
        v96(v170, v97);
        uint64_t v58 = v191;
        uint64_t v53 = v157;
        if (v155) {
          return 1;
        }
LABEL_12:
        uint64_t v195 = v175;
        uint64_t v196 = v177;
        uint64_t v197 = v176;
        uint64_t v198 = v178;
        uint64_t v100 = type metadata accessor for ItemReconciliation();
        uint64_t v102 = v179;
        uint64_t v101 = v180;
        uint64_t v103 = v181;
        (*(void (**)(char *, uint64_t, uint64_t))(v180 + 16))(v179, v53 + *(int *)(v100 + 52), v181);
        uint64_t v104 = v186;
        uint64_t v105 = v189;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v102, 1, v189) == 1)
        {
          (*(void (**)(char *, uint64_t))(v101 + 8))(v102, v103);
          return 0;
        }
        uint64_t v107 = v174;
        (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v174, v102, v105);
        uint64_t v108 = (uint64_t)v167;
        sub_24D4E0014(v194, (uint64_t)v167);
        uint64_t v109 = *(void (**)(uint64_t, char *, uint64_t))(v104 + 16);
        uint64_t v110 = v187;
        v109(v187, v107, v105);
        uint64_t v111 = v192;
        swift_storeEnumTagMultiPayload();
        LODWORD(v191) = sub_24D3EC388(v108, v110, v190, v105);
        uint64_t v113 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
        uint64_t v112 = v59 + 8;
        v113(v110, v111);
        uint64_t v114 = v111;
        uint64_t v115 = (char *)v113;
        v113(v108, v114);
        uint64_t v116 = v105;
        uint64_t v117 = v194;
        uint64_t v118 = v188;
        uint64_t v119 = v171;
        (*(void (**)(char *, char *, uint64_t))(v188 + 16))(v171, v58, v194);
        uint64_t v120 = v168;
        v109((uint64_t)v168, v107, v116);
        if (v191)
        {
          uint64_t v121 = *(void (**)(char *, uint64_t))(v186 + 8);
          v121(v120, v116);
          (*(void (**)(char *, uint64_t))(v118 + 8))(v119, v117);
          v121(v174, v116);
          return 1;
        }
        uint64_t v183 = v115;
        uint64_t v187 = v112;
        uint64_t v122 = (uint64_t)v165;
        uint64_t v123 = v120;
        sub_24D4E07F0(v117, (uint64_t)v165);
        uint64_t v124 = v162;
        v109((uint64_t)v162, v123, v116);
        uint64_t v125 = v124;
        uint64_t v126 = v192;
        swift_storeEnumTagMultiPayload();
        uint64_t v127 = v193;
        (*(void (**)(char *, void, uint64_t, uint64_t))(v193 + 56))(v124, 0, 1, v126);
        unint64_t v128 = v164;
        uint64_t v129 = &v164[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v130 = v172;
        id v131 = *(void (**)(char *, uint64_t, uint64_t))(v172 + 16);
        uint64_t v132 = v182;
        v131(v164, v122, v182);
        uint64_t v191 = v129;
        os_log_type_t v133 = v129;
        uint64_t v134 = v132;
        v131(v133, (uint64_t)v125, v132);
        uint64_t v135 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v127 + 48);
        unsigned int v136 = v135(v128, 1, v126);
        uint64_t v137 = v171;
        if (v136 == 1)
        {
          uint64_t v138 = *(void (**)(char *, uint64_t))(v130 + 8);
          v138(v125, v132);
          v138(v165, v132);
          uint64_t v139 = *(void (**)(char *, uint64_t))(v186 + 8);
          uint64_t v140 = v135;
          uint64_t v141 = v189;
          v139(v168, v189);
          (*(void (**)(char *, uint64_t))(v188 + 8))(v137, v194);
          v139(v174, v141);
          if (v140(v191, 1, v192) == 1)
          {
            v138(v164, v132);
            return 1;
          }
        }
        else
        {
          uint64_t v142 = v189;
          uint64_t v143 = v193;
          v131(v161, (uint64_t)v128, v132);
          unint64_t v144 = v191;
          if (v135(v191, 1, v192) != 1)
          {
            uint64_t v147 = (uint64_t)v167;
            uint64_t v148 = v192;
            (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v167, v144, v192);
            uint64_t v149 = (uint64_t)v161;
            LODWORD(v193) = sub_24D3EC388((uint64_t)v161, v147, v190, v142);
            ((void (*)(uint64_t, uint64_t))v183)(v147, v148);
            os_log_type_t v150 = *(void (**)(char *, uint64_t))(v172 + 8);
            v150(v125, v134);
            v150(v165, v134);
            BOOL v151 = *(void (**)(char *, uint64_t))(v186 + 8);
            v151(v168, v142);
            (*(void (**)(char *, uint64_t))(v188 + 8))(v171, v194);
            v151(v174, v142);
            ((void (*)(uint64_t, uint64_t))v183)(v149, v148);
            v150(v128, v134);
            return (v193 & 1) != 0;
          }
          id v145 = *(void (**)(char *, uint64_t))(v172 + 8);
          v145(v125, v134);
          v145(v165, v134);
          int v146 = *(void (**)(char *, uint64_t))(v186 + 8);
          v146(v168, v142);
          (*(void (**)(char *, uint64_t))(v188 + 8))(v171, v194);
          v146(v174, v142);
          ((void (*)(char *, uint64_t))v183)(v161, v192);
        }
        (*(void (**)(char *, uint64_t))(v163 + 8))(v164, TupleTypeMetadata2);
        return 0;
      }
      uint64_t v89 = *(void (**)(char *, uint64_t))(v172 + 8);
      uint64_t v90 = v182;
      v89(v166, v182);
      v89(v169, v90);
      uint64_t v91 = *(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v158 + 8);
      uint64_t v92 = v190;
      v91(v159, v190);
      (*(void (**)(char *, uint64_t))(v188 + 8))(v183, v194);
      v91((void (*)(char *, char *, uint64_t))v156, v92);
      v153(v86, v88);
    }
    (*(void (**)(char *, uint64_t))(v163 + 8))(v170, TupleTypeMetadata2);
    uint64_t v58 = v191;
    uint64_t v59 = v193;
    uint64_t v53 = v157;
    goto LABEL_12;
  }
  uint64_t v68 = *(void (**)(char *, uint64_t))(v158 + 8);
  uint64_t v69 = v190;
  v68(v50, v190);
  (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v194);
  v68(v52, v69);
  return 1;
}

uint64_t sub_24D48BFFC@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10)
{
  *(void *)a9 = a1;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  uint64_t v14 = (int *)type metadata accessor for ReconciliationTable.CachedEntry();
  uint64_t v15 = a9 + v14[13];
  uint64_t v16 = type metadata accessor for ItemReconciliation();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32);
  v17(v15, a3, v16);
  v17(a9 + v14[14], a4, v16);
  uint64_t v18 = (void *)(a9 + v14[15]);
  void *v18 = a5;
  v18[1] = a6;
  uint64_t v19 = a9 + v14[16];
  *(void *)uint64_t v19 = a7;
  *(unsigned char *)(v19 + 8) = a8;
  uint64_t v20 = a9 + v14[17];
  uint64_t v21 = sub_24DCCA3F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a10, v21);
}

uint64_t sub_24D48C170(uint64_t *a1)
{
  uint64_t v178 = a1;
  uint64_t v2 = v1 + 16;
  uint64_t v3 = *(char **)(*(void *)v1 + 80);
  uint64_t v4 = *(char **)(*(void *)v1 + 88);
  uint64_t v5 = *(void *)(*(void *)v1 + 96);
  uint64_t v6 = *(void *)(*(void *)v1 + 104);
  uint64_t v182 = v3;
  uint64_t v183 = v4;
  uint64_t v184 = v5;
  uint64_t v185 = v6;
  uint64_t v7 = type metadata accessor for ReconciliationTable.CachedEntry();
  uint64_t v155 = sub_24DCCA3F8();
  uint64_t v154 = *(void *)(v155 - 8);
  MEMORY[0x270FA5388](v155);
  uint64_t v153 = (char *)v146 - v8;
  uint64_t v166 = sub_24DCC9078();
  uint64_t v165 = *(void *)(v166 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v166);
  uint64_t v161 = (uint64_t)v146 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v159 = (char *)v146 - v12;
  uint64_t v162 = *(void *)(v7 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v158 = (char *)v146 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v167 = (uint64_t)v146 - v15;
  uint64_t v168 = v3;
  uint64_t v182 = v3;
  uint64_t v183 = v4;
  uint64_t v169 = v4;
  uint64_t v172 = v5;
  uint64_t v184 = v5;
  uint64_t v185 = v6;
  uint64_t v171 = v6;
  uint64_t v16 = type metadata accessor for ItemReconciliation();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v157 = ((char *)v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v160 = (void (*)(char *, uint64_t, uint64_t))((char *)v146 - v21);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  unint64_t v170 = (unint64_t)v146 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v164 = (char *)v146 - v24;
  uint64_t v179 = v25;
  uint64_t v26 = sub_24DCCA3F8();
  TupleTypeMetadata2 = (int *)swift_getTupleTypeMetadata2();
  uint64_t v163 = *((void *)TupleTypeMetadata2 - 1);
  uint64_t v27 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v29 = (char *)v146 - v28;
  uint64_t v177 = *(void (**)(char *, uint64_t))(v26 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  unint64_t v156 = (char *)v146 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v175 = (char *)v146 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v36 = (char *)v146 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v38 = (char *)v146 - v37;
  uint64_t v174 = v2;
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_40;
  }
  char v40 = (*(uint64_t (**)(uint64_t))(*(void *)result + 152))(result);
  swift_release();
  if ((v40 & 8) != 0
    || (v173 = v17, uint64_t v41 = v178, v42 = v179, v43 = (char *)v178 + *(int *)(v7 + 56), !sub_24DB8A0A8(v179)))
  {
    char v57 = 0;
    return v57 & 1;
  }
  uint64_t v147 = v7;
  uint64_t v44 = (char *)v41 + *(int *)(v7 + 68);
  uint64_t v45 = (void (*)(char *, char *, uint64_t))*((void *)v177 + 2);
  v45(v38, v44, v26);
  uint64_t v46 = v29;
  uint64_t v47 = v173;
  uint64_t v48 = *(void (**)(unint64_t, char *, uint64_t))(v173 + 16);
  uint64_t v148 = v43;
  uint64_t v149 = v173 + 16;
  BOOL v151 = v48;
  v48((unint64_t)v36, v43, v42);
  uint64_t v49 = *(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56);
  v146[1] = v47 + 56;
  v146[0] = v49;
  v49(v36, 0, 1, v42);
  uint64_t v50 = (uint64_t)&v46[TupleTypeMetadata2[12]];
  v45(v46, v38, v26);
  uint64_t v152 = (char *)v50;
  v45((char *)v50, v36, v26);
  uint64_t v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  int v52 = v51(v46, 1, v42);
  os_log_type_t v150 = v46;
  if (v52 == 1)
  {
    uint64_t v53 = (void (*)(char *, uint64_t))*((void *)v177 + 1);
    v53(v36, v26);
    v53(v38, v26);
    int v54 = v51(v152, 1, v42);
    uint64_t v55 = v186;
    uint64_t v56 = v42;
    if (v54 == 1)
    {
      v53(v150, v26);
LABEL_16:
      id v73 = (id)fpfs_current_or_default_log();
      uint64_t v74 = v161;
      sub_24DCC9088();
      uint64_t v75 = sub_24DCC9068();
      os_log_type_t v76 = sub_24DCCA118();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v77 = 0;
        _os_log_impl(&dword_24D3D0000, v75, v76, "item is still runnable after reconciliation, breaking loop", v77, 2u);
        MEMORY[0x25332B030](v77, -1, -1);
      }

      (*(void (**)(uint64_t, uint64_t))(v165 + 8))(v74, v166);
      char v57 = 0;
      return v57 & 1;
    }
    goto LABEL_11;
  }
  v45(v175, v46, v26);
  int v58 = v51(v152, 1, v42);
  uint64_t v59 = (void (**)(uint64_t, uint64_t))(v173 + 8);
  uint64_t v56 = v42;
  if (v58 == 1)
  {
    uint64_t v60 = (void (*)(char *, uint64_t))*((void *)v177 + 1);
    v60(v36, v26);
    v60(v38, v26);
    (*v59)((uint64_t)v175, v42);
    uint64_t v55 = v186;
LABEL_11:
    (*(void (**)(char *, int *))(v163 + 8))(v150, TupleTypeMetadata2);
    uint64_t v61 = v173;
    uint64_t v62 = v55;
    goto LABEL_12;
  }
  uint64_t v67 = (uint64_t)v175;
  uint64_t v68 = v173;
  uint64_t v69 = v173 + 32;
  unint64_t v70 = (unint64_t)v164;
  (*(void (**)(char *, char *, uint64_t))(v173 + 32))(v164, v152, v56);
  LODWORD(TupleTypeMetadata2) = sub_24DB91A70(v67, v70, v168, v169, v172, v171);
  uint64_t v71 = *(void (**)(unint64_t, uint64_t))(v69 - 24);
  v71(v70, v56);
  uint64_t v72 = (void (*)(char *, uint64_t))*((void *)v177 + 1);
  v72(v36, v26);
  v72(v38, v26);
  v71(v67, v179);
  v72(v150, v26);
  uint64_t v56 = v179;
  uint64_t v62 = v186;
  uint64_t v61 = v68;
  if (TupleTypeMetadata2) {
    goto LABEL_16;
  }
LABEL_12:
  unint64_t v63 = v170;
  v151(v170, v148, v56);
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v64 = sub_24DB8A1C8(result, v56);
  if (v62)
  {
    (*(void (**)(unint64_t, uint64_t))(v61 + 8))(v63, v56);
    swift_release();
    return v57 & 1;
  }
  unint64_t v78 = v64;
  uint64_t v79 = v65;
  unint64_t v80 = v66;
  uint64_t v82 = *(void (**)(char *, uint64_t))(v61 + 8);
  uint64_t v81 = v61 + 8;
  uint64_t v177 = v82;
  v82((char *)v63, v56);
  swift_release();
  if (v78 >> 62 == 2 && v78 <= 0x8000000000000001)
  {
    char v57 = v79 | v80;
    if (!(v79 | v80)) {
      return v57 & 1;
    }
  }
  uint64_t v173 = v81;
  unint64_t v170 = v78;
  uint64_t v175 = (char *)v79;
  TupleTypeMetadata2 = (int *)v80;
  uint64_t v83 = v178;
  uint64_t v186 = *v178;
  LODWORD(v163) = *((unsigned __int8 *)v178 + 8);
  uint64_t v84 = v147;
  uint64_t v85 = (uint64_t)v164;
  uint64_t v86 = v151;
  v151((unint64_t)v164, (char *)v178 + *(int *)(v147 + 52), v56);
  uint64_t v87 = v148;
  v86((unint64_t)v160, v148, v56);
  uint64_t v88 = *(int *)(v84 + 64);
  uint64_t v89 = (uint64_t *)((char *)v83 + *(int *)(v84 + 60));
  uint64_t v91 = *v89;
  uint64_t v90 = v89[1];
  uint64_t v152 = (char *)v91;
  uint64_t v161 = v90;
  uint64_t v92 = (char *)v83 + v88;
  uint64_t v93 = *(uint64_t *)((char *)v83 + v88);
  LODWORD(v178) = v92[8];
  uint64_t v94 = (uint64_t)v156;
  v86((unint64_t)v156, v87, v56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v146[0])(v94, 0, 1, v56);
  uint64_t v95 = v167;
  sub_24D48BFFC(v186, v163, v85, (uint64_t)v160, (uint64_t)v152, v161, v93, (char)v178, v167, v94);
  uint64_t v96 = v84;
  id v97 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  id v98 = (id)fpfs_current_or_default_log();
  uint64_t v99 = v159;
  sub_24DCC9088();
  uint64_t v100 = v162;
  uint64_t v101 = *(void (**)(char *, uint64_t, uint64_t))(v162 + 16);
  uint64_t v102 = v158;
  uint64_t v161 = v162 + 16;
  unint64_t v160 = v101;
  v101(v158, v95, v96);
  uint64_t v103 = (uint64_t *)v97;
  uint64_t v104 = sub_24DCC9068();
  os_log_type_t v105 = sub_24DCCA108();
  BOOL v106 = os_log_type_enabled(v104, v105);
  uint64_t v178 = v103;
  if (v106)
  {
    uint64_t v107 = swift_slowAlloc();
    uint64_t v108 = (void *)swift_slowAlloc();
    unint64_t v156 = (char *)swift_slowAlloc();
    uint64_t v182 = v156;
    *(_DWORD *)uint64_t v107 = 138412546;
    id v109 = objc_msgSend(v103, sel_enter);
    uint64_t v181 = (uint64_t)v109;
    uint64_t v186 = 0;
    sub_24DCCA428();
    *uint64_t v108 = v109;

    *(_WORD *)(v107 + 12) = 2082;
    uint64_t v152 = (char *)(v107 + 14);
    uint64_t v110 = v158;
    uint64_t v111 = v164;
    uint64_t v112 = v179;
    v151((unint64_t)v164, &v158[*(int *)(v96 + 56)], v179);
    uint64_t v163 = *(void *)(v162 + 8);
    ((void (*)(char *, uint64_t))v163)(v110, v96);
    uint64_t v113 = sub_24DB8E8F4(v112);
    unint64_t v115 = v114;
    v177(v111, v112);
    uint64_t v181 = sub_24D418FB4(v113, v115, (uint64_t *)&v182);
    uint64_t v62 = v186;
    sub_24DCCA428();
    uint64_t v116 = v147;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v104, v105, "%@  ⚙️ reconciling: %{public}s", (uint8_t *)v107, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v108, -1, -1);
    uint64_t v117 = v156;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v117, -1, -1);
    MEMORY[0x25332B030](v107, -1, -1);

    (*(void (**)(char *, uint64_t))(v165 + 8))(v159, v166);
    uint64_t v118 = v157;
    uint64_t v119 = v112;
  }
  else
  {
    uint64_t v163 = *(void *)(v100 + 8);
    ((void (*)(char *, uint64_t))v163)(v102, v96);

    (*(void (**)(char *, uint64_t))(v165 + 8))(v99, v166);
    uint64_t v116 = v96;
    uint64_t v118 = v157;
    uint64_t v119 = v179;
  }
  uint64_t v120 = v168;
  uint64_t v121 = v169;
  uint64_t v182 = v168;
  uint64_t v183 = v169;
  uint64_t v184 = v172;
  uint64_t v185 = v171;
  type metadata accessor for ConcreteJobResult();
  uint64_t v122 = (void *)sub_24D907530();
  v151((unint64_t)v118, (char *)(v167 + *(int *)(v116 + 56)), v119);
  uint64_t result = swift_weakLoadStrong();
  uint64_t v123 = (uint64_t)v175;
  uint64_t v124 = (uint64_t)TupleTypeMetadata2;
  if (result)
  {
    uint64_t v125 = (void *)result;
    uint64_t v126 = (void (*)(void, void, void))v170;
    sub_24D4A4340(v170, (uint64_t)v175, TupleTypeMetadata2);
    sub_24D73CC5C(v118, v126, v123, v124, v125, (uint64_t)v122);
    if (v62)
    {
      swift_release();
      sub_24D4A434C((uint64_t)v126);
      swift_release();
      v177((char *)v118, v179);
      uint64_t v127 = v178;
      sub_24D48D674(v178);
      sub_24D4A434C((uint64_t)v126);

      ((void (*)(uint64_t, uint64_t))v163)(v167, v147);
      return v57 & 1;
    }
    swift_release();
    sub_24D4A434C((uint64_t)v126);
    v177((char *)v118, v179);
    swift_beginAccess();
    uint64_t v128 = v147;
    uint64_t v180 = v122[4];
    uint64_t v129 = v153;
    v160(v153, v167, v147);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v162 + 56))(v129, 0, 1, v128);
    swift_bridgeObjectRetain();
    uint64_t v182 = v120;
    uint64_t v183 = v121;
    uint64_t v130 = v129;
    uint64_t v184 = v172;
    uint64_t v185 = v171;
    type metadata accessor for ReconciliationMutation();
    uint64_t v131 = sub_24DCC9D48();
    uint64_t WitnessTable = swift_getWitnessTable();
    sub_24D4772A4(&v180, v130, v131, WitnessTable);
    uint64_t v133 = (uint64_t)v120;
    (*(void (**)(char *, uint64_t))(v154 + 8))(v130, v155);
    swift_bridgeObjectRelease();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      swift_beginAccess();
      uint64_t v134 = v122[3];
      swift_bridgeObjectRetain();
      uint64_t v135 = sub_24DCC9C98();
      sub_24D6E6464(v134, v135);
      unsigned int v136 = v178;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      uint64_t v137 = v122[5];
      swift_bridgeObjectRetain();
      uint64_t v182 = (char *)v133;
      uint64_t v183 = v169;
      uint64_t v184 = v172;
      uint64_t v185 = v171;
      uint64_t v138 = type metadata accessor for FSOrFPJob();
      if (!MEMORY[0x253327DC0](v137, v138)) {
        goto LABEL_34;
      }
      uint64_t v139 = 4;
      while (1)
      {
        uint64_t v140 = v139 - 4;
        char v141 = sub_24DCC9CB8();
        sub_24DCC9C68();
        if (v141)
        {
          uint64_t v142 = *(void *)(v137 + 8 * v139);
          swift_retain();
          uint64_t v143 = v139 - 3;
          if (__OFADD__(v140, 1)) {
            goto LABEL_37;
          }
        }
        else
        {
          uint64_t v142 = sub_24DCCA778();
          swift_retain();
          swift_unknownObjectRelease();
          uint64_t v143 = v139 - 3;
          if (__OFADD__(v140, 1))
          {
LABEL_37:
            __break(1u);
LABEL_34:
            swift_release();
            uint64_t v145 = v167;
            swift_bridgeObjectRelease();
            sub_24D48D674(v136);
            sub_24D4A434C(v170);

            ((void (*)(uint64_t, uint64_t))v163)(v145, v147);
            char v57 = 1;
            return v57 & 1;
          }
        }
        unint64_t v144 = (void *)MEMORY[0x253329610]();
        sub_24D48D878(v142);
        swift_release();
        ++v139;
        if (v143 == MEMORY[0x253327DC0](v137, v138)) {
          goto LABEL_34;
        }
      }
    }
    goto LABEL_42;
  }
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ReconciliationTable.CachedEntry()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D48D674(void *a1)
{
  uint64_t v2 = sub_24DCC9078();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v6 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v7 = a1;
  uint64_t v8 = sub_24DCC9068();
  os_log_type_t v9 = sub_24DCCA108();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v16[0] = v2;
    uint64_t v11 = (uint8_t *)v10;
    uint64_t v12 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 138412290;
    id v13 = [v7 leave];
    v16[1] = v13;
    sub_24DCCA428();
    *uint64_t v12 = v13;

    _os_log_impl(&dword_24D3D0000, v8, v9, "%@", v11, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v12, -1, -1);
    uint64_t v14 = v11;
    uint64_t v2 = v16[0];
    MEMORY[0x25332B030](v14, -1, -1);
  }
  else
  {

    uint64_t v8 = v7;
  }

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24D48D878(uint64_t a1)
{
  uint64_t v2 = sub_24DCC8CE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 < 0) {
    goto LABEL_7;
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  swift_retain();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v8 = v7;
  os_log_type_t v9 = *(uint64_t (**)(char *, uint64_t))(v3 + 8);
  v3 += 8;
  uint64_t result = v9(v5, v2);
  double v10 = v8 * 1000000000.0;
  if ((~COERCE__INT64(v8 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v10 < 9.22337204e18)
  {
LABEL_11:
    sub_24D912448(a1);
    swift_release();
    return swift_release();
  }
  __break(1u);
LABEL_7:
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a1 &= ~0x8000000000000000;
    uint64_t v11 = *(void (**)(uint64_t))(*(void *)result + 176);
    uint64_t v12 = swift_retain();
    v11(v12);
    swift_release();
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v14 = v13;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    double v15 = v14 * 1000000000.0;
    if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v15 > -9.22337204e18)
      {
        if (v15 < 9.22337204e18) {
          goto LABEL_11;
        }
        goto LABEL_16;
      }
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_24D48DACC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24D48DC00(char *a1, unsigned char *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v316 = a5;
  uint64_t v328 = a4;
  uint64_t v322 = a3;
  uint64_t v309 = a2;
  uint64_t v308 = a1;
  uint64_t v7 = v5[10];
  uint64_t v6 = v5[11];
  uint64_t v8 = v5[12];
  uint64_t v9 = v5[13];
  uint64_t v335 = v7;
  uint64_t v336 = v6;
  uint64_t v337 = v8;
  uint64_t v338 = v9;
  uint64_t v10 = type metadata accessor for ItemReconciliation();
  uint64_t v276 = sub_24DCCA3F8();
  uint64_t v268 = *(void *)(v276 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v276);
  uint64_t v284 = (char *)&v262 - v12;
  uint64_t v267 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v11);
  unint64_t v278 = (char *)&v262 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v281 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v305 = (char *)&v262 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v264 = v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v306 = (char *)&v262 - v17;
  uint64_t v317 = v18;
  uint64_t v271 = sub_24DCCA3F8();
  uint64_t v270 = *(void *)(v271 - 8);
  MEMORY[0x270FA5388](v271);
  v272 = (char *)&v262 - v19;
  uint64_t v330 = type metadata accessor for SnapshotItem();
  uint64_t v324 = *(void (***)(void, void, void))(v330 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v330);
  uint64_t v304 = (void (**)(uint64_t, uint64_t))((char *)&v262 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v20);
  uint64_t v321 = (char *)&v262 - v22;
  uint64_t v331 = v6;
  uint64_t v332 = v9;
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v24 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v274 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v288 = (char *)&v262 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v294 = (char *)&v262 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v334 = (char *)&v262 - v30;
  uint64_t v31 = *(void *)(v24 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v277 = (char *)&v262 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v303 = (char *)&v262 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v302 = (char *)&v262 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v273 = (char *)&v262 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v275 = (char *)&v262 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v286 = (char *)&v262 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  v296 = (char *)&v262 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v307 = (char *)&v262 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v295 = (char *)&v262 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v320 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))((char *)&v262 - v51);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v319 = (char *)&v262 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v56 = (char *)&v262 - v55;
  uint64_t v57 = *(void *)(v23 - 8);
  uint64_t v58 = MEMORY[0x270FA5388](v54);
  uint64_t v311 = (char *)&v262 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v293 = (char *)&v262 - v61;
  uint64_t v265 = v62;
  MEMORY[0x270FA5388](v60);
  uint64_t v64 = (char *)&v262 - v63;
  uint64_t v287 = v10;
  uint64_t v65 = v328 + *(int *)(v10 + 52);
  unint64_t v66 = *(void (**)(void))(v31 + 16);
  uint64_t v327 = v31 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v66)(v56, v65, v24);
  v325 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48);
  uint64_t v326 = v57 + 48;
  if (v325(v56, 1, v23) == 1)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v56, v24);
    uint64_t v67 = v317;
LABEL_14:
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v79 = swift_getAssociatedConformanceWitness();
    uint64_t v335 = v67;
    uint64_t v336 = v23;
LABEL_15:
    uint64_t v337 = AssociatedConformanceWitness;
    uint64_t v338 = v79;
    uint64_t v94 = type metadata accessor for ReconciliationID();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v308, 1, 1, v94);
    char v95 = 0;
    return v95 & 1;
  }
  uint64_t v279 = v31;
  uint64_t v328 = v24;
  uint64_t v68 = *(void (**)(char *, char *, uint64_t))(v57 + 32);
  uint64_t v283 = v57 + 32;
  uint64_t v282 = v68;
  v68(v64, v56, v23);
  uint64_t v266 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v69 = v7;
  if (!v309[v266[14]])
  {
    (*(void (**)(char *, uint64_t))(v57 + 8))(v64, v23);
    uint64_t v67 = v317;
    goto LABEL_14;
  }
  uint64_t v318 = v66;
  uint64_t v285 = v57;
  uint64_t v315 = v64;
  (*(void (**)(void))(*v316 + 248))();
  uint64_t v70 = sub_24DCCA8F8();
  swift_release();
  swift_retain();
  uint64_t v71 = v331;
  uint64_t v72 = v332;
  uint64_t v335 = v7;
  uint64_t v336 = v331;
  uint64_t v337 = v8;
  uint64_t v338 = v332;
  type metadata accessor for FSOrFPJob();
  sub_24DCCA698();
  uint64_t v73 = v339;
  uint64_t v74 = v23;
  uint64_t v310 = v69;
  uint64_t v314 = v8;
  if ((~v339 & 0xF000000000000007) != 0)
  {
    uint64_t v300 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v285 + 56);
    uint64_t v299 = (void (**)(char *, uint64_t, uint64_t))(v285 + 16);
    uint64_t v263 = (void (**)(char *, uint64_t))(v285 + 8);
    uint64_t v313 = (void (**)(char *, uint64_t))(v279 + 8);
    v298 = (void (**)(char *, uint64_t, uint64_t))(v324 + 2);
    unint64_t v262 = (void (**)(char *, uint64_t))(v274 + 8);
    uint64_t v297 = (void (**)(char *, uint64_t))(v324 + 1);
    uint64_t v301 = (void (**)(char *, uint64_t))v70;
    do
    {
      if ((v73 & 0x8000000000000000) == 0) {
        goto LABEL_22;
      }
      uint64_t v335 = v69;
      uint64_t v336 = v71;
      uint64_t v337 = v8;
      uint64_t v338 = v72;
      type metadata accessor for Propagation.CreateItem();
      uint64_t v102 = swift_dynamicCastClass();
      if (v102)
      {
        uint64_t v324 = (void (**)(void, void, void))(v73 & 0x7FFFFFFFFFFFFFFFLL);
        uint64_t v323 = (void (*)(void, void))v73;
        uint64_t v103 = *(void *)(*(void *)v102 + 656);
        uint64_t v269 = v102;
        uint64_t v104 = v102 + v103;
        swift_beginAccess();
        uint64_t v280 = swift_getAssociatedConformanceWitness();
        uint64_t v105 = type metadata accessor for ItemState();
        uint64_t v106 = *(void *)(v105 - 8);
        uint64_t v107 = *(uint64_t (**)(uint64_t, uint64_t))(v106 + 48);
        uint64_t v108 = v106 + 48;
        uint64_t v291 = v105;
        int v109 = v107(v104, 1);
        uint64_t v292 = v104;
        uint64_t v290 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v107;
        uint64_t v289 = v108;
        if (v109)
        {
          uint64_t v110 = *v300;
          uint64_t v111 = v319;
          (*v300)(v319, 1, 1, v74);
          uint64_t v112 = *v299;
          uint64_t v113 = v74;
        }
        else
        {
          uint64_t v112 = *v299;
          uint64_t v113 = v74;
          uint64_t v111 = v319;
          (*v299)(v319, v104, v74);
          uint64_t v110 = *v300;
          (*v300)(v111, 0, 1, v74);
        }
        uint64_t v125 = v334;
        uint64_t v126 = v320;
        v112((char *)v320, (uint64_t)v315, v113);
        v110((char *)v126, 0, 1, v113);
        uint64_t v127 = &v125[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v128 = v328;
        uint64_t v129 = v318;
        ((void (*)(char *, char *, uint64_t))v318)(v125, v111, v328);
        ((void (*)(char *, uint64_t (**)(uint64_t, uint64_t, uint64_t), uint64_t))v129)(v127, v126, v128);
        uint64_t v130 = (uint64_t (*)(char *, uint64_t, uint64_t))v325;
        if (v325(v125, 1, v113) == 1)
        {
          uint64_t v131 = *v313;
          swift_retain();
          v131((char *)v126, v128);
          v131(v111, v128);
          int v132 = v130(v127, 1, v113);
          uint64_t v99 = v334;
          uint64_t v100 = v321;
          uint64_t v101 = v330;
          uint64_t v74 = v113;
          if (v132 != 1) {
            goto LABEL_20;
          }
          v131(v334, v328);
          (*v298)(v321, v322, v101);
        }
        else
        {
          uint64_t v133 = v295;
          v129();
          uint64_t v74 = v113;
          if (v130(v127, 1, v113) == 1)
          {
            id v97 = *v313;
            swift_retain();
            v97((char *)v320, v128);
            v97(v319, v128);
            id v98 = v133;
            uint64_t v99 = v334;
            uint64_t v100 = v321;
            uint64_t v101 = v330;
            goto LABEL_19;
          }
          uint64_t v134 = v293;
          v282(v293, v127, v113);
          swift_retain();
          char v135 = sub_24DCC9798();
          unsigned int v136 = *v263;
          (*v263)(v134, v74);
          uint64_t v137 = *v313;
          (*v313)((char *)v320, v128);
          v137(v319, v128);
          v136(v133, v74);
          v137(v334, v128);
          uint64_t v100 = v321;
          uint64_t v101 = v330;
          (*v298)(v321, v322, v330);
          if ((v135 & 1) == 0) {
            goto LABEL_21;
          }
        }
        uint64_t v138 = v74;
        uint64_t v139 = v292;
        uint64_t v140 = v291;
        int v141 = v290(v292, 1, v291);
        uint64_t v8 = v314;
        if (v141 == 1) {
          goto LABEL_105;
        }
        uint64_t v142 = (uint64_t *)(v139 + *(int *)(v140 + 36));
        uint64_t v144 = *v142;
        unint64_t v143 = v142[1];
        uint64_t v145 = v321;
        int v146 = (uint64_t *)&v321[*(int *)(v101 + 44)];
        uint64_t v147 = *v146;
        unint64_t v148 = v146[1];
        swift_retain();
        swift_bridgeObjectRetain();
        LOBYTE(v147) = sub_24DB1CA80(v144, v143, v147, v148);
        uint64_t v149 = v323;
        sub_24D4A4444((uint64_t)v323);
        swift_release();
        swift_bridgeObjectRelease();
        (*v297)(v145, v330);
        uint64_t v69 = v310;
        uint64_t v71 = v331;
        uint64_t v72 = v332;
        uint64_t v74 = v138;
        uint64_t v73 = (uint64_t)v149;
        if (v147)
        {
          swift_release_n();
          (*v263)(v315, v74);
          uint64_t v251 = v308;
          uint64_t v252 = v317;
          (*(void (**)(char *, uint64_t, uint64_t))(v281 + 16))(v308, v269 + *(void *)(*(void *)v269 + 576), v317);
          sub_24D4A4444((uint64_t)v149);
          uint64_t v253 = swift_getAssociatedConformanceWitness();
          uint64_t v335 = v252;
          uint64_t v336 = v74;
          uint64_t v337 = v253;
          uint64_t v254 = &v312;
LABEL_97:
          uint64_t v338 = *(v254 - 32);
          uint64_t v255 = type metadata accessor for ReconciliationID();
          swift_storeEnumTagMultiPayload();
          char v95 = 1;
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v255 - 8) + 56))(v251, 0, 1, v255);
          return v95 & 1;
        }
      }
      else
      {
        uint64_t v335 = v69;
        uint64_t v336 = v71;
        uint64_t v337 = v8;
        uint64_t v338 = v72;
        type metadata accessor for Propagation.UpdateItem();
        uint64_t v114 = swift_dynamicCastClass();
        if (!v114) {
          goto LABEL_22;
        }
        uint64_t v324 = (void (**)(void, void, void))(v73 & 0x7FFFFFFFFFFFFFFFLL);
        uint64_t v115 = *(void *)(*(void *)v114 + 664);
        uint64_t v280 = v114;
        uint64_t v116 = v114 + v115;
        swift_beginAccess();
        uint64_t v269 = swift_getAssociatedConformanceWitness();
        uint64_t v117 = type metadata accessor for ItemState();
        uint64_t v118 = *(void *)(v117 - 8);
        uint64_t v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
        uint64_t v291 = v117;
        uint64_t v290 = v119;
        uint64_t v289 = v118 + 48;
        int v120 = ((uint64_t (*)(uint64_t, uint64_t))v119)(v116, 1);
        uint64_t v323 = (void (*)(void, void))v73;
        uint64_t v292 = v116;
        if (v120)
        {
          uint64_t v121 = *v300;
          uint64_t v122 = v307;
          (*v300)(v307, 1, 1, v74);
          uint64_t v123 = *v299;
          uint64_t v124 = v74;
        }
        else
        {
          uint64_t v123 = *v299;
          uint64_t v124 = v74;
          uint64_t v122 = v307;
          (*v299)(v307, v116, v74);
          uint64_t v121 = *v300;
          (*v300)(v122, 0, 1, v74);
        }
        os_log_type_t v150 = v294;
        BOOL v151 = v296;
        v123(v296, (uint64_t)v315, v124);
        v121(v151, 0, 1, v124);
        uint64_t v152 = &v150[*(int *)(TupleTypeMetadata2 + 48)];
        uint64_t v153 = v328;
        uint64_t v154 = v318;
        ((void (*)(char *, char *, uint64_t))v318)(v150, v122, v328);
        ((void (*)(char *, char *, uint64_t))v154)(v152, v151, v153);
        uint64_t v155 = v150;
        unint64_t v156 = v150;
        uint64_t v157 = v151;
        uint64_t v158 = (uint64_t (*)(char *, uint64_t, uint64_t))v325;
        if (v325(v156, 1, v124) == 1)
        {
          uint64_t v159 = *v313;
          swift_retain();
          v159(v157, v153);
          v159(v307, v153);
          int v160 = v158(v152, 1, v124);
          uint64_t v99 = v155;
          uint64_t v100 = (char *)v304;
          uint64_t v101 = v330;
          uint64_t v74 = v124;
          if (v160 != 1) {
            goto LABEL_20;
          }
          v159(v294, v328);
          (*v298)((char *)v304, v322, v101);
        }
        else
        {
          uint64_t v99 = v155;
          ((void (*)(char *, char *, uint64_t))v154)(v286, v155, v153);
          uint64_t v74 = v124;
          if (v158(v152, 1, v124) == 1)
          {
            uint64_t v161 = *v313;
            swift_retain();
            v161(v296, v153);
            v161(v307, v153);
            id v98 = v286;
            uint64_t v100 = (char *)v304;
            uint64_t v101 = v330;
LABEL_19:
            (*v263)(v98, v74);
LABEL_20:
            (*v262)(v99, TupleTypeMetadata2);
            (*v298)(v100, v322, v101);
LABEL_21:
            uint64_t v73 = (uint64_t)v323;
            sub_24D4A4444((uint64_t)v323);
            (*v297)(v100, v101);
            uint64_t v69 = v310;
            uint64_t v71 = v331;
            uint64_t v72 = v332;
            uint64_t v8 = v314;
            goto LABEL_22;
          }
          uint64_t v162 = v293;
          v282(v293, v152, v124);
          swift_retain();
          uint64_t v163 = v286;
          char v164 = sub_24DCC9798();
          uint64_t v165 = *v263;
          (*v263)(v162, v74);
          uint64_t v166 = *v313;
          (*v313)(v296, v153);
          v166(v307, v153);
          v165(v163, v74);
          v166(v99, v153);
          uint64_t v100 = (char *)v304;
          uint64_t v101 = v330;
          (*v298)((char *)v304, v322, v330);
          if ((v164 & 1) == 0) {
            goto LABEL_21;
          }
        }
        uint64_t v167 = v292;
        uint64_t v168 = v291;
        int v169 = v290(v292, 1, v291);
        uint64_t v8 = v314;
        if (v169 == 1) {
          goto LABEL_106;
        }
        unint64_t v170 = (uint64_t *)(v167 + *(int *)(v168 + 36));
        uint64_t v172 = *v170;
        unint64_t v171 = v170[1];
        uint64_t v173 = v304;
        uint64_t v174 = (uint64_t *)((char *)v304 + *(int *)(v101 + 44));
        uint64_t v175 = *v174;
        unint64_t v176 = v174[1];
        swift_retain();
        swift_bridgeObjectRetain();
        LOBYTE(v175) = sub_24DB1CA80(v172, v171, v175, v176);
        uint64_t v73 = (uint64_t)v323;
        sub_24D4A4444((uint64_t)v323);
        swift_release();
        swift_bridgeObjectRelease();
        (*v297)((char *)v173, v330);
        uint64_t v69 = v310;
        uint64_t v71 = v331;
        uint64_t v72 = v332;
        if (v175)
        {
          uint64_t v177 = v280;
          swift_release_n();
          (*v263)(v315, v74);
          uint64_t v178 = v177 + *(void *)(*(void *)v177 + 576);
          uint64_t v251 = v308;
          uint64_t v179 = v317;
          (*(void (**)(char *, uint64_t, uint64_t))(v281 + 16))(v308, v178, v317);
          sub_24D4A4444(v73);
          uint64_t v180 = swift_getAssociatedConformanceWitness();
          uint64_t v335 = v179;
          uint64_t v336 = v74;
          uint64_t v337 = v180;
          uint64_t v254 = (uint64_t *)&v301;
          goto LABEL_97;
        }
      }
LABEL_22:
      sub_24D4A4444(v73);
      uint64_t v335 = v69;
      uint64_t v336 = v71;
      uint64_t v337 = v8;
      uint64_t v338 = v72;
      type metadata accessor for FSOrFPJob();
      sub_24DCCA698();
      uint64_t v73 = v339;
    }
    while ((~v339 & 0xF000000000000007) != 0);
  }
  swift_release_n();
  uint64_t v75 = v309;
  uint64_t v76 = v287;
  if (v309[v266[16] + 16] != 2 && !sub_24DB86F3C(v287) && *(void *)&v75[v266[9]])
  {
    (*(void (**)(char *, uint64_t))(v285 + 8))(v315, v74);
    uint64_t v77 = v317;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
LABEL_9:
    uint64_t v79 = swift_getAssociatedConformanceWitness();
    uint64_t v335 = v77;
    uint64_t v336 = v74;
    goto LABEL_15;
  }
  uint64_t v80 = v316[4];
  BOOL v81 = sub_24D8903D0();
  uint64_t v312 = v74;
  if (v81)
  {
    uint64_t v334 = (char *)(v322 + *(int *)(v330 + 36));
    uint64_t v82 = (uint64_t *)(v322 + *(int *)(v330 + 44));
    uint64_t v84 = *v82;
    uint64_t v83 = v82[1];
    uint64_t v85 = v281;
    uint64_t v87 = (char *)(v281 + 16);
    uint64_t v86 = *(char **)(v281 + 16);
    uint64_t v88 = v272;
    uint64_t v89 = v317;
    ((void (*)(char *))v86)(v272);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v85 + 56))(v88, 0, 1, v89);
    uint64_t v90 = v329;
    uint64_t v91 = (*(uint64_t (**)(char *, uint64_t, uint64_t, char *))(*(void *)v80 + 256))(v334, v84, v83, v88);
    uint64_t v92 = v285;
    if (v90)
    {
      (*(void (**)(char *, uint64_t))(v270 + 8))(v88, v271);
      uint64_t v93 = v315;
      goto LABEL_53;
    }
    uint64_t v222 = v91;
    uint64_t v319 = v86;
    uint64_t v334 = v87;
    uint64_t v329 = 0;
    (*(void (**)(char *, uint64_t))(v270 + 8))(v88, v271);
    if (MEMORY[0x253327DC0](v222, v89))
    {
      uint64_t v223 = v89;
      uint64_t v224 = 0;
      uint64_t v323 = (void (*)(void, void))v316[2];
      uint64_t v225 = v281;
      uint64_t v324 = (void (**)(void, void, void))(v281 + 32);
      uint64_t v320 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v267 + 48);
      uint64_t v313 = (void (**)(char *, uint64_t))(v267 + 32);
      uint64_t v307 = (char *)(v279 + 8);
      uint64_t v301 = (void (**)(char *, uint64_t))(v267 + 8);
      uint64_t v321 = (char *)(v281 + 8);
      uint64_t v304 = (void (**)(uint64_t, uint64_t))(v268 + 8);
      uint64_t v226 = v319;
      while (1)
      {
        uint64_t v227 = v223;
        char v228 = sub_24DCC9CB8();
        sub_24DCC9C68();
        if (v228)
        {
          ((void (*)(char *, unint64_t, uint64_t))v226)(v306, v222+ ((*(unsigned __int8 *)(v225 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v225 + 80))+ *(void *)(v225 + 72) * v224, v227);
        }
        else
        {
          uint64_t result = sub_24DCCA778();
          if (v264 != 8) {
            goto LABEL_108;
          }
          uint64_t v335 = result;
          ((void (*)(char *, uint64_t *, uint64_t))v226)(v306, &v335, v227);
          swift_unknownObjectRelease();
        }
        uint64_t v229 = v227;
        uint64_t v230 = v224 + 1;
        uint64_t v231 = (uint64_t)v284;
        if (__OFADD__(v224, 1)) {
          goto LABEL_104;
        }
        uint64_t v232 = (void (*)(char *, char *, uint64_t))*v324;
        uint64_t v233 = (uint64_t)v305;
        (*v324)(v305, v306, v229);
        uint64_t v234 = v329;
        sub_24D4759C8(v233, v231);
        uint64_t v329 = v234;
        if (v234)
        {
          (*(void (**)(char *, uint64_t))v321)(v305, v317);
          swift_bridgeObjectRelease();
LABEL_52:
          uint64_t v93 = v315;
          uint64_t v92 = v285;
LABEL_53:
          uint64_t v193 = *(void (**)(char *, uint64_t))(v92 + 8);
          char v95 = v92 + 8;
          v193(v93, v312);
          return v95 & 1;
        }
        int v235 = (*v320)(v231, 1, v76);
        uint64_t v236 = v231;
        if (v235 == 1) {
          break;
        }
        uint64_t v237 = v278;
        ((void (*)(char *, uint64_t, uint64_t))*v313)(v278, v236, v76);
        uint64_t v238 = &v237[*(int *)(v76 + 52)];
        uint64_t v239 = v275;
        uint64_t v240 = v76;
        uint64_t v241 = v328;
        ((void (*)(char *, char *, uint64_t))v318)(v275, v238, v328);
        unsigned int v242 = v325(v239, 1, v312);
        (*(void (**)(char *, uint64_t))v307)(v239, v241);
        if (v242 == 1)
        {
          uint64_t v243 = &v237[v266[16]];
          uint64_t v226 = v319;
          if (v243[16])
          {
            uint64_t v76 = v287;
            uint64_t v225 = v281;
            if (v243[16] == 2) {
              goto LABEL_100;
            }
LABEL_85:
            BOOL v244 = sub_24DB86F3C(v76);
            uint64_t v237 = v278;
            if (v244)
            {
LABEL_100:
              (*v301)(v237, v76);
LABEL_101:
              swift_bridgeObjectRelease();
              uint64_t v256 = v312;
              (*(void (**)(char *, uint64_t))(v285 + 8))(v315, v312);
              uint64_t v257 = v308;
              uint64_t v258 = v317;
              v232(v308, v305, v317);
              uint64_t v259 = swift_getAssociatedConformanceWitness();
              uint64_t v260 = swift_getAssociatedConformanceWitness();
              uint64_t v335 = v258;
              uint64_t v336 = v256;
              uint64_t v337 = v259;
              uint64_t v338 = v260;
              uint64_t v261 = type metadata accessor for ReconciliationID();
              swift_storeEnumTagMultiPayload();
              char v95 = 1;
              (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v261 - 8) + 56))(v257, 0, 1, v261);
              return v95 & 1;
            }
            uint64_t v245 = *(void *)&v278[v266[9]];
            (*v301)(v278, v76);
            if (!v245) {
              goto LABEL_101;
            }
          }
          else
          {
            uint64_t v76 = v287;
            uint64_t v225 = v281;
            if ((v243[1] & 4) == 0) {
              goto LABEL_85;
            }
            (*v301)(v237, v287);
          }
          uint64_t v223 = v317;
          (*(void (**)(char *, uint64_t))v321)(v305, v317);
LABEL_90:
          uint64_t v181 = v312;
          goto LABEL_73;
        }
        (*v301)(v237, v240);
        uint64_t v223 = v317;
        (*(void (**)(char *, uint64_t))v321)(v305, v317);
        uint64_t v76 = v240;
        uint64_t v225 = v281;
        uint64_t v181 = v312;
        uint64_t v226 = v319;
LABEL_73:
        ++v224;
        if (v230 == MEMORY[0x253327DC0](v222, v223)) {
          goto LABEL_96;
        }
      }
      uint64_t v223 = v317;
      (*(void (**)(char *, uint64_t))v321)(v305, v317);
      (*v304)(v231, v276);
      goto LABEL_90;
    }
    uint64_t v181 = v312;
LABEL_96:
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v181 = v74;
  }
  uint64_t v182 = v316[5];
  uint64_t v183 = (uint64_t *)(v322 + *(int *)(v330 + 44));
  uint64_t v184 = *v183;
  uint64_t v185 = v183[1];
  uint64_t v186 = v285 + 56;
  uint64_t v187 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v285 + 56);
  uint64_t v188 = v273;
  v187(v273, 1, 1, v181);
  uint64_t v189 = v184;
  uint64_t v190 = v188;
  uint64_t v191 = v329;
  uint64_t v192 = (*(uint64_t (**)(char *, uint64_t, uint64_t, char *))(*(void *)v182 + 256))(v315, v189, v185, v188);
  uint64_t v329 = v191;
  if (v191)
  {
    (*(void (**)(char *, uint64_t))(v279 + 8))(v188, v328);
    goto LABEL_52;
  }
  uint64_t v194 = (char *)v192;
  uint64_t v321 = (char *)v187;
  uint64_t v322 = v186;
  uint64_t v195 = v279 + 8;
  uint64_t v323 = *(void (**)(void, void))(v279 + 8);
  v323(v190, v328);
  if (MEMORY[0x253327D80](v194, v181) < 1)
  {
    (*(void (**)(char *, uint64_t))(v285 + 8))(v315, v181);
    swift_bridgeObjectRelease();
    uint64_t v250 = v317;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v79 = swift_getAssociatedConformanceWitness();
    uint64_t v335 = v250;
    uint64_t v336 = v181;
    goto LABEL_15;
  }
  uint64_t v279 = v195;
  uint64_t v196 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v196, v181))
  {
LABEL_93:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v285 + 8))(v315, v181);
    uint64_t v246 = v317;
    uint64_t v247 = swift_getAssociatedConformanceWitness();
    uint64_t v248 = swift_getAssociatedConformanceWitness();
    uint64_t v335 = v246;
    uint64_t v336 = v181;
    uint64_t v337 = v247;
    uint64_t v338 = v248;
    uint64_t v249 = type metadata accessor for ReconciliationID();
    char v95 = 1;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v249 - 8) + 56))(v308, 1, 1, v249);
    return v95 & 1;
  }
  uint64_t v197 = 0;
  uint64_t v316 = &v309[*(int *)(v287 + 52)];
  uint64_t v320 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v285 + 16);
  uint64_t v313 = (void (**)(char *, uint64_t))(v274 + 8);
  uint64_t v309 = (unsigned char *)(v285 + 8);
  uint64_t v307 = (char *)((v285 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
  uint64_t v319 = v194;
  uint64_t v198 = v328;
  while (1)
  {
    char v203 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v203)
    {
      (*(void (**)(char *, char *, uint64_t))(v285 + 16))(v311, &v194[((*(unsigned __int8 *)(v285 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v285 + 80))+ *(void *)(v285 + 72) * v197], v181);
      uint64_t v204 = v288;
    }
    else
    {
      uint64_t result = sub_24DCCA778();
      uint64_t v221 = v288;
      if (v265 != 8) {
        goto LABEL_107;
      }
      uint64_t v335 = result;
      (*v320)((uint64_t)v311, (uint64_t)&v335, v181);
      swift_unknownObjectRelease();
      uint64_t v204 = v221;
    }
    uint64_t v205 = v303;
    uint64_t v206 = v302;
    uint64_t v207 = v321;
    if (__OFADD__(v197, 1)) {
      break;
    }
    uint64_t v324 = (void (**)(void, void, void))(v197 + 1);
    uint64_t v330 = v197;
    uint64_t v208 = v312;
    v282(v302, v311, v312);
    ((void (*)(char *, void, uint64_t, uint64_t))v207)(v206, 0, 1, v208);
    uint64_t v209 = v318;
    ((void (*)(char *, void *, uint64_t))v318)(v205, v316, v198);
    uint64_t v210 = v204;
    uint64_t v211 = &v204[*(int *)(TupleTypeMetadata2 + 48)];
    ((void (*)(char *, char *, uint64_t))v209)(v204, v206, v198);
    uint64_t v334 = v211;
    ((void (*)(char *, char *, uint64_t))v209)(v211, v205, v198);
    uint64_t v212 = v204;
    uint64_t v213 = (uint64_t (*)(char *, uint64_t, uint64_t))v325;
    if (v325(v212, 1, v208) == 1)
    {
      uint64_t v199 = v210;
      uint64_t v200 = (void (*)(char *, uint64_t))v323;
      v323(v205, v198);
      v200(v206, v198);
      int v201 = v213(v334, 1, v208);
      uint64_t v194 = v319;
      if (v201 == 1)
      {
        v323(v199, v328);
        swift_bridgeObjectRelease_n();
        unint64_t v219 = *(void (**)(char *, uint64_t))v309;
        goto LABEL_102;
      }
      goto LABEL_58;
    }
    uint64_t v214 = v277;
    ((void (*)(char *, char *, uint64_t))v209)(v277, v210, v198);
    uint64_t v215 = v334;
    if (v213(v334, 1, v208) == 1)
    {
      uint64_t v199 = v210;
      id v216 = (void (*)(char *, uint64_t))v323;
      v323(v303, v198);
      v216(v302, v198);
      (*(void (**)(char *, uint64_t))v309)(v214, v208);
      uint64_t v194 = v319;
LABEL_58:
      (*v313)(v199, TupleTypeMetadata2);
      goto LABEL_59;
    }
    uint64_t v217 = v293;
    v282(v293, v215, v208);
    swift_getAssociatedConformanceWitness();
    char v218 = sub_24DCC9798();
    unint64_t v219 = *(void (**)(char *, uint64_t))v309;
    (*(void (**)(char *, uint64_t))v309)(v217, v208);
    uint64_t v220 = (void (*)(char *, uint64_t))v323;
    v323(v303, v198);
    v220(v302, v198);
    v219(v214, v208);
    v220(v210, v198);
    uint64_t v194 = v319;
    if (v218)
    {
      swift_bridgeObjectRelease_n();
LABEL_102:
      uint64_t v74 = v312;
      v219(v315, v312);
      uint64_t v77 = v317;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      goto LABEL_9;
    }
LABEL_59:
    uint64_t v181 = v312;
    uint64_t v202 = MEMORY[0x253327DC0](v194, v312);
    uint64_t v197 = v330 + 1;
    if (v324 == (void (**)(void, void, void))v202) {
      goto LABEL_93;
    }
  }
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  swift_retain();
  swift_release();
  __break(1u);
LABEL_106:
  swift_retain();
  uint64_t result = swift_release();
  __break(1u);
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
  return result;
}

uint64_t sub_24D4905A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v13 = a3;
  uint64_t v14 = a4;
  uint64_t v11 = a1;
  uint64_t v12 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  uint64_t v4 = sub_24DCCA3F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - v6;
  uint64_t v8 = v19;
  uint64_t result = sub_24D490758((char *)&v11 - v6, v11, v12, v13, v14);
  if (!v8)
  {
    char v10 = result;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v10 & 1;
  }
  return result;
}

#error "24D490758: too big function (funcsize=0)"

uint64_t sub_24D4A2968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)v20 - v15;
  v20[0] = a2;
  v20[1] = a3;
  v20[2] = a4;
  v20[3] = a5;
  uint64_t v17 = type metadata accessor for ItemReconciliation();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1 + *(int *)(v17 + 52), v13);
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, AssociatedTypeWitness);
  if (result != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(a6, v16, AssociatedTypeWitness);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D4A2B04(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void *)(*a2 + 88);
  uint64_t v5 = *(void *)(*a2 + 80);
  uint64_t v6 = *(void *)(*a2 + 96);
  uint64_t v37 = *(void *)(*a2 + 104);
  uint64_t v38 = v4;
  uint64_t v45 = v4;
  uint64_t v46 = v5;
  uint64_t v47 = v37;
  uint64_t v48 = v6;
  uint64_t v7 = type metadata accessor for ItemReconciliation();
  uint64_t v39 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v42 = (uint64_t)&v35 - v8;
  uint64_t v43 = v6;
  uint64_t v40 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v44 = v7;
  uint64_t v18 = *(int *)(v7 + 52);
  uint64_t v41 = a1;
  uint64_t v19 = a1 + v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v14, a1 + v18, v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, AssociatedTypeWitness) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v17, v14, AssociatedTypeWitness);
    BOOL v21 = sub_24D8903D0();
    uint64_t v22 = v43;
    if (v21)
    {
      uint64_t v23 = v19 + *(int *)(type metadata accessor for ItemReconciliationHalf() + 64);
      if (!*(unsigned char *)(v23 + 16) && (*(unsigned char *)(v23 + 1) & 1) != 0)
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v17, AssociatedTypeWitness);
        return 0;
      }
    }
    uint64_t v36 = v17;
    uint64_t v24 = (*(uint64_t (**)(void))(*a2 + 176))();
    uint64_t v25 = v42;
    uint64_t v20 = v44;
    uint64_t v26 = v49;
    sub_24DB8AE0C(v24, v44, v42);
    if (v26)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v36, AssociatedTypeWitness);
      swift_release();
      return v20;
    }
    swift_release();
    uint64_t v27 = v25 + *(int *)(v20 + 52);
    uint64_t v28 = v40;
    uint64_t v29 = type metadata accessor for ItemReconciliationHalf();
    if (!*(void *)(v27 + *(int *)(v29 + 36)))
    {
      uint64_t v20 = *(void *)(v27 + *(int *)(v29 + 40)) & 3;
      if (v20)
      {
LABEL_14:
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v25, v44);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v36, AssociatedTypeWitness);
        return v20;
      }
      uint64_t v31 = v28;
      uint64_t v32 = a2[3];
      uint64_t v45 = v31;
      uint64_t v46 = v38;
      uint64_t v47 = v22;
      uint64_t v48 = v37;
      uint64_t ItemMetadata = type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v34 = v36;
      if (((*(uint64_t (**)(char *, uint64_t, void))(*(void *)v32 + 288))(v36, ItemMetadata, 0) & 1) == 0)
      {
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v25, v44);
        (*(void (**)(char *, uint64_t))(v15 + 8))(v34, AssociatedTypeWitness);
        return 0;
      }
    }
    if (qword_26B199AA0 != -1) {
      swift_once();
    }
    uint64_t v20 = qword_26B1A24C8;
    goto LABEL_14;
  }
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return 0;
}

unint64_t sub_24D4A3050()
{
  return 0xD000000000000033;
}

uint64_t sub_24D4A306C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v55 = a3;
  uint64_t v70 = a2;
  uint64_t v4 = *a1;
  uint64_t v5 = *(void *)(*a1 + 104);
  uint64_t v6 = *(void *)(*a1 + 88);
  swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v52 = (char *)&v49 - v8;
  uint64_t v56 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v51 = *(void *)(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v50 = (char *)&v49 - v9;
  uint64_t v10 = *(void *)(v4 + 80);
  uint64_t v11 = *(void *)(v4 + 96);
  uint64_t v66 = v10;
  uint64_t v67 = v6;
  uint64_t v68 = v11;
  uint64_t v69 = v5;
  uint64_t v12 = type metadata accessor for ItemReconciliation();
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v57 = v13;
  uint64_t v58 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v61 = (uint64_t)&v49 - v16;
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v59 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v49 - v19;
  uint64_t v63 = v10;
  uint64_t v64 = v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = sub_24DCCA3F8();
  uint64_t v62 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v49 - v24;
  uint64_t v26 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v49 - v27;
  uint64_t v29 = v65;
  uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)a1[4] + 280))(v70);
  if (!v29)
  {
    uint64_t v65 = v28;
    uint64_t v49 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v62 + 8))(v25, v22);
      return 1;
    }
    uint64_t v31 = v26;
    uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    uint64_t v33 = (uint64_t)v65;
    v32(v65, v25, AssociatedTypeWitness);
    swift_getAssociatedConformanceWitness();
    if (sub_24DCC9798())
    {
      (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, AssociatedTypeWitness);
      return 1;
    }
    else
    {
      uint64_t v34 = v61;
      sub_24D4759C8(v33, v61);
      uint64_t v35 = v60;
      uint64_t v36 = v12;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v34, 1, v12) == 1)
      {
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, AssociatedTypeWitness);
        (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v34, v57);
        return 1;
      }
      uint64_t v37 = AssociatedTypeWitness;
      uint64_t v70 = 0;
      uint64_t v38 = v49;
      (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v49, v34, v36);
      BOOL v39 = sub_24DB86F3C(v36);
      uint64_t v40 = v59;
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v59, v38, v36);
      if (v39)
      {
        uint64_t v41 = v56;
        int v42 = v40[*(int *)(v36 + 52) + *(int *)(v56 + 52)];
        uint64_t v43 = *(void (**)(char *, uint64_t))(v35 + 8);
        v43(v40, v36);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v65, v37);
        if (v42 == 1)
        {
          v43(v38, v36);
          return 0;
        }
      }
      else
      {
        uint64_t v43 = *(void (**)(char *, uint64_t))(v35 + 8);
        v43(v40, v36);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v65, v37);
        uint64_t v41 = v56;
      }
      uint64_t v45 = v50;
      uint64_t v44 = v51;
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v50, &v38[*(int *)(v36 + 52)], v41);
      v43(v38, v36);
      uint64_t v47 = v52;
      uint64_t v46 = v53;
      uint64_t v48 = v54;
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v52, v45, v54);
      (*(void (**)(char *, uint64_t))(v44 + 8))(v45, v41);
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 40))(v55, v47, v48);
      return 1;
    }
  }
  return result;
}

uint64_t sub_24D4A37D0(char *a1, void **a2, uint64_t a3)
{
  uint64_t v93 = a3;
  uint64_t v102 = a1;
  uint64_t v4 = *a2;
  uint64_t v5 = (*a2)[11];
  uint64_t v101 = (*a2)[10];
  uint64_t v6 = v4[13];
  uint64_t v7 = v4[12];
  uint64_t v103 = v5;
  uint64_t v104 = v101;
  uint64_t v105 = v6;
  uint64_t v106 = v7;
  uint64_t v8 = type metadata accessor for ItemReconciliation();
  uint64_t v85 = sub_24DCCA3F8();
  uint64_t v84 = *(void *)(v85 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v85);
  uint64_t v91 = (uint64_t)v75 - v10;
  uint64_t v87 = v8;
  uint64_t v86 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v83 = (char *)v75 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v90 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v94 = (char *)v75 - v15;
  uint64_t v16 = *(void *)(v13 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v89 = (char *)v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  char v95 = (char *)v75 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  id v97 = (char *)v75 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v100 = (char *)v75 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)v75 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  uint64_t v88 = (char *)v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v99 = (uint64_t)v75 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)v75 - v32;
  uint64_t v103 = v101;
  uint64_t v104 = v5;
  uint64_t v101 = v5;
  uint64_t v105 = v7;
  uint64_t v106 = v6;
  uint64_t v35 = v34;
  uint64_t v98 = v6;
  uint64_t v36 = &v102[*(int *)(type metadata accessor for ItemReconciliation() + 52)];
  uint64_t v92 = *(void (**)(void))(v16 + 16);
  ((void (*)(char *, char *, uint64_t))v92)(v27, v36, v13);
  uint64_t v102 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v102)(v27, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v82 = v16;
    uint64_t v81 = v13;
    uint64_t v37 = (void (*)(uint64_t, uint64_t))(v35 + 32);
    uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    v38(v33, v27, AssociatedTypeWitness);
    uint64_t v39 = v107;
    (*(void (**)(char *))(*a2[5] + 280))(v33);
    if (v39)
    {
      (*(void (**)(char *, uint64_t))(v35 + 8))(v33, AssociatedTypeWitness);
      return (uint64_t)v37;
    }
    unint64_t v78 = (void (*)(uint64_t, char *, uint64_t))v38;
    uint64_t v77 = a2;
    uint64_t v79 = v33;
    uint64_t v80 = v35;
    uint64_t v40 = (unsigned int (*)(char *, uint64_t, uint64_t))v102;
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v102)(v100, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v80 + 8))(v79, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v82 + 8))(v100, v81);
      return 1;
    }
    uint64_t v107 = 0;
    uint64_t v42 = v99;
    v78(v99, v100, AssociatedTypeWitness);
    uint64_t v43 = *(void *)(*(void *)(swift_getAssociatedConformanceWitness() + 32) + 8);
    uint64_t v44 = v79;
    if (sub_24DCC9798())
    {
      uint64_t v45 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
      v45(v42, AssociatedTypeWitness);
      v45((uint64_t)v44, AssociatedTypeWitness);
      return 1;
    }
    v75[1] = v43;
    uint64_t v46 = v80;
    uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
    uint64_t v48 = v97;
    uint64_t v76 = AssociatedTypeWitness;
    v47(v97, v42, AssociatedTypeWitness);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, AssociatedTypeWitness);
    uint64_t v49 = v95;
    uint64_t v50 = v92;
    uint64_t v51 = v81;
    ((void (*)(char *, uint64_t, uint64_t))v92)(v95, v93, v81);
    uint64_t v52 = &v94[*(int *)(TupleTypeMetadata2 + 48)];
    uint64_t v53 = v94;
    v50();
    uint64_t v100 = v52;
    uint64_t v54 = v52;
    uint64_t v55 = v49;
    ((void (*)(char *, char *, uint64_t))v50)(v54, v49, v51);
    uint64_t v56 = v76;
    if (((unsigned int (*)(char *, uint64_t))v40)(v53, 1) == 1)
    {
      uint64_t v57 = *(void (**)(char *, uint64_t))(v82 + 8);
      v57(v55, v51);
      v57(v97, v51);
      if (v40(v100, 1, v56) == 1)
      {
        v57(v53, v51);
        uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
        v58(v99, v56);
LABEL_19:
        v58((uint64_t)v79, v56);
        return 1;
      }
    }
    else
    {
      uint64_t v59 = v89;
      ((void (*)(char *, char *, uint64_t))v50)(v89, v53, v51);
      uint64_t v60 = v100;
      if (v40(v100, 1, v56) != 1)
      {
        uint64_t v63 = v88;
        v78((uint64_t)v88, v60, v56);
        LODWORD(v102) = sub_24DCC9798();
        uint64_t v58 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
        v58((uint64_t)v63, v56);
        uint64_t v64 = *(void (**)(char *, uint64_t))(v82 + 8);
        v64(v95, v51);
        v64(v97, v51);
        uint64_t v62 = v56;
        v58((uint64_t)v59, v56);
        v64(v53, v51);
        if (v102)
        {
          v58(v99, v56);
          goto LABEL_19;
        }
LABEL_20:
        uint64_t v65 = v91;
        uint64_t v66 = v99;
        uint64_t v67 = v107;
        sub_24D475DF0(v99, v91);
        if (v67)
        {
          uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
          v37(v66, v62);
          v37((uint64_t)v79, v62);
          return (uint64_t)v37;
        }
        uint64_t v107 = 0;
        uint64_t v69 = v86;
        uint64_t v68 = v87;
        int v70 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48))(v65, 1, v87);
        uint64_t v71 = v79;
        if (v70 != 1)
        {
          uint64_t v73 = v83;
          (*(void (**)(char *, uint64_t, uint64_t))(v69 + 32))(v83, v65, v68);
          uint64_t v37 = (void (*)(uint64_t, uint64_t))(v73[*(int *)(type metadata accessor for ItemReconciliationHalf()
                                                                   + 52)] != 1);
          (*(void (**)(char *, uint64_t))(v69 + 8))(v73, v68);
          uint64_t v74 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
          v74(v66, v62);
          v74((uint64_t)v71, v62);
          return (uint64_t)v37;
        }
        uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
        v72(v66, v62);
        v72((uint64_t)v71, v62);
        (*(void (**)(uint64_t, uint64_t))(v84 + 8))(v65, v85);
        return 1;
      }
      uint64_t v61 = *(void (**)(char *, uint64_t))(v82 + 8);
      v61(v95, v51);
      v61(v97, v51);
      (*(void (**)(char *, uint64_t))(v80 + 8))(v59, v56);
    }
    uint64_t v62 = v56;
    (*(void (**)(char *, uint64_t))(v90 + 8))(v53, TupleTypeMetadata2);
    goto LABEL_20;
  }
  (*(void (**)(char *, uint64_t))(v16 + 8))(v27, v13);
  return 1;
}

unint64_t sub_24D4A4340(unint64_t result, uint64_t a2, void *a3)
{
  if ((result & 0x8000000000000000) == 0) {
    return (unint64_t)a3;
  }
  return result;
}

uint64_t sub_24D4A434C(uint64_t result)
{
  if ((result & 0x8000000000000000) == 0) {
    return MEMORY[0x270F9A790]();
  }
  return result;
}

uint64_t sub_24D4A4358(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 - 8);
  uint64_t v5 = (void (*)(void))MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  uint64_t v8 = sub_24DCCAD78();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8;
}

uint64_t sub_24D4A4444(uint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return swift_release();
  }
  return result;
}

void (*sub_24D4A445C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(void *a1)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = v8;
  a1[1] = a4;
  a1[2] = v8;
  size_t v10 = *(void *)(v8 + 64);
  uint64_t v11 = malloc(v10);
  a1[3] = v11;
  char v12 = sub_24DCC9CB8();
  sub_24DCC9C68();
  if (v12)
  {
    (*(void (**)(void *, unint64_t, uint64_t))(v9 + 16))(v11, a3+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ *(void *)(v9 + 72) * a2, a4);
    return sub_24D4A45B8;
  }
  uint64_t result = (void (*)(void *))sub_24DCCA778();
  if (v10 == 8)
  {
    *a1 = result;
    (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v11, a1, a4);
    swift_unknownObjectRelease();
    return sub_24D4A45B8;
  }
  __break(1u);
  return result;
}

void sub_24D4A45B8(void *a1)
{
  uint64_t v1 = (void *)a1[3];
  (*(void (**)(void *, void))(a1[2] + 8))(v1, a1[1]);

  free(v1);
}

unint64_t sub_24D4A4604()
{
  unint64_t result = qword_26986C390;
  if (!qword_26986C390)
  {
    sub_24DCC82A8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C390);
  }
  return result;
}

BOOL sub_24D4A465C()
{
  return !sub_24D8903D0();
}

uint64_t sub_24D4A4690()
{
  return sub_24D4A4358(v0[4], v0[5], v0[2]);
}

uint64_t sub_24D4A469C()
{
  return swift_deallocObject();
}

unsigned char **sub_24D4A46AC(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA898BC(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_24D4A46B4()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A46C4()
{
  return sub_24DA89970(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_24D4A46CC(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_24DA89998(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_24D4A46D8()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A46E8()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A46FC()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A470C()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4720()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4730()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4744()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4754()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4764()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D4A479C(uint64_t a1, unint64_t a2)
{
  if ((unint64_t)a1 < 0xFFFFFFFF00000000 || (a2 & 0xF000000000000007) != 0) {
    return sub_24D466534(a1, a2);
  }
  return a1;
}

uint64_t sub_24D4A47BC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D4A47F4()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4804()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D4A48C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, AssociatedTypeWitness);
}

uint64_t sub_24D4A494C()
{
  uint64_t v1 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v20 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = v0 + ((v20 + 48) & ~v20);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v4(v2, AssociatedTypeWitness);
  v4(v2 + v1[9], AssociatedTypeWitness);
  uint64_t v5 = v2 + v1[10];
  uint64_t v6 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for FileItemVersion();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v5 + *(int *)(v7 + 56), v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v1[12];
  uint64_t v9 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v10 = v8 + v9[7];
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = (uint64_t *)(v8 + v9[33]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_24D400DCC(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v2 + v1[13];
  uint64_t v18 = *(void **)(v17 + 16);
  if (v18 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24D466534(*(void *)(v2 + v1[17]), *(void *)(v2 + v1[17] + 8));
  return swift_deallocObject();
}

uint64_t sub_24D4A4D88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SnapshotItem();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, v3);
}

uint64_t sub_24D4A4E04()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4E14()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4E24()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4E34()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4E54()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4E64()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4E74()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A4E84()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_179Tm()
{
  uint64_t v24 = type metadata accessor for ItemReconciliation();
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v24 - 8) + 80);
  uint64_t v1 = v0 + ((v23 + 48) & ~v23);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, AssociatedTypeWitness)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, AssociatedTypeWitness);
  }
  uint64_t v4 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v5 = v1 + v4[12];
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for FileItemVersion();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v5, 1, v8))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v5 + *(int *)(v8 + 56), v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24D3E380C(*(void **)(v1 + v4[16]), *(id *)(v1 + v4[16] + 8), *(unsigned char *)(v1 + v4[16] + 16));
  uint64_t v9 = v1 + v4[17];
  unint64_t v10 = *(void *)(v9 + 16);
  if (v10 >> 60 != 11 && v10 >> 60 != 15) {
    sub_24D400DCC(*(void *)(v9 + 8), v10);
  }

  uint64_t v12 = v1 + *(int *)(v24 + 52);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13)) {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v12, v13);
  }
  uint64_t v15 = (int *)type metadata accessor for ItemReconciliationHalf();
  uint64_t v16 = v12 + v15[12];
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v19 = type metadata accessor for FileItemVersion();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v16, 1, v19))
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(v16 + *(int *)(v19 + 56), v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24D3E380C(*(void **)(v12 + v15[16]), *(id *)(v12 + v15[16] + 8), *(unsigned char *)(v12 + v15[16] + 16));
  uint64_t v20 = v12 + v15[17];
  unint64_t v21 = *(void *)(v20 + 16);
  if (v21 >> 60 != 11 && v21 >> 60 != 15) {
    sub_24D400DCC(*(void *)(v20 + 8), v21);
  }

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24D4A5440@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = *(void *)(type metadata accessor for ItemReconciliation() - 8);
  return sub_24D4A2968((uint64_t)v1 + ((*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v3, v4, v5, v6, a1);
}

uint64_t objectdestroy_186Tm()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)), AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D4A558C@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return v5(a1, v6, AssociatedTypeWitness);
}

uint64_t sub_24D4A5618()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A5628()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A5638()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A5648()
{
  return swift_deallocObject();
}

uint64_t sub_24D4A5658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D48DACC(a1, a2);
}

uint64_t sub_24D4A567C(uint64_t a1, char *a2, void *a3)
{
  uint64_t v65 = a2;
  uint64_t v5 = *a3;
  uint64_t v6 = *(void *)(*a3 + 104);
  uint64_t v7 = *(void *)(*a3 + 88);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v58 = sub_24DCCA3F8();
  uint64_t v56 = *(void *)(v58 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v58);
  uint64_t v57 = (char *)&v53 - v10;
  uint64_t v55 = AssociatedTypeWitness;
  uint64_t v59 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v54 = (char *)&v53 - v11;
  uint64_t v12 = *(void *)(v5 + 80);
  uint64_t v13 = *(void *)(v5 + 96);
  uint64_t v14 = type metadata accessor for ItemReconciliationHalf();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v61 = v14;
  uint64_t v62 = v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v60 = (char *)&v53 - v16;
  uint64_t v67 = v12;
  uint64_t v68 = v7;
  uint64_t v69 = v13;
  uint64_t v70 = v6;
  uint64_t v66 = type metadata accessor for ItemReconciliation();
  uint64_t v17 = sub_24DCCA3F8();
  uint64_t v63 = *(void *)(v17 - 8);
  uint64_t v64 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v53 - v18;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v53 - v24;
  uint64_t v26 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v53 - v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v25, a1, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v20) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v25, v21);
  }
  uint64_t v30 = v62;
  uint64_t v53 = a1;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v25, v20);
  uint64_t v32 = v63;
  uint64_t v31 = v64;
  (*(void (**)(char *, char *, uint64_t))(v63 + 16))(v19, v65, v64);
  uint64_t v33 = *(void *)(v66 - 8);
  if ((*(unsigned int (**)(char *, uint64_t))(v33 + 48))(v19, 1) == 1)
  {
    (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v20);
  }
  uint64_t v64 = v20;
  uint64_t v65 = v28;
  uint64_t v34 = v30;
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v36 = v60;
  uint64_t v37 = v61;
  v35(v60, v19, v61);
  uint64_t v38 = v66;
  (*(void (**)(char *, uint64_t))(v33 + 8))(v19, v66);
  uint64_t v39 = &v36[*(int *)(v37 + 64)];
  id v40 = *(id *)v39;
  uint64_t v41 = (void *)*((void *)v39 + 1);
  int v42 = v39[16];
  sub_24D3F1C98(*(id *)v39, v41, v39[16]);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v37);
  if (v42)
  {
    sub_24D3E380C(v40, v41, v42);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v65, v64);
  }
  sub_24D3E380C(v40, v41, 0);
  if (((unsigned __int16)v40 & 0x100) == 0) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v65, v64);
  }
  uint64_t v43 = a3[3];
  uint64_t v44 = v65;
  uint64_t v45 = v71;
  (*(void (**)(char *))(*(void *)v43 + 352))(v65);
  if (v45) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v44, v64);
  }
  uint64_t v47 = v56;
  uint64_t v46 = v57;
  uint64_t v48 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v57, v53 + *(int *)(v38 + 52), v58);
  uint64_t v49 = v59;
  uint64_t v50 = v55;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v46, 1, v55) == 1)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v65, v64);
    return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v46, v48);
  }
  else
  {
    uint64_t v51 = v46;
    uint64_t v52 = v54;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v54, v51, v50);
    (*(void (**)(char *))(*(void *)v43 + 360))(v52);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v52, v50);
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v65, v64);
  }
}

unint64_t sub_24D4A5DD0()
{
  unint64_t result = qword_26986F050;
  if (!qword_26986F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986F050);
  }
  return result;
}

uint64_t sub_24D4A5E24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D47F970(a1, a2);
}

uint64_t sub_24D4A5E4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D482018(a1, a2);
}

uint64_t sub_24D4A5E70(uint64_t a1)
{
  return sub_24D481F1C(a1, *(void *)(v1 + 48)) & 1;
}

uint64_t sub_24D4A5E98(uint64_t a1, void (*a2)(void, void), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v200 = a4;
  uint64_t v217 = a3;
  uint64_t v215 = a2;
  uint64_t v224 = a1;
  uint64_t v176 = sub_24DCC9078();
  uint64_t v175 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  uint64_t v177 = &v171[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v226[0] = a5;
  v226[1] = a6;
  v226[2] = a7;
  v226[3] = a8;
  uint64_t v220 = type metadata accessor for ItemReconciliation();
  uint64_t v174 = *(void *)(v220 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v220);
  uint64_t v173 = &v171[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v197 = &v171[-v16];
  MEMORY[0x270FA5388](v15);
  uint64_t v199 = &v171[-v17];
  uint64_t v204 = a8;
  uint64_t v203 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v219 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v184 = &v171[-v19];
  uint64_t v209 = v20;
  uint64_t v21 = sub_24DCCA3F8();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v182 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v196 = &v171[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v212 = &v171[-v25];
  uint64_t v221 = v21;
  uint64_t v223 = *(NSObject **)(v21 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v181 = &v171[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  id v216 = &v171[-v29];
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  char v218 = &v171[-v31];
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v180 = &v171[-v33];
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v207 = &v171[-v35];
  MEMORY[0x270FA5388](v34);
  uint64_t v208 = &v171[-v36];
  uint64_t v202 = (void (*)(void, void, void))a7;
  int v201 = (void (*)(void, void, void, void))a5;
  uint64_t v37 = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(NSObject **)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v183 = &v171[-v39];
  uint64_t v40 = sub_24DCCA3F8();
  uint64_t v41 = swift_getTupleTypeMetadata2();
  uint64_t v179 = *(void *)(v41 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v41);
  uint64_t v194 = &v171[-((v43 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v46 = &v171[-v45];
  uint64_t v186 = *(void *)(v40 - 8);
  uint64_t v47 = v186;
  uint64_t v48 = MEMORY[0x270FA5388](v44);
  uint64_t v178 = &v171[-((v49 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v213 = &v171[-v51];
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v214 = &v171[-v53];
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v187 = &v171[-v55];
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v58 = &v171[-v57];
  MEMORY[0x270FA5388](v56);
  uint64_t v60 = &v171[-v59];
  uint64_t v210 = (void (*)(void))v47;
  uint64_t v61 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v47 + 16);
  v61(&v171[-v59], v224, v40);
  isa = (void (*)(void, void, void))v38[2].isa;
  uint64_t v198 = v38 + 2;
  uint64_t v190 = isa;
  isa(v58, v215, v37);
  uint64_t v63 = (void (*)(void, void, void, void))v38[7].isa;
  uint64_t v189 = v38 + 7;
  uint64_t v188 = v63;
  v63(v58, 0, 1, v37);
  uint64_t v206 = v41;
  uint64_t v64 = &v46[*(int *)(v41 + 48)];
  v61(v46, (uint64_t)v60, v40);
  v61(v64, (uint64_t)v58, v40);
  uint64_t v195 = v38;
  uint64_t v65 = (unsigned int (*)(void, void, void))v38[6].isa;
  uint64_t v205 = v46;
  unsigned int v66 = v65(v46, 1, v37);
  uint64_t v211 = v37;
  uint64_t v193 = v38 + 6;
  uint64_t v192 = v65;
  uint64_t v191 = (void (*)(void, void, void))v61;
  uint64_t v185 = v47 + 16;
  if (v66 == 1)
  {
    uint64_t v67 = *(void (**)(unsigned char *, uint64_t))(v186 + 8);
    v67(v58, v40);
    v67(v60, v40);
    if (v65(v64, 1, v37) == 1)
    {
      v67(v205, v40);
      uint64_t v68 = v224;
      uint64_t v69 = v215;
      uint64_t v70 = (void (*)(uint64_t, void (*)(void, void), uint64_t))v190;
      uint64_t v71 = v188;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  uint64_t v72 = v186;
  v61(v187, (uint64_t)v205, v40);
  if (v65(v64, 1, v37) == 1)
  {
    uint64_t v67 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
    v67(v58, v40);
    v67(v60, v40);
    ((void (*)(unsigned char *, uint64_t))v195[1].isa)(v187, v37);
LABEL_6:
    uint64_t v69 = v215;
    uint64_t v70 = (void (*)(uint64_t, void (*)(void, void), uint64_t))v190;
    uint64_t v71 = v188;
    (*(void (**)(unsigned char *, uint64_t))(v179 + 8))(v205, v206);
    uint64_t v68 = v224;
LABEL_7:
    uint64_t v73 = type metadata accessor for ItemReconciliationHalf();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v73 - 8) + 8))(v68, v73);
    double v74 = sub_24DB86A84(v68);
    ((void (*)(uint64_t, uint64_t, double))v67)(v68, v40, v74);
    v70(v68, v69, v37);
    v71(v68, 0, 1, v37);
    goto LABEL_8;
  }
  uint64_t v118 = v195;
  uint64_t v119 = v183;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v195[4].isa)(v183, v64, v37);
  swift_getAssociatedConformanceWitness();
  int v120 = v187;
  int v121 = sub_24DCC9798();
  uint64_t v37 = v211;
  int v172 = v121;
  uint64_t v122 = (void (*)(void, void))v118[1].isa;
  v122(v119, v211);
  uint64_t v67 = *(void (**)(unsigned char *, uint64_t))(v72 + 8);
  v67(v58, v40);
  v67(v60, v40);
  v122(v120, v37);
  v67(v205, v40);
  uint64_t v68 = v224;
  uint64_t v69 = v215;
  uint64_t v70 = (void (*)(uint64_t, void (*)(void, void), uint64_t))v190;
  uint64_t v71 = v188;
  if ((v172 & 1) == 0) {
    goto LABEL_7;
  }
LABEL_8:
  uint64_t v215 = (void (*)(void, void))v67;
  uint64_t v75 = (void (*)(unsigned char *, void (*)(void, void), uint64_t))v70;
  uint64_t v76 = v214;
  uint64_t v77 = (void (*)(unsigned char *, unsigned char *, uint64_t))v191;
  v191(v214, v68, v40);
  unint64_t v78 = v213;
  uint64_t v79 = v211;
  v75(v213, v69, v211);
  v71((uint64_t)v78, 0, 1, v79);
  uint64_t v80 = v194;
  uint64_t v81 = &v194[*(int *)(v206 + 48)];
  v77(v194, v76, v40);
  v77(v81, v78, v40);
  uint64_t v82 = (unsigned int (*)(unsigned char *, uint64_t, uint64_t))v192;
  if (v192(v80, 1, v79) == 1)
  {
    unsigned int v83 = v82(v81, 1, v79);
    uint64_t v84 = v212;
    if (v83 == 1)
    {
      uint64_t v85 = (void (*)(unsigned char *, uint64_t))v215;
      v215(v80, v40);
      v85(v213, v40);
      v85(v214, v40);
      uint64_t v86 = v221;
      uint64_t v87 = v208;
      uint64_t v88 = v224;
      goto LABEL_13;
    }
    goto LABEL_49;
  }
  uint64_t v89 = v77;
  uint64_t v90 = v82;
  uint64_t v91 = v178;
  v89(v178, v80, v40);
  uint64_t v92 = v80;
  if (v90(v81, 1, v79) == 1)
  {
    ((void (*)(unsigned char *, uint64_t))v195[1].isa)(v91, v79);
LABEL_49:
    (*(void (**)(unsigned char *, uint64_t))(v179 + 8))(v80, v206);
    unint64_t v170 = (void (*)(unsigned char *, uint64_t))v215;
    v215(v213, v40);
    v170(v214, v40);
LABEL_50:
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 326);
  }
  uint64_t v93 = v195;
  uint64_t v94 = v183;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v195[4].isa)(v183, v81, v79);
  swift_getAssociatedConformanceWitness();
  char v95 = sub_24DCC9798();
  uint64_t v96 = (void (*)(void, void))v93[1].isa;
  v96(v91, v79);
  v96(v94, v79);
  id v97 = (void (*)(unsigned char *, uint64_t))v215;
  v215(v92, v40);
  v97(v213, v40);
  v97(v214, v40);
  uint64_t v86 = v221;
  uint64_t v84 = v212;
  uint64_t v87 = v208;
  uint64_t v88 = v224;
  if ((v95 & 1) == 0) {
    goto LABEL_50;
  }
LABEL_13:
  uint64_t v98 = v223 + 2;
  uint64_t v99 = (void (*)(void))v223[2].isa;
  uint64_t v206 = v88 + *(int *)(v220 + 52);
  v99(v87);
  uint64_t v100 = v219;
  uint64_t v101 = *(void (**)(void, void, void))(v219 + 16);
  uint64_t v102 = v207;
  uint64_t v103 = v209;
  uint64_t v205 = (unsigned char *)(v219 + 16);
  uint64_t v202 = v101;
  v101(v207, v217, v209);
  uint64_t v104 = *(void (**)(void, void, void, void))(v100 + 56);
  uint64_t v214 = (unsigned char *)(v100 + 56);
  int v201 = v104;
  v104(v102, 0, 1, v103);
  uint64_t v105 = &v84[*(int *)(TupleTypeMetadata2 + 48)];
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v99)(v84, v87, v86);
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v99)(v105, v102, v86);
  uint64_t v106 = *(unsigned char **)(v100 + 48);
  int v107 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v106)(v84, 1, v103);
  uint64_t v213 = v106;
  uint64_t v210 = (void (*)(void))v99;
  uint64_t v211 = v100 + 48;
  if (v107 == 1)
  {
    uint64_t v108 = (void (*)(void, void))v223[1].isa;
    v108(v102, v86);
    v108(v87, v86);
    int v109 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v106)(v105, 1, v103);
    uint64_t v215 = v108;
    if (v109 == 1)
    {
      v108(v212, v86);
      uint64_t v103 = v209;
      uint64_t v110 = v210;
      uint64_t v111 = v217;
      uint64_t v112 = v206;
      uint64_t v113 = v202;
      uint64_t v114 = v201;
      goto LABEL_23;
    }
    uint64_t v103 = v209;
    uint64_t v110 = v210;
    uint64_t v112 = v206;
    goto LABEL_21;
  }
  uint64_t v115 = v223;
  uint64_t v116 = v180;
  uint64_t v198 = v98;
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v99)(v180, v84, v86);
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v106)(v105, 1, v103) == 1)
  {
    uint64_t v117 = (void (*)(void, void))v115[1].isa;
    v117(v207, v86);
    uint64_t v215 = v117;
    v117(v208, v86);
    (*(void (**)(unsigned char *, uint64_t))(v219 + 8))(v116, v103);
    uint64_t v112 = v206;
    uint64_t v110 = v210;
LABEL_21:
    (*(void (**)(unsigned char *, uint64_t))(v182 + 8))(v212, TupleTypeMetadata2);
    uint64_t v111 = v217;
    uint64_t v113 = v202;
    uint64_t v114 = v201;
LABEL_22:
    uint64_t v123 = type metadata accessor for ItemReconciliationHalf();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v123 - 8) + 8))(v112, v123);
    uint64_t v86 = v221;
    double v124 = sub_24DB86A84(v112);
    ((void (*)(uint64_t, uint64_t, double))v215)(v112, v86, v124);
    v113(v112, v111, v103);
    v114(v112, 0, 1, v103);
    goto LABEL_23;
  }
  uint64_t v147 = v219;
  unint64_t v148 = v184;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v219 + 32))(v184, v105, v103);
  swift_getAssociatedConformanceWitness();
  LODWORD(v195) = sub_24DCC9798();
  uint64_t v149 = *(void (**)(unsigned char *, uint64_t))(v147 + 8);
  v149(v148, v103);
  os_log_type_t v150 = (void (*)(void, void))v115[1].isa;
  v150(v207, v221);
  v150(v208, v221);
  v149(v116, v103);
  uint64_t v86 = v221;
  uint64_t v215 = v150;
  v150(v84, v221);
  uint64_t v111 = v217;
  uint64_t v112 = v206;
  uint64_t v113 = v202;
  uint64_t v114 = v201;
  uint64_t v110 = v210;
  if ((v195 & 1) == 0) {
    goto LABEL_22;
  }
LABEL_23:
  ((void (*)(unsigned char *, uint64_t, uint64_t))v110)(v218, v112, v86);
  uint64_t v125 = (void (*)(unsigned char *, void, uint64_t, uint64_t))v114;
  uint64_t v126 = v110;
  uint64_t v127 = v216;
  v113((uint64_t)v216, v111, v103);
  v125(v127, 0, 1, v103);
  uint64_t v128 = &v196[*(int *)(TupleTypeMetadata2 + 48)];
  uint64_t v129 = v196;
  v126();
  ((void (*)(unsigned char *, unsigned char *, uint64_t))v126)(v128, v127, v86);
  uint64_t v130 = (uint64_t (*)(unsigned char *, uint64_t, uint64_t))v213;
  if (((unsigned int (*)(unsigned char *, uint64_t, uint64_t))v213)(v129, 1, v103) != 1)
  {
    uint64_t v137 = v181;
    ((void (*)(unsigned char *, unsigned char *, uint64_t))v126)(v181, v129, v86);
    int v138 = v130(v128, 1, v103);
    char v132 = v200;
    uint64_t v133 = (void (*)(unsigned char *, uint64_t))v215;
    if (v138 != 1)
    {
      uint64_t v139 = v219;
      uint64_t v140 = v184;
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v219 + 32))(v184, v128, v103);
      swift_getAssociatedConformanceWitness();
      char v141 = sub_24DCC9798();
      uint64_t v142 = *(void (**)(unsigned char *, uint64_t))(v139 + 8);
      v142(v137, v103);
      v142(v140, v103);
      v133(v129, v86);
      v133(v216, v86);
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v133)(v218, v86);
      uint64_t v135 = v220;
      unsigned int v136 = v197;
      if (v141) {
        goto LABEL_28;
      }
LABEL_53:
      sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/ReconciliationTable.swift", 121, 2, 339);
    }
    (*(void (**)(unsigned char *, uint64_t))(v219 + 8))(v137, v103);
LABEL_52:
    (*(void (**)(unsigned char *, uint64_t))(v182 + 8))(v129, TupleTypeMetadata2);
    v133(v216, v86);
    v133(v218, v86);
    goto LABEL_53;
  }
  int v131 = v130(v128, 1, v103);
  char v132 = v200;
  uint64_t v133 = (void (*)(unsigned char *, uint64_t))v215;
  if (v131 != 1) {
    goto LABEL_52;
  }
  v215(v129, v86);
  v133(v216, v86);
  uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v133)(v218, v86);
  uint64_t v135 = v220;
  unsigned int v136 = v197;
LABEL_28:
  uint64_t v143 = *(int *)(v135 + 56);
  uint64_t v144 = v224;
  uint64_t v145 = *(unsigned __int8 *)(v224 + v143);
  int v146 = v199;
  switch(*(unsigned char *)(v224 + v143))
  {
    case 1:
      uint64_t v145 = 1;
      goto LABEL_34;
    case 2:
      uint64_t v145 = 2;
      goto LABEL_34;
    case 3:
      uint64_t v145 = 4;
      goto LABEL_34;
    case 4:
      goto LABEL_47;
    default:
LABEL_34:
      if (v145 == qword_24DCD3B98[v132]) {
        goto LABEL_47;
      }
      if (*(unsigned char *)(v224 + v143) == 3)
      {
        if (!v132) {
          goto LABEL_47;
        }
      }
      else if (!*(unsigned char *)(v224 + v143) && v132 == 3)
      {
        goto LABEL_47;
      }
      uint64_t v151 = v174;
      uint64_t v152 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v174 + 16);
      v152(v199, v224, v135);
      id v153 = (id)fpfs_current_or_default_log();
      uint64_t v154 = v177;
      sub_24DCC9088();
      v152(v136, (uint64_t)v146, v135);
      uint64_t v155 = v136;
      unint64_t v156 = sub_24DCC9068();
      int v157 = sub_24DCCA138();
      if (os_log_type_enabled(v156, (os_log_type_t)v157))
      {
        LODWORD(TupleTypeMetadata2) = v157;
        uint64_t v223 = v156;
        uint64_t v158 = swift_slowAlloc();
        uint64_t v221 = swift_slowAlloc();
        v226[0] = v221;
        *(_DWORD *)uint64_t v158 = 136446466;
        uint64_t v159 = v173;
        v152(v173, (uint64_t)v155, v135);
        int v160 = *(void (**)(unsigned char *, uint64_t))(v151 + 8);
        v160(v155, v135);
        uint64_t v161 = sub_24DB8E8F4(v135);
        unint64_t v163 = v162;
        v160(v159, v135);
        uint64_t v225 = sub_24D418FB4(v161, v163, v226);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        *(_WORD *)(v158 + 12) = 2082;
        unint64_t v164 = 0xE300000000000000;
        uint64_t v165 = 6516580;
        char v132 = v200;
        uint64_t v166 = v177;
        uint64_t v167 = v223;
        switch((char)v200)
        {
          case 1:
            uint64_t v165 = 7498084;
            break;
          case 2:
            unint64_t v164 = 0xE700000000000000;
            uint64_t v165 = 0x6B6E696C6D7973;
            break;
          case 3:
            unint64_t v164 = 0xE500000000000000;
            uint64_t v165 = 0x7361696C61;
            break;
          default:
            break;
        }
        uint64_t v225 = sub_24D418FB4(v165, v164, v226);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D3D0000, v167, (os_log_type_t)TupleTypeMetadata2, "inconsistent item kind %{public}s new kind %{public}s", (uint8_t *)v158, 0x16u);
        uint64_t v169 = v221;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v169, -1, -1);
        MEMORY[0x25332B030](v158, -1, -1);

        (*(void (**)(unsigned char *, uint64_t))(v175 + 8))(v166, v176);
        uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v160)(v199, v220);
        uint64_t v144 = v224;
      }
      else
      {
        uint64_t v168 = *(void (**)(unsigned char *, uint64_t))(v151 + 8);
        v168(v155, v135);

        (*(void (**)(unsigned char *, uint64_t))(v175 + 8))(v154, v176);
        uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v168)(v199, v135);
        char v132 = v200;
      }
LABEL_47:
      *(unsigned char *)(v144 + v143) = v132;
      return result;
  }
}

uint64_t sub_24D4A78FC(uint64_t a1, void *a2)
{
  uint64_t v4 = *a2;
  uint64_t v5 = *(void *)(*a2 + 88);
  uint64_t v40 = *(void *)(*a2 + 104);
  uint64_t v44 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = sub_24DCCA3F8();
  uint64_t v43 = *(void *)(v41 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v41);
  uint64_t v38 = AssociatedTypeWitness;
  uint64_t v39 = (char *)&v33 - v8;
  uint64_t v42 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v36 = (char *)&v33 - v9;
  uint64_t v10 = *(void *)(v4 + 80);
  uint64_t v37 = *(void *)(v4 + 96);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v33 - v15;
  uint64_t v17 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v33 - v18;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v16, 1, v11) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v16, v12);
  }
  uint64_t v34 = a1;
  uint64_t v35 = v17;
  uint64_t v22 = v43;
  uint64_t v21 = v44;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v19, v16, v11);
  uint64_t v23 = a2[3];
  uint64_t v24 = v49;
  (*(void (**)(char *))(*(void *)v23 + 368))(v19);
  uint64_t v25 = v19;
  uint64_t v26 = v11;
  if (v24) {
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v25, v11);
  }
  uint64_t v49 = v25;
  uint64_t v45 = v10;
  uint64_t v46 = v21;
  uint64_t v47 = v37;
  uint64_t v48 = v40;
  uint64_t v27 = type metadata accessor for ItemReconciliation();
  uint64_t v28 = v39;
  uint64_t v29 = v41;
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v39, v34 + *(int *)(v27 + 52), v41);
  uint64_t v30 = v42;
  uint64_t v31 = v38;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v28, 1, v38) == 1)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v49, v26);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v28, v29);
  }
  else
  {
    uint64_t v32 = v36;
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v36, v28, v31);
    (*(void (**)(char *))(*(void *)v23 + 376))(v32);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v49, v26);
  }
}

uint64_t sub_24D4A7E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_24D4A7E20()
{
  uint64_t v0 = type metadata accessor for ItemReconciliation();
  if (v1 <= 0x3F)
  {
    uint64_t v0 = sub_24DCCA3F8();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return v0;
}

uint64_t sub_24D4A7F28(uint64_t a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v403 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v396 = v403;
  int v377 = *(_DWORD *)(v403 + 80);
  uint64_t v395 = swift_getAssociatedTypeWitness();
  uint64_t v398 = *(void *)(v395 - 8);
  uint64_t v406 = v398;
  int v375 = *(_DWORD *)(v398 + 80);
  uint64_t v372 = swift_getAssociatedTypeWitness();
  uint64_t v393 = *(void *)(v372 - 8);
  int v373 = *(_DWORD *)(v393 + 80);
  uint64_t v384 = v373;
  int v361 = v375 & 0xF8 | v373;
  uint64_t v397 = swift_getAssociatedTypeWitness();
  uint64_t v390 = *(void *)(v397 - 8);
  int v369 = *(_DWORD *)(v390 + 80);
  uint64_t v392 = swift_getAssociatedTypeWitness();
  uint64_t v382 = *(void *)(v392 - 8);
  int v367 = *(_DWORD *)(v382 + 80);
  uint64_t v366 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v366 - 8);
  uint64_t v3 = v403;
  int v4 = *(_DWORD *)(v2 + 80);
  uint64_t v388 = v4;
  uint64_t v386 = v367 & 0xF8 | v4 | 7u;
  uint64_t v404 = v386 | v369 & 0xF8;
  uint64_t v5 = v361 | v377 & 0xF8 | v404;
  int v6 = *(_DWORD *)(v396 + 84);
  if (v6) {
    uint64_t v7 = *(void *)(v3 + 64);
  }
  else {
    uint64_t v7 = *(void *)(v3 + 64) + 1;
  }
  uint64_t v371 = v393;
  unsigned int v8 = *(_DWORD *)(v393 + 84);
  if (*(_DWORD *)(v398 + 84) <= v8) {
    unsigned int v9 = *(_DWORD *)(v393 + 84);
  }
  else {
    unsigned int v9 = *(_DWORD *)(v398 + 84);
  }
  unsigned int v363 = v9;
  if (v9 <= 0x7FFFFFFE) {
    int v10 = 2147483646;
  }
  else {
    int v10 = v9;
  }
  uint64_t v11 = *(void *)(v398 + 64);
  uint64_t v12 = *(void *)(v393 + 64);
  uint64_t v364 = v390;
  unsigned int v13 = *(_DWORD *)(v390 + 84);
  if (v13) {
    uint64_t v14 = *(void *)(v390 + 64);
  }
  else {
    uint64_t v14 = *(void *)(v390 + 64) + 1;
  }
  uint64_t v391 = v382;
  unsigned int v15 = *(_DWORD *)(v382 + 84);
  uint64_t v365 = *(void *)(v366 - 8);
  unsigned int v16 = *(_DWORD *)(v2 + 84);
  if (v15 <= v16) {
    unsigned int v17 = *(_DWORD *)(v2 + 84);
  }
  else {
    unsigned int v17 = *(_DWORD *)(v382 + 84);
  }
  unsigned int v360 = v17;
  if (v17 <= 0x7FFFFFFE) {
    int v18 = 2147483646;
  }
  else {
    int v18 = v17;
  }
  uint64_t v19 = *(void *)(v382 + 64);
  uint64_t v20 = *(void *)(*(void *)(v366 - 8) + 64);
  if (v6) {
    unsigned int v21 = v6 - 1;
  }
  else {
    unsigned int v21 = 0;
  }
  int v400 = v10;
  int v22 = v10 - 1;
  if (v21 <= v10 - 1) {
    unsigned int v23 = v10 - 1;
  }
  else {
    unsigned int v23 = v21;
  }
  if (v23 <= 0x7FFFFFFE) {
    unsigned int v24 = 2147483646;
  }
  else {
    unsigned int v24 = v23;
  }
  if (v13) {
    unsigned int v25 = v13 - 1;
  }
  else {
    unsigned int v25 = 0;
  }
  int v399 = v18;
  unsigned int v26 = v18 - 1;
  if (v25 <= v26) {
    unsigned int v27 = v26;
  }
  else {
    unsigned int v27 = v25;
  }
  if (v27 <= 0x7FFFFFFE) {
    unsigned int v28 = 2147483646;
  }
  else {
    unsigned int v28 = v27;
  }
  if (v28 <= v24) {
    unsigned int v29 = v24;
  }
  else {
    unsigned int v29 = v28;
  }
  if (v29 <= 0x7FFFFFFF) {
    int v30 = 0x7FFFFFFF;
  }
  else {
    int v30 = v29;
  }
  uint64_t v31 = ~v5;
  if (v5 != 7) {
    goto LABEL_48;
  }
  if (((v375 | v377 | v373 | v369 | v367 | v4) & 0x100000) != 0) {
    goto LABEL_48;
  }
  uint64_t v32 = v361 | 7u;
  uint64_t v394 = v11 + 7;
  uint64_t v355 = v373 + 8;
  uint64_t v346 = v12 + 7;
  size_t v33 = ((((v12 + 7 + ((v355 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v373)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v383 = v7 + 7;
  uint64_t v34 = v32 + 9;
  unint64_t v358 = ((((((((v32 + 9 + ((((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v32) + v33 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  uint64_t v362 = v358 + v404;
  uint64_t v389 = v19 + 7;
  uint64_t v354 = v4 + 8;
  uint64_t v347 = v20 + 7;
  unint64_t v335 = (((v20 + 7 + ((v354 + ((v19 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v4)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v378 = v14 + 7;
  uint64_t v381 = v386 + 9;
  size_t v374 = v335 + 16;
  unint64_t v35 = ((((((((v386 + 9 + ((((v14 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v386) + v335 + 16 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v36 = (((v35 + ((v358 + v404) & ~v404) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v345 = v5 + 9;
  size_t v350 = v36 + 8;
  if (((v5
       + 9
       + ((((v36 + 15 + ((v36 + 8 + v5 + ((v5 + 9) & ~v5)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v5)
     + v36
     + 8 > 0x18)
  {
LABEL_48:
    uint64_t v39 = *a2;
    *(void *)a1 = *a2;
    uint64_t v40 = v39 + ((v5 + 16) & v31);
    swift_retain();
    return v40;
  }
  unint64_t v341 = v36 + 15;
  unint64_t v329 = (((v12 + 7 + ((v384 + 8 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v384)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  int v342 = v30;
  unsigned int v343 = v24;
  unsigned int v332 = v25;
  int v333 = v22;
  unsigned int v336 = v21;
  unsigned int v337 = v28;
  unsigned int v330 = v26;
  unsigned int v331 = v13;
  unsigned int v334 = *(_DWORD *)(v396 + 84);
  size_t __n = v7;
  size_t v349 = v14;
  unsigned int v368 = *(_DWORD *)(v406 + 84);
  unsigned int v344 = v8;
  unsigned int v370 = v15;
  uint64_t v376 = ~v32;
  *(void *)a1 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  uint64_t v339 = a1 + v5 + 9;
  uint64_t v37 = (void *)(v339 & v31);
  uint64_t v356 = ~v5;
  uint64_t v340 = (uint64_t)a2 + v5 + 9;
  uint64_t v38 = (const void *)(v340 & v31);
  uint64_t v352 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v396 + 48);
  unsigned int v338 = v16;
  if (v352(v340 & v31, 1, AssociatedTypeWitness))
  {
    memcpy(v37, v38, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v396 + 16))(v37, v38, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v396 + 56))(v37, 0, 1, AssociatedTypeWitness);
  }
  unint64_t v41 = v358;
  uint64_t v42 = (void *)(((unint64_t)v37 + v383) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v43 = (void *)(((unint64_t)v38 + v383) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v42 = *v43;
  uint64_t v353 = ~v384;
  unint64_t v44 = ((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = ((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v44 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  uint64_t v46 = (void *)((v34 + v44) & v376);
  uint64_t v47 = (const void *)((v34 + v45) & v376);
  unint64_t v359 = v35;
  size_t v380 = v33;
  uint64_t v357 = v34;
  if (v368 == v400)
  {
    if (!(*(unsigned int (**)(const void *))(v406 + 48))(v47)) {
      goto LABEL_60;
    }
  }
  else
  {
    uint64_t v48 = (void *)(((unint64_t)v47 + v394) & 0xFFFFFFFFFFFFFFF8);
    if (v363 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v371 + 48))(((unint64_t)v48 + v355) & v353, v344, v372))
      {
LABEL_60:
        uint64_t v48 = (void *)(((unint64_t)v47 + v394) & 0xFFFFFFFFFFFFFFF8);
LABEL_61:
        (*(void (**)(void *, const void *, uint64_t))(v406 + 16))(v46, v47, v395);
        uint64_t v50 = (void *)(((unint64_t)v46 + v394) & 0xFFFFFFFFFFFFFFF8);
        void *v50 = *v48;
        unint64_t v51 = ((unint64_t)v50 + v355) & v353;
        unint64_t v52 = ((unint64_t)v48 + v355) & v353;
        uint64_t v53 = *(void (**)(unint64_t, unint64_t, uint64_t))(v371 + 16);
        swift_bridgeObjectRetain();
        v53(v51, v52, v372);
        uint64_t v54 = (void *)((v346 + v51) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v55 = (void *)((v346 + v52) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v54 = *v55;
        uint64_t v56 = (void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v57 = (void *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v56 = *v57;
        v56[1] = v57[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_62;
      }
    }
    else
    {
      uint64_t v49 = *v48;
      if (*v48 >= 0xFFFFFFFFuLL) {
        LODWORD(v49) = -1;
      }
      if ((v49 + 1) < 2) {
        goto LABEL_61;
      }
    }
  }
  memcpy(v46, v47, v33);
LABEL_62:
  uint64_t v58 = (uint64_t)v47 + v33 + 10;
  uint64_t v59 = (uint64_t)v47 + v33 + 34;
  *((unsigned char *)v46 + v33) = *((unsigned char *)v47 + v33);
  uint64_t v60 = (uint64_t)v46 + v33 + 34;
  *(unsigned char *)(((unint64_t)v46 + v33) | 1) = *(unsigned char *)(((unint64_t)v47 + v33) | 1);
  uint64_t v385 = ~v404;
  *(unsigned char *)(((unint64_t)v46 + v33) | 2) = *(unsigned char *)(((unint64_t)v47 + v33) | 2);
  unint64_t v61 = ((unint64_t)v46 + v33 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v62 = *(void **)(v58 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v63 = *(void **)((v58 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v64 = *(unsigned char *)((v58 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v62, v63, v64);
  *(void *)unint64_t v61 = v62;
  *(void *)(v61 + 8) = v63;
  *(unsigned char *)(v61 + 16) = v64;
  unint64_t v65 = v60 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v66 = v59 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v67 = *(void *)((v59 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  if (!(4 * (v67 & 3)) || ((v67 >> 2) & 0xFFFFFFF3 | (4 * (v67 & 3))) == 0xF)
  {
    uint64_t v72 = (uint64_t *)(v66 + 8);
    *(void *)unint64_t v65 = *(void *)v66;
    unint64_t v73 = *(void *)(v66 + 16);
    if (v73 >> 60 == 15)
    {
      *(_OWORD *)(v65 + 8) = *(_OWORD *)v72;
    }
    else
    {
      uint64_t v74 = *v72;
      sub_24D3F9C18(*v72, *(void *)(v66 + 16));
      *(void *)(v65 + 8) = v74;
      *(void *)(v65 + 16) = v73;
    }
    unint64_t v71 = v359;
    long long v75 = *(_OWORD *)(v66 + 24);
    *(unsigned char *)(v65 + 40) = *(unsigned char *)(v66 + 40);
    *(_OWORD *)(v65 + 24) = v75;
    *(void *)(v65 + 48) = *(void *)(v66 + 48);
  }
  else
  {
    long long v68 = *(_OWORD *)v66;
    long long v69 = *(_OWORD *)(v66 + 16);
    long long v70 = *(_OWORD *)(v66 + 32);
    *(void *)(v65 + 48) = *(void *)(v66 + 48);
    *(_OWORD *)(v65 + 16) = v69;
    *(_OWORD *)(v65 + 32) = v70;
    *(_OWORD *)unint64_t v65 = v68;
    unint64_t v71 = v359;
  }
  uint64_t v387 = ~v386;
  uint64_t v76 = (void *)((v65 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v77 = (void **)((v66 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v78 = *v77;
  *uint64_t v76 = *v77;
  *(void *)(((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v79 = (void *)(((unint64_t)v37 + v404 + v41) & v385);
  uint64_t v80 = (const void *)(((unint64_t)v38 + v404 + v41) & v385);
  uint64_t v81 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v364 + 48);
  id v82 = v78;
  id v351 = v81;
  if (v81(v80, 1, v397))
  {
    memcpy(v79, v80, v349);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v364 + 16))(v79, v80, v397);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v364 + 56))(v79, 0, 1, v397);
  }
  unsigned int v83 = (void *)(((unint64_t)v79 + v378) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v84 = (void *)(((unint64_t)v80 + v378) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v83 = *v84;
  uint64_t v405 = ~v388;
  unint64_t v85 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v86 = ((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v85 = *(void *)v86;
  *(unsigned char *)(v85 + 8) = *(unsigned char *)(v86 + 8);
  uint64_t v87 = (char *)((v381 + v85) & v387);
  uint64_t v88 = (const void *)((v381 + v86) & v387);
  if (v370 == v399)
  {
    if (!(*(unsigned int (**)(const void *))(v391 + 48))(v88)) {
      goto LABEL_82;
    }
  }
  else
  {
    uint64_t v89 = (void *)(((unint64_t)v88 + v389) & 0xFFFFFFFFFFFFFFF8);
    if (v360 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v365 + 48))(((unint64_t)v89 + v354) & v405, v338, v366))
      {
LABEL_82:
        uint64_t v89 = (void *)(((unint64_t)v88 + v389) & 0xFFFFFFFFFFFFFFF8);
LABEL_83:
        (*(void (**)(char *, const void *, uint64_t))(v391 + 16))(v87, v88, v392);
        uint64_t v92 = (void *)((unint64_t)&v87[v389] & 0xFFFFFFFFFFFFFFF8);
        void *v92 = *v89;
        unint64_t v93 = ((unint64_t)v92 + v354) & v405;
        unint64_t v94 = ((unint64_t)v89 + v354) & v405;
        char v95 = *(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 16);
        swift_bridgeObjectRetain();
        v95(v93, v94, v366);
        uint64_t v96 = (void *)((v347 + v93) & 0xFFFFFFFFFFFFFFF8);
        id v97 = (void *)((v347 + v94) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v96 = *v97;
        uint64_t v98 = (void *)(((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v99 = (void *)(((unint64_t)v97 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v98 = *v99;
        v98[1] = v99[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v91 = v335 + 16;
        goto LABEL_84;
      }
    }
    else
    {
      uint64_t v90 = *v89;
      if (*v89 >= 0xFFFFFFFFuLL) {
        LODWORD(v90) = -1;
      }
      if ((v90 + 1) < 2) {
        goto LABEL_83;
      }
    }
  }
  unint64_t v91 = v335 + 16;
  memcpy(v87, v88, v374);
LABEL_84:
  uint64_t v100 = (unsigned char *)(((unint64_t)v88 + v91) | 1);
  uint64_t v101 = (unsigned char *)(((unint64_t)v88 + v91) | 2);
  uint64_t v102 = (uint64_t)v88 + v91 + 10;
  uint64_t v104 = (uint64_t)v88 + v91 + 34;
  char v103 = *((unsigned char *)v88 + v91);
  uint64_t v105 = (unsigned char *)((unint64_t)&v87[v91] | 1);
  uint64_t v106 = (unsigned char *)((unint64_t)&v87[v91] | 2);
  uint64_t v107 = (uint64_t)&v87[v91 + 10];
  uint64_t v108 = &v87[v91];
  *uint64_t v108 = v103;
  *uint64_t v105 = *v100;
  unsigned char *v106 = *v101;
  unint64_t v109 = v107 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v110 = *(void **)(v102 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v111 = *(void **)((v102 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v112 = *(unsigned char *)((v102 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v110, v111, v112);
  *(void *)unint64_t v109 = v110;
  *(void *)(v109 + 8) = v111;
  *(unsigned char *)(v109 + 16) = v112;
  unint64_t v113 = (unint64_t)(v108 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v114 = v104 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v115 = *(void *)(v114 + 16) >> 60;
  if (!(4 * (v115 & 3)) || ((v115 >> 2) & 0xFFFFFFF3 | (4 * (v115 & 3))) == 0xF)
  {
    int v121 = (uint64_t *)(v114 + 8);
    *(void *)unint64_t v113 = *(void *)v114;
    unint64_t v122 = *(void *)(v114 + 16);
    uint64_t v120 = v357;
    if (v122 >> 60 == 15)
    {
      *(_OWORD *)(v113 + 8) = *(_OWORD *)v121;
    }
    else
    {
      uint64_t v123 = *v121;
      sub_24D3F9C18(*v121, *(void *)(v114 + 16));
      *(void *)(v113 + 8) = v123;
      *(void *)(v113 + 16) = v122;
    }
    uint64_t v119 = AssociatedTypeWitness;
    long long v124 = *(_OWORD *)(v114 + 24);
    *(unsigned char *)(v113 + 40) = *(unsigned char *)(v114 + 40);
    *(_OWORD *)(v113 + 24) = v124;
    *(void *)(v113 + 48) = *(void *)(v114 + 48);
  }
  else
  {
    long long v116 = *(_OWORD *)v114;
    long long v117 = *(_OWORD *)(v114 + 16);
    long long v118 = *(_OWORD *)(v114 + 32);
    *(void *)(v113 + 48) = *(void *)(v114 + 48);
    *(_OWORD *)(v113 + 16) = v117;
    *(_OWORD *)(v113 + 32) = v118;
    *(_OWORD *)unint64_t v113 = v116;
    uint64_t v119 = AssociatedTypeWitness;
    uint64_t v120 = v357;
  }
  uint64_t v125 = (void *)((v113 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v126 = (void **)((v114 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v127 = *v126;
  *uint64_t v125 = *v126;
  *(void *)(((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v126 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v79 + v71) = *((unsigned char *)v80 + v71);
  unint64_t v128 = ((unint64_t)v79 + v71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v129 = ((unint64_t)v80 + v71) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v128 + 8) = *(void *)(v129 + 8);
  uint64_t v130 = (_OWORD *)((v128 + 23) & 0xFFFFFFFFFFFFFFF8);
  int v131 = (_OWORD *)((v129 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v130 = *v131;
  unint64_t v132 = ((unint64_t)v130 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v133 = ((unint64_t)v131 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v132 = *(void *)v133;
  *(unsigned char *)(v132 + 8) = *(unsigned char *)(v133 + 8);
  *(void *)(((unint64_t)v130 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v131 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v134 = (void *)(((v339 | v5) + v350) & v356);
  uint64_t v135 = (const void *)(((v340 | v5) + v350) & v356);
  id v136 = v127;
  swift_bridgeObjectRetain();
  if (v352((uint64_t)v135, 1, v119))
  {
    memcpy(v134, v135, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v396 + 16))(v134, v135, v119);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v396 + 56))(v134, 0, 1, v119);
  }
  uint64_t v137 = (void *)(((unint64_t)v134 + v383) & 0xFFFFFFFFFFFFFFF8);
  int v138 = (void *)(((unint64_t)v135 + v383) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v137 = *v138;
  unint64_t v139 = ((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v140 = ((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v139 = *(void *)v140;
  *(unsigned char *)(v139 + 8) = *(unsigned char *)(v140 + 8);
  char v141 = (void *)((v120 + v139) & v376);
  uint64_t v142 = (const void *)((v120 + v140) & v376);
  if (v368 == v400)
  {
    if (!(*(unsigned int (**)(const void *))(v406 + 48))(v142)) {
      goto LABEL_104;
    }
  }
  else
  {
    uint64_t v143 = (void *)(((unint64_t)v142 + v394) & 0xFFFFFFFFFFFFFFF8);
    if (v363 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v371 + 48))(((unint64_t)v143 + v355) & v353, v344, v372))
      {
LABEL_104:
        uint64_t v143 = (void *)(((unint64_t)v142 + v394) & 0xFFFFFFFFFFFFFFF8);
LABEL_105:
        (*(void (**)(void *, const void *, uint64_t))(v406 + 16))(v141, v142, v395);
        uint64_t v145 = (void *)(((unint64_t)v141 + v394) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v145 = *v143;
        unint64_t v146 = ((unint64_t)v145 + v355) & v353;
        unint64_t v147 = ((unint64_t)v143 + v355) & v353;
        unint64_t v148 = *(void (**)(unint64_t, unint64_t, uint64_t))(v371 + 16);
        swift_bridgeObjectRetain();
        v148(v146, v147, v372);
        uint64_t v149 = (void *)((v346 + v146) & 0xFFFFFFFFFFFFFFF8);
        os_log_type_t v150 = (void *)((v346 + v147) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v149 = *v150;
        uint64_t v151 = (void *)(((unint64_t)v149 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v152 = (void *)(((unint64_t)v150 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v151 = *v152;
        v151[1] = v152[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_106;
      }
    }
    else
    {
      uint64_t v144 = *v143;
      if (*v143 >= 0xFFFFFFFFuLL) {
        LODWORD(v144) = -1;
      }
      if ((v144 + 1) < 2) {
        goto LABEL_105;
      }
    }
  }
  memcpy(v141, v142, v380);
LABEL_106:
  uint64_t v153 = (uint64_t)v142 + v380 + 10;
  uint64_t v154 = (uint64_t)v142 + v380 + 34;
  *((unsigned char *)v141 + v380) = *((unsigned char *)v142 + v380);
  uint64_t v155 = (uint64_t)v141 + v380 + 34;
  *(unsigned char *)(((unint64_t)v141 + v380) | 1) = *(unsigned char *)(((unint64_t)v142 + v380) | 1);
  *(unsigned char *)(((unint64_t)v141 + v380) | 2) = *(unsigned char *)(((unint64_t)v142 + v380) | 2);
  unint64_t v156 = ((unint64_t)v141 + v380 + 10) & 0xFFFFFFFFFFFFFFF8;
  int v157 = *(void **)(v153 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v158 = *(void **)((v153 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v159 = *(unsigned char *)((v153 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v157, v158, v159);
  *(void *)unint64_t v156 = v157;
  *(void *)(v156 + 8) = v158;
  *(unsigned char *)(v156 + 16) = v159;
  unint64_t v160 = v155 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v161 = v154 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v162 = *(void *)((v154 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  if (!(4 * (v162 & 3)) || ((v162 >> 2) & 0xFFFFFFF3 | (4 * (v162 & 3))) == 0xF)
  {
    uint64_t v166 = (uint64_t *)(v161 + 8);
    *(void *)unint64_t v160 = *(void *)v161;
    unint64_t v167 = *(void *)(v161 + 16);
    if (v167 >> 60 == 15)
    {
      *(_OWORD *)(v160 + 8) = *(_OWORD *)v166;
    }
    else
    {
      uint64_t v168 = *v166;
      sub_24D3F9C18(*v166, *(void *)(v161 + 16));
      *(void *)(v160 + 8) = v168;
      *(void *)(v160 + 16) = v167;
    }
    long long v169 = *(_OWORD *)(v161 + 24);
    *(unsigned char *)(v160 + 40) = *(unsigned char *)(v161 + 40);
    *(_OWORD *)(v160 + 24) = v169;
    *(void *)(v160 + 48) = *(void *)(v161 + 48);
  }
  else
  {
    long long v163 = *(_OWORD *)v161;
    long long v164 = *(_OWORD *)(v161 + 16);
    long long v165 = *(_OWORD *)(v161 + 32);
    *(void *)(v160 + 48) = *(void *)(v161 + 48);
    *(_OWORD *)(v160 + 16) = v164;
    *(_OWORD *)(v160 + 32) = v165;
    *(_OWORD *)unint64_t v160 = v163;
  }
  unint64_t v170 = (void *)((v160 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v171 = (void **)((v161 + 63) & 0xFFFFFFFFFFFFFFF8);
  int v172 = *v171;
  *unint64_t v170 = *v171;
  *(void *)(((unint64_t)v170 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v171 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v173 = (void *)(((unint64_t)v134 + v362) & v385);
  uint64_t v174 = (const void *)(((unint64_t)v135 + v362) & v385);
  id v175 = v172;
  if (v351(v174, 1, v397))
  {
    memcpy(v173, v174, v349);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v364 + 16))(v173, v174, v397);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v364 + 56))(v173, 0, 1, v397);
  }
  uint64_t v176 = (void *)(((unint64_t)v173 + v378) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v177 = (void *)(((unint64_t)v174 + v378) & 0xFFFFFFFFFFFFFFF8);
  void *v176 = *v177;
  unint64_t v178 = ((unint64_t)v176 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v179 = ((unint64_t)v177 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v178 = *(void *)v179;
  *(unsigned char *)(v178 + 8) = *(unsigned char *)(v179 + 8);
  uint64_t v180 = (char *)((v381 + v178) & v387);
  uint64_t v181 = (const void *)((v381 + v179) & v387);
  if (v370 == v399)
  {
    if (!(*(unsigned int (**)(const void *))(v391 + 48))(v181)) {
      goto LABEL_126;
    }
  }
  else
  {
    uint64_t v182 = (void *)(((unint64_t)v181 + v389) & 0xFFFFFFFFFFFFFFF8);
    if (v360 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v365 + 48))(((unint64_t)v182 + v354) & v405, v338, v366))
      {
LABEL_126:
        uint64_t v182 = (void *)(((unint64_t)v181 + v389) & 0xFFFFFFFFFFFFFFF8);
LABEL_127:
        (*(void (**)(char *, const void *, uint64_t))(v391 + 16))(v180, v181, v392);
        uint64_t v185 = (void *)((unint64_t)&v180[v389] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v185 = *v182;
        unint64_t v186 = ((unint64_t)v185 + v354) & v405;
        unint64_t v187 = ((unint64_t)v182 + v354) & v405;
        uint64_t v188 = *(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 16);
        swift_bridgeObjectRetain();
        v188(v186, v187, v366);
        uint64_t v189 = (void *)((v347 + v186) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v190 = (void *)((v347 + v187) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v189 = *v190;
        uint64_t v191 = (void *)(((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v192 = (void *)(((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v191 = *v192;
        v191[1] = v192[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v184 = v335 + 16;
        goto LABEL_128;
      }
    }
    else
    {
      uint64_t v183 = *v182;
      if (*v182 >= 0xFFFFFFFFuLL) {
        LODWORD(v183) = -1;
      }
      if ((v183 + 1) < 2) {
        goto LABEL_127;
      }
    }
  }
  unint64_t v184 = v335 + 16;
  memcpy(v180, v181, v374);
LABEL_128:
  uint64_t v193 = (unsigned char *)(((unint64_t)v181 + v184) | 1);
  uint64_t v194 = (unsigned char *)(((unint64_t)v181 + v184) | 2);
  uint64_t v195 = (uint64_t)v181 + v184 + 10;
  uint64_t v197 = (uint64_t)v181 + v184 + 34;
  char v196 = *((unsigned char *)v181 + v184);
  uint64_t v198 = (unsigned char *)((unint64_t)&v180[v184] | 1);
  uint64_t v199 = (unsigned char *)((unint64_t)&v180[v184] | 2);
  uint64_t v200 = (uint64_t)&v180[v184 + 10];
  int v201 = &v180[v184];
  *int v201 = v196;
  *uint64_t v198 = *v193;
  *uint64_t v199 = *v194;
  unint64_t v202 = v200 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v203 = *(void **)(v195 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v204 = *(void **)((v195 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v205 = *(unsigned char *)((v195 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v203, v204, v205);
  *(void *)unint64_t v202 = v203;
  *(void *)(v202 + 8) = v204;
  *(unsigned char *)(v202 + 16) = v205;
  unint64_t v206 = (unint64_t)(v201 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v207 = v197 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v208 = *(void *)((v197 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  if (!(4 * (v208 & 3)) || ((v208 >> 2) & 0xFFFFFFF3 | (4 * (v208 & 3))) == 0xF)
  {
    uint64_t v215 = (uint64_t *)(v207 + 8);
    *(void *)unint64_t v206 = *(void *)v207;
    unint64_t v216 = *(void *)(v207 + 16);
    unint64_t v213 = v359;
    size_t v214 = v380;
    if (v216 >> 60 == 15)
    {
      *(_OWORD *)(v206 + 8) = *(_OWORD *)v215;
    }
    else
    {
      uint64_t v217 = *v215;
      sub_24D3F9C18(*v215, *(void *)(v207 + 16));
      *(void *)(v206 + 8) = v217;
      *(void *)(v206 + 16) = v216;
    }
    uint64_t v212 = v357;
    long long v218 = *(_OWORD *)(v207 + 24);
    *(unsigned char *)(v206 + 40) = *(unsigned char *)(v207 + 40);
    *(_OWORD *)(v206 + 24) = v218;
    *(void *)(v206 + 48) = *(void *)(v207 + 48);
  }
  else
  {
    long long v209 = *(_OWORD *)v207;
    long long v210 = *(_OWORD *)(v207 + 16);
    long long v211 = *(_OWORD *)(v207 + 32);
    *(void *)(v206 + 48) = *(void *)(v207 + 48);
    *(_OWORD *)(v206 + 16) = v210;
    *(_OWORD *)(v206 + 32) = v211;
    *(_OWORD *)unint64_t v206 = v209;
    uint64_t v212 = v357;
    unint64_t v213 = v359;
    size_t v214 = v380;
  }
  uint64_t v219 = (void *)((v206 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v220 = (void **)((v207 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v221 = *v220;
  *uint64_t v219 = *v220;
  *(void *)(((unint64_t)v219 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v220 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v173 + v213) = *((unsigned char *)v174 + v213);
  unint64_t v222 = ((unint64_t)v173 + v213) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v223 = ((unint64_t)v174 + v213) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v222 + 8) = *(void *)(v223 + 8);
  uint64_t v224 = (_OWORD *)((v222 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v225 = (_OWORD *)((v223 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v224 = *v225;
  unint64_t v226 = ((unint64_t)v224 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v227 = ((unint64_t)v225 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v226 = *(void *)v227;
  *(unsigned char *)(v226 + 8) = *(unsigned char *)(v227 + 8);
  *(void *)(((unint64_t)v224 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v225 + 39) & 0xFFFFFFFFFFFFFFF8);
  char v228 = (_OWORD *)(((unint64_t)v134 + v341) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v229 = (_OWORD *)(((unint64_t)v135 + v341) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v228 = *v229;
  unint64_t v230 = ((unint64_t)v228 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v231 = ((unint64_t)v229 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v232 = *(void *)v231;
  *(unsigned char *)(v230 + 8) = *(unsigned char *)(v231 + 8);
  *(void *)unint64_t v230 = v232;
  uint64_t v233 = (void *)((v345 + v230) & v356);
  uint64_t v234 = (const void *)((v345 + v231) & v356);
  id v235 = v221;
  swift_bridgeObjectRetain();
  if (v343 == v342)
  {
    if (v336 == v343)
    {
      uint64_t v236 = AssociatedTypeWitness;
      if (v334 < 2) {
        goto LABEL_169;
      }
      unsigned int v237 = ((uint64_t (*)(const void *))v352)(v234);
LABEL_143:
      if (v237 >= 2) {
        goto LABEL_171;
      }
      goto LABEL_169;
    }
    unint64_t v239 = (v212 + (((((unint64_t)v234 + v383) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v376;
    if (v333 == v343)
    {
      if (v368 == v400)
      {
        unsigned int v240 = (*(uint64_t (**)(unint64_t))(v406 + 48))(v239);
        uint64_t v236 = AssociatedTypeWitness;
        goto LABEL_168;
      }
      unsigned int v242 = (unint64_t *)((v394 + v239) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v236 = AssociatedTypeWitness;
      if (v363 > 0x7FFFFFFE)
      {
        unsigned int v240 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v371 + 48))(((unint64_t)v242 + v355) & v353, v344, v372);
        goto LABEL_168;
      }
LABEL_162:
      unint64_t v244 = *v242;
      if (v244 >= 0xFFFFFFFF) {
        unsigned int v240 = -1;
      }
      else {
        unsigned int v240 = v244;
      }
      if (v240 + 1 < 2) {
        goto LABEL_169;
      }
      goto LABEL_168;
    }
    unint64_t v241 = v329;
LABEL_157:
    unint64_t v243 = *(void *)((((v241 + v239 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
    if (v243 >= 0xFFFFFFFF) {
      LODWORD(v243) = -1;
    }
    uint64_t v236 = AssociatedTypeWitness;
    if ((v243 + 1) >= 2) {
      goto LABEL_171;
    }
    goto LABEL_169;
  }
  unint64_t v238 = ((unint64_t)v234 + v362) & v385;
  if (v337 != v342)
  {
    uint64_t v236 = AssociatedTypeWitness;
    if (*(void *)(((v238 + v213) & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
      goto LABEL_171;
    }
    goto LABEL_169;
  }
  if (v332 == v337)
  {
    uint64_t v236 = AssociatedTypeWitness;
    if (v331 < 2) {
      goto LABEL_169;
    }
    unsigned int v237 = ((uint64_t (*)(unint64_t))v351)(v238);
    goto LABEL_143;
  }
  unint64_t v239 = (v381 + ((((v378 + v238) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v387;
  if (v330 != v337)
  {
    unint64_t v241 = v335;
    goto LABEL_157;
  }
  uint64_t v236 = AssociatedTypeWitness;
  if (v370 == v399)
  {
    unsigned int v240 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v391 + 48))(v239, v370, v392);
    goto LABEL_168;
  }
  unsigned int v242 = (unint64_t *)((v389 + v239) & 0xFFFFFFFFFFFFFFF8);
  if (v360 <= 0x7FFFFFFE) {
    goto LABEL_162;
  }
  unsigned int v240 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v365 + 48))(((unint64_t)v242 + v354) & v405, v338, v366);
LABEL_168:
  if (v240 >= 2)
  {
LABEL_171:
    memcpy(v233, v234, v350);
    return a1;
  }
LABEL_169:
  if (v352((uint64_t)v234, 1, v236))
  {
    memcpy(v233, v234, __n);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v396 + 16))(v233, v234, v236);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v396 + 56))(v233, 0, 1, v236);
  }
  uint64_t v245 = (void *)(((unint64_t)v233 + v383) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v246 = (void *)(((unint64_t)v234 + v383) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v245 = *v246;
  unint64_t v247 = ((unint64_t)v245 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v248 = ((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v247 = *(void *)v248;
  *(unsigned char *)(v247 + 8) = *(unsigned char *)(v248 + 8);
  uint64_t v249 = (void *)((v212 + v247) & v376);
  uint64_t v250 = (const void *)((v212 + v248) & v376);
  if (v368 == v400)
  {
    if (!(*(unsigned int (**)(const void *, void, uint64_t))(v406 + 48))(v250, v368, v395)) {
      goto LABEL_183;
    }
  }
  else
  {
    uint64_t v251 = (void *)(((unint64_t)v250 + v394) & 0xFFFFFFFFFFFFFFF8);
    if (v363 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v371 + 48))(((unint64_t)v251 + v355) & v353, v344, v372))
      {
LABEL_183:
        uint64_t v251 = (void *)(((unint64_t)v250 + v394) & 0xFFFFFFFFFFFFFFF8);
LABEL_184:
        (*(void (**)(void *, const void *, uint64_t))(v406 + 16))(v249, v250, v395);
        uint64_t v253 = (void *)(((unint64_t)v249 + v394) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v253 = *v251;
        unint64_t v254 = ((unint64_t)v253 + v355) & v353;
        unint64_t v255 = ((unint64_t)v251 + v355) & v353;
        uint64_t v256 = *(void (**)(unint64_t, unint64_t, uint64_t))(v371 + 16);
        swift_bridgeObjectRetain();
        v256(v254, v255, v372);
        uint64_t v257 = (void *)((v346 + v254) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v258 = (void *)((v346 + v255) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v257 = *v258;
        uint64_t v259 = (void *)(((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v260 = (void *)(((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v259 = *v260;
        v259[1] = v260[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_185;
      }
    }
    else
    {
      uint64_t v252 = *v251;
      if (*v251 >= 0xFFFFFFFFuLL) {
        LODWORD(v252) = -1;
      }
      if ((v252 + 1) < 2) {
        goto LABEL_184;
      }
    }
  }
  memcpy(v249, v250, v214);
LABEL_185:
  uint64_t v261 = (uint64_t)v250 + v214 + 10;
  uint64_t v262 = (uint64_t)v250 + v214 + 34;
  *((unsigned char *)v249 + v214) = *((unsigned char *)v250 + v214);
  uint64_t v263 = (uint64_t)v249 + v214 + 34;
  *(unsigned char *)(((unint64_t)v249 + v214) | 1) = *(unsigned char *)(((unint64_t)v250 + v214) | 1);
  *(unsigned char *)(((unint64_t)v249 + v214) | 2) = *(unsigned char *)(((unint64_t)v250 + v214) | 2);
  unint64_t v264 = ((unint64_t)v249 + v214 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v265 = *(void **)(v261 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v266 = *(void **)((v261 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v267 = *(unsigned char *)((v261 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v265, v266, v267);
  *(void *)unint64_t v264 = v265;
  *(void *)(v264 + 8) = v266;
  *(unsigned char *)(v264 + 16) = v267;
  unint64_t v268 = v263 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v269 = v262 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v270 = *(void *)(v269 + 16) >> 60;
  if (!(4 * (v270 & 3)) || ((v270 >> 2) & 0xFFFFFFF3 | (4 * (v270 & 3))) == 0xF)
  {
    uint64_t v274 = (uint64_t *)(v269 + 8);
    *(void *)unint64_t v268 = *(void *)v269;
    unint64_t v275 = *(void *)(v269 + 16);
    if (v275 >> 60 == 15)
    {
      *(_OWORD *)(v268 + 8) = *(_OWORD *)v274;
    }
    else
    {
      uint64_t v276 = *v274;
      sub_24D3F9C18(*v274, *(void *)(v269 + 16));
      *(void *)(v268 + 8) = v276;
      *(void *)(v268 + 16) = v275;
    }
    long long v277 = *(_OWORD *)(v269 + 24);
    *(unsigned char *)(v268 + 40) = *(unsigned char *)(v269 + 40);
    *(_OWORD *)(v268 + 24) = v277;
    *(void *)(v268 + 48) = *(void *)(v269 + 48);
  }
  else
  {
    long long v271 = *(_OWORD *)v269;
    long long v272 = *(_OWORD *)(v269 + 16);
    long long v273 = *(_OWORD *)(v269 + 32);
    *(void *)(v268 + 48) = *(void *)(v269 + 48);
    *(_OWORD *)(v268 + 16) = v272;
    *(_OWORD *)(v268 + 32) = v273;
    *(_OWORD *)unint64_t v268 = v271;
  }
  unint64_t v278 = (void *)((v268 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v279 = (void **)((v269 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v280 = *v279;
  void *v278 = *v279;
  *(void *)(((unint64_t)v278 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v279 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v281 = (void *)(((unint64_t)v233 + v362) & v385);
  uint64_t v282 = (const void *)(((unint64_t)v234 + v362) & v385);
  id v283 = v280;
  if (v351(v282, 1, v397))
  {
    memcpy(v281, v282, v349);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v364 + 16))(v281, v282, v397);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v364 + 56))(v281, 0, 1, v397);
  }
  uint64_t v284 = (void *)(((unint64_t)v281 + v378) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v285 = (void *)(((unint64_t)v282 + v378) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v284 = *v285;
  unint64_t v286 = ((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v287 = ((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v286 = *(void *)v287;
  *(unsigned char *)(v286 + 8) = *(unsigned char *)(v287 + 8);
  uint64_t v288 = (void *)((v381 + v286) & v387);
  uint64_t v289 = (const void *)((v381 + v287) & v387);
  if (v370 == v399)
  {
    if (!(*(unsigned int (**)(const void *))(v391 + 48))(v289)) {
      goto LABEL_205;
    }
LABEL_204:
    unint64_t v292 = v335 + 16;
    memcpy(v288, v289, v374);
    goto LABEL_207;
  }
  uint64_t v290 = (uint64_t *)(((unint64_t)v289 + v389) & 0xFFFFFFFFFFFFFFF8);
  if (v360 <= 0x7FFFFFFE)
  {
    uint64_t v291 = *v290;
    if ((unint64_t)*v290 >= 0xFFFFFFFF) {
      LODWORD(v291) = -1;
    }
    if ((v291 + 1) < 2) {
      goto LABEL_206;
    }
    goto LABEL_204;
  }
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v365 + 48))(((unint64_t)v290 + v354) & v405, v338, v366))
  {
    goto LABEL_204;
  }
LABEL_205:
  uint64_t v290 = (uint64_t *)(((unint64_t)v289 + v389) & 0xFFFFFFFFFFFFFFF8);
LABEL_206:
  (*(void (**)(void *, const void *, uint64_t))(v391 + 16))(v288, v289, v392);
  uint64_t v293 = (void *)(((unint64_t)v288 + v389) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v293 = *v290;
  unint64_t v294 = ((unint64_t)v293 + v354) & v405;
  unint64_t v295 = ((unint64_t)v290 + v354) & v405;
  v296 = *(void (**)(unint64_t, unint64_t, uint64_t))(v365 + 16);
  swift_bridgeObjectRetain();
  v296(v294, v295, v366);
  uint64_t v297 = (void *)((v347 + v294) & 0xFFFFFFFFFFFFFFF8);
  v298 = (void *)((v347 + v295) & 0xFFFFFFFFFFFFFFF8);
  void *v297 = *v298;
  uint64_t v299 = (void *)(((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v300 = (void *)(((unint64_t)v298 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v299 = *v300;
  v299[1] = v300[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v292 = v335 + 16;
LABEL_207:
  uint64_t v301 = (uint64_t)v289 + v292 + 10;
  uint64_t v302 = (uint64_t)v289 + v292 + 34;
  *((unsigned char *)v288 + v292) = *((unsigned char *)v289 + v292);
  uint64_t v303 = (uint64_t)v288 + v292 + 34;
  *(unsigned char *)(((unint64_t)v288 + v292) | 1) = *(unsigned char *)(((unint64_t)v289 + v292) | 1);
  *(unsigned char *)(((unint64_t)v288 + v292) | 2) = *(unsigned char *)(((unint64_t)v289 + v292) | 2);
  unint64_t v304 = ((unint64_t)v288 + v292 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v305 = *(void **)(v301 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v306 = *(void **)((v301 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v307 = *(unsigned char *)((v301 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v305, v306, v307);
  *(void *)unint64_t v304 = v305;
  *(void *)(v304 + 8) = v306;
  *(unsigned char *)(v304 + 16) = v307;
  unint64_t v308 = v303 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v309 = v302 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v310 = *(void *)(v309 + 16) >> 60;
  if (!(4 * (v310 & 3)) || ((v310 >> 2) & 0xFFFFFFF3 | (4 * (v310 & 3))) == 0xF)
  {
    uint64_t v314 = (uint64_t *)(v309 + 8);
    *(void *)unint64_t v308 = *(void *)v309;
    unint64_t v315 = *(void *)(v309 + 16);
    if (v315 >> 60 == 15)
    {
      *(_OWORD *)(v308 + 8) = *(_OWORD *)v314;
    }
    else
    {
      uint64_t v316 = *v314;
      sub_24D3F9C18(*v314, *(void *)(v309 + 16));
      *(void *)(v308 + 8) = v316;
      *(void *)(v308 + 16) = v315;
    }
    uint64_t v40 = a1;
    long long v317 = *(_OWORD *)(v309 + 24);
    *(unsigned char *)(v308 + 40) = *(unsigned char *)(v309 + 40);
    *(_OWORD *)(v308 + 24) = v317;
    *(void *)(v308 + 48) = *(void *)(v309 + 48);
  }
  else
  {
    long long v311 = *(_OWORD *)v309;
    long long v312 = *(_OWORD *)(v309 + 16);
    long long v313 = *(_OWORD *)(v309 + 32);
    *(void *)(v308 + 48) = *(void *)(v309 + 48);
    *(_OWORD *)(v308 + 16) = v312;
    *(_OWORD *)(v308 + 32) = v313;
    *(_OWORD *)unint64_t v308 = v311;
    uint64_t v40 = a1;
  }
  uint64_t v318 = (void *)((v308 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v319 = (void **)((v309 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v320 = *v319;
  *uint64_t v318 = *v319;
  *(void *)(((unint64_t)v318 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v281 + v213) = *((unsigned char *)v282 + v213);
  unint64_t v321 = ((unint64_t)v281 + v213) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v322 = ((unint64_t)v282 + v213) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v321 + 8) = *(void *)(v322 + 8);
  uint64_t v323 = (_OWORD *)((v321 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v324 = (_OWORD *)((v322 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v323 = *v324;
  unint64_t v325 = ((unint64_t)v323 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v326 = ((unint64_t)v324 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v325 = *(void *)v326;
  *(unsigned char *)(v325 + 8) = *(unsigned char *)(v326 + 8);
  *(void *)(((unint64_t)v323 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v324 + 39) & 0xFFFFFFFFFFFFFFF8);
  id v327 = v320;
  swift_bridgeObjectRetain();
  return v40;
}

unint64_t sub_24D4A9EF8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v107 = *(void *)(AssociatedTypeWitness - 8);
  int v1 = *(_DWORD *)(v107 + 80) & 0xF8;
  uint64_t v125 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v125 - 8);
  int v3 = *(_DWORD *)(v2 + 80) & 0xF8;
  uint64_t v119 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v119 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  int v6 = v3 | v5;
  uint64_t v7 = v3 | v5 | 7;
  int v8 = v6 | v1;
  uint64_t v127 = swift_getAssociatedTypeWitness();
  uint64_t v108 = *(void *)(v127 - 8);
  int v9 = *(_DWORD *)(v108 + 80) & 0xF8;
  uint64_t v123 = swift_getAssociatedTypeWitness();
  uint64_t v126 = *(void *)(v123 - 8);
  int v10 = *(_DWORD *)(v126 + 80) & 0xF8;
  uint64_t v113 = swift_getAssociatedTypeWitness();
  uint64_t v129 = *(void *)(v113 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v129 + 80);
  uint64_t v130 = v10 | v11 | 7;
  uint64_t v136 = v130 | v9;
  uint64_t v12 = v8 | v136;
  uint64_t v13 = v12 + 9;
  uint64_t v122 = v12;
  uint64_t v98 = v12 + 9 + a1;
  uint64_t v14 = v98 & ~v12;
  long long v116 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v107 + 48);
  if (!v116(v14, 1, AssociatedTypeWitness)) {
    (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v14, AssociatedTypeWitness);
  }
  if (*(_DWORD *)(v107 + 84)) {
    uint64_t v15 = *(void *)(v107 + 64);
  }
  else {
    uint64_t v15 = *(void *)(v107 + 64) + 1;
  }
  uint64_t v135 = v7 + 9;
  unint64_t v16 = (v7 + 9 + (((((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  unsigned int v17 = *(_DWORD *)(v2 + 84);
  unsigned int v95 = *(_DWORD *)(v4 + 84);
  if (v17 <= v95) {
    unsigned int v18 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v18 = *(_DWORD *)(v2 + 84);
  }
  if (v18 <= 0x7FFFFFFE) {
    int v19 = 2147483646;
  }
  else {
    int v19 = v18;
  }
  uint64_t v20 = *(void *)(v2 + 64) + 7;
  uint64_t v118 = ~v5;
  uint64_t v117 = v5 + 8;
  uint64_t v103 = *(void *)(v4 + 64) + 7;
  unint64_t v139 = ((((v103 + ((v5 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  int v133 = v19;
  uint64_t v106 = v20;
  int v115 = *(_DWORD *)(v2 + 84);
  unsigned int v97 = v18;
  uint64_t v121 = v2;
  uint64_t v104 = v4;
  unsigned int v101 = *(_DWORD *)(v107 + 84);
  uint64_t v100 = v13;
  unint64_t v93 = (((v103 + ((v5 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v17 == v19)
  {
    uint64_t v21 = v126;
    uint64_t v22 = v127;
    if ((*(unsigned int (**)(unint64_t))(v2 + 48))((v7
                                                                     + 9
                                                                     + (((((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7))
      goto LABEL_23;
LABEL_21:
    unsigned int v23 = (uint64_t *)((v106 + v16) & 0xFFFFFFFFFFFFFFF8);
LABEL_22:
    (*(void (**)(unint64_t, uint64_t))(v2 + 8))((v7 + 9 + (((((v14 | 7) + v15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7, v125);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(((unint64_t)v23 + v117) & v118, v119);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  unsigned int v23 = (uint64_t *)((v20 + v16) & 0xFFFFFFFFFFFFFFF8);
  if (v18 > 0x7FFFFFFE)
  {
    uint64_t v21 = v126;
    uint64_t v22 = v127;
    if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v4 + 48))(((unint64_t)v23 + v117) & v118, v95, v119))
    {
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  uint64_t v24 = *v23;
  if ((unint64_t)*v23 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  uint64_t v21 = v126;
  uint64_t v22 = v127;
  if ((v24 + 1) < 2) {
    goto LABEL_22;
  }
LABEL_23:
  uint64_t v134 = ~v7;
  sub_24D3E380C(*(void **)((v139 + v16 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v139 + v16 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v139 + v16 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v25 = (v139 + v16 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = *(void *)(v25 + 16);
  BOOL v27 = ((4 * (v26 >> 60)) & 0xC | ((v26 >> 60) >> 2)) != 0xF && ((4 * (v26 >> 60)) & 0xC) != 0;
  if (v26 >> 60 != 15 && !v27) {
    sub_24D400DCC(*(void *)(v25 + 8), v26);
  }

  uint64_t v120 = v15 + 7;
  unint64_t v28 = ((((((((v135 + ((((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v134) + v139 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v29 = (v14 + v136 + v28) & ~v136;
  uint64_t v110 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v108 + 48);
  uint64_t v30 = AssociatedTypeWitness;
  if (!v110(v29, 1, v22)) {
    (*(void (**)(unint64_t, uint64_t))(v108 + 8))(v29, v22);
  }
  if (*(_DWORD *)(v108 + 84)) {
    uint64_t v31 = *(void *)(v108 + 64);
  }
  else {
    uint64_t v31 = *(void *)(v108 + 64) + 1;
  }
  uint64_t v132 = v130 + 9;
  unint64_t v32 = (v130 + 9 + (((((v29 | 7) + v31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v130;
  uint64_t v33 = *(unsigned int *)(v21 + 84);
  unsigned int v94 = *(_DWORD *)(v129 + 84);
  if (v33 <= v94) {
    unsigned int v34 = *(_DWORD *)(v129 + 84);
  }
  else {
    unsigned int v34 = *(_DWORD *)(v21 + 84);
  }
  if (v34 <= 0x7FFFFFFE) {
    int v35 = 2147483646;
  }
  else {
    int v35 = v34;
  }
  uint64_t v36 = *(void *)(v21 + 64) + 7;
  uint64_t v112 = ~v11;
  uint64_t v111 = v11 + 8;
  uint64_t v102 = *(void *)(v129 + 64) + 7;
  unint64_t v37 = ((((v102 + ((v11 + 8 + (v36 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  int v128 = v35;
  unsigned int v96 = v34;
  unsigned int v99 = *(_DWORD *)(v108 + 84);
  unint64_t v92 = (((v102 + ((v11 + 8 + (v36 & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v33 == v35)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v21 + 48))(v32, v33, v123)) {
      goto LABEL_51;
    }
LABEL_49:
    uint64_t v38 = (uint64_t *)((v36 + v32) & 0xFFFFFFFFFFFFFFF8);
LABEL_50:
    (*(void (**)(unint64_t, uint64_t))(v21 + 8))(v32, v123);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v129 + 8))(((unint64_t)v38 + v111) & v112, v113);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_51;
  }
  uint64_t v38 = (uint64_t *)((v36 + v32) & 0xFFFFFFFFFFFFFFF8);
  if (v34 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v129 + 48))(((unint64_t)v38 + v111) & v112, v94, v113))
    {
      goto LABEL_51;
    }
    goto LABEL_49;
  }
  uint64_t v39 = *v38;
  if ((unint64_t)*v38 >= 0xFFFFFFFF) {
    LODWORD(v39) = -1;
  }
  if ((v39 + 1) < 2) {
    goto LABEL_50;
  }
LABEL_51:
  uint64_t v105 = v36;
  uint64_t v40 = ~v122;
  uint64_t v137 = ~v136;
  uint64_t v131 = ~v130;
  sub_24D3E380C(*(void **)((v37 + v32 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v37 + v32 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v37 + v32 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v41 = (v37 + v32 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = *(void *)(v41 + 16);
  BOOL v43 = ((4 * (v42 >> 60)) & 0xC | ((v42 >> 60) >> 2)) != 0xF && ((4 * (v42 >> 60)) & 0xC) != 0;
  if (v42 >> 60 != 15 && !v43) {
    sub_24D400DCC(*(void *)(v41 + 8), v42);
  }

  uint64_t v114 = v31 + 7;
  swift_bridgeObjectRelease();
  uint64_t v44 = v28 + v136;
  unint64_t v45 = ((((((((v132 + ((((v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v131) + v37 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v46 = ((((((v45 + ((v28 + v136) & v137)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v47 = ((v98 | v122) + v46) & v40;
  if (!v116(v47, 1, AssociatedTypeWitness)) {
    (*(void (**)(unint64_t, uint64_t))(v107 + 8))(v47, AssociatedTypeWitness);
  }
  unint64_t v48 = (v135 + ((((v120 + v47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v134;
  unint64_t v109 = v37;
  if (v115 == v133)
  {
    if ((*(unsigned int (**)(unint64_t))(v121 + 48))((v135
                                                                       + ((((v120 + v47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v134))
      goto LABEL_70;
LABEL_68:
    uint64_t v49 = (uint64_t *)((v106 + v48) & 0xFFFFFFFFFFFFFFF8);
LABEL_69:
    (*(void (**)(unint64_t, uint64_t))(v121 + 8))(v48, v125);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v104 + 8))(((unint64_t)v49 + v117) & v118, v119);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_70;
  }
  uint64_t v49 = (uint64_t *)((v106 + v48) & 0xFFFFFFFFFFFFFFF8);
  if (v97 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v104 + 48))(((unint64_t)v49 + v117) & v118, v95, v119))
    {
      goto LABEL_70;
    }
    goto LABEL_68;
  }
  uint64_t v50 = *v49;
  if ((unint64_t)*v49 >= 0xFFFFFFFF) {
    LODWORD(v50) = -1;
  }
  if ((v50 + 1) < 2) {
    goto LABEL_69;
  }
LABEL_70:
  sub_24D3E380C(*(void **)((v48 + v139 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v48 + v139 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v48 + v139 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v51 = (v48 + v139 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = *(void *)(v51 + 16);
  BOOL v53 = ((4 * (v52 >> 60)) & 0xC | ((v52 >> 60) >> 2)) != 0xF && ((4 * (v52 >> 60)) & 0xC) != 0;
  if (v52 >> 60 != 15 && !v53) {
    sub_24D400DCC(*(void *)(v51 + 8), v52);
  }

  unint64_t v54 = (v44 + v47) & v137;
  if (!v110(v54, 1, v127)) {
    (*(void (**)(unint64_t, uint64_t))(v108 + 8))(v54, v127);
  }
  unint64_t v55 = (v132 + ((((v114 + v54) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v131;
  if (v33 == v128)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v126 + 48))((v132 + ((((v114 + v54) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v131, v33, v123))
    {
      goto LABEL_89;
    }
LABEL_87:
    uint64_t v56 = (uint64_t *)((v105 + v55) & 0xFFFFFFFFFFFFFFF8);
LABEL_88:
    (*(void (**)(unint64_t, uint64_t))(v126 + 8))(v55, v123);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v129 + 8))(((unint64_t)v56 + v111) & v112, v113);
    uint64_t v30 = AssociatedTypeWitness;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_89;
  }
  uint64_t v56 = (uint64_t *)((v105 + v55) & 0xFFFFFFFFFFFFFFF8);
  if (v96 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v129 + 48))(((unint64_t)v56 + v111) & v112, v94, v113))
    {
      goto LABEL_89;
    }
    goto LABEL_87;
  }
  uint64_t v57 = *v56;
  if ((unint64_t)*v56 >= 0xFFFFFFFF) {
    LODWORD(v57) = -1;
  }
  if ((v57 + 1) < 2) {
    goto LABEL_88;
  }
LABEL_89:
  unint64_t v58 = v55 + v109;
  sub_24D3E380C(*(void **)((v58 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v58 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v58 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v59 = (v58 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v60 = *(void *)(v59 + 16);
  BOOL v61 = ((4 * (v60 >> 60)) & 0xC | ((v60 >> 60) >> 2)) != 0xF && ((4 * (v60 >> 60)) & 0xC) != 0;
  if (v60 >> 60 != 15 && !v61) {
    sub_24D400DCC(*(void *)(v59 + 8), v60);
  }

  swift_bridgeObjectRelease();
  unint64_t v62 = (v100 + ((((v47 + v46) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & v40;
  if (v101) {
    unsigned int v63 = v101 - 1;
  }
  else {
    unsigned int v63 = 0;
  }
  if (v63 <= v133 - 1) {
    unsigned int v64 = v133 - 1;
  }
  else {
    unsigned int v64 = v63;
  }
  if (v64 <= 0x7FFFFFFE) {
    unsigned int v65 = 2147483646;
  }
  else {
    unsigned int v65 = v64;
  }
  if (v99) {
    unsigned int v66 = v99 - 1;
  }
  else {
    unsigned int v66 = 0;
  }
  if (v66 <= v128 - 1) {
    unsigned int v67 = v128 - 1;
  }
  else {
    unsigned int v67 = v66;
  }
  if (v67 <= 0x7FFFFFFE) {
    unsigned int v68 = 2147483646;
  }
  else {
    unsigned int v68 = v67;
  }
  if (v68 <= v65) {
    unsigned int v69 = v65;
  }
  else {
    unsigned int v69 = v68;
  }
  if (v69 <= 0x7FFFFFFF) {
    unsigned int v69 = 0x7FFFFFFF;
  }
  if (v65 == v69)
  {
    if (v63 == v65)
    {
      if (v101 < 2) {
        goto LABEL_150;
      }
      unint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v116)(v62, v101, v30);
LABEL_126:
      if (result >= 2) {
        return result;
      }
      goto LABEL_150;
    }
    unint64_t result = (v135 + ((((v120 + v62) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v134;
    if (v133 - 1 == v65)
    {
      if (v115 == v133)
      {
        unint64_t result = (*(uint64_t (**)(unint64_t))(v121 + 48))(result);
        goto LABEL_192;
      }
      uint64_t v72 = (unint64_t *)((v106 + result) & 0xFFFFFFFFFFFFFFF8);
      if (v97 > 0x7FFFFFFE)
      {
        unint64_t result = (*(uint64_t (**)(unint64_t))(v104 + 48))(((unint64_t)v72 + v117) & v118);
        goto LABEL_192;
      }
LABEL_145:
      unint64_t v74 = *v72;
      if (v74 >= 0xFFFFFFFF) {
        unint64_t result = 0xFFFFFFFFLL;
      }
      else {
        unint64_t result = v74;
      }
      if ((result + 1) >= 2 && result >= 2) {
        return result;
      }
LABEL_150:
      if (!v116(v62, 1, v30)) {
        (*(void (**)(unint64_t, uint64_t))(v107 + 8))(v62, v30);
      }
      unint64_t v75 = (v135 + ((((v120 + v62) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v134;
      if (v115 == v133)
      {
        if ((*(unsigned int (**)(unint64_t))(v121 + 48))((v135
                                                                           + ((((v120 + v62) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v134))
          goto LABEL_163;
      }
      else
      {
        uint64_t v76 = (uint64_t *)((v106 + v75) & 0xFFFFFFFFFFFFFFF8);
        if (v97 <= 0x7FFFFFFE)
        {
          uint64_t v77 = *v76;
          if ((unint64_t)*v76 >= 0xFFFFFFFF) {
            LODWORD(v77) = -1;
          }
          if ((v77 + 1) >= 2)
          {
LABEL_163:
            unint64_t v78 = v75 + v139;
            sub_24D3E380C(*(void **)((v78 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v78 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v78 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
            unint64_t v79 = (v78 + 34) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v80 = *(void *)(v79 + 16);
            BOOL v81 = ((4 * (v80 >> 60)) & 0xC | ((v80 >> 60) >> 2)) != 0xF && ((4 * (v80 >> 60)) & 0xC) != 0;
            if (v80 >> 60 != 15 && !v81) {
              sub_24D400DCC(*(void *)(v79 + 8), v80);
            }

            unint64_t v82 = (v44 + v62) & v137;
            uint64_t v83 = v105;
            if (!v110(v82, 1, v127)) {
              (*(void (**)(unint64_t, uint64_t))(v108 + 8))(v82, v127);
            }
            unint64_t v84 = (v132 + ((((v114 + v82) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v131;
            if (v33 == v128)
            {
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v126 + 48))((v132 + ((((v114 + v82) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v131, v33, v123))goto LABEL_180; {
            }
              }
            else
            {
              unint64_t v85 = (uint64_t *)((v105 + v84) & 0xFFFFFFFFFFFFFFF8);
              if (v96 <= 0x7FFFFFFE)
              {
                uint64_t v86 = *v85;
                if ((unint64_t)*v85 >= 0xFFFFFFFF) {
                  LODWORD(v86) = -1;
                }
                if ((v86 + 1) >= 2) {
                  goto LABEL_182;
                }
                goto LABEL_181;
              }
              int v87 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v129 + 48))(((unint64_t)v85 + v111) & v112, v94, v113);
              uint64_t v83 = v105;
              if (!v87)
              {
LABEL_180:
                unint64_t v85 = (uint64_t *)((v83 + v84) & 0xFFFFFFFFFFFFFFF8);
LABEL_181:
                (*(void (**)(unint64_t, uint64_t))(v126 + 8))(v84, v123);
                swift_bridgeObjectRelease();
                (*(void (**)(unint64_t, uint64_t))(v129 + 8))(((unint64_t)v85 + v111) & v112, v113);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
            }
LABEL_182:
            unint64_t v88 = v84 + v109;
            sub_24D3E380C(*(void **)((v88 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v88 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v88 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
            unint64_t v89 = (v88 + 34) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v90 = *(void *)(v89 + 16);
            BOOL v91 = ((4 * (v90 >> 60)) & 0xC | ((v90 >> 60) >> 2)) != 0xF && ((4 * (v90 >> 60)) & 0xC) != 0;
            if (v90 >> 60 != 15 && !v91) {
              sub_24D400DCC(*(void *)(v89 + 8), v90);
            }

            return swift_bridgeObjectRelease();
          }
LABEL_162:
          (*(void (**)(unint64_t, uint64_t))(v121 + 8))(v75, v125);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v104 + 8))(((unint64_t)v76 + v117) & v118, v119);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_163;
        }
        if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v104 + 48))(((unint64_t)v76 + v117) & v118, v95, v119))
        {
          goto LABEL_163;
        }
      }
      uint64_t v76 = (uint64_t *)((v106 + v75) & 0xFFFFFFFFFFFFFFF8);
      goto LABEL_162;
    }
    unint64_t v71 = v93;
  }
  else
  {
    unint64_t result = (v44 + v62) & v137;
    if (v68 != v69)
    {
      if (*(void *)(((result + v45) & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
        return result;
      }
      goto LABEL_150;
    }
    if (v66 == v68)
    {
      if (v99 < 2) {
        goto LABEL_150;
      }
      unint64_t result = ((uint64_t (*)(unint64_t, void, uint64_t))v110)(result, v99, v127);
      goto LABEL_126;
    }
    unint64_t result = (v132 + ((((v114 + result) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v131;
    if (v128 - 1 == v68)
    {
      if (v33 == v128)
      {
        unint64_t result = (*(uint64_t (**)(unint64_t))(v126 + 48))(result);
        goto LABEL_192;
      }
      uint64_t v72 = (unint64_t *)((v105 + result) & 0xFFFFFFFFFFFFFFF8);
      if (v96 > 0x7FFFFFFE)
      {
        unint64_t result = (*(uint64_t (**)(unint64_t))(v129 + 48))(((unint64_t)v72 + v111) & v112);
LABEL_192:
        if (result >= 2) {
          return result;
        }
        goto LABEL_150;
      }
      goto LABEL_145;
    }
    unint64_t v71 = v92;
  }
  unint64_t v73 = *(void *)((((v71 + result + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
  if (v73 >= 0xFFFFFFFF) {
    LODWORD(v73) = -1;
  }
  if ((v73 + 1) < 2) {
    goto LABEL_150;
  }
  return result;
}

uint64_t sub_24D4AB1F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v361 = *(void *)(AssociatedTypeWitness - 8);
  int v5 = *(_DWORD *)(v361 + 80) & 0xF8;
  uint64_t v386 = swift_getAssociatedTypeWitness();
  uint64_t v398 = *(void *)(v386 - 8);
  int v6 = *(_DWORD *)(v398 + 80) & 0xF8;
  uint64_t v373 = swift_getAssociatedTypeWitness();
  uint64_t v395 = *(void *)(v373 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v395 + 80);
  uint64_t v401 = v6 | v7 | 7;
  int v8 = v6 | v7 | v5;
  uint64_t v388 = swift_getAssociatedTypeWitness();
  uint64_t v377 = *(void *)(v388 - 8);
  int v9 = *(_DWORD *)(v377 + 80) & 0xF8;
  uint64_t v385 = swift_getAssociatedTypeWitness();
  uint64_t v387 = *(void *)(v385 - 8);
  int v10 = *(_DWORD *)(v387 + 80) & 0xF8;
  uint64_t v366 = swift_getAssociatedTypeWitness();
  uint64_t v390 = *(void *)(v366 - 8);
  uint64_t v399 = *(unsigned __int8 *)(v390 + 80);
  uint64_t v391 = v10 | v399 | 7;
  uint64_t v11 = v391 | v9;
  uint64_t v12 = v8 | v11;
  uint64_t v352 = a1;
  uint64_t v13 = v12 + 9 + a1;
  unint64_t v14 = v13 & ~v12;
  uint64_t v15 = v12 + 9 + a2;
  uint64_t v378 = v12;
  unint64_t v16 = v15 & ~v12;
  int v369 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v361 + 48);
  uint64_t v370 = AssociatedTypeWitness;
  uint64_t v355 = v15;
  uint64_t v356 = v12 + 9;
  uint64_t v354 = v13;
  if (v369(v16, 1, AssociatedTypeWitness))
  {
    unsigned int v17 = *(_DWORD *)(v361 + 84);
    size_t v18 = *(void *)(v361 + 64);
    if (v17) {
      size_t v19 = *(void *)(v361 + 64);
    }
    else {
      size_t v19 = v18 + 1;
    }
    memcpy((void *)v14, (const void *)v16, v19);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v361 + 16))(v14, v16, AssociatedTypeWitness);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v361 + 56))(v14, 0, 1, AssociatedTypeWitness);
    unsigned int v17 = *(_DWORD *)(v361 + 84);
    size_t v18 = *(void *)(v361 + 64);
  }
  if (v17) {
    size_t v20 = v18;
  }
  else {
    size_t v20 = v18 + 1;
  }
  size_t v382 = v20;
  uint64_t v21 = (void *)(((v16 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)(((v14 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v22 = *v21;
  unint64_t v23 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  uint64_t v25 = v401;
  unint64_t v26 = (void *)((v25 + 9 + v23) & ~v25);
  uint64_t v397 = v401 + 9;
  BOOL v27 = (const void *)((v25 + 9 + v24) & ~v25);
  unsigned int v28 = *(_DWORD *)(v398 + 84);
  unsigned int v349 = *(_DWORD *)(v395 + 84);
  if (v28 <= v349) {
    unsigned int v29 = *(_DWORD *)(v395 + 84);
  }
  else {
    unsigned int v29 = *(_DWORD *)(v398 + 84);
  }
  if (v29 <= 0x7FFFFFFE) {
    int v30 = 2147483646;
  }
  else {
    int v30 = v29;
  }
  uint64_t v31 = *(void *)(v398 + 64) + 7;
  uint64_t v372 = ~v7;
  uint64_t v371 = v7 + 8;
  unint64_t v32 = (v7 + 8 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  uint64_t v33 = *(void *)(v395 + 64) + 7;
  size_t v34 = ((((v33 + v32) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  int v394 = v30;
  size_t v383 = v34;
  int v367 = *(_DWORD *)(v398 + 84);
  unsigned int v351 = v29;
  uint64_t v347 = v33;
  uint64_t v376 = v31;
  unsigned int v357 = v17;
  unint64_t v345 = (((v33 + v32) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v28 == v30)
  {
    if (!(*(unsigned int (**)(const void *))(v398 + 48))(v27)) {
      goto LABEL_26;
    }
LABEL_25:
    memcpy(v26, v27, v34);
    goto LABEL_28;
  }
  int v35 = (uint64_t *)(((unint64_t)v27 + v31) & 0xFFFFFFFFFFFFFFF8);
  if (v29 <= 0x7FFFFFFE)
  {
    uint64_t v36 = *v35;
    if ((unint64_t)*v35 >= 0xFFFFFFFF) {
      LODWORD(v36) = -1;
    }
    if ((v36 + 1) < 2) {
      goto LABEL_27;
    }
    goto LABEL_25;
  }
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v395 + 48))(((unint64_t)v35 + v371) & v372, v349, v373))
  {
    goto LABEL_25;
  }
LABEL_26:
  int v35 = (uint64_t *)(((unint64_t)v27 + v31) & 0xFFFFFFFFFFFFFFF8);
LABEL_27:
  (*(void (**)(void *, const void *, uint64_t))(v398 + 16))(v26, v27, v386);
  unint64_t v37 = (void *)(((unint64_t)v26 + v31) & 0xFFFFFFFFFFFFFFF8);
  void *v37 = *v35;
  unint64_t v38 = ((unint64_t)v37 + v371) & v372;
  unint64_t v39 = ((unint64_t)v35 + v371) & v372;
  uint64_t v40 = *(void (**)(unint64_t, unint64_t, uint64_t))(v395 + 16);
  swift_bridgeObjectRetain();
  v40(v38, v39, v373);
  unint64_t v41 = (void *)((v33 + v38) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v42 = (void *)((v33 + v39) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v41 = *v42;
  BOOL v43 = (void *)(((unint64_t)v41 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v44 = (void *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  *BOOL v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_28:
  uint64_t v45 = (uint64_t)v27 + v34 + 34;
  *((unsigned char *)v26 + v34) = *((unsigned char *)v27 + v34);
  uint64_t v46 = (uint64_t)v26 + v34 + 34;
  *(unsigned char *)(((unint64_t)v26 + v34) | 1) = *(unsigned char *)(((unint64_t)v27 + v34) | 1);
  uint64_t v396 = ~v401;
  *(unsigned char *)(((unint64_t)v26 + v34) | 2) = *(unsigned char *)(((unint64_t)v27 + v34) | 2);
  unint64_t v47 = ((unint64_t)v26 + v34 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v48 = ((unint64_t)v27 + v34 + 10) & 0xFFFFFFFFFFFFFFF8;
  id v49 = *(id *)v48;
  uint64_t v50 = *(void **)(v48 + 8);
  char v51 = *(unsigned char *)(v48 + 16);
  sub_24D3F1C98(*(id *)v48, v50, v51);
  *(void *)unint64_t v47 = v49;
  *(void *)(v47 + 8) = v50;
  *(unsigned char *)(v47 + 16) = v51;
  unint64_t v52 = v46 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = v45 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v54 = *(void *)((v45 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  if (4 * (v54 & 3)) {
    BOOL v55 = ((v54 >> 2) & 0xFFFFFFF3 | (4 * (v54 & 3))) == 15;
  }
  else {
    BOOL v55 = 1;
  }
  if (v55)
  {
    uint64_t v56 = (uint64_t *)(v53 + 8);
    *(void *)unint64_t v52 = *(void *)v53;
    unint64_t v57 = *(void *)(v53 + 16);
    if (v57 >> 60 == 15)
    {
      *(_OWORD *)(v52 + 8) = *(_OWORD *)v56;
    }
    else
    {
      uint64_t v62 = *v56;
      sub_24D3F9C18(*v56, *(void *)(v53 + 16));
      *(void *)(v52 + 8) = v62;
      *(void *)(v52 + 16) = v57;
    }
    uint64_t v61 = v387;
    long long v63 = *(_OWORD *)(v53 + 24);
    *(unsigned char *)(v52 + 40) = *(unsigned char *)(v53 + 40);
    *(_OWORD *)(v52 + 24) = v63;
    *(void *)(v52 + 48) = *(void *)(v53 + 48);
  }
  else
  {
    long long v58 = *(_OWORD *)v53;
    long long v59 = *(_OWORD *)(v53 + 16);
    long long v60 = *(_OWORD *)(v53 + 32);
    *(void *)(v52 + 48) = *(void *)(v53 + 48);
    *(_OWORD *)(v52 + 16) = v59;
    *(_OWORD *)(v52 + 32) = v60;
    *(_OWORD *)unint64_t v52 = v58;
    uint64_t v61 = v387;
  }
  unsigned int v64 = (void **)((v53 + 63) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v65 = *v64;
  unsigned int v66 = (void *)((v52 + 63) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v66 = *v64;
  *(void *)(((unint64_t)v66 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v374 = v382 + 7;
  unint64_t v67 = ((((((((v397 + ((((v382 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v396) + v34 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v68 = (v14 + v11 + v67) & ~v11;
  unint64_t v69 = (v16 + v11 + v67) & ~v11;
  long long v70 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v377 + 48);
  id v71 = v65;
  unsigned int v363 = v70;
  if (v70((const void *)v69, 1, v388))
  {
    unsigned int v72 = *(_DWORD *)(v377 + 84);
    size_t v73 = *(void *)(v377 + 64);
    if (v72) {
      size_t v74 = *(void *)(v377 + 64);
    }
    else {
      size_t v74 = v73 + 1;
    }
    memcpy((void *)v68, (const void *)v69, v74);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v377 + 16))(v68, v69, v388);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v377 + 56))(v68, 0, 1, v388);
    unsigned int v72 = *(_DWORD *)(v377 + 84);
    size_t v73 = *(void *)(v377 + 64);
  }
  uint64_t v75 = v399;
  unsigned int v360 = v72;
  if (v72) {
    size_t v76 = v73;
  }
  else {
    size_t v76 = v73 + 1;
  }
  size_t v381 = v76;
  uint64_t v77 = (void *)(((v69 | 7) + v76) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v78 = (void *)(((v68 | 7) + v76) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v78 = *v77;
  unint64_t v79 = ((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v80 = ((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v79 = *(void *)v80;
  *(unsigned char *)(v79 + 8) = *(unsigned char *)(v80 + 8);
  uint64_t v81 = v391;
  unint64_t v82 = (void *)((v81 + 9 + v79) & ~v81);
  uint64_t v393 = v391 + 9;
  uint64_t v83 = (const void *)((v81 + 9 + v80) & ~v81);
  unsigned int v84 = *(_DWORD *)(v61 + 84);
  unsigned int v348 = *(_DWORD *)(v390 + 84);
  if (v84 <= v348) {
    unsigned int v85 = *(_DWORD *)(v390 + 84);
  }
  else {
    unsigned int v85 = *(_DWORD *)(v61 + 84);
  }
  if (v85 <= 0x7FFFFFFE) {
    int v86 = 2147483646;
  }
  else {
    int v86 = v85;
  }
  uint64_t v87 = *(void *)(v61 + 64) + 7;
  uint64_t v365 = ~v399;
  uint64_t v364 = v399 + 8;
  uint64_t v358 = *(void *)(v390 + 64) + 7;
  size_t v88 = ((((v358 + ((v399 + 8 + (v87 & 0xFFFFFFFFFFFFFFF8)) & ~v399)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  int v389 = v86;
  size_t v400 = v88;
  uint64_t v384 = v87;
  int v362 = *(_DWORD *)(v61 + 84);
  unsigned int v350 = v85;
  unint64_t v344 = (((v358 + ((v75 + 8 + (v87 & 0xFFFFFFFFFFFFFFF8)) & ~v75)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v84 == v86)
  {
    if (!(*(unsigned int (**)(const void *))(v61 + 48))(v83)) {
      goto LABEL_62;
    }
  }
  else
  {
    unint64_t v89 = (void *)(((unint64_t)v83 + v87) & 0xFFFFFFFFFFFFFFF8);
    if (v85 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v390 + 48))(((unint64_t)v89 + v364) & v365, v348, v366))
      {
LABEL_62:
        unint64_t v89 = (void *)(((unint64_t)v83 + v87) & 0xFFFFFFFFFFFFFFF8);
LABEL_63:
        (*(void (**)(void *, const void *, uint64_t))(v61 + 16))(v82, v83, v385);
        BOOL v91 = (void *)(((unint64_t)v82 + v87) & 0xFFFFFFFFFFFFFFF8);
        *BOOL v91 = *v89;
        unint64_t v92 = ((unint64_t)v91 + v364) & v365;
        unint64_t v93 = ((unint64_t)v89 + v364) & v365;
        unsigned int v94 = *(void (**)(unint64_t, unint64_t, uint64_t))(v390 + 16);
        swift_bridgeObjectRetain();
        v94(v92, v93, v366);
        unsigned int v95 = (void *)((v358 + v92) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v96 = v358 + v93;
        size_t v88 = v400;
        v96 &= 0xFFFFFFFFFFFFFFF8;
        *unsigned int v95 = *(void *)v96;
        unsigned int v97 = (void *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v98 = (void *)((v96 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v97 = *v98;
        v97[1] = v98[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_64;
      }
    }
    else
    {
      uint64_t v90 = *v89;
      if (*v89 >= 0xFFFFFFFFuLL) {
        LODWORD(v90) = -1;
      }
      if ((v90 + 1) < 2) {
        goto LABEL_63;
      }
    }
  }
  memcpy(v82, v83, v88);
LABEL_64:
  uint64_t v99 = (uint64_t)v83 + v88 + 10;
  uint64_t v100 = (uint64_t)v83 + v88 + 34;
  *((unsigned char *)v82 + v88) = *((unsigned char *)v83 + v88);
  uint64_t v101 = (uint64_t)v82 + v88 + 34;
  *(unsigned char *)(((unint64_t)v82 + v88) | 1) = *(unsigned char *)(((unint64_t)v83 + v88) | 1);
  uint64_t v380 = ~v378;
  uint64_t v402 = ~v11;
  uint64_t v392 = ~v391;
  *(unsigned char *)(((unint64_t)v82 + v88) | 2) = *(unsigned char *)(((unint64_t)v83 + v88) | 2);
  unint64_t v102 = ((unint64_t)v82 + v88 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v103 = *(void **)(v99 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v104 = *(void **)((v99 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v105 = *(unsigned char *)((v99 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v103, v104, v105);
  *(void *)unint64_t v102 = v103;
  *(void *)(v102 + 8) = v104;
  *(unsigned char *)(v102 + 16) = v105;
  unint64_t v106 = v101 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v107 = v100 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v108 = *(void *)(v107 + 16) >> 60;
  if (!(4 * (v108 & 3)) || ((v108 >> 2) & 0xFFFFFFF3 | (4 * (v108 & 3))) == 0xF)
  {
    uint64_t v114 = (uint64_t *)(v107 + 8);
    *(void *)unint64_t v106 = *(void *)v107;
    unint64_t v115 = *(void *)(v107 + 16);
    if (v115 >> 60 == 15)
    {
      *(_OWORD *)(v106 + 8) = *(_OWORD *)v114;
    }
    else
    {
      uint64_t v116 = *v114;
      sub_24D3F9C18(*v114, *(void *)(v107 + 16));
      *(void *)(v106 + 8) = v116;
      *(void *)(v106 + 16) = v115;
    }
    size_t v112 = v400;
    uint64_t v113 = v354;
    long long v117 = *(_OWORD *)(v107 + 24);
    *(unsigned char *)(v106 + 40) = *(unsigned char *)(v107 + 40);
    *(_OWORD *)(v106 + 24) = v117;
    *(void *)(v106 + 48) = *(void *)(v107 + 48);
  }
  else
  {
    long long v109 = *(_OWORD *)v107;
    long long v110 = *(_OWORD *)(v107 + 16);
    long long v111 = *(_OWORD *)(v107 + 32);
    *(void *)(v106 + 48) = *(void *)(v107 + 48);
    *(_OWORD *)(v106 + 16) = v110;
    *(_OWORD *)(v106 + 32) = v111;
    *(_OWORD *)unint64_t v106 = v109;
    size_t v112 = v400;
    uint64_t v113 = v354;
  }
  uint64_t v118 = (void *)((v106 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v119 = (void **)((v107 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v120 = *v119;
  *uint64_t v118 = *v119;
  *(void *)(((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v119 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v368 = v381 + 7;
  unint64_t v121 = ((((((((v393 + ((((v381 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v392) + v112 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  *(unsigned char *)(v121 + v68) = *(unsigned char *)(v121 + v69);
  unint64_t v122 = (v121 + v68) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v123 = (v121 + v69) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v122 + 8) = *(void *)(v123 + 8);
  long long v124 = (_OWORD *)((v122 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v125 = (_OWORD *)((v123 + 23) & 0xFFFFFFFFFFFFFFF8);
  *long long v124 = *v125;
  unint64_t v126 = ((unint64_t)v124 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v127 = ((unint64_t)v125 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v126 = *(void *)v127;
  *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
  *(void *)(((unint64_t)v124 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v125 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v128 = v67 + v11;
  unint64_t v375 = v121;
  unint64_t v129 = (((((v121 + (v128 & v402)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v130 = (void *)(((v113 | v378) + v129 + 8) & v380);
  uint64_t v131 = (const void *)(((v355 | v378) + v129 + 8) & v380);
  id v132 = v120;
  swift_bridgeObjectRetain();
  size_t __n = v129 + 8;
  unint64_t v353 = v129;
  if (v369((unint64_t)v131, 1, v370))
  {
    memcpy(v130, v131, v382);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v361 + 16))(v130, v131, v370);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v361 + 56))(v130, 0, 1, v370);
  }
  int v133 = (void *)(((unint64_t)v130 + v374) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v134 = (void *)(((unint64_t)v131 + v374) & 0xFFFFFFFFFFFFFFF8);
  void *v133 = *v134;
  unint64_t v135 = ((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v136 = ((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v135 = *(void *)v136;
  *(unsigned char *)(v135 + 8) = *(unsigned char *)(v136 + 8);
  uint64_t v137 = (char *)((v397 + v135) & v396);
  int v138 = (const void *)((v397 + v136) & v396);
  if (v367 == v394)
  {
    if (!(*(unsigned int (**)(const void *))(v398 + 48))(v138)) {
      goto LABEL_84;
    }
  }
  else
  {
    unint64_t v139 = (void *)(((unint64_t)v138 + v376) & 0xFFFFFFFFFFFFFFF8);
    if (v351 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v395 + 48))(((unint64_t)v139 + v371) & v372, v349, v373))
      {
LABEL_84:
        unint64_t v139 = (void *)(((unint64_t)v138 + v376) & 0xFFFFFFFFFFFFFFF8);
LABEL_85:
        (*(void (**)(char *, const void *, uint64_t))(v398 + 16))(v137, v138, v386);
        uint64_t v142 = (void *)((unint64_t)&v137[v376] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v142 = *v139;
        unint64_t v143 = ((unint64_t)v142 + v371) & v372;
        unint64_t v144 = ((unint64_t)v139 + v371) & v372;
        uint64_t v145 = *(void (**)(unint64_t, unint64_t, uint64_t))(v395 + 16);
        swift_bridgeObjectRetain();
        v145(v143, v144, v373);
        unint64_t v146 = (void *)((v347 + v143) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v147 = (void *)((v347 + v144) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v146 = *v147;
        unint64_t v148 = (void *)(((unint64_t)v146 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v149 = (void *)(((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v148 = *v149;
        v148[1] = v149[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        size_t v141 = v383;
        goto LABEL_86;
      }
    }
    else
    {
      uint64_t v140 = *v139;
      if (*v139 >= 0xFFFFFFFFuLL) {
        LODWORD(v140) = -1;
      }
      if ((v140 + 1) < 2) {
        goto LABEL_85;
      }
    }
  }
  size_t v141 = v383;
  memcpy(v137, v138, v383);
LABEL_86:
  os_log_type_t v150 = (unsigned char *)(((unint64_t)v138 + v141) | 1);
  uint64_t v151 = (unsigned char *)(((unint64_t)v138 + v141) | 2);
  uint64_t v152 = (uint64_t)v138 + v141 + 10;
  uint64_t v154 = (uint64_t)v138 + v141 + 34;
  char v153 = *((unsigned char *)v138 + v141);
  uint64_t v155 = (unsigned char *)((unint64_t)&v137[v141] | 1);
  unint64_t v156 = (unsigned char *)((unint64_t)&v137[v141] | 2);
  uint64_t v157 = (uint64_t)&v137[v141 + 10];
  uint64_t v158 = &v137[v141];
  *uint64_t v158 = v153;
  *uint64_t v155 = *v150;
  *unint64_t v156 = *v151;
  unint64_t v159 = v157 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v160 = *(void **)(v152 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v161 = *(void **)((v152 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v162 = *(unsigned char *)((v152 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v160, v161, v162);
  *(void *)unint64_t v159 = v160;
  *(void *)(v159 + 8) = v161;
  *(unsigned char *)(v159 + 16) = v162;
  unint64_t v163 = (unint64_t)(v158 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v164 = v154 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v165 = *(void *)(v164 + 16) >> 60;
  if (!(4 * (v165 & 3)) || ((v165 >> 2) & 0xFFFFFFF3 | (4 * (v165 & 3))) == 0xF)
  {
    long long v169 = (uint64_t *)(v164 + 8);
    *(void *)unint64_t v163 = *(void *)v164;
    unint64_t v170 = *(void *)(v164 + 16);
    if (v170 >> 60 == 15)
    {
      *(_OWORD *)(v163 + 8) = *(_OWORD *)v169;
    }
    else
    {
      uint64_t v171 = *v169;
      sub_24D3F9C18(*v169, *(void *)(v164 + 16));
      *(void *)(v163 + 8) = v171;
      *(void *)(v163 + 16) = v170;
    }
    long long v172 = *(_OWORD *)(v164 + 24);
    *(unsigned char *)(v163 + 40) = *(unsigned char *)(v164 + 40);
    *(_OWORD *)(v163 + 24) = v172;
    *(void *)(v163 + 48) = *(void *)(v164 + 48);
  }
  else
  {
    long long v166 = *(_OWORD *)v164;
    long long v167 = *(_OWORD *)(v164 + 16);
    long long v168 = *(_OWORD *)(v164 + 32);
    *(void *)(v163 + 48) = *(void *)(v164 + 48);
    *(_OWORD *)(v163 + 16) = v167;
    *(_OWORD *)(v163 + 32) = v168;
    *(_OWORD *)unint64_t v163 = v166;
  }
  uint64_t v173 = (void *)((v163 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v174 = (void **)((v164 + 63) & 0xFFFFFFFFFFFFFFF8);
  id v175 = *v174;
  *uint64_t v173 = *v174;
  *(void *)(((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v174 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v176 = (void *)(((unint64_t)v130 + v128) & v402);
  uint64_t v177 = (const void *)(((unint64_t)v131 + v128) & v402);
  id v178 = v175;
  if (v363(v177, 1, v388))
  {
    memcpy(v176, v177, v381);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v377 + 16))(v176, v177, v388);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v377 + 56))(v176, 0, 1, v388);
  }
  unint64_t v179 = (void *)(((unint64_t)v176 + v368) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v180 = (void *)(((unint64_t)v177 + v368) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v179 = *v180;
  unint64_t v181 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v182 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v181 = *(void *)v182;
  *(unsigned char *)(v181 + 8) = *(unsigned char *)(v182 + 8);
  uint64_t v183 = (void *)((v393 + v181) & v392);
  unint64_t v184 = (char *)((v393 + v182) & v392);
  uint64_t v359 = v128;
  if (v362 == v389)
  {
    if (!(*(unsigned int (**)(char *))(v387 + 48))(v184)) {
      goto LABEL_106;
    }
  }
  else
  {
    uint64_t v185 = (void *)((unint64_t)&v184[v384] & 0xFFFFFFFFFFFFFFF8);
    if (v350 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v390 + 48))(((unint64_t)v185 + v364) & v365, v348, v366))
      {
LABEL_106:
        uint64_t v185 = (void *)((unint64_t)&v184[v384] & 0xFFFFFFFFFFFFFFF8);
LABEL_107:
        (*(void (**)(void *, char *, uint64_t))(v387 + 16))(v183, v184, v385);
        uint64_t v188 = (void *)(((unint64_t)v183 + v384) & 0xFFFFFFFFFFFFFFF8);
        void *v188 = *v185;
        unint64_t v189 = ((unint64_t)v188 + v364) & v365;
        unint64_t v190 = ((unint64_t)v185 + v364) & v365;
        uint64_t v191 = *(void (**)(unint64_t, unint64_t, uint64_t))(v390 + 16);
        swift_bridgeObjectRetain();
        v191(v189, v190, v366);
        uint64_t v192 = (void *)((v358 + v189) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v193 = (void *)((v358 + v190) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v192 = *v193;
        uint64_t v194 = (void *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v195 = (void *)(((unint64_t)v193 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v194 = *v195;
        v194[1] = v195[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        size_t v187 = v400;
        goto LABEL_108;
      }
    }
    else
    {
      uint64_t v186 = *v185;
      if (*v185 >= 0xFFFFFFFFuLL) {
        LODWORD(v186) = -1;
      }
      if ((v186 + 1) < 2) {
        goto LABEL_107;
      }
    }
  }
  size_t v187 = v400;
  memcpy(v183, v184, v400);
LABEL_108:
  char v196 = (unsigned char *)((unint64_t)&v184[v187] | 1);
  uint64_t v197 = (unsigned char *)((unint64_t)&v184[v187] | 2);
  uint64_t v198 = (uint64_t)&v184[v187 + 10];
  uint64_t v199 = &v184[v187];
  *((unsigned char *)v183 + v187) = *v199;
  uint64_t v200 = (uint64_t)v183 + v187 + 34;
  *(unsigned char *)(((unint64_t)v183 + v187) | 1) = *v196;
  *(unsigned char *)(((unint64_t)v183 + v187) | 2) = *v197;
  unint64_t v201 = ((unint64_t)v183 + v187 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v202 = *(void **)(v198 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v203 = *(void **)((v198 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v204 = *(unsigned char *)((v198 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v202, v203, v204);
  *(void *)unint64_t v201 = v202;
  *(void *)(v201 + 8) = v203;
  *(unsigned char *)(v201 + 16) = v204;
  unint64_t v205 = v200 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v206 = (unint64_t)(v199 + 34) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v207 = *(void *)(v206 + 16) >> 60;
  if (!(4 * (v207 & 3)) || ((v207 >> 2) & 0xFFFFFFF3 | (4 * (v207 & 3))) == 0xF)
  {
    uint64_t v212 = (uint64_t *)(v206 + 8);
    *(void *)unint64_t v205 = *(void *)v206;
    unint64_t v213 = *(void *)(v206 + 16);
    if (v213 >> 60 == 15)
    {
      *(_OWORD *)(v205 + 8) = *(_OWORD *)v212;
    }
    else
    {
      uint64_t v214 = *v212;
      sub_24D3F9C18(*v212, *(void *)(v206 + 16));
      *(void *)(v205 + 8) = v214;
      *(void *)(v205 + 16) = v213;
    }
    uint64_t v208 = v130;
    long long v215 = *(_OWORD *)(v206 + 24);
    *(unsigned char *)(v205 + 40) = *(unsigned char *)(v206 + 40);
    *(_OWORD *)(v205 + 24) = v215;
    *(void *)(v205 + 48) = *(void *)(v206 + 48);
  }
  else
  {
    uint64_t v208 = v130;
    long long v209 = *(_OWORD *)v206;
    long long v210 = *(_OWORD *)(v206 + 16);
    long long v211 = *(_OWORD *)(v206 + 32);
    *(void *)(v205 + 48) = *(void *)(v206 + 48);
    *(_OWORD *)(v205 + 16) = v210;
    *(_OWORD *)(v205 + 32) = v211;
    *(_OWORD *)unint64_t v205 = v209;
  }
  unint64_t v216 = (void *)((v205 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v217 = (void **)((v206 + 63) & 0xFFFFFFFFFFFFFFF8);
  long long v218 = *v217;
  *unint64_t v216 = *v217;
  *(void *)(((unint64_t)v216 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v217 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v176 + v375) = *((unsigned char *)v177 + v375);
  unint64_t v219 = ((unint64_t)v176 + v375) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v220 = ((unint64_t)v177 + v375) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v219 + 8) = *(void *)(v220 + 8);
  uint64_t v221 = (_OWORD *)((v219 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v222 = (_OWORD *)((v220 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v221 = *v222;
  unint64_t v223 = ((unint64_t)v221 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v224 = ((unint64_t)v222 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v223 = *(void *)v224;
  *(unsigned char *)(v223 + 8) = *(unsigned char *)(v224 + 8);
  *(void *)(((unint64_t)v221 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v222 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v225 = (_OWORD *)(((unint64_t)v208 + v353 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v226 = (_OWORD *)(((unint64_t)v131 + v353 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v225 = *v226;
  unint64_t v227 = ((unint64_t)v225 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v228 = ((unint64_t)v226 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v229 = *(void *)v228;
  *(unsigned char *)(v227 + 8) = *(unsigned char *)(v228 + 8);
  *(void *)unint64_t v227 = v229;
  uint64_t v379 = (void *)((v356 + v227) & v380);
  unint64_t v230 = (const void *)((v356 + v228) & v380);
  if (v357) {
    unsigned int v231 = v357 - 1;
  }
  else {
    unsigned int v231 = 0;
  }
  if (v231 <= v394 - 1) {
    unsigned int v232 = v394 - 1;
  }
  else {
    unsigned int v232 = v231;
  }
  if (v232 <= 0x7FFFFFFE) {
    unsigned int v233 = 2147483646;
  }
  else {
    unsigned int v233 = v232;
  }
  if (v360) {
    unsigned int v234 = v360 - 1;
  }
  else {
    unsigned int v234 = 0;
  }
  if (v234 <= v389 - 1) {
    unsigned int v235 = v389 - 1;
  }
  else {
    unsigned int v235 = v234;
  }
  if (v235 <= 0x7FFFFFFE) {
    unsigned int v236 = 2147483646;
  }
  else {
    unsigned int v236 = v235;
  }
  if (v236 <= v233) {
    unsigned int v237 = v233;
  }
  else {
    unsigned int v237 = v236;
  }
  if (v237 <= 0x7FFFFFFF) {
    int v238 = 0x7FFFFFFF;
  }
  else {
    int v238 = v237;
  }
  id v239 = v218;
  swift_bridgeObjectRetain();
  if (v233 != v238)
  {
    unint64_t v244 = ((unint64_t)v230 + v359) & v402;
    if (v236 != v238)
    {
      uint64_t v240 = v352;
      uint64_t v241 = v398;
      unsigned int v242 = v379;
      if (*(void *)(((v244 + v375) & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
        goto LABEL_227;
      }
      goto LABEL_181;
    }
    if (v234 == v236)
    {
      uint64_t v240 = v352;
      uint64_t v241 = v398;
      unsigned int v242 = v379;
      if (v360 < 2) {
        goto LABEL_181;
      }
      unsigned int v243 = v363((const void *)v244, v360, v388);
      goto LABEL_147;
    }
    unint64_t v247 = (v393 + ((((v368 + v244) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v392;
    if (v389 - 1 == v236)
    {
      if (v362 != v389)
      {
        uint64_t v253 = (unint64_t *)((v384 + v247) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v240 = v352;
        uint64_t v241 = v398;
        unsigned int v242 = v379;
        if (v350 > 0x7FFFFFFE)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v390 + 48))(((unint64_t)v253 + v364) & v365, v348, v366) < 2)goto LABEL_181; {
LABEL_227:
          }
          memcpy(v242, v230, __n);
          return v240;
        }
        unint64_t v254 = *v253;
        if (v254 >= 0xFFFFFFFF) {
          unsigned int v246 = -1;
        }
        else {
          unsigned int v246 = v254;
        }
        if (v246 + 1 < 2) {
          goto LABEL_181;
        }
LABEL_180:
        if (v246 < 2) {
          goto LABEL_181;
        }
        goto LABEL_227;
      }
      unsigned int v246 = (*(uint64_t (**)(unint64_t))(v387 + 48))(v247);
      uint64_t v240 = v352;
      uint64_t v241 = v398;
LABEL_179:
      unsigned int v242 = v379;
      goto LABEL_180;
    }
    unint64_t v252 = *(void *)((((v344 + v247 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
    if (v252 >= 0xFFFFFFFF) {
      LODWORD(v252) = -1;
    }
    BOOL v249 = (v252 + 1) >= 2;
    uint64_t v240 = v352;
    uint64_t v241 = v398;
LABEL_169:
    unsigned int v242 = v379;
    if (v249) {
      goto LABEL_227;
    }
    goto LABEL_181;
  }
  uint64_t v240 = v352;
  uint64_t v241 = v398;
  if (v231 != v233)
  {
    unint64_t v245 = (v397 + (((((unint64_t)v230 + v374) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v396;
    if (v394 - 1 == v233)
    {
      if (v367 == v394)
      {
        unsigned int v246 = (*(uint64_t (**)(unint64_t))(v398 + 48))(v245);
      }
      else
      {
        uint64_t v250 = (unint64_t *)((v376 + v245) & 0xFFFFFFFFFFFFFFF8);
        if (v351 <= 0x7FFFFFFE)
        {
          unint64_t v251 = *v250;
          if (v251 >= 0xFFFFFFFF) {
            unsigned int v246 = -1;
          }
          else {
            unsigned int v246 = v251;
          }
          unsigned int v242 = v379;
          if (v246 + 1 < 2) {
            goto LABEL_181;
          }
          goto LABEL_180;
        }
        unsigned int v246 = (*(uint64_t (**)(unint64_t))(v395 + 48))(((unint64_t)v250 + v371) & v372);
      }
      goto LABEL_179;
    }
    unint64_t v248 = *(void *)((((v345 + v245 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
    if (v248 >= 0xFFFFFFFF) {
      LODWORD(v248) = -1;
    }
    BOOL v249 = (v248 + 1) >= 2;
    goto LABEL_169;
  }
  unsigned int v242 = v379;
  if (v357 < 2) {
    goto LABEL_181;
  }
  unsigned int v243 = v369((unint64_t)v230, v357, v370);
LABEL_147:
  if (v243 >= 2) {
    goto LABEL_227;
  }
LABEL_181:
  if (v369((unint64_t)v230, 1, v370))
  {
    memcpy(v242, v230, v382);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v361 + 16))(v242, v230, v370);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v361 + 56))(v242, 0, 1, v370);
  }
  unint64_t v255 = (void *)(((unint64_t)v242 + v374) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v256 = v230;
  uint64_t v257 = (void *)(((unint64_t)v230 + v374) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v255 = *v257;
  unint64_t v258 = ((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v259 = ((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v258 = *(void *)v259;
  *(unsigned char *)(v258 + 8) = *(unsigned char *)(v259 + 8);
  uint64_t v260 = (void *)((v397 + v258) & v396);
  uint64_t v261 = (char *)((v397 + v259) & v396);
  if (v367 == v394)
  {
    if (!(*(unsigned int (**)(char *))(v241 + 48))(v261)) {
      goto LABEL_194;
    }
  }
  else
  {
    uint64_t v262 = (void *)((unint64_t)&v261[v376] & 0xFFFFFFFFFFFFFFF8);
    if (v351 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v395 + 48))(((unint64_t)v262 + v371) & v372, v349, v373))
      {
LABEL_194:
        uint64_t v262 = (void *)((unint64_t)&v261[v376] & 0xFFFFFFFFFFFFFFF8);
LABEL_195:
        (*(void (**)(void *, char *, uint64_t))(v241 + 16))(v260, v261, v386);
        uint64_t v265 = (void *)(((unint64_t)v260 + v376) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v265 = *v262;
        unint64_t v266 = ((unint64_t)v265 + v371) & v372;
        unint64_t v267 = ((unint64_t)v262 + v371) & v372;
        unint64_t v268 = *(void (**)(unint64_t, unint64_t, uint64_t))(v395 + 16);
        swift_bridgeObjectRetain();
        v268(v266, v267, v373);
        unint64_t v269 = (void *)((v347 + v266) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v270 = (void *)((v347 + v267) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v269 = *v270;
        long long v271 = (void *)(((unint64_t)v269 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v272 = (void *)(((unint64_t)v270 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v271 = *v272;
        v271[1] = v272[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        size_t v264 = v383;
        goto LABEL_196;
      }
    }
    else
    {
      uint64_t v263 = *v262;
      if (*v262 >= 0xFFFFFFFFuLL) {
        LODWORD(v263) = -1;
      }
      if ((v263 + 1) < 2) {
        goto LABEL_195;
      }
    }
  }
  size_t v264 = v383;
  memcpy(v260, v261, v383);
LABEL_196:
  long long v273 = (unsigned char *)((unint64_t)&v261[v264] | 1);
  uint64_t v274 = (unsigned char *)((unint64_t)&v261[v264] | 2);
  uint64_t v275 = (uint64_t)&v261[v264 + 10];
  uint64_t v276 = &v261[v264];
  *((unsigned char *)v260 + v264) = *v276;
  uint64_t v277 = (uint64_t)v260 + v264 + 34;
  *(unsigned char *)(((unint64_t)v260 + v264) | 1) = *v273;
  *(unsigned char *)(((unint64_t)v260 + v264) | 2) = *v274;
  unint64_t v278 = ((unint64_t)v260 + v264 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v279 = *(void **)(v275 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v280 = *(void **)((v275 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v281 = *(unsigned char *)((v275 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v279, v280, v281);
  *(void *)unint64_t v278 = v279;
  *(void *)(v278 + 8) = v280;
  *(unsigned char *)(v278 + 16) = v281;
  unint64_t v282 = v277 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v283 = (unint64_t)(v276 + 34) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v284 = *(void *)(v283 + 16) >> 60;
  if (!(4 * (v284 & 3)) || ((v284 >> 2) & 0xFFFFFFF3 | (4 * (v284 & 3))) == 0xF)
  {
    uint64_t v290 = (uint64_t *)(v283 + 8);
    *(void *)unint64_t v282 = *(void *)v283;
    unint64_t v291 = *(void *)(v283 + 16);
    uint64_t v288 = v377;
    uint64_t v289 = v384;
    if (v291 >> 60 == 15)
    {
      *(_OWORD *)(v282 + 8) = *(_OWORD *)v290;
    }
    else
    {
      uint64_t v292 = *v290;
      sub_24D3F9C18(*v290, *(void *)(v283 + 16));
      *(void *)(v282 + 8) = v292;
      *(void *)(v282 + 16) = v291;
    }
    long long v293 = *(_OWORD *)(v283 + 24);
    *(unsigned char *)(v282 + 40) = *(unsigned char *)(v283 + 40);
    *(_OWORD *)(v282 + 24) = v293;
    *(void *)(v282 + 48) = *(void *)(v283 + 48);
  }
  else
  {
    long long v285 = *(_OWORD *)v283;
    long long v286 = *(_OWORD *)(v283 + 16);
    long long v287 = *(_OWORD *)(v283 + 32);
    *(void *)(v282 + 48) = *(void *)(v283 + 48);
    *(_OWORD *)(v282 + 16) = v286;
    *(_OWORD *)(v282 + 32) = v287;
    *(_OWORD *)unint64_t v282 = v285;
    uint64_t v288 = v377;
    uint64_t v289 = v384;
  }
  unint64_t v294 = (void *)((v282 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v295 = (void **)((v283 + 63) & 0xFFFFFFFFFFFFFFF8);
  v296 = *v295;
  *unint64_t v294 = *v295;
  *(void *)(((unint64_t)v294 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v295 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v297 = (void *)(((unint64_t)v242 + v359) & v402);
  v298 = (const void *)(((unint64_t)v256 + v359) & v402);
  id v299 = v296;
  if (v363(v298, 1, v388))
  {
    memcpy(v297, v298, v381);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v288 + 16))(v297, v298, v388);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v288 + 56))(v297, 0, 1, v388);
  }
  uint64_t v300 = (void *)(((unint64_t)v297 + v368) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v301 = (void *)(((unint64_t)v298 + v368) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v300 = *v301;
  unint64_t v302 = ((unint64_t)v300 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v303 = ((unint64_t)v301 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v302 = *(void *)v303;
  *(unsigned char *)(v302 + 8) = *(unsigned char *)(v303 + 8);
  unint64_t v304 = (void *)((v393 + v302) & v392);
  uint64_t v305 = (const void *)((v393 + v303) & v392);
  if (v362 == v389)
  {
    if (!(*(unsigned int (**)(const void *))(v387 + 48))(v305)) {
      goto LABEL_216;
    }
LABEL_215:
    memcpy(v304, v305, v400);
    goto LABEL_218;
  }
  uint64_t v306 = (uint64_t *)(((unint64_t)v305 + v289) & 0xFFFFFFFFFFFFFFF8);
  if (v350 <= 0x7FFFFFFE)
  {
    uint64_t v307 = *v306;
    if ((unint64_t)*v306 >= 0xFFFFFFFF) {
      LODWORD(v307) = -1;
    }
    if ((v307 + 1) < 2) {
      goto LABEL_217;
    }
    goto LABEL_215;
  }
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v390 + 48))(((unint64_t)v306 + v364) & v365, v348, v366))
  {
    goto LABEL_215;
  }
LABEL_216:
  uint64_t v306 = (uint64_t *)(((unint64_t)v305 + v289) & 0xFFFFFFFFFFFFFFF8);
LABEL_217:
  (*(void (**)(void *, const void *, uint64_t))(v387 + 16))(v304, v305, v385);
  unint64_t v308 = (void *)(((unint64_t)v304 + v289) & 0xFFFFFFFFFFFFFFF8);
  void *v308 = *v306;
  unint64_t v309 = ((unint64_t)v308 + v364) & v365;
  unint64_t v310 = ((unint64_t)v306 + v364) & v365;
  long long v311 = *(void (**)(unint64_t, unint64_t, uint64_t))(v390 + 16);
  swift_bridgeObjectRetain();
  v311(v309, v310, v366);
  long long v312 = (void *)((v358 + v309) & 0xFFFFFFFFFFFFFFF8);
  long long v313 = (void *)((v358 + v310) & 0xFFFFFFFFFFFFFFF8);
  *long long v312 = *v313;
  uint64_t v314 = (void *)(((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v315 = (void *)(((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v314 = *v315;
  v314[1] = v315[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_218:
  uint64_t v316 = (uint64_t)v305 + v400 + 10;
  uint64_t v317 = (uint64_t)v305 + v400 + 34;
  *((unsigned char *)v304 + v400) = *((unsigned char *)v305 + v400);
  uint64_t v318 = (uint64_t)v304 + v400 + 34;
  *(unsigned char *)(((unint64_t)v304 + v400) | 1) = *(unsigned char *)(((unint64_t)v305 + v400) | 1);
  *(unsigned char *)(((unint64_t)v304 + v400) | 2) = *(unsigned char *)(((unint64_t)v305 + v400) | 2);
  unint64_t v319 = ((unint64_t)v304 + v400 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v320 = *(void **)(v316 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v321 = *(void **)((v316 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v322 = *(unsigned char *)((v316 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v320, v321, v322);
  *(void *)unint64_t v319 = v320;
  *(void *)(v319 + 8) = v321;
  *(unsigned char *)(v319 + 16) = v322;
  unint64_t v323 = v318 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v324 = v317 & 0xFFFFFFFFFFFFFFF8;
  uint64_t v325 = *(void *)(v324 + 16) >> 60;
  if (!(4 * (v325 & 3)) || ((v325 >> 2) & 0xFFFFFFF3 | (4 * (v325 & 3))) == 0xF)
  {
    unint64_t v329 = (uint64_t *)(v324 + 8);
    *(void *)unint64_t v323 = *(void *)v324;
    unint64_t v330 = *(void *)(v324 + 16);
    if (v330 >> 60 == 15)
    {
      *(_OWORD *)(v323 + 8) = *(_OWORD *)v329;
    }
    else
    {
      uint64_t v331 = *v329;
      sub_24D3F9C18(*v329, *(void *)(v324 + 16));
      *(void *)(v323 + 8) = v331;
      *(void *)(v323 + 16) = v330;
    }
    long long v332 = *(_OWORD *)(v324 + 24);
    *(unsigned char *)(v323 + 40) = *(unsigned char *)(v324 + 40);
    *(_OWORD *)(v323 + 24) = v332;
    *(void *)(v323 + 48) = *(void *)(v324 + 48);
  }
  else
  {
    long long v326 = *(_OWORD *)v324;
    long long v327 = *(_OWORD *)(v324 + 16);
    long long v328 = *(_OWORD *)(v324 + 32);
    *(void *)(v323 + 48) = *(void *)(v324 + 48);
    *(_OWORD *)(v323 + 16) = v327;
    *(_OWORD *)(v323 + 32) = v328;
    *(_OWORD *)unint64_t v323 = v326;
  }
  int v333 = (void *)((v323 + 63) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v334 = (void **)((v324 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v335 = *v334;
  *int v333 = *v334;
  *(void *)(((unint64_t)v333 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v334 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v297 + v375) = *((unsigned char *)v298 + v375);
  unint64_t v336 = ((unint64_t)v297 + v375) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v337 = ((unint64_t)v298 + v375) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v336 + 8) = *(void *)(v337 + 8);
  unsigned int v338 = (_OWORD *)((v336 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v339 = (_OWORD *)((v337 + 23) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v338 = *v339;
  unint64_t v340 = ((unint64_t)v338 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v341 = ((unint64_t)v339 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v340 = *(void *)v341;
  *(unsigned char *)(v340 + 8) = *(unsigned char *)(v341 + 8);
  *(void *)(((unint64_t)v338 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v339 + 39) & 0xFFFFFFFFFFFFFFF8);
  id v342 = v335;
  swift_bridgeObjectRetain();
  return v240;
}

uint64_t sub_24D4AD0C0(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(_DWORD *)(v5 + 80) & 0xF8;
  uint64_t v720 = swift_getAssociatedTypeWitness();
  uint64_t v728 = *(void *)(v720 - 8);
  int v7 = *(_DWORD *)(v728 + 80) & 0xF8;
  uint64_t v706 = swift_getAssociatedTypeWitness();
  uint64_t v726 = *(void *)(v706 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v726 + 80);
  uint64_t v729 = v7 | v8 | 7;
  int v9 = v7 | v8 | v6;
  uint64_t v724 = swift_getAssociatedTypeWitness();
  uint64_t v695 = *(void *)(v724 - 8);
  int v10 = *(_DWORD *)(v695 + 80) & 0xF8;
  uint64_t v719 = swift_getAssociatedTypeWitness();
  uint64_t v721 = *(void *)(v719 - 8);
  int v11 = *(_DWORD *)(v721 + 80) & 0xF8;
  uint64_t v703 = swift_getAssociatedTypeWitness();
  uint64_t v725 = *(void *)(v703 - 8);
  uint64_t v714 = *(unsigned __int8 *)(v725 + 80);
  uint64_t v707 = v11 | v714 | 7;
  uint64_t v711 = v707 | v10;
  uint64_t v12 = v9 | v711;
  uint64_t v670 = a1;
  uint64_t v671 = v12 + 9;
  uint64_t v13 = v12 + 9 + a1;
  unint64_t v14 = v13 & ~v12;
  uint64_t v15 = (uint64_t)a2 + v12 + 9;
  uint64_t v690 = v12;
  unint64_t v16 = v15 & ~v12;
  unsigned int v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48);
  int v18 = v17(v14, 1, AssociatedTypeWitness);
  v697 = (uint64_t (*)(void *, uint64_t, uint64_t))v17;
  int v19 = v17(v16, 1, AssociatedTypeWitness);
  uint64_t v683 = v15;
  uint64_t v677 = v13;
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v14, v16, AssociatedTypeWitness);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v5 + 56))(v14, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v20 = *(_DWORD *)(v5 + 84);
    size_t v21 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v19)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(v14, v16, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v14, AssociatedTypeWitness);
    int v20 = *(_DWORD *)(v5 + 84);
    size_t v21 = *(void *)(v5 + 64);
  }
  if (v20) {
    size_t v22 = v21;
  }
  else {
    size_t v22 = v21 + 1;
  }
  memcpy((void *)v14, (const void *)v16, v22);
LABEL_12:
  unsigned int v682 = *(_DWORD *)(v5 + 84);
  if (v682) {
    uint64_t v23 = *(void *)(v5 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v5 + 64) + 1;
  }
  unint64_t v716 = v16;
  size_t __n = v23;
  unint64_t v24 = (void *)(((v16 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v25 = (void *)(((v14 | 7) + v23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v25 = *v24;
  unint64_t v26 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((unint64_t)v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  uint64_t v28 = v729;
  unsigned int v29 = (void *)((v28 + 9 + v26) & ~v28);
  uint64_t v723 = v729 + 9;
  int v30 = (void *)((v28 + 9 + v27) & ~v28);
  uint64_t v31 = *(unsigned int *)(v728 + 84);
  unsigned int v668 = *(_DWORD *)(v726 + 84);
  if (v31 <= v668) {
    unsigned int v32 = *(_DWORD *)(v726 + 84);
  }
  else {
    unsigned int v32 = *(_DWORD *)(v728 + 84);
  }
  if (v32 <= 0x7FFFFFFE) {
    int v33 = 2147483646;
  }
  else {
    int v33 = v32;
  }
  uint64_t v34 = *(void *)(v728 + 64) + 7;
  uint64_t v705 = ~v8;
  uint64_t v704 = v8 + 8;
  uint64_t v685 = *(void *)(v726 + 64) + 7;
  unint64_t v666 = (((v685 + ((v8 + 8 + (v34 & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v35 = v666 + 16;
  int v718 = v33;
  size_t v727 = v666 + 16;
  uint64_t v713 = v34;
  unsigned int v689 = *(_DWORD *)(v728 + 84);
  unsigned int v680 = v32;
  uint64_t v679 = v5;
  if (v31 == v33)
  {
    uint64_t v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v728 + 48);
    int v37 = v36(v29, v31, v720);
    int v38 = v36(v30, v31, v720);
    if (v37) {
      goto LABEL_23;
    }
LABEL_34:
    unint64_t v39 = (uint64_t *)(((unint64_t)v29 + v713) & 0xFFFFFFFFFFFFFFF8);
    if (v38) {
      goto LABEL_35;
    }
    uint64_t v40 = (uint64_t *)(((unint64_t)v30 + v713) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_40;
  }
  unint64_t v39 = (uint64_t *)(((unint64_t)v29 + v34) & 0xFFFFFFFFFFFFFFF8);
  if (v32 > 0x7FFFFFFE)
  {
    unint64_t v45 = ((unint64_t)v39 + v704) & v705;
    uint64_t v46 = *(uint64_t (**)(unint64_t, void, uint64_t))(v726 + 48);
    int v47 = v46(v45, v668, v706);
    uint64_t v48 = v34;
    int v49 = v47;
    size_t v35 = v666 + 16;
    int v38 = v46((v704 + (((unint64_t)v30 + v48) & 0xFFFFFFFFFFFFFFF8)) & v705, v668, v706);
    if (v49)
    {
LABEL_23:
      if (!v38)
      {
        unint64_t v39 = (uint64_t *)(((unint64_t)v29 + v713) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v40 = (uint64_t *)(((unint64_t)v30 + v713) & 0xFFFFFFFFFFFFFFF8);
LABEL_37:
        (*(void (**)(void *, void *, uint64_t))(v728 + 16))(v29, v30, v720);
        *unint64_t v39 = *v40;
        unint64_t v50 = ((unint64_t)v39 + v704) & v705;
        unint64_t v51 = ((unint64_t)v40 + v704) & v705;
        unint64_t v52 = *(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 16);
        swift_bridgeObjectRetain();
        v52(v50, v51, v706);
        unint64_t v53 = (void *)((v685 + v50) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v54 = (void *)((v685 + v51) & 0xFFFFFFFFFFFFFFF8);
        void *v53 = *v54;
        BOOL v55 = (void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v56 = (void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8);
        *BOOL v55 = *v56;
        v55[1] = v56[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_41;
      }
      goto LABEL_38;
    }
    goto LABEL_34;
  }
  uint64_t v41 = *v39;
  if ((unint64_t)*v39 >= 0xFFFFFFFF) {
    LODWORD(v41) = -1;
  }
  unsigned int v42 = v41 + 1;
  uint64_t v40 = (uint64_t *)(((unint64_t)v30 + v34) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v43 = *v40;
  if ((unint64_t)*v40 >= 0xFFFFFFFF) {
    LODWORD(v43) = -1;
  }
  unsigned int v44 = v43 + 1;
  if (v42 >= 2)
  {
    if (v44 < 2) {
      goto LABEL_37;
    }
    goto LABEL_38;
  }
  if (v44 >= 2)
  {
LABEL_35:
    (*(void (**)(void *, uint64_t))(v728 + 8))(v29, v720);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v726 + 8))(((unint64_t)v39 + v704) & v705, v706);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_38:
    memcpy(v29, v30, v35);
    goto LABEL_41;
  }
LABEL_40:
  (*(void (**)(void *, void *, uint64_t))(v728 + 24))(v29, v30, v720);
  *unint64_t v39 = *v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v57 = ((unint64_t)v39 + v704) & v705;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 24))(v57, ((unint64_t)v40 + v704) & v705, v706);
  long long v58 = (void *)((v685 + v57) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v59 = (v685 + (((unint64_t)v40 + v704) & v705)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v60 = *(void *)v59;
  v59 += 15;
  *long long v58 = v60;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v61 = (void *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v61 = *(void *)(v59 & 0xFFFFFFFFFFFFFFF8);
  v61[1] = *(void *)((v59 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_41:
  uint64_t v62 = (uint64_t)v30 + v35 + 34;
  *((unsigned char *)v29 + v35) = *((unsigned char *)v30 + v35);
  uint64_t v63 = (uint64_t)v29 + v35 + 34;
  *(unsigned char *)(((unint64_t)v29 + v35) | 1) = *(unsigned char *)(((unint64_t)v30 + v35) | 1);
  uint64_t v722 = ~v729;
  *(unsigned char *)(((unint64_t)v29 + v35) | 2) = *(unsigned char *)(((unint64_t)v30 + v35) | 2);
  unint64_t v64 = ((unint64_t)v29 + v35 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v65 = ((unint64_t)v30 + v35 + 10) & 0xFFFFFFFFFFFFFFF8;
  id v66 = *(id *)v65;
  unint64_t v67 = *(void **)(v65 + 8);
  char v68 = *(unsigned char *)(v65 + 16);
  sub_24D3F1C98(*(id *)v65, v67, v68);
  unint64_t v69 = *(void **)v64;
  long long v70 = *(void **)(v64 + 8);
  *(void *)unint64_t v64 = v66;
  *(void *)(v64 + 8) = v67;
  char v71 = *(unsigned char *)(v64 + 16);
  *(unsigned char *)(v64 + 16) = v68;
  sub_24D3E380C(v69, v70, v71);
  unint64_t v72 = v63 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = v62 & 0xFFFFFFFFFFFFFFF8;
  size_t v74 = (uint64_t *)(v72 + 8);
  unint64_t v75 = *(void *)(v72 + 16);
  size_t v76 = (uint64_t *)((v62 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v77 = *(void *)(v73 + 16) >> 60;
  BOOL v81 = ((4 * v77) & 0xC) == 0;
  int v78 = (4 * v77) & 0xC | (v77 >> 2);
  int v79 = v81;
  if (v78 == 15) {
    int v80 = 1;
  }
  else {
    int v80 = v79;
  }
  if (4 * ((v75 >> 60) & 3)) {
    BOOL v81 = (((v75 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v75 >> 60) & 3))) == 15;
  }
  else {
    BOOL v81 = 1;
  }
  if (!v81)
  {
    if (v80)
    {
      *(void *)unint64_t v72 = *(void *)v73;
      unint64_t v85 = *(void *)(v73 + 16);
      if (v85 >> 60 == 15)
      {
        *(_OWORD *)size_t v74 = *(_OWORD *)v76;
      }
      else
      {
        uint64_t v90 = *v76;
        sub_24D3F9C18(*v76, *(void *)(v73 + 16));
        *(void *)(v72 + 8) = v90;
        *(void *)(v72 + 16) = v85;
      }
      uint64_t v83 = v695;
      goto LABEL_68;
    }
LABEL_62:
    long long v86 = *(_OWORD *)v73;
    long long v87 = *(_OWORD *)(v73 + 16);
    long long v88 = *(_OWORD *)(v73 + 32);
    *(void *)(v72 + 48) = *(void *)(v73 + 48);
    *(_OWORD *)(v72 + 16) = v87;
    *(_OWORD *)(v72 + 32) = v88;
    *(_OWORD *)unint64_t v72 = v86;
    uint64_t v83 = v695;
    uint64_t v89 = v714;
    goto LABEL_69;
  }
  if (!v80)
  {
    if (v75 >> 60 != 15) {
      sub_24D400DCC(*v74, v75);
    }
    goto LABEL_62;
  }
  *(void *)unint64_t v72 = *(void *)v73;
  unint64_t v82 = *(void *)(v73 + 16);
  if (v75 >> 60 != 15)
  {
    uint64_t v83 = v695;
    if (v82 >> 60 != 15)
    {
      uint64_t v91 = *v76;
      sub_24D3F9C18(*v76, *(void *)(v73 + 16));
      uint64_t v92 = *(void *)(v72 + 8);
      unint64_t v93 = *(void *)(v72 + 16);
      *(void *)(v72 + 8) = v91;
      *(void *)(v72 + 16) = v82;
      sub_24D400DCC(v92, v93);
      goto LABEL_68;
    }
    sub_24D4B12A0(v72 + 8);
    goto LABEL_65;
  }
  uint64_t v83 = v695;
  if (v82 >> 60 == 15)
  {
LABEL_65:
    *(_OWORD *)size_t v74 = *(_OWORD *)v76;
    goto LABEL_68;
  }
  uint64_t v84 = *v76;
  sub_24D3F9C18(*v76, *(void *)(v73 + 16));
  *(void *)(v72 + 8) = v84;
  *(void *)(v72 + 16) = v82;
LABEL_68:
  uint64_t v89 = v714;
  long long v94 = *(_OWORD *)(v73 + 24);
  *(unsigned char *)(v72 + 40) = *(unsigned char *)(v73 + 40);
  *(_OWORD *)(v72 + 24) = v94;
  *(void *)(v72 + 48) = *(void *)(v73 + 48);
LABEL_69:
  unsigned int v95 = (void **)((v72 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v96 = (void **)((v73 + 63) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v97 = *v96;
  uint64_t v98 = *v95;
  *unsigned int v95 = *v96;
  id v99 = v97;

  *(void *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v96 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v700 = __n + 7;
  unint64_t v100 = ((((((((v723 + ((((__n + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722) + v727 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  unint64_t v101 = (v14 + v711 + v100) & ~v711;
  unint64_t v102 = (v716 + v711 + v100) & ~v711;
  uint64_t v103 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v83 + 48);
  int v104 = v103(v101, 1, v724);
  v688 = (uint64_t (*)(void *, uint64_t, uint64_t))v103;
  int v105 = v103(v102, 1, v724);
  if (v104)
  {
    if (!v105)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v83 + 16))(v101, v102, v724);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v83 + 56))(v101, 0, 1, v724);
      goto LABEL_80;
    }
    int v106 = *(_DWORD *)(v83 + 84);
    size_t v107 = *(void *)(v83 + 64);
  }
  else
  {
    if (!v105)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v83 + 24))(v101, v102, v724);
      goto LABEL_80;
    }
    (*(void (**)(unint64_t, uint64_t))(v83 + 8))(v101, v724);
    int v106 = *(_DWORD *)(v83 + 84);
    size_t v107 = *(void *)(v83 + 64);
  }
  if (v106) {
    size_t v108 = v107;
  }
  else {
    size_t v108 = v107 + 1;
  }
  memcpy((void *)v101, (const void *)v102, v108);
LABEL_80:
  uint64_t v109 = v721;
  unsigned int v681 = *(_DWORD *)(v83 + 84);
  if (v681) {
    uint64_t v110 = *(void *)(v83 + 64);
  }
  else {
    uint64_t v110 = *(void *)(v83 + 64) + 1;
  }
  unint64_t v673 = (v716 + v711 + v100) & ~v711;
  unint64_t v675 = v101;
  size_t v694 = v110;
  long long v111 = (void *)(((v102 | 7) + v110) & 0xFFFFFFFFFFFFFFF8);
  size_t v112 = (void *)(((v101 | 7) + v110) & 0xFFFFFFFFFFFFFFF8);
  *size_t v112 = *v111;
  unint64_t v113 = ((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v114 = ((unint64_t)v111 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v113 = *(void *)v114;
  *(unsigned char *)(v113 + 8) = *(unsigned char *)(v114 + 8);
  uint64_t v115 = v707;
  uint64_t v116 = (void *)((v115 + 9 + v113) & ~v115);
  uint64_t v717 = v707 + 9;
  long long v117 = (const void *)((v115 + 9 + v114) & ~v115);
  uint64_t v118 = *(unsigned int *)(v721 + 84);
  unsigned int v667 = *(_DWORD *)(v725 + 84);
  if (v118 <= v667) {
    unsigned int v119 = *(_DWORD *)(v725 + 84);
  }
  else {
    unsigned int v119 = *(_DWORD *)(v721 + 84);
  }
  if (v119 <= 0x7FFFFFFE) {
    int v120 = 2147483646;
  }
  else {
    int v120 = v119;
  }
  uint64_t v121 = *(void *)(v721 + 64) + 7;
  uint64_t v702 = ~v89;
  uint64_t v701 = v89 + 8;
  uint64_t v686 = *(void *)(v725 + 64) + 7;
  unint64_t v665 = (((v686 + ((v89 + 8 + (v121 & 0xFFFFFFFFFFFFFFF8)) & ~v89)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v730 = v665 + 16;
  int v709 = v120;
  uint64_t v698 = v121;
  unsigned int v687 = *(_DWORD *)(v721 + 84);
  if (v118 == v120)
  {
    unint64_t v122 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v721 + 48);
    uint64_t v123 = v719;
    int v124 = v122(v116, v118, v719);
    unint64_t v125 = (unint64_t)v117;
    uint64_t v126 = v118;
LABEL_100:
    int v134 = v122((void *)v125, v126, v123);
    if (v124)
    {
      if (v134)
      {
LABEL_102:
        unint64_t v135 = v665 + 16;
        memcpy(v116, v117, v730);
LABEL_109:
        unint64_t v133 = ((((((((v723 + ((((__n + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722) + v727 + 34) & 0xFFFFFFFFFFFFFFF8)
                 + 63) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 8;
        goto LABEL_112;
      }
      unint64_t v127 = (uint64_t *)(((unint64_t)v116 + v121) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v130 = (uint64_t *)(((unint64_t)v117 + v121) & 0xFFFFFFFFFFFFFFF8);
LABEL_108:
      (*(void (**)(void *, const void *, uint64_t))(v109 + 16))(v116, v117, v719);
      uint64_t *v127 = *v130;
      unint64_t v136 = ((unint64_t)v127 + v701) & v702;
      unint64_t v137 = ((unint64_t)v130 + v701) & v702;
      int v138 = *(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 16);
      swift_bridgeObjectRetain();
      v138(v136, v137, v703);
      unint64_t v139 = (void *)((v686 + v136) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v140 = (void *)((v686 + v137) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v139 = *v140;
      size_t v141 = (void *)(((unint64_t)v139 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v142 = (void *)(((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8);
      *size_t v141 = *v142;
      v141[1] = v142[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v135 = v665 + 16;
      goto LABEL_109;
    }
    unint64_t v127 = (uint64_t *)(((unint64_t)v116 + v121) & 0xFFFFFFFFFFFFFFF8);
    if (v134)
    {
      unint64_t v133 = ((((((((v723 + ((((__n + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722) + v727 + 34) & 0xFFFFFFFFFFFFFFF8)
               + 63) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 8;
      goto LABEL_105;
    }
    uint64_t v130 = (uint64_t *)(((unint64_t)v117 + v121) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v133 = ((((((((v723 + ((((__n + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722) + v727 + 34) & 0xFFFFFFFFFFFFFFF8)
             + 63) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8;
    goto LABEL_111;
  }
  unint64_t v127 = (uint64_t *)(((unint64_t)v116 + v121) & 0xFFFFFFFFFFFFFFF8);
  if (v119 > 0x7FFFFFFE)
  {
    uint64_t v123 = v703;
    unint64_t v122 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v725 + 48);
    int v124 = v122((void *)(((unint64_t)v127 + v701) & v702), v667, v703);
    unint64_t v125 = (v701 + (((unint64_t)v117 + v121) & 0xFFFFFFFFFFFFFFF8)) & v702;
    uint64_t v126 = v667;
    uint64_t v109 = v721;
    goto LABEL_100;
  }
  uint64_t v128 = *v127;
  if ((unint64_t)*v127 >= 0xFFFFFFFF) {
    LODWORD(v128) = -1;
  }
  unsigned int v129 = v128 + 1;
  uint64_t v130 = (uint64_t *)(((unint64_t)v117 + v121) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v131 = *v130;
  if ((unint64_t)*v130 >= 0xFFFFFFFF) {
    LODWORD(v131) = -1;
  }
  unsigned int v132 = v131 + 1;
  if (v129 >= 2)
  {
    if (v132 >= 2) {
      goto LABEL_102;
    }
    goto LABEL_108;
  }
  unint64_t v133 = ((((((((v723 + ((((__n + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722) + v727 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  if (v132 >= 2)
  {
LABEL_105:
    (*(void (**)(void *, uint64_t))(v109 + 8))(v116, v719);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v725 + 8))(((unint64_t)v127 + v701) & v702, v703);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v135 = v665 + 16;
    memcpy(v116, v117, v730);
    goto LABEL_112;
  }
LABEL_111:
  (*(void (**)(void *, const void *, uint64_t))(v109 + 24))(v116, v117, v719);
  uint64_t *v127 = *v130;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v143 = ((unint64_t)v127 + v701) & v702;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 24))(v143, ((unint64_t)v130 + v701) & v702, v703);
  unint64_t v144 = (void *)((v686 + v143) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v145 = (v686 + (((unint64_t)v130 + v701) & v702)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v146 = *(void *)v145;
  v145 += 15;
  *unint64_t v144 = v146;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v147 = (void *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v147 = *(void *)(v145 & 0xFFFFFFFFFFFFFFF8);
  v147[1] = *(void *)((v145 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v135 = v665 + 16;
LABEL_112:
  unint64_t v148 = (unsigned char *)(((unint64_t)v117 + v135) | 1);
  uint64_t v149 = (unsigned char *)(((unint64_t)v117 + v135) | 2);
  uint64_t v150 = (uint64_t)v117 + v135 + 10;
  uint64_t v151 = (uint64_t)v117 + v135 + 34;
  *((unsigned char *)v116 + v135) = *((unsigned char *)v117 + v135);
  uint64_t v152 = (uint64_t)v116 + v135 + 34;
  *(unsigned char *)(((unint64_t)v116 + v135) | 1) = *v148;
  uint64_t v692 = ~v690;
  uint64_t v715 = ~v711;
  *(unsigned char *)(((unint64_t)v116 + v135) | 2) = *v149;
  unint64_t v153 = ((unint64_t)v116 + v135 + 10) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v154 = *(void **)(v150 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v155 = *(void **)((v150 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v156 = *(unsigned char *)((v150 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v154, v155, v156);
  uint64_t v157 = *(void **)v153;
  uint64_t v158 = *(void **)(v153 + 8);
  *(void *)unint64_t v153 = v154;
  *(void *)(v153 + 8) = v155;
  char v159 = *(unsigned char *)(v153 + 16);
  *(unsigned char *)(v153 + 16) = v156;
  sub_24D3E380C(v157, v158, v159);
  unint64_t v160 = v152 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v161 = v151 & 0xFFFFFFFFFFFFFFF8;
  char v162 = (uint64_t *)(v160 + 8);
  unint64_t v163 = *(void *)(v160 + 16);
  unint64_t v164 = (uint64_t *)((v151 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v165 = *(void *)((v151 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
  BOOL v81 = ((4 * v165) & 0xC) == 0;
  int v166 = (4 * v165) & 0xC | (v165 >> 2);
  int v167 = v81;
  if (v166 == 15) {
    int v168 = 1;
  }
  else {
    int v168 = v167;
  }
  unsigned int v669 = v119;
  if (4 * ((v163 >> 60) & 3) && (((v163 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v163 >> 60) & 3))) != 0xF)
  {
    if (v168)
    {
      *(void *)unint64_t v160 = *(void *)v161;
      unint64_t v169 = *(void *)(v161 + 16);
      goto LABEL_124;
    }
LABEL_128:
    long long v171 = *(_OWORD *)v161;
    long long v172 = *(_OWORD *)(v161 + 16);
    long long v173 = *(_OWORD *)(v161 + 32);
    *(void *)(v160 + 48) = *(void *)(v161 + 48);
    *(_OWORD *)(v160 + 16) = v172;
    *(_OWORD *)(v160 + 32) = v173;
    *(_OWORD *)unint64_t v160 = v171;
    uint64_t v174 = v689;
    uint64_t v175 = ~v711;
    goto LABEL_134;
  }
  if (!v168)
  {
    if (v163 >> 60 != 15) {
      sub_24D400DCC(*v162, v163);
    }
    goto LABEL_128;
  }
  *(void *)unint64_t v160 = *(void *)v161;
  unint64_t v169 = *(void *)(v161 + 16);
  if (v163 >> 60 != 15)
  {
    if (v169 >> 60 != 15)
    {
      uint64_t v176 = *v164;
      sub_24D3F9C18(*v164, *(void *)(v161 + 16));
      uint64_t v177 = *(void *)(v160 + 8);
      unint64_t v178 = *(void *)(v160 + 16);
      *(void *)(v160 + 8) = v176;
      *(void *)(v160 + 16) = v169;
      sub_24D400DCC(v177, v178);
      goto LABEL_133;
    }
    sub_24D4B12A0(v160 + 8);
    goto LABEL_131;
  }
LABEL_124:
  if (v169 >> 60 == 15)
  {
LABEL_131:
    *(_OWORD *)char v162 = *(_OWORD *)v164;
    goto LABEL_133;
  }
  uint64_t v170 = *v164;
  sub_24D3F9C18(*v164, v169);
  *(void *)(v160 + 8) = v170;
  *(void *)(v160 + 16) = v169;
LABEL_133:
  uint64_t v174 = v689;
  uint64_t v175 = ~v711;
  long long v179 = *(_OWORD *)(v161 + 24);
  *(unsigned char *)(v160 + 40) = *(unsigned char *)(v161 + 40);
  *(_OWORD *)(v160 + 24) = v179;
  *(void *)(v160 + 48) = *(void *)(v161 + 48);
LABEL_134:
  uint64_t v180 = (void **)((v160 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v181 = (void **)((v161 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v182 = *v181;
  uint64_t v183 = *v180;
  *uint64_t v180 = *v181;
  id v184 = v182;

  *(void *)(((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v181 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v696 = v694 + 7;
  uint64_t v185 = ~v707;
  unint64_t v186 = ((((((((v717 + ((((v694 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v707) + v730 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  unint64_t v187 = v186 + v675;
  *(unsigned char *)unint64_t v187 = *(unsigned char *)(v186 + v673);
  unint64_t v188 = (v186 + v673) & 0xFFFFFFFFFFFFFFF8;
  *(void *)((v187 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)(v188 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v189 = (void *)((((v186 + v675) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v190 = (void *)((v188 + 23) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v189 = *v190;
  v189[1] = v190[1];
  unint64_t v191 = ((unint64_t)v189 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v192 = ((unint64_t)v190 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v191 = *(void *)v192;
  *(unsigned char *)(v191 + 8) = *(unsigned char *)(v192 + 8);
  *(void *)(((unint64_t)v189 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v190 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v708 = v133 + v711;
  unint64_t v699 = v186;
  unint64_t v676 = (((((v186 + ((v133 + v711) & v175)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v193 = (void *)(((v677 | v690) + v676 + 8) & v692);
  LODWORD(v180) = v697(v193, 1, AssociatedTypeWitness);
  v712 = (void *)(((v683 | v690) + v676 + 8) & v692);
  int v194 = v697(v712, 1, AssociatedTypeWitness);
  if (v180)
  {
    if (!v194)
    {
      uint64_t v195 = ((v683 | v690) + v676 + 8) & v692;
      (*(void (**)(void *, void *, uint64_t))(v679 + 16))(v193, v712, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v679 + 56))(v193, 0, 1, AssociatedTypeWitness);
      goto LABEL_140;
    }
    goto LABEL_139;
  }
  if (v194)
  {
    (*(void (**)(void *, uint64_t))(v679 + 8))(v193, AssociatedTypeWitness);
LABEL_139:
    uint64_t v195 = ((v683 | v690) + v676 + 8) & v692;
    memcpy(v193, v712, __n);
    goto LABEL_140;
  }
  uint64_t v195 = ((v683 | v690) + v676 + 8) & v692;
  (*(void (**)(void *, void *, uint64_t))(v679 + 24))(v193, v712, AssociatedTypeWitness);
LABEL_140:
  uint64_t v196 = v185;
  uint64_t v691 = ((v677 | v690) + v676 + 8) & v692;
  uint64_t v197 = (void *)(((unint64_t)v193 + v700) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v198 = (void *)((v700 + v195) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v197 = *v198;
  unint64_t v199 = ((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v200 = ((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v199 = *(void *)v200;
  *(unsigned char *)(v199 + 8) = *(unsigned char *)(v200 + 8);
  unint64_t v201 = (char *)((v723 + v199) & v722);
  unint64_t v202 = (const void *)((v723 + v200) & v722);
  uint64_t v684 = v185;
  size_t v672 = v676 + 8;
  if (v174 == v718)
  {
    uint64_t v203 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v728 + 48);
    uint64_t v204 = v720;
    int v205 = v203(v201, v174, v720);
    unint64_t v206 = (unint64_t)v202;
    uint64_t v207 = v174;
  }
  else
  {
    uint64_t v208 = (uint64_t *)((unint64_t)&v201[v713] & 0xFFFFFFFFFFFFFFF8);
    if (v680 <= 0x7FFFFFFE)
    {
      uint64_t v209 = *v208;
      if ((unint64_t)*v208 >= 0xFFFFFFFF) {
        LODWORD(v209) = -1;
      }
      unsigned int v210 = v209 + 1;
      long long v211 = (uint64_t *)(((unint64_t)v202 + v713) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v212 = *v211;
      if ((unint64_t)*v211 >= 0xFFFFFFFF) {
        LODWORD(v212) = -1;
      }
      unsigned int v213 = v212 + 1;
      if (v210 >= 2)
      {
        if (v213 < 2) {
          goto LABEL_158;
        }
LABEL_159:
        unint64_t v222 = v666 + 16;
        memcpy(v201, v202, v727);
        goto LABEL_163;
      }
      if (v213 >= 2)
      {
LABEL_155:
        (*(void (**)(char *, uint64_t))(v728 + 8))(v201, v720);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v726 + 8))(((unint64_t)v208 + v704) & v705, v706);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_159;
      }
LABEL_161:
      (*(void (**)(char *, const void *, uint64_t))(v728 + 24))(v201, v202, v720);
      *uint64_t v208 = *v211;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v223 = ((unint64_t)v211 + v704) & v705;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 24))(((unint64_t)v208 + v704) & v705, v223, v706);
      unint64_t v224 = (void *)((v685 + (((unint64_t)v208 + v704) & v705)) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v225 = (v685 + v223) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v226 = *(void *)v225;
      v225 += 15;
      *unint64_t v224 = v226;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v227 = (void *)(((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v227 = *(void *)(v225 & 0xFFFFFFFFFFFFFFF8);
      v227[1] = *(void *)((v225 & 0xFFFFFFFFFFFFFFF8) + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_162;
    }
    uint64_t v204 = v706;
    uint64_t v203 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v726 + 48);
    int v205 = v203((char *)(((unint64_t)v208 + v704) & v705), v668, v706);
    uint64_t v175 = v715;
    unint64_t v206 = (v704 + (((unint64_t)v202 + v713) & 0xFFFFFFFFFFFFFFF8)) & v705;
    uint64_t v207 = v668;
    uint64_t v196 = v684;
  }
  int v214 = v203((char *)v206, v207, v204);
  if (!v205)
  {
    uint64_t v208 = (uint64_t *)((unint64_t)&v201[v713] & 0xFFFFFFFFFFFFFFF8);
    if (v214) {
      goto LABEL_155;
    }
    long long v211 = (uint64_t *)(((unint64_t)v202 + v713) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_161;
  }
  if (v214) {
    goto LABEL_159;
  }
  uint64_t v208 = (uint64_t *)((unint64_t)&v201[v713] & 0xFFFFFFFFFFFFFFF8);
  long long v211 = (uint64_t *)(((unint64_t)v202 + v713) & 0xFFFFFFFFFFFFFFF8);
LABEL_158:
  (*(void (**)(char *, const void *, uint64_t))(v728 + 16))(v201, v202, v720);
  *uint64_t v208 = *v211;
  unint64_t v215 = ((unint64_t)v208 + v704) & v705;
  unint64_t v216 = ((unint64_t)v211 + v704) & v705;
  uint64_t v217 = *(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 16);
  swift_bridgeObjectRetain();
  v217(v215, v216, v706);
  long long v218 = (void *)((v685 + v215) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v219 = (void *)((v685 + v216) & 0xFFFFFFFFFFFFFFF8);
  *long long v218 = *v219;
  unint64_t v220 = (void *)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v221 = (void *)(((unint64_t)v219 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v220 = *v221;
  v220[1] = v221[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_162:
  unint64_t v222 = v666 + 16;
LABEL_163:
  unint64_t v228 = (unsigned char *)(((unint64_t)v202 + v222) | 1);
  uint64_t v229 = (unsigned char *)(((unint64_t)v202 + v222) | 2);
  uint64_t v230 = (uint64_t)v202 + v222 + 10;
  uint64_t v232 = (uint64_t)v202 + v222 + 34;
  char v231 = *((unsigned char *)v202 + v222);
  unsigned int v233 = (unsigned char *)((unint64_t)&v201[v222] | 1);
  unsigned int v234 = (unsigned char *)((unint64_t)&v201[v222] | 2);
  uint64_t v235 = (uint64_t)&v201[v222 + 10];
  unsigned int v236 = &v201[v222];
  char *v236 = v231;
  *unsigned int v233 = *v228;
  unsigned char *v234 = *v229;
  unint64_t v237 = v235 & 0xFFFFFFFFFFFFFFF8;
  int v238 = *(void **)(v230 & 0xFFFFFFFFFFFFFFF8);
  id v239 = *(void **)((v230 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v240 = *(unsigned char *)((v230 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v238, v239, v240);
  uint64_t v241 = *(void **)v237;
  unsigned int v242 = *(void **)(v237 + 8);
  *(void *)unint64_t v237 = v238;
  *(void *)(v237 + 8) = v239;
  char v243 = *(unsigned char *)(v237 + 16);
  *(unsigned char *)(v237 + 16) = v240;
  sub_24D3E380C(v241, v242, v243);
  unint64_t v244 = (unint64_t)(v236 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v245 = v232 & 0xFFFFFFFFFFFFFFF8;
  unsigned int v246 = (uint64_t *)(v244 + 8);
  unint64_t v247 = *(void *)(v244 + 16);
  unint64_t v248 = (uint64_t *)((v232 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v249 = *(void *)(v245 + 16) >> 60;
  BOOL v81 = ((4 * v249) & 0xC) == 0;
  int v250 = (4 * v249) & 0xC | (v249 >> 2);
  int v251 = v81;
  if (v250 == 15) {
    int v252 = 1;
  }
  else {
    int v252 = v251;
  }
  if (4 * ((v247 >> 60) & 3) && (((v247 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v247 >> 60) & 3))) != 0xF)
  {
    if (v252)
    {
      *(void *)unint64_t v244 = *(void *)v245;
      unint64_t v253 = *(void *)(v245 + 16);
      goto LABEL_175;
    }
LABEL_179:
    long long v255 = *(_OWORD *)v245;
    long long v256 = *(_OWORD *)(v245 + 16);
    long long v257 = *(_OWORD *)(v245 + 32);
    *(void *)(v244 + 48) = *(void *)(v245 + 48);
    *(_OWORD *)(v244 + 16) = v256;
    *(_OWORD *)(v244 + 32) = v257;
    *(_OWORD *)unint64_t v244 = v255;
    uint64_t v258 = v691;
    goto LABEL_185;
  }
  if (!v252)
  {
    if (v247 >> 60 != 15) {
      sub_24D400DCC(*v246, v247);
    }
    goto LABEL_179;
  }
  *(void *)unint64_t v244 = *(void *)v245;
  unint64_t v253 = *(void *)(v245 + 16);
  if (v247 >> 60 != 15)
  {
    if (v253 >> 60 != 15)
    {
      uint64_t v259 = *v248;
      sub_24D3F9C18(*v248, *(void *)(v245 + 16));
      uint64_t v260 = *(void *)(v244 + 8);
      unint64_t v261 = *(void *)(v244 + 16);
      *(void *)(v244 + 8) = v259;
      *(void *)(v244 + 16) = v253;
      sub_24D400DCC(v260, v261);
      goto LABEL_184;
    }
    sub_24D4B12A0(v244 + 8);
    goto LABEL_182;
  }
LABEL_175:
  if (v253 >> 60 == 15)
  {
LABEL_182:
    *(_OWORD *)unsigned int v246 = *(_OWORD *)v248;
    goto LABEL_184;
  }
  uint64_t v254 = *v248;
  sub_24D3F9C18(*v248, v253);
  *(void *)(v244 + 8) = v254;
  *(void *)(v244 + 16) = v253;
LABEL_184:
  uint64_t v258 = v691;
  long long v262 = *(_OWORD *)(v245 + 24);
  *(unsigned char *)(v244 + 40) = *(unsigned char *)(v245 + 40);
  *(_OWORD *)(v244 + 24) = v262;
  *(void *)(v244 + 48) = *(void *)(v245 + 48);
LABEL_185:
  uint64_t v263 = (void **)((v244 + 63) & 0xFFFFFFFFFFFFFFF8);
  size_t v264 = (void **)((v245 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v265 = *v264;
  unint64_t v266 = *v263;
  *uint64_t v263 = *v264;
  id v267 = v265;

  *(void *)(((unint64_t)v263 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v264 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v268 = (void *)((v708 + v258) & v175);
  unint64_t v269 = (void *)(((unint64_t)v712 + v708) & v175);
  LODWORD(v266) = v688(v268, 1, v724);
  int v270 = v688(v269, 1, v724);
  if (v266)
  {
    if (!v270)
    {
      (*(void (**)(void *, void *, uint64_t))(v695 + 16))(v268, v269, v724);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v695 + 56))(v268, 0, 1, v724);
      goto LABEL_191;
    }
    goto LABEL_190;
  }
  if (v270)
  {
    (*(void (**)(void *, uint64_t))(v695 + 8))(v268, v724);
LABEL_190:
    memcpy(v268, v269, v694);
    goto LABEL_191;
  }
  (*(void (**)(void *, void *, uint64_t))(v695 + 24))(v268, v269, v724);
LABEL_191:
  long long v271 = (void *)(((unint64_t)v268 + v696) & 0xFFFFFFFFFFFFFFF8);
  long long v272 = (void *)(((unint64_t)v269 + v696) & 0xFFFFFFFFFFFFFFF8);
  void *v271 = *v272;
  unint64_t v273 = ((unint64_t)v271 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v274 = ((unint64_t)v272 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v273 = *(void *)v274;
  *(unsigned char *)(v273 + 8) = *(unsigned char *)(v274 + 8);
  uint64_t v275 = (char *)((v717 + v273) & v196);
  uint64_t v276 = (const void *)((v717 + v274) & v196);
  uint64_t v277 = v687;
  v678 = v268;
  v674 = v269;
  if (v687 == v709)
  {
    unint64_t v278 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v721 + 48);
    uint64_t v279 = v719;
    int v280 = v278(v275, v687, v719);
    unint64_t v281 = (unint64_t)v276;
  }
  else
  {
    unint64_t v282 = (uint64_t *)((unint64_t)&v275[v698] & 0xFFFFFFFFFFFFFFF8);
    if (v669 <= 0x7FFFFFFE)
    {
      uint64_t v283 = *v282;
      if ((unint64_t)*v282 >= 0xFFFFFFFF) {
        LODWORD(v283) = -1;
      }
      unsigned int v284 = v283 + 1;
      long long v285 = (uint64_t *)(((unint64_t)v276 + v698) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v286 = *v285;
      if ((unint64_t)*v285 >= 0xFFFFFFFF) {
        LODWORD(v286) = -1;
      }
      unsigned int v287 = v286 + 1;
      if (v284 >= 2)
      {
        if (v287 < 2) {
          goto LABEL_210;
        }
LABEL_211:
        unint64_t v298 = v665 + 16;
        memcpy(v275, v276, v730);
        goto LABEL_215;
      }
      BOOL v288 = v287 >= 2;
      uint64_t v289 = v721;
      if (v288)
      {
LABEL_207:
        (*(void (**)(char *, uint64_t))(v289 + 8))(v275, v719);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v725 + 8))(((unint64_t)v282 + v701) & v702, v703);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_211;
      }
LABEL_213:
      (*(void (**)(char *, const void *, uint64_t))(v289 + 24))(v275, v276, v719);
      *unint64_t v282 = *v285;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 24))(((unint64_t)v282 + v701) & v702, ((unint64_t)v285 + v701) & v702, v703);
      id v299 = (void *)((v686 + (((unint64_t)v282 + v701) & v702)) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v300 = (v686 + (((unint64_t)v285 + v701) & v702)) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v301 = *(void *)v300;
      v300 += 15;
      *id v299 = v301;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unint64_t v302 = (void *)(((unint64_t)v299 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v302 = *(void *)(v300 & 0xFFFFFFFFFFFFFFF8);
      v302[1] = *(void *)((v300 & 0xFFFFFFFFFFFFFFF8) + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_214;
    }
    unint64_t v278 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v725 + 48);
    uint64_t v277 = v667;
    uint64_t v279 = v703;
    int v280 = v278((char *)(((unint64_t)v282 + v701) & v702), v667, v703);
    unint64_t v281 = (v701 + (((unint64_t)v276 + v698) & 0xFFFFFFFFFFFFFFF8)) & v702;
  }
  int v290 = v278((char *)v281, v277, v279);
  if (!v280)
  {
    unint64_t v282 = (uint64_t *)((unint64_t)&v275[v698] & 0xFFFFFFFFFFFFFFF8);
    if (v290)
    {
      uint64_t v289 = v721;
      goto LABEL_207;
    }
    long long v285 = (uint64_t *)(((unint64_t)v276 + v698) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v289 = v721;
    goto LABEL_213;
  }
  if (v290) {
    goto LABEL_211;
  }
  unint64_t v282 = (uint64_t *)((unint64_t)&v275[v698] & 0xFFFFFFFFFFFFFFF8);
  long long v285 = (uint64_t *)(((unint64_t)v276 + v698) & 0xFFFFFFFFFFFFFFF8);
LABEL_210:
  (*(void (**)(char *, const void *, uint64_t))(v721 + 16))(v275, v276, v719);
  *unint64_t v282 = *v285;
  unint64_t v291 = ((unint64_t)v282 + v701) & v702;
  unint64_t v292 = ((unint64_t)v285 + v701) & v702;
  long long v293 = *(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 16);
  swift_bridgeObjectRetain();
  v293(v291, v292, v703);
  unint64_t v294 = (void *)((v686 + v291) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v295 = (void *)((v686 + v292) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v294 = *v295;
  v296 = (void *)(((unint64_t)v294 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v297 = (void *)(((unint64_t)v295 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v296 = *v297;
  v296[1] = v297[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_214:
  unint64_t v298 = v665 + 16;
LABEL_215:
  unint64_t v303 = (unsigned char *)(((unint64_t)v276 + v298) | 1);
  unint64_t v304 = (unsigned char *)(((unint64_t)v276 + v298) | 2);
  uint64_t v305 = (uint64_t)v276 + v298 + 10;
  uint64_t v307 = (uint64_t)v276 + v298 + 34;
  char v306 = *((unsigned char *)v276 + v298);
  unint64_t v308 = (unsigned char *)((unint64_t)&v275[v298] | 1);
  unint64_t v309 = (unsigned char *)((unint64_t)&v275[v298] | 2);
  uint64_t v310 = (uint64_t)&v275[v298 + 10];
  long long v311 = &v275[v298];
  *long long v311 = v306;
  unsigned char *v308 = *v303;
  *unint64_t v309 = *v304;
  unint64_t v312 = v310 & 0xFFFFFFFFFFFFFFF8;
  long long v313 = *(void **)(v305 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v314 = *(void **)((v305 & 0xFFFFFFFFFFFFFFF8) + 8);
  char v315 = *(unsigned char *)((v305 & 0xFFFFFFFFFFFFFFF8) + 16);
  sub_24D3F1C98(v313, v314, v315);
  uint64_t v316 = *(void **)v312;
  uint64_t v317 = *(void **)(v312 + 8);
  *(void *)unint64_t v312 = v313;
  *(void *)(v312 + 8) = v314;
  char v318 = *(unsigned char *)(v312 + 16);
  *(unsigned char *)(v312 + 16) = v315;
  sub_24D3E380C(v316, v317, v318);
  unint64_t v319 = (unint64_t)(v311 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v320 = v307 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v321 = (uint64_t *)(v319 + 8);
  unint64_t v322 = *(void *)(v319 + 16);
  unint64_t v323 = (uint64_t *)((v307 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v324 = *(void *)(v320 + 16) >> 60;
  BOOL v81 = ((4 * v324) & 0xC) == 0;
  int v325 = (4 * v324) & 0xC | (v324 >> 2);
  int v326 = v81;
  if (v325 == 15) {
    int v327 = 1;
  }
  else {
    int v327 = v326;
  }
  if (4 * ((v322 >> 60) & 3) && (((v322 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v322 >> 60) & 3))) != 0xF)
  {
    if (v327)
    {
      *(void *)unint64_t v319 = *(void *)v320;
      unint64_t v328 = *(void *)(v320 + 16);
      if (v328 >> 60 == 15)
      {
        *(_OWORD *)unint64_t v321 = *(_OWORD *)v323;
      }
      else
      {
        uint64_t v340 = *v323;
        sub_24D3F9C18(*v323, *(void *)(v320 + 16));
        *(void *)(v319 + 8) = v340;
        *(void *)(v319 + 16) = v328;
      }
      unint64_t v330 = v699;
      uint64_t v331 = v689;
      goto LABEL_239;
    }
LABEL_232:
    long long v333 = *(_OWORD *)v320;
    long long v334 = *(_OWORD *)(v320 + 16);
    long long v335 = *(_OWORD *)(v320 + 32);
    *(void *)(v319 + 48) = *(void *)(v320 + 48);
    *(_OWORD *)(v319 + 16) = v334;
    *(_OWORD *)(v319 + 32) = v335;
    *(_OWORD *)unint64_t v319 = v333;
    unint64_t v330 = v699;
    uint64_t v331 = v689;
    uint64_t v336 = v671;
    unint64_t v337 = v676;
    unsigned int v338 = v678;
    uint64_t v339 = v674;
    goto LABEL_240;
  }
  if (!v327)
  {
    if (v322 >> 60 != 15) {
      sub_24D400DCC(*v321, v322);
    }
    goto LABEL_232;
  }
  *(void *)unint64_t v319 = *(void *)v320;
  unint64_t v329 = *(void *)(v320 + 16);
  if (v322 >> 60 != 15)
  {
    unint64_t v330 = v699;
    uint64_t v331 = v689;
    if (v329 >> 60 != 15)
    {
      uint64_t v341 = *v323;
      sub_24D3F9C18(*v323, *(void *)(v320 + 16));
      uint64_t v342 = *(void *)(v319 + 8);
      unint64_t v343 = *(void *)(v319 + 16);
      *(void *)(v319 + 8) = v341;
      *(void *)(v319 + 16) = v329;
      sub_24D400DCC(v342, v343);
      goto LABEL_239;
    }
    sub_24D4B12A0(v319 + 8);
    goto LABEL_237;
  }
  unint64_t v330 = v699;
  uint64_t v331 = v689;
  if (v329 >> 60 == 15)
  {
LABEL_237:
    *(_OWORD *)unint64_t v321 = *(_OWORD *)v323;
    goto LABEL_239;
  }
  uint64_t v332 = *v323;
  sub_24D3F9C18(*v323, *(void *)(v320 + 16));
  *(void *)(v319 + 8) = v332;
  *(void *)(v319 + 16) = v329;
LABEL_239:
  uint64_t v336 = v671;
  unint64_t v337 = v676;
  unsigned int v338 = v678;
  uint64_t v339 = v674;
  long long v344 = *(_OWORD *)(v320 + 24);
  *(unsigned char *)(v319 + 40) = *(unsigned char *)(v320 + 40);
  *(_OWORD *)(v319 + 24) = v344;
  *(void *)(v319 + 48) = *(void *)(v320 + 48);
LABEL_240:
  unint64_t v345 = (void **)((v319 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v346 = (void **)((v320 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v347 = *v346;
  unsigned int v348 = *v345;
  *unint64_t v345 = *v346;
  id v349 = v347;

  *(void *)(((unint64_t)v345 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v346 + 15) & 0xFFFFFFFFFFFFFFF8);
  v338[v330] = v339[v330];
  unint64_t v350 = (unint64_t)&v338[v330] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v351 = (unint64_t)&v339[v330] & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v350 + 8) = *(void *)(v351 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v352 = (void *)((v350 + 23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v353 = (void *)((v351 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v352 = *v353;
  v352[1] = v353[1];
  unint64_t v354 = ((unint64_t)v352 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v355 = ((unint64_t)v353 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v354 = *(void *)v355;
  *(unsigned char *)(v354 + 8) = *(unsigned char *)(v355 + 8);
  *(void *)(((unint64_t)v352 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v353 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v356 = (void *)((v337 + 15 + v691) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v357 = (void *)(((unint64_t)v712 + v337 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v356 = *v357;
  v356[1] = v357[1];
  unint64_t v358 = ((unint64_t)v356 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v359 = ((unint64_t)v357 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v360 = *(void *)v359;
  *(unsigned char *)(v358 + 8) = *(unsigned char *)(v359 + 8);
  *(void *)unint64_t v358 = v360;
  uint64_t v361 = (void *)((v336 + v358) & v692);
  int v362 = (void *)((v336 + v359) & v692);
  uint64_t v364 = v681;
  uint64_t v363 = v682;
  if (v682) {
    unsigned int v365 = v682 - 1;
  }
  else {
    unsigned int v365 = 0;
  }
  int v366 = v718 - 1;
  if (v365 <= v718 - 1) {
    unsigned int v367 = v718 - 1;
  }
  else {
    unsigned int v367 = v365;
  }
  if (v367 <= 0x7FFFFFFE) {
    unsigned int v368 = 2147483646;
  }
  else {
    unsigned int v368 = v367;
  }
  if (v681) {
    unsigned int v369 = v681 - 1;
  }
  else {
    unsigned int v369 = 0;
  }
  int v370 = v709 - 1;
  if (v369 <= v709 - 1) {
    unsigned int v371 = v709 - 1;
  }
  else {
    unsigned int v371 = v369;
  }
  if (v371 <= 0x7FFFFFFE) {
    unsigned int v372 = 2147483646;
  }
  else {
    unsigned int v372 = v371;
  }
  if (v372 <= v368) {
    unsigned int v373 = v368;
  }
  else {
    unsigned int v373 = v372;
  }
  if (v373 <= 0x7FFFFFFF) {
    int v374 = 0x7FFFFFFF;
  }
  else {
    int v374 = v373;
  }
  if (v368 == v374)
  {
    unint64_t v375 = v361;
    if (v365 == v368)
    {
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if (v682 >= 2)
      {
        unsigned int v379 = ((uint64_t (*)(void *))v697)(v361);
        uint64_t v363 = v682;
        if (v379 >= 2) {
          goto LABEL_307;
        }
      }
      goto LABEL_304;
    }
    unint64_t v385 = (v723 + (((((unint64_t)v361 + v700) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722;
    if (v366 != v368)
    {
      unint64_t v389 = *(void *)((((v666 + v385 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
      if (v389 >= 0xFFFFFFFF) {
        LODWORD(v389) = -1;
      }
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if ((v389 + 1) >= 2)
      {
LABEL_307:
        if (v365 == v368)
        {
          size_t v382 = v666 + 16;
          size_t v383 = v362;
          if (v363 < 2) {
            goto LABEL_381;
          }
          unsigned int v396 = v697(v362, v363, v378);
LABEL_345:
          if (v396 >= 2) {
            goto LABEL_569;
          }
LABEL_381:
          if (v697(v383, 1, v378))
          {
            memcpy(v375, v383, __n);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v679 + 16))(v375, v383, v378);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v679 + 56))(v375, 0, 1, v378);
          }
          v415 = (void *)(((unint64_t)v375 + v700) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v416 = (void *)(((unint64_t)v383 + v700) & 0xFFFFFFFFFFFFFFF8);
          void *v415 = *v416;
          unint64_t v417 = ((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v418 = ((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v417 = *(void *)v418;
          *(unsigned char *)(v417 + 8) = *(unsigned char *)(v418 + 8);
          id v419 = (char *)((v723 + v417) & v722);
          uint64_t v420 = (const void *)((v723 + v418) & v722);
          if (v331 == v718)
          {
            if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v376 + 48))(v420, v331, v720)) {
              goto LABEL_394;
            }
          }
          else
          {
            uint64_t v421 = (void *)(((unint64_t)v420 + v377) & 0xFFFFFFFFFFFFFFF8);
            if (v680 > 0x7FFFFFFE)
            {
              if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v726 + 48))(((unint64_t)v421 + v704) & v705, v668, v706))
              {
LABEL_394:
                uint64_t v421 = (void *)(((unint64_t)v420 + v377) & 0xFFFFFFFFFFFFFFF8);
LABEL_395:
                (*(void (**)(char *, const void *, uint64_t))(v376 + 16))(v419, v420, v720);
                char v423 = (void *)((unint64_t)&v419[v377] & 0xFFFFFFFFFFFFFFF8);
                *char v423 = *v421;
                unint64_t v424 = ((unint64_t)v423 + v704) & v705;
                unint64_t v425 = ((unint64_t)v421 + v704) & v705;
                v426 = *(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 16);
                swift_bridgeObjectRetain();
                v426(v424, v425, v706);
                size_t v382 = v666 + 16;
                v427 = (void *)((v685 + v424) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v428 = (void *)((v685 + v425) & 0xFFFFFFFFFFFFFFF8);
                void *v427 = *v428;
                v429 = (void *)(((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8);
                v430 = (void *)(((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v429 = *v430;
                v429[1] = v430[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                goto LABEL_396;
              }
            }
            else
            {
              uint64_t v422 = *v421;
              if (*v421 >= 0xFFFFFFFFuLL) {
                LODWORD(v422) = -1;
              }
              if ((v422 + 1) < 2) {
                goto LABEL_395;
              }
            }
          }
          memcpy(v419, v420, v382);
LABEL_396:
          v431 = (unsigned char *)(((unint64_t)v420 + v382) | 1);
          v432 = (unsigned char *)(((unint64_t)v420 + v382) | 2);
          uint64_t v433 = (uint64_t)v420 + v382 + 10;
          uint64_t v435 = (uint64_t)v420 + v382 + 34;
          char v434 = *((unsigned char *)v420 + v382);
          uint64_t v436 = (unsigned char *)((unint64_t)&v419[v382] | 1);
          v437 = (unsigned char *)((unint64_t)&v419[v382] | 2);
          uint64_t v438 = (uint64_t)&v419[v382 + 10];
          uint64_t v439 = &v419[v382];
          *uint64_t v439 = v434;
          *uint64_t v436 = *v431;
          unsigned char *v437 = *v432;
          unint64_t v440 = v438 & 0xFFFFFFFFFFFFFFF8;
          v441 = *(void **)(v433 & 0xFFFFFFFFFFFFFFF8);
          uint64_t v442 = *(void **)((v433 & 0xFFFFFFFFFFFFFFF8) + 8);
          char v443 = *(unsigned char *)((v433 & 0xFFFFFFFFFFFFFFF8) + 16);
          sub_24D3F1C98(v441, v442, v443);
          *(void *)unint64_t v440 = v441;
          *(void *)(v440 + 8) = v442;
          *(unsigned char *)(v440 + 16) = v443;
          unint64_t v444 = (unint64_t)(v439 + 34) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v445 = v435 & 0xFFFFFFFFFFFFFFF8;
          uint64_t v446 = *(void *)(v445 + 16) >> 60;
          if (!(4 * (v446 & 3)) || ((v446 >> 2) & 0xFFFFFFF3 | (4 * (v446 & 3))) == 0xF)
          {
            v450 = (uint64_t *)(v445 + 8);
            *(void *)unint64_t v444 = *(void *)v445;
            unint64_t v451 = *(void *)(v445 + 16);
            if (v451 >> 60 == 15)
            {
              *(_OWORD *)(v444 + 8) = *(_OWORD *)v450;
            }
            else
            {
              uint64_t v452 = *v450;
              sub_24D3F9C18(*v450, *(void *)(v445 + 16));
              *(void *)(v444 + 8) = v452;
              *(void *)(v444 + 16) = v451;
            }
            long long v453 = *(_OWORD *)(v445 + 24);
            *(unsigned char *)(v444 + 40) = *(unsigned char *)(v445 + 40);
            *(_OWORD *)(v444 + 24) = v453;
            *(void *)(v444 + 48) = *(void *)(v445 + 48);
          }
          else
          {
            long long v447 = *(_OWORD *)v445;
            long long v448 = *(_OWORD *)(v445 + 16);
            long long v449 = *(_OWORD *)(v445 + 32);
            *(void *)(v444 + 48) = *(void *)(v445 + 48);
            *(_OWORD *)(v444 + 16) = v448;
            *(_OWORD *)(v444 + 32) = v449;
            *(_OWORD *)unint64_t v444 = v447;
          }
          uint64_t v454 = (void *)((v444 + 63) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v455 = (void **)((v445 + 63) & 0xFFFFFFFFFFFFFFF8);
          v456 = *v455;
          *uint64_t v454 = *v455;
          *(void *)(((unint64_t)v454 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v455 + 15) & 0xFFFFFFFFFFFFFFF8);
          v457 = (void *)(((unint64_t)v375 + v708) & v715);
          uint64_t v458 = (void *)(((unint64_t)v383 + v708) & v715);
          id v459 = v456;
          if (v688(v458, 1, v724))
          {
            memcpy(v457, v458, v694);
          }
          else
          {
            (*(void (**)(void *, void *, uint64_t))(v695 + 16))(v457, v458, v724);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v695 + 56))(v457, 0, 1, v724);
          }
          v460 = (void *)(((unint64_t)v457 + v696) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v461 = (void *)(((unint64_t)v458 + v696) & 0xFFFFFFFFFFFFFFF8);
          void *v460 = *v461;
          unint64_t v462 = ((unint64_t)v460 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v463 = ((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v462 = *(void *)v463;
          *(unsigned char *)(v462 + 8) = *(unsigned char *)(v463 + 8);
          id v464 = (unsigned char *)((v717 + v462) & v684);
          uint64_t v465 = (unsigned char *)((v717 + v463) & v684);
          if (v687 == v709)
          {
            if (!(*(unsigned int (**)(unsigned char *))(v721 + 48))(v465)) {
              goto LABEL_416;
            }
          }
          else
          {
            uint64_t v466 = (void *)((unint64_t)&v465[v698] & 0xFFFFFFFFFFFFFFF8);
            if (v669 > 0x7FFFFFFE)
            {
              if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v725 + 48))(((unint64_t)v466 + v701) & v702, v667, v703))
              {
LABEL_416:
                uint64_t v466 = (void *)((unint64_t)&v465[v698] & 0xFFFFFFFFFFFFFFF8);
LABEL_417:
                (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v721 + 16))(v464, v465, v719);
                uint64_t v468 = (void *)((unint64_t)&v464[v698] & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v468 = *v466;
                unint64_t v469 = ((unint64_t)v468 + v701) & v702;
                unint64_t v470 = ((unint64_t)v466 + v701) & v702;
                uint64_t v471 = *(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 16);
                swift_bridgeObjectRetain();
                v471(v469, v470, v703);
                v472 = (void *)((v686 + v469) & 0xFFFFFFFFFFFFFFF8);
                v473 = (void *)((v686 + v470) & 0xFFFFFFFFFFFFFFF8);
                void *v472 = *v473;
                v474 = (void *)(((unint64_t)v472 + 15) & 0xFFFFFFFFFFFFFFF8);
                v475 = (void *)(((unint64_t)v473 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v474 = *v475;
                v474[1] = v475[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
LABEL_418:
                uint64_t v476 = (uint64_t)&v465[v730 + 10];
                uint64_t v477 = (uint64_t)&v465[v730 + 34];
                v464[v730] = v465[v730];
                uint64_t v478 = (uint64_t)&v464[v730 + 34];
                *(unsigned char *)((unint64_t)&v464[v730] | 1) = *(unsigned char *)((unint64_t)&v465[v730] | 1);
                *(unsigned char *)((unint64_t)&v464[v730] | 2) = *(unsigned char *)((unint64_t)&v465[v730] | 2);
                unint64_t v479 = (unint64_t)&v464[v730 + 10] & 0xFFFFFFFFFFFFFFF8;
                v480 = *(void **)(v476 & 0xFFFFFFFFFFFFFFF8);
                uint64_t v481 = *(void **)((v476 & 0xFFFFFFFFFFFFFFF8) + 8);
                char v482 = *(unsigned char *)((v476 & 0xFFFFFFFFFFFFFFF8) + 16);
                sub_24D3F1C98(v480, v481, v482);
                *(void *)unint64_t v479 = v480;
                *(void *)(v479 + 8) = v481;
                *(unsigned char *)(v479 + 16) = v482;
                unint64_t v483 = v478 & 0xFFFFFFFFFFFFFFF8;
                unint64_t v484 = v477 & 0xFFFFFFFFFFFFFFF8;
                uint64_t v485 = *(void *)(v484 + 16) >> 60;
                if (!(4 * (v485 & 3)) || ((v485 >> 2) & 0xFFFFFFF3 | (4 * (v485 & 3))) == 0xF)
                {
                  uint64_t v490 = (uint64_t *)(v484 + 8);
                  *(void *)unint64_t v483 = *(void *)v484;
                  unint64_t v491 = *(void *)(v484 + 16);
                  if (v491 >> 60 == 15)
                  {
                    *(_OWORD *)(v483 + 8) = *(_OWORD *)v490;
                  }
                  else
                  {
                    uint64_t v492 = *v490;
                    sub_24D3F9C18(*v490, *(void *)(v484 + 16));
                    *(void *)(v483 + 8) = v492;
                    *(void *)(v483 + 16) = v491;
                  }
                  uint64_t v489 = v670;
                  long long v493 = *(_OWORD *)(v484 + 24);
                  *(unsigned char *)(v483 + 40) = *(unsigned char *)(v484 + 40);
                  *(_OWORD *)(v483 + 24) = v493;
                  *(void *)(v483 + 48) = *(void *)(v484 + 48);
                }
                else
                {
                  long long v486 = *(_OWORD *)v484;
                  long long v487 = *(_OWORD *)(v484 + 16);
                  long long v488 = *(_OWORD *)(v484 + 32);
                  *(void *)(v483 + 48) = *(void *)(v484 + 48);
                  *(_OWORD *)(v483 + 16) = v487;
                  *(_OWORD *)(v483 + 32) = v488;
                  *(_OWORD *)unint64_t v483 = v486;
                  uint64_t v489 = v670;
                }
                uint64_t v494 = (void *)((v483 + 63) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v495 = (void **)((v484 + 63) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v496 = *v495;
                *uint64_t v494 = *v495;
                *(void *)(((unint64_t)v494 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v495
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *((unsigned char *)v457 + v699) = *((unsigned char *)v458 + v699);
                unint64_t v497 = ((unint64_t)v457 + v699) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v498 = ((unint64_t)v458 + v699) & 0xFFFFFFFFFFFFFFF8;
                *(void *)(v497 + 8) = *(void *)(v498 + 8);
                unint64_t v499 = (_OWORD *)((v497 + 23) & 0xFFFFFFFFFFFFFFF8);
                v500 = (_OWORD *)((v498 + 23) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v499 = *v500;
                unint64_t v501 = ((unint64_t)v499 + 23) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v502 = ((unint64_t)v500 + 23) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v501 = *(void *)v502;
                *(unsigned char *)(v501 + 8) = *(unsigned char *)(v502 + 8);
                *(void *)(((unint64_t)v499 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v500
                                                                                               + 39) & 0xFFFFFFFFFFFFFFF8);
                id v503 = v496;
                swift_bridgeObjectRetain();
                return v489;
              }
            }
            else
            {
              uint64_t v467 = *v466;
              if (*v466 >= 0xFFFFFFFFuLL) {
                LODWORD(v467) = -1;
              }
              if ((v467 + 1) < 2) {
                goto LABEL_417;
              }
            }
          }
          memcpy(v464, v465, v730);
          goto LABEL_418;
        }
        size_t v383 = v362;
        unint64_t v399 = (v723 + (((((unint64_t)v362 + v700) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722;
        if (v366 != v368)
        {
          unint64_t v402 = *(void *)((((v666 + v399 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
          if (v402 >= 0xFFFFFFFF) {
            LODWORD(v402) = -1;
          }
          size_t v382 = v666 + 16;
          if ((v402 + 1) >= 2) {
            goto LABEL_569;
          }
          goto LABEL_381;
        }
        if (v331 == v718)
        {
          unsigned int v400 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v376 + 48))(v399, v331, v720);
        }
        else
        {
          uint64_t v404 = (unint64_t *)((v377 + v399) & 0xFFFFFFFFFFFFFFF8);
          if (v680 <= 0x7FFFFFFE)
          {
            unint64_t v405 = *v404;
            if (v405 >= 0xFFFFFFFF) {
              unsigned int v400 = -1;
            }
            else {
              unsigned int v400 = v405;
            }
            size_t v382 = v666 + 16;
            if (v400 + 1 < 2) {
              goto LABEL_381;
            }
            goto LABEL_380;
          }
          unsigned int v400 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v726 + 48))(((unint64_t)v404 + v704) & v705, v668, v706);
        }
        size_t v382 = v666 + 16;
LABEL_380:
        if (v400 < 2) {
          goto LABEL_381;
        }
        goto LABEL_569;
      }
      goto LABEL_304;
    }
    if (v331 == v718)
    {
      uint64_t v376 = v728;
      unsigned int v386 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v728 + 48))(v385, v331, v720);
      uint64_t v363 = v682;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
    }
    else
    {
      uint64_t v377 = v713;
      uint64_t v390 = (unint64_t *)((v713 + v385) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v376 = v728;
      uint64_t v378 = AssociatedTypeWitness;
      if (v680 > 0x7FFFFFFE)
      {
        unsigned int v386 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v726 + 48))(((unint64_t)v390 + v704) & v705, v668, v706);
        uint64_t v363 = v682;
      }
      else
      {
        unint64_t v391 = *v390;
        if (v391 >= 0xFFFFFFFF) {
          unsigned int v386 = -1;
        }
        else {
          unsigned int v386 = v391;
        }
        if (v386 + 1 < 2)
        {
LABEL_304:
          if (v365 == v368)
          {
            uint64_t v381 = v724;
            size_t v382 = v666 + 16;
            size_t v383 = v362;
            if (v363 < 2) {
              goto LABEL_428;
            }
            unsigned int v395 = v697(v362, v363, v378);
LABEL_339:
            if (v395 >= 2) {
              goto LABEL_431;
            }
LABEL_428:
            int v504 = v697(v375, 1, v378);
            int v505 = v697(v383, 1, v378);
            if (v504)
            {
              if (!v505)
              {
                (*(void (**)(void *, void *, uint64_t))(v679 + 16))(v375, v383, v378);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v679 + 56))(v375, 0, 1, v378);
                goto LABEL_439;
              }
            }
            else
            {
              if (!v505)
              {
                (*(void (**)(void *, void *, uint64_t))(v679 + 24))(v375, v383, v378);
LABEL_439:
                v507 = (void *)(((unint64_t)v375 + v700) & 0xFFFFFFFFFFFFFFF8);
                v508 = (void *)(((unint64_t)v383 + v700) & 0xFFFFFFFFFFFFFFF8);
                void *v507 = *v508;
                unint64_t v509 = ((unint64_t)v507 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v510 = ((unint64_t)v508 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v509 = *(void *)v510;
                *(unsigned char *)(v509 + 8) = *(unsigned char *)(v510 + 8);
                v511 = (void *)((v723 + v509) & v722);
                v512 = (void *)((v723 + v510) & v722);
                if (v331 == v718)
                {
                  v513 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v376 + 48);
                  int v514 = v513(v511, v331, v720);
                  int v515 = v513(v512, v331, v720);
                  if (v514) {
                    goto LABEL_441;
                  }
                }
                else
                {
                  v516 = (uint64_t *)(((unint64_t)v511 + v377) & 0xFFFFFFFFFFFFFFF8);
                  if (v680 <= 0x7FFFFFFE)
                  {
                    uint64_t v518 = *v516;
                    if ((unint64_t)*v516 >= 0xFFFFFFFF) {
                      LODWORD(v518) = -1;
                    }
                    unsigned int v519 = v518 + 1;
                    uint64_t v517 = (uint64_t *)(((unint64_t)v512 + v377) & 0xFFFFFFFFFFFFFFF8);
                    uint64_t v520 = *v517;
                    if ((unint64_t)*v517 >= 0xFFFFFFFF) {
                      LODWORD(v520) = -1;
                    }
                    unsigned int v521 = v520 + 1;
                    if (v519 >= 2)
                    {
                      if (v521 < 2) {
                        goto LABEL_491;
                      }
                      goto LABEL_492;
                    }
                    if (v521 >= 2)
                    {
LABEL_459:
                      (*(void (**)(void *, uint64_t))(v376 + 8))(v511, v720);
                      swift_bridgeObjectRelease();
                      (*(void (**)(unint64_t, uint64_t))(v726 + 8))(((unint64_t)v516 + v704) & v705, v706);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
LABEL_492:
                      unint64_t v550 = v666 + 16;
                      memcpy(v511, v512, v727);
LABEL_495:
                      v542 = v375;
LABEL_496:
                      uint64_t v557 = (uint64_t)v512 + v550 + 10;
                      uint64_t v558 = (uint64_t)v512 + v550 + 34;
                      *((unsigned char *)v511 + v550) = *((unsigned char *)v512 + v550);
                      uint64_t v559 = (uint64_t)v511 + v550 + 34;
                      *(unsigned char *)(((unint64_t)v511 + v550) | 1) = *(unsigned char *)(((unint64_t)v512 + v550) | 1);
                      *(unsigned char *)(((unint64_t)v511 + v550) | 2) = *(unsigned char *)(((unint64_t)v512 + v550) | 2);
                      unint64_t v560 = ((unint64_t)v511 + v550 + 10) & 0xFFFFFFFFFFFFFFF8;
                      v561 = *(void **)(v557 & 0xFFFFFFFFFFFFFFF8);
                      v562 = *(void **)((v557 & 0xFFFFFFFFFFFFFFF8) + 8);
                      char v563 = *(unsigned char *)((v557 & 0xFFFFFFFFFFFFFFF8) + 16);
                      sub_24D3F1C98(v561, v562, v563);
                      v564 = *(void **)v560;
                      uint64_t v565 = *(void **)(v560 + 8);
                      *(void *)unint64_t v560 = v561;
                      *(void *)(v560 + 8) = v562;
                      char v566 = *(unsigned char *)(v560 + 16);
                      *(unsigned char *)(v560 + 16) = v563;
                      sub_24D3E380C(v564, v565, v566);
                      unint64_t v567 = v559 & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v568 = v558 & 0xFFFFFFFFFFFFFFF8;
                      v569 = (uint64_t *)((v559 & 0xFFFFFFFFFFFFFFF8) + 8);
                      unint64_t v570 = *(void *)((v559 & 0xFFFFFFFFFFFFFFF8) + 16);
                      uint64_t v571 = (uint64_t *)(v568 + 8);
                      uint64_t v572 = *(void *)(v568 + 16) >> 60;
                      BOOL v81 = ((4 * v572) & 0xC) == 0;
                      int v573 = (4 * v572) & 0xC | (v572 >> 2);
                      int v574 = v81;
                      if (v573 == 15) {
                        int v575 = 1;
                      }
                      else {
                        int v575 = v574;
                      }
                      if (!(4 * ((v570 >> 60) & 3))
                        || (((v570 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v570 >> 60) & 3))) == 0xF)
                      {
                        if (v575)
                        {
                          *(void *)unint64_t v567 = *(void *)v568;
                          unint64_t v576 = *(void *)(v568 + 16);
                          if (v570 >> 60 != 15)
                          {
                            if (v576 >> 60 != 15)
                            {
                              uint64_t v581 = *v571;
                              sub_24D3F9C18(*v571, *(void *)(v568 + 16));
                              uint64_t v582 = *(void *)(v567 + 8);
                              unint64_t v583 = *(void *)(v567 + 16);
                              *(void *)(v567 + 8) = v581;
                              *(void *)(v567 + 16) = v576;
                              sub_24D400DCC(v582, v583);
                              goto LABEL_517;
                            }
                            sub_24D4B12A0((uint64_t)v569);
                            goto LABEL_515;
                          }
LABEL_508:
                          if (v576 >> 60 != 15)
                          {
                            uint64_t v577 = *v571;
                            sub_24D3F9C18(*v571, v576);
                            *(void *)(v567 + 8) = v577;
                            *(void *)(v567 + 16) = v576;
LABEL_517:
                            long long v584 = *(_OWORD *)(v568 + 24);
                            *(unsigned char *)(v567 + 40) = *(unsigned char *)(v568 + 40);
                            *(_OWORD *)(v567 + 24) = v584;
                            *(void *)(v567 + 48) = *(void *)(v568 + 48);
LABEL_518:
                            uint64_t v585 = (void **)((v567 + 63) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v586 = (void **)((v568 + 63) & 0xFFFFFFFFFFFFFFF8);
                            v587 = *v586;
                            uint64_t v588 = *v585;
                            *uint64_t v585 = *v586;
                            id v589 = v587;

                            *(void *)(((unint64_t)v585 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v586 + 15) & 0xFFFFFFFFFFFFFFF8);
                            v590 = (char *)(((unint64_t)v542 + v708) & v715);
                            uint64_t v591 = (unsigned char *)(((unint64_t)v383 + v708) & v715);
                            int v592 = v688(v590, 1, v724);
                            int v593 = v688(v591, 1, v724);
                            if (v592)
                            {
                              if (!v593)
                              {
                                (*(void (**)(char *, unsigned char *, uint64_t))(v695 + 16))(v590, v591, v724);
                                (*(void (**)(char *, void, uint64_t, uint64_t))(v695 + 56))(v590, 0, 1, v724);
                                goto LABEL_524;
                              }
                            }
                            else
                            {
                              if (!v593)
                              {
                                (*(void (**)(char *, unsigned char *, uint64_t))(v695 + 24))(v590, v591, v724);
LABEL_524:
                                size_t v594 = v665 + 16;
                                uint64_t v595 = (void *)((unint64_t)&v590[v696] & 0xFFFFFFFFFFFFFFF8);
                                v596 = (void *)((unint64_t)&v591[v696] & 0xFFFFFFFFFFFFFFF8);
                                *uint64_t v595 = *v596;
                                unint64_t v597 = ((unint64_t)v595 + 15) & 0xFFFFFFFFFFFFFFF8;
                                unint64_t v598 = ((unint64_t)v596 + 15) & 0xFFFFFFFFFFFFFFF8;
                                *(void *)unint64_t v597 = *(void *)v598;
                                *(unsigned char *)(v597 + 8) = *(unsigned char *)(v598 + 8);
                                uint64_t v599 = (void *)((v717 + v597) & v684);
                                uint64_t v600 = (void *)((v717 + v598) & v684);
                                if (v687 == v709)
                                {
                                  uint64_t v601 = *(uint64_t (**)(void *, void, uint64_t))(v721 + 48);
                                  int v602 = v601(v599, v687, v719);
                                  int v603 = v601(v600, v687, v719);
                                  if (v602) {
                                    goto LABEL_526;
                                  }
                                }
                                else
                                {
                                  v604 = (uint64_t *)(((unint64_t)v599 + v698) & 0xFFFFFFFFFFFFFFF8);
                                  if (v669 <= 0x7FFFFFFE)
                                  {
                                    uint64_t v606 = *v604;
                                    if ((unint64_t)*v604 >= 0xFFFFFFFF) {
                                      LODWORD(v606) = -1;
                                    }
                                    unsigned int v607 = v606 + 1;
                                    v605 = (uint64_t *)(((unint64_t)v600 + v698) & 0xFFFFFFFFFFFFFFF8);
                                    uint64_t v608 = *v605;
                                    if ((unint64_t)*v605 >= 0xFFFFFFFF) {
                                      LODWORD(v608) = -1;
                                    }
                                    unsigned int v609 = v608 + 1;
                                    if (v607 >= 2)
                                    {
                                      if (v609 < 2) {
                                        goto LABEL_541;
                                      }
                                      goto LABEL_542;
                                    }
                                    if (v609 >= 2)
                                    {
LABEL_538:
                                      (*(void (**)(void *, uint64_t))(v721 + 8))(v599, v719);
                                      swift_bridgeObjectRelease();
                                      (*(void (**)(unint64_t, uint64_t))(v725 + 8))(((unint64_t)v604 + v701) & v702, v703);
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
LABEL_542:
                                      memcpy(v599, v600, v594);
                                      goto LABEL_545;
                                    }
LABEL_544:
                                    (*(void (**)(void *, void *, uint64_t))(v721 + 24))(v599, v600, v719);
                                    uint64_t *v604 = *v605;
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    unint64_t v619 = ((unint64_t)v604 + v701) & v702;
                                    unint64_t v620 = ((unint64_t)v605 + v701) & v702;
                                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 24))(v619, v620, v703);
                                    v621 = (void *)((v686 + v619) & 0xFFFFFFFFFFFFFFF8);
                                    unint64_t v622 = (v686 + v620) & 0xFFFFFFFFFFFFFFF8;
                                    uint64_t v623 = *(void *)v622;
                                    v622 += 15;
                                    void *v621 = v623;
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v624 = (void *)(((unint64_t)v621 + 15) & 0xFFFFFFFFFFFFFFF8);
                                    void *v624 = *(void *)(v622 & 0xFFFFFFFFFFFFFFF8);
                                    v624[1] = *(void *)((v622 & 0xFFFFFFFFFFFFFFF8) + 8);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
LABEL_545:
                                    uint64_t v625 = (uint64_t)v600 + v594 + 10;
                                    uint64_t v626 = (uint64_t)v600 + v594 + 34;
                                    *((unsigned char *)v599 + v594) = *((unsigned char *)v600 + v594);
                                    uint64_t v627 = (uint64_t)v599 + v594 + 34;
                                    *(unsigned char *)(((unint64_t)v599 + v594) | 1) = *(unsigned char *)(((unint64_t)v600
                                                                                                + v594) | 1);
                                    *(unsigned char *)(((unint64_t)v599 + v594) | 2) = *(unsigned char *)(((unint64_t)v600
                                                                                                + v594) | 2);
                                    unint64_t v628 = ((unint64_t)v599 + v594 + 10) & 0xFFFFFFFFFFFFFFF8;
                                    v629 = *(void **)(v625 & 0xFFFFFFFFFFFFFFF8);
                                    v630 = *(void **)((v625 & 0xFFFFFFFFFFFFFFF8) + 8);
                                    char v631 = *(unsigned char *)((v625 & 0xFFFFFFFFFFFFFFF8) + 16);
                                    sub_24D3F1C98(v629, v630, v631);
                                    v632 = *(void **)v628;
                                    v633 = *(void **)(v628 + 8);
                                    *(void *)unint64_t v628 = v629;
                                    *(void *)(v628 + 8) = v630;
                                    char v634 = *(unsigned char *)(v628 + 16);
                                    *(unsigned char *)(v628 + 16) = v631;
                                    sub_24D3E380C(v632, v633, v634);
                                    unint64_t v635 = v627 & 0xFFFFFFFFFFFFFFF8;
                                    unint64_t v636 = v626 & 0xFFFFFFFFFFFFFFF8;
                                    v637 = (uint64_t *)((v627 & 0xFFFFFFFFFFFFFFF8) + 8);
                                    unint64_t v638 = *(void *)((v627 & 0xFFFFFFFFFFFFFFF8) + 16);
                                    v639 = (uint64_t *)(v636 + 8);
                                    uint64_t v640 = *(void *)(v636 + 16) >> 60;
                                    BOOL v81 = ((4 * v640) & 0xC) == 0;
                                    int v641 = (4 * v640) & 0xC | (v640 >> 2);
                                    int v642 = v81;
                                    if (v641 == 15) {
                                      int v643 = 1;
                                    }
                                    else {
                                      int v643 = v642;
                                    }
                                    if (!(4 * ((v638 >> 60) & 3))
                                      || (((v638 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v638 >> 60) & 3))) == 0xF)
                                    {
                                      if (v643)
                                      {
                                        *(void *)unint64_t v635 = *(void *)v636;
                                        unint64_t v644 = *(void *)(v636 + 16);
                                        if (v638 >> 60 != 15)
                                        {
                                          if (v644 >> 60 != 15)
                                          {
                                            uint64_t v649 = *v639;
                                            sub_24D3F9C18(*v639, *(void *)(v636 + 16));
                                            uint64_t v650 = *(void *)(v635 + 8);
                                            unint64_t v651 = *(void *)(v635 + 16);
                                            *(void *)(v635 + 8) = v649;
                                            *(void *)(v635 + 16) = v644;
                                            sub_24D400DCC(v650, v651);
                                            goto LABEL_566;
                                          }
                                          sub_24D4B12A0((uint64_t)v637);
                                          goto LABEL_564;
                                        }
LABEL_557:
                                        if (v644 >> 60 != 15)
                                        {
                                          uint64_t v645 = *v639;
                                          sub_24D3F9C18(*v639, v644);
                                          *(void *)(v635 + 8) = v645;
                                          *(void *)(v635 + 16) = v644;
LABEL_566:
                                          uint64_t v489 = v670;
                                          long long v652 = *(_OWORD *)(v636 + 24);
                                          *(unsigned char *)(v635 + 40) = *(unsigned char *)(v636 + 40);
                                          *(_OWORD *)(v635 + 24) = v652;
                                          *(void *)(v635 + 48) = *(void *)(v636 + 48);
                                          goto LABEL_567;
                                        }
LABEL_564:
                                        *(_OWORD *)v637 = *(_OWORD *)v639;
                                        goto LABEL_566;
                                      }
                                      if (v638 >> 60 != 15) {
                                        sub_24D400DCC(*v637, v638);
                                      }
                                    }
                                    else if (v643)
                                    {
                                      *(void *)unint64_t v635 = *(void *)v636;
                                      unint64_t v644 = *(void *)(v636 + 16);
                                      goto LABEL_557;
                                    }
                                    long long v646 = *(_OWORD *)v636;
                                    long long v647 = *(_OWORD *)(v636 + 16);
                                    long long v648 = *(_OWORD *)(v636 + 32);
                                    *(void *)(v635 + 48) = *(void *)(v636 + 48);
                                    *(_OWORD *)(v635 + 16) = v647;
                                    *(_OWORD *)(v635 + 32) = v648;
                                    *(_OWORD *)unint64_t v635 = v646;
                                    uint64_t v489 = v670;
LABEL_567:
                                    v653 = (void **)((v635 + 63) & 0xFFFFFFFFFFFFFFF8);
                                    v654 = (void **)((v636 + 63) & 0xFFFFFFFFFFFFFFF8);
                                    v655 = *v654;
                                    v656 = *v653;
                                    *v653 = *v654;
                                    id v657 = v655;

                                    *(void *)(((unint64_t)v653 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v654 + 15) & 0xFFFFFFFFFFFFFFF8);
                                    unint64_t v658 = (unint64_t)&v590[v699];
                                    *(unsigned char *)unint64_t v658 = v591[v699];
                                    unint64_t v659 = (unint64_t)&v591[v699] & 0xFFFFFFFFFFFFFFF8;
                                    *(void *)((v658 & 0xFFFFFFFFFFFFFFF8) + 8) = *(void *)(v659 + 8);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v660 = (void *)((((unint64_t)&v590[v699] & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8);
                                    v661 = (void *)((v659 + 23) & 0xFFFFFFFFFFFFFFF8);
                                    void *v660 = *v661;
                                    v660[1] = v661[1];
                                    unint64_t v662 = ((unint64_t)v660 + 23) & 0xFFFFFFFFFFFFFFF8;
                                    unint64_t v663 = ((unint64_t)v661 + 23) & 0xFFFFFFFFFFFFFFF8;
                                    *(void *)unint64_t v662 = *(void *)v663;
                                    *(unsigned char *)(v662 + 8) = *(unsigned char *)(v663 + 8);
                                    *(void *)(((unint64_t)v660 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v661 + 39) & 0xFFFFFFFFFFFFFFF8);
                                    return v489;
                                  }
                                  v610 = *(uint64_t (**)(unint64_t, void, uint64_t))(v725 + 48);
                                  int v611 = v610(((unint64_t)v604 + v701) & v702, v667, v703);
                                  size_t v594 = v665 + 16;
                                  int v603 = v610((v701 + (((unint64_t)v600 + v698) & 0xFFFFFFFFFFFFFFF8)) & v702, v667, v703);
                                  if (v611)
                                  {
LABEL_526:
                                    if (!v603)
                                    {
                                      v604 = (uint64_t *)(((unint64_t)v599 + v698) & 0xFFFFFFFFFFFFFFF8);
                                      v605 = (uint64_t *)(((unint64_t)v600 + v698) & 0xFFFFFFFFFFFFFFF8);
LABEL_541:
                                      (*(void (**)(void *, void *, uint64_t))(v721 + 16))(v599, v600, v719);
                                      uint64_t *v604 = *v605;
                                      unint64_t v612 = ((unint64_t)v604 + v701) & v702;
                                      unint64_t v613 = ((unint64_t)v605 + v701) & v702;
                                      v614 = *(void (**)(unint64_t, unint64_t, uint64_t))(v725 + 16);
                                      swift_bridgeObjectRetain();
                                      v614(v612, v613, v703);
                                      v615 = (void *)((v686 + v612) & 0xFFFFFFFFFFFFFFF8);
                                      v616 = (void *)((v686 + v613) & 0xFFFFFFFFFFFFFFF8);
                                      void *v615 = *v616;
                                      v617 = (void *)(((unint64_t)v615 + 15) & 0xFFFFFFFFFFFFFFF8);
                                      v618 = (void *)(((unint64_t)v616 + 15) & 0xFFFFFFFFFFFFFFF8);
                                      void *v617 = *v618;
                                      v617[1] = v618[1];
                                      swift_bridgeObjectRetain();
                                      swift_bridgeObjectRetain();
                                      goto LABEL_545;
                                    }
                                    goto LABEL_542;
                                  }
                                }
                                v604 = (uint64_t *)(((unint64_t)v599 + v698) & 0xFFFFFFFFFFFFFFF8);
                                if (v603) {
                                  goto LABEL_538;
                                }
                                v605 = (uint64_t *)(((unint64_t)v600 + v698) & 0xFFFFFFFFFFFFFFF8);
                                goto LABEL_544;
                              }
                              (*(void (**)(char *, uint64_t))(v695 + 8))(v590, v724);
                            }
                            memcpy(v590, v591, v694);
                            goto LABEL_524;
                          }
LABEL_515:
                          *(_OWORD *)v569 = *(_OWORD *)v571;
                          goto LABEL_517;
                        }
                        if (v570 >> 60 != 15) {
                          sub_24D400DCC(*v569, v570);
                        }
                      }
                      else if (v575)
                      {
                        *(void *)unint64_t v567 = *(void *)v568;
                        unint64_t v576 = *(void *)(v568 + 16);
                        goto LABEL_508;
                      }
                      long long v578 = *(_OWORD *)v568;
                      long long v579 = *(_OWORD *)(v568 + 16);
                      long long v580 = *(_OWORD *)(v568 + 32);
                      *(void *)(v567 + 48) = *(void *)(v568 + 48);
                      *(_OWORD *)(v567 + 16) = v579;
                      *(_OWORD *)(v567 + 32) = v580;
                      *(_OWORD *)unint64_t v567 = v578;
                      goto LABEL_518;
                    }
LABEL_494:
                    (*(void (**)(void *, void *, uint64_t))(v376 + 24))(v511, v512, v720);
                    uint64_t *v516 = *v517;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    unint64_t v551 = ((unint64_t)v516 + v704) & v705;
                    unint64_t v552 = ((unint64_t)v517 + v704) & v705;
                    (*(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 24))(v551, v552, v706);
                    v553 = (void *)((v685 + v551) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v554 = (v685 + v552) & 0xFFFFFFFFFFFFFFF8;
                    uint64_t v555 = *(void *)v554;
                    v554 += 15;
                    void *v553 = v555;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    v556 = (void *)(((unint64_t)v553 + 15) & 0xFFFFFFFFFFFFFFF8);
                    void *v556 = *(void *)(v554 & 0xFFFFFFFFFFFFFFF8);
                    v556[1] = *(void *)((v554 & 0xFFFFFFFFFFFFFFF8) + 8);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    unint64_t v550 = v666 + 16;
                    goto LABEL_495;
                  }
                  v524 = *(uint64_t (**)(unint64_t, void, uint64_t))(v726 + 48);
                  int v525 = v524(((unint64_t)v516 + v704) & v705, v668, v706);
                  uint64_t v526 = v377;
                  int v527 = v525;
                  uint64_t v376 = v728;
                  int v515 = v524((v704 + (((unint64_t)v512 + v526) & 0xFFFFFFFFFFFFFFF8)) & v705, v668, v706);
                  if (v527)
                  {
LABEL_441:
                    size_t v383 = v362;
                    if (!v515)
                    {
                      v516 = (uint64_t *)(((unint64_t)v511 + v713) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v517 = (uint64_t *)(((unint64_t)v512 + v713) & 0xFFFFFFFFFFFFFFF8);
LABEL_491:
                      v542 = v375;
                      (*(void (**)(void *, void *, uint64_t))(v376 + 16))(v511, v512, v720);
                      uint64_t *v516 = *v517;
                      unint64_t v543 = ((unint64_t)v516 + v704) & v705;
                      unint64_t v544 = ((unint64_t)v517 + v704) & v705;
                      v545 = *(void (**)(unint64_t, unint64_t, uint64_t))(v726 + 16);
                      swift_bridgeObjectRetain();
                      v545(v543, v544, v706);
                      v546 = (void *)((v685 + v543) & 0xFFFFFFFFFFFFFFF8);
                      v547 = (void *)((v685 + v544) & 0xFFFFFFFFFFFFFFF8);
                      void *v546 = *v547;
                      v548 = (void *)(((unint64_t)v546 + 15) & 0xFFFFFFFFFFFFFFF8);
                      v549 = (void *)(((unint64_t)v547 + 15) & 0xFFFFFFFFFFFFFFF8);
                      void *v548 = *v549;
                      v548[1] = v549[1];
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      unint64_t v550 = v666 + 16;
                      goto LABEL_496;
                    }
                    goto LABEL_492;
                  }
                }
                v516 = (uint64_t *)(((unint64_t)v511 + v713) & 0xFFFFFFFFFFFFFFF8);
                if (v515)
                {
                  size_t v383 = v362;
                  goto LABEL_459;
                }
                uint64_t v517 = (uint64_t *)(((unint64_t)v512 + v713) & 0xFFFFFFFFFFFFFFF8);
                size_t v383 = v362;
                goto LABEL_494;
              }
              (*(void (**)(void *, uint64_t))(v679 + 8))(v375, v378);
            }
            memcpy(v375, v383, __n);
            goto LABEL_439;
          }
          size_t v383 = v362;
          unint64_t v397 = (v723 + (((((unint64_t)v362 + v700) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722;
          if (v366 == v368)
          {
            uint64_t v381 = v724;
            size_t v382 = v666 + 16;
            if (v331 == v718)
            {
              unsigned int v398 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v376 + 48))(v397, v331, v720);
              goto LABEL_427;
            }
            uint64_t v403 = (unint64_t *)((v377 + v397) & 0xFFFFFFFFFFFFFFF8);
            if (v680 > 0x7FFFFFFE)
            {
              unsigned int v398 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v726 + 48))(((unint64_t)v403 + v704) & v705, v668, v706);
              goto LABEL_427;
            }
LABEL_367:
            unint64_t v412 = *v403;
            if (v412 >= 0xFFFFFFFF) {
              unsigned int v398 = -1;
            }
            else {
              unsigned int v398 = v412;
            }
            if (v398 + 1 < 2) {
              goto LABEL_428;
            }
            goto LABEL_427;
          }
          unint64_t v401 = *(void *)((((v666 + v397 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
          if (v401 >= 0xFFFFFFFF) {
            LODWORD(v401) = -1;
          }
          uint64_t v381 = v724;
          size_t v382 = v666 + 16;
          if ((v401 + 1) < 2) {
            goto LABEL_428;
          }
          goto LABEL_431;
        }
      }
    }
    if (v386 >= 2) {
      goto LABEL_307;
    }
    goto LABEL_304;
  }
  unint64_t v375 = v361;
  unint64_t v380 = ((unint64_t)v361 + v708) & v715;
  if (v372 != v374)
  {
    uint64_t v381 = v724;
    size_t v382 = v666 + 16;
    size_t v383 = v362;
    if (*(void *)(((v380 + v699) & 0xFFFFFFFFFFFFFFF8) + 8) <= 0xFFFFFFFEuLL) {
      goto LABEL_341;
    }
    goto LABEL_335;
  }
  if (v369 == v372)
  {
    uint64_t v381 = v724;
    size_t v382 = v666 + 16;
    size_t v383 = v362;
    if (v681 >= 2)
    {
      unsigned int v384 = v688((void *)v380, v681, v724);
      uint64_t v364 = v681;
      if (v384 >= 2) {
        goto LABEL_341;
      }
    }
    goto LABEL_335;
  }
  unint64_t v387 = (v717 + ((((v696 + v380) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v684;
  if (v370 == v372)
  {
    uint64_t v381 = v724;
    size_t v382 = v666 + 16;
    size_t v383 = v362;
    if (v687 == v709)
    {
      unsigned int v388 = (*(uint64_t (**)(unint64_t))(v721 + 48))(v387);
    }
    else
    {
      uint64_t v393 = (unint64_t *)((v698 + v387) & 0xFFFFFFFFFFFFFFF8);
      if (v669 <= 0x7FFFFFFE)
      {
        unint64_t v394 = *v393;
        if (v394 >= 0xFFFFFFFF) {
          unsigned int v388 = -1;
        }
        else {
          unsigned int v388 = v394;
        }
        if (v388 + 1 < 2) {
          goto LABEL_335;
        }
        goto LABEL_334;
      }
      unsigned int v388 = (*(uint64_t (**)(unint64_t))(v725 + 48))(((unint64_t)v393 + v701) & v702);
    }
    uint64_t v364 = v681;
LABEL_334:
    if (v388 >= 2) {
      goto LABEL_341;
    }
    goto LABEL_335;
  }
  unint64_t v392 = *(void *)((((v665 + v387 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
  if (v392 >= 0xFFFFFFFF) {
    LODWORD(v392) = -1;
  }
  uint64_t v381 = v724;
  size_t v382 = v666 + 16;
  size_t v383 = v362;
  if ((v392 + 1) >= 2)
  {
LABEL_341:
    unint64_t v407 = ((unint64_t)v383 + v708) & v715;
    if (v372 != v374)
    {
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if (*(void *)(((v407 + v699) & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
        goto LABEL_569;
      }
      goto LABEL_381;
    }
    if (v369 == v372)
    {
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if (v364 < 2) {
        goto LABEL_381;
      }
      unsigned int v396 = v688((void *)v407, v364, v381);
      goto LABEL_345;
    }
    unint64_t v409 = (v717 + ((((v696 + v407) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v684;
    if (v370 != v372)
    {
      unint64_t v411 = *(void *)((((v665 + v409 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
      if (v411 >= 0xFFFFFFFF) {
        LODWORD(v411) = -1;
      }
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if ((v411 + 1) >= 2) {
        goto LABEL_569;
      }
      goto LABEL_381;
    }
    if (v687 == v709)
    {
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if ((*(unsigned int (**)(unint64_t))(v721 + 48))(v409) < 2) {
        goto LABEL_381;
      }
    }
    else
    {
      v413 = (unint64_t *)((v698 + v409) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if (v669 <= 0x7FFFFFFE)
      {
        unint64_t v414 = *v413;
        if (v414 >= 0xFFFFFFFF) {
          unsigned int v400 = -1;
        }
        else {
          unsigned int v400 = v414;
        }
        if (v400 + 1 < 2) {
          goto LABEL_381;
        }
        goto LABEL_380;
      }
      if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v725 + 48))(((unint64_t)v413 + v701) & v702, v667, v703) < 2)goto LABEL_381; {
    }
      }
LABEL_569:
    memcpy(v375, v383, v672);
    return v670;
  }
LABEL_335:
  unint64_t v406 = ((unint64_t)v383 + v708) & v715;
  if (v372 == v374)
  {
    if (v369 == v372)
    {
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if (v364 < 2) {
        goto LABEL_428;
      }
      unsigned int v395 = v688((void *)v406, v364, v381);
      goto LABEL_339;
    }
    unint64_t v408 = (v717 + ((((v696 + v406) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v684;
    if (v370 == v372)
    {
      uint64_t v376 = v728;
      uint64_t v377 = v713;
      uint64_t v378 = AssociatedTypeWitness;
      if (v687 == v709)
      {
        unsigned int v398 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v721 + 48))(v408, v687, v719);
      }
      else
      {
        uint64_t v403 = (unint64_t *)((v698 + v408) & 0xFFFFFFFFFFFFFFF8);
        if (v669 <= 0x7FFFFFFE) {
          goto LABEL_367;
        }
        unsigned int v398 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v725 + 48))(((unint64_t)v403 + v701) & v702, v667, v703);
      }
LABEL_427:
      if (v398 >= 2) {
        goto LABEL_431;
      }
      goto LABEL_428;
    }
    unint64_t v410 = *(void *)((((v665 + v408 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
    if (v410 >= 0xFFFFFFFF) {
      LODWORD(v410) = -1;
    }
    uint64_t v376 = v728;
    uint64_t v377 = v713;
    uint64_t v378 = AssociatedTypeWitness;
    if ((v410 + 1) < 2) {
      goto LABEL_428;
    }
  }
  else
  {
    uint64_t v376 = v728;
    uint64_t v377 = v713;
    uint64_t v378 = AssociatedTypeWitness;
    if (*(void *)(((v406 + v699) & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL) {
      goto LABEL_428;
    }
  }
LABEL_431:
  if (!v697(v375, 1, v378)) {
    (*(void (**)(void *, uint64_t))(v679 + 8))(v375, v378);
  }
  unint64_t v506 = (v723 + (((((unint64_t)v375 + v700) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722;
  if (v331 == v718)
  {
    if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v376 + 48))((v723 + (((((unint64_t)v375 + v700) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v722, v331, v720))
    {
      goto LABEL_463;
    }
LABEL_461:
    v522 = (uint64_t *)((v377 + v506) & 0xFFFFFFFFFFFFFFF8);
LABEL_462:
    (*(void (**)(unint64_t, uint64_t))(v376 + 8))(v506, v720);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v726 + 8))(((unint64_t)v522 + v704) & v705, v706);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_463;
  }
  v522 = (uint64_t *)((v377 + v506) & 0xFFFFFFFFFFFFFFF8);
  if (v680 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v726 + 48))(((unint64_t)v522 + v704) & v705, v668, v706))
    {
      goto LABEL_463;
    }
    goto LABEL_461;
  }
  uint64_t v523 = *v522;
  if ((unint64_t)*v522 >= 0xFFFFFFFF) {
    LODWORD(v523) = -1;
  }
  if ((v523 + 1) < 2) {
    goto LABEL_462;
  }
LABEL_463:
  unint64_t v528 = v506 + v382;
  sub_24D3E380C(*(void **)((v528 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v528 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v528 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v529 = (v528 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v530 = *(void *)(v529 + 16);
  BOOL v531 = ((4 * (v530 >> 60)) & 0xC | ((v530 >> 60) >> 2)) != 0xF && ((4 * (v530 >> 60)) & 0xC) != 0;
  if (v530 >> 60 != 15 && !v531) {
    sub_24D400DCC(*(void *)(v529 + 8), v530);
  }

  unint64_t v532 = ((unint64_t)v375 + v708) & v715;
  uint64_t v489 = v670;
  if (!v688((void *)v532, 1, v381)) {
    (*(void (**)(unint64_t, uint64_t))(v695 + 8))(v532, v381);
  }
  unint64_t v533 = (v717 + ((((v696 + v532) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v684;
  if (v687 == v709)
  {
    int v534 = (*(uint64_t (**)(size_t))(v721 + 48))((v717
                                                          + ((((v696 + v532) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v684);
  }
  else
  {
    uint64_t v535 = (uint64_t *)((v698 + v533) & 0xFFFFFFFFFFFFFFF8);
    if (v669 <= 0x7FFFFFFE)
    {
      uint64_t v536 = *v535;
      if ((unint64_t)*v535 >= 0xFFFFFFFF) {
        LODWORD(v536) = -1;
      }
      unint64_t v537 = v665 + 16;
      if ((v536 + 1) >= 2) {
        goto LABEL_482;
      }
      goto LABEL_481;
    }
    int v534 = (*(uint64_t (**)(unint64_t))(v725 + 48))(((unint64_t)v535 + v701) & v702);
  }
  unint64_t v537 = v665 + 16;
  if (!v534)
  {
    uint64_t v535 = (uint64_t *)((v698 + v533) & 0xFFFFFFFFFFFFFFF8);
LABEL_481:
    (*(void (**)(unint64_t, uint64_t))(v721 + 8))(v533, v719);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v725 + 8))(((unint64_t)v535 + v701) & v702, v703);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_482:
  unint64_t v538 = v533 + v537;
  sub_24D3E380C(*(void **)((v538 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v538 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v538 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v539 = (v538 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v540 = *(void *)(v539 + 16);
  BOOL v541 = ((4 * (v540 >> 60)) & 0xC | ((v540 >> 60) >> 2)) != 0xF && ((4 * (v540 >> 60)) & 0xC) != 0;
  if (v540 >> 60 != 15 && !v541) {
    sub_24D400DCC(*(void *)(v539 + 8), v540);
  }

  swift_bridgeObjectRelease();
  memcpy(v375, v383, v672);
  return v489;
}

uint64_t sub_24D4B12A0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D4B12F4(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v256 = *(void *)(AssociatedTypeWitness - 8);
  int v5 = *(_DWORD *)(v256 + 80) & 0xF8;
  uint64_t v279 = swift_getAssociatedTypeWitness();
  uint64_t v291 = *(void *)(v279 - 8);
  int v6 = *(_DWORD *)(v291 + 80) & 0xF8;
  uint64_t v268 = swift_getAssociatedTypeWitness();
  uint64_t v286 = *(void *)(v268 - 8);
  uint64_t v288 = *(unsigned __int8 *)(v286 + 80);
  uint64_t v7 = v6 | v288 | 7;
  int v8 = v6 | v288 | v5;
  uint64_t v280 = swift_getAssociatedTypeWitness();
  uint64_t v255 = *(void *)(v280 - 8);
  int v9 = *(_DWORD *)(v255 + 80) & 0xF8;
  uint64_t v278 = swift_getAssociatedTypeWitness();
  uint64_t v290 = *(void *)(v278 - 8);
  int v10 = *(_DWORD *)(v290 + 80) & 0xF8;
  uint64_t v262 = swift_getAssociatedTypeWitness();
  uint64_t v282 = *(void *)(v262 - 8);
  uint64_t v294 = *(unsigned __int8 *)(v282 + 80);
  uint64_t v11 = v10 | v294 | 7;
  uint64_t v12 = v11 | v9;
  uint64_t v13 = v8 | v12;
  uint64_t v246 = a1;
  uint64_t v247 = v13 + 9;
  uint64_t v250 = v13 + 9 + a1;
  unint64_t v14 = v250 & ~v13;
  uint64_t v272 = v13;
  uint64_t v263 = v13 + 9 + a2;
  unint64_t v15 = v263 & ~v13;
  uint64_t v265 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v256 + 48);
  uint64_t v271 = AssociatedTypeWitness;
  if (v265(v15, 1, AssociatedTypeWitness))
  {
    unsigned int v16 = *(_DWORD *)(v256 + 84);
    size_t v17 = *(void *)(v256 + 64);
    if (v16) {
      size_t v18 = *(void *)(v256 + 64);
    }
    else {
      size_t v18 = v17 + 1;
    }
    memcpy((void *)v14, (const void *)v15, v18);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v256 + 32))(v14, v15, AssociatedTypeWitness);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v256 + 56))(v14, 0, 1, AssociatedTypeWitness);
    unsigned int v16 = *(_DWORD *)(v256 + 84);
    size_t v17 = *(void *)(v256 + 64);
  }
  uint64_t v19 = v288;
  unsigned int v249 = v16;
  if (v16) {
    size_t v20 = v17;
  }
  else {
    size_t v20 = v17 + 1;
  }
  size_t v21 = (void *)(((v14 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
  size_t v275 = v20;
  size_t v22 = (void *)(((v15 | 7) + v20) & 0xFFFFFFFFFFFFFFF8);
  *size_t v21 = *v22;
  unint64_t v23 = ((unint64_t)v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v23 = *(void *)v24;
  *(unsigned char *)(v23 + 8) = *(unsigned char *)(v24 + 8);
  uint64_t v287 = ~v7;
  uint64_t v289 = v7 + 9;
  uint64_t v25 = (void *)((v7 + 9 + v23) & ~v7);
  unint64_t v26 = (const void *)((v7 + 9 + v24) & ~v7);
  uint64_t v27 = *(unsigned int *)(v291 + 84);
  unsigned int v243 = *(_DWORD *)(v286 + 84);
  if (v27 <= v243) {
    unsigned int v28 = *(_DWORD *)(v286 + 84);
  }
  else {
    unsigned int v28 = *(_DWORD *)(v291 + 84);
  }
  if (v28 <= 0x7FFFFFFE) {
    int v29 = 2147483646;
  }
  else {
    int v29 = v28;
  }
  uint64_t v30 = *(void *)(v291 + 64) + 7;
  uint64_t v267 = ~v19;
  uint64_t v266 = v19 + 8;
  uint64_t v253 = *(void *)(v286 + 64) + 7;
  size_t v31 = ((((v253 + ((v19 + 8 + (v30 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  int v285 = v29;
  unsigned int v254 = *(_DWORD *)(v291 + 84);
  unsigned int v245 = v28;
  unint64_t v241 = (((v253 + ((v19 + 8 + (v30 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v292 = v11;
  unint64_t v32 = v14;
  uint64_t v33 = v12;
  if (v27 == v29)
  {
    int v34 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v291 + 48))(v26, v27, v279);
  }
  else
  {
    size_t v35 = (uint64_t *)(((unint64_t)v26 + v30) & 0xFFFFFFFFFFFFFFF8);
    if (v28 <= 0x7FFFFFFE)
    {
      uint64_t v36 = *v35;
      if ((unint64_t)*v35 >= 0xFFFFFFFF) {
        LODWORD(v36) = -1;
      }
      uint64_t v37 = v255;
      if ((v36 + 1) >= 2) {
        goto LABEL_25;
      }
      goto LABEL_27;
    }
    int v34 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v286 + 48))(((unint64_t)v35 + v266) & v267, v243, v268);
  }
  uint64_t v37 = v255;
  if (v34)
  {
LABEL_25:
    memcpy(v25, v26, v31);
    goto LABEL_28;
  }
  size_t v35 = (uint64_t *)(((unint64_t)v26 + v30) & 0xFFFFFFFFFFFFFFF8);
LABEL_27:
  (*(void (**)(void *, const void *, uint64_t))(v291 + 32))(v25, v26, v279);
  int v38 = (void *)(((unint64_t)v25 + v30) & 0xFFFFFFFFFFFFFFF8);
  *int v38 = *v35;
  uint64_t v39 = v30;
  unint64_t v40 = ((unint64_t)v38 + v266) & v267;
  unint64_t v41 = ((unint64_t)v35 + v266) & v267;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v286 + 32))(v40, v41, v268);
  unint64_t v42 = v253 + v40;
  uint64_t v30 = v39;
  uint64_t v27 = v254;
  v42 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v43 = (void *)((v253 + v41) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v42 = *v43;
  *(_OWORD *)((v42 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_28:
  uint64_t v44 = v33;
  uint64_t v45 = (uint64_t)v26 + v31 + 10;
  *((unsigned char *)v25 + v31) = *((unsigned char *)v26 + v31);
  *(unsigned char *)(((unint64_t)v25 + v31) | 1) = *(unsigned char *)(((unint64_t)v26 + v31) | 1);
  *(unsigned char *)(((unint64_t)v25 + v31) | 2) = *(unsigned char *)(((unint64_t)v26 + v31) | 2);
  unint64_t v46 = ((unint64_t)v25 + v31 + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v47 = *(_OWORD *)(v45 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v46 + 16) = *(unsigned char *)((v45 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)unint64_t v46 = v47;
  unint64_t v48 = ((unint64_t)v25 + v31 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = ((unint64_t)v26 + v31 + 34) & 0xFFFFFFFFFFFFFFF8;
  long long v50 = *(_OWORD *)v49;
  long long v51 = *(_OWORD *)(v49 + 16);
  long long v52 = *(_OWORD *)(v49 + 32);
  *(void *)(v48 + 48) = *(void *)(v49 + 48);
  *(_OWORD *)(v48 + 16) = v51;
  *(_OWORD *)(v48 + 32) = v52;
  *(_OWORD *)unint64_t v48 = v50;
  unint64_t v53 = (void *)((v49 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v54 = (void *)((v48 + 63) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v54 = *v53;
  *(void *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v269 = v275 + 7;
  size_t __n = v31;
  unint64_t v55 = ((((((((v289 + ((((v275 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v287) + v31 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v56 = (v32 + v33 + v55) & ~v33;
  unint64_t v57 = (v15 + v33 + v55) & ~v33;
  uint64_t v58 = v280;
  uint64_t v259 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v37 + 48);
  uint64_t v270 = v30;
  if (v259(v57, 1, v280))
  {
    unsigned int v59 = *(_DWORD *)(v37 + 84);
    size_t v60 = *(void *)(v37 + 64);
    if (v59) {
      size_t v61 = *(void *)(v37 + 64);
    }
    else {
      size_t v61 = v60 + 1;
    }
    memcpy((void *)v56, (const void *)v57, v61);
  }
  else
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v37 + 32))(v56, v57, v280);
    (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v37 + 56))(v56, 0, 1, v280);
    unsigned int v59 = *(_DWORD *)(v37 + 84);
    size_t v60 = *(void *)(v37 + 64);
  }
  uint64_t v62 = v294;
  uint64_t v273 = ~v272;
  uint64_t v276 = v44;
  uint64_t v295 = ~v44;
  unsigned int v248 = v59;
  if (v59) {
    size_t v63 = v60;
  }
  else {
    size_t v63 = v60 + 1;
  }
  unint64_t v64 = (void *)(((v56 | 7) + v63) & 0xFFFFFFFFFFFFFFF8);
  size_t v274 = v63;
  unint64_t v65 = (void *)(((v57 | 7) + v63) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v64 = *v65;
  unint64_t v66 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = ((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v66 = *(void *)v67;
  *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
  uint64_t v283 = ~v292;
  uint64_t v284 = v292 + 9;
  char v68 = (void *)((v292 + 9 + v66) & ~v292);
  unint64_t v69 = (const void *)((v292 + 9 + v67) & ~v292);
  unsigned int v70 = *(_DWORD *)(v290 + 84);
  unsigned int v242 = *(_DWORD *)(v282 + 84);
  if (v70 <= v242) {
    unsigned int v71 = *(_DWORD *)(v282 + 84);
  }
  else {
    unsigned int v71 = *(_DWORD *)(v290 + 84);
  }
  if (v71 <= 0x7FFFFFFE) {
    int v72 = 2147483646;
  }
  else {
    int v72 = v71;
  }
  uint64_t v73 = *(void *)(v290 + 64) + 7;
  uint64_t v261 = ~v62;
  uint64_t v260 = v62 + 8;
  uint64_t v252 = *(void *)(v282 + 64) + 7;
  size_t v74 = ((((v252 + ((v62 + 8 + (v73 & 0xFFFFFFFFFFFFFFF8)) & ~v62)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  int v281 = v72;
  uint64_t v293 = v73;
  int v258 = *(_DWORD *)(v290 + 84);
  unsigned int v244 = v71;
  unint64_t v240 = (((v252 + ((v62 + 8 + (v73 & 0xFFFFFFFFFFFFFFF8)) & ~v62)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v70 == v72)
  {
    if (!(*(unsigned int (**)(const void *))(v290 + 48))(v69)) {
      goto LABEL_53;
    }
LABEL_52:
    size_t v77 = v74;
    memcpy(v68, v69, v74);
    uint64_t v78 = v271;
    uint64_t v79 = v263;
    uint64_t v80 = v250;
    goto LABEL_55;
  }
  unint64_t v75 = (uint64_t *)(((unint64_t)v69 + v73) & 0xFFFFFFFFFFFFFFF8);
  if (v71 <= 0x7FFFFFFE)
  {
    uint64_t v76 = *v75;
    if ((unint64_t)*v75 >= 0xFFFFFFFF) {
      LODWORD(v76) = -1;
    }
    if ((v76 + 1) < 2) {
      goto LABEL_54;
    }
    goto LABEL_52;
  }
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v282 + 48))(((unint64_t)v75 + v260) & v261, v242, v262))
  {
    goto LABEL_52;
  }
LABEL_53:
  unint64_t v75 = (uint64_t *)(((unint64_t)v69 + v293) & 0xFFFFFFFFFFFFFFF8);
LABEL_54:
  (*(void (**)(void *, const void *, uint64_t))(v290 + 32))(v68, v69, v278);
  BOOL v81 = (void *)(((unint64_t)v68 + v293) & 0xFFFFFFFFFFFFFFF8);
  *BOOL v81 = *v75;
  unint64_t v82 = ((unint64_t)v81 + v260) & v261;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v282 + 32))(v82, ((unint64_t)v75 + v260) & v261, v262);
  uint64_t v80 = v250;
  unint64_t v83 = v252 + v82;
  uint64_t v58 = v280;
  v83 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = v254;
  uint64_t v84 = (void *)((v252 + (((unint64_t)v75 + v260) & v261)) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v83 = *v84;
  *(_OWORD *)((v83 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v78 = v271;
  uint64_t v79 = v263;
  size_t v77 = v74;
LABEL_55:
  *((unsigned char *)v68 + v77) = *((unsigned char *)v69 + v77);
  *(unsigned char *)(((unint64_t)v68 + v77) | 1) = *(unsigned char *)(((unint64_t)v69 + v77) | 1);
  *(unsigned char *)(((unint64_t)v68 + v77) | 2) = *(unsigned char *)(((unint64_t)v69 + v77) | 2);
  unint64_t v85 = ((unint64_t)v68 + v77 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v86 = ((unint64_t)v69 + v77 + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v87 = *(_OWORD *)v86;
  *(unsigned char *)(v85 + 16) = *(unsigned char *)(v86 + 16);
  *(_OWORD *)unint64_t v85 = v87;
  unint64_t v88 = ((unint64_t)v68 + v77 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v89 = ((unint64_t)v69 + v77 + 34) & 0xFFFFFFFFFFFFFFF8;
  long long v90 = *(_OWORD *)v89;
  long long v91 = *(_OWORD *)(v89 + 16);
  long long v92 = *(_OWORD *)(v89 + 32);
  *(void *)(v88 + 48) = *(void *)(v89 + 48);
  *(_OWORD *)(v88 + 16) = v91;
  *(_OWORD *)(v88 + 32) = v92;
  *(_OWORD *)unint64_t v88 = v90;
  unint64_t v93 = (void *)((v88 + 63) & 0xFFFFFFFFFFFFFFF8);
  long long v94 = (void *)((v89 + 63) & 0xFFFFFFFFFFFFFFF8);
  void *v93 = *v94;
  *(void *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v264 = v274 + 7;
  unint64_t v95 = ((((((((v284 + ((((v274 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v283) + v77 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  *(unsigned char *)(v95 + v56) = *(unsigned char *)(v95 + v57);
  unint64_t v96 = (v95 + v56) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v97 = (v95 + v57) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v96 + 8) = *(void *)(v97 + 8);
  uint64_t v98 = (_OWORD *)((v96 + 23) & 0xFFFFFFFFFFFFFFF8);
  id v99 = (_OWORD *)((v97 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v98 = *v99;
  unint64_t v100 = ((unint64_t)v98 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v101 = ((unint64_t)v99 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v100 = *(void *)v101;
  *(unsigned char *)(v100 + 8) = *(unsigned char *)(v101 + 8);
  *(void *)(((unint64_t)v98 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v99 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v277 = v55 + v276;
  unint64_t v251 = v95;
  unint64_t v102 = (((((v95 + (v277 & v295)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v103 = (void *)(((v80 | v272) + v102 + 8) & v273);
  int v104 = (const void *)(((v79 | v272) + v102 + 8) & v273);
  if (v265((unint64_t)v104, 1, v78))
  {
    memcpy(v103, v104, v275);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v256 + 32))(v103, v104, v78);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v256 + 56))(v103, 0, 1, v78);
  }
  int v105 = (void *)(((unint64_t)v103 + v269) & 0xFFFFFFFFFFFFFFF8);
  int v106 = (void *)(((unint64_t)v104 + v269) & 0xFFFFFFFFFFFFFFF8);
  *int v105 = *v106;
  unint64_t v107 = ((unint64_t)v105 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v108 = ((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v107 = *(void *)v108;
  *(unsigned char *)(v107 + 8) = *(unsigned char *)(v108 + 8);
  uint64_t v109 = v290;
  uint64_t v110 = (void *)((v289 + v107) & v287);
  long long v111 = (const void *)((v289 + v108) & v287);
  if (v27 == v285)
  {
    if (!(*(unsigned int (**)(const void *, uint64_t, uint64_t))(v291 + 48))(v111, v27, v279)) {
      goto LABEL_68;
    }
LABEL_67:
    size_t v114 = __n;
    memcpy(v110, v111, __n);
    goto LABEL_70;
  }
  size_t v112 = (uint64_t *)(((unint64_t)v111 + v270) & 0xFFFFFFFFFFFFFFF8);
  if (v245 <= 0x7FFFFFFE)
  {
    uint64_t v113 = *v112;
    if ((unint64_t)*v112 >= 0xFFFFFFFF) {
      LODWORD(v113) = -1;
    }
    if ((v113 + 1) < 2) {
      goto LABEL_69;
    }
    goto LABEL_67;
  }
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v286 + 48))(((unint64_t)v112 + v266) & v267, v243, v268))
  {
    goto LABEL_67;
  }
LABEL_68:
  size_t v112 = (uint64_t *)(((unint64_t)v111 + v270) & 0xFFFFFFFFFFFFFFF8);
LABEL_69:
  (*(void (**)(void *, const void *, uint64_t))(v291 + 32))(v110, v111, v279);
  uint64_t v115 = (void *)(((unint64_t)v110 + v270) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v115 = *v112;
  unint64_t v116 = ((unint64_t)v115 + v266) & v267;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v286 + 32))(v116, ((unint64_t)v112 + v266) & v267, v268);
  unint64_t v117 = v253 + v116;
  uint64_t v58 = v280;
  v117 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v118 = (void *)((v253 + (((unint64_t)v112 + v266) & v267)) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v117 = *v118;
  *(_OWORD *)((v117 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v118 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v114 = __n;
LABEL_70:
  uint64_t v119 = (uint64_t)v111 + v114 + 10;
  *((unsigned char *)v110 + v114) = *((unsigned char *)v111 + v114);
  *(unsigned char *)(((unint64_t)v110 + v114) | 1) = *(unsigned char *)(((unint64_t)v111 + v114) | 1);
  *(unsigned char *)(((unint64_t)v110 + v114) | 2) = *(unsigned char *)(((unint64_t)v111 + v114) | 2);
  unint64_t v120 = ((unint64_t)v110 + v114 + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v121 = *(_OWORD *)(v119 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v120 + 16) = *(unsigned char *)((v119 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)unint64_t v120 = v121;
  unint64_t v122 = ((unint64_t)v110 + v114 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v123 = ((unint64_t)v111 + v114 + 34) & 0xFFFFFFFFFFFFFFF8;
  long long v124 = *(_OWORD *)v123;
  long long v125 = *(_OWORD *)(v123 + 16);
  long long v126 = *(_OWORD *)(v123 + 32);
  *(void *)(v122 + 48) = *(void *)(v123 + 48);
  *(_OWORD *)(v122 + 16) = v125;
  *(_OWORD *)(v122 + 32) = v126;
  *(_OWORD *)unint64_t v122 = v124;
  unint64_t v127 = (void *)((v122 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v128 = (void *)((v123 + 63) & 0xFFFFFFFFFFFFFFF8);
  void *v127 = *v128;
  *(void *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v129 = (void *)(((unint64_t)v103 + v277) & v295);
  uint64_t v130 = (const void *)(((unint64_t)v104 + v277) & v295);
  if (v259((unint64_t)v130, 1, v58))
  {
    memcpy(v129, v130, v274);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v255 + 32))(v129, v130, v58);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v255 + 56))(v129, 0, 1, v58);
  }
  uint64_t v131 = (void *)(((unint64_t)v129 + v264) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v132 = (void *)(((unint64_t)v130 + v264) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v131 = *v132;
  unint64_t v133 = ((unint64_t)v131 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v134 = ((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v133 = *(void *)v134;
  *(unsigned char *)(v133 + 8) = *(unsigned char *)(v134 + 8);
  unint64_t v135 = (void *)((v284 + v133) & v283);
  unint64_t v136 = (const void *)((v284 + v134) & v283);
  if (v258 == v281)
  {
    if (!(*(unsigned int (**)(const void *))(v290 + 48))(v136)) {
      goto LABEL_83;
    }
LABEL_82:
    memcpy(v135, v136, v74);
    goto LABEL_85;
  }
  unint64_t v137 = (uint64_t *)(((unint64_t)v136 + v293) & 0xFFFFFFFFFFFFFFF8);
  if (v244 <= 0x7FFFFFFE)
  {
    uint64_t v138 = *v137;
    if ((unint64_t)*v137 >= 0xFFFFFFFF) {
      LODWORD(v138) = -1;
    }
    if ((v138 + 1) < 2) {
      goto LABEL_84;
    }
    goto LABEL_82;
  }
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v282 + 48))(((unint64_t)v137 + v260) & v261, v242, v262))
  {
    goto LABEL_82;
  }
LABEL_83:
  unint64_t v137 = (uint64_t *)(((unint64_t)v136 + v293) & 0xFFFFFFFFFFFFFFF8);
LABEL_84:
  (*(void (**)(void *, const void *, uint64_t))(v290 + 32))(v135, v136, v278);
  unint64_t v139 = (void *)(((unint64_t)v135 + v293) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v139 = *v137;
  unint64_t v140 = ((unint64_t)v139 + v260) & v261;
  unint64_t v141 = ((unint64_t)v137 + v260) & v261;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v282 + 32))(v140, v141, v262);
  unint64_t v142 = v252 + v140;
  uint64_t v109 = v290;
  v142 &= 0xFFFFFFFFFFFFFFF8;
  unint64_t v143 = (void *)((v252 + v141) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v142 = *v143;
  *(_OWORD *)((v142 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_85:
  *((unsigned char *)v135 + v74) = *((unsigned char *)v136 + v74);
  *(unsigned char *)(((unint64_t)v135 + v74) | 1) = *(unsigned char *)(((unint64_t)v136 + v74) | 1);
  *(unsigned char *)(((unint64_t)v135 + v74) | 2) = *(unsigned char *)(((unint64_t)v136 + v74) | 2);
  unint64_t v144 = ((unint64_t)v135 + v74 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v145 = ((unint64_t)v136 + v74 + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v146 = *(_OWORD *)v145;
  *(unsigned char *)(v144 + 16) = *(unsigned char *)(v145 + 16);
  *(_OWORD *)unint64_t v144 = v146;
  unint64_t v147 = ((unint64_t)v135 + v74 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v148 = ((unint64_t)v136 + v74 + 34) & 0xFFFFFFFFFFFFFFF8;
  long long v149 = *(_OWORD *)v148;
  long long v150 = *(_OWORD *)(v148 + 16);
  long long v151 = *(_OWORD *)(v148 + 32);
  *(void *)(v147 + 48) = *(void *)(v148 + 48);
  *(_OWORD *)(v147 + 16) = v150;
  *(_OWORD *)(v147 + 32) = v151;
  *(_OWORD *)unint64_t v147 = v149;
  uint64_t v152 = (void *)((v147 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v153 = (void *)((v148 + 63) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v152 = *v153;
  *(void *)(((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v129 + v251) = *((unsigned char *)v130 + v251);
  unint64_t v154 = ((unint64_t)v129 + v251) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v155 = ((unint64_t)v130 + v251) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v154 + 8) = *(void *)(v155 + 8);
  char v156 = (_OWORD *)((v154 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v157 = (_OWORD *)((v155 + 23) & 0xFFFFFFFFFFFFFFF8);
  *char v156 = *v157;
  unint64_t v158 = ((unint64_t)v156 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v159 = ((unint64_t)v157 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v158 = *(void *)v159;
  *(unsigned char *)(v158 + 8) = *(unsigned char *)(v159 + 8);
  *(void *)(((unint64_t)v156 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v157 + 39) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v160 = (_OWORD *)(((unint64_t)v103 + v102 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v161 = (_OWORD *)(((unint64_t)v104 + v102 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v160 = *v161;
  unint64_t v162 = ((unint64_t)v160 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v163 = ((unint64_t)v161 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v164 = *(void *)v163;
  *(unsigned char *)(v162 + 8) = *(unsigned char *)(v163 + 8);
  *(void *)unint64_t v162 = v164;
  uint64_t v165 = (void *)((v247 + v162) & v273);
  int v166 = (const void *)((v247 + v163) & v273);
  if (v249) {
    unsigned int v167 = v249 - 1;
  }
  else {
    unsigned int v167 = 0;
  }
  if (v167 <= v285 - 1) {
    unsigned int v168 = v285 - 1;
  }
  else {
    unsigned int v168 = v167;
  }
  if (v168 <= 0x7FFFFFFE) {
    unsigned int v169 = 2147483646;
  }
  else {
    unsigned int v169 = v168;
  }
  if (v248) {
    unsigned int v170 = v248 - 1;
  }
  else {
    unsigned int v170 = 0;
  }
  if (v170 <= v281 - 1) {
    unsigned int v171 = v281 - 1;
  }
  else {
    unsigned int v171 = v170;
  }
  if (v171 <= 0x7FFFFFFE) {
    unsigned int v172 = 2147483646;
  }
  else {
    unsigned int v172 = v171;
  }
  if (v172 <= v169) {
    unsigned int v173 = v169;
  }
  else {
    unsigned int v173 = v172;
  }
  if (v173 <= 0x7FFFFFFF) {
    unsigned int v173 = 0x7FFFFFFF;
  }
  if (v169 != v173)
  {
    unint64_t v176 = ((unint64_t)v166 + v277) & v295;
    if (v172 != v173)
    {
      uint64_t v174 = v246;
      if (*(void *)(((v176 + v251) & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
        goto LABEL_179;
      }
      goto LABEL_147;
    }
    if (v170 == v172)
    {
      uint64_t v174 = v246;
      if (v248 < 2) {
        goto LABEL_147;
      }
      unsigned int v175 = v259(v176, v248, v280);
      goto LABEL_116;
    }
    unint64_t v177 = (v284 + ((((v264 + v176) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v283;
    if (v281 - 1 == v172)
    {
      if (v258 != v281)
      {
        uint64_t v183 = (unint64_t *)((v293 + v177) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v174 = v246;
        if (v244 > 0x7FFFFFFE)
        {
          if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v282 + 48))(((unint64_t)v183 + v260) & v261, v242, v262) < 2)goto LABEL_147; {
LABEL_179:
          }
          memcpy(v165, v166, v102 + 8);
          return v174;
        }
        unint64_t v184 = *v183;
        if (v184 >= 0xFFFFFFFF) {
          unsigned int v178 = -1;
        }
        else {
          unsigned int v178 = v184;
        }
        if (v178 + 1 < 2) {
          goto LABEL_147;
        }
LABEL_146:
        if (v178 < 2) {
          goto LABEL_147;
        }
        goto LABEL_179;
      }
      unsigned int v178 = (*(uint64_t (**)(unint64_t))(v109 + 48))(v177);
LABEL_145:
      uint64_t v174 = v246;
      goto LABEL_146;
    }
    unint64_t v179 = v240;
LABEL_134:
    unint64_t v182 = *(void *)((((v179 + v177 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
    if (v182 >= 0xFFFFFFFF) {
      LODWORD(v182) = -1;
    }
    uint64_t v174 = v246;
    if ((v182 + 1) >= 2) {
      goto LABEL_179;
    }
    goto LABEL_147;
  }
  if (v167 != v169)
  {
    unint64_t v177 = (v289 + (((((unint64_t)v166 + v269) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v287;
    if (v285 - 1 == v169)
    {
      if (v254 == v285)
      {
        unsigned int v178 = (*(uint64_t (**)(unint64_t))(v291 + 48))(v177);
      }
      else
      {
        uint64_t v180 = (unint64_t *)((v270 + v177) & 0xFFFFFFFFFFFFFFF8);
        if (v245 <= 0x7FFFFFFE)
        {
          unint64_t v181 = *v180;
          if (v181 >= 0xFFFFFFFF) {
            unsigned int v178 = -1;
          }
          else {
            unsigned int v178 = v181;
          }
          uint64_t v174 = v246;
          if (v178 + 1 < 2) {
            goto LABEL_147;
          }
          goto LABEL_146;
        }
        unsigned int v178 = (*(uint64_t (**)(unint64_t))(v286 + 48))(((unint64_t)v180 + v266) & v267);
      }
      goto LABEL_145;
    }
    unint64_t v179 = v241;
    goto LABEL_134;
  }
  uint64_t v174 = v246;
  if (v249 < 2) {
    goto LABEL_147;
  }
  unsigned int v175 = v265((unint64_t)v166, v249, v271);
LABEL_116:
  if (v175 >= 2) {
    goto LABEL_179;
  }
LABEL_147:
  if (v265((unint64_t)v166, 1, v271))
  {
    memcpy(v165, v166, v275);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v256 + 32))(v165, v166, v271);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v256 + 56))(v165, 0, 1, v271);
  }
  uint64_t v185 = (void *)(((unint64_t)v165 + v269) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v186 = (void *)(((unint64_t)v166 + v269) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v185 = *v186;
  unint64_t v187 = ((unint64_t)v185 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v188 = ((unint64_t)v186 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v187 = *(void *)v188;
  *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
  unint64_t v189 = (void *)((v289 + v187) & v287);
  unint64_t v190 = (const void *)((v289 + v188) & v287);
  if (v254 == v285)
  {
    if (!(*(unsigned int (**)(const void *))(v291 + 48))(v190)) {
      goto LABEL_160;
    }
LABEL_159:
    memcpy(v189, v190, __n);
    goto LABEL_162;
  }
  unint64_t v191 = (uint64_t *)(((unint64_t)v190 + v270) & 0xFFFFFFFFFFFFFFF8);
  if (v245 <= 0x7FFFFFFE)
  {
    uint64_t v192 = *v191;
    if ((unint64_t)*v191 >= 0xFFFFFFFF) {
      LODWORD(v192) = -1;
    }
    if ((v192 + 1) < 2) {
      goto LABEL_161;
    }
    goto LABEL_159;
  }
  if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v286 + 48))(((unint64_t)v191 + v266) & v267, v243, v268))
  {
    goto LABEL_159;
  }
LABEL_160:
  unint64_t v191 = (uint64_t *)(((unint64_t)v190 + v270) & 0xFFFFFFFFFFFFFFF8);
LABEL_161:
  (*(void (**)(void *, const void *, uint64_t))(v291 + 32))(v189, v190, v279);
  uint64_t v193 = (void *)(((unint64_t)v189 + v270) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v193 = *v191;
  unint64_t v194 = ((unint64_t)v193 + v266) & v267;
  unint64_t v195 = ((unint64_t)v191 + v266) & v267;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v286 + 32))(v194, v195, v268);
  uint64_t v196 = (void *)((v253 + v194) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v197 = (void *)((v253 + v195) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v196 = *v197;
  *(_OWORD *)(((unint64_t)v196 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v197 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_162:
  uint64_t v198 = (uint64_t)v190 + __n + 10;
  *((unsigned char *)v189 + __n) = *((unsigned char *)v190 + __n);
  *(unsigned char *)(((unint64_t)v189 + __n) | 1) = *(unsigned char *)(((unint64_t)v190 + __n) | 1);
  *(unsigned char *)(((unint64_t)v189 + __n) | 2) = *(unsigned char *)(((unint64_t)v190 + __n) | 2);
  unint64_t v199 = ((unint64_t)v189 + __n + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v200 = *(_OWORD *)(v198 & 0xFFFFFFFFFFFFFFF8);
  *(unsigned char *)(v199 + 16) = *(unsigned char *)((v198 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(_OWORD *)unint64_t v199 = v200;
  unint64_t v201 = ((unint64_t)v189 + __n + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v202 = ((unint64_t)v190 + __n + 34) & 0xFFFFFFFFFFFFFFF8;
  long long v203 = *(_OWORD *)v202;
  long long v204 = *(_OWORD *)(v202 + 16);
  long long v205 = *(_OWORD *)(v202 + 32);
  *(void *)(v201 + 48) = *(void *)(v202 + 48);
  *(_OWORD *)(v201 + 16) = v204;
  *(_OWORD *)(v201 + 32) = v205;
  *(_OWORD *)unint64_t v201 = v203;
  unint64_t v206 = (void *)((v201 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v207 = (void *)((v202 + 63) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v206 = *v207;
  *(void *)(((unint64_t)v206 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v208 = (void *)(((unint64_t)v165 + v277) & v295);
  uint64_t v209 = (const void *)(((unint64_t)v166 + v277) & v295);
  if (v259((unint64_t)v209, 1, v280))
  {
    memcpy(v208, v209, v274);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v255 + 32))(v208, v209, v280);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v255 + 56))(v208, 0, 1, v280);
  }
  unsigned int v210 = (void *)(((unint64_t)v208 + v264) & 0xFFFFFFFFFFFFFFF8);
  long long v211 = (void *)(((unint64_t)v209 + v264) & 0xFFFFFFFFFFFFFFF8);
  *unsigned int v210 = *v211;
  unint64_t v212 = ((unint64_t)v210 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v213 = ((unint64_t)v211 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v212 = *(void *)v213;
  *(unsigned char *)(v212 + 8) = *(unsigned char *)(v213 + 8);
  int v214 = (void *)((v284 + v212) & v283);
  unint64_t v215 = (const void *)((v284 + v213) & v283);
  if (v258 == v281)
  {
    if (!(*(unsigned int (**)(const void *))(v290 + 48))(v215)) {
      goto LABEL_175;
    }
  }
  else
  {
    unint64_t v216 = (void *)(((unint64_t)v215 + v293) & 0xFFFFFFFFFFFFFFF8);
    if (v244 > 0x7FFFFFFE)
    {
      if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v282 + 48))(((unint64_t)v216 + v260) & v261, v242, v262))
      {
LABEL_175:
        unint64_t v216 = (void *)(((unint64_t)v215 + v293) & 0xFFFFFFFFFFFFFFF8);
LABEL_176:
        (*(void (**)(void *, const void *, uint64_t))(v290 + 32))(v214, v215, v278);
        long long v218 = (void *)(((unint64_t)v214 + v293) & 0xFFFFFFFFFFFFFFF8);
        *long long v218 = *v216;
        unint64_t v219 = ((unint64_t)v218 + v260) & v261;
        unint64_t v220 = ((unint64_t)v216 + v260) & v261;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v282 + 32))(v219, v220, v262);
        uint64_t v221 = (void *)((v252 + v219) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v222 = (void *)((v252 + v220) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v221 = *v222;
        *(_OWORD *)(((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_177;
      }
    }
    else
    {
      uint64_t v217 = *v216;
      if (*v216 >= 0xFFFFFFFFuLL) {
        LODWORD(v217) = -1;
      }
      if ((v217 + 1) < 2) {
        goto LABEL_176;
      }
    }
  }
  memcpy(v214, v215, v74);
LABEL_177:
  *((unsigned char *)v214 + v74) = *((unsigned char *)v215 + v74);
  *(unsigned char *)(((unint64_t)v214 + v74) | 1) = *(unsigned char *)(((unint64_t)v215 + v74) | 1);
  *(unsigned char *)(((unint64_t)v214 + v74) | 2) = *(unsigned char *)(((unint64_t)v215 + v74) | 2);
  unint64_t v223 = ((unint64_t)v214 + v74 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v224 = ((unint64_t)v215 + v74 + 10) & 0xFFFFFFFFFFFFFFF8;
  long long v225 = *(_OWORD *)v224;
  *(unsigned char *)(v223 + 16) = *(unsigned char *)(v224 + 16);
  *(_OWORD *)unint64_t v223 = v225;
  unint64_t v226 = ((unint64_t)v214 + v74 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v227 = ((unint64_t)v215 + v74 + 34) & 0xFFFFFFFFFFFFFFF8;
  long long v228 = *(_OWORD *)v227;
  long long v229 = *(_OWORD *)(v227 + 16);
  long long v230 = *(_OWORD *)(v227 + 32);
  *(void *)(v226 + 48) = *(void *)(v227 + 48);
  *(_OWORD *)(v226 + 16) = v229;
  *(_OWORD *)(v226 + 32) = v230;
  *(_OWORD *)unint64_t v226 = v228;
  char v231 = (void *)((v226 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v232 = (void *)((v227 + 63) & 0xFFFFFFFFFFFFFFF8);
  *char v231 = *v232;
  *(void *)(((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v232 + 15) & 0xFFFFFFFFFFFFFFF8);
  *((unsigned char *)v208 + v251) = *((unsigned char *)v209 + v251);
  unint64_t v233 = ((unint64_t)v208 + v251) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v234 = ((unint64_t)v209 + v251) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v233 + 8) = *(void *)(v234 + 8);
  uint64_t v235 = (_OWORD *)((v233 + 23) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v236 = (_OWORD *)((v234 + 23) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v235 = *v236;
  unint64_t v237 = ((unint64_t)v235 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v238 = ((unint64_t)v236 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v237 = *(void *)v238;
  *(unsigned char *)(v237 + 8) = *(unsigned char *)(v238 + 8);
  *(void *)(((unint64_t)v235 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v236 + 39) & 0xFFFFFFFFFFFFFFF8);
  return v174;
}

uint64_t sub_24D4B2CEC(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v578 = swift_getAssociatedTypeWitness();
  uint64_t v583 = *(void *)(v578 - 8);
  int v5 = *(_DWORD *)(v583 + 80) & 0xF8;
  uint64_t v568 = swift_getAssociatedTypeWitness();
  uint64_t v585 = *(void *)(v568 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v585 + 80);
  uint64_t v580 = v5 | v6 | 7;
  uint64_t v586 = swift_getAssociatedTypeWitness();
  uint64_t v569 = *(void *)(v586 - 8);
  int v7 = *(_DWORD *)(v569 + 80) & 0xF8;
  uint64_t v577 = swift_getAssociatedTypeWitness();
  uint64_t v591 = *(void *)(v577 - 8);
  int v8 = *(_DWORD *)(v591 + 80) & 0xF8;
  uint64_t v9 = v3;
  uint64_t v565 = swift_getAssociatedTypeWitness();
  uint64_t v584 = *(void *)(v565 - 8);
  uint64_t v574 = *(unsigned __int8 *)(v584 + 80);
  uint64_t v587 = v8 | v574 | 7;
  uint64_t v572 = v587 | v7;
  int64_t v10 = v5 | v6 | v4 | v572;
  uint64_t v531 = a1;
  uint64_t v11 = v10 + 9 + a1;
  unint64_t v12 = v10;
  uint64_t v532 = v10 + 9;
  unint64_t v13 = v10 + 9 + a2;
  unint64_t v14 = (const void *)(v13 & ~v10);
  unint64_t v15 = *(uint64_t (**)(void))(v3 + 48);
  int v593 = (void *)(v11 & ~v10);
  LODWORD(v3) = v15();
  id v589 = v14;
  v556 = v15;
  int v16 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v15)(v14, 1, AssociatedTypeWitness);
  unint64_t __src = v12;
  unint64_t __dst = v13;
  uint64_t v536 = v11;
  if (v3)
  {
    if (v16)
    {
      if (*(_DWORD *)(v9 + 84)) {
        size_t v17 = *(void *)(v9 + 64);
      }
      else {
        size_t v17 = *(void *)(v9 + 64) + 1;
      }
      unint64_t v18 = (unint64_t)v593;
      goto LABEL_11;
    }
    unint64_t v18 = (unint64_t)v593;
    unint64_t v19 = (unint64_t)v589;
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v593, v589, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v593, 0, 1, AssociatedTypeWitness);
  }
  else
  {
    if (v16)
    {
      unint64_t v18 = (unint64_t)v593;
      (*(void (**)(void *, uint64_t))(v9 + 8))(v593, AssociatedTypeWitness);
      if (*(_DWORD *)(v9 + 84)) {
        size_t v17 = *(void *)(v9 + 64);
      }
      else {
        size_t v17 = *(void *)(v9 + 64) + 1;
      }
LABEL_11:
      unint64_t v19 = (unint64_t)v589;
      memcpy((void *)v18, v589, v17);
      goto LABEL_14;
    }
    unint64_t v18 = (unint64_t)v593;
    unint64_t v19 = (unint64_t)v589;
    (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v593, v589, AssociatedTypeWitness);
  }
LABEL_14:
  uint64_t v20 = v583;
  unsigned int v544 = *(_DWORD *)(v9 + 84);
  uint64_t v539 = v9;
  if (v544) {
    uint64_t v21 = *(void *)(v9 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v9 + 64) + 1;
  }
  size_t __n = v21;
  size_t v22 = (void *)(((v19 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v23 = (void *)(((v18 | 7) + v21) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v23 = *v22;
  unint64_t v24 = ((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = ((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(unsigned char *)(v24 + 8) = *(unsigned char *)(v25 + 8);
  uint64_t v26 = v580;
  uint64_t v27 = (void *)((v26 + 9 + v24) & ~v26);
  uint64_t v582 = v580 + 9;
  unsigned int v28 = (void *)((v26 + 9 + v25) & ~v26);
  uint64_t v29 = *(unsigned int *)(v583 + 84);
  unsigned int v530 = *(_DWORD *)(v585 + 84);
  if (v29 <= v530) {
    unsigned int v30 = *(_DWORD *)(v585 + 84);
  }
  else {
    unsigned int v30 = *(_DWORD *)(v583 + 84);
  }
  if (v30 <= 0x7FFFFFFE) {
    int v31 = 2147483646;
  }
  else {
    int v31 = v30;
  }
  uint64_t v32 = *(void *)(v583 + 64) + 7;
  uint64_t v567 = ~v6;
  uint64_t v566 = v6 + 8;
  uint64_t v545 = *(void *)(v585 + 64) + 7;
  unint64_t v528 = (((v545 + ((v6 + 8 + (v32 & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v33 = v528 + 16;
  int v576 = v31;
  uint64_t v579 = v32;
  unsigned int v554 = *(_DWORD *)(v583 + 84);
  unsigned int v540 = v30;
  if (v29 == v31)
  {
    int v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v583 + 48);
    int v35 = v34(v27, v29, v578);
    int v36 = v34(v28, v29, v578);
    if (v35) {
      goto LABEL_25;
    }
LABEL_36:
    uint64_t v37 = (uint64_t *)(((unint64_t)v27 + v579) & 0xFFFFFFFFFFFFFFF8);
    if (v36)
    {
      size_t v33 = v528 + 16;
      goto LABEL_38;
    }
    int v38 = (uint64_t *)(((unint64_t)v28 + v579) & 0xFFFFFFFFFFFFFFF8);
    size_t v33 = v528 + 16;
    goto LABEL_43;
  }
  uint64_t v37 = (uint64_t *)(((unint64_t)v27 + v32) & 0xFFFFFFFFFFFFFFF8);
  if (v30 > 0x7FFFFFFE)
  {
    uint64_t v43 = *(uint64_t (**)(unint64_t, void, uint64_t))(v585 + 48);
    int v44 = v43(((unint64_t)v37 + v566) & v567, v530, v568);
    uint64_t v45 = v32;
    int v46 = v44;
    unint64_t v19 = (unint64_t)v589;
    uint64_t v20 = v583;
    int v36 = v43((v566 + (((unint64_t)v28 + v45) & 0xFFFFFFFFFFFFFFF8)) & v567, v530, v568);
    if (v46)
    {
LABEL_25:
      size_t v33 = v528 + 16;
      if (!v36)
      {
        uint64_t v37 = (uint64_t *)(((unint64_t)v27 + v579) & 0xFFFFFFFFFFFFFFF8);
        int v38 = (uint64_t *)(((unint64_t)v28 + v579) & 0xFFFFFFFFFFFFFFF8);
LABEL_40:
        (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v27, v28, v578);
        uint64_t *v37 = *v38;
        unint64_t v47 = ((unint64_t)v38 + v566) & v567;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 32))(((unint64_t)v37 + v566) & v567, v47, v568);
        unint64_t v48 = (void *)((v545 + (((unint64_t)v37 + v566) & v567)) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v49 = (void *)((v545 + v47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v48 = *v49;
        *(_OWORD *)(((unint64_t)v48 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_44;
      }
      goto LABEL_41;
    }
    goto LABEL_36;
  }
  uint64_t v39 = *v37;
  if ((unint64_t)*v37 >= 0xFFFFFFFF) {
    LODWORD(v39) = -1;
  }
  unsigned int v40 = v39 + 1;
  int v38 = (uint64_t *)(((unint64_t)v28 + v32) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v41 = *v38;
  if ((unint64_t)*v38 >= 0xFFFFFFFF) {
    LODWORD(v41) = -1;
  }
  unsigned int v42 = v41 + 1;
  if (v40 >= 2)
  {
    if (v42 < 2) {
      goto LABEL_40;
    }
    goto LABEL_41;
  }
  if (v42 >= 2)
  {
LABEL_38:
    (*(void (**)(void *, uint64_t))(v20 + 8))(v27, v578);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v585 + 8))(((unint64_t)v37 + v566) & v567, v568);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_41:
    memcpy(v27, v28, v33);
    goto LABEL_44;
  }
LABEL_43:
  (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v27, v28, v578);
  uint64_t *v37 = *v38;
  swift_bridgeObjectRelease();
  unint64_t v50 = ((unint64_t)v38 + v566) & v567;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 40))(((unint64_t)v37 + v566) & v567, v50, v568);
  long long v51 = (void *)((v545 + (((unint64_t)v37 + v566) & v567)) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v52 = (v545 + v50) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v53 = *(void *)v52;
  v52 += 15;
  *long long v51 = v53;
  swift_bridgeObjectRelease();
  uint64_t v54 = (void *)(((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v54 = *(void *)(v52 & 0xFFFFFFFFFFFFFFF8);
  v54[1] = *(void *)((v52 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
LABEL_44:
  uint64_t v55 = v587;
  *((unsigned char *)v27 + v33) = *((unsigned char *)v28 + v33);
  *(unsigned char *)(((unint64_t)v27 + v33) | 1) = *(unsigned char *)(((unint64_t)v28 + v33) | 1);
  uint64_t v581 = ~v580;
  *(unsigned char *)(((unint64_t)v27 + v33) | 2) = *(unsigned char *)(((unint64_t)v28 + v33) | 2);
  unint64_t v56 = ((unint64_t)v27 + v33 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = ((unint64_t)v28 + v33 + 10) & 0xFFFFFFFFFFFFFFF8;
  char v58 = *(unsigned char *)(v57 + 16);
  unsigned int v59 = *(void **)v56;
  size_t v60 = *(void **)(v56 + 8);
  *(_OWORD *)unint64_t v56 = *(_OWORD *)v57;
  char v61 = *(unsigned char *)(v56 + 16);
  *(unsigned char *)(v56 + 16) = v58;
  sub_24D3E380C(v59, v60, v61);
  unint64_t v62 = ((unint64_t)v27 + v33 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v63 = ((unint64_t)v28 + v33 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v64 = *(void *)(v62 + 16);
  if (4 * ((v64 >> 60) & 3)) {
    BOOL v65 = (((v64 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v64 >> 60) & 3))) == 15;
  }
  else {
    BOOL v65 = 1;
  }
  if (!v65)
  {
LABEL_60:
    long long v71 = *(_OWORD *)v63;
    long long v72 = *(_OWORD *)(v63 + 16);
    long long v73 = *(_OWORD *)(v63 + 32);
    *(void *)(v62 + 48) = *(void *)(v63 + 48);
    *(_OWORD *)(v62 + 16) = v72;
    *(_OWORD *)(v62 + 32) = v73;
    *(_OWORD *)unint64_t v62 = v71;
    uint64_t v74 = v569;
    uint64_t v75 = v574;
    goto LABEL_63;
  }
  unint64_t v66 = (uint64_t *)(v62 + 8);
  uint64_t v67 = *(void *)(v63 + 16) >> 60;
  if (4 * (v67 & 3)) {
    BOOL v68 = ((v67 >> 2) & 0xFFFFFFF3 | (4 * (v67 & 3))) == 15;
  }
  else {
    BOOL v68 = 1;
  }
  if (!v68)
  {
    if (v64 >> 60 != 15) {
      sub_24D400DCC(*v66, v64);
    }
    goto LABEL_60;
  }
  unint64_t v69 = (void *)(v63 + 8);
  *(void *)unint64_t v62 = *(void *)v63;
  if (v64 >> 60 != 15)
  {
    unint64_t v70 = *(void *)(v63 + 16);
    if (v70 >> 60 != 15)
    {
      uint64_t v76 = *(void *)(v62 + 8);
      *(void *)(v62 + 8) = *v69;
      *(void *)(v62 + 16) = v70;
      sub_24D400DCC(v76, v64);
      goto LABEL_62;
    }
    sub_24D4B12A0(v62 + 8);
  }
  *(_OWORD *)unint64_t v66 = *(_OWORD *)v69;
LABEL_62:
  uint64_t v74 = v569;
  uint64_t v75 = v574;
  long long v77 = *(_OWORD *)(v63 + 24);
  *(unsigned char *)(v62 + 40) = *(unsigned char *)(v63 + 40);
  *(_OWORD *)(v62 + 24) = v77;
  *(void *)(v62 + 48) = *(void *)(v63 + 48);
LABEL_63:
  uint64_t v78 = (void **)((v62 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v79 = (void **)((v63 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v80 = *v78;
  *uint64_t v78 = *v79;

  *(void *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v562 = __n + 7;
  unint64_t v81 = ((((((((v582 + ((((__n + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v581) + v33 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v82 = ((unint64_t)v593 + v572 + v81) & ~v572;
  unint64_t v83 = (v19 + v572 + v81) & ~v572;
  uint64_t v84 = *(uint64_t (**)(void))(v74 + 48);
  int v85 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v84)(v82, 1, v586);
  unint64_t v551 = v84;
  int v86 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v84)(v83, 1, v586);
  if (v85)
  {
    if (!v86)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v74 + 32))(v82, v83, v586);
      (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v74 + 56))(v82, 0, 1, v586);
      goto LABEL_74;
    }
    int v87 = *(_DWORD *)(v74 + 84);
    size_t v88 = *(void *)(v74 + 64);
  }
  else
  {
    if (!v86)
    {
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v74 + 40))(v82, v83, v586);
      goto LABEL_74;
    }
    (*(void (**)(unint64_t, uint64_t))(v74 + 8))(v82, v586);
    int v87 = *(_DWORD *)(v74 + 84);
    size_t v88 = *(void *)(v74 + 64);
  }
  if (v87) {
    size_t v89 = v88;
  }
  else {
    size_t v89 = v88 + 1;
  }
  memcpy((void *)v82, (const void *)v83, v89);
LABEL_74:
  unsigned int v543 = *(_DWORD *)(v74 + 84);
  if (v543) {
    uint64_t v90 = *(void *)(v74 + 64);
  }
  else {
    uint64_t v90 = *(void *)(v74 + 64) + 1;
  }
  size_t v533 = ((unint64_t)v593 + v572 + v81) & ~v572;
  size_t v553 = v90;
  long long v91 = (void *)(((v83 | 7) + v90) & 0xFFFFFFFFFFFFFFF8);
  long long v92 = (void *)(((v82 | 7) + v90) & 0xFFFFFFFFFFFFFFF8);
  void *v92 = *v91;
  unint64_t v93 = ((unint64_t)v92 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v94 = ((unint64_t)v91 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v93 = *(void *)v94;
  *(unsigned char *)(v93 + 8) = *(unsigned char *)(v94 + 8);
  unint64_t v95 = (char *)((v587 + 9 + v93) & ~v587);
  uint64_t v575 = v587 + 9;
  unint64_t v96 = (const void *)((v587 + 9 + v94) & ~v587);
  uint64_t v97 = *(unsigned int *)(v591 + 84);
  unsigned int v529 = *(_DWORD *)(v584 + 84);
  if (v97 <= v529) {
    unsigned int v98 = *(_DWORD *)(v584 + 84);
  }
  else {
    unsigned int v98 = *(_DWORD *)(v591 + 84);
  }
  if (v98 <= 0x7FFFFFFE) {
    int v99 = 2147483646;
  }
  else {
    int v99 = v98;
  }
  uint64_t v564 = ~v75;
  uint64_t v563 = v75 + 8;
  uint64_t v546 = *(void *)(v584 + 64) + 7;
  unint64_t v527 = (((v546 + ((v75 + 8 + ((*(void *)(v591 + 64) + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v75)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v100 = v527 + 16;
  size_t v590 = v527 + 16;
  uint64_t v594 = *(void *)(v591 + 64) + 7;
  unsigned int v550 = *(_DWORD *)(v591 + 84);
  int v570 = v99;
  unsigned int v542 = v98;
  unint64_t v534 = v81;
  if (v97 == v99)
  {
    unint64_t v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v591 + 48);
    uint64_t v102 = v577;
    int v103 = v101(v95, v97, v577);
    unint64_t v104 = (unint64_t)v96;
  }
  else
  {
    int v105 = (uint64_t *)((unint64_t)&v95[v594] & 0xFFFFFFFFFFFFFFF8);
    if (v98 <= 0x7FFFFFFE)
    {
      uint64_t v106 = *v105;
      if ((unint64_t)*v105 >= 0xFFFFFFFF) {
        LODWORD(v106) = -1;
      }
      unsigned int v107 = v106 + 1;
      unint64_t v108 = (uint64_t *)(((unint64_t)v96 + v594) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v109 = *v108;
      if ((unint64_t)*v108 >= 0xFFFFFFFF) {
        LODWORD(v109) = -1;
      }
      unsigned int v110 = v109 + 1;
      if (v107 >= 2)
      {
        if (v110 < 2) {
          goto LABEL_101;
        }
LABEL_102:
        memcpy(v95, v96, v100);
        goto LABEL_105;
      }
      if (v110 >= 2)
      {
LABEL_99:
        (*(void (**)(char *, uint64_t))(v591 + 8))(v95, v577);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v584 + 8))(((unint64_t)v105 + v563) & v564, v565);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_102;
      }
LABEL_104:
      (*(void (**)(char *, const void *, uint64_t))(v591 + 40))(v95, v96, v577);
      *int v105 = *v108;
      swift_bridgeObjectRelease();
      unint64_t v115 = ((unint64_t)v108 + v563) & v564;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v584 + 40))(((unint64_t)v105 + v563) & v564, v115, v565);
      unint64_t v116 = (void *)((v546 + (((unint64_t)v105 + v563) & v564)) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v117 = (v546 + v115) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v118 = *(void *)v117;
      v117 += 15;
      *unint64_t v116 = v118;
      swift_bridgeObjectRelease();
      uint64_t v119 = (void *)(((unint64_t)v116 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v119 = *(void *)(v117 & 0xFFFFFFFFFFFFFFF8);
      v119[1] = *(void *)((v117 & 0xFFFFFFFFFFFFFFF8) + 8);
      swift_bridgeObjectRelease();
      goto LABEL_105;
    }
    unint64_t v101 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v584 + 48);
    uint64_t v97 = v529;
    uint64_t v102 = v565;
    int v103 = v101((char *)(((unint64_t)v105 + v563) & v564), v529, v565);
    unint64_t v104 = (v563 + (((unint64_t)v96 + v594) & 0xFFFFFFFFFFFFFFF8)) & v564;
    uint64_t v55 = v587;
  }
  int v111 = v101((char *)v104, v97, v102);
  if (!v103)
  {
    int v105 = (uint64_t *)((unint64_t)&v95[v594] & 0xFFFFFFFFFFFFFFF8);
    if (v111)
    {
      size_t v100 = v527 + 16;
      goto LABEL_99;
    }
    unint64_t v108 = (uint64_t *)(((unint64_t)v96 + v594) & 0xFFFFFFFFFFFFFFF8);
    size_t v100 = v527 + 16;
    goto LABEL_104;
  }
  size_t v100 = v527 + 16;
  if (v111) {
    goto LABEL_102;
  }
  int v105 = (uint64_t *)((unint64_t)&v95[v594] & 0xFFFFFFFFFFFFFFF8);
  unint64_t v108 = (uint64_t *)(((unint64_t)v96 + v594) & 0xFFFFFFFFFFFFFFF8);
LABEL_101:
  (*(void (**)(char *, const void *, uint64_t))(v591 + 32))(v95, v96, v577);
  *int v105 = *v108;
  unint64_t v112 = ((unint64_t)v108 + v563) & v564;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v584 + 32))(((unint64_t)v105 + v563) & v564, v112, v565);
  uint64_t v113 = (void *)((v546 + (((unint64_t)v105 + v563) & v564)) & 0xFFFFFFFFFFFFFFF8);
  size_t v114 = (void *)((v546 + v112) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v113 = *v114;
  *(_OWORD *)(((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_105:
  unint64_t v120 = (unint64_t)&v95[v100];
  long long v121 = (unsigned char *)(((unint64_t)v96 + v100) | 1);
  unint64_t v122 = (unsigned char *)(((unint64_t)v96 + v100) | 2);
  uint64_t v123 = (uint64_t)v96 + v100 + 10;
  uint64_t v124 = (uint64_t)v96 + v100 + 34;
  *(unsigned char *)unint64_t v120 = *((unsigned char *)v96 + v100);
  unint64_t v125 = v120 + 34;
  unint64_t v126 = ~__src;
  *(unsigned char *)(v120 | 1) = *v121;
  uint64_t v588 = ~v572;
  uint64_t v127 = ~v55;
  *(unsigned char *)(v120 | 2) = *v122;
  unint64_t v128 = (v120 + 10) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v121) = *(unsigned char *)((v123 & 0xFFFFFFFFFFFFFFF8) + 16);
  unsigned int v129 = *(void **)v128;
  uint64_t v130 = *(void **)(v128 + 8);
  *(_OWORD *)unint64_t v128 = *(_OWORD *)(v123 & 0xFFFFFFFFFFFFFFF8);
  char v131 = *(unsigned char *)(v128 + 16);
  *(unsigned char *)(v128 + 16) = (_BYTE)v121;
  sub_24D3E380C(v129, v130, v131);
  unint64_t v132 = v125 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v133 = v124 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v134 = *(void *)(v132 + 16);
  if (4 * ((v134 >> 60) & 3) && (((v134 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v134 >> 60) & 3))) != 0xF)
  {
LABEL_107:
    long long v135 = *(_OWORD *)v133;
    long long v136 = *(_OWORD *)(v133 + 16);
    long long v137 = *(_OWORD *)(v133 + 32);
    *(void *)(v132 + 48) = *(void *)(v133 + 48);
    *(_OWORD *)(v132 + 16) = v136;
    *(_OWORD *)(v132 + 32) = v137;
    *(_OWORD *)unint64_t v132 = v135;
    uint64_t v138 = AssociatedTypeWitness;
    goto LABEL_118;
  }
  unint64_t v139 = (uint64_t *)(v132 + 8);
  uint64_t v140 = *(void *)(v133 + 16) >> 60;
  if (4 * (v140 & 3) && ((v140 >> 2) & 0xFFFFFFF3 | (4 * (v140 & 3))) != 0xF)
  {
    if (v134 >> 60 != 15) {
      sub_24D400DCC(*v139, v134);
    }
    goto LABEL_107;
  }
  unint64_t v141 = (void *)(v133 + 8);
  *(void *)unint64_t v132 = *(void *)v133;
  if (v134 >> 60 != 15)
  {
    unint64_t v142 = *(void *)(v133 + 16);
    if (v142 >> 60 != 15)
    {
      uint64_t v143 = *(void *)(v132 + 8);
      *(void *)(v132 + 8) = *v141;
      *(void *)(v132 + 16) = v142;
      sub_24D400DCC(v143, v134);
      goto LABEL_117;
    }
    sub_24D4B12A0(v132 + 8);
  }
  *(_OWORD *)unint64_t v139 = *(_OWORD *)v141;
LABEL_117:
  uint64_t v138 = AssociatedTypeWitness;
  long long v144 = *(_OWORD *)(v133 + 24);
  *(unsigned char *)(v132 + 40) = *(unsigned char *)(v133 + 40);
  *(_OWORD *)(v132 + 24) = v144;
  *(void *)(v132 + 48) = *(void *)(v133 + 48);
LABEL_118:
  unint64_t v145 = (void **)((v132 + 63) & 0xFFFFFFFFFFFFFFF8);
  long long v146 = (void **)((v133 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v147 = *v145;
  *unint64_t v145 = *v146;

  *(void *)(((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v146 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v555 = v553 + 7;
  unint64_t v148 = ((((((((v575 + ((((v553 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v127) + v590 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  *(unsigned char *)(v148 + v533) = *(unsigned char *)(v148 + v83);
  unint64_t v149 = (v148 + v533) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v150 = (v148 + v83) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v149 + 8) = *(void *)(v150 + 8);
  swift_bridgeObjectRelease();
  long long v151 = (void *)((v149 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v152 = (void *)((v150 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v151 = *v152;
  v151[1] = v152[1];
  unint64_t v153 = ((unint64_t)v151 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v154 = ((unint64_t)v152 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v153 = *(void *)v154;
  *(unsigned char *)(v153 + 8) = *(unsigned char *)(v154 + 8);
  *(void *)(((unint64_t)v151 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v152 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v573 = v534 + v572;
  unint64_t v561 = v148;
  unint64_t v535 = (((((v148 + (v573 & v588)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v155 = (void *)(((v536 | __src) + v535 + 8) & v126);
  char v156 = (const void *)(((__dst | __src) + v535 + 8) & v126);
  LODWORD(v150) = ((uint64_t (*)(void *, uint64_t, uint64_t))v556)(v155, 1, v138);
  int v157 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v556)(v156, 1, v138);
  if (v150)
  {
    if (!v157)
    {
      (*(void (**)(void *, const void *, uint64_t))(v539 + 32))(v155, v156, v138);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v539 + 56))(v155, 0, 1, v138);
      goto LABEL_124;
    }
    goto LABEL_123;
  }
  if (v157)
  {
    (*(void (**)(void *, uint64_t))(v539 + 8))(v155, v138);
LABEL_123:
    memcpy(v155, v156, __n);
    goto LABEL_124;
  }
  (*(void (**)(void *, const void *, uint64_t))(v539 + 40))(v155, v156, v138);
LABEL_124:
  unint64_t v158 = (void *)(((unint64_t)v155 + v562) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v159 = (void *)(((unint64_t)v156 + v562) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v158 = *v159;
  unint64_t v160 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v160 = *(void *)v161;
  *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
  unint64_t v162 = (char *)((v582 + v160) & v581);
  unint64_t v163 = (void *)((v582 + v161) & v581);
  __dsta = (void *)(((__dst | __src) + v535 + 8) & v126);
  __srca = v163;
  if (v554 == v576)
  {
    unint64_t v537 = v155;
    unint64_t v164 = v126;
    uint64_t v165 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v583 + 48);
    uint64_t v166 = v578;
    int v167 = v165(v162, v554, v578);
    unint64_t v168 = (unint64_t)v163;
    uint64_t v169 = v554;
  }
  else
  {
    unsigned int v170 = (uint64_t *)((unint64_t)&v162[v579] & 0xFFFFFFFFFFFFFFF8);
    if (v540 <= 0x7FFFFFFE)
    {
      uint64_t v171 = *v170;
      if ((unint64_t)*v170 >= 0xFFFFFFFF) {
        LODWORD(v171) = -1;
      }
      unsigned int v172 = v171 + 1;
      unint64_t v163 = (void *)((v582 + v161) & v581);
      unsigned int v173 = (uint64_t *)(((unint64_t)__srca + v579) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v174 = *v173;
      if ((unint64_t)*v173 >= 0xFFFFFFFF) {
        LODWORD(v174) = -1;
      }
      unsigned int v175 = v174 + 1;
      uint64_t v176 = v586;
      if (v172 >= 2)
      {
        if (v175 >= 2) {
          goto LABEL_137;
        }
        goto LABEL_145;
      }
      if (v175 >= 2)
      {
LABEL_140:
        (*(void (**)(char *, uint64_t))(v583 + 8))(v162, v578);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v585 + 8))(((unint64_t)v170 + v566) & v567, v568);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unsigned int v178 = v162;
        unint64_t v163 = __srca;
        goto LABEL_141;
      }
LABEL_147:
      unint64_t v163 = __srca;
      (*(void (**)(char *, void *, uint64_t))(v583 + 40))(v162, __srca, v578);
      *unsigned int v170 = *v173;
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 40))(((unint64_t)v170 + v566) & v567, ((unint64_t)v173 + v566) & v567, v568);
      unint64_t v182 = (void *)((v545 + (((unint64_t)v170 + v566) & v567)) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v183 = v545 + (((unint64_t)v173 + v566) & v567);
      uint64_t v176 = v586;
      unint64_t v184 = (v183 & 0xFFFFFFFFFFFFFFF8) + 15;
      *unint64_t v182 = *(void *)(v183 & 0xFFFFFFFFFFFFFFF8);
      swift_bridgeObjectRelease();
      uint64_t v185 = (void *)(((unint64_t)v182 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v185 = *(void *)(v184 & 0xFFFFFFFFFFFFFFF8);
      v185[1] = *(void *)((v184 & 0xFFFFFFFFFFFFFFF8) + 8);
      swift_bridgeObjectRelease();
      goto LABEL_148;
    }
    unint64_t v537 = v155;
    unint64_t v164 = v126;
    uint64_t v165 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v585 + 48);
    uint64_t v166 = v568;
    int v167 = v165((char *)(((unint64_t)v170 + v566) & v567), v530, v568);
    unint64_t v168 = (v566 + (((unint64_t)v163 + v579) & 0xFFFFFFFFFFFFFFF8)) & v567;
    uint64_t v169 = v530;
  }
  int v177 = v165((char *)v168, v169, v166);
  uint64_t v176 = v586;
  if (!v167)
  {
    unsigned int v170 = (uint64_t *)((unint64_t)&v162[v579] & 0xFFFFFFFFFFFFFFF8);
    if (v177)
    {
      unint64_t v126 = v164;
      unint64_t v155 = v537;
      goto LABEL_140;
    }
    unsigned int v173 = (uint64_t *)(((unint64_t)v163 + v579) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v126 = v164;
    unint64_t v155 = v537;
    goto LABEL_147;
  }
  unint64_t v126 = v164;
  unint64_t v155 = v537;
  if (!v177)
  {
    unsigned int v170 = (uint64_t *)((unint64_t)&v162[v579] & 0xFFFFFFFFFFFFFFF8);
    unsigned int v173 = (uint64_t *)(((unint64_t)v163 + v579) & 0xFFFFFFFFFFFFFFF8);
LABEL_145:
    (*(void (**)(char *, void *, uint64_t))(v583 + 32))(v162, v163, v578);
    *unsigned int v170 = *v173;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 32))(((unint64_t)v170 + v566) & v567, ((unint64_t)v173 + v566) & v567, v568);
    uint64_t v180 = (void *)((v545 + (((unint64_t)v170 + v566) & v567)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v181 = (void *)((v545 + (((unint64_t)v173 + v566) & v567)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v180 = *v181;
    *(_OWORD *)(((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v181 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v176 = v586;
LABEL_148:
    unint64_t v179 = v528 + 16;
    goto LABEL_149;
  }
LABEL_137:
  unsigned int v178 = v162;
LABEL_141:
  unint64_t v179 = v528 + 16;
  memcpy(v178, v163, v528 + 16);
LABEL_149:
  unint64_t v186 = (unsigned char *)(((unint64_t)v163 + v179) | 1);
  unint64_t v187 = (unsigned char *)(((unint64_t)v163 + v179) | 2);
  uint64_t v188 = (uint64_t)v163 + v179 + 10;
  uint64_t v190 = (uint64_t)v163 + v179 + 34;
  char v189 = *((unsigned char *)v163 + v179);
  unint64_t v191 = (unsigned char *)((unint64_t)&v162[v179] | 1);
  uint64_t v192 = (unsigned char *)((unint64_t)&v162[v179] | 2);
  uint64_t v193 = (uint64_t)&v162[v179 + 10];
  unint64_t v194 = &v162[v179];
  *unint64_t v194 = v189;
  *unint64_t v191 = *v186;
  *uint64_t v192 = *v187;
  unint64_t v195 = v193 & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v186) = *(unsigned char *)((v188 & 0xFFFFFFFFFFFFFFF8) + 16);
  uint64_t v196 = *(void **)(v193 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v197 = *(void **)((v193 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_OWORD *)unint64_t v195 = *(_OWORD *)(v188 & 0xFFFFFFFFFFFFFFF8);
  char v198 = *(unsigned char *)((v193 & 0xFFFFFFFFFFFFFFF8) + 16);
  *(unsigned char *)(v195 + 16) = (_BYTE)v186;
  sub_24D3E380C(v196, v197, v198);
  unint64_t v199 = (unint64_t)(v194 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v200 = v190 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v201 = *(void *)(v199 + 16);
  if (4 * ((v201 >> 60) & 3) && (((v201 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v201 >> 60) & 3))) != 0xF)
  {
LABEL_151:
    long long v202 = *(_OWORD *)v200;
    long long v203 = *(_OWORD *)(v200 + 16);
    long long v204 = *(_OWORD *)(v200 + 32);
    *(void *)(v199 + 48) = *(void *)(v200 + 48);
    *(_OWORD *)(v199 + 16) = v203;
    *(_OWORD *)(v199 + 32) = v204;
    *(_OWORD *)unint64_t v199 = v202;
    goto LABEL_162;
  }
  long long v205 = (uint64_t *)(v199 + 8);
  uint64_t v206 = *(void *)(v200 + 16) >> 60;
  if (4 * (v206 & 3) && ((v206 >> 2) & 0xFFFFFFF3 | (4 * (v206 & 3))) != 0xF)
  {
    if (v201 >> 60 != 15) {
      sub_24D400DCC(*v205, v201);
    }
    goto LABEL_151;
  }
  uint64_t v207 = (void *)(v200 + 8);
  *(void *)unint64_t v199 = *(void *)v200;
  if (v201 >> 60 != 15)
  {
    unint64_t v208 = *(void *)(v200 + 16);
    if (v208 >> 60 != 15)
    {
      uint64_t v209 = *(void *)(v199 + 8);
      *(void *)(v199 + 8) = *v207;
      *(void *)(v199 + 16) = v208;
      sub_24D400DCC(v209, v201);
      goto LABEL_161;
    }
    sub_24D4B12A0(v199 + 8);
  }
  *(_OWORD *)long long v205 = *(_OWORD *)v207;
LABEL_161:
  long long v210 = *(_OWORD *)(v200 + 24);
  *(unsigned char *)(v199 + 40) = *(unsigned char *)(v200 + 40);
  *(_OWORD *)(v199 + 24) = v210;
  *(void *)(v199 + 48) = *(void *)(v200 + 48);
LABEL_162:
  long long v211 = (void **)((v199 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v212 = (void **)((v200 + 63) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v213 = *v211;
  void *v211 = *v212;

  *(void *)(((unint64_t)v211 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v214 = (const void *)(((unint64_t)v156 + v573) & v588);
  __srcb = (unsigned char *)(((unint64_t)v155 + v573) & v588);
  int v215 = v551();
  int v216 = ((uint64_t (*)(const void *, uint64_t, uint64_t))v551)(v214, 1, v176);
  if (v215)
  {
    if (v216)
    {
      uint64_t v217 = (void *)(((unint64_t)v155 + v573) & v588);
LABEL_167:
      memcpy(v217, v214, v553);
      goto LABEL_170;
    }
    uint64_t v217 = (void *)(((unint64_t)v155 + v573) & v588);
    (*(void (**)(unsigned char *, const void *, uint64_t))(v569 + 32))(__srcb, v214, v176);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v569 + 56))(__srcb, 0, 1, v176);
  }
  else
  {
    if (v216)
    {
      uint64_t v217 = (void *)(((unint64_t)v155 + v573) & v588);
      (*(void (**)(unsigned char *, uint64_t))(v569 + 8))(__srcb, v176);
      goto LABEL_167;
    }
    uint64_t v217 = (void *)(((unint64_t)v155 + v573) & v588);
    (*(void (**)(unsigned char *, const void *, uint64_t))(v569 + 40))(__srcb, v214, v176);
  }
LABEL_170:
  long long v218 = (void *)(((unint64_t)v217 + v555) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v538 = ((unint64_t)v156 + v573) & v588;
  unint64_t v219 = (void *)(((unint64_t)v214 + v555) & 0xFFFFFFFFFFFFFFF8);
  *long long v218 = *v219;
  unint64_t v220 = ((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v221 = ((unint64_t)v219 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v220 = *(void *)v221;
  *(unsigned char *)(v220 + 8) = *(unsigned char *)(v221 + 8);
  unint64_t v222 = (void *)((v575 + v220) & v127);
  unint64_t v223 = (void *)((v575 + v221) & v127);
  uint64_t v541 = v127;
  if (v550 == v570)
  {
    unint64_t v224 = *(uint64_t (**)(void *, void, uint64_t))(v591 + 48);
    int v225 = v224(v222, v550, v577);
    size_t v226 = v527 + 16;
    int v227 = v224(v223, v550, v577);
    if (v225) {
      goto LABEL_172;
    }
    goto LABEL_183;
  }
  long long v230 = (uint64_t *)(((unint64_t)v222 + v594) & 0xFFFFFFFFFFFFFFF8);
  if (v542 <= 0x7FFFFFFE)
  {
    uint64_t v231 = *v230;
    if ((unint64_t)*v230 >= 0xFFFFFFFF) {
      LODWORD(v231) = -1;
    }
    unsigned int v232 = v231 + 1;
    unint64_t v233 = (uint64_t *)(((unint64_t)v223 + v594) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v234 = *v233;
    if ((unint64_t)*v233 >= 0xFFFFFFFF) {
      LODWORD(v234) = -1;
    }
    unsigned int v235 = v234 + 1;
    if (v232 >= 2)
    {
      size_t v226 = v527 + 16;
      if (v235 >= 2) {
        goto LABEL_173;
      }
      goto LABEL_188;
    }
    if (v235 >= 2)
    {
LABEL_184:
      (*(void (**)(void *, uint64_t))(v591 + 8))(v222, v577);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v584 + 8))(((unint64_t)v230 + v563) & v564, v565);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v228 = v222;
      long long v229 = v223;
      size_t v226 = v527 + 16;
      goto LABEL_185;
    }
LABEL_190:
    (*(void (**)(void *, void *, uint64_t))(v591 + 40))(v222, v223, v577);
    *long long v230 = *v233;
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v584 + 40))(((unint64_t)v230 + v563) & v564, ((unint64_t)v233 + v563) & v564, v565);
    id v239 = (void *)((v546 + (((unint64_t)v230 + v563) & v564)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v240 = (v546 + (((unint64_t)v233 + v563) & v564)) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v241 = *(void *)v240;
    v240 += 15;
    *id v239 = v241;
    swift_bridgeObjectRelease();
    unsigned int v242 = (void *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
    void *v242 = *(void *)(v240 & 0xFFFFFFFFFFFFFFF8);
    v242[1] = *(void *)((v240 & 0xFFFFFFFFFFFFFFF8) + 8);
    swift_bridgeObjectRelease();
    goto LABEL_191;
  }
  unsigned int v236 = *(uint64_t (**)(unint64_t, void, uint64_t))(v584 + 48);
  int v526 = v236(((unint64_t)v230 + v563) & v564, v529, v565);
  size_t v226 = v527 + 16;
  int v227 = v236((v563 + (((unint64_t)v223 + v594) & 0xFFFFFFFFFFFFFFF8)) & v564, v529, v565);
  if (!v526)
  {
LABEL_183:
    long long v230 = (uint64_t *)(((unint64_t)v222 + v594) & 0xFFFFFFFFFFFFFFF8);
    if (v227) {
      goto LABEL_184;
    }
    unint64_t v233 = (uint64_t *)(((unint64_t)v223 + v594) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_190;
  }
LABEL_172:
  if (!v227)
  {
    long long v230 = (uint64_t *)(((unint64_t)v222 + v594) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v233 = (uint64_t *)(((unint64_t)v223 + v594) & 0xFFFFFFFFFFFFFFF8);
LABEL_188:
    (*(void (**)(void *, void *, uint64_t))(v591 + 32))(v222, v223, v577);
    *long long v230 = *v233;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v584 + 32))(((unint64_t)v230 + v563) & v564, ((unint64_t)v233 + v563) & v564, v565);
    unint64_t v237 = (void *)((v546 + (((unint64_t)v230 + v563) & v564)) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v238 = (void *)((v546 + (((unint64_t)v233 + v563) & v564)) & 0xFFFFFFFFFFFFFFF8);
    void *v237 = *v238;
    *(_OWORD *)(((unint64_t)v237 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_191:
    size_t v226 = v527 + 16;
    goto LABEL_192;
  }
LABEL_173:
  long long v228 = v222;
  long long v229 = v223;
LABEL_185:
  memcpy(v228, v229, v226);
LABEL_192:
  *((unsigned char *)v222 + v226) = *((unsigned char *)v223 + v226);
  *(unsigned char *)(((unint64_t)v222 + v226) | 1) = *(unsigned char *)(((unint64_t)v223 + v226) | 1);
  *(unsigned char *)(((unint64_t)v222 + v226) | 2) = *(unsigned char *)(((unint64_t)v223 + v226) | 2);
  unint64_t v243 = ((unint64_t)v222 + v226 + 10) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v244 = ((unint64_t)v223 + v226 + 10) & 0xFFFFFFFFFFFFFFF8;
  char v245 = *(unsigned char *)(v244 + 16);
  uint64_t v246 = *(void **)v243;
  uint64_t v247 = *(void **)(v243 + 8);
  *(_OWORD *)unint64_t v243 = *(_OWORD *)v244;
  char v248 = *(unsigned char *)(v243 + 16);
  *(unsigned char *)(v243 + 16) = v245;
  sub_24D3E380C(v246, v247, v248);
  unint64_t v249 = ((unint64_t)v222 + v226 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v250 = ((unint64_t)v223 + v226 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v251 = *(void *)(v249 + 16);
  if (4 * ((v251 >> 60) & 3) && (((v251 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v251 >> 60) & 3))) != 0xF)
  {
LABEL_194:
    long long v252 = *(_OWORD *)v250;
    long long v253 = *(_OWORD *)(v250 + 16);
    long long v254 = *(_OWORD *)(v250 + 32);
    *(void *)(v249 + 48) = *(void *)(v250 + 48);
    *(_OWORD *)(v249 + 16) = v253;
    *(_OWORD *)(v249 + 32) = v254;
    *(_OWORD *)unint64_t v249 = v252;
    uint64_t v255 = v532;
    unint64_t v256 = v535;
    unint64_t v257 = ((((((((v575 + ((((v553 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v127) + v590 + 34) & 0xFFFFFFFFFFFFFFF8)
             + 63) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 8;
    goto LABEL_205;
  }
  int v258 = (uint64_t *)(v249 + 8);
  uint64_t v259 = *(void *)(v250 + 16) >> 60;
  if (4 * (v259 & 3) && ((v259 >> 2) & 0xFFFFFFF3 | (4 * (v259 & 3))) != 0xF)
  {
    if (v251 >> 60 != 15) {
      sub_24D400DCC(*v258, v251);
    }
    goto LABEL_194;
  }
  uint64_t v260 = (void *)(v250 + 8);
  *(void *)unint64_t v249 = *(void *)v250;
  if (v251 >> 60 != 15)
  {
    unint64_t v261 = *(void *)(v250 + 16);
    if (v261 >> 60 != 15)
    {
      uint64_t v262 = *(void *)(v249 + 8);
      *(void *)(v249 + 8) = *v260;
      *(void *)(v249 + 16) = v261;
      sub_24D400DCC(v262, v251);
      goto LABEL_204;
    }
    sub_24D4B12A0(v249 + 8);
  }
  *(_OWORD *)int v258 = *(_OWORD *)v260;
LABEL_204:
  uint64_t v255 = v532;
  unint64_t v256 = v535;
  unint64_t v257 = ((((((((v575 + ((((v553 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v127) + v590 + 34) & 0xFFFFFFFFFFFFFFF8)
           + 63) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 8;
  long long v263 = *(_OWORD *)(v250 + 24);
  *(unsigned char *)(v249 + 40) = *(unsigned char *)(v250 + 40);
  *(_OWORD *)(v249 + 24) = v263;
  *(void *)(v249 + 48) = *(void *)(v250 + 48);
LABEL_205:
  size_t v264 = (void **)((v249 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v265 = (void **)((v250 + 63) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v266 = *v264;
  *size_t v264 = *v265;

  *(void *)(((unint64_t)v264 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8);
  __srcb[v257] = *(unsigned char *)(v538 + v257);
  unint64_t v267 = (unint64_t)&__srcb[v257] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v268 = (v538 + v257) & 0xFFFFFFFFFFFFFFF8;
  *(void *)(v267 + 8) = *(void *)(v268 + 8);
  swift_bridgeObjectRelease();
  size_t v269 = (void *)((v267 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v270 = (void *)((v268 + 23) & 0xFFFFFFFFFFFFFFF8);
  *size_t v269 = *v270;
  v269[1] = v270[1];
  unint64_t v271 = ((unint64_t)v269 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v272 = ((unint64_t)v270 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v271 = *(void *)v272;
  *(unsigned char *)(v271 + 8) = *(unsigned char *)(v272 + 8);
  *(void *)(((unint64_t)v269 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v270 + 39) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v273 = (void *)(((unint64_t)v155 + v256 + 15) & 0xFFFFFFFFFFFFFFF8);
  size_t v274 = (void *)(((unint64_t)__dsta + v256 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v273 = *v274;
  v273[1] = v274[1];
  unint64_t v275 = ((unint64_t)v273 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v276 = ((unint64_t)v274 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v277 = *(void *)v276;
  *(unsigned char *)(v275 + 8) = *(unsigned char *)(v276 + 8);
  *(void *)unint64_t v275 = v277;
  uint64_t v278 = (void *)((v255 + v275) & v126);
  uint64_t v279 = (void *)((v255 + v276) & v126);
  uint64_t v281 = v543;
  uint64_t v280 = v544;
  if (v544) {
    unsigned int v282 = v544 - 1;
  }
  else {
    unsigned int v282 = 0;
  }
  int v283 = v576 - 1;
  if (v282 <= v576 - 1) {
    unsigned int v284 = v576 - 1;
  }
  else {
    unsigned int v284 = v282;
  }
  if (v284 <= 0x7FFFFFFE) {
    unsigned int v285 = 2147483646;
  }
  else {
    unsigned int v285 = v284;
  }
  if (v543) {
    unsigned int v286 = v543 - 1;
  }
  else {
    unsigned int v286 = 0;
  }
  int v287 = v570 - 1;
  if (v286 <= v570 - 1) {
    unsigned int v288 = v570 - 1;
  }
  else {
    unsigned int v288 = v286;
  }
  if (v288 <= 0x7FFFFFFE) {
    unsigned int v289 = 2147483646;
  }
  else {
    unsigned int v289 = v288;
  }
  if (v289 <= v285) {
    unsigned int v290 = v285;
  }
  else {
    unsigned int v290 = v289;
  }
  if (v290 <= 0x7FFFFFFF) {
    int v291 = 0x7FFFFFFF;
  }
  else {
    int v291 = v290;
  }
  __srcc = v279;
  __dstb = v278;
  if (v285 == v291)
  {
    if (v282 == v285)
    {
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      uint64_t v294 = v278;
      if (v544 >= 2)
      {
        unsigned int v295 = ((uint64_t (*)(void *))v556)(v278);
        uint64_t v279 = __srcc;
        uint64_t v280 = v544;
        if (v295 >= 2) {
          goto LABEL_272;
        }
      }
      goto LABEL_269;
    }
    uint64_t v294 = v278;
    unint64_t v301 = (v582 + (((((unint64_t)v278 + v562) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v581;
    if (v283 == v285)
    {
      if (v554 == v576)
      {
        unsigned int v302 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v583 + 48))(v301, v554, v578);
        uint64_t v279 = __srcc;
        uint64_t v280 = v544;
        uint64_t v292 = v569;
        uint64_t v293 = AssociatedTypeWitness;
        goto LABEL_268;
      }
      char v306 = (unint64_t *)((v579 + v301) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      if (v540 > 0x7FFFFFFE)
      {
        unsigned int v302 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v585 + 48))(((unint64_t)v306 + v566) & v567, v530, v568);
        uint64_t v279 = __srcc;
        uint64_t v280 = v544;
      }
      else
      {
        unint64_t v307 = *v306;
        if (v307 >= 0xFFFFFFFF) {
          unsigned int v302 = -1;
        }
        else {
          unsigned int v302 = v307;
        }
        if (v302 + 1 < 2)
        {
LABEL_269:
          if (v282 == v285)
          {
            uint64_t v297 = v586;
            size_t v298 = v528 + 16;
            uint64_t v299 = v579;
            if (v280 < 2) {
              goto LABEL_345;
            }
            unsigned int v311 = ((uint64_t (*)(void *, uint64_t, uint64_t))v556)(__srcc, v280, v293);
LABEL_304:
            if (v311 >= 2) {
              goto LABEL_348;
            }
LABEL_345:
            int v331 = ((uint64_t (*)(void *, uint64_t, uint64_t))v556)(v294, 1, v293);
            int v332 = ((uint64_t (*)(void *, uint64_t, uint64_t))v556)(__srcc, 1, v293);
            if (v331)
            {
              if (v332)
              {
                long long v333 = __dstb;
LABEL_355:
                long long v335 = __srcc;
                memcpy(v333, __srcc, __n);
                goto LABEL_392;
              }
              long long v333 = __dstb;
              (*(void (**)(void *, void *, uint64_t))(v539 + 32))(__dstb, __srcc, v293);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v539 + 56))(__dstb, 0, 1, v293);
              long long v335 = __srcc;
            }
            else
            {
              if (v332)
              {
                long long v333 = __dstb;
                (*(void (**)(void *, uint64_t))(v539 + 8))(__dstb, v293);
                goto LABEL_355;
              }
              long long v333 = __dstb;
              (*(void (**)(void *, void *, uint64_t))(v539 + 40))(__dstb, __srcc, v293);
              long long v335 = __srcc;
            }
LABEL_392:
            unint64_t v353 = (void *)(((unint64_t)v333 + v562) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v354 = (void *)(((unint64_t)v335 + v562) & 0xFFFFFFFFFFFFFFF8);
            *unint64_t v353 = *v354;
            unint64_t v355 = ((unint64_t)v353 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v356 = ((unint64_t)v354 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v355 = *(void *)v356;
            *(unsigned char *)(v355 + 8) = *(unsigned char *)(v356 + 8);
            unsigned int v357 = (char *)((v582 + v355) & v581);
            unint64_t v358 = (char *)((v582 + v356) & v581);
            if (v554 == v576)
            {
              unint64_t v359 = *(uint64_t (**)(char *, void, uint64_t))(v583 + 48);
              int v360 = v359(v357, v554, v578);
              int v361 = v359(v358, v554, v578);
              uint64_t v362 = v569;
              if (v360) {
                goto LABEL_394;
              }
            }
            else
            {
              uint64_t v363 = (uint64_t *)((unint64_t)&v357[v299] & 0xFFFFFFFFFFFFFFF8);
              if (v540 <= 0x7FFFFFFE)
              {
                uint64_t v365 = *v363;
                if ((unint64_t)*v363 >= 0xFFFFFFFF) {
                  LODWORD(v365) = -1;
                }
                unsigned int v366 = v365 + 1;
                uint64_t v364 = (uint64_t *)((unint64_t)&v358[v299] & 0xFFFFFFFFFFFFFFF8);
                uint64_t v367 = *v364;
                if ((unint64_t)*v364 >= 0xFFFFFFFF) {
                  LODWORD(v367) = -1;
                }
                unsigned int v368 = v367 + 1;
                uint64_t v362 = v569;
                if (v366 >= 2)
                {
                  if (v368 < 2) {
                    goto LABEL_408;
                  }
                  goto LABEL_409;
                }
                if (v368 >= 2)
                {
LABEL_406:
                  (*(void (**)(char *, uint64_t))(v583 + 8))(v357, v578);
                  swift_bridgeObjectRelease();
                  (*(void (**)(unint64_t, uint64_t))(v585 + 8))(((unint64_t)v363 + v566) & v567, v568);
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_409;
                }
LABEL_411:
                (*(void (**)(char *, char *, uint64_t))(v583 + 40))(v357, v358, v578);
                uint64_t *v363 = *v364;
                swift_bridgeObjectRelease();
                unint64_t v375 = ((unint64_t)v363 + v566) & v567;
                unint64_t v376 = ((unint64_t)v364 + v566) & v567;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 40))(v375, v376, v568);
                uint64_t v377 = (void *)((v545 + v375) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v378 = (v545 + v376) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v379 = *(void *)v378;
                v378 += 15;
                *uint64_t v377 = v379;
                swift_bridgeObjectRelease();
                unint64_t v380 = (void *)(((unint64_t)v377 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v380 = *(void *)(v378 & 0xFFFFFFFFFFFFFFF8);
                v380[1] = *(void *)((v378 & 0xFFFFFFFFFFFFFFF8) + 8);
                swift_bridgeObjectRelease();
                goto LABEL_412;
              }
              unsigned int v369 = *(uint64_t (**)(unint64_t, void, uint64_t))(v585 + 48);
              int v370 = v369(((unint64_t)v363 + v566) & v567, v530, v568);
              int v361 = v369((v566 + ((unint64_t)&v358[v299] & 0xFFFFFFFFFFFFFFF8)) & v567, v530, v568);
              uint64_t v362 = v569;
              if (v370)
              {
LABEL_394:
                uint64_t v297 = v586;
                size_t v298 = v528 + 16;
                if (!v361)
                {
                  uint64_t v363 = (uint64_t *)((unint64_t)&v357[v579] & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v364 = (uint64_t *)((unint64_t)&v358[v579] & 0xFFFFFFFFFFFFFFF8);
LABEL_408:
                  (*(void (**)(char *, char *, uint64_t))(v583 + 32))(v357, v358, v578);
                  uint64_t *v363 = *v364;
                  unint64_t v371 = ((unint64_t)v363 + v566) & v567;
                  unint64_t v372 = ((unint64_t)v364 + v566) & v567;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 32))(v371, v372, v568);
                  unsigned int v373 = (void *)((v545 + v371) & 0xFFFFFFFFFFFFFFF8);
                  int v374 = (void *)((v545 + v372) & 0xFFFFFFFFFFFFFFF8);
                  *unsigned int v373 = *v374;
                  *(_OWORD *)(((unint64_t)v373 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v374
                                                                                                 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_412:
                  unint64_t v381 = (unint64_t)&v357[v298];
                  *(unsigned char *)unint64_t v381 = v358[v298];
                  *(unsigned char *)(v381 | 1) = *(unsigned char *)((unint64_t)&v358[v298] | 1);
                  *(unsigned char *)(v381 | 2) = *(unsigned char *)((unint64_t)&v358[v298] | 2);
                  unint64_t v382 = (unint64_t)&v357[v298 + 10] & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v383 = (unint64_t)&v358[v298 + 10] & 0xFFFFFFFFFFFFFFF8;
                  char v384 = *(unsigned char *)(v383 + 16);
                  unint64_t v385 = *(void **)v382;
                  unsigned int v386 = *(void **)(v382 + 8);
                  *(_OWORD *)unint64_t v382 = *(_OWORD *)v383;
                  char v387 = *(unsigned char *)(v382 + 16);
                  *(unsigned char *)(v382 + 16) = v384;
                  sub_24D3E380C(v385, v386, v387);
                  unint64_t v388 = (unint64_t)&v357[v298 + 34] & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v389 = (unint64_t)&v358[v298 + 34] & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v390 = *(void *)(v388 + 16);
                  if (4 * ((v390 >> 60) & 3)
                    && (((v390 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v390 >> 60) & 3))) != 0xF)
                  {
                    long long v391 = *(_OWORD *)v389;
                    long long v392 = *(_OWORD *)(v389 + 16);
                    long long v393 = *(_OWORD *)(v389 + 32);
                    *(void *)(v388 + 48) = *(void *)(v389 + 48);
                    *(_OWORD *)(v388 + 16) = v392;
                    *(_OWORD *)(v388 + 32) = v393;
                    *(_OWORD *)unint64_t v388 = v391;
                    uint64_t v394 = v541;
                    goto LABEL_426;
                  }
                  unsigned int v395 = (uint64_t *)(v388 + 8);
                  uint64_t v396 = *(void *)(v389 + 16) >> 60;
                  uint64_t v394 = v541;
                  if (4 * (v396 & 3) && ((v396 >> 2) & 0xFFFFFFF3 | (4 * (v396 & 3))) != 0xF)
                  {
                    if (v390 >> 60 != 15) {
                      sub_24D400DCC(*v395, v390);
                    }
                    long long v397 = *(_OWORD *)v389;
                    long long v398 = *(_OWORD *)(v389 + 16);
                    long long v399 = *(_OWORD *)(v389 + 32);
                    *(void *)(v388 + 48) = *(void *)(v389 + 48);
                    *(_OWORD *)(v388 + 16) = v398;
                    *(_OWORD *)(v388 + 32) = v399;
                    *(_OWORD *)unint64_t v388 = v397;
LABEL_426:
                    uint64_t v404 = (void **)((v388 + 63) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v405 = (void **)((v389 + 63) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v406 = *v404;
                    *uint64_t v404 = *v405;

                    *(void *)(((unint64_t)v404 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v405 + 15) & 0xFFFFFFFFFFFFFFF8);
                    unint64_t v407 = (unsigned char *)(((unint64_t)__dstb + v573) & v588);
                    unint64_t v408 = (unsigned char *)(((unint64_t)__srcc + v573) & v588);
                    int v409 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v551)(v407, 1, v297);
                    int v410 = ((uint64_t (*)(unsigned char *, uint64_t, uint64_t))v551)(v408, 1, v297);
                    if (v409)
                    {
                      if (!v410)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v362 + 32))(v407, v408, v297);
                        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v362 + 56))(v407, 0, 1, v297);
                        goto LABEL_432;
                      }
                    }
                    else
                    {
                      if (!v410)
                      {
                        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v362 + 40))(v407, v408, v297);
LABEL_432:
                        unint64_t v411 = (void *)((unint64_t)&v407[v555] & 0xFFFFFFFFFFFFFFF8);
                        unint64_t v412 = (void *)((unint64_t)&v408[v555] & 0xFFFFFFFFFFFFFFF8);
                        void *v411 = *v412;
                        unint64_t v413 = ((unint64_t)v411 + 15) & 0xFFFFFFFFFFFFFFF8;
                        unint64_t v414 = ((unint64_t)v412 + 15) & 0xFFFFFFFFFFFFFFF8;
                        *(void *)unint64_t v413 = *(void *)v414;
                        *(unsigned char *)(v413 + 8) = *(unsigned char *)(v414 + 8);
                        v415 = (char *)((v575 + v413) & v394);
                        uint64_t v416 = (const void *)((v575 + v414) & v394);
                        if (v550 == v570)
                        {
                          unint64_t v417 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v591 + 48);
                          uint64_t v418 = v577;
                          int v419 = v417(v415, v550, v577);
                          unint64_t v420 = (unint64_t)v416;
                          uint64_t v421 = v550;
                        }
                        else
                        {
                          uint64_t v422 = (uint64_t *)((unint64_t)&v415[v594] & 0xFFFFFFFFFFFFFFF8);
                          if (v542 <= 0x7FFFFFFE)
                          {
                            uint64_t v423 = *v422;
                            if ((unint64_t)*v422 >= 0xFFFFFFFF) {
                              LODWORD(v423) = -1;
                            }
                            unsigned int v424 = v423 + 1;
                            unint64_t v425 = (uint64_t *)(((unint64_t)v416 + v594) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v426 = *v425;
                            if ((unint64_t)*v425 >= 0xFFFFFFFF) {
                              LODWORD(v426) = -1;
                            }
                            unsigned int v427 = v426 + 1;
                            unint64_t v428 = v561;
                            uint64_t v347 = v531;
                            if (v424 >= 2)
                            {
                              if (v427 < 2) {
                                goto LABEL_450;
                              }
                              goto LABEL_451;
                            }
                            if (v427 >= 2)
                            {
LABEL_447:
                              (*(void (**)(char *, uint64_t))(v591 + 8))(v415, v577);
                              swift_bridgeObjectRelease();
                              (*(void (**)(unint64_t, uint64_t))(v584 + 8))(((unint64_t)v422 + v563) & v564, v565);
                              swift_bridgeObjectRelease();
                              swift_bridgeObjectRelease();
                              goto LABEL_451;
                            }
LABEL_453:
                            (*(void (**)(char *, const void *, uint64_t))(v591 + 40))(v415, v416, v577);
                            *uint64_t v422 = *v425;
                            swift_bridgeObjectRelease();
                            unint64_t v435 = ((unint64_t)v422 + v563) & v564;
                            unint64_t v436 = ((unint64_t)v425 + v563) & v564;
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v584 + 40))(v435, v436, v565);
                            v437 = (void *)((v546 + v435) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v438 = (v546 + v436) & 0xFFFFFFFFFFFFFFF8;
                            uint64_t v439 = *(void *)v438;
                            v438 += 15;
                            void *v437 = v439;
                            swift_bridgeObjectRelease();
                            unint64_t v440 = (void *)(((unint64_t)v437 + 15) & 0xFFFFFFFFFFFFFFF8);
                            *unint64_t v440 = *(void *)(v438 & 0xFFFFFFFFFFFFFFF8);
                            v440[1] = *(void *)((v438 & 0xFFFFFFFFFFFFFFF8) + 8);
                            swift_bridgeObjectRelease();
                            goto LABEL_454;
                          }
                          uint64_t v418 = v565;
                          unint64_t v417 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v584 + 48);
                          int v419 = v417((char *)(((unint64_t)v422 + v563) & v564), v529, v565);
                          unint64_t v420 = (v563 + (((unint64_t)v416 + v594) & 0xFFFFFFFFFFFFFFF8)) & v564;
                          uint64_t v421 = v529;
                        }
                        int v429 = v417((char *)v420, v421, v418);
                        if (v419)
                        {
                          unint64_t v428 = v561;
                          uint64_t v347 = v531;
                          if (!v429)
                          {
                            uint64_t v422 = (uint64_t *)((unint64_t)&v415[v594] & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v425 = (uint64_t *)(((unint64_t)v416 + v594) & 0xFFFFFFFFFFFFFFF8);
LABEL_450:
                            (*(void (**)(char *, const void *, uint64_t))(v591 + 32))(v415, v416, v577);
                            *uint64_t v422 = *v425;
                            unint64_t v430 = ((unint64_t)v422 + v563) & v564;
                            unint64_t v431 = ((unint64_t)v425 + v563) & v564;
                            (*(void (**)(unint64_t, unint64_t, uint64_t))(v584 + 32))(v430, v431, v565);
                            v432 = (void *)((v546 + v430) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v433 = (void *)((v546 + v431) & 0xFFFFFFFFFFFFFFF8);
                            void *v432 = *v433;
                            *(_OWORD *)(((unint64_t)v432 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_454:
                            unint64_t v434 = v527 + 16;
                            goto LABEL_455;
                          }
LABEL_451:
                          unint64_t v434 = v527 + 16;
                          memcpy(v415, v416, v590);
LABEL_455:
                          unint64_t v441 = (unint64_t)&v415[v434];
                          uint64_t v442 = (unsigned char *)(((unint64_t)v416 + v434) | 1);
                          char v443 = (unsigned char *)(((unint64_t)v416 + v434) | 2);
                          uint64_t v444 = (uint64_t)v416 + v434 + 10;
                          uint64_t v445 = (uint64_t)v416 + v434 + 34;
                          *(unsigned char *)unint64_t v441 = *((unsigned char *)v416 + v434);
                          unint64_t v446 = v441 + 34;
                          *(unsigned char *)(v441 | 1) = *v442;
                          *(unsigned char *)(v441 | 2) = *v443;
                          unint64_t v447 = (v441 + 10) & 0xFFFFFFFFFFFFFFF8;
                          LOBYTE(v442) = *(unsigned char *)((v444 & 0xFFFFFFFFFFFFFFF8) + 16);
                          long long v448 = *(void **)v447;
                          long long v449 = *(void **)(v447 + 8);
                          *(_OWORD *)unint64_t v447 = *(_OWORD *)(v444 & 0xFFFFFFFFFFFFFFF8);
                          char v450 = *(unsigned char *)(v447 + 16);
                          *(unsigned char *)(v447 + 16) = (_BYTE)v442;
                          sub_24D3E380C(v448, v449, v450);
                          unint64_t v451 = v446 & 0xFFFFFFFFFFFFFFF8;
                          unint64_t v452 = v445 & 0xFFFFFFFFFFFFFFF8;
                          unint64_t v453 = *(void *)(v451 + 16);
                          if (4 * ((v453 >> 60) & 3)
                            && (((v453 >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((v453 >> 60) & 3))) != 0xF)
                          {
LABEL_461:
                            long long v456 = *(_OWORD *)v452;
                            long long v457 = *(_OWORD *)(v452 + 16);
                            long long v458 = *(_OWORD *)(v452 + 32);
                            *(void *)(v451 + 48) = *(void *)(v452 + 48);
                            *(_OWORD *)(v451 + 16) = v457;
                            *(_OWORD *)(v451 + 32) = v458;
                            *(_OWORD *)unint64_t v451 = v456;
LABEL_468:
                            unint64_t v463 = (void **)((v451 + 63) & 0xFFFFFFFFFFFFFFF8);
                            id v464 = (void **)((v452 + 63) & 0xFFFFFFFFFFFFFFF8);
                            uint64_t v465 = *v463;
                            *unint64_t v463 = *v464;

                            *(void *)(((unint64_t)v463 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v464 + 15) & 0xFFFFFFFFFFFFFFF8);
                            v407[v428] = v408[v428];
                            unint64_t v466 = (unint64_t)&v407[v428] & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v467 = (unint64_t)&v408[v428] & 0xFFFFFFFFFFFFFFF8;
                            *(void *)(v466 + 8) = *(void *)(v467 + 8);
                            swift_bridgeObjectRelease();
                            uint64_t v468 = (void *)((v466 + 23) & 0xFFFFFFFFFFFFFFF8);
                            unint64_t v469 = (void *)((v467 + 23) & 0xFFFFFFFFFFFFFFF8);
                            *uint64_t v468 = *v469;
                            v468[1] = v469[1];
LABEL_503:
                            unint64_t v523 = ((unint64_t)v468 + 23) & 0xFFFFFFFFFFFFFFF8;
                            unint64_t v524 = ((unint64_t)v469 + 23) & 0xFFFFFFFFFFFFFFF8;
                            *(void *)unint64_t v523 = *(void *)v524;
                            *(unsigned char *)(v523 + 8) = *(unsigned char *)(v524 + 8);
                            *(void *)(((unint64_t)v468 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v469 + 39) & 0xFFFFFFFFFFFFFFF8);
                            return v347;
                          }
                          uint64_t v454 = (uint64_t *)(v451 + 8);
                          uint64_t v455 = *(void *)(v452 + 16) >> 60;
                          if (4 * (v455 & 3) && ((v455 >> 2) & 0xFFFFFFF3 | (4 * (v455 & 3))) != 0xF)
                          {
                            if (v453 >> 60 != 15) {
                              sub_24D400DCC(*v454, v453);
                            }
                            goto LABEL_461;
                          }
                          id v459 = (void *)(v452 + 8);
                          *(void *)unint64_t v451 = *(void *)v452;
                          if (v453 >> 60 != 15)
                          {
                            unint64_t v460 = *(void *)(v452 + 16);
                            if (v460 >> 60 != 15)
                            {
                              uint64_t v461 = *(void *)(v451 + 8);
                              *(void *)(v451 + 8) = *v459;
                              *(void *)(v451 + 16) = v460;
                              sub_24D400DCC(v461, v453);
                              goto LABEL_467;
                            }
                            sub_24D4B12A0(v451 + 8);
                          }
                          *(_OWORD *)uint64_t v454 = *(_OWORD *)v459;
LABEL_467:
                          long long v462 = *(_OWORD *)(v452 + 24);
                          *(unsigned char *)(v451 + 40) = *(unsigned char *)(v452 + 40);
                          *(_OWORD *)(v451 + 24) = v462;
                          *(void *)(v451 + 48) = *(void *)(v452 + 48);
                          goto LABEL_468;
                        }
                        uint64_t v422 = (uint64_t *)((unint64_t)&v415[v594] & 0xFFFFFFFFFFFFFFF8);
                        unint64_t v428 = v561;
                        uint64_t v347 = v531;
                        if (v429) {
                          goto LABEL_447;
                        }
                        unint64_t v425 = (uint64_t *)(((unint64_t)v416 + v594) & 0xFFFFFFFFFFFFFFF8);
                        goto LABEL_453;
                      }
                      (*(void (**)(unsigned char *, uint64_t))(v362 + 8))(v407, v297);
                    }
                    memcpy(v407, v408, v553);
                    goto LABEL_432;
                  }
                  unsigned int v400 = (void *)(v389 + 8);
                  *(void *)unint64_t v388 = *(void *)v389;
                  if (v390 >> 60 != 15)
                  {
                    unint64_t v401 = *(void *)(v389 + 16);
                    if (v401 >> 60 != 15)
                    {
                      uint64_t v402 = *(void *)(v388 + 8);
                      *(void *)(v388 + 8) = *v400;
                      *(void *)(v388 + 16) = v401;
                      sub_24D400DCC(v402, v390);
                      goto LABEL_425;
                    }
                    sub_24D4B12A0(v388 + 8);
                  }
                  *(_OWORD *)unsigned int v395 = *(_OWORD *)v400;
LABEL_425:
                  long long v403 = *(_OWORD *)(v389 + 24);
                  *(unsigned char *)(v388 + 40) = *(unsigned char *)(v389 + 40);
                  *(_OWORD *)(v388 + 24) = v403;
                  *(void *)(v388 + 48) = *(void *)(v389 + 48);
                  goto LABEL_426;
                }
LABEL_409:
                memcpy(v357, v358, v298);
                goto LABEL_412;
              }
            }
            uint64_t v363 = (uint64_t *)((unint64_t)&v357[v579] & 0xFFFFFFFFFFFFFFF8);
            uint64_t v297 = v586;
            size_t v298 = v528 + 16;
            if (v361) {
              goto LABEL_406;
            }
            uint64_t v364 = (uint64_t *)((unint64_t)&v358[v579] & 0xFFFFFFFFFFFFFFF8);
            goto LABEL_411;
          }
          unint64_t v313 = (v582 + (((((unint64_t)v279 + v562) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v581;
          if (v283 == v285)
          {
            uint64_t v297 = v586;
            size_t v298 = v528 + 16;
            uint64_t v299 = v579;
            if (v554 == v576)
            {
              unsigned int v314 = (*(uint64_t (**)(unint64_t))(v583 + 48))(v313);
              goto LABEL_344;
            }
            unint64_t v319 = (unint64_t *)((v579 + v313) & 0xFFFFFFFFFFFFFFF8);
            if (v540 > 0x7FFFFFFE)
            {
              unsigned int v314 = (*(uint64_t (**)(unint64_t))(v585 + 48))(((unint64_t)v319 + v566) & v567);
              goto LABEL_344;
            }
LABEL_331:
            unint64_t v328 = *v319;
            if (v328 >= 0xFFFFFFFF) {
              unsigned int v314 = -1;
            }
            else {
              unsigned int v314 = v328;
            }
            if (v314 + 1 < 2) {
              goto LABEL_345;
            }
            goto LABEL_344;
          }
          unint64_t v317 = *(void *)((((v528 + v313 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
          if (v317 >= 0xFFFFFFFF) {
            LODWORD(v317) = -1;
          }
          uint64_t v297 = v586;
          size_t v298 = v528 + 16;
          uint64_t v299 = v579;
          if ((v317 + 1) < 2) {
            goto LABEL_345;
          }
          goto LABEL_348;
        }
      }
LABEL_268:
      if (v302 >= 2)
      {
LABEL_272:
        if (v282 == v285)
        {
          uint64_t v297 = v586;
          size_t v298 = v528 + 16;
          uint64_t v299 = v579;
          if (v280 < 2) {
            goto LABEL_471;
          }
          unsigned int v312 = ((uint64_t (*)(void *, uint64_t, uint64_t))v556)(v279, v280, v293);
LABEL_310:
          uint64_t v279 = __srcc;
          if (v312 >= 2) {
            goto LABEL_473;
          }
          goto LABEL_471;
        }
        unint64_t v315 = (v582 + (((((unint64_t)v279 + v562) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v581;
        size_t v298 = v528 + 16;
        if (v283 != v285)
        {
          unint64_t v318 = *(void *)((((v528 + v315 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
          if (v318 >= 0xFFFFFFFF) {
            LODWORD(v318) = -1;
          }
          uint64_t v297 = v586;
          uint64_t v299 = v579;
          if ((v318 + 1) >= 2) {
            goto LABEL_473;
          }
          goto LABEL_471;
        }
        if (v554 == v576)
        {
          unsigned int v316 = (*(uint64_t (**)(unint64_t))(v583 + 48))(v315);
          uint64_t v279 = __srcc;
          uint64_t v297 = v586;
          uint64_t v299 = v579;
        }
        else
        {
          uint64_t v299 = v579;
          unint64_t v320 = (unint64_t *)((v579 + v315) & 0xFFFFFFFFFFFFFFF8);
          if (v540 > 0x7FFFFFFE)
          {
            unsigned int v316 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v585 + 48))(((unint64_t)v320 + v566) & v567, v530, v568);
            uint64_t v279 = __srcc;
            uint64_t v297 = v586;
          }
          else
          {
            unint64_t v321 = *v320;
            if (v321 >= 0xFFFFFFFF) {
              unsigned int v316 = -1;
            }
            else {
              unsigned int v316 = v321;
            }
            uint64_t v297 = v586;
            if (v316 + 1 < 2) {
              goto LABEL_471;
            }
          }
        }
        goto LABEL_470;
      }
      goto LABEL_269;
    }
    unint64_t v305 = *(void *)((((v528 + v301 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
    if (v305 >= 0xFFFFFFFF) {
      LODWORD(v305) = -1;
    }
    uint64_t v292 = v569;
    uint64_t v293 = AssociatedTypeWitness;
    if ((v305 + 1) >= 2) {
      goto LABEL_272;
    }
    goto LABEL_269;
  }
  unint64_t v296 = ((unint64_t)v278 + v573) & v588;
  if (v289 != v291)
  {
    uint64_t v297 = v586;
    size_t v298 = v528 + 16;
    uint64_t v299 = v579;
    if (*(void *)(((v296 + v561) & 0xFFFFFFFFFFFFFFF8) + 8) > 0xFFFFFFFEuLL) {
      goto LABEL_300;
    }
    goto LABEL_306;
  }
  if (v286 != v289)
  {
    unint64_t v303 = (v575 + ((((v555 + v296) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
    if (v287 != v289)
    {
      unint64_t v308 = *(void *)((((v527 + v303 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
      if (v308 >= 0xFFFFFFFF) {
        LODWORD(v308) = -1;
      }
      uint64_t v297 = v586;
      size_t v298 = v528 + 16;
      uint64_t v299 = v579;
      if ((v308 + 1) >= 2) {
        goto LABEL_306;
      }
      goto LABEL_300;
    }
    uint64_t v297 = v586;
    size_t v298 = v528 + 16;
    uint64_t v299 = v579;
    if (v550 == v570)
    {
      unsigned int v304 = (*(uint64_t (**)(unint64_t))(v591 + 48))(v303);
    }
    else
    {
      unint64_t v309 = (unint64_t *)((v594 + v303) & 0xFFFFFFFFFFFFFFF8);
      if (v542 <= 0x7FFFFFFE)
      {
        unint64_t v310 = *v309;
        if (v310 >= 0xFFFFFFFF) {
          unsigned int v304 = -1;
        }
        else {
          unsigned int v304 = v310;
        }
        if (v304 + 1 < 2) {
          goto LABEL_300;
        }
        goto LABEL_299;
      }
      unsigned int v304 = (*(uint64_t (**)(unint64_t))(v584 + 48))(((unint64_t)v309 + v563) & v564);
    }
    uint64_t v279 = __srcc;
    uint64_t v281 = v543;
LABEL_299:
    if (v304 < 2) {
      goto LABEL_300;
    }
LABEL_306:
    unint64_t v323 = ((unint64_t)v279 + v573) & v588;
    if (v289 != v291)
    {
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      uint64_t v294 = __dstb;
      if (*(void *)(((v323 + v561) & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL) {
        goto LABEL_473;
      }
      goto LABEL_471;
    }
    if (v286 == v289)
    {
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      uint64_t v294 = __dstb;
      if (v281 < 2) {
        goto LABEL_471;
      }
      unsigned int v312 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v551)(v323, v281, v297);
      goto LABEL_310;
    }
    unint64_t v325 = (v575 + ((((v555 + v323) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
    if (v287 != v289)
    {
      unint64_t v327 = *(void *)((((v527 + v325 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
      if (v327 >= 0xFFFFFFFF) {
        LODWORD(v327) = -1;
      }
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      uint64_t v294 = __dstb;
      if ((v327 + 1) >= 2) {
        goto LABEL_473;
      }
      goto LABEL_471;
    }
    if (v550 == v570)
    {
      unsigned int v316 = (*(uint64_t (**)(unint64_t))(v591 + 48))(v325);
      uint64_t v279 = __srcc;
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      uint64_t v294 = __dstb;
    }
    else
    {
      unint64_t v329 = (unint64_t *)((v594 + v325) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      uint64_t v294 = __dstb;
      if (v542 > 0x7FFFFFFE)
      {
        unsigned int v316 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v584 + 48))(((unint64_t)v329 + v563) & v564, v529, v565);
        uint64_t v279 = __srcc;
      }
      else
      {
        unint64_t v330 = *v329;
        if (v330 >= 0xFFFFFFFF) {
          unsigned int v316 = -1;
        }
        else {
          unsigned int v316 = v330;
        }
        if (v316 + 1 < 2) {
          goto LABEL_471;
        }
      }
    }
LABEL_470:
    if (v316 >= 2)
    {
LABEL_473:
      memcpy(v294, v279, v535 + 8);
      return v531;
    }
LABEL_471:
    unint64_t v470 = v279;
    if (((unsigned int (*)(void *, uint64_t, uint64_t))v556)(v279, 1, v293))
    {
      memcpy(v294, v470, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v539 + 32))(v294, v470, v293);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v539 + 56))(v294, 0, 1, v293);
    }
    uint64_t v471 = (void *)(((unint64_t)v294 + v562) & 0xFFFFFFFFFFFFFFF8);
    v472 = (void *)(((unint64_t)v470 + v562) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v471 = *v472;
    unint64_t v473 = ((unint64_t)v471 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v474 = ((unint64_t)v472 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v473 = *(void *)v474;
    *(unsigned char *)(v473 + 8) = *(unsigned char *)(v474 + 8);
    v475 = (unsigned char *)((v582 + v473) & v581);
    uint64_t v476 = (unsigned char *)((v582 + v474) & v581);
    if (v554 == v576)
    {
      if (!(*(unsigned int (**)(unsigned char *))(v583 + 48))(v476)) {
        goto LABEL_485;
      }
    }
    else
    {
      uint64_t v477 = (void *)((unint64_t)&v476[v299] & 0xFFFFFFFFFFFFFFF8);
      if (v540 > 0x7FFFFFFE)
      {
        if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v585 + 48))(((unint64_t)v477 + v566) & v567, v530, v568))
        {
LABEL_485:
          uint64_t v477 = (void *)((unint64_t)&v476[v579] & 0xFFFFFFFFFFFFFFF8);
LABEL_486:
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v583 + 32))(v475, v476, v578);
          unint64_t v479 = (void *)((unint64_t)&v475[v579] & 0xFFFFFFFFFFFFFFF8);
          void *v479 = *v477;
          unint64_t v480 = ((unint64_t)v479 + v566) & v567;
          unint64_t v481 = ((unint64_t)v477 + v566) & v567;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v585 + 32))(v480, v481, v568);
          char v482 = (void *)((v545 + v480) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v483 = (void *)((v545 + v481) & 0xFFFFFFFFFFFFFFF8);
          *char v482 = *v483;
          *(_OWORD *)(((unint64_t)v482 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v483 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_487:
          uint64_t v484 = (uint64_t)&v476[v298 + 10];
          v475[v298] = v476[v298];
          *(unsigned char *)((unint64_t)&v475[v298] | 1) = *(unsigned char *)((unint64_t)&v476[v298] | 1);
          *(unsigned char *)((unint64_t)&v475[v298] | 2) = *(unsigned char *)((unint64_t)&v476[v298] | 2);
          unint64_t v485 = (unint64_t)&v475[v298 + 10] & 0xFFFFFFFFFFFFFFF8;
          long long v486 = *(_OWORD *)(v484 & 0xFFFFFFFFFFFFFFF8);
          *(unsigned char *)(v485 + 16) = *(unsigned char *)((v484 & 0xFFFFFFFFFFFFFFF8) + 16);
          *(_OWORD *)unint64_t v485 = v486;
          unint64_t v487 = (unint64_t)&v475[v298 + 34] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v488 = (unint64_t)&v476[v298 + 34] & 0xFFFFFFFFFFFFFFF8;
          long long v489 = *(_OWORD *)v488;
          long long v490 = *(_OWORD *)(v488 + 16);
          long long v491 = *(_OWORD *)(v488 + 32);
          *(void *)(v487 + 48) = *(void *)(v488 + 48);
          *(_OWORD *)(v487 + 16) = v490;
          *(_OWORD *)(v487 + 32) = v491;
          *(_OWORD *)unint64_t v487 = v489;
          uint64_t v492 = (void *)((v487 + 63) & 0xFFFFFFFFFFFFFFF8);
          long long v493 = (void *)((v488 + 63) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v492 = *v493;
          *(void *)(((unint64_t)v492 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v493 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v494 = (void *)(((unint64_t)v294 + v573) & v588);
          uint64_t v495 = (const void *)(((unint64_t)__srcc + v573) & v588);
          if (((unsigned int (*)(const void *, uint64_t, uint64_t))v551)(v495, 1, v297))
          {
            memcpy(v494, v495, v553);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v292 + 32))(v494, v495, v297);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v292 + 56))(v494, 0, 1, v297);
          }
          uint64_t v496 = (void *)(((unint64_t)v494 + v555) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v497 = (void *)(((unint64_t)v495 + v555) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v496 = *v497;
          unint64_t v498 = ((unint64_t)v496 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v499 = ((unint64_t)v497 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v498 = *(void *)v499;
          *(unsigned char *)(v498 + 8) = *(unsigned char *)(v499 + 8);
          v500 = (void *)((v575 + v498) & v541);
          unint64_t v501 = (const void *)((v575 + v499) & v541);
          if (v550 == v570)
          {
            int v502 = (*(uint64_t (**)(const void *))(v591 + 48))(v501);
          }
          else
          {
            id v503 = (uint64_t *)(((unint64_t)v501 + v594) & 0xFFFFFFFFFFFFFFF8);
            if (v542 <= 0x7FFFFFFE)
            {
              uint64_t v504 = *v503;
              if ((unint64_t)*v503 >= 0xFFFFFFFF) {
                LODWORD(v504) = -1;
              }
              uint64_t v347 = v531;
              if ((v504 + 1) >= 2) {
                goto LABEL_499;
              }
              goto LABEL_501;
            }
            int v502 = (*(uint64_t (**)(unint64_t))(v584 + 48))(((unint64_t)v503 + v563) & v564);
          }
          uint64_t v347 = v531;
          if (v502)
          {
LABEL_499:
            unint64_t v505 = v527 + 16;
            memcpy(v500, v501, v590);
LABEL_502:
            uint64_t v511 = (uint64_t)v501 + v505 + 10;
            *((unsigned char *)v500 + v505) = *((unsigned char *)v501 + v505);
            *(unsigned char *)(((unint64_t)v500 + v505) | 1) = *(unsigned char *)(((unint64_t)v501 + v505) | 1);
            *(unsigned char *)(((unint64_t)v500 + v505) | 2) = *(unsigned char *)(((unint64_t)v501 + v505) | 2);
            unint64_t v512 = ((unint64_t)v500 + v505 + 10) & 0xFFFFFFFFFFFFFFF8;
            long long v513 = *(_OWORD *)(v511 & 0xFFFFFFFFFFFFFFF8);
            *(unsigned char *)(v512 + 16) = *(unsigned char *)((v511 & 0xFFFFFFFFFFFFFFF8) + 16);
            *(_OWORD *)unint64_t v512 = v513;
            unint64_t v514 = ((unint64_t)v500 + v505 + 34) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v515 = ((unint64_t)v501 + v505 + 34) & 0xFFFFFFFFFFFFFFF8;
            long long v516 = *(_OWORD *)v515;
            long long v517 = *(_OWORD *)(v515 + 16);
            long long v518 = *(_OWORD *)(v515 + 32);
            *(void *)(v514 + 48) = *(void *)(v515 + 48);
            *(_OWORD *)(v514 + 16) = v517;
            *(_OWORD *)(v514 + 32) = v518;
            *(_OWORD *)unint64_t v514 = v516;
            unsigned int v519 = (void *)((v514 + 63) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v520 = (void *)((v515 + 63) & 0xFFFFFFFFFFFFFFF8);
            *unsigned int v519 = *v520;
            *(void *)(((unint64_t)v519 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v520 + 15) & 0xFFFFFFFFFFFFFFF8);
            *((unsigned char *)v494 + v561) = *((unsigned char *)v495 + v561);
            unint64_t v521 = ((unint64_t)v494 + v561) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v522 = ((unint64_t)v495 + v561) & 0xFFFFFFFFFFFFFFF8;
            *(void *)(v521 + 8) = *(void *)(v522 + 8);
            uint64_t v468 = (void *)((v521 + 23) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v469 = (void *)((v522 + 23) & 0xFFFFFFFFFFFFFFF8);
            *(_OWORD *)uint64_t v468 = *(_OWORD *)v469;
            goto LABEL_503;
          }
          id v503 = (uint64_t *)(((unint64_t)v501 + v594) & 0xFFFFFFFFFFFFFFF8);
LABEL_501:
          (*(void (**)(void *, const void *, uint64_t))(v591 + 32))(v500, v501, v577);
          unint64_t v506 = (void *)(((unint64_t)v500 + v594) & 0xFFFFFFFFFFFFFFF8);
          void *v506 = *v503;
          unint64_t v507 = ((unint64_t)v506 + v563) & v564;
          unint64_t v508 = ((unint64_t)v503 + v563) & v564;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v584 + 32))(v507, v508, v565);
          unint64_t v509 = (void *)((v546 + v507) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v510 = (void *)((v546 + v508) & 0xFFFFFFFFFFFFFFF8);
          void *v509 = *v510;
          *(_OWORD *)(((unint64_t)v509 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v510 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v505 = v527 + 16;
          goto LABEL_502;
        }
      }
      else
      {
        uint64_t v478 = *v477;
        if (*v477 >= 0xFFFFFFFFuLL) {
          LODWORD(v478) = -1;
        }
        if ((v478 + 1) < 2) {
          goto LABEL_486;
        }
      }
    }
    memcpy(v475, v476, v298);
    goto LABEL_487;
  }
  uint64_t v297 = v586;
  size_t v298 = v528 + 16;
  uint64_t v299 = v579;
  if (v543 >= 2)
  {
    unsigned int v300 = ((uint64_t (*)(unint64_t, void, uint64_t))v551)(v296, v543, v586);
    uint64_t v279 = __srcc;
    uint64_t v281 = v543;
    if (v300 >= 2) {
      goto LABEL_306;
    }
  }
LABEL_300:
  unint64_t v322 = ((unint64_t)v279 + v573) & v588;
  if (v289 == v291)
  {
    if (v286 == v289)
    {
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      uint64_t v294 = __dstb;
      if (v281 < 2) {
        goto LABEL_345;
      }
      unsigned int v311 = ((uint64_t (*)(unint64_t, uint64_t, uint64_t))v551)(v322, v281, v297);
      goto LABEL_304;
    }
    unint64_t v324 = (v575 + ((((v555 + v322) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
    if (v287 == v289)
    {
      uint64_t v292 = v569;
      uint64_t v293 = AssociatedTypeWitness;
      uint64_t v294 = __dstb;
      if (v550 == v570)
      {
        unsigned int v314 = (*(uint64_t (**)(unint64_t))(v591 + 48))(v324);
      }
      else
      {
        unint64_t v319 = (unint64_t *)((v594 + v324) & 0xFFFFFFFFFFFFFFF8);
        if (v542 <= 0x7FFFFFFE) {
          goto LABEL_331;
        }
        unsigned int v314 = (*(uint64_t (**)(unint64_t))(v584 + 48))(((unint64_t)v319 + v563) & v564);
      }
LABEL_344:
      if (v314 >= 2) {
        goto LABEL_348;
      }
      goto LABEL_345;
    }
    unint64_t v326 = *(void *)((((v527 + v324 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
    if (v326 >= 0xFFFFFFFF) {
      LODWORD(v326) = -1;
    }
    uint64_t v292 = v569;
    uint64_t v293 = AssociatedTypeWitness;
    uint64_t v294 = __dstb;
    if ((v326 + 1) < 2) {
      goto LABEL_345;
    }
  }
  else
  {
    uint64_t v292 = v569;
    uint64_t v293 = AssociatedTypeWitness;
    uint64_t v294 = __dstb;
    if (*(void *)(((v322 + v561) & 0xFFFFFFFFFFFFFFF8) + 8) >= 0xFFFFFFFFuLL) {
      goto LABEL_345;
    }
  }
LABEL_348:
  if (!((unsigned int (*)(void *, uint64_t, uint64_t))v556)(v294, 1, v293)) {
    (*(void (**)(void *, uint64_t))(v539 + 8))(v294, v293);
  }
  unint64_t v334 = (v582 + (((((unint64_t)v294 + v562) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v581;
  if (v554 == v576)
  {
    if ((*(unsigned int (**)(unint64_t))(v583 + 48))((v582
                                                                       + (((((unint64_t)v294 + v562) & 0xFFFFFFFFFFFFFFF8)
                                                                         + 15) & 0xFFFFFFFFFFFFFFF8)) & v581))
      goto LABEL_365;
LABEL_363:
    uint64_t v336 = (uint64_t *)((v299 + v334) & 0xFFFFFFFFFFFFFFF8);
LABEL_364:
    (*(void (**)(unint64_t, uint64_t))(v583 + 8))(v334, v578);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v585 + 8))(((unint64_t)v336 + v566) & v567, v568);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_365;
  }
  uint64_t v336 = (uint64_t *)((v299 + v334) & 0xFFFFFFFFFFFFFFF8);
  if (v540 > 0x7FFFFFFE)
  {
    if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v585 + 48))(((unint64_t)v336 + v566) & v567, v530, v568))
    {
      goto LABEL_365;
    }
    goto LABEL_363;
  }
  uint64_t v337 = *v336;
  if ((unint64_t)*v336 >= 0xFFFFFFFF) {
    LODWORD(v337) = -1;
  }
  if ((v337 + 1) < 2) {
    goto LABEL_364;
  }
LABEL_365:
  unint64_t v338 = v334 + v298;
  sub_24D3E380C(*(void **)((v338 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v338 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v338 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v339 = (v338 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v340 = *(void *)(v339 + 16);
  BOOL v341 = ((4 * (v340 >> 60)) & 0xC | ((v340 >> 60) >> 2)) != 0xF && ((4 * (v340 >> 60)) & 0xC) != 0;
  if (v340 >> 60 != 15 && !v341) {
    sub_24D400DCC(*(void *)(v339 + 8), v340);
  }

  unint64_t v342 = ((unint64_t)v294 + v573) & v588;
  if (!((unsigned int (*)(unint64_t, uint64_t, uint64_t))v551)(v342, 1, v297)) {
    (*(void (**)(unint64_t, uint64_t))(v292 + 8))(v342, v297);
  }
  unint64_t v343 = (v575 + ((((v555 + v342) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v541;
  if (v550 == v570)
  {
    int v344 = (*(uint64_t (**)(unint64_t))(v591 + 48))(v343);
  }
  else
  {
    unint64_t v345 = (uint64_t *)((v594 + v343) & 0xFFFFFFFFFFFFFFF8);
    if (v542 <= 0x7FFFFFFE)
    {
      uint64_t v346 = *v345;
      if ((unint64_t)*v345 >= 0xFFFFFFFF) {
        LODWORD(v346) = -1;
      }
      uint64_t v347 = v531;
      size_t v348 = v535 + 8;
      if ((v346 + 1) >= 2) {
        goto LABEL_384;
      }
      goto LABEL_383;
    }
    int v344 = (*(uint64_t (**)(unint64_t))(v584 + 48))(((unint64_t)v345 + v563) & v564);
  }
  uint64_t v347 = v531;
  size_t v348 = v535 + 8;
  if (!v344)
  {
    unint64_t v345 = (uint64_t *)((v594 + v343) & 0xFFFFFFFFFFFFFFF8);
LABEL_383:
    (*(void (**)(unint64_t, uint64_t))(v591 + 8))(v343, v577);
    swift_bridgeObjectRelease();
    (*(void (**)(unint64_t, uint64_t))(v584 + 8))(((unint64_t)v345 + v563) & v564, v565);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_384:
  unint64_t v349 = v343 + v590;
  sub_24D3E380C(*(void **)((v349 + 10) & 0xFFFFFFFFFFFFFFF8), *(id *)(((v349 + 10) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(((v349 + 10) & 0xFFFFFFFFFFFFFFF8) + 16));
  unint64_t v350 = (v349 + 34) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v351 = *(void *)(v350 + 16);
  BOOL v352 = ((4 * (v351 >> 60)) & 0xC | ((v351 >> 60) >> 2)) != 0xF && ((4 * (v351 >> 60)) & 0xC) != 0;
  if (v351 >> 60 != 15 && !v352) {
    sub_24D400DCC(*(void *)(v350 + 8), v351);
  }

  swift_bridgeObjectRelease();
  memcpy(v294, __srcc, v348);
  return v347;
}

uint64_t sub_24D4B6A64(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v68 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v70 = *(_DWORD *)(v68 + 84);
  if (v70) {
    unsigned int v2 = v70 - 1;
  }
  else {
    unsigned int v2 = 0;
  }
  uint64_t v66 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v3 = *(_DWORD *)(v66 + 84);
  uint64_t v65 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v4 = *(_DWORD *)(v65 + 84);
  if (v3 > v4) {
    unsigned int v4 = v3;
  }
  unsigned int v55 = v4;
  if (v4 <= 0x7FFFFFFE) {
    unsigned int v4 = 2147483646;
  }
  unsigned int v56 = v4;
  unsigned int v57 = v3;
  unsigned int v5 = v4 - 1;
  unsigned int v59 = v5;
  unsigned int v60 = v2;
  if (v2 > v5) {
    unsigned int v5 = v2;
  }
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v6 = 2147483646;
  }
  else {
    unsigned int v6 = v5;
  }
  uint64_t v64 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v69 = *(_DWORD *)(v64 + 84);
  if (v69) {
    unsigned int v7 = v69 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v63 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v63 + 84);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = v9;
  unsigned int v54 = v8;
  if (v8 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v11 = v8;
  }
  if (v11 <= 0x7FFFFFFE) {
    int v12 = 2147483646;
  }
  else {
    int v12 = v11;
  }
  unsigned int v58 = v7;
  if (v7 <= v12 - 1) {
    unsigned int v13 = v12 - 1;
  }
  else {
    unsigned int v13 = v7;
  }
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  unsigned int v61 = v6;
  if (v13 <= v6) {
    unsigned int v14 = v6;
  }
  else {
    unsigned int v14 = v13;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(unsigned __int8 *)(v65 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v18 = *(void *)(v66 + 64);
  uint64_t v19 = *(void *)(v64 + 64);
  uint64_t v20 = *(void *)(v63 + 64);
  uint64_t v21 = *(void *)(v9 + 64);
  unsigned int v22 = v15 - 1;
  if (v15 - 1 < v15) {
    unsigned int v22 = v15;
  }
  if (v70) {
    uint64_t v23 = *(void *)(v68 + 64);
  }
  else {
    uint64_t v23 = *(void *)(v68 + 64) + 1;
  }
  if (!v69) {
    ++v19;
  }
  if (!a2) {
    return 0;
  }
  int v24 = *(_DWORD *)(v66 + 80) & 0xF8;
  uint64_t v25 = v24 | v16 | 7;
  uint64_t v26 = *(_DWORD *)(v63 + 80) & 0xF8 | v17 | 7;
  uint64_t v27 = v26 | *(_DWORD *)(v64 + 80) & 0xF8;
  uint64_t v28 = v24 | v16 | *(_DWORD *)(v68 + 80) & 0xF8 | v27;
  unint64_t v29 = (((*(void *)(v65 + 64) + ((v16 + 8 + ((v18 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = v23 + 7;
  unint64_t v31 = ((((((((v25 + 9 + ((((v23 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v25) + v29 + 50) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v32 = (((v21 + ((v17 + 8 + ((v20 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = v19 + 7;
  unint64_t v34 = ((((((((v26 + 9 + ((((v19 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v26) + v32 + 50) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (a2 <= v22) {
    goto LABEL_60;
  }
  unint64_t v35 = (((v34 + ((v31 + v27) & ~v27) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = ((v28
        + 9
        + ((((v35 + ((((v28 + 9) | v28) + v35 + 8) & ~v28) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v28)
      + v35
      + 8;
  char v37 = 8 * v36;
  if (v36 > 3) {
    goto LABEL_43;
  }
  unsigned int v39 = ((a2 - v22 + ~(-1 << v37)) >> v37) + 1;
  if (HIWORD(v39))
  {
    int v38 = *(_DWORD *)((char *)a1 + v36);
    if (v38) {
      goto LABEL_50;
    }
  }
  else
  {
    if (v39 <= 0xFF)
    {
      if (v39 < 2) {
        goto LABEL_60;
      }
LABEL_43:
      int v38 = *((unsigned __int8 *)a1 + v36);
      if (!*((unsigned char *)a1 + v36)) {
        goto LABEL_60;
      }
LABEL_50:
      int v40 = (v38 - 1) << v37;
      if (v36 > 3) {
        int v40 = 0;
      }
      if (v36)
      {
        if (v36 <= 3) {
          int v41 = v36;
        }
        else {
          int v41 = 4;
        }
        switch(v41)
        {
          case 2:
            int v42 = *a1;
            break;
          case 3:
            int v42 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            int v42 = *(_DWORD *)a1;
            break;
          default:
            int v42 = *(unsigned __int8 *)a1;
            break;
        }
      }
      else
      {
        int v42 = 0;
      }
      return v22 + (v42 | v40) + 1;
    }
    int v38 = *(unsigned __int16 *)((char *)a1 + v36);
    if (*(unsigned __int16 *)((char *)a1 + v36)) {
      goto LABEL_50;
    }
  }
LABEL_60:
  uint64_t v43 = ((unint64_t)a1 + v28 + 9) & ~v28;
  if (v61 == v15)
  {
    if (v60 == v61)
    {
      if (v70 >= 2)
      {
        unsigned int v44 = (*(uint64_t (**)(uint64_t))(v68 + 48))(v43);
        goto LABEL_98;
      }
      return 0;
    }
    unint64_t v47 = (v25 + 9 + ((((v30 + v43) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v25;
    if (v59 == v61)
    {
      if (v57 == v56)
      {
        unsigned int v44 = (*(uint64_t (**)(unint64_t))(v66 + 48))(v47);
        goto LABEL_98;
      }
      long long v51 = (unint64_t *)((v18 + 7 + v47) & 0xFFFFFFFFFFFFFFF8);
      if (v55 > 0x7FFFFFFE)
      {
        unsigned int v44 = (*(uint64_t (**)(unint64_t))(v65 + 48))(((unint64_t)v51 + v16 + 8) & ~v16);
        goto LABEL_98;
      }
LABEL_92:
      unint64_t v53 = *v51;
      if (v53 >= 0xFFFFFFFF) {
        LODWORD(v53) = -1;
      }
      if ((v53 + 1) >= 2) {
        unsigned int v44 = v53;
      }
      else {
        unsigned int v44 = 0;
      }
      goto LABEL_98;
    }
    unint64_t v50 = v29 + v47;
    goto LABEL_86;
  }
  unint64_t v45 = (v43 + v27 + v31) & ~v27;
  if (v13 == v15)
  {
    if (v58 == v13)
    {
      if (v69 < 2) {
        return 0;
      }
      unsigned int v44 = (*(uint64_t (**)(unint64_t))(v64 + 48))(v45);
    }
    else
    {
      unint64_t v49 = (v26 + 9 + ((((v33 + v45) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v26;
      if (v12 - 1 != v13)
      {
        unint64_t v50 = v32 + v49;
LABEL_86:
        unint64_t v52 = *(void *)((((v50 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
        if (v52 >= 0xFFFFFFFF) {
          LODWORD(v52) = -1;
        }
        if ((v52 + 1) >= 2) {
          return v52;
        }
        else {
          return 0;
        }
      }
      if (v54 == v12)
      {
        unsigned int v44 = (*(uint64_t (**)(unint64_t))(v63 + 48))(v49);
        goto LABEL_98;
      }
      long long v51 = (unint64_t *)((v20 + 7 + v49) & 0xFFFFFFFFFFFFFFF8);
      if (v11 <= 0x7FFFFFFE) {
        goto LABEL_92;
      }
      unsigned int v44 = (*(uint64_t (**)(unint64_t))(v10 + 48))(((unint64_t)v51 + v17 + 8) & ~v17);
    }
LABEL_98:
    if (v44 >= 2) {
      return v44 - 1;
    }
    else {
      return 0;
    }
  }
  unint64_t v48 = *(void *)(((v45 + v34) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v48 >= 0xFFFFFFFF) {
    LODWORD(v48) = -1;
  }
  return (v48 + 1);
}

void sub_24D4B730C(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v86 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v99 = v86;
  unsigned int v98 = *(_DWORD *)(v86 + 84);
  if (v98) {
    unsigned int v3 = v98 - 1;
  }
  else {
    unsigned int v3 = 0;
  }
  uint64_t v79 = swift_getAssociatedTypeWitness();
  uint64_t v91 = *(void *)(v79 - 8);
  uint64_t v96 = v91;
  unsigned int v4 = *(_DWORD *)(v91 + 84);
  uint64_t v76 = swift_getAssociatedTypeWitness();
  uint64_t v90 = *(void *)(v76 - 8);
  unsigned int v5 = *(_DWORD *)(v90 + 84);
  unsigned int v80 = v4;
  unsigned int v75 = v5;
  if (v4 > v5) {
    unsigned int v5 = v4;
  }
  unsigned int v78 = v5;
  if (v5 <= 0x7FFFFFFE) {
    unsigned int v5 = 2147483646;
  }
  unsigned int v83 = v5;
  unsigned int v6 = v5 - 1;
  unsigned int v84 = v6;
  if (v3 > v6) {
    unsigned int v6 = v3;
  }
  if (v6 <= 0x7FFFFFFE) {
    unsigned int v6 = 2147483646;
  }
  unsigned int v100 = v6;
  uint64_t v82 = swift_getAssociatedTypeWitness();
  uint64_t v89 = *(void *)(v82 - 8);
  unsigned int v97 = *(_DWORD *)(v89 + 84);
  if (v97) {
    unsigned int v7 = v97 - 1;
  }
  else {
    unsigned int v7 = 0;
  }
  uint64_t v74 = swift_getAssociatedTypeWitness();
  uint64_t v88 = *(void *)(v74 - 8);
  unsigned int v8 = *(_DWORD *)(v88 + 84);
  int v101 = 0;
  uint64_t v72 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v72 - 8);
  uint64_t v10 = v86;
  unsigned int v11 = *(_DWORD *)(v9 + 84);
  unsigned int v77 = v8;
  unsigned int v70 = v11;
  if (v8 > v11) {
    unsigned int v11 = v8;
  }
  unsigned int v73 = v11;
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v11 = 2147483646;
  }
  unsigned int v81 = v11;
  unsigned int v12 = v11 - 1;
  unsigned int v87 = v7;
  if (v7 <= v11 - 1) {
    unsigned int v13 = v11 - 1;
  }
  else {
    unsigned int v13 = v7;
  }
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = v13;
  }
  uint64_t v15 = *(unsigned __int8 *)(v90 + 80);
  uint64_t v71 = *(void *)(v72 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v17 = *(void *)(v91 + 64);
  uint64_t v18 = *(void *)(v88 + 64);
  if (v14 <= v100) {
    unsigned int v19 = v100;
  }
  else {
    unsigned int v19 = v14;
  }
  if (v19 <= 0x7FFFFFFF) {
    unsigned int v20 = 0x7FFFFFFF;
  }
  else {
    unsigned int v20 = v19;
  }
  if (v20 - 1 < v20) {
    unsigned int v21 = v20;
  }
  else {
    unsigned int v21 = v20 - 1;
  }
  if (v98) {
    uint64_t v22 = *(void *)(v10 + 64);
  }
  else {
    uint64_t v22 = *(void *)(v10 + 64) + 1;
  }
  int v23 = *(_DWORD *)(v91 + 80) & 0xF8 | v15;
  uint64_t v24 = v23 | 7u;
  int v25 = v23 | *(_DWORD *)(v99 + 80) & 0xF8;
  uint64_t v26 = *(_DWORD *)(v88 + 80) & 0xF8 | v16 | 7;
  uint64_t v27 = v26 | *(_DWORD *)(v89 + 80) & 0xF8;
  uint64_t v28 = v25 | v27;
  uint64_t v29 = v17 + 7;
  uint64_t v92 = v15 + 8;
  unint64_t v30 = (((*(void *)(v90 + 64) + ((v15 + 8 + ((v17 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v15) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v31 = v30 + 16;
  uint64_t v32 = v22 + 7;
  unint64_t v33 = ((v24 + 9 + ((((v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v24) + v30 + 16 + 34;
  unint64_t v34 = (((((v33 & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v97) {
    uint64_t v35 = *(void *)(v89 + 64);
  }
  else {
    uint64_t v35 = *(void *)(v89 + 64) + 1;
  }
  uint64_t v36 = v18 + 7;
  uint64_t v37 = v16 + 8;
  unint64_t v38 = (((*(void *)(*(void *)(v72 - 8) + 64) + ((v16 + 8 + ((v18 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v39 = v35 + 7;
  uint64_t v40 = v26 + 9;
  unint64_t v41 = ((v26 + 9 + ((((v35 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v26) + v38 + 16 + 34;
  unint64_t v42 = (((((v41 & 0xFFFFFFFFFFFFFFF8) + 63) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v43 = (((v42 + ((v34 + v27) & ~v27) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8;
  size_t v44 = ((v28
        + 9
        + ((((v43 + ((((v28 + 9) | v28) + v43 + 8) & ~v28) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)) & ~v28)
      + v43
      + 8;
  if (a3 > v21)
  {
    if (v44 <= 3)
    {
      unsigned int v46 = ((a3 - v21 + ~(-1 << (8 * v44))) >> (8 * v44)) + 1;
      if (HIWORD(v46))
      {
        int v45 = 4;
      }
      else if (v46 >= 0x100)
      {
        int v45 = 2;
      }
      else
      {
        int v45 = v46 > 1;
      }
    }
    else
    {
      int v45 = 1;
    }
    int v101 = v45;
  }
  if (v21 < a2)
  {
    unsigned int v47 = ~v21 + a2;
    if (v44 < 4)
    {
      int v48 = (v47 >> (8 * v44)) + 1;
      if (v44)
      {
        int v52 = v47 & ~(-1 << (8 * v44));
        bzero(a1, v44);
        if (v44 == 3)
        {
          *(_WORD *)a1 = v52;
          a1[2] = BYTE2(v52);
        }
        else if (v44 == 2)
        {
          *(_WORD *)a1 = v52;
        }
        else
        {
          *a1 = v52;
        }
      }
    }
    else
    {
      bzero(a1, v44);
      *(_DWORD *)a1 = v47;
      int v48 = 1;
    }
    switch(v101)
    {
      case 1:
        a1[v44] = v48;
        return;
      case 2:
        *(_WORD *)&a1[v44] = v48;
        return;
      case 3:
        goto LABEL_118;
      case 4:
        *(_DWORD *)&a1[v44] = v48;
        return;
      default:
        return;
    }
  }
  uint64_t v94 = ~v27;
  uint64_t v49 = ~v15;
  uint64_t v50 = ~v26;
  uint64_t v51 = ~v16;
  switch(v101)
  {
    case 1:
      a1[v44] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_61;
    case 2:
      *(_WORD *)&a1[v44] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_61;
    case 3:
LABEL_118:
      __break(1u);
      JUMPOUT(0x24D4B7D38);
    case 4:
      *(_DWORD *)&a1[v44] = 0;
      goto LABEL_60;
    default:
LABEL_60:
      if (!a2) {
        return;
      }
LABEL_61:
      unint64_t v53 = (_DWORD *)((unint64_t)&a1[v28 + 9] & ~v28);
      if (v20 < a2)
      {
        int v54 = ((((((((((v41 & 0xFFFFFFF8) + 63) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8)
                 + ((v27 + (((((v33 & 0xFFFFFFF8) + 63) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 8) & v94)
                 + 8) & 0xFFFFFFF8)
               + 23) & 0xFFFFFFF8)
             + 39) & 0xFFFFFFF8;
        size_t v31 = (v54 + 8);
        if (v54 == -8) {
          return;
        }
        unsigned int v55 = ~v20 + a2;
        goto LABEL_64;
      }
      if (v100 != v20)
      {
        unint64_t v62 = ((unint64_t)v53 + v27 + v34) & v94;
        if (v14 != v20)
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v64 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v64 = a2 - 1;
          }
          *(void *)(((v62 + v42) & 0xFFFFFFFFFFFFFFF8) + 8) = v64;
          return;
        }
        if (v87 == v14)
        {
          uint64_t v57 = a2 + 1;
          unsigned int v58 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v89 + 56);
          unint64_t v59 = ((unint64_t)v53 + v27 + v34) & v94;
          uint64_t v60 = v97;
          uint64_t v61 = v82;
          goto LABEL_74;
        }
        unint64_t v53 = (_DWORD *)((v40 + ((((v39 + v62) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v50);
        if (v12 == v14)
        {
          uint64_t v57 = a2 + 1;
          if (v57 > v81)
          {
            if (v38 != -16)
            {
              unsigned int v55 = a2 - v81;
              unsigned int v56 = (void *)((v40 + ((((v39 + v62) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v50);
              size_t v31 = v38 + 16;
              goto LABEL_65;
            }
            return;
          }
          if (a2 == -1) {
            return;
          }
          uint64_t v60 = v77;
          if (v77 == v81)
          {
            unsigned int v58 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v88 + 56);
            unint64_t v59 = (v40 + ((((v39 + v62) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v50;
            uint64_t v61 = v74;
            goto LABEL_74;
          }
          uint64_t v67 = (void *)(((unint64_t)v53 + v36) & 0xFFFFFFFFFFFFFFF8);
          if (v73 > 0x7FFFFFFE)
          {
            unint64_t v59 = ((unint64_t)v67 + v37) & v51;
            uint64_t v61 = v72;
            unsigned int v58 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56);
            uint64_t v60 = v70;
            goto LABEL_74;
          }
          if (v57 <= 0x7FFFFFFE)
          {
            void *v67 = v57;
            return;
          }
          int v68 = -2147483646;
LABEL_104:
          void *v67 = 0;
          *(_DWORD *)uint64_t v67 = a2 + v68;
          return;
        }
        uint64_t v65 = (char *)v53 + v38;
LABEL_101:
        uint64_t v67 = (void *)((((unint64_t)(v65 + 26) & 0xFFFFFFFFFFFFFFF8) + 87) & 0xFFFFFFFFFFFFFFF8);
        if (a2 <= 0x7FFFFFFE)
        {
          void *v67 = a2;
          return;
        }
        int v68 = -2147483647;
        goto LABEL_104;
      }
      if (v3 == v100)
      {
        uint64_t v57 = a2 + 1;
        unsigned int v58 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v99 + 56);
        unint64_t v59 = (unint64_t)v53;
        uint64_t v60 = v98;
        uint64_t v61 = AssociatedTypeWitness;
LABEL_74:
        v58(v59, v57, v60, v61);
        return;
      }
      unint64_t v53 = (_DWORD *)((v24 + 9 + (((((unint64_t)v53 + v32) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v24);
      if (v84 != v100)
      {
        uint64_t v65 = (char *)v53 + v30;
        goto LABEL_101;
      }
      uint64_t v63 = a2 + 1;
      if (v63 <= v83)
      {
        if (a2 == -1) {
          return;
        }
        uint64_t v66 = v49;
        uint64_t v60 = v80;
        if (v80 == v83)
        {
          unsigned int v58 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56);
          unint64_t v59 = (unint64_t)v53;
          uint64_t v57 = a2 + 1;
          uint64_t v61 = v79;
        }
        else
        {
          unsigned int v69 = (void *)(((unint64_t)v53 + v29) & 0xFFFFFFFFFFFFFFF8);
          if (v78 <= 0x7FFFFFFE)
          {
            if (v63 > 0x7FFFFFFE)
            {
              *unsigned int v69 = 0;
              *(_DWORD *)unsigned int v69 = a2 - 2147483646;
            }
            else
            {
              *unsigned int v69 = v63;
            }
            return;
          }
          unint64_t v59 = ((unint64_t)v69 + v92) & v66;
          unsigned int v58 = *(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v90 + 56);
          uint64_t v57 = a2 + 1;
          uint64_t v60 = v75;
          uint64_t v61 = v76;
        }
        goto LABEL_74;
      }
      if (v30 != -16)
      {
        unsigned int v55 = a2 - v83;
LABEL_64:
        unsigned int v56 = v53;
LABEL_65:
        bzero(v56, v31);
        _DWORD *v53 = v55;
      }
      return;
  }
}

uint64_t sub_24D4B7D60(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24D4B7D78(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

uint64_t type metadata accessor for ReconciliationTable.PersistAction()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D4B7DAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D4A5658(a1, a2);
}

uint64_t sub_24D4B7E58(uint64_t a1)
{
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B195DA0);
  uint64_t v3 = MEMORY[0x270FA5388](v58);
  uint64_t v57 = (char *)v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unsigned int v56 = (char *)v47 - v6;
  MEMORY[0x270FA5388](v5);
  unsigned int v55 = (void *)((char *)v47 - v7);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  unsigned int v11 = (char *)v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  int v14 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  int v17 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v62 = v12;
  int v63 = v14;
  uint64_t v59 = v15;
  uint64_t v60 = v16;
  int v61 = v17;
  uint64_t v19 = sub_24D8F3418();
  uint64_t v20 = MEMORY[0x263F8EE78];
  if (!v19) {
    return v20;
  }
  uint64_t v21 = v19;
  uint64_t v67 = MEMORY[0x263F8EE78];
  uint64_t result = sub_24D7C6FC0(0, v19 & ~(v19 >> 63), 0);
  if (v21 < 0)
  {
LABEL_39:
    __break(1u);
  }
  else
  {
    v47[1] = v1;
    uint64_t v23 = v62;
    uint64_t result = sub_24D4C6AA4(v62, v13, v63);
    uint64_t v24 = 0;
    uint64_t v25 = v18 + 64;
    uint64_t v48 = v18 + 80;
    uint64_t v49 = v21;
    uint64_t v53 = v18;
    uint64_t v54 = v9;
    uint64_t v50 = v13;
    uint64_t v51 = v18 + 64;
    int v52 = v11;
    while ((v63 & 1) == 0)
    {
      if (v23 < v62)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
      if (v61) {
        goto LABEL_41;
      }
      if (v13 != v60) {
        goto LABEL_31;
      }
      if (v23 >= v59) {
        goto LABEL_32;
      }
      if (v23 < 0 || v23 >= 1 << *(unsigned char *)(v18 + 32)) {
        goto LABEL_33;
      }
      unint64_t v28 = (unint64_t)v23 >> 6;
      if ((*(void *)(v25 + 8 * ((unint64_t)v23 >> 6)) & (1 << v23)) == 0) {
        goto LABEL_34;
      }
      if (*(_DWORD *)(v18 + 36) != v13) {
        goto LABEL_35;
      }
      uint64_t v64 = v24;
      uint64_t v65 = 1 << v23;
      uint64_t v29 = v58;
      uint64_t v30 = (uint64_t)v56;
      uint64_t v31 = (uint64_t)&v56[*(int *)(v58 + 48)];
      uint64_t v32 = *(void *)(v18 + 56);
      uint64_t v33 = *(void *)(v18 + 48) + 16 * v23;
      uint64_t v34 = *(void *)v33;
      char v35 = *(unsigned char *)(v33 + 8);
      uint64_t v66 = *(void *)(v9 + 72);
      sub_24D415FD0(v32 + v66 * v23, v31, (uint64_t *)&unk_26B199410);
      *(void *)uint64_t v30 = v34;
      *(unsigned char *)(v30 + 8) = v35;
      uint64_t v36 = (uint64_t)v55;
      *unsigned int v55 = v34;
      *(unsigned char *)(v36 + 8) = v35;
      sub_24D415FD0(v31, v36 + *(int *)(v29 + 48), (uint64_t *)&unk_26B199410);
      sub_24D415F74(v30, &qword_26B195DA0);
      sub_24D3F0BA0(v36, v30, &qword_26B195DA0);
      uint64_t v37 = *(int *)(v29 + 48);
      uint64_t v38 = (uint64_t)v52;
      uint64_t v39 = (uint64_t)&v57[v37];
      sub_24D415FD0(v30 + v37, (uint64_t)&v57[v37], (uint64_t *)&unk_26B199410);
      sub_24D3F0BA0(v39, v38, (uint64_t *)&unk_26B199410);
      sub_24D415F74(v30, &qword_26B195DA0);
      uint64_t v20 = v67;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_24D7C6FC0(0, *(void *)(v20 + 16) + 1, 1);
        uint64_t v20 = v67;
      }
      unint64_t v41 = *(void *)(v20 + 16);
      unint64_t v40 = *(void *)(v20 + 24);
      uint64_t v9 = v54;
      if (v41 >= v40 >> 1)
      {
        sub_24D7C6FC0(v40 > 1, v41 + 1, 1);
        uint64_t v20 = v67;
      }
      *(void *)(v20 + 16) = v41 + 1;
      uint64_t result = sub_24D3F0BA0(v38, v20+ ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80))+ v41 * v66, (uint64_t *)&unk_26B199410);
      uint64_t v18 = v53;
      int64_t v26 = 1 << *(unsigned char *)(v53 + 32);
      if (v23 >= v26) {
        goto LABEL_36;
      }
      uint64_t v25 = v51;
      uint64_t v42 = *(void *)(v51 + 8 * v28);
      if ((v42 & v65) == 0) {
        goto LABEL_37;
      }
      LODWORD(v13) = v50;
      if (*(_DWORD *)(v53 + 36) != v50) {
        goto LABEL_38;
      }
      unint64_t v43 = v42 & (-2 << (v23 & 0x3F));
      if (v43)
      {
        int64_t v26 = __clz(__rbit64(v43)) | v23 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v27 = v49;
      }
      else
      {
        unint64_t v44 = v28 + 1;
        unint64_t v45 = (unint64_t)(v26 + 63) >> 6;
        uint64_t v27 = v49;
        if (v28 + 1 < v45)
        {
          unint64_t v46 = *(void *)(v51 + 8 * v44);
          if (v46)
          {
LABEL_28:
            int64_t v26 = __clz(__rbit64(v46)) + (v44 << 6);
          }
          else
          {
            while (v45 - 2 != v28)
            {
              unint64_t v46 = *(void *)(v48 + 8 * v28++);
              if (v46)
              {
                unint64_t v44 = v28 + 1;
                goto LABEL_28;
              }
            }
          }
        }
      }
      uint64_t v24 = v64 + 1;
      uint64_t v23 = v26;
      if (v64 + 1 == v27) {
        return v20;
      }
    }
  }
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24D4B8310(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, unint64_t a7)
{
  uint64_t v7 = a7 >> 62;
  uint64_t v8 = a3;
  uint64_t v9 = 0;
  switch(a7 >> 62)
  {
    case 1uLL:
      LODWORD(v10) = HIDWORD(a6) - a6;
      if (__OFSUB__(HIDWORD(a6), a6))
      {
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      uint64_t v10 = (int)v10;
LABEL_6:
      if (v10 < 1) {
        return 0;
      }
      if (a5) {
        goto LABEL_16;
      }
      if (a3 != a4)
      {
        if ((unint64_t)(a2 - 0x1000000000000000) >> 61 != 7)
        {
LABEL_37:
          __break(1u);
          goto LABEL_38;
        }
        uint64_t v7 = a4 - a3;
        if (__OFSUB__(a4, a3))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          goto LABEL_40;
        }
        uint64_t v10 = 8 * a2;
        if (v7 >= 8 * a2) {
          uint64_t v7 = 8 * a2;
        }
        uint64_t v14 = a3 + v7;
        if (__OFADD__(a3, v7)) {
          goto LABEL_39;
        }
        if (v14 >= a3) {
          goto LABEL_26;
        }
        __break(1u);
LABEL_16:
        if (v7)
        {
          if (v7 == 1) {
            uint64_t v8 = (int)a6;
          }
          else {
            uint64_t v8 = *(void *)(a6 + 16);
          }
        }
        else
        {
          uint64_t v8 = 0;
        }
        if ((unint64_t)(a2 - 0x1000000000000000) >> 61 == 7)
        {
          uint64_t v15 = 8 * a2;
          if (v10 < 8 * a2) {
            uint64_t v15 = v10;
          }
          uint64_t v14 = v8 + v15;
          if (!__OFADD__(v8, v15))
          {
            if (v14 >= v8)
            {
LABEL_26:
              if (v8 == v14) {
                return 0;
              }
              if (!a1)
              {
LABEL_40:
                __break(1u);
                JUMPOUT(0x24D4B8480);
              }
              sub_24DCC8B18();
              uint64_t v9 = v14 - v8;
              if (!__OFSUB__(v14, v8)) {
                return v9;
              }
              goto LABEL_36;
            }
LABEL_35:
            __break(1u);
LABEL_36:
            __break(1u);
            goto LABEL_37;
          }
LABEL_34:
          __break(1u);
          goto LABEL_35;
        }
LABEL_33:
        __break(1u);
        goto LABEL_34;
      }
      return 0;
    case 2uLL:
      uint64_t v12 = *(void *)(a6 + 16);
      uint64_t v11 = *(void *)(a6 + 24);
      BOOL v13 = __OFSUB__(v11, v12);
      uint64_t v10 = v11 - v12;
      if (!v13) {
        goto LABEL_6;
      }
      goto LABEL_32;
    case 3uLL:
      return v9;
    default:
      uint64_t v10 = BYTE6(a7);
      goto LABEL_6;
  }
}

uint64_t sub_24D4B8490()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24DCC91D8();
  swift_release();
  swift_release();
  return v1;
}

char *sub_24D4B8504(uint64_t a1, int a2, void *a3, uint64_t a4, uint64_t a5, char *a6, int a7)
{
  int v46 = a7;
  unint64_t v44 = a6;
  uint64_t v45 = a4;
  uint64_t v57 = a5;
  LODWORD(v56) = a2;
  uint64_t v43 = a1;
  uint64_t v9 = sub_24DCCA1E8();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v52 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v50 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B196B80);
  uint64_t v48 = *(void *)(v11 - 8);
  uint64_t v49 = v11;
  MEMORY[0x270FA5388](v11);
  unsigned int v47 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1923C8);
  uint64_t v54 = *(void *)(v13 - 8);
  uint64_t v55 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v53 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24DCC9078();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  uint64_t v19 = OBJC_IVAR____TtC9libfssync14FPFSEnumerator_fpItemID;
  *(void *)&v7[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_fpItemID] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_extensionEnumerator] = 0;
  uint64_t v20 = &v7[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_keepAlive];
  *uint64_t v20 = 0;
  v20[1] = 0;
  v7[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated] = 0;
  uint64_t v21 = OBJC_IVAR____TtC9libfssync14FPFSEnumerator_buildAndFilterAppLibraries;
  v7[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_buildAndFilterAppLibraries] = 0;
  *(void *)&v7[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_cancellable] = 0;
  uint64_t v22 = OBJC_IVAR____TtC9libfssync14FPFSEnumerator_changedItemsByID;
  uint64_t v23 = v7;
  *(void *)&v7[v22] = sub_24D42FC68(MEMORY[0x263F8EE78]);
  *(void *)&v23[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_deletedItemsIDs] = MEMORY[0x263F8EE88];
  uint64_t v24 = &v23[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID];
  *(void *)uint64_t v24 = v43;
  v24[8] = (char)v56;
  uint64_t v25 = *(void **)&v7[v19];
  *(void *)&v7[v19] = a3;
  uint64_t v26 = v57;
  id v56 = a3;

  uint64_t v27 = v44;
  *(void *)&v23[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_lifetimeExtender] = v45;
  *(void *)&v23[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_observer] = v26;
  swift_unknownObjectWeakAssign();
  v7[v21] = v46;
  unint64_t v28 = *(void **)&v27[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v29 = v28;
  sub_24DCC9088();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v23[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_logger], v18, v15);
  *(void *)&v23[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_previousAnchor] = 0;
  swift_beginAccess();
  uint64_t v59 = 0;
  sub_24DCC91A8();
  swift_endAccess();

  uint64_t v30 = (objc_class *)type metadata accessor for FPFSEnumerator();
  v58.receiver = v23;
  v58.super_class = v30;
  uint64_t v31 = (char *)objc_msgSendSuper2(&v58, sel_init);
  uint64_t v32 = v31;
  if (a3)
  {
    id v33 = v56;
    uint64_t v34 = v32;
    sub_24D4B8E08((uint64_t)v33);
  }
  else
  {
    char v35 = v31;
  }
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B98);
  uint64_t v36 = v47;
  sub_24DCC91B8();
  swift_endAccess();
  uint64_t v37 = v50;
  sub_24DCCA1C8();
  uint64_t v60 = *(void *)&v27[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  sub_24D3FB6F8(0, (unint64_t *)&qword_26B197E10);
  sub_24D3E4A9C(&qword_26B196B78, &qword_26B196B80);
  sub_24D4C72D8();
  uint64_t v38 = v53;
  uint64_t v39 = v49;
  sub_24DCC9238();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v37, v52);
  (*(void (**)(char *, uint64_t))(v48 + 8))(v36, v39);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_24D3E4A9C((unint64_t *)&unk_26B1923B8, &qword_26B1923C8);
  uint64_t v40 = v55;
  uint64_t v41 = sub_24DCC9248();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  swift_release();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v38, v40);
  *(void *)&v32[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_cancellable] = v41;
  swift_release();
  return v32;
}

uint64_t sub_24D4B8B1C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2 + 16;
  swift_beginAccess();
  uint64_t result = MEMORY[0x25332B1A0](v2);
  if (result)
  {
    uint64_t v4 = (void *)result;
    uint64_t v5 = *(void **)(result + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_observer);
    swift_unknownObjectRetain();

    objc_msgSend(v5, sel_enumerationResultsDidChange);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_24D4B8B98()
{
  sub_24D4B90F8();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSEnumerator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24D4B8DB4()
{
  return type metadata accessor for FPFSEnumerator();
}

uint64_t type metadata accessor for FPFSEnumerator()
{
  uint64_t result = qword_26B192AC8;
  if (!qword_26B192AC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24D4B8E08(uint64_t a1)
{
  uint64_t v3 = MEMORY[0x25332B1A0](v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend);
  if (v3)
  {
    id v14 = (id)v3;
    uint64_t v4 = MEMORY[0x25332B1A0](v3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
    if (v4)
    {
      uint64_t v5 = (void *)v4;
      id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F05460]), sel_init);
      id v7 = objc_msgSend(v5, sel_providerDomainID);
      id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F054B8]), sel_initWithProviderDomainID_itemIdentifier_, v7, a1);

      objc_msgSend(v6, sel_setEnumeratedItemID_, v8);
      id v9 = objc_msgSend(v5, sel_extensionBackend);
      uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_lifetimeExtender);
      id v11 = objc_msgSend(objc_allocWithZone((Class)type metadata accessor for DummyEnumeratorObserver()), sel_init);
      uint64_t v12 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_24D4C5D2C;
      aBlock[5] = v12;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D6017D4;
      aBlock[3] = &block_descriptor_101;
      uint64_t v13 = _Block_copy(aBlock);
      swift_release();
      objc_msgSend(v9, sel_enumerateWithSettings_lifetimeExtender_observer_completionHandler_, v6, v10, v11, v13);
      _Block_release(v13);

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_24D4B9038(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + 16;
  swift_beginAccess();
  uint64_t v5 = MEMORY[0x25332B1A0](v4);
  if (v5)
  {
    id v6 = (void *)v5;
    if (*(unsigned char *)(v5 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated))
    {
      if (a1) {
        objc_msgSend(a1, sel_invalidate);
      }
    }
    else
    {
      *(void *)(v5 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_extensionEnumerator) = a1;
      swift_unknownObjectRetain();

      swift_unknownObjectRelease();
    }
  }
  else if (a1)
  {
    objc_msgSend(a1, sel_invalidate);
  }
}

void sub_24D4B90F8()
{
  uint64_t v1 = (unsigned int *)(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated);
  __swp(v1, v1);
  if ((v1 & 1) == 0)
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_keepAlive);
    if (v3)
    {
      uint64_t v4 = swift_retain();
      v3(v4);
      sub_24D43DD74((uint64_t)v3);
    }
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_extensionEnumerator);
    if (v5) {
      objc_msgSend(v5, sel_invalidate);
    }
    uint64_t v6 = v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend;
    uint64_t v7 = MEMORY[0x25332B1A0](v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend);
    if (v7)
    {
      id v8 = (void *)v7;
      id v9 = (void *)MEMORY[0x25332B1A0](v7 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);

      if (v9)
      {
        id v10 = objc_msgSend(v9, sel_session);

        objc_msgSend(v10, sel_asyncUnregisterLifetimeExtensionForObject_, *(void *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_lifetimeExtender));
        swift_unknownObjectRelease();
      }
    }
    uint64_t v11 = MEMORY[0x25332B1A0](v6);
    if (v11)
    {
      uint64_t v12 = (void *)v11;
      uint64_t v13 = (void *)MEMORY[0x25332B1A0](v11 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
      if (v13)
      {
        id v14 = v13;
        id v15 = objc_msgSend(v13, sel_log);
      }
      else
      {
        id v15 = 0;
      }
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v12;
      *(void *)(v16 + 24) = v2;
      id v17 = v12;
      sub_24D3E29E4(v15, (uint64_t)"enumeratorHasBeenInvalidated(_:)", 32, 2, (uint64_t)sub_24D4C5CEC, v16);

      swift_release();
    }
    uint64_t v18 = OBJC_IVAR____TtC9libfssync14FPFSEnumerator_cancellable;
    if (*(void *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_cancellable))
    {
      swift_retain();
      sub_24DCC9198();
      swift_release();
    }
    *(void *)(v2 + v18) = 0;
    swift_release();
  }
}

uint64_t sub_24D4B936C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB0);
  MEMORY[0x270FA5388](v57);
  uint64_t v6 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v56 - v15;
  sub_24D415FD0(a1, (uint64_t)v9, (uint64_t *)&unk_26B196F40);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    uint64_t v56 = a2;
    sub_24D3F0BA0((uint64_t)v9, (uint64_t)v16, (uint64_t *)&unk_26B199410);
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_buildAndFilterAppLibraries) == 1)
    {
      int v20 = v16[*(int *)(v10 + 48)];
      sub_24D415FD0((uint64_t)v16, (uint64_t)v14, (uint64_t *)&unk_26B199410);
      if (v20 == 1)
      {
        uint64_t v21 = *((void *)v14 + 2);
        char v22 = v14[24];
        uint64_t v24 = *((void *)v14 + 16);
        uint64_t v23 = *((void *)v14 + 17);
        sub_24D3FC3B0((uint64_t)&v14[*(int *)(v10 + 48)], (uint64_t)&v6[*(int *)(v57 + 40)], (uint64_t (*)(void))type metadata accessor for ItemMetadata);
        *(void *)uint64_t v6 = v21;
        v6[8] = v22;
        *((void *)v6 + 2) = v24;
        *((void *)v6 + 3) = v23;
        swift_bridgeObjectRetain_n();
        sub_24D415F74((uint64_t)v6, &qword_26B193EB0);
        if (v24 == 0x746E656D75636F44 && v23 == 0xE900000000000073)
        {
          swift_bridgeObjectRelease();
          sub_24D415F74((uint64_t)v14, (uint64_t *)&unk_26B199410);
          goto LABEL_57;
        }
        char v26 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        sub_24D415F74((uint64_t)v14, (uint64_t *)&unk_26B199410);
        if (v26)
        {
LABEL_57:
          uint64_t v43 = v56;
          sub_24D415FD0((uint64_t)v16, v56, (uint64_t *)&unk_26B199410);
          uint64_t v44 = *(void *)v16;
          int v45 = v16[8];
          sub_24D415F74((uint64_t)v16, (uint64_t *)&unk_26B199410);
          uint64_t v46 = *(void *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID);
          int v47 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8);
          if (v45)
          {
            if (v45 == 1)
            {
              BOOL v48 = v47 == 1 && v44 == v46;
            }
            else if (v44)
            {
              BOOL v48 = v47 == 2 && v46 == 1;
            }
            else
            {
              BOOL v48 = v47 == 2 && v46 == 0;
            }
          }
          else
          {
            if (*(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8))
            {
              char v55 = 0;
LABEL_85:
              uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1958B0);
              *(unsigned char *)(v43 + *(int *)(v17 + 48)) = v55;
              uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
              uint64_t v19 = v43;
              uint64_t v41 = 0;
              return v18(v19, v41, 1, v17);
            }
            BOOL v48 = v44 == v46;
          }
          char v55 = v48;
          goto LABEL_85;
        }
      }
      else
      {
        sub_24D415F74((uint64_t)v14, (uint64_t *)&unk_26B199410);
      }
    }
    uint64_t v27 = *(void *)v16;
    uint64_t v28 = *(void *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID);
    int v29 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8);
    BOOL v30 = *(void *)v16 == v28;
    if (*(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8)) {
      BOOL v30 = 0;
    }
    BOOL v32 = v29 == 1 && v27 == v28;
    BOOL v34 = v29 == 2 && v28 == 0;
    BOOL v36 = v29 == 2 && v28 == 1;
    if (v27) {
      BOOL v37 = v36;
    }
    else {
      BOOL v37 = v34;
    }
    if (v16[8] == 1) {
      BOOL v37 = v32;
    }
    if (v16[8]) {
      BOOL v38 = v37;
    }
    else {
      BOOL v38 = v30;
    }
    uint64_t v39 = *((void *)v16 + 2);
    if (v16[24])
    {
      if (v16[24] == 1)
      {
        if (v29 == 1)
        {
          int v40 = v39 == v28 || v38;
          if (v40 == 1) {
            goto LABEL_70;
          }
          goto LABEL_50;
        }
LABEL_49:
        if (v38)
        {
LABEL_70:
          uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1958B0);
          uint64_t v51 = *(int *)(v50 + 48);
          uint64_t v52 = (uint64_t)v16;
          uint64_t v53 = v56;
          sub_24D3F0BA0(v52, v56, (uint64_t *)&unk_26B199410);
          *(unsigned char *)(v53 + v51) = v38;
          uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
          uint64_t v19 = v53;
          uint64_t v41 = 0;
          uint64_t v17 = v50;
          return v18(v19, v41, 1, v17);
        }
LABEL_50:
        sub_24D415F74((uint64_t)v16, (uint64_t *)&unk_26B199410);
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1958B0);
        uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
        uint64_t v19 = v56;
        goto LABEL_51;
      }
      if (v39) {
        BOOL v42 = v29 == 2 && v28 == 1;
      }
      else {
        BOOL v42 = v29 == 2 && v28 == 0;
      }
    }
    else
    {
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8)) {
        goto LABEL_49;
      }
      BOOL v42 = v39 == v28;
    }
    char v49 = v42 || v38;
    if (v49) {
      goto LABEL_70;
    }
    goto LABEL_50;
  }
  sub_24D415F74((uint64_t)v9, (uint64_t *)&unk_26B196F40);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1958B0);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  uint64_t v19 = a2;
LABEL_51:
  uint64_t v41 = 1;
  return v18(v19, v41, 1, v17);
}

void (*sub_24D4B98F4(uint64_t (*a1)(uint64_t)))(uint64_t *, void)
{
  long long v135 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1958C0);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  uint64_t v129 = (uint64_t)&v117 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  unint64_t v133 = (uint64_t *)((char *)&v117 - v4);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1958C8);
  uint64_t v5 = MEMORY[0x270FA5388](v128);
  uint64_t v123 = (uint64_t)&v117 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v127 = (uint64_t)&v117 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v131 = *(void *)(v8 - 8);
  uint64_t v132 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v124 = (uint64_t)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v126 = (uint64_t)&v117 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v125 = (uint64_t)&v117 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v130 = (uint64_t *)((char *)&v117 - v15);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A00);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v117 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  char v22 = (char *)&v117 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v117 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v117 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  uint64_t v31 = (char *)&v117 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  BOOL v34 = (char *)&v117 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  BOOL v37 = (uint64_t (*)(uint64_t))((char *)&v117 - v36);
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  int v40 = (char *)&v117 - v39;
  uint64_t v41 = (uint64_t)v138;
  uint64_t result = (void (*)(uint64_t *, void))v135(v38);
  if (!v41)
  {
    uint64_t v118 = v31;
    unint64_t v120 = v34;
    uint64_t v119 = v22;
    long long v121 = v25;
    unint64_t v122 = v28;
    long long v135 = v37;
    uint64_t v138 = v40;
    uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1958A0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v43 - 8) + 48))(v18, 1, v43) == 1) {
      return (void (*)(uint64_t *, void))sub_24D415F74((uint64_t)v18, (uint64_t *)&unk_26B192A00);
    }
    uint64_t v117 = 0;
    uint64_t v44 = (uint64_t)&v18[*(int *)(v43 + 48)];
    int v45 = v18[*(int *)(v43 + 64)];
    uint64_t v46 = (uint64_t)v138;
    sub_24D3F0BA0((uint64_t)v18, (uint64_t)v138, (uint64_t *)&unk_26B196F40);
    int v47 = v135;
    sub_24D3F0BA0(v44, (uint64_t)v135, (uint64_t *)&unk_26B196F40);
    uint64_t v49 = (uint64_t)v133;
    BOOL v48 = (void *)v134;
    sub_24D4B936C((uint64_t)v47, (uint64_t)v133);
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1958B0);
    uint64_t v51 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48);
    if (v51(v49, 1, v50) == 1)
    {
      sub_24D415F74(v49, &qword_26B1958C0);
      uint64_t v52 = v129;
      sub_24D4B936C(v46, v129);
      if (v51(v52, 1, v50) == 1)
      {
        sub_24D415F74(v52, &qword_26B1958C0);
        uint64_t v53 = v47;
LABEL_24:
        sub_24D415F74((uint64_t)v53, (uint64_t *)&unk_26B196F40);
        uint64_t v99 = v46;
        return (void (*)(uint64_t *, void))sub_24D415F74(v99, (uint64_t *)&unk_26B196F40);
      }
      uint64_t v67 = v123;
      sub_24D3F0BA0(v52, v123, (uint64_t *)&unk_26B199410);
      uint64_t v68 = v126;
      sub_24D3F0BA0(v67, v126, (uint64_t *)&unk_26B199410);
      uint64_t v69 = v124;
      sub_24D415FD0(v68, v124, (uint64_t *)&unk_26B199410);
      uint64_t v70 = (uint64_t)v121;
      sub_24D415FD0((uint64_t)v47, (uint64_t)v121, (uint64_t *)&unk_26B196F40);
      id v71 = v48;
      uint64_t v72 = sub_24DCC9068();
      int v73 = sub_24DCCA118();
      if (os_log_type_enabled(v72, (os_log_type_t)v73))
      {
        LODWORD(v133) = v73;
        uint64_t v74 = swift_slowAlloc();
        unsigned int v75 = (void *)swift_slowAlloc();
        uint64_t v134 = swift_slowAlloc();
        v136[0] = v134;
        *(_DWORD *)uint64_t v74 = 138412802;
        v137[0] = (uint64_t)v71;
        id v76 = v71;
        sub_24DCCA428();
        uint64_t v130 = v75;
        *unsigned int v75 = v71;

        *(_WORD *)(v74 + 12) = 2080;
        uint64_t v77 = sub_24D82BF20();
        v137[0] = sub_24D418FB4(v77, v78, v136);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        sub_24D415F74(v69, (uint64_t *)&unk_26B199410);
        *(_WORD *)(v74 + 22) = 2080;
        uint64_t v79 = (uint64_t *)&unk_26B196F40;
        uint64_t v80 = (uint64_t)v119;
        sub_24D415FD0((uint64_t)v121, (uint64_t)v119, (uint64_t *)&unk_26B196F40);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v80, 1, v132) == 1)
        {
          uint64_t v81 = 0x3E6C696E3CLL;
          unint64_t v82 = 0xE500000000000000;
        }
        else
        {
          uint64_t v81 = sub_24D82BF20();
          unint64_t v82 = v100;
          uint64_t v79 = (uint64_t *)&unk_26B199410;
        }
        sub_24D415F74(v80, v79);
        v137[0] = sub_24D418FB4(v81, v82, v136);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        sub_24D415F74((uint64_t)v121, (uint64_t *)&unk_26B196F40);
        _os_log_impl(&dword_24D3D0000, v72, (os_log_type_t)v133, "📖  %@: registering item deletion %s -> %s", (uint8_t *)v74, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        uint64_t v101 = (uint64_t)v130;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v101, -1, -1);
        uint64_t v102 = v134;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v102, -1, -1);
        MEMORY[0x25332B030](v74, -1, -1);

        uint64_t v46 = (uint64_t)v138;
        uint64_t v68 = v126;
      }
      else
      {

        sub_24D415F74(v69, (uint64_t *)&unk_26B199410);
        sub_24D415F74(v70, (uint64_t *)&unk_26B196F40);
      }
      uint64_t v103 = *(void *)v68;
      char v104 = *(unsigned char *)(v68 + 8);
      uint64_t v105 = (uint64_t)v122;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v131 + 56))(v122, 1, 1, v132);
      swift_beginAccess();
      sub_24D6EAE8C(v105, v103, v104);
      swift_endAccess();
      swift_beginAccess();
      sub_24D813790((uint64_t)v137, v103, v104);
      swift_endAccess();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t result = (void (*)(uint64_t *, void))sub_24DCC91C8();
      if (*v106 != -1)
      {
        ++*v106;
        result(v136, 0);
        swift_release();
        swift_release();
        sub_24D415F74(v68, (uint64_t *)&unk_26B199410);
        uint64_t v53 = v135;
        goto LABEL_24;
      }
      __break(1u);
    }
    else
    {
      char v54 = *(unsigned char *)(v49 + *(int *)(v50 + 48));
      uint64_t v55 = v128;
      uint64_t v56 = *(int *)(v128 + 48);
      uint64_t v57 = v49;
      uint64_t v58 = v127;
      sub_24D3F0BA0(v57, v127, (uint64_t *)&unk_26B199410);
      *(unsigned char *)(v58 + v56) = v54;
      int v59 = *(unsigned __int8 *)(v58 + *(int *)(v55 + 48));
      uint64_t v60 = (uint64_t)v130;
      sub_24D3F0BA0(v58, (uint64_t)v130, (uint64_t *)&unk_26B199410);
      if ((v59 & v45) == 1)
      {
        id v61 = v48;
        uint64_t v62 = sub_24DCC9068();
        os_log_type_t v63 = sub_24DCCA118();
        if (os_log_type_enabled(v62, v63))
        {
          uint64_t v64 = (uint8_t *)swift_slowAlloc();
          uint64_t v65 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v64 = 138412290;
          v136[0] = (uint64_t)v61;
          id v66 = v61;
          uint64_t v60 = (uint64_t)v130;
          sub_24DCCA428();
          void *v65 = v61;

          _os_log_impl(&dword_24D3D0000, v62, v63, "📖  %@: item get updated and we're ask to invalidate the children, reset", v64, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v65, -1, -1);
          MEMORY[0x25332B030](v64, -1, -1);
        }
        else
        {
        }
        uint64_t v97 = (uint64_t)v138;
        unsigned int v98 = v135;

        sub_24D4C24C0();
        sub_24D415F74(v60, (uint64_t *)&unk_26B199410);
        sub_24D415F74((uint64_t)v98, (uint64_t *)&unk_26B196F40);
        uint64_t v99 = v97;
        return (void (*)(uint64_t *, void))sub_24D415F74(v99, (uint64_t *)&unk_26B196F40);
      }
      uint64_t v83 = (uint64_t)v138;
      uint64_t v84 = (uint64_t)v120;
      sub_24D415FD0((uint64_t)v138, (uint64_t)v120, (uint64_t *)&unk_26B196F40);
      uint64_t v85 = v125;
      sub_24D415FD0(v60, v125, (uint64_t *)&unk_26B199410);
      id v86 = v48;
      unsigned int v87 = sub_24DCC9068();
      int v88 = sub_24DCCA118();
      if (os_log_type_enabled(v87, (os_log_type_t)v88))
      {
        LODWORD(v129) = v88;
        uint64_t v89 = swift_slowAlloc();
        uint64_t v90 = (void *)swift_slowAlloc();
        uint64_t v134 = swift_slowAlloc();
        v136[0] = v134;
        *(_DWORD *)uint64_t v89 = 138412802;
        v137[0] = (uint64_t)v86;
        id v91 = v86;
        sub_24DCCA428();
        unint64_t v133 = v90;
        void *v90 = v86;

        *(_WORD *)(v89 + 12) = 2080;
        uint64_t v92 = (uint64_t *)&unk_26B196F40;
        uint64_t v93 = v84;
        uint64_t v94 = (uint64_t)v118;
        sub_24D415FD0(v93, (uint64_t)v118, (uint64_t *)&unk_26B196F40);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v131 + 48))(v94, 1, v132) == 1)
        {
          uint64_t v95 = 0x3E6C696E3CLL;
          unint64_t v96 = 0xE500000000000000;
        }
        else
        {
          uint64_t v95 = sub_24D82BF20();
          unint64_t v96 = v107;
          uint64_t v92 = (uint64_t *)&unk_26B199410;
        }
        sub_24D415F74(v94, v92);
        v137[0] = sub_24D418FB4(v95, v96, v136);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        sub_24D415F74((uint64_t)v120, (uint64_t *)&unk_26B196F40);
        *(_WORD *)(v89 + 22) = 2080;
        uint64_t v108 = v125;
        uint64_t v109 = sub_24D82BF20();
        v137[0] = sub_24D418FB4(v109, v110, v136);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        sub_24D415F74(v108, (uint64_t *)&unk_26B199410);
        _os_log_impl(&dword_24D3D0000, v87, (os_log_type_t)v129, "📖  %@: registering item update %s -> %s", (uint8_t *)v89, 0x20u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        uint64_t v111 = (uint64_t)v133;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v111, -1, -1);
        uint64_t v112 = v134;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v112, -1, -1);
        MEMORY[0x25332B030](v89, -1, -1);

        uint64_t v83 = (uint64_t)v138;
        uint64_t v60 = (uint64_t)v130;
      }
      else
      {

        sub_24D415F74(v84, (uint64_t *)&unk_26B196F40);
        sub_24D415F74(v85, (uint64_t *)&unk_26B199410);
      }
      uint64_t v113 = *(void *)v60;
      char v114 = *(unsigned char *)(v60 + 8);
      uint64_t v115 = (uint64_t)v122;
      sub_24D415FD0(v60, (uint64_t)v122, (uint64_t *)&unk_26B199410);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v131 + 56))(v115, 0, 1, v132);
      swift_beginAccess();
      sub_24D6EAE8C(v115, v113, v114);
      swift_endAccess();
      swift_beginAccess();
      sub_24DC83A98(v113, v114);
      swift_endAccess();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t result = (void (*)(uint64_t *, void))sub_24DCC91C8();
      if (*v116 != -1)
      {
        ++*v116;
        result(v136, 0);
        swift_release();
        swift_release();
        sub_24D415F74(v60, (uint64_t *)&unk_26B199410);
        sub_24D415F74((uint64_t)v135, (uint64_t *)&unk_26B196F40);
        uint64_t v99 = v83;
        return (void (*)(uint64_t *, void))sub_24D415F74(v99, (uint64_t *)&unk_26B196F40);
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24D4BA824(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a2;
  v8[3] = a3;
  v8[4] = a4;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_24D4C7348;
  *(void *)(v9 + 24) = v7;
  swift_retain_n();
  id v10 = a4;
  swift_retain();
  sub_24D3FBC7C((uint64_t)"currentSyncAnchor(completion:)", 30, 2, sub_24D4C72D0, v9, (uint64_t)sub_24D4C72B0, (uint64_t)v8);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24D4BA948(void (*a1)(void *, void))
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24DCC91D8();
  swift_release();
  swift_release();
  uint64_t v2 = sub_24DC9FBB8(&v6, &v7);
  unint64_t v4 = v3 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v5 = (void *)sub_24DCC8B28();
  sub_24D400DCC(v2, v4);
  a1(v5, 0);
}

uint64_t sub_24D4BAAC4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = *MEMORY[0x263EF8340];
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID);
  int v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8);
  if (v5 == 1) {
    goto LABEL_13;
  }
  if (v5 != 2)
  {
    sub_24DCCA978();
    __break(1u);
    goto LABEL_22;
  }
  type metadata accessor for VFSFileTree(0);
  uint64_t v2 = (void *)swift_dynamicCastClassUnconditional();
  swift_retain();
  int v6 = objc_sync_enter(v2);
  if (!v4)
  {
    if (!v6)
    {
      uint64_t v12 = v2[20];
      swift_retain();
      if (!objc_sync_exit(v2))
      {
        swift_release();
        uint64_t v4 = *(void *)(v12 + 24);
        swift_release();
        goto LABEL_13;
      }
LABEL_23:
      sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v2);
    }
LABEL_22:
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v2);
  }
  if (v6) {
    goto LABEL_22;
  }
  uint64_t v7 = v2[20];
  swift_retain();
  if (objc_sync_exit(v2)) {
    goto LABEL_23;
  }
  swift_release();
  uint64_t v4 = *(void *)(v7 + 40);
  char v8 = *(unsigned char *)(v7 + 48);
  swift_release();
  if (v8)
  {
    uint64_t v9 = sub_24DCC8A58();
    id v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    return v10(a1, 1, 1, v9);
  }
LABEL_13:
  uint64_t v23 = v4;
  long long v24 = 0u;
  long long v25 = 0u;
  type metadata accessor for VFSFileTree(0);
  uint64_t v13 = (void *)swift_dynamicCastClassUnconditional();
  swift_retain();
  if (objc_sync_enter(v13)) {
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v13);
  }
  uint64_t v14 = v13[20];
  swift_retain();
  if (objc_sync_exit(v13)) {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v13);
  }
  int v15 = *(_DWORD *)(v14 + 16);
  swift_release();
  swift_release();
  uint64_t v16 = fpfs_openfdbyhandle();
  if ((v16 & 0x80000000) != 0)
  {
    int v18 = MEMORY[0x253327160]();
    uint64_t v19 = (void *)sub_24D90CF14(v18, 0, 0, 0xAu);
    swift_willThrow();
    id v20 = v19;
    sub_24DCC8348();
    sub_24D4C5C60();
    sub_24DCC86A8();

    uint64_t v21 = sub_24DCC8A58();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a1, 1, 1, v21);
  }
  else
  {
    uint64_t v17 = v16;
    sub_24D7C33B4(v16, &v23, v15, 1, a1);
    sub_24D40CB10(v17);
    uint64_t v22 = sub_24DCC8A58();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a1, 0, 1, v22);
  }
}

void sub_24D4BAEFC(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v36 = a6;
  memcpy(__dst, a2, sizeof(__dst));
  unint64_t v12 = sub_24D42FC84(MEMORY[0x263F8EE78]);
  uint64_t v13 = *(void **)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_fpItemID);
  if (v13)
  {
    uint64_t v14 = a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID;
    uint64_t v15 = *(void *)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID);
    char v16 = *(unsigned char *)(v14 + 8);
    id v17 = v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30[0] = v12;
    sub_24D7140E8((uint64_t)v17, v15, v16, isUniquelyReferenced_nonNull_native);

    swift_bridgeObjectRelease();
  }
  sub_24D3F0BA0((uint64_t)a2, (uint64_t)v31, qword_26B199730);
  sub_24D3F0BA0((uint64_t)v31, (uint64_t)v33, qword_26B199730);
  if (sub_24D3F0D6C((uint64_t)v33) != 1 && v34)
  {
    uint64_t v19 = *(void *)a1;
    char v20 = *(unsigned char *)(a1 + 8);
    id v21 = v34;
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    v30[0] = v12;
    sub_24D7140E8((uint64_t)v21, v19, v20, v22);

    swift_bridgeObjectRelease();
  }
  uint64_t v23 = (int *)sub_24DC31CAC(v12);
  swift_bridgeObjectRelease();
  long long v24 = sub_24DAB9E2C((void *)a1, 0, 1, v23);
  swift_bridgeObjectRelease();
  long long v25 = (void *)MEMORY[0x25332B1A0](a5 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  if (v25)
  {
    uint64_t v26 = v25;
    id v27 = objc_msgSend(v25, sel_indexer);

    if (v27)
    {
      objc_msgSend(v27, sel_needsAuthentication);
    }
  }
  memcpy(v30, __dst, sizeof(v30));
  nullsub_1(v30);
  sub_24D3F0BA0((uint64_t)v30, (uint64_t)v32, (uint64_t *)&unk_26B193568);
  sub_24D3ED394((uint64_t)v24);
  if (v7)
  {
  }
  else
  {
    uint64_t v28 = v24;
    MEMORY[0x253327CA0]();
    if (*(void *)((*a7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a7 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_24DCC9C78();
    }
    sub_24DCC9CD8();
    sub_24DCC9C48();
  }
}

uint64_t sub_24D4BB1B4(uint64_t a1, uint64_t a2, int a3)
{
  int v17 = a3;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1923D0);
  MEMORY[0x270FA5388](v4 - 8);
  int v6 = &v16[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_24DCC9328();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = &v16[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_24DCC9398();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = &v16[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  qos_class_self();
  sub_24DCC9308();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    (*(void (**)(unsigned char *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F090], v7);
    sub_24D415F74((uint64_t)v6, qword_26B1923D0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32))(v10, v6, v7);
  }
  sub_24DCC9378();

  return (*(uint64_t (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_24D4BB424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, const void *a11, void *a12)
{
  uint64_t v13 = MEMORY[0x270FA5388](a1);
  unint64_t v155 = v12;
  char v156 = v14;
  LODWORD(v150) = v15;
  uint64_t v149 = v16;
  int v18 = v17;
  char v20 = v19;
  int v157 = v21;
  uint64_t v23 = v22;
  uint64_t v24 = v13;
  uint64_t v154 = a10;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B192390);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v144 = (uint64_t)&v136 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  unint64_t v142 = (char *)&v136 - v28;
  uint64_t v29 = sub_24DCC9078();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v147 = v29;
  uint64_t v148 = v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  unint64_t v145 = (char *)&v136 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  long long v136 = (char *)&v136 - v33;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v34 - 8);
  unint64_t v141 = (char *)&v136 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986BBD8);
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v143 = (uint64_t)&v136 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v137 = (uint64_t)&v136 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  unint64_t v153 = (uint64_t *)((char *)&v136 - v42);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v146 = (uint64_t)&v136 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v151 = (uint64_t)&v136 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v49 = (char **)((char *)&v136 - v48);
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  uint64_t v52 = (char *)&v136 + *(int *)(v50 + 48) - v51;
  unint64_t v158 = (char **)((char *)&v136 - v51);
  sub_24D415FD0(v24, (uint64_t)&v136 - v51, (uint64_t *)&unk_26B199410);
  uint64_t v152 = v52;
  memcpy(v52, v23, 0x350uLL);
  uint64_t v53 = (char *)v49 + *(int *)(v36 + 48);
  char v54 = v157;
  int v157 = v49;
  sub_24D415FD0((uint64_t)v54, (uint64_t)v49, (uint64_t *)&unk_26B199410);
  unint64_t v139 = v53;
  memcpy(v53, v20, 0x350uLL);
  unint64_t v55 = sub_24D42FC84(MEMORY[0x263F8EE78]);
  uint64_t v140 = v20;
  id v138 = v18;
  if (v18)
  {
    id v56 = v18;
    sub_24D400E24((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3F1AAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401000);
    sub_24D400E24((uint64_t)v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3F1AAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401000);
    id v57 = v56;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v162[0] = v55;
    sub_24D7140E8((uint64_t)v57, v149, v150, isUniquelyReferenced_nonNull_native);
    unint64_t v55 = v162[0];

    swift_bridgeObjectRelease();
  }
  else
  {
    sub_24D400E24((uint64_t)v23, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3F1AAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401000);
    sub_24D400E24((uint64_t)v20, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3F1AAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401000);
  }
  uint64_t v59 = v151;
  uint64_t v60 = (void *)(v151 + *(int *)(v36 + 48));
  sub_24D415FD0((uint64_t)v158, v151, (uint64_t *)&unk_26B199410);
  memcpy(v60, v23, 0x350uLL);
  sub_24D3F0BA0((uint64_t)v23, (uint64_t)v164, qword_26B199730);
  sub_24D3F0BA0((uint64_t)v164, (uint64_t)v167, qword_26B199730);
  if (sub_24D3F0D6C((uint64_t)v167) == 1)
  {
    sub_24D415F74(v59, (uint64_t *)&unk_26B199410);
  }
  else
  {
    id v61 = v168;
    id v62 = v168;
    sub_24D415F74(v59, (uint64_t *)&unk_26B199410);
    if (v61)
    {
      uint64_t v63 = v146;
      uint64_t v64 = (void *)(v146 + *(int *)(v36 + 48));
      sub_24D415FD0((uint64_t)v158, v146, (uint64_t *)&unk_26B199410);
      memcpy(v64, v23, 0x350uLL);
      uint64_t v65 = *(void *)v63;
      char v66 = *(unsigned char *)(v63 + 8);
      sub_24D415F74(v63, (uint64_t *)&unk_26B199410);
      id v67 = v62;
      char v68 = swift_isUniquelyReferenced_nonNull_native();
      v162[0] = v55;
      sub_24D7140E8((uint64_t)v67, v65, v66, v68);
      unint64_t v55 = v162[0];

      swift_bridgeObjectRelease();
    }
  }
  uint64_t v69 = (int *)sub_24DC31CAC(v55);
  swift_bridgeObjectRelease();
  uint64_t v70 = v158;
  id v71 = sub_24DAB9E2C(v158, 0, 1, v69);
  swift_bridgeObjectRelease();
  uint64_t v72 = (char *)v153 + *(int *)(v36 + 48);
  uint64_t v73 = (uint64_t)v70;
  uint64_t v74 = (uint64_t)v153;
  sub_24D415FD0(v73, (uint64_t)v153, (uint64_t *)&unk_26B199410);
  unsigned int v75 = v152;
  memcpy(v162, v152, sizeof(v162));
  memcpy(v72, v152, 0x350uLL);
  memcpy(v161, v75, sizeof(v161));
  nullsub_1(v161);
  sub_24D3F0BA0((uint64_t)v161, (uint64_t)&v166, (uint64_t *)&unk_26B193568);
  sub_24D400E24((uint64_t)v162, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3F1AAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401000);
  id v76 = v155;
  sub_24D3ED394((uint64_t)v71);
  if (!v76)
  {
    sub_24D400E24((uint64_t)v162, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3E3624, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401218);
    sub_24D415F74(v74, (uint64_t *)&unk_26B199410);
    if (!objc_msgSend(v71, sel_isContainer)
      || (objc_msgSend(v71, sel_isContainerPristine) & 1) != 0)
    {
      uint64_t v79 = v144;
      sub_24D415FD0((uint64_t)a11, v144, &qword_26B192390);
      uint64_t v81 = v147;
      uint64_t v80 = v148;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v79, 1, v147) == 1)
      {

        sub_24D415F74((uint64_t)v157, &qword_26986BBD8);
        sub_24D415F74((uint64_t)v158, &qword_26986BBD8);
        uint64_t v77 = &qword_26B192390;
        unint64_t v78 = (void *)v79;
        return sub_24D415F74((uint64_t)v78, v77);
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v145, v79, v81);
      unint64_t v82 = v71;
      uint64_t v83 = sub_24DCC9068();
      os_log_type_t v84 = sub_24DCCA108();
      if (os_log_type_enabled(v83, v84))
      {
        uint64_t v85 = (uint8_t *)swift_slowAlloc();
        unint64_t v155 = (void *)swift_slowAlloc();
        char v156 = v85;
        *(_DWORD *)uint64_t v85 = 138543362;
        v160[0] = v82;
        id v86 = v82;
        sub_24DCCA428();
        unsigned int v87 = v155;
        *unint64_t v155 = v82;

        uint64_t v81 = v147;
        os_log_type_t v88 = v84;
        uint64_t v89 = v156;
        _os_log_impl(&dword_24D3D0000, v83, v88, "Discarding container %{public}@ from appLibraries", v156, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v87, -1, -1);
        MEMORY[0x25332B030](v89, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v148 + 8))(v145, v81);
LABEL_22:
      sub_24D415F74((uint64_t)v157, &qword_26986BBD8);
      unint64_t v78 = v158;
      uint64_t v77 = &qword_26986BBD8;
      return sub_24D415F74((uint64_t)v78, v77);
    }
    uint64_t v152 = a11;
    unint64_t v153 = (uint64_t *)(a9 | 1);
    unint64_t v90 = sub_24D42FC84(MEMORY[0x263F8EE78]);
    if (v138)
    {
      id v91 = v138;
      char v92 = swift_isUniquelyReferenced_nonNull_native();
      v160[0] = v90;
      sub_24D7140E8((uint64_t)v91, v149, v150, v92);
      unint64_t v90 = v160[0];

      swift_bridgeObjectRelease();
    }
    uint64_t v93 = v137;
    uint64_t v154 = v36;
    unint64_t v155 = v71;
    uint64_t v94 = (void *)(v137 + *(int *)(v36 + 48));
    sub_24D415FD0((uint64_t)v157, v137, (uint64_t *)&unk_26B199410);
    uint64_t v95 = v140;
    memcpy(v94, v140, 0x350uLL);
    unint64_t v96 = v95;
    sub_24D3F0BA0((uint64_t)v95, (uint64_t)v163, qword_26B199730);
    sub_24D3F0BA0((uint64_t)v163, (uint64_t)v169, qword_26B199730);
    if (sub_24D3F0D6C((uint64_t)v169) == 1)
    {
      sub_24D415F74(v93, (uint64_t *)&unk_26B199410);
    }
    else
    {
      id v97 = v170;
      id v98 = v170;
      sub_24D415F74(v93, (uint64_t *)&unk_26B199410);
      if (v97)
      {
        uint64_t v99 = v146;
        unint64_t v100 = (void *)(v146 + *(int *)(v154 + 48));
        sub_24D415FD0((uint64_t)v157, v146, (uint64_t *)&unk_26B199410);
        memcpy(v100, v96, 0x350uLL);
        uint64_t v101 = *(void *)v99;
        char v102 = *(unsigned char *)(v99 + 8);
        sub_24D415F74(v99, (uint64_t *)&unk_26B199410);
        id v103 = v98;
        char v104 = swift_isUniquelyReferenced_nonNull_native();
        v160[0] = v90;
        uint64_t v105 = v147;
        sub_24D7140E8((uint64_t)v103, v101, v102, v104);
        unint64_t v90 = v160[0];

        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
    }
    uint64_t v105 = v147;
LABEL_26:
    uint64_t v106 = (int *)sub_24DC31CAC(v90);
    swift_bridgeObjectRelease();
    unint64_t v107 = v157;
    uint64_t v108 = sub_24DAB9E2C(v157, 0, 1, v106);
    swift_bridgeObjectRelease();
    uint64_t v109 = (void *)(v143 + *(int *)(v154 + 48));
    sub_24D415FD0((uint64_t)v107, v143, (uint64_t *)&unk_26B199410);
    memcpy(v160, v139, sizeof(v160));
    memcpy(v109, v139, 0x350uLL);
    sub_24D400E24((uint64_t)v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3F1AAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401000);
    id v110 = objc_msgSend(v155, sel_fileURL);
    if (v110)
    {
      uint64_t v111 = v110;
      uint64_t v112 = (uint64_t)v141;
      sub_24DCC89E8();

      uint64_t v113 = sub_24DCC8A58();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v113 - 8) + 56))(v112, 0, 1, v113);
    }
    else
    {
      uint64_t v114 = sub_24DCC8A58();
      uint64_t v112 = (uint64_t)v141;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v114 - 8) + 56))(v141, 1, 1, v114);
    }
    uint64_t v115 = (uint64_t)v142;
    memcpy(v159, v160, sizeof(v159));
    nullsub_1(v159);
    sub_24D3F0BA0((uint64_t)v159, (uint64_t)&v165, (uint64_t *)&unk_26B193568);
    sub_24D3ED394((uint64_t)v108);
    sub_24D415F74(v112, (uint64_t *)&unk_26B199050);
    sub_24D400E24((uint64_t)v160, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3E3624, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401218);
    sub_24D415F74(v143, (uint64_t *)&unk_26B199410);
    sub_24D415FD0((uint64_t)v152, v115, &qword_26B192390);
    uint64_t v117 = v148;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v148 + 48))(v115, 1, v105) == 1)
    {
      sub_24D415F74(v115, &qword_26B192390);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v117 + 32))(v136, v115, v105);
      uint64_t v118 = v155;
      uint64_t v119 = v108;
      unint64_t v120 = v118;
      long long v121 = v119;
      unint64_t v122 = sub_24DCC9068();
      os_log_type_t v123 = sub_24DCCA108();
      int v124 = v123;
      if (os_log_type_enabled(v122, v123))
      {
        uint64_t v125 = swift_slowAlloc();
        LODWORD(v154) = v124;
        uint64_t v126 = v125;
        uint64_t v127 = (void *)swift_slowAlloc();
        uint64_t v152 = v127;
        *(_DWORD *)uint64_t v126 = 138543618;
        char v156 = 0;
        uint64_t v150 = v126 + 12;
        uint64_t v151 = v126 + 4;
        uint64_t v171 = v120;
        unint64_t v153 = &v172;
        uint64_t v128 = v120;
        sub_24DCCA428();
        void *v127 = v120;

        *(_WORD *)(v126 + 12) = 2114;
        uint64_t v171 = v121;
        uint64_t v129 = v121;
        uint64_t v130 = v147;
        sub_24DCCA428();
        uint64_t v131 = v152;
        *((void *)v152 + 1) = v121;

        uint64_t v105 = v130;
        _os_log_impl(&dword_24D3D0000, v122, (os_log_type_t)v154, "Patching container %{public}@ with %{public}@", (uint8_t *)v126, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v131, -1, -1);
        MEMORY[0x25332B030](v126, -1, -1);
      }
      else
      {

        unint64_t v122 = v120;
      }

      (*(void (**)(char *, uint64_t))(v148 + 8))(v136, v105);
    }
    uint64_t v132 = self;
    id v133 = v155;
    id v134 = objc_msgSend(v132, sel_appLibraryFromContainerItem_documentsItem_, v155, v108);
    if (v134)
    {
      id v135 = v134;
      if (objc_msgSend(v134, sel_isValidAppLibrary))
      {
        id v135 = v135;
        MEMORY[0x253327CA0]();
        if (*(void *)((*a12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_24DCC9C78();
        }
        sub_24DCC9CD8();
        sub_24DCC9C48();
      }
    }
    else
    {
    }
    goto LABEL_22;
  }
  sub_24D400E24((uint64_t)v162, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D3E3624, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, uint64_t))sub_24D401218);

  sub_24D415F74((uint64_t)v157, &qword_26986BBD8);
  sub_24D415F74((uint64_t)v158, &qword_26986BBD8);
  uint64_t v77 = (uint64_t *)&unk_26B199410;
  unint64_t v78 = (void *)v74;
  return sub_24D415F74((uint64_t)v78, v77);
}

uint64_t sub_24D4BC48C(uint64_t a1, NSObject *a2, uint64_t a3, void (*a4)(void, void, void, void, id), uint64_t a5)
{
  int v6 = v5;
  os_log_type_t v123 = a4;
  uint64_t v124 = a5;
  uint64_t v119 = a3;
  os_log_t v117 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  uint64_t v115 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v116 = v9;
  uint64_t v118 = (void *)((char *)v109 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v125 = sub_24DCC9078();
  uint64_t v10 = *(void *)(v125 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v125);
  uint64_t v113 = v12;
  uint64_t v114 = (char *)v109 - (((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v109 - v13;
  if (qword_26B194010 != -1) {
    swift_once();
  }
  id v15 = (id)qword_26B1A22E8;
  uint64_t v16 = a1;
  uint64_t v17 = sub_24DCC8B68();
  unint64_t v19 = v18;
  uint64_t v20 = sub_24DCC8B68();
  unint64_t v22 = v21;
  char v23 = sub_24D401DDC(v17, v19, v20, v21);
  sub_24D400DCC(v20, v22);
  sub_24D400DCC(v17, v19);

  if (v23) {
    goto LABEL_7;
  }
  if (qword_26B194018 != -1) {
    swift_once();
  }
  id v24 = (id)qword_26B1A2378;
  uint64_t v25 = sub_24DCC8B68();
  unint64_t v27 = v26;
  uint64_t v28 = sub_24DCC8B68();
  unint64_t v30 = v29;
  char v31 = sub_24D401DDC(v25, v27, v28, v29);
  sub_24D400DCC(v28, v30);
  sub_24D400DCC(v25, v27);

  if (v31)
  {
LABEL_7:
    uint64_t v32 = 0;
    uint64_t v33 = v16;
  }
  else
  {
    sub_24DCC86D8();
    swift_allocObject();
    sub_24DCC86C8();
    type metadata accessor for PaginatedContinuation();
    uint64_t v48 = sub_24DCC8B68();
    unint64_t v50 = v49;
    sub_24D4C3994(&qword_26986BBD0, (void (*)(uint64_t))type metadata accessor for PaginatedContinuation);
    sub_24DCC86B8();
    swift_release();
    sub_24D400DCC(v48, v50);
    uint64_t v33 = v16;
    uint64_t v32 = (char *)v127;
  }
  uint64_t v121 = v10;
  uint64_t v36 = *(void (**)(void, void, void))(v10 + 16);
  uint64_t v34 = v10 + 16;
  uint64_t v35 = v36;
  uint64_t v37 = v125;
  v36(v14, &v6[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_logger], v125);
  swift_retain_n();
  uint64_t v38 = v6;
  uint64_t v39 = sub_24DCC9068();
  os_log_type_t v40 = sub_24DCCA118();
  BOOL v41 = os_log_type_enabled(v39, v40);
  unint64_t v122 = v14;
  if (v41)
  {
    v109[1] = v34;
    uint64_t v112 = v35;
    uint64_t v120 = v33;
    uint64_t v42 = v32;
    uint64_t v43 = swift_slowAlloc();
    uint64_t v44 = (void *)swift_slowAlloc();
    uint64_t v111 = swift_slowAlloc();
    v129[0] = v111;
    *(_DWORD *)uint64_t v43 = 138412546;
    uint64_t v127 = (uint64_t)v38;
    uint64_t v45 = v38;
    id v110 = &v128;
    sub_24DCCA428();
    *uint64_t v44 = v38;

    *(_WORD *)(v43 + 12) = 2080;
    if (v42)
    {
      uint64_t v127 = 979789423;
      unint64_t v128 = 0xE400000000000000;
      uint64_t v126 = *((void *)v42 + 2);
      swift_retain();
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v46 = v127;
      unint64_t v47 = v128;
    }
    else
    {
      uint64_t v46 = 0x6C616974696E693CLL;
      unint64_t v47 = 0xE90000000000003ELL;
    }
    uint64_t v127 = sub_24D418FB4(v46, v47, v129);
    sub_24DCCA428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v39, v40, "📖  %@: enumerating page %s", (uint8_t *)v43, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v44, -1, -1);
    uint64_t v51 = v111;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v51, -1, -1);
    MEMORY[0x25332B030](v43, -1, -1);

    uint64_t v37 = v125;
    uint64_t v14 = v122;
    uint64_t v32 = v42;
    uint64_t v33 = v120;
    uint64_t v35 = v112;
  }
  else
  {
    swift_release_n();
  }
  if ((v38[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated] & 1) != 0
    || (uint64_t v52 = MEMORY[0x25332B1A0](&v38[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend])) == 0)
  {
    uint64_t v83 = v37;
    type metadata accessor for NSFileProviderError(0);
    v129[0] = -1002;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4C3994(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    os_log_type_t v84 = (void *)v127;
    uint64_t v85 = v38;
    swift_retain_n();
    id v86 = v84;
    unsigned int v87 = v32;
    os_log_type_t v88 = v85;
    id v89 = v86;
    unint64_t v90 = sub_24DCC9068();
    int v91 = sub_24DCCA128();
    if (os_log_type_enabled(v90, (os_log_type_t)v91))
    {
      os_log_t v117 = v90;
      LODWORD(v119) = v91;
      uint64_t v92 = swift_slowAlloc();
      uint64_t v93 = (void *)swift_slowAlloc();
      uint64_t v120 = swift_slowAlloc();
      v129[0] = v120;
      *(_DWORD *)uint64_t v92 = 138412802;
      uint64_t v127 = (uint64_t)v88;
      uint64_t v94 = v88;
      sub_24DCCA428();
      uint64_t v118 = v93;
      void *v93 = v88;

      *(_WORD *)(v92 + 12) = 2080;
      if (v87)
      {
        uint64_t v127 = 979789423;
        unint64_t v128 = 0xE400000000000000;
        uint64_t v126 = *((void *)v87 + 2);
        swift_retain();
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v95 = v127;
        unint64_t v96 = v128;
      }
      else
      {
        uint64_t v95 = 0x6C616974696E693CLL;
        unint64_t v96 = 0xE90000000000003ELL;
      }
      uint64_t v127 = sub_24D418FB4(v95, v96, v129);
      sub_24DCCA428();
      uint64_t v114 = v87;
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v92 + 22) = 2112;
      uint64_t v127 = (uint64_t)v89;
      sub_24D4C3994(&qword_26B193F40, type metadata accessor for NSFileProviderError);
      id v99 = v89;
      uint64_t v100 = sub_24DCCAD98();
      uint64_t v97 = v121;
      if (v100)
      {
        uint64_t v101 = (void *)v100;
      }
      else
      {
        uint64_t v101 = (void *)swift_allocError();
        *char v102 = v127;
      }
      id v103 = (void *)sub_24DCC8818();

      id v104 = objc_msgSend(v103, sel_fp_prettyDescription);
      uint64_t v127 = (uint64_t)v104;
      sub_24DCCA428();
      uint64_t v105 = (uint64_t)v118;
      v118[1] = v104;

      os_log_t v106 = v117;
      _os_log_impl(&dword_24D3D0000, v117, (os_log_type_t)v119, "📖  %@: enumerating page %s failed: %@", (uint8_t *)v92, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v105, -1, -1);
      uint64_t v107 = v120;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v107, -1, -1);
      MEMORY[0x25332B030](v92, -1, -1);

      uint64_t v98 = v125;
    }
    else
    {

      swift_release_n();
      uint64_t v97 = v121;
      uint64_t v98 = v83;
    }
    id v108 = v89;
    v123(MEMORY[0x263F8EE78], 0, 0, 0, v89);
    swift_release();

    return (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v122, v98);
  }
  else
  {
    uint64_t v112 = (void (*)(void, void, void))v52;
    uint64_t v111 = swift_allocObject();
    uint64_t v53 = v114;
    v35(v114, v14, v37);
    uint64_t v54 = v121;
    uint64_t v55 = v37;
    unint64_t v56 = (*(unsigned __int8 *)(v121 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80);
    unint64_t v57 = ((unint64_t)v113 + v56 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v58 = (v57 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v120 = v33;
    uint64_t v59 = swift_allocObject();
    *(void *)(v59 + 16) = v112;
    (*(void (**)(unint64_t, char *, uint64_t))(v54 + 32))(v59 + v56, v53, v55);
    *(void *)(v59 + v57) = v38;
    *(void *)(v59 + v58) = v32;
    uint64_t v60 = (void *)(v59 + ((v58 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v61 = v124;
    *uint64_t v60 = v123;
    v60[1] = v61;
    uint64_t v113 = sub_24D4C39E0;
    uint64_t v114 = v32;
    uint64_t v62 = v111;
    *(void *)(v111 + 16) = sub_24D4C39E0;
    *(void *)(v62 + 24) = v59;
    id v110 = (unint64_t *)v38;
    uint64_t v63 = v62;
    uint64_t v64 = (uint64_t)v118;
    sub_24D415FD0((uint64_t)v117, (uint64_t)v118, (uint64_t *)&unk_26B196F40);
    unint64_t v65 = (*(unsigned __int8 *)(v115 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v115 + 80);
    unint64_t v66 = (v116 + v65 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v67 = (v66 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v68 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v69 = (v68 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v70 = swift_allocObject();
    *(void *)(v70 + 16) = v63;
    *(void *)(v70 + 24) = v114;
    sub_24D3F0BA0(v64, v70 + v65, (uint64_t *)&unk_26B196F40);
    id v71 = v110;
    *(void *)(v70 + v66) = v110;
    uint64_t v72 = v119;
    uint64_t v73 = (void *)v120;
    *(void *)(v70 + v67) = v120;
    *(void *)(v70 + v68) = v72;
    uint64_t v74 = (void *)(v70 + v69);
    uint64_t v75 = v124;
    *uint64_t v74 = v123;
    v74[1] = v75;
    id v76 = v112;
    *(void *)(v70 + ((v69 + 23) & 0xFFFFFFFFFFFFFFF8)) = v112;
    uint64_t v77 = v71;
    swift_retain_n();
    swift_retain_n();
    id v78 = v76;
    swift_retain_n();
    uint64_t v79 = v77;
    uint64_t v80 = v78;
    swift_retain();
    id v81 = v73;
    sub_24D6B7B34((uint64_t)"enumerateItems(fromPage:selfItem:suggestedPageSize:reply:)", 58, 2, (uint64_t)sub_24D4C39E8, v70, v80, (void (*)(id, void, void, uint64_t))v113, v59);
    swift_release();

    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v121 + 8))(v122, v125);
    return swift_release();
  }
}

uint64_t sub_24D4BD17C(void *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v42 = a7;
  uint64_t v43 = a8;
  int v38 = a4;
  uint64_t v37 = a3;
  uint64_t v36 = a2;
  id v50 = a1;
  uint64_t v41 = a10;
  uint64_t v39 = a9;
  uint64_t v46 = sub_24DCC92F8();
  uint64_t v49 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v47 = *(void *)(v14 - 8);
  uint64_t v48 = v14;
  MEMORY[0x270FA5388](v14);
  os_log_type_t v40 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC9078();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = *(void *)(a5 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a6, v16);
  unint64_t v20 = (*(unsigned __int8 *)(v17 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v21 = (v18 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = v50;
  *(void *)(v23 + 24) = a2;
  uint64_t v24 = v37;
  *(void *)(v23 + 32) = v37;
  LOBYTE(v18) = v38 & 1;
  *(unsigned char *)(v23 + 40) = v38 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v23 + v20, v19, v16);
  uint64_t v25 = v42;
  uint64_t v26 = v43;
  *(void *)(v23 + v21) = v42;
  *(void *)(v23 + v22) = v26;
  unint64_t v27 = (void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v28 = v41;
  *unint64_t v27 = v39;
  v27[1] = v28;
  aBlock[4] = sub_24D4C5B4C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D3D2E94;
  aBlock[3] = &block_descriptor_92;
  unint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  sub_24D4C5C00(v50, v36, v24, v18);
  id v30 = v25;
  swift_retain();
  char v31 = v40;
  sub_24DCC9348();
  uint64_t v51 = MEMORY[0x263F8EE78];
  sub_24D4C3994((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
  sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
  uint64_t v33 = v45;
  uint64_t v32 = v46;
  sub_24DCCA5B8();
  MEMORY[0x2533282B0](0, v31, v33, v29);
  _Block_release(v29);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v32);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v31, v48);
  return swift_release();
}

void sub_24D4BD5C0(unint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, void *a6, uint64_t a7, void (*a8)(void, void, void, void, void), uint64_t a9)
{
  uint64_t v12 = a3;
  v56[1] = *MEMORY[0x263EF8340];
  if ((a4 & 1) == 0)
  {
    swift_retain_n();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    id v15 = a6;
    uint64_t v16 = sub_24DCC9068();
    os_log_type_t v17 = sub_24DCCA118();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v46 = v16;
      os_log_type_t v47 = v17;
      uint64_t v51 = a8;
      uint64_t v18 = swift_slowAlloc();
      unint64_t v19 = (void *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      v56[0] = v49;
      *(_DWORD *)uint64_t v18 = 138413314;
      uint64_t __src = (uint64_t)v15;
      id v20 = v15;
      sub_24DCCA428();
      *unint64_t v19 = v15;

      *(_WORD *)(v18 + 12) = 2080;
      if (a7)
      {
        uint64_t __src = 979789423;
        unint64_t v54 = 0xE400000000000000;
        v55[0] = *(void *)(a7 + 16);
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v21 = 979789423;
        unint64_t v22 = 0xE400000000000000;
      }
      else
      {
        uint64_t v21 = 0x6C616974696E693CLL;
        unint64_t v22 = 0xE90000000000003ELL;
      }
      uint64_t __src = sub_24D418FB4(v21, v22, v56);
      sub_24DCCA428();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 22) = 2048;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v37 = sub_24DCCA9C8();
        swift_bridgeObjectRelease_n();
      }
      else
      {
        uint64_t v37 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRelease();
      }
      uint64_t __src = v37;
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 32) = 2080;
      if (a2)
      {
        uint64_t __src = 0x207478656E20;
        unint64_t v54 = 0xE600000000000000;
        v55[0] = 979789423;
        v55[1] = 0xE400000000000000;
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v38 = 0x207478656E20;
        unint64_t v39 = 0xE600000000000000;
      }
      else
      {
        uint64_t v38 = 0;
        unint64_t v39 = 0xE000000000000000;
      }
      sub_24D418FB4(v38, v39, v56);
      sub_24DCCA428();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 42) = 2048;
      uint64_t __src = v12;
      sub_24DCCA428();
      _os_log_impl(&dword_24D3D0000, v46, v47, "📖  %@: enumerating page %s done: %ld items%s anchor:%llu", (uint8_t *)v18, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v19, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v49, -1, -1);
      MEMORY[0x25332B030](v18, -1, -1);

      a8 = v51;
      if (!a2) {
        goto LABEL_21;
      }
    }
    else
    {
      swift_release_n();
      swift_release_n();

      swift_bridgeObjectRelease_n();
      if (!a2)
      {
LABEL_21:
        uint64_t v36 = 0;
        goto LABEL_22;
      }
    }
    uint64_t v32 = v12;
    sub_24DCC8718();
    swift_allocObject();
    swift_retain();
    sub_24DCC8708();
    sub_24DCC86E8();
    uint64_t __src = a2;
    type metadata accessor for PaginatedContinuation();
    sub_24D4C3994(&qword_26986BBE0, (void (*)(uint64_t))type metadata accessor for PaginatedContinuation);
    uint64_t v33 = sub_24DCC86F8();
    unint64_t v35 = v34;
    uint64_t v36 = (void *)sub_24DCC8B28();
    swift_release();
    swift_release();
    sub_24D400DCC(v33, v35);
    uint64_t v12 = v32;
LABEL_22:
    uint64_t __src = v12;
    uint64_t v41 = sub_24DC9FBB8(&__src, &v54);
    unint64_t v43 = v42 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v44 = (void *)sub_24DCC8B28();
    sub_24D400DCC(v41, v43);
    a8(a1, v36, v44, 0, 0);

    swift_release();
    return;
  }
  sub_24D4C5C00((id)a1, a2, a3, 1);
  sub_24D4C5C00((id)a1, a2, v12, 1);
  swift_retain();
  id v23 = a6;
  sub_24D4C5C00((id)a1, a2, v12, 1);
  id v24 = v23;
  swift_retain();
  uint64_t v25 = sub_24DCC9068();
  os_log_type_t v26 = sub_24DCCA128();
  if (os_log_type_enabled(v25, v26))
  {
    log = v25;
    os_log_type_t v48 = v26;
    uint64_t v27 = swift_slowAlloc();
    uint64_t v28 = (void *)swift_slowAlloc();
    uint64_t v50 = swift_slowAlloc();
    v55[0] = v50;
    *(_DWORD *)uint64_t v27 = 138412802;
    uint64_t __src = (uint64_t)v24;
    id v29 = v24;
    sub_24DCCA428();
    *uint64_t v28 = v24;

    *(_WORD *)(v27 + 12) = 2080;
    if (a7)
    {
      uint64_t __src = 979789423;
      unint64_t v54 = 0xE400000000000000;
      v56[0] = *(void *)(a7 + 16);
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v30 = 979789423;
      unint64_t v31 = 0xE400000000000000;
    }
    else
    {
      uint64_t v30 = 0x6C616974696E693CLL;
      unint64_t v31 = 0xE90000000000003ELL;
    }
    sub_24D418FB4(v30, v31, v55);
    sub_24DCCA428();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 22) = 2112;
    swift_getErrorValue();
    uint64_t __src = (uint64_t)sub_24DBA2828(v52);
    sub_24DCCA428();
    v28[1] = __src;
    sub_24D4C5B00((void *)a1, a2, v12, 1);
    sub_24D4C5B00((void *)a1, a2, v12, 1);
    _os_log_impl(&dword_24D3D0000, log, v48, "📖  %@: enumerating page %s failed: %@", (uint8_t *)v27, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v28, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v50, -1, -1);
    MEMORY[0x25332B030](v27, -1, -1);
  }
  else
  {
    swift_release_n();

    sub_24D4C5B00((void *)a1, a2, v12, 1);
    sub_24D4C5B00((void *)a1, a2, v12, 1);
  }
  id v40 = (id)a1;
  a8(MEMORY[0x263F8EE78], 0, 0, 0, a1);
  sub_24D4C5B00((void *)a1, a2, v12, 1);
  sub_24D4C5B00((void *)a1, a2, v12, 1);
}

uint64_t sub_24D4BDF04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v61 = a7;
  uint64_t v62 = a8;
  unint64_t v58 = a5;
  uint64_t v59 = a6;
  uint64_t v56 = a4;
  uint64_t v52 = a3;
  uint64_t v60 = a10;
  uint64_t v57 = a9;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v55 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v54 = (uint64_t)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 24);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = v14;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = sub_24D4C4594;
  v18[3] = v16;
  v18[4] = v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_24D4C45A0;
  *(void *)(v19 + 24) = v18;
  swift_beginAccess();
  *(void *)(a2 + 16) = sub_24D4C45BC;
  *(void *)(a2 + 24) = v19;
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v64 = swift_allocBox();
  uint64_t v21 = v20;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  uint64_t v63 = a1;
  uint64_t v53 = *(void *)(a1 + 16);
  swift_beginAccess();
  uint64_t v49 = a2;
  uint64_t v24 = *(void *)(a2 + 16);
  uint64_t v51 = *(void *)(a2 + 24);
  uint64_t v23 = v51;
  uint64_t v25 = swift_allocObject();
  uint64_t v50 = v25;
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v23;
  uint64_t v26 = v54;
  sub_24D415FD0(v56, v54, (uint64_t *)&unk_26B196F40);
  unint64_t v27 = (*(unsigned __int8 *)(v55 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v55 + 80);
  unint64_t v28 = (v13 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v31 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v64;
  *(void *)(v35 + 16) = v52;
  *(void *)(v35 + 24) = v36;
  sub_24D3F0BA0(v26, v35 + v27, (uint64_t *)&unk_26B196F40);
  uint64_t v37 = v62;
  *(void *)(v35 + v28) = v63;
  uint64_t v38 = v58;
  unint64_t v39 = v59;
  *(void *)(v35 + v29) = v58;
  *(void *)(v35 + v30) = v39;
  *(void *)(v35 + v31) = v61;
  id v40 = (void *)(v35 + v32);
  uint64_t v41 = v57;
  *id v40 = v37;
  v40[1] = v41;
  *(void *)(v35 + v33) = v49;
  uint64_t v42 = v60;
  *(void *)(v35 + v34) = v60;
  uint64_t v43 = swift_allocObject();
  uint64_t v44 = v50;
  *(void *)(v43 + 16) = sub_24D4C73A0;
  *(void *)(v43 + 24) = v44;
  swift_retain();
  swift_retain();
  swift_retain();
  id v45 = v38;
  id v46 = v39;
  swift_retain();
  swift_retain();
  id v47 = v42;
  swift_retain();
  sub_24D3FBC7C((uint64_t)"enumerateItems(fromPage:selfItem:suggestedPageSize:reply:)", 58, 2, sub_24D4C4A74, v43, (uint64_t)sub_24D4C4980, v35);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D4BE358(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, unsigned char *a5, void *a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, char *a11)
{
  id v150 = a8;
  uint64_t v144 = a7;
  unint64_t v145 = a6;
  int v157 = a5;
  unint64_t v155 = a4;
  uint64_t v149 = a3;
  uint64_t v154 = a2;
  unint64_t v153 = a11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B192390);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v152 = (char *)&v138 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v151 = (uint64_t)&v138 - v19;
  MEMORY[0x270FA5388](v18);
  char v156 = (char *)&v138 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v148 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v23 = (char *)&v138 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  uint64_t v25 = MEMORY[0x270FA5388](v24 - 8);
  unint64_t v27 = (char *)&v138 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  unint64_t v30 = (char *)&v138 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  unint64_t v33 = (char *)&v138 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v138 - v34;
  uint64_t v36 = swift_projectBox();
  uint64_t v147 = a10;
  BOOL v37 = a1 == 0;
  uint64_t v154 = a1;
  uint64_t v146 = a10 + 16;
  if (a1)
  {
    uint64_t v171 = MEMORY[0x263F8EE78];
    id v38 = v158;
    unint64_t v39 = v155;
    id v40 = v152;
    uint64_t v41 = (uint64_t)v157;
LABEL_3:
    uint64_t v42 = sub_24DCC8A58();
    uint64_t v43 = v151;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v151, 1, 1, v42);
    uint64_t v44 = 0;
    uint64_t v45 = (uint64_t)v156;
LABEL_4:
    sub_24D4BAAC4(v45);
    sub_24D415F74(v43, (uint64_t *)&unk_26B199050);
    goto LABEL_5;
  }
  unint64_t v141 = v30;
  uint64_t v142 = v36;
  unint64_t v139 = v27;
  uint64_t v140 = v23;
  id v138 = v17;
  int v143 = 1;
  sub_24D415FD0(v149, (uint64_t)v33, (uint64_t *)&unk_26B196F40);
  uint64_t v52 = v148;
  uint64_t v53 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v148 + 48);
  if (v53(v33, 1, v21) == 1)
  {
    uint64_t v54 = *(void *)(*((void *)v155 + 2) + 32);
    char v55 = v157[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8];
    uint64_t v166 = *(void *)&v157[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID];
    char v167 = v55;
    uint64_t v56 = *(void (**)(uint64_t *, uint64_t))(*(void *)v54 + 240);
    swift_retain();
    id v57 = v158;
    v56(&v166, 1);
    swift_release();
    uint64_t v58 = (uint64_t)v33;
    id v38 = v57;
    sub_24D415F74(v58, (uint64_t *)&unk_26B196F40);
    id v59 = v150;
    if (v57) {
      return;
    }
  }
  else
  {
    sub_24D3F0BA0((uint64_t)v33, (uint64_t)v35, (uint64_t *)&unk_26B199410);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v35, 0, 1, v21);
    id v38 = v158;
    id v59 = v150;
  }
  uint64_t v81 = v142;
  swift_beginAccess();
  sub_24D4C4A7C((uint64_t)v35, v81);
  swift_beginAccess();
  uint64_t v82 = v81;
  uint64_t v83 = (uint64_t)v141;
  sub_24D415FD0(v82, (uint64_t)v141, (uint64_t *)&unk_26B196F40);
  if (v53((char *)v83, 1, v21) == 1)
  {
    sub_24D415F74(v83, (uint64_t *)&unk_26B196F40);
    os_log_type_t v84 = (char *)*((void *)v155 + 2);
    type metadata accessor for VFSFileTree(0);
    swift_dynamicCastClassUnconditional();
    uint64_t v85 = *(void *)&v157[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID];
    int v86 = v157[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8];
    swift_retain();
    swift_retain();
    if (objc_sync_enter(v84)) {
      sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v84);
    }
    id v158 = *(id *)&v84[qword_26B199590];
    int v87 = objc_sync_exit(v84);
    os_log_type_t v88 = v145;
    if (v87) {
      sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v84);
    }
    swift_release();
    long long v169 = 0u;
    memset(v168, 0, sizeof(v168));
    id v89 = (void *)swift_allocObject();
    unint64_t v90 = v157;
    v89[2] = v157;
    v89[3] = v88;
    unsigned char v89[4] = v144;
    v89[5] = v59;
    int v91 = v88;
    uint64_t v92 = v147;
    v89[6] = a9;
    v89[7] = v92;
    id v93 = v90;
    id v94 = v91;
    swift_retain();
    swift_retain();
    sub_24D3DC118(v85, v86, (uint64_t)v168, 0, 0, (uint64_t)sub_24D4C4B34, (uint64_t)v89);
    swift_release();
    swift_release();
    id v108 = (id *)&v170;
    goto LABEL_32;
  }
  uint64_t v95 = v140;
  sub_24D3F0BA0(v83, (uint64_t)v140, (uint64_t *)&unk_26B199410);
  unint64_t v96 = (void *)MEMORY[0x25332B1A0](&v153[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  if (v96
    && (uint64_t v97 = v96, v98 = objc_msgSend(v96, sel_indexer), v97, v98)
    && (unsigned int v99 = objc_msgSend(v98, sel_needsAuthentication), v98, v99))
  {
    uint64_t v100 = 9;
  }
  else
  {
    uint64_t v100 = 1;
  }
  BOOL v37 = v143;
  uint64_t v109 = MEMORY[0x263F8EE78];
  id v110 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
  uint64_t v44 = sub_24DAB9E2C(v95, v100, 0, v110);
  swift_bridgeObjectRelease();
  if (*((unsigned char *)v95 + *(int *)(v21 + 48)) != 1)
  {
    swift_beginAccess();
    unint64_t v122 = *(void (**)(uint64_t, void, uint64_t, void))(v147 + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190950);
    uint64_t v123 = swift_allocObject();
    *(_OWORD *)(v123 + 16) = xmmword_24DCD3BE0;
    *(void *)(v123 + 32) = v44;
    uint64_t v159 = v123;
    sub_24DCC9C48();
    uint64_t v124 = v159;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    uint64_t v125 = v44;
    sub_24DCC91D8();
    swift_release();
    swift_release();
    v122(v124, 0, v159, 0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24D415F74((uint64_t)v95, (uint64_t *)&unk_26B199410);

    return;
  }
  sub_24D415F74((uint64_t)v95, (uint64_t *)&unk_26B199410);
  uint64_t v171 = v109;
  if (!v44)
  {
    uint64_t v41 = (uint64_t)v157;
    unint64_t v39 = v155;
    id v40 = v152;
    goto LABEL_3;
  }
  uint64_t v111 = v142;
  swift_beginAccess();
  uint64_t v112 = v111;
  uint64_t v113 = (uint64_t)v139;
  sub_24D415FD0(v112, (uint64_t)v139, (uint64_t *)&unk_26B196F40);
  uint64_t v114 = v44;
  unint64_t v39 = v155;
  id v115 = sub_24D91A2AC(v114, v113, (uint64_t)v155);
  id v40 = v152;
  if (v38)
  {

    sub_24D415F74(v113, (uint64_t *)&unk_26B196F40);
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v127 = v115;
  sub_24D415F74(v113, (uint64_t *)&unk_26B196F40);
  id v128 = v127;
  MEMORY[0x253327CA0]();
  if (*(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_24DCC9C78();
  }
  sub_24DCC9CD8();
  sub_24DCC9C48();

  id v129 = objc_msgSend(v114, sel_fileURL);
  uint64_t v45 = (uint64_t)v156;
  if (v129)
  {
    uint64_t v130 = v129;
    uint64_t v131 = (uint64_t)v138;
    sub_24DCC89E8();

    uint64_t v132 = sub_24DCC8A58();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v131, 0, 1, v132);
  }
  else
  {
    uint64_t v132 = sub_24DCC8A58();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v132 - 8) + 56))(v138, 1, 1, v132);
  }
  BOOL v37 = v143;
  uint64_t v43 = v151;
  sub_24D3F0BA0((uint64_t)v138, v151, (uint64_t *)&unk_26B199050);
  sub_24DCC8A58();
  uint64_t v133 = *(void *)(v132 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v133 + 48))(v43, 1, v132) == 1)
  {
    uint64_t v41 = (uint64_t)v157;
    goto LABEL_4;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v133 + 32))(v45, v43, v132);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v133 + 56))(v45, 0, 1, v132);
  uint64_t v41 = (uint64_t)v157;
LABEL_5:
  BOOL v46 = *(unsigned char *)(v41 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_buildAndFilterAppLibraries) == 1;
  id v158 = v38;
  unint64_t v155 = v44;
  if (v46)
  {
    id v47 = (void *)MEMORY[0x25332B1A0](&v153[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
    int v143 = v37;
    if (v47
      && (os_log_type_t v48 = v47, v49 = objc_msgSend(v47, sel_indexer), v48, v49))
    {
      unsigned int v50 = objc_msgSend(v49, sel_needsAuthentication);

      uint64_t v51 = 8;
      if (!v50) {
        uint64_t v51 = 0;
      }
      uint64_t v152 = (char *)v51;
    }
    else
    {
      uint64_t v152 = 0;
    }
    unint64_t v66 = *(void **)&v157[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_fpItemID];
    unint64_t v67 = *(char **)&v157[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID];
    LODWORD(v151) = v157[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8];
    unint64_t v68 = &v157[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_logger];
    uint64_t v69 = sub_24DCC9078();
    uint64_t v70 = *(void *)(v69 - 8);
    (*(void (**)(char *, char *, uint64_t))(v70 + 16))(v40, v68, v69);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v70 + 56))(v40, 0, 1, v69);
    unint64_t v164 = MEMORY[0x263F8EE78];
    uint64_t v149 = *((void *)v39 + 2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199920);
    swift_dynamicCastClassUnconditional();
    v165[0] = 0x746E656D75636F44;
    v165[1] = 0xE900000000000073;
    uint64_t v162 = 58;
    unint64_t v163 = 0xE100000000000000;
    uint64_t v160 = 47;
    unint64_t v161 = 0xE100000000000000;
    sub_24D3F0EB8();
    id v150 = v66;
    swift_retain();
    uint64_t v71 = sub_24DCCA478();
    uint64_t v72 = (uint64_t)v40;
    uint64_t v74 = v73;
    MEMORY[0x270FA5388](v71);
    *(&v138 - 8) = (char *)v66;
    *(&v138 - 7) = v67;
    int v75 = v151;
    *((unsigned char *)&v138 - 48) = v151;
    id v76 = v152;
    *(&v138 - 5) = (char *)v39;
    id v134 = v76;
    uint64_t v77 = (uint64_t)v156;
    id v135 = v156;
    long long v136 = (void *)v72;
    uint64_t v137 = &v164;
    uint64_t v152 = v67;
    id v78 = v158;
    uint64_t v80 = sub_24DABAF18((uint64_t)v67, v75, v79, v74, v154, (void (*)(uint64_t, unsigned char *, uint64_t, unsigned char *))sub_24D4C4B68, (uint64_t)(&v138 - 10));
    if (v78)
    {
      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      sub_24D415F74(v72, &qword_26B192390);
      sub_24D415F74(v77, (uint64_t *)&unk_26B199050);
      swift_bridgeObjectRelease();

      return;
    }
    uint64_t v104 = v80;
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v103 = v164;
    sub_24D415F74(v72, &qword_26B192390);

    int v102 = v143;
  }
  else
  {
    uint64_t v60 = *(char **)(v41 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID);
    int v61 = *(unsigned __int8 *)(v41 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8);
    v165[0] = MEMORY[0x263F8EE78];
    uint64_t v62 = *((void *)v39 + 2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199920);
    uint64_t v63 = swift_dynamicCastClassUnconditional();
    MEMORY[0x270FA5388](v63);
    *(&v138 - 6) = (char *)v41;
    *(&v138 - 5) = (char *)v39;
    id v134 = v153;
    id v135 = (char *)v45;
    long long v136 = v165;
    swift_retain();
    uint64_t v152 = v60;
    id v64 = v158;
    uint64_t v65 = sub_24DABA608((uint64_t)v60, v61, v154, (void (*)(uint64_t, unsigned char *))sub_24D4C4B44, (uint64_t)(&v138 - 8));
    if (v64)
    {
      swift_release();
      swift_bridgeObjectRelease();
      sub_24D415F74(v45, (uint64_t *)&unk_26B199050);
      swift_bridgeObjectRelease();
      id v108 = (id *)&v169 + 1;
LABEL_32:

      return;
    }
    uint64_t v101 = v65;
    uint64_t v149 = v62;
    LODWORD(v151) = v61;
    swift_release();
    int v102 = 0;
    unint64_t v103 = v165[0];
    uint64_t v104 = v101;
  }
  uint64_t v105 = v152;
  sub_24D785B90(v103);
  uint64_t v106 = v171;
  unint64_t v107 = swift_bridgeObjectRetain();
  sub_24D40589C(v107);
  uint64_t v152 = v105;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  uint64_t v116 = *(void (**)(uint64_t, uint64_t, uint64_t, void))(v147 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  swift_retain();
  os_log_t v117 = v157;
  sub_24DCC91D8();
  swift_release();
  swift_release();
  v116(v106, v104, v162, 0);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (v102)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199920);
    uint64_t v118 = swift_dynamicCastClassUnconditional();
    id v119 = v117;
    uint64_t v120 = v153;
    swift_retain();
    sub_24DAFC698(v152, v151, v118, (uint64_t)v119, v120);
    uint64_t v121 = v155;
    swift_release();
    swift_release();

    uint64_t v126 = (uint64_t)v156;
  }
  else
  {
    swift_release();
    uint64_t v126 = (uint64_t)v156;
    uint64_t v121 = v155;
  }
  sub_24D415F74(v126, (uint64_t *)&unk_26B199050);
}

void sub_24D4BF60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void, void, void, void, id), uint64_t a6, uint64_t a7)
{
  id v64 = a5;
  uint64_t v65 = a6;
  uint64_t v60 = a4;
  uint64_t v63 = a3;
  uint64_t v69 = a2;
  uint64_t v70 = (char *)a1;
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v62 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  unint64_t v68 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v9 - 8);
  int v61 = ((char *)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v67 = *((void *)v11 - 1);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v59 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v59 - v18;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194240);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (void **)((char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24D415FD0((uint64_t)v70, (uint64_t)v22, (uint64_t *)&unk_26B194240);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v23 = *v22;
    swift_beginAccess();
    uint64_t v24 = *(void (**)(void *, void, void, uint64_t))(a7 + 16);
    swift_retain();
    id v25 = v23;
    v24(v23, 0, 0, 1);

    swift_release();
    return;
  }
  id v59 = v14;
  uint64_t v26 = a7;
  uint64_t v28 = (uint64_t)v68;
  uint64_t v27 = v69;
  uint64_t v70 = v19;
  if ((*(unsigned int (**)(void **, uint64_t, int *))(v67 + 48))(v22, 1, v11) == 1)
  {
    swift_beginAccess();
    uint64_t v29 = *(void (**)(void *, void, void, uint64_t))(v26 + 16);
    char v30 = *(unsigned char *)(v27 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8);
    uint64_t v73 = *(void *)(v27 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID);
    char v74 = v30;
    long long v75 = 0u;
    long long v76 = 0u;
    long long v77 = 0u;
    long long v78 = 0u;
    long long v79 = 0u;
    long long v80 = 0u;
    uint64_t v81 = 0;
    sub_24D46A4C8((uint64_t)&v73);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A40);
    sub_24D3E4A9C((unint64_t *)&qword_26B192A30, (uint64_t *)&unk_26B192A40);
    uint64_t v31 = (void *)swift_allocError();
    sub_24D3F0BA0((uint64_t)&v73, v32, (uint64_t *)&unk_26B192A40);
    swift_retain();
    v29(v31, 0, 0, 1);

    swift_release();
    sub_24D415F74((uint64_t)v22, (uint64_t *)&unk_26B199BC0);
    return;
  }
  uint64_t v33 = (uint64_t)v70;
  sub_24D46A4D0((uint64_t)v22, (uint64_t)v70);
  sub_24D3FC3B0(v33, (uint64_t)v17, type metadata accessor for VFSItem);
  uint64_t v34 = v66;
  uint64_t v35 = v28 + *(int *)(v66 + 52);
  sub_24D414684((uint64_t)&v73);
  uint64_t v36 = v35;
  sub_24D3F0BA0((uint64_t)&v73, v35, &qword_26B197970);
  uint64_t v37 = v28 + *(int *)(v34 + 56);
  *(void *)uint64_t v37 = 0;
  *(void *)(v37 + 8) = 0;
  *(void *)(v37 + 16) = 0;
  *(unsigned char *)(v37 + 24) = 1;
  uint64_t v38 = v28 + *(int *)(v34 + 60);
  *(void *)uint64_t v38 = 0;
  *(void *)(v38 + 8) = 0;
  *(unsigned char *)(v38 + 16) = 1;
  uint64_t v39 = *(void *)v17;
  LODWORD(v35) = v17[8];
  *(void *)uint64_t v28 = *(void *)v17;
  *(unsigned char *)(v28 + 8) = v35;
  uint64_t v40 = (uint64_t)v59;
  sub_24D3FC3B0((uint64_t)v17, (uint64_t)v59, type metadata accessor for VFSItem);
  if (v35 == 2 && v39 == 1)
  {
    sub_24D4C5988(v40);
    uint64_t v41 = v60;
  }
  else
  {
    uint64_t v42 = *(void *)v40;
    int v43 = *(unsigned __int8 *)(v40 + 8);
    sub_24D4C5988(v40);
    uint64_t v41 = v60;
    if (v43 != 2 || v42)
    {
      uint64_t v45 = *((void *)v17 + 2);
      char v46 = v17[24];
      *(void *)(v28 + 16) = v45;
      *(unsigned char *)(v28 + 24) = v46;
      goto LABEL_12;
    }
  }
  char v44 = v17[8];
  *(void *)(v28 + 16) = *(void *)v17;
  *(unsigned char *)(v28 + 24) = v44;
  uint64_t v45 = *((void *)v17 + 2);
  char v46 = v17[24];
LABEL_12:
  id v47 = &v17[v11[9]];
  uint64_t v48 = *(void *)v47;
  int v49 = *((_DWORD *)v47 + 2);
  uint64_t v50 = *((void *)v47 + 2);
  LOBYTE(v47) = v47[24];
  uint64_t v51 = *((void *)v17 + 4);
  uint64_t v52 = *((void *)v17 + 5);
  *(void *)(v28 + 32) = v48;
  *(_DWORD *)(v28 + 40) = v49;
  *(void *)(v28 + 48) = v50;
  *(unsigned char *)(v28 + 56) = (_BYTE)v47;
  *(void *)(v28 + 64) = 0;
  *(void *)(v28 + 72) = v45;
  *(unsigned char *)(v28 + 80) = v46;
  *(void *)(v28 + 88) = v51;
  *(void *)(v28 + 96) = v52;
  *(void *)(v28 + 104) = 0;
  *(void *)(v28 + 112) = 0;
  *(void *)(v28 + 120) = 0;
  *(void *)(v28 + 128) = v51;
  *(void *)(v28 + 136) = v52;
  uint64_t v53 = v66;
  sub_24D3FC3B0((uint64_t)&v17[v11[7]], v28 + *(int *)(v66 + 48), (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  sub_24D3F0BA0((uint64_t)&v17[v11[8]], (uint64_t)v71, &qword_26B197970);
  sub_24D3F0BA0(v36, (uint64_t)v72, &qword_26B197970);
  swift_bridgeObjectRetain_n();
  sub_24D401194(v71, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
  sub_24D401194(v72, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
  sub_24D3F0BA0((uint64_t)v71, v36, &qword_26B197970);
  *(void *)(v28 + *(int *)(v53 + 64)) = 0;
  uint64_t v54 = sub_24D5F4A00();
  uint64_t v56 = v55;
  sub_24D4C5988((uint64_t)v17);
  id v57 = (uint64_t *)(v28 + *(int *)(v53 + 68));
  *id v57 = v54;
  v57[1] = v56;
  uint64_t v58 = v61;
  sub_24D3F0BA0(v28, (uint64_t)v61, (uint64_t *)&unk_26B199410);
  (*(void (**)(NSObject *, void, uint64_t, uint64_t))(v62 + 56))(v58, 0, 1, v53);
  sub_24D4BC48C(v63, v58, v41, v64, v65);
  sub_24D415F74((uint64_t)v58, (uint64_t *)&unk_26B196F40);
  sub_24D4C5988((uint64_t)v70);
}

void sub_24D4BFED4(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(void, void, void, void, void, void))
{
  uint64_t v46 = *MEMORY[0x263EF8340];
  sub_24D3F0BA0(a1, (uint64_t)v41, (uint64_t *)&unk_26B190970);
  uint64_t v8 = (void *)v41[0];
  sub_24D3F0BA0(a1, (uint64_t)v42, (uint64_t *)&unk_26B190970);
  unint64_t v9 = v42[0];
  if (v45 == 1)
  {
    sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B10);
    sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B10);
    id v10 = a3;
    sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B10);
    id v11 = v10;
    uint64_t v12 = sub_24DCC9068();
    os_log_type_t v13 = sub_24DCCA128();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 138412802;
      uint64_t v15 = a5;
      id v16 = v11;
      sub_24DCCA428();
      *uint64_t v35 = v11;

      a5 = v15;
      *(_WORD *)(v14 + 12) = 2048;
      sub_24DCCA428();
      *(_WORD *)(v14 + 22) = 2112;
      swift_getErrorValue();
      id __src = sub_24DBA2828(v39);
      sub_24DCCA428();
      v35[1] = __src;
      sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
      sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
      _os_log_impl(&dword_24D3D0000, v12, v13, "📖  %@: enumerating from change %llu failed: %@", (uint8_t *)v14, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v35, -1, -1);
      MEMORY[0x25332B030](v14, -1, -1);
    }
    else
    {

      sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
      sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
    }
    id v29 = v8;
    a5(MEMORY[0x263F8EE78], MEMORY[0x263F8EE78], 0, 0, 0, v9);
    sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
    sub_24D4C6B5C(a1, (void (*)(void, void, void, void, void))sub_24D4C6B9C);
  }
  else
  {
    unint64_t v17 = v42[1];
    uint64_t v18 = v43;
    id v19 = v44;
    id v20 = a3;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    id v21 = v20;
    uint64_t v22 = sub_24DCC9068();
    os_log_type_t v23 = sub_24DCCA118();
    if (os_log_type_enabled(v22, v23))
    {
      os_log_type_t v34 = v23;
      unsigned int log = v18;
      *(void *)type = a5;
      uint64_t v24 = swift_slowAlloc();
      id v25 = (void *)swift_slowAlloc();
      id v36 = (id)swift_slowAlloc();
      id __src = v36;
      *(_DWORD *)uint64_t v24 = 138413570;
      id v26 = v21;
      sub_24DCCA428();
      *id v25 = v21;

      *(_WORD *)(v24 + 12) = 2048;
      sub_24DCCA428();
      *(_WORD *)(v24 + 22) = 2048;
      if (v9 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24DCCA9C8();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 32) = 2048;
      uint64_t v18 = log;
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24DCCA9C8();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 42) = 2080;
      if (log) {
        uint64_t v27 = 0x6F6D20736168202CLL;
      }
      else {
        uint64_t v27 = 0;
      }
      if (log) {
        unint64_t v28 = 0xEA00000000006572;
      }
      else {
        unint64_t v28 = 0xE000000000000000;
      }
      sub_24D418FB4(v27, v28, (uint64_t *)&__src);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 52) = 2048;
      sub_24DCCA428();
      _os_log_impl(&dword_24D3D0000, v22, v34, "📖  %@: enumerating from change %llu done: %ld updated, %ld deleted%s, next anchor:%llu", (uint8_t *)v24, 0x3Eu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v36, -1, -1);
      MEMORY[0x25332B030](v24, -1, -1);

      a5 = *(void (**)(void, void, void, void, void, void))type;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    id __src = v19;
    uint64_t v30 = sub_24DC9FBB8(&__src, v41);
    unint64_t v32 = v31 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v33 = (void *)sub_24DCC8B28();
    sub_24D400DCC(v30, v32);
    a5(v9, v17, v18, v33, 0, 0);
  }
}

uint64_t sub_24D4C05CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5, uint64_t a6, void *a7)
{
  swift_beginAccess();
  uint64_t v12 = *(void *)(a2 + 16);
  uint64_t v13 = *(void *)(a2 + 24);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v12;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  id v16 = (void *)swift_allocObject();
  void v16[2] = sub_24D4C65E4;
  v16[3] = v14;
  v16[4] = v15;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_24D4C66C8;
  *(void *)(v17 + 24) = v16;
  swift_beginAccess();
  *(void *)(a2 + 16) = sub_24D4C65E4;
  *(void *)(a2 + 24) = v17;
  swift_retain();
  swift_release();
  swift_beginAccess();
  uint64_t v19 = *(void *)(a2 + 16);
  uint64_t v18 = *(void *)(a2 + 24);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = v18;
  id v21 = (void *)swift_allocObject();
  v21[2] = a3;
  v21[3] = a4;
  v21[4] = a5;
  v21[5] = a2;
  v21[6] = a1;
  v21[7] = a6;
  v21[8] = a7;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_24D4C65E4;
  *(void *)(v22 + 24) = v20;
  swift_retain();
  sub_24D3F9C18(a3, a4);
  id v23 = a5;
  swift_retain();
  swift_retain();
  id v24 = a7;
  swift_retain();
  sub_24D3FBC7C((uint64_t)"enumerateChanges(fromToken:suggestedBatchSize:reply:)", 53, 2, sub_24D4C67A0, v22, (uint64_t)sub_24D4C6778, (uint64_t)v21);
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D4C084C(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char *a7)
{
  void (*v64)(void *__return_ptr, uint64_t *, uint64_t);
  unint64_t v65;
  void (*v66)(unsigned char *, uint64_t, uint64_t, uint64_t);
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void *v71;
  void *v72;
  id v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  int v79;
  unint64_t v80;
  uint64_t v81;
  void *v82;
  void *KeyPath;
  uint64_t v84;
  unint64_t v85;
  id v86;
  unint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  BOOL v93;
  BOOL v94;
  unsigned char *v95;
  uint64_t v96;
  int *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char v113;
  uint64_t v114;
  uint64_t v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  id v121;
  void *v122;
  uint64_t v123;
  unint64_t v124;
  char v125;
  unsigned char *v126;
  id v127;
  unint64_t *v128;
  unint64_t v129;
  char *v130;
  uint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(void *, void);
  void *v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t v139;
  BOOL v140;
  unint64_t v141;
  uint64_t v142;
  unint64_t v143;
  BOOL v144;
  uint64_t v145;
  void (*v146)(void *);
  id v147;
  char isUniquelyReferenced_nonNull_bridgeObject;
  void *v149;
  unsigned char v150[12];
  unsigned char v151[12];
  int v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  void (*v156)(unsigned char *, uint64_t, uint64_t, uint64_t);
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unsigned char *v161;
  void *v162;
  uint64_t v163;
  unint64_t v164;
  uint64_t *v165;
  uint64_t v166;
  unsigned char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  void *v174;
  unint64_t v175;
  unint64_t v176;
  unint64_t v177;
  unint64_t v178;
  unint64_t v179[4];
  void v180[62];
  void v181[63];
  void v182[63];
  uint64_t v183;
  char v184;
  char v185;
  void v186[69];
  long long v187;
  unsigned __int8 v188;
  void v189[2];
  unsigned __int8 v190;
  unint64_t v191;
  void v192[2];
  char v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t v197;
  long long v198;
  char v199;
  long long v200;
  unsigned __int8 v201;
  long long v202;
  char v203;
  long long v204;
  unsigned __int8 v205;
  long long v206;
  char v207;
  long long v208;
  unsigned __int8 v209;
  long long v210;
  char v211;
  long long v212;
  unsigned __int8 v213;
  long long v214;
  char v215;
  long long v216;
  unsigned __int8 v217;
  void v218[4];
  char v219;
  void v220[4];
  char v221;
  void v222[2];
  char v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  uint64_t v227;
  uint64_t (*v228)@<X0>(uint64_t *@<X0>, uint64_t@<X8>);
  uint64_t v229;
  void v230[2];
  char v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  void v235[2];
  char v236;
  uint64_t v237;
  uint64_t *v238;
  char v239;
  unint64_t v240;
  void v241[4];
  char v242;
  void v243[4];
  char v244;
  uint64_t v245;

  id v168 = a7;
  long long v169 = a5;
  uint64_t v166 = a6;
  char v245 = *MEMORY[0x263EF8340];
  uint64_t v11 = sub_24DCC93F8();
  unint64_t v163 = *(void *)(v11 - 8);
  unint64_t v164 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v162 = &v150[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  unint64_t v161 = &v150[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  char v167 = &v150[-v17];
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = &v150[-v18];
  uint64_t v170 = a4 + 16;
  uint64_t v171 = a4;
  uint64_t v20 = OBJC_IVAR____TtC9libfssync14FPFSEnumerator_previousAnchor;
  v186[0] = *(void *)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_previousAnchor);
  uint64_t v21 = sub_24DC9FBB8(v186, &v186[1]);
  unint64_t v23 = v22 & 0xFFFFFFFFFFFFFFLL;
  id v24 = (void *)sub_24DCC8B28();
  sub_24D400DCC(v21, v23);
  uint64_t v25 = sub_24DCC8B68();
  unint64_t v27 = v26;

  LOBYTE(a2) = sub_24D401DDC(a1, a2, v25, v27);
  sub_24D400DCC(v25, v27);
  if ((a2 & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24DCC91D8();
    swift_release();
    swift_release();
    unint64_t v43 = v186[0];
    *(void *)(a3 + v20) = v186[0];
    swift_getKeyPath();
    swift_getKeyPath();
    sub_24DCC91D8();
    swift_release();
    swift_release();
    if (v43 >= v186[0])
    {
      unint64_t v44 = sub_24D42FC68(MEMORY[0x263F8EE78]);
      char v45 = (unint64_t *)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_changedItemsByID);
      swift_beginAccess();
      *char v45 = v44;
      swift_bridgeObjectRelease();
      uint64_t v46 = (void *)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_deletedItemsIDs);
      swift_beginAccess();
      *uint64_t v46 = MEMORY[0x263F8EE88];
      swift_bridgeObjectRelease();
    }
    swift_beginAccess();
    id v47 = *(void (**)(void *))(v171 + 16);
    type metadata accessor for NSFileProviderError(0);
    v186[66] = -1002;
    swift_retain();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4C3994(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    uint64_t v48 = (void *)v180[0];
    v243[0] = v180[0];
    memset(&v243[1], 0, 24);
    unint64_t v244 = 1;
    int v49 = v243;
    goto LABEL_14;
  }
  uint64_t v160 = v20;
  uint64_t v28 = *(void *)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID);
  int v29 = *(unsigned __int8 *)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8);
  uint64_t v30 = (uint64_t *)(a3 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_changedItemsByID);
  swift_beginAccess();
  uint64_t v165 = v30;
  uint64_t v31 = *v30;
  uint64_t v32 = a3;
  if (*(void *)(v31 + 16) && (unint64_t v33 = sub_24D6AD5F8(v28, v29), (v34 & 1) != 0))
  {
    unint64_t v35 = v33;
    uint64_t v36 = *(void *)(v31 + 56);
    int v37 = v29;
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
    uint64_t v39 = v28;
    uint64_t v40 = *(void *)(v38 - 8);
    uint64_t v41 = v36 + *(void *)(v40 + 72) * v35;
    uint64_t v32 = a3;
    sub_24D415FD0(v41, (uint64_t)v19, (uint64_t *)&unk_26B199410);
    uint64_t v42 = v38;
    int v29 = v37;
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v40 + 56))(v19, 0, 1, v42);
    uint64_t v28 = v39;
  }
  else
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v19, 1, 1, v50);
  }
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v52 = *(void *)(v51 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v52 + 48))(v19, 1, v51))
  {
    sub_24D415F74((uint64_t)v19, (uint64_t *)&unk_26B196F40);
  }
  else
  {
    uint64_t v53 = &v19[*(int *)(v51 + 48)];
    LOBYTE(v53) = v53[*(int *)(type metadata accessor for ItemMetadata() + 64)];
    sub_24D415F74((uint64_t)v19, (uint64_t *)&unk_26B196F40);
    if (v53)
    {
LABEL_13:
      swift_beginAccess();
      id v47 = *(void (**)(void *))(v171 + 16);
      type metadata accessor for NSFileProviderError(0);
      v181[0] = -1002;
      swift_retain();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4C3994(&qword_26B193F20, type metadata accessor for NSFileProviderError);
      sub_24DCC8808();
      uint64_t v48 = (void *)v182[0];
      v218[0] = v182[0];
      memset(&v218[1], 0, 24);
      unint64_t v219 = 1;
      int v49 = v218;
LABEL_14:
      v47(v49);

      return swift_release();
    }
  }
  uint64_t v54 = (uint64_t *)(v32 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_deletedItemsIDs);
  swift_beginAccess();
  if (sub_24D82CD4C(v28, v29, *v54)) {
    goto LABEL_13;
  }
  uint64_t v56 = *v165;
  if (*(void *)(*v165 + 16) && (unint64_t v57 = sub_24D6AD5F8(v28, v29), (v58 & 1) != 0))
  {
    uint64_t v59 = *(void *)(v56 + 56) + *(void *)(v52 + 72) * v57;
    uint64_t v60 = (uint64_t)v167;
    sub_24D415FD0(v59, (uint64_t)v167, (uint64_t *)&unk_26B199410);
    char v156 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
    v156((unsigned char *)v60, 0, 1, v51);
    sub_24D415F74(v60, (uint64_t *)&unk_26B196F40);
    int v61 = *(uint64_t **)(*(void *)(v169 + 16) + 16);
    unint64_t v183 = v28;
    unint64_t v184 = v29;
    uint64_t v185 = 0;
    uint64_t v62 = *v61;
    uint64_t v154 = v52;
    int v63 = v29;
    id v64 = *(void (**)(void *__return_ptr, uint64_t *, uint64_t))(v62 + 168);
    swift_retain();
    uint64_t v65 = v172;
    v64(v186, &v183, 1);
    if (v65) {
      return swift_release();
    }
    uint64_t v120 = v154;
    uint64_t v172 = 0;
    sub_24D3F0BA0((uint64_t)v186, (uint64_t)v181, qword_26B197540);
    sub_24D3F0BA0((uint64_t)v181, (uint64_t)v182, qword_26B197540);
    if (sub_24D3F0D6C((uint64_t)v182) == 1)
    {
      *(void *)&v151[4] = v28;
      swift_release();
      int v29 = v63;
    }
    else
    {
      swift_release();
      memcpy(v180, v186, sizeof(v180));
      sub_24D3E33C4((uint64_t)v180);
      if ((v180[2] & 0x10) != 0)
      {
        swift_beginAccess();
        id v47 = *(void (**)(void *))(v171 + 16);
        type metadata accessor for NSFileProviderError(0);
        unsigned int v173 = -1002;
        swift_retain();
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24D4C3994(&qword_26B193F20, type metadata accessor for NSFileProviderError);
        sub_24DCC8808();
        uint64_t v48 = v174;
        v241[0] = v174;
        memset(&v241[1], 0, 24);
        unsigned int v242 = 1;
        int v49 = v241;
        goto LABEL_14;
      }
      int v29 = v63;
      *(void *)&v151[4] = v28;
    }
    uint64_t v52 = v120;
    uint64_t v66 = v156;
  }
  else
  {
    *(void *)&v151[4] = v28;
    uint64_t v66 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
    uint64_t v67 = (uint64_t)v167;
    v66(v167, 1, 1, v51);
    sub_24D415F74(v67, (uint64_t *)&unk_26B196F40);
  }
  char v156 = v66;
  unint64_t v68 = *(void *)(*v165 + 16);
  uint64_t v69 = 900;
  if (v68 < 0x384) {
    uint64_t v69 = *(void *)(*v165 + 16);
  }
  id v158 = *(void *)(*v165 + 16);
  if ((uint64_t)v68 >= v166) {
    unint64_t v68 = v166;
  }
  if (v166 <= 900) {
    uint64_t v70 = v68;
  }
  else {
    uint64_t v70 = v69;
  }
  uint64_t v71 = (void *)MEMORY[0x25332B1A0](&v168[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  int v157 = v54;
  uint64_t v159 = v32;
  *(_DWORD *)uint64_t v151 = v29;
  if (v71
    && (uint64_t v72 = v71, v73 = objc_msgSend(v71, sel_indexer), v72, v73))
  {
    char v74 = objc_msgSend(v73, sel_needsAuthentication);

    long long v75 = 8;
    if (!v74) {
      long long v75 = 0;
    }
    unint64_t v155 = v75;
  }
  else
  {
    unint64_t v155 = 0;
  }
  long long v76 = *v165;
  swift_bridgeObjectRetain();
  uint64_t v166 = v70;
  sub_24D4C67A8(v70, v76, (uint64_t)&v187);
  unint64_t v153 = *((void *)&v187 + 1);
  uint64_t v154 = v187;
  uint64_t v152 = v188;
  char v167 = v189;
  long long v77 = v189[0];
  long long v78 = (uint64_t *)v189[1];
  long long v79 = v190;
  long long v80 = v191;
  swift_bridgeObjectRelease();
  if (*(unsigned char *)(v159 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_buildAndFilterAppLibraries) == 1)
  {
    LODWORD(v161) = v79;
    uint64_t v81 = v169;
    uint64_t v82 = *(void **)(*(void *)(v169 + 16) + 64);
    KeyPath = v162;
    os_log_type_t v84 = v163;
    *uint64_t v162 = v82;
    uint64_t v85 = v164;
    (*(void (**)(void *, void, unint64_t))(v84 + 104))(KeyPath, *MEMORY[0x263F8F0E0], v164);
    int v86 = v82;
    LOBYTE(v82) = sub_24DCC9418();
    (*(void (**)(void *, unint64_t))(v84 + 8))(KeyPath, v85);
    if ((v82 & 1) == 0)
    {
      __break(1u);
      goto LABEL_108;
    }
    unint64_t v208 = v187;
    uint64_t v209 = v188;
    uint64_t v206 = *(_OWORD *)v167;
    uint64_t v207 = v167[16];
    int v177 = v191;
    v235[0] = v154;
    v235[1] = v153;
    unsigned int v236 = v152;
    unint64_t v237 = v77;
    unint64_t v238 = v78;
    id v239 = (char)v161;
    unint64_t v240 = v80;
    swift_retain();
    sub_24D4C6AB0((uint64_t)&v208);
    sub_24D4C6AB0((uint64_t)&v206);
    sub_24D4C6AE4((uint64_t)&v177);
    int v87 = v172;
    os_log_type_t v88 = sub_24D4C3CEC((uint64_t)v235, v81, 0xA000000000000012);
    swift_release();
    sub_24D4C6A38((uint64_t)&v208);
    sub_24D4C6A38((uint64_t)&v206);
    sub_24D4C6A78((uint64_t)&v177);
    if (v87)
    {
      sub_24D4C6A38((uint64_t)&v208);
      sub_24D4C6A38((uint64_t)&v206);
      return sub_24D4C6A78((uint64_t)&v177);
    }
    v182[0] = v88;
    long long v77 = v159;
    long long v78 = v157;
    while (1)
    {
      unsigned int v99 = v165;
LABEL_63:
      uint64_t v172 = 0;
      uint64_t v100 = v166;
      if (v166 < v158)
      {
        uint64_t v101 = *v99;
        long long v78 = v99;
        uint64_t v85 = sub_24DB3A898(*v99);
        KeyPath = (void *)v102;
        long long v80 = v103 & 1;
        uint64_t v104 = sub_24D4C1D5C(v85, v102, v103 & 1, v100, v101);
        uint64_t v106 = v105;
        id v108 = v107;
        sub_24D4C6A6C(v85, (uint64_t)KeyPath, v80);
        if (v108)
        {
          __break(1u);
LABEL_117:
          uint64_t result = swift_unexpectedError();
          __break(1u);
          return result;
        }
        uint64_t v109 = *v78;
        id v110 = *(unsigned int *)(*v78 + 36);
        if (v110 != v106)
        {
LABEL_108:
          __break(1u);
LABEL_109:
          __break(1u);
LABEL_110:
          __break(1u);
          goto LABEL_111;
        }
        uint64_t v111 = 1 << *(unsigned char *)(v109 + 32);
        if (v111 < v104) {
          goto LABEL_110;
        }
        v230[0] = v104;
        v230[1] = v106;
        uint64_t v231 = 0;
        unsigned int v232 = v111;
        unint64_t v233 = v110;
        uint64_t v234 = 0;
        sub_24D4C2ED0((uint64_t)v230, v109, (uint64_t)v192);
        uint64_t v112 = v192[1];
        uint64_t v113 = v193;
        uint64_t v114 = v194;
        id v115 = v195;
        uint64_t v116 = v196;
        os_log_t v117 = v197;
        uint64_t v118 = v192[0];
        if (sub_24D8F3418())
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B195DF0);
          id v119 = sub_24DCCA9F8();
        }
        else
        {
          id v119 = MEMORY[0x263F8EE80];
        }
        v222[0] = v118;
        v222[1] = v112;
        unint64_t v223 = v113;
        unint64_t v224 = v114;
        int v225 = v115;
        size_t v226 = v116;
        int v227 = v117;
        long long v228 = sub_24D4C1EB0;
        long long v229 = 0;
        v186[0] = v119;
        sub_24D4C6AA4(v118, v112, v113);
        sub_24D4C6AA4(v114, v115, v116);
        swift_bridgeObjectRetain();
        sub_24D4C6AA4(v118, v112, v113);
        sub_24D4C6AA4(v114, v115, v116);
        swift_bridgeObjectRetain();
        id v129 = v172;
        sub_24D4C30B0((uint64_t)v222, 1, v186);
        uint64_t v172 = v129;
        if (v129) {
          goto LABEL_117;
        }
        sub_24D4C6A6C(v118, v112, v113);
        sub_24D4C6A6C(v114, v115, v116);
        swift_bridgeObjectRelease();
        *uint64_t v165 = v186[0];
        swift_bridgeObjectRelease();
        sub_24D4C6A6C(v118, v112, v113);
        sub_24D4C6A6C(v114, v115, v116);
        swift_bridgeObjectRelease();
        long long v77 = v159;
        long long v78 = v157;
      }
      uint64_t v130 = v168;
      uint64_t v131 = swift_bridgeObjectRetain();
      uint64_t v132 = v172;
      uint64_t v133 = sub_24D4C39EC(v131, (uint64_t)v130);
      uint64_t v85 = v132;
      swift_bridgeObjectRelease();

      if (v166 >= v158)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_24DCC91D8();
        swift_release();
        swift_release();
        id v138 = v186[0];
        unint64_t v139 = v160;
        *(void *)(v77 + v160) = v186[0];
        swift_getKeyPath();
        swift_getKeyPath();
        sub_24DCC91D8();
        swift_release();
        swift_release();
        uint64_t v140 = v138 >= v186[0];
        id v134 = v139;
        long long v78 = v157;
        if (!v140) {
          goto LABEL_96;
        }
LABEL_95:
        unint64_t v141 = sub_24D42FC68(MEMORY[0x263F8EE78]);
        *uint64_t v165 = v141;
        swift_bridgeObjectRelease();
        *long long v78 = MEMORY[0x263F8EE88];
        swift_bridgeObjectRelease();
LABEL_96:
        uint64_t v142 = v182[0];
        int v143 = swift_bridgeObjectRetain();
        sub_24D40589C(v143);
        if (v132)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          long long v204 = v187;
          long long v205 = v188;
          sub_24D4C6A38((uint64_t)&v204);
          long long v202 = *(_OWORD *)v167;
          long long v203 = v167[16];
          sub_24D4C6A38((uint64_t)&v202);
          uint64_t v176 = v191;
          id v128 = &v176;
        }
        else
        {
          uint64_t v144 = v166 < v158;
          swift_bridgeObjectRelease();
          swift_beginAccess();
          unint64_t v145 = *(void *)(v77 + v134);
          uint64_t v146 = *(void (**)(void *))(v171 + 16);
          v220[0] = v142;
          v220[1] = v133;
          v220[2] = v144;
          v220[3] = v145;
          unint64_t v221 = 0;
          swift_retain();
          swift_bridgeObjectRetain();
          v146(v220);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v200 = v187;
          unint64_t v201 = v188;
          sub_24D4C6A38((uint64_t)&v200);
          char v198 = *(_OWORD *)v167;
          unint64_t v199 = v167[16];
          sub_24D4C6A38((uint64_t)&v198);
          unsigned int v175 = v191;
          id v128 = &v175;
        }
LABEL_99:
        sub_24D4C6A78((uint64_t)v128);
        return swift_bridgeObjectRelease();
      }
      id v134 = v160;
      long long v80 = *(void *)(v77 + v160);
      swift_getKeyPath();
      KeyPath = (void *)swift_getKeyPath();
      sub_24DCC91D8();
      swift_release();
      swift_release();
      if (!v186[0]) {
        goto LABEL_109;
      }
      if (v80 == v186[0] - 1)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        KeyPath = v186;
        id v135 = (void (*)(void *, void))sub_24DCC91C8();
        if (*v136 == -1) {
          goto LABEL_114;
        }
        ++*v136;
        v135(v186, 0);
        swift_release();
        swift_release();
      }
      uint64_t v137 = *(void *)(v77 + v134);
      long long v80 = v137 + 1;
      if (v137 != -1)
      {
        *(void *)(v77 + v134) = v80;
        swift_getKeyPath();
        swift_getKeyPath();
        sub_24DCC91D8();
        swift_release();
        swift_release();
        if (v80 < v186[0]) {
          goto LABEL_96;
        }
        goto LABEL_95;
      }
LABEL_111:
      __break(1u);
LABEL_112:
      uint64_t v121 = (id)MEMORY[0x253328820](v85, v80);
LABEL_74:
      unint64_t v122 = v121;
      uint64_t v123 = *v165;
      if (*(void *)(*v165 + 16))
      {
        uint64_t v124 = sub_24D6AD5F8(*(uint64_t *)&v151[4], v151[0]);
        if (v125) {
          sub_24D415FD0(*(void *)(v123 + 56) + *(void *)(v154 + 72) * v124, (uint64_t)v161, (uint64_t *)&unk_26B199410);
        }
      }
      uint64_t v126 = v161;
      ((void (*)(void))v156)();
      uint64_t v127 = sub_24D91A2AC(v122, (uint64_t)v126, v169);
      if (KeyPath)
      {
        sub_24D415F74((uint64_t)v126, (uint64_t *)&unk_26B196F40);

        unint64_t v212 = v187;
        unint64_t v213 = v188;
        sub_24D4C6A38((uint64_t)&v212);
        long long v210 = *(_OWORD *)v167;
        long long v211 = v167[16];
        sub_24D4C6A38((uint64_t)&v210);
        unsigned int v178 = v191;
        id v128 = &v178;
        goto LABEL_99;
      }
      uint64_t v147 = v127;
      sub_24D415F74((uint64_t)v126, (uint64_t *)&unk_26B196F40);
      isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
      v182[0] = v80;
      if ((isUniquelyReferenced_nonNull_bridgeObject & 1) == 0
        || (v80 & 0x8000000000000000) != 0
        || (v80 & 0x4000000000000000) != 0)
      {
        long long v80 = sub_24DAFAFA0(v80);
        v182[0] = v80;
      }
      if (v85 >= *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_115;
      }
      uint64_t v149 = *(void **)((v80 & 0xFFFFFFFFFFFFFF8) + 8 * v85 + 0x20);
      *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 8 * v85 + 0x20) = v147;

      sub_24DCC9C48();
    }
  }
  uint64_t v154 = v52;
  id v89 = (void *)v172;
  unint64_t v90 = sub_24D4B7E58((uint64_t)&v187);
  int v91 = v90;
  uint64_t v92 = *(void *)(v90 + 16);
  if (!v92)
  {
LABEL_56:
    uint64_t v85 = 0;
    LODWORD(v172) = 1;
    goto LABEL_57;
  }
  uint64_t v85 = 0;
  id v93 = *(_DWORD *)v151 == 2;
  id v94 = *(void *)&v151[4] == 1 && *(_DWORD *)v151 == 2;
  if (*(void *)&v151[4]) {
    id v93 = 0;
  }
  uint64_t v95 = (unsigned char *)(((*(unsigned __int8 *)(v154 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v154 + 80))
                + v90
                + 8);
  while (1)
  {
    unint64_t v96 = *((void *)v95 - 1);
    if (!*v95)
    {
      if (__PAIR64__(v96, 0) == *(void *)v151) {
        goto LABEL_55;
      }
      goto LABEL_45;
    }
    if (*v95 == 1) {
      break;
    }
    if (v96)
    {
      if (v94) {
        goto LABEL_55;
      }
    }
    else if (v93)
    {
      goto LABEL_55;
    }
LABEL_45:
    v95 += *(void *)(v154 + 72);
    if (v92 == ++v85) {
      goto LABEL_56;
    }
  }
  if (*(_DWORD *)v151 != 1 || v96 != *(void *)&v151[4]) {
    goto LABEL_45;
  }
LABEL_55:
  LODWORD(v172) = 0;
LABEL_57:
  uint64_t v97 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
  id v98 = v169;
  swift_retain();
  long long v80 = sub_24D4C68EC(v91, v98, v97);
  KeyPath = v89;
  swift_release();
  sub_24D3DD900(v80, v155 | 1);
  if (!v89)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v182[0] = v80;
    if (v172)
    {
      long long v77 = v159;
      unsigned int v99 = v165;
      long long v78 = v157;
      goto LABEL_63;
    }
    long long v77 = v159;
    long long v78 = v157;
    if ((v80 & 0xC000000000000001) != 0) {
      goto LABEL_112;
    }
    if (v85 < *(void *)((v80 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v121 = *(id *)(v80 + 8 * v85 + 32);
      goto LABEL_74;
    }
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
  }
  swift_bridgeObjectRelease();
  int v216 = v187;
  uint64_t v217 = v188;
  sub_24D4C6A38((uint64_t)&v216);
  int v214 = *(_OWORD *)v167;
  int v215 = v167[16];
  sub_24D4C6A38((uint64_t)&v214);
  v179[0] = v191;
  sub_24D4C6A78((uint64_t)v179);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D4C1D5C(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  if (a4 < 0) {
    goto LABEL_25;
  }
  if (!a4)
  {
    unint64_t v11 = result;
LABEL_22:
    sub_24D4C6AA4(result, a2, a3 & 1);
    return v11;
  }
  uint64_t v5 = 0;
  uint64_t v6 = a5 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a5 + 32);
  int v8 = *(_DWORD *)(a5 + 36);
  unint64_t v9 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = a5 + 88;
  unint64_t v11 = result;
  int v12 = a2;
  while ((v11 & 0x8000000000000000) == 0 && (uint64_t)v11 < v7)
  {
    if (v12 != v8) {
      goto LABEL_24;
    }
    unint64_t v13 = v11 >> 6;
    uint64_t v14 = *(void *)(v6 + 8 * (v11 >> 6));
    if ((v14 & (1 << v11)) == 0) {
      goto LABEL_24;
    }
    unint64_t v15 = v14 & (-2 << (v11 & 0x3F));
    if (v15)
    {
      unint64_t v11 = __clz(__rbit64(v15)) | v11 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v16 = v13 + 1;
      unint64_t v11 = v7;
      if (v13 + 1 < v9)
      {
        unint64_t v17 = *(void *)(v6 + 8 * v16);
        if (!v17)
        {
          unint64_t v16 = v13 + 2;
          unint64_t v11 = v7;
          if (v13 + 2 >= v9) {
            goto LABEL_5;
          }
          unint64_t v17 = *(void *)(v6 + 8 * v16);
          if (!v17)
          {
            while (v9 - 3 != v13)
            {
              unint64_t v17 = *(void *)(v10 + 8 * v13++);
              if (v17)
              {
                unint64_t v16 = v13 + 2;
                goto LABEL_13;
              }
            }
            unint64_t v11 = v7;
            goto LABEL_5;
          }
        }
LABEL_13:
        unint64_t v11 = __clz(__rbit64(v17)) + (v16 << 6);
      }
    }
LABEL_5:
    ++v5;
    int v12 = v8;
    if (v5 == a4) {
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24D4C1EB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B195DA0);
  uint64_t v5 = v4 - 8;
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  int v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193ED0) + 48);
  uint64_t v12 = *(int *)(v5 + 56);
  uint64_t v13 = (uint64_t)&v10[v12];
  uint64_t v14 = (uint64_t)a1 + v12;
  uint64_t v15 = *a1;
  char v16 = *((unsigned char *)a1 + 8);
  *(void *)uint64_t v10 = *a1;
  v10[8] = v16;
  sub_24D415FD0((uint64_t)a1 + v12, (uint64_t)&v10[v12], (uint64_t *)&unk_26B199410);
  *(void *)a2 = v15;
  *(unsigned char *)(a2 + 8) = v16;
  uint64_t v17 = (uint64_t)&v8[*(int *)(v5 + 56)];
  sub_24D415FD0(v14, v17, (uint64_t *)&unk_26B199410);
  sub_24D3F0BA0(v17, v11, (uint64_t *)&unk_26B199410);
  return sub_24D415F74(v13, (uint64_t *)&unk_26B199410);
}

uint64_t sub_24D4C2124(uint64_t a1)
{
  uint64_t v3 = sub_24DCC93F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (void *)((char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(*(void *)(a1 + 16) + 64);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if ((v7 & 1) == 0)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v10 = v1;
  uint64_t v11 = sub_24DCC9068();
  os_log_type_t v12 = sub_24DCCA118();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412290;
    id v24 = v10;
    uint64_t v15 = v10;
    sub_24DCCA428();
    *uint64_t v14 = v10;

    _os_log_impl(&dword_24D3D0000, v11, v12, "📖  reset stream for %@", v13, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v14, -1, -1);
    MEMORY[0x25332B030](v13, -1, -1);
  }
  else
  {
  }
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24DCC91D8();
  swift_release();
  uint64_t result = swift_release();
  char v16 = v24 + 1;
  if (v24 == (char *)-1) {
    goto LABEL_10;
  }
  uint64_t v17 = OBJC_IVAR____TtC9libfssync14FPFSEnumerator_previousAnchor;
  *(void *)&v10[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_previousAnchor] = v16;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24DCC91D8();
  swift_release();
  swift_release();
  if (v16 >= v24)
  {
    unint64_t v18 = sub_24D42FC68(MEMORY[0x263F8EE78]);
    uint64_t v19 = (unint64_t *)&v10[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_changedItemsByID];
    swift_beginAccess();
    *uint64_t v19 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = &v10[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_deletedItemsIDs];
    swift_beginAccess();
    *(void *)uint64_t v20 = MEMORY[0x263F8EE88];
    swift_bridgeObjectRelease();
  }
  uint64_t v21 = *(void *)&v10[v17];
  swift_getKeyPath();
  swift_getKeyPath();
  v23[1] = v21;
  uint64_t v22 = v10;
  return sub_24DCC91E8();
}

void sub_24D4C24C0()
{
  uint64_t v1 = sub_24DCC92F8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC9398();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x25332B1A0](&v0[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend]);
  if (!v9) {
    return;
  }
  uint64_t v10 = (char *)v9;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v0;
  os_log_type_t v12 = &v10[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v25 = (id)MEMORY[0x25332B1A0](&v10[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  uint64_t v13 = v0;
  if (v25)
  {
    if (objc_msgSend(v25, sel_unableToStartup))
    {

      swift_release();
      id v14 = v25;

      return;
    }
  }
  if ((v10[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v15 = (void *)MEMORY[0x25332B1A0](v12);
    if (v15)
    {
      char v16 = v15;
      id v25 = objc_msgSend(v15, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1;
      id v24 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v26 = MEMORY[0x263F8EE78];
      uint64_t v23 = sub_24D4C3994((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      unint64_t v18 = v24;
      id v17 = v25;
      MEMORY[0x2533282B0](0, v8, v4, v24);
      _Block_release(v18);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
  uint64_t v19 = *(void **)&v10[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v20 = *(void **)&v10[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v10;
  v21[3] = nullsub_1;
  v21[4] = 0;
  v21[5] = sub_24D4C2E10;
  v21[6] = v11;
  uint64_t v22 = v10;
  swift_retain();
  sub_24D3E2DA8((uint64_t)"reset()", 7, 2, v19, v20, (uint64_t)sub_24D3E5B9C, (uint64_t)v21);

  swift_release();
  swift_release();
}

uint64_t sub_24D4C2920(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_24DCC9068();
  os_log_type_t v5 = sub_24DCCA118();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v6 = 0;
    _os_log_impl(&dword_24D3D0000, v4, v5, "📖  requested to reset stream", v6, 2u);
    MEMORY[0x25332B030](v6, -1, -1);
  }

  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a1;
  id v8 = a2;
  swift_retain();
  sub_24D3FBC7C((uint64_t)"reset()", 7, 2, nullsub_1, 0, (uint64_t)sub_24D4C2EA0, v7);

  return swift_release();
}

uint64_t sub_24D4C2AB8()
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24D3D4384(*(void *)(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID), *(unsigned char *)(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_vfsItemID + 8));
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_lifetimeExtender), sel_requestEffectivePID);
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0x3A736670663CLL;
}

void sub_24D4C2BF8()
{
  sub_24DCC9078();
  if (v0 <= 0x3F)
  {
    sub_24D4C2D2C();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

void sub_24D4C2D2C()
{
  if (!qword_26B196BA8)
  {
    unint64_t v0 = sub_24DCC91F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B196BA8);
    }
  }
}

uint64_t sub_24D4C2D84()
{
  if (MEMORY[0x263F8EEE0]) {
    return __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B19A0F0);
  }
  else {
    return MEMORY[0x263F8EE60] + 8;
  }
}

uint64_t sub_24D4C2DAC()
{
  return swift_unknownObjectRetain();
}

void (*sub_24D4C2DBC(uint64_t (*a1)(uint64_t)))(uint64_t *, void)
{
  return sub_24D4B98F4(a1);
}

uint64_t sub_24D4C2DD8()
{
  return swift_deallocObject();
}

uint64_t sub_24D4C2E10(uint64_t a1)
{
  return sub_24D4C2920(a1, *(void **)(v1 + 16));
}

uint64_t sub_24D4C2E18()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D4C2E60()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D4C2EA0()
{
  return sub_24D4C2124(*(void *)(v0 + 24));
}

uint64_t sub_24D4C2ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_24DB3A898(a2);
  if (v8) {
    goto LABEL_19;
  }
  int v9 = *(_DWORD *)(a2 + 36);
  if (v9 != v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v10 = 1 << *(unsigned char *)(a2 + 32);
  if (v10 < result)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (*(unsigned char *)(a1 + 16))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v11 = *(void *)(a1 + 8);
  if (v9 != v11) {
    goto LABEL_15;
  }
  if (*(void *)a1 < result)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (*(unsigned char *)(a1 + 40))
  {
LABEL_21:
    __break(1u);
    return result;
  }
  uint64_t v12 = *(void *)(a1 + 32);
  if (v9 != v12) {
    goto LABEL_17;
  }
  uint64_t v13 = *(void *)(a1 + 24);
  if (v10 < v13)
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  *(void *)a3 = *(void *)a1;
  *(void *)(a3 + 8) = v11;
  *(unsigned char *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = v13;
  *(void *)(a3 + 32) = v12;
  *(unsigned char *)(a3 + 40) = 0;
  *(void *)(a3 + 48) = a2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_24D4C2FB8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24DCC91D8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24D4C3038(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_24DCC91E8();
}

void sub_24D4C30B0(uint64_t a1, int a2, void *a3)
{
  long long v80 = a3;
  int v71 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v82 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4 - 8);
  long long v79 = &v70[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986BBE8);
  MEMORY[0x270FA5388](v6 - 8);
  char v8 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = *(void *)(a1 + 8);
  char v11 = *(unsigned char *)(a1 + 16);
  uint64_t v12 = *(void *)(a1 + 24);
  uint64_t v13 = *(void *)(a1 + 32);
  int v14 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v16 = *(void *)(a1 + 48);
  uint64_t v15 = *(void *)(a1 + 56);
  uint64_t v17 = *(void *)(a1 + 64);
  uint64_t v87 = v9;
  uint64_t v88 = v10;
  char v89 = v11;
  uint64_t v90 = v12;
  uint64_t v91 = v13;
  char v92 = v14;
  uint64_t v93 = v16;
  uint64_t v94 = v9;
  uint64_t v95 = v10;
  char v96 = v11;
  uint64_t v97 = v15;
  uint64_t v98 = v17;
  sub_24D4C6AA4(v9, v10, v11);
  uint64_t v72 = v9;
  uint64_t v18 = v9;
  uint64_t v19 = (uint64_t)v79;
  uint64_t v73 = v10;
  uint64_t v20 = v10;
  uint64_t v21 = v80;
  sub_24D4C6AA4(v18, v20, v11);
  uint64_t v76 = v12;
  uint64_t v75 = v13;
  int v74 = v14;
  sub_24D4C6AA4(v12, v13, v14);
  uint64_t v78 = v16;
  swift_bridgeObjectRetain();
  uint64_t v77 = v17;
  swift_retain();
  sub_24D81B344((uint64_t)v8);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193ED0);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(v8, 1, v22) == 1) {
    goto LABEL_2;
  }
  uint64_t v29 = (uint64_t)&v8[*(int *)(v22 + 48)];
  char v31 = v8[8];
  uint64_t v85 = *(void *)v8;
  uint64_t v30 = v85;
  char v86 = v31;
  sub_24D3F0BA0(v29, v19, (uint64_t *)&unk_26B199410);
  uint64_t v32 = (void *)*v21;
  unint64_t v34 = sub_24D6AD5F8(v30, v31);
  uint64_t v35 = v32[2];
  BOOL v36 = (v33 & 1) == 0;
  uint64_t v37 = v35 + v36;
  if (__OFADD__(v35, v36)) {
    goto LABEL_22;
  }
  char v38 = v33;
  if (v32[3] >= v37)
  {
    if (v71)
    {
      if (v33) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_24DC78174();
      if (v38) {
        goto LABEL_10;
      }
    }
LABEL_13:
    int v49 = (void *)*v21;
    *(void *)(*v21 + 8 * (v34 >> 6) + 64) |= 1 << v34;
    uint64_t v50 = v49[6] + 16 * v34;
    *(void *)uint64_t v50 = v30;
    *(unsigned char *)(v50 + 8) = v31;
    sub_24D3F0BA0(v19, v49[7] + *(void *)(v82 + 72) * v34, (uint64_t *)&unk_26B199410);
    uint64_t v51 = v49[2];
    BOOL v52 = __OFADD__(v51, 1);
    uint64_t v53 = v51 + 1;
    if (v52)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v49[2] = v53;
    sub_24D81B344((uint64_t)v8);
    uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193ED0);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v8, 1, v54) == 1)
    {
LABEL_2:
      sub_24D4C6A6C(v72, v73, v11);
      sub_24D4C6A6C(v76, v75, v74);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v23 = v90;
      uint64_t v24 = v91;
      char v25 = v92;
      uint64_t v26 = v94;
      uint64_t v27 = v95;
      char v28 = v96;
      sub_24D4C6A6C(v87, v88, v89);
      sub_24D4C6A6C(v23, v24, v25);
      swift_bridgeObjectRelease();
      sub_24D4C6A6C(v26, v27, v28);
      swift_release();
      return;
    }
    while (1)
    {
      uint64_t v55 = (uint64_t)&v8[*(int *)(v54 + 48)];
      char v57 = v8[8];
      uint64_t v85 = *(void *)v8;
      uint64_t v56 = v85;
      char v86 = v57;
      sub_24D3F0BA0(v55, v19, (uint64_t *)&unk_26B199410);
      char v58 = (void *)*v21;
      unint64_t v59 = sub_24D6AD5F8(v56, v57);
      uint64_t v61 = v58[2];
      BOOL v62 = (v60 & 1) == 0;
      BOOL v52 = __OFADD__(v61, v62);
      uint64_t v63 = v61 + v62;
      if (v52) {
        break;
      }
      char v64 = v60;
      if (v58[3] < v63)
      {
        sub_24D6FBCA4(v63, 1);
        unint64_t v59 = sub_24D6AD5F8(v56, v57);
        if ((v64 & 1) != (v65 & 1)) {
          goto LABEL_24;
        }
      }
      if (v64) {
        goto LABEL_10;
      }
      uint64_t v66 = (void *)*v21;
      *(void *)(*v21 + 8 * (v59 >> 6) + 64) |= 1 << v59;
      uint64_t v67 = v66[6] + 16 * v59;
      *(void *)uint64_t v67 = v56;
      *(unsigned char *)(v67 + 8) = v57;
      sub_24D3F0BA0(v19, v66[7] + *(void *)(v82 + 72) * v59, (uint64_t *)&unk_26B199410);
      uint64_t v68 = v66[2];
      BOOL v52 = __OFADD__(v68, 1);
      uint64_t v69 = v68 + 1;
      if (v52) {
        goto LABEL_23;
      }
      v66[2] = v69;
      sub_24D81B344((uint64_t)v8);
      uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193ED0);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v54 - 8) + 48))(v8, 1, v54) == 1) {
        goto LABEL_2;
      }
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_24D6FBCA4(v37, v71 & 1);
  unint64_t v39 = sub_24D6AD5F8(v30, v31);
  if ((v38 & 1) != (v40 & 1))
  {
LABEL_24:
    sub_24DCCAF18();
    __break(1u);
    goto LABEL_25;
  }
  unint64_t v34 = v39;
  if ((v38 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_10:
  uint64_t v41 = (void *)swift_allocError();
  swift_willThrow();
  id v99 = v41;
  uint64_t v81 = v41;
  id v42 = v41;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_24D4C6A6C(v72, v73, v11);
    sub_24D4C6A6C(v76, v75, v74);
    swift_release();
    swift_bridgeObjectRelease();
    sub_24D415F74(v19, (uint64_t *)&unk_26B199410);
    uint64_t v43 = v90;
    uint64_t v44 = v91;
    char v45 = v92;
    uint64_t v46 = v94;
    uint64_t v47 = v95;
    char v48 = v96;
    sub_24D4C6A6C(v87, v88, v89);
    sub_24D4C6A6C(v43, v44, v45);
    swift_bridgeObjectRelease();
    sub_24D4C6A6C(v46, v47, v48);
    swift_release();

    return;
  }
LABEL_25:
  uint64_t v83 = 0;
  unint64_t v84 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCCA948();
  sub_24DCC9968();
  sub_24DCCA978();
  __break(1u);
}

uint64_t sub_24D4C3808(uint64_t result, uint64_t a2, char a3, uint64_t a4, uint64_t a5, int a6, char a7, uint64_t a8)
{
  if (a4 < 0)
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
  }
  else
  {
    if (a4)
    {
      uint64_t v8 = 0;
      char v9 = a7 & 1;
      char v10 = (a3 | a7) & 1;
      uint64_t v11 = a8 + 64;
      unint64_t v12 = result;
      int v13 = a2;
      while (1)
      {
        if (v10) {
          goto LABEL_31;
        }
        if (v13 != a6)
        {
          __break(1u);
LABEL_27:
          __break(1u);
LABEL_28:
          __break(1u);
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
        if (v12 == a5)
        {
          unint64_t v12 = 0;
          goto LABEL_25;
        }
        if ((v12 & 0x8000000000000000) != 0) {
          goto LABEL_27;
        }
        uint64_t v14 = 1 << *(unsigned char *)(a8 + 32);
        if ((uint64_t)v12 >= v14) {
          goto LABEL_27;
        }
        unint64_t v15 = v12 >> 6;
        unint64_t v16 = *(void *)(v11 + 8 * (v12 >> 6));
        if (((v16 >> v12) & 1) == 0) {
          goto LABEL_28;
        }
        if (*(_DWORD *)(a8 + 36) != a6) {
          goto LABEL_29;
        }
        unint64_t v17 = v16 & (-2 << (v12 & 0x3F));
        if (v17)
        {
          unint64_t v12 = __clz(__rbit64(v17)) | v12 & 0xFFFFFFFFFFFFFFC0;
        }
        else
        {
          unint64_t v18 = v15 + 1;
          unint64_t v19 = (unint64_t)(v14 + 63) >> 6;
          if (v15 + 1 >= v19) {
            goto LABEL_22;
          }
          unint64_t v20 = *(void *)(v11 + 8 * v18);
          if (!v20)
          {
            unint64_t v18 = v15 + 2;
            if (v15 + 2 >= v19) {
              goto LABEL_22;
            }
            unint64_t v20 = *(void *)(v11 + 8 * v18);
            if (!v20)
            {
              while (v19 - 3 != v15)
              {
                unint64_t v20 = *(void *)(a8 + 88 + 8 * v15++);
                if (v20)
                {
                  unint64_t v18 = v15 + 2;
                  goto LABEL_16;
                }
              }
LABEL_22:
              unint64_t v12 = 1 << *(unsigned char *)(a8 + 32);
              goto LABEL_5;
            }
          }
LABEL_16:
          unint64_t v12 = __clz(__rbit64(v20)) + (v18 << 6);
        }
LABEL_5:
        ++v8;
        int v13 = a6;
        char v10 = v9;
        if (v8 == a4) {
          goto LABEL_25;
        }
      }
    }
    unint64_t v12 = result;
LABEL_25:
    sub_24D4C6AA4(result, a2, a3 & 1);
    return v12;
  }
  return result;
}

uint64_t sub_24D4C3994(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D4C39EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (!v3) {
    return result;
  }
  uint64_t v27 = MEMORY[0x263F8EE78];
  sub_24DCCA838();
  uint64_t result = sub_24DC87F98(a1);
  uint64_t v6 = result;
  uint64_t v8 = v7;
  char v10 = v9 & 1;
  uint64_t v11 = *(void **)(a2 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_providerDomainID);
  char v25 = (void *)*MEMORY[0x263F053F8];
  uint64_t v26 = (void *)*MEMORY[0x263F053F0];
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v6 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_26;
    }
    if (*(_DWORD *)(a1 + 36) != v8) {
      goto LABEL_27;
    }
    uint64_t v17 = *(void *)(a1 + 48) + 16 * v6;
    uint64_t v18 = *(void *)v17;
    unsigned int v19 = *(unsigned __int8 *)(v17 + 8);
    if (v19 == 2 && v18 == 0)
    {
      id v12 = v11;
      int v13 = v26;
    }
    else
    {
      if (v19 != 2 || v18 != 1)
      {
        if (v19 > 1)
        {
          id v24 = v11;
        }
        else
        {
          id v23 = v11;
          sub_24DCCAD78();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24DCC9968();
        }
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        id v14 = (id)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      id v22 = v11;
      int v13 = v25;
    }
    id v14 = v13;
LABEL_5:
    objc_msgSend(objc_allocWithZone(MEMORY[0x263F054B8]), sel_initWithProviderDomainID_itemIdentifier_, v11, v14);

    sub_24DCCA808();
    sub_24DCCA848();
    sub_24DCCA858();
    sub_24DCCA818();
    uint64_t result = sub_24DC8803C(v6, v8, v10 & 1, a1);
    uint64_t v6 = result;
    uint64_t v8 = v15;
    char v10 = v16 & 1;
    if (!--v3)
    {
      sub_24D4C6A6C(result, v15, v16 & 1);
      return v27;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24D4C3CEC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v45 = a2;
  unint64_t v46 = a3;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B195DA0);
  uint64_t v6 = MEMORY[0x270FA5388](v52);
  uint64_t v44 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v41 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v50 = (uint64_t *)((char *)&v41 - v11);
  MEMORY[0x270FA5388](v10);
  int v13 = (char *)&v41 - v12;
  uint64_t v59 = MEMORY[0x263F8EE78];
  uint64_t v15 = *(void *)a1;
  uint64_t v14 = *(void *)(a1 + 8);
  char v16 = *(unsigned char *)(a1 + 16);
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = *(void *)(a1 + 32);
  int v53 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v19 = *(void *)(a1 + 48);
  sub_24D4C6AA4(v15, v14, v16);
  uint64_t v54 = v14;
  uint64_t v55 = v15;
  sub_24D4C6AA4(v15, v14, v16);
  sub_24D4C6AA4(v17, v18, v53);
  uint64_t result = swift_bridgeObjectRetain();
  if (v16 & 1) != 0 || (v53) {
    goto LABEL_45;
  }
  uint64_t v57 = v19 + 64;
  uint64_t v42 = v17;
  uint64_t v43 = v18;
  uint64_t v41 = v19 + 80;
  uint64_t v21 = v54;
  int64_t v22 = v55;
  char v48 = v13;
  uint64_t v49 = v19;
  uint64_t v47 = v18;
  while (v21 == v18)
  {
    if (v22 == v17)
    {
      sub_24D4C6A6C(v55, v54, 0);
      sub_24D4C6A6C(v17, v18, 0);
      swift_bridgeObjectRelease();
      sub_24D4C6A6C(v17, v21, 0);
      return v59;
    }
    if (v22 < v55) {
      goto LABEL_36;
    }
    if (v18 != v54) {
      goto LABEL_37;
    }
    if (v22 >= v17) {
      goto LABEL_38;
    }
    if (v22 < 0 || v22 >= 1 << *(unsigned char *)(v19 + 32)) {
      goto LABEL_39;
    }
    unint64_t v23 = (unint64_t)v22 >> 6;
    if ((*(void *)(v57 + 8 * ((unint64_t)v22 >> 6)) & (1 << v22)) == 0) {
      goto LABEL_40;
    }
    if (*(_DWORD *)(v19 + 36) != v18) {
      goto LABEL_41;
    }
    uint64_t v56 = v4;
    uint64_t v24 = (uint64_t)v51;
    uint64_t v25 = v52;
    uint64_t v26 = (uint64_t)&v51[*(int *)(v52 + 48)];
    uint64_t v27 = *(void *)(v19 + 56);
    uint64_t v28 = *(void *)(v19 + 48) + 16 * v22;
    uint64_t v29 = *(void *)v28;
    char v30 = *(unsigned char *)(v28 + 8);
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
    sub_24D415FD0(v27 + *(void *)(*(void *)(v31 - 8) + 72) * v22, v26, (uint64_t *)&unk_26B199410);
    *(void *)uint64_t v24 = v29;
    *(unsigned char *)(v24 + 8) = v30;
    uint64_t v32 = (uint64_t)v50;
    void *v50 = v29;
    *(unsigned char *)(v32 + 8) = v30;
    uint64_t v33 = (uint64_t)v48;
    uint64_t v19 = v49;
    sub_24D415FD0(v26, v32 + *(int *)(v25 + 48), (uint64_t *)&unk_26B199410);
    sub_24D415F74(v24, &qword_26B195DA0);
    uint64_t result = sub_24D3F0BA0(v32, v33, &qword_26B195DA0);
    uint64_t v34 = 1 << *(unsigned char *)(v19 + 32);
    if (v22 >= v34) {
      goto LABEL_42;
    }
    uint64_t v35 = *(void *)(v57 + 8 * v23);
    if ((v35 & (1 << v22)) == 0) {
      goto LABEL_43;
    }
    uint64_t v18 = v47;
    if (*(_DWORD *)(v19 + 36) != v47) {
      goto LABEL_44;
    }
    unint64_t v36 = v35 & (-2 << (v22 & 0x3F));
    if (v36)
    {
      int64_t v22 = __clz(__rbit64(v36)) | v22 & 0xFFFFFFFFFFFFFFC0;
      uint64_t v4 = v56;
LABEL_27:
      uint64_t v17 = v42;
      goto LABEL_28;
    }
    unint64_t v37 = v23 + 1;
    unint64_t v38 = (unint64_t)(v34 + 63) >> 6;
    uint64_t v4 = v56;
    if (v23 + 1 >= v38)
    {
      int64_t v22 = 1 << *(unsigned char *)(v19 + 32);
      goto LABEL_27;
    }
    unint64_t v39 = *(void *)(v57 + 8 * v37);
    uint64_t v17 = v42;
    if (v39)
    {
LABEL_25:
      int64_t v22 = __clz(__rbit64(v39)) + (v37 << 6);
    }
    else
    {
      while (v38 - 2 != v23)
      {
        unint64_t v39 = *(void *)(v41 + 8 * v23++);
        if (v39)
        {
          unint64_t v37 = v23 + 1;
          goto LABEL_25;
        }
      }
      int64_t v22 = 1 << *(unsigned char *)(v19 + 32);
    }
LABEL_28:
    uint64_t v40 = v44;
    sub_24D3F0BA0(v33, v44, &qword_26B195DA0);
    sub_24D91914C(v40, v45, v46, &v58);
    uint64_t result = sub_24D415F74(v40, &qword_26B195DA0);
    if (v4)
    {
      sub_24D4C6A6C(v55, v54, 0);
      sub_24D4C6A6C(v17, v18, 0);
      swift_bridgeObjectRelease();
      sub_24D4C6A6C(v22, v43, 0);
      return swift_bridgeObjectRelease();
    }
    if (v58)
    {
      MEMORY[0x253327CA0](result);
      if (*(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24DCC9C78();
      }
      sub_24DCC9CD8();
      uint64_t result = sub_24DCC9C48();
    }
    uint64_t v21 = v43;
    if (v53) {
      goto LABEL_45;
    }
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_24D4C41B0(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_24DC9FBB8(__src, &__src[a2]);
  }
  sub_24DCC8518();
  swift_allocObject();
  sub_24DCC84C8();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_24DCC8AC8();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

uint64_t sub_24D4C4264()
{
  v9[1] = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24DCC8B68();
  uint64_t v2 = v0;
  unint64_t v3 = v1;
  switch(v1 >> 62)
  {
    case 1uLL:
      LODWORD(v4) = HIDWORD(v0) - v0;
      if (__OFSUB__(HIDWORD(v0), v0))
      {
        __break(1u);
LABEL_11:
        __break(1u);
      }
      uint64_t v4 = (int)v4;
LABEL_6:
      if (v4 == 8)
      {
        v9[0] = 0;
        sub_24D4B8310((uint64_t)v9, 1, 0, 0, 1, v0, v1);
        sub_24D400DCC(v2, v3);
        return v9[0];
      }
      else
      {
LABEL_8:
        sub_24D400DCC(v0, v1);
        return 0;
      }
    case 2uLL:
      uint64_t v6 = *(void *)(v0 + 16);
      uint64_t v5 = *(void *)(v0 + 24);
      BOOL v7 = __OFSUB__(v5, v6);
      uint64_t v4 = v5 - v6;
      if (!v7) {
        goto LABEL_6;
      }
      goto LABEL_11;
    case 3uLL:
      goto LABEL_8;
    default:
      uint64_t v4 = BYTE6(v1);
      goto LABEL_6;
  }
}

void sub_24D4C437C(char *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  uint64_t v5 = OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated;
  _Block_copy(a2);
  if ((a1[v5] & 1) != 0 || (uint64_t v6 = MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend])) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4C3994(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    uint64_t v11 = (void *)sub_24DCC8818();
    ((void (**)(void, void, void *))a2)[2](a2, 0, v11);
    swift_release();
  }
  else
  {
    BOOL v7 = (void *)v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_24D4C7228;
    *(void *)(v8 + 24) = v4;
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = sub_24D4C7228;
    v9[3] = v4;
    v9[4] = a1;
    swift_retain_n();
    uint64_t v10 = a1;
    sub_24D6222C0((uint64_t)"currentSyncAnchor(completion:)", 30, 2, (void (*)(void *, id))sub_24D4C7230, v8, (uint64_t)sub_24D4C7260, (uint64_t)v9);
    swift_release();

    swift_release();
    swift_release();
  }
}

uint64_t sub_24D4C4594(uint64_t a1)
{
  return sub_24D601854(a1, *(uint64_t (**)(void, void, void, void))(v1 + 16));
}

void sub_24D4C45A0(uint64_t a1)
{
  sub_24D5B0130(*(void **)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), *(void (**)(long long *))(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D4C45BC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = *(uint64_t (**)(void *))(v4 + 16);
  v7[0] = a1;
  v7[1] = a2;
  v7[2] = a3;
  char v8 = a4 & 1;
  return v5(v7);
}

uint64_t sub_24D4C4600()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    uint64_t v21 = v4;
    uint64_t v22 = (v2 + 32) & ~v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + v6[12];
    char v8 = (int *)type metadata accessor for ItemMetadata();
    uint64_t v9 = v7 + v8[7];
    uint64_t v10 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v12(v9, v10);
    v12(v7 + v8[8], v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = v7 + v8[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
      v12(v13, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = (uint64_t *)(v7 + v8[33]);
    unint64_t v15 = v14[1];
    if (v15 >> 60 != 15) {
      sub_24D400DCC(*v14, v15);
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v5 + v6[13];
    uint64_t v17 = *(void **)(v16 + 16);
    uint64_t v4 = v21;
    if (v17 != (void *)1)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v16 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24D466534(*(void *)(v5 + v6[17]), *(void *)(v5 + v6[17] + 8));
    uint64_t v3 = v22;
  }
  unint64_t v18 = (((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();
  swift_release();
  objc_release(*(id *)(v0
                     + ((((((((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

void sub_24D4C4980()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24D4BE358(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + v2, *(int **)(v0 + v3), *(unsigned char **)(v0 + v4), *(void **)(v0 + v5), *(void *)(v0 + v6), *(void **)(v0 + v7), *(void *)(v0 + v7 + 8), *(void *)(v0 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(char **)(v0 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_24D4C4A74(void *a1)
{
  sub_24D4657F0(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_24D4C4A7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D4C4AE4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D4C4B34(uint64_t a1)
{
  sub_24D4BF60C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(void, void, void, void, id))(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

void sub_24D4C4B44(uint64_t a1, const void *a2)
{
  sub_24D4BAEFC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48));
}

uint64_t sub_24D4C4B68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24D4BB424(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned __int8 *)(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(const void **)(v4 + 64), *(void **)(v4 + 72));
}

uint64_t sub_24D4C4BA4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, const void *a5)
{
  uint64_t v114 = a3;
  uint64_t v112 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  uint64_t v110 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v111 = v9;
  uint64_t v113 = (uint64_t)v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC9078();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v108 = v13;
  uint64_t v109 = (uint64_t (*)())((char *)v104 - (((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v121 = (char *)v104 - v14;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a5;
  uint64_t v116 = (uint64_t)a5;
  _Block_copy(a5);
  if (qword_26B194010 != -1) {
    swift_once();
  }
  id v16 = (id)qword_26B1A22E8;
  uint64_t v117 = a1;
  uint64_t v17 = sub_24DCC8B68();
  unint64_t v19 = v18;
  uint64_t v20 = sub_24DCC8B68();
  unint64_t v22 = v21;
  char v23 = sub_24D401DDC(v17, v19, v20, v21);
  sub_24D400DCC(v20, v22);
  sub_24D400DCC(v17, v19);

  uint64_t v120 = v15;
  if (v23)
  {
    uint64_t v24 = 0;
  }
  else
  {
    if (qword_26B194018 != -1) {
      swift_once();
    }
    id v25 = (id)qword_26B1A2378;
    uint64_t v26 = sub_24DCC8B68();
    unint64_t v28 = v27;
    uint64_t v29 = sub_24DCC8B68();
    unint64_t v31 = v30;
    char v32 = sub_24D401DDC(v26, v28, v29, v30);
    sub_24D400DCC(v29, v31);
    sub_24D400DCC(v26, v28);

    if (v32)
    {
      uint64_t v24 = 0;
    }
    else
    {
      sub_24DCC86D8();
      swift_allocObject();
      sub_24DCC86C8();
      type metadata accessor for PaginatedContinuation();
      uint64_t v33 = sub_24DCC8B68();
      unint64_t v35 = v34;
      sub_24D4C3994(&qword_26986BBD0, (void (*)(uint64_t))type metadata accessor for PaginatedContinuation);
      sub_24DCC86B8();
      swift_release();
      sub_24D400DCC(v33, v35);
      uint64_t v24 = v123;
    }
  }
  unint64_t v36 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v36(v121, &a4[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_logger], v10);
  swift_retain_n();
  unint64_t v37 = a4;
  unint64_t v38 = sub_24DCC9068();
  os_log_type_t v39 = sub_24DCCA118();
  BOOL v40 = os_log_type_enabled(v38, v39);
  uint64_t v118 = v10;
  uint64_t v119 = v11;
  if (v40)
  {
    v104[1] = v11 + 16;
    unint64_t v107 = v36;
    uint64_t v41 = swift_slowAlloc();
    uint64_t v42 = (void *)swift_slowAlloc();
    uint64_t v106 = swift_slowAlloc();
    v125[0] = v106;
    *(_DWORD *)uint64_t v41 = 138412546;
    uint64_t v123 = (uint64_t)v37;
    uint64_t v43 = v24;
    uint64_t v44 = v37;
    v104[2] = &v124;
    sub_24DCCA428();
    uint64_t v105 = v42;
    *uint64_t v42 = v37;

    uint64_t v24 = v43;
    *(_WORD *)(v41 + 12) = 2080;
    if (v43)
    {
      uint64_t v123 = 979789423;
      unint64_t v124 = 0xE400000000000000;
      uint64_t v122 = *(void *)(v43 + 16);
      swift_retain();
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v45 = v123;
      unint64_t v46 = v124;
    }
    else
    {
      uint64_t v45 = 0x6C616974696E693CLL;
      unint64_t v46 = 0xE90000000000003ELL;
    }
    uint64_t v123 = sub_24D418FB4(v45, v46, v125);
    sub_24DCCA428();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v38, v39, "📖  %@: enumerating page %s", (uint8_t *)v41, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    uint64_t v47 = v105;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v47, -1, -1);
    uint64_t v48 = v106;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v48, -1, -1);
    MEMORY[0x25332B030](v41, -1, -1);

    uint64_t v11 = v119;
    uint64_t v10 = v118;
    unint64_t v36 = v107;
  }
  else
  {
    swift_release_n();
  }
  if ((v37[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated] & 1) != 0
    || (uint64_t v49 = MEMORY[0x25332B1A0](&v37[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend])) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    v125[0] = -1002;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4C3994(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    long long v80 = (void *)v123;
    uint64_t v81 = v37;
    swift_retain_n();
    id v82 = v80;
    uint64_t v83 = v81;
    id v84 = v82;
    uint64_t v85 = sub_24DCC9068();
    int v86 = sub_24DCCA128();
    if (os_log_type_enabled(v85, (os_log_type_t)v86))
    {
      LODWORD(v114) = v86;
      uint64_t v87 = swift_slowAlloc();
      uint64_t v88 = (void *)swift_slowAlloc();
      uint64_t v117 = swift_slowAlloc();
      v125[0] = v117;
      *(_DWORD *)uint64_t v87 = 138412802;
      uint64_t v115 = v24;
      uint64_t v123 = (uint64_t)v83;
      char v89 = v83;
      uint64_t v90 = v115;
      sub_24DCCA428();
      *uint64_t v88 = v83;

      *(_WORD *)(v87 + 12) = 2080;
      if (v90)
      {
        uint64_t v123 = 979789423;
        unint64_t v124 = 0xE400000000000000;
        uint64_t v122 = *(void *)(v90 + 16);
        swift_retain();
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v91 = v123;
        unint64_t v92 = v124;
      }
      else
      {
        uint64_t v91 = 0x6C616974696E693CLL;
        unint64_t v92 = 0xE90000000000003ELL;
      }
      uint64_t v123 = sub_24D418FB4(v91, v92, v125);
      sub_24DCCA428();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v87 + 22) = 2112;
      uint64_t v123 = (uint64_t)v84;
      sub_24D4C3994(&qword_26B193F40, type metadata accessor for NSFileProviderError);
      id v93 = v84;
      uint64_t v94 = sub_24DCCAD98();
      if (v94)
      {
        uint64_t v95 = (void *)v94;
      }
      else
      {
        uint64_t v95 = (void *)swift_allocError();
        *char v96 = v123;
      }
      uint64_t v97 = (void *)sub_24DCC8818();

      id v98 = objc_msgSend(v97, sel_fp_prettyDescription);
      uint64_t v123 = (uint64_t)v98;
      sub_24DCCA428();
      v88[1] = v98;

      _os_log_impl(&dword_24D3D0000, v85, (os_log_type_t)v114, "📖  %@: enumerating page %s failed: %@", (uint8_t *)v87, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v88, -1, -1);
      uint64_t v99 = v117;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v99, -1, -1);
      MEMORY[0x25332B030](v87, -1, -1);

      uint64_t v10 = v118;
    }
    else
    {

      swift_release_n();
    }
    sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
    id v100 = v84;
    uint64_t v101 = (void *)sub_24DCC9C18();
    int v102 = (void *)sub_24DCC8818();
    (*(void (**)(uint64_t, void *, void, void, void, void *))(v116 + 16))(v116, v101, 0, 0, 0, v102);
    swift_release();

    (*(void (**)(char *, uint64_t))(v119 + 8))(v121, v10);
  }
  else
  {
    uint64_t v50 = v49;
    unint64_t v107 = (void (*)(char *, char *, uint64_t))v49;
    uint64_t v116 = swift_allocObject();
    uint64_t v51 = v109;
    v36((char *)v109, v121, v10);
    uint64_t v52 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v53 = v24;
    uint64_t v115 = v24;
    uint64_t v54 = (v52 + 24) & ~v52;
    unint64_t v55 = ((unint64_t)v108 + v54 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v56 = (v55 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = swift_allocObject();
    uint64_t v58 = v11;
    uint64_t v59 = v57;
    *(void *)(v57 + 16) = v50;
    (*(void (**)(uint64_t, uint64_t (*)(), uint64_t))(v58 + 32))(v57 + v54, v51, v10);
    *(void *)(v59 + v55) = v37;
    *(void *)(v59 + v56) = v53;
    char v60 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + ((v56 + 15) & 0xFFFFFFFFFFFFFFF8));
    id v108 = sub_24D4C6BE8;
    uint64_t v61 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v120;
    *char v60 = sub_24D4C6BE8;
    v60[1] = v61;
    uint64_t v109 = sub_24D4C39E0;
    uint64_t v62 = v116;
    *(void *)(v116 + 16) = sub_24D4C39E0;
    *(void *)(v62 + 24) = v59;
    uint64_t v106 = (uint64_t)v37;
    uint64_t v63 = v113;
    sub_24D415FD0(v112, v113, (uint64_t *)&unk_26B196F40);
    unint64_t v64 = (*(unsigned __int8 *)(v110 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
    unint64_t v65 = (v111 + v64 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v66 = (v65 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v67 = (v66 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v68 = (v67 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v69 = swift_allocObject();
    *(void *)(v69 + 16) = v62;
    *(void *)(v69 + 24) = v115;
    sub_24D3F0BA0(v63, v69 + v64, (uint64_t *)&unk_26B196F40);
    uint64_t v70 = (void *)v106;
    *(void *)(v69 + v65) = v106;
    int v71 = (void *)v117;
    *(void *)(v69 + v66) = v117;
    *(void *)(v69 + v67) = v114;
    uint64_t v72 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v69 + v68);
    uint64_t v73 = v107;
    int v74 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v120;
    *uint64_t v72 = v108;
    v72[1] = v74;
    *(void *)(v69 + ((v68 + 23) & 0xFFFFFFFFFFFFFFF8)) = v73;
    id v75 = v70;
    swift_retain_n();
    swift_retain_n();
    uint64_t v76 = v73;
    swift_retain_n();
    id v77 = v75;
    uint64_t v78 = v76;
    swift_retain();
    id v79 = v71;
    sub_24D6B7B34((uint64_t)"enumerateItems(fromPage:selfItem:suggestedPageSize:reply:)", 58, 2, (uint64_t)sub_24D4C39E8, v69, v78, (void (*)(id, void, void, uint64_t))v109, v59);
    swift_release();

    swift_release();
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v119 + 8))(v121, v118);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_24D4C5988(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for VFSItem(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D4C59E4()
{
  uint64_t v1 = sub_24DCC9078();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D4C5B00(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D4C5B00(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_release();
  }
}

void sub_24D4C5B4C()
{
  uint64_t v1 = *(void *)(sub_24DCC9078() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D4BD5C0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), v0 + v2, *(void **)(v0 + v3), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void (**)(void, void, void, void, void))(v0+ ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

id sub_24D4C5C00(id a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4)
  {
    return a1;
  }
  else
  {
    swift_retain();
    return (id)swift_bridgeObjectRetain();
  }
}

unint64_t sub_24D4C5C60()
{
  unint64_t result = qword_26B196B40;
  if (!qword_26B196B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B196B40);
  }
  return result;
}

uint64_t sub_24D4C5CB4()
{
  return swift_deallocObject();
}

void sub_24D4C5CEC()
{
  sub_24D656070(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D4C5CF4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_24D4C5D2C(void *a1, uint64_t a2)
{
  sub_24D4B9038(a1, a2, v2);
}

uint64_t sub_24D4C5D34()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_24D4C5D6C()
{
  return sub_24D98F140(*(void *)(v0 + 16));
}

void sub_24D4C5D74(uint64_t a1, unint64_t a2, uint64_t a3, char *a4, void (**a5)(void, void, void, void, void, void, void))
{
  unint64_t v66 = a4;
  uint64_t v62 = a3;
  uint64_t v67 = sub_24DCC9078();
  uint64_t v8 = *(void *)(v67 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v67);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v57 - v11;
  uint64_t v68 = swift_allocObject();
  *(void *)(v68 + 16) = a5;
  _Block_copy(a5);
  uint64_t v13 = (void *)sub_24DCC8B28();
  uint64_t v14 = sub_24D4C4264();
  char v16 = v15;

  if (v16)
  {
    type metadata accessor for NSFileProviderError(0);
    uint64_t v69 = -1002;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4C3994(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    uint64_t v29 = (void *)v70[0];
    sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
    unint64_t v30 = (void *)sub_24DCC9C18();
    sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
    unint64_t v31 = (void *)sub_24DCC9C18();
    char v32 = (void *)sub_24DCC8818();
    ((void (**)(void, void *, void *, void, void, void, void *))a5)[2](a5, v30, v31, 0, 0, 0, v32);
    swift_release();
  }
  else
  {
    uint64_t v63 = v14;
    uint64_t v60 = v9;
    uint64_t v61 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v58 = a1;
    uint64_t v17 = v66;
    uint64_t v18 = v67;
    uint64_t v65 = v8;
    unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v19(v12, &v66[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_logger], v67);
    id v20 = v17;
    unint64_t v21 = sub_24DCC9068();
    os_log_type_t v22 = sub_24DCCA118();
    int v23 = v22;
    BOOL v24 = os_log_type_enabled(v21, v22);
    unint64_t v64 = v12;
    unint64_t v59 = a2;
    if (v24)
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v57 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 138412546;
      LODWORD(v66) = v23;
      v70[0] = v20;
      uint64_t v26 = v19;
      id v27 = v20;
      sub_24DCCA428();
      unint64_t v28 = v57;
      *uint64_t v57 = v20;

      unint64_t v19 = v26;
      *(_WORD *)(v25 + 12) = 2048;
      uint64_t v12 = v64;
      v70[0] = v63;
      sub_24DCCA428();
      _os_log_impl(&dword_24D3D0000, v21, (os_log_type_t)v66, "📖  %@: enumerating from change %llu", (uint8_t *)v25, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v28, -1, -1);
      MEMORY[0x25332B030](v25, -1, -1);
    }
    else
    {
    }
    uint64_t v33 = v60;
    unint64_t v34 = v61;

    uint64_t v35 = swift_allocObject();
    v19(v34, v12, v18);
    uint64_t v36 = v65;
    unint64_t v37 = (*(unsigned __int8 *)(v65 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80);
    unint64_t v38 = (v33 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v39 = v18;
    unint64_t v40 = (v38 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v41 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v37, v34, v39);
    *(void *)(v41 + v38) = v20;
    *(void *)(v41 + v40) = v63;
    uint64_t v42 = (void (**)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))(v41
                                                                                  + ((v40 + 15) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v43 = v68;
    *uint64_t v42 = sub_24D4C6424;
    v42[1] = (void (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))v43;
    uint64_t v44 = sub_24D4C652C;
    *(void *)(v35 + 16) = sub_24D4C652C;
    *(void *)(v35 + 24) = v41;
    LOBYTE(v37) = *((unsigned char *)v20 + OBJC_IVAR____TtC9libfssync14FPFSEnumerator_invalidated);
    uint64_t v45 = (char *)v20;
    swift_retain();
    if ((v37 & 1) != 0
      || (uint64_t v46 = MEMORY[0x25332B1A0](&v45[OBJC_IVAR____TtC9libfssync14FPFSEnumerator_backend]),
          uint64_t v44 = *(void (**)(uint64_t))(v35 + 16),
          uint64_t v47 = *(void *)(v35 + 24),
          !v46))
    {
      uint64_t v55 = v65;
      type metadata accessor for NSFileProviderError(0);
      v70[0] = -1002;
      swift_retain();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4C3994(&qword_26B193F20, type metadata accessor for NSFileProviderError);
      sub_24DCC8808();
      unint64_t v56 = (void *)v69;
      v70[0] = v69;
      memset(&v70[1], 0, 24);
      char v71 = 1;
      v44((uint64_t)v70);
      swift_release();

      (*(void (**)(char *, uint64_t))(v55 + 8))(v64, v39);
    }
    else
    {
      uint64_t v48 = (void *)v46;
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = v44;
      *(void *)(v49 + 24) = v47;
      uint64_t v50 = (void *)swift_allocObject();
      uint64_t v52 = v58;
      unint64_t v51 = v59;
      v50[2] = v35;
      v50[3] = v52;
      v50[4] = v51;
      v50[5] = v45;
      v50[6] = v62;
      v50[7] = v48;
      uint64_t v53 = v45;
      swift_retain();
      swift_retain();
      sub_24D3F9C18(v52, v51);
      id v54 = v48;
      sub_24D627D8C((uint64_t)"enumerateChanges(fromToken:suggestedBatchSize:reply:)", 53, 2, (void (*)(id *))sub_24D4C65E4, v49, (uint64_t)sub_24D4C6638, (uint64_t)v50);

      swift_release();
      swift_release();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v64, v39);
    }
    swift_release();
    swift_release();
  }
}

void sub_24D4C6424(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24D98F03C(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16));
}

uint64_t sub_24D4C642C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D4C6464()
{
  uint64_t v1 = sub_24DCC9078();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();

  return swift_deallocObject();
}

void sub_24D4C652C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC9078() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void **)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = *(void (**)(void, void, void, void, void, void))(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_24D4BFED4(a1, v1 + v4, v7, v8, v9);
}

uint64_t sub_24D4C65E8()
{
  swift_release();
  sub_24D400DCC(*(void *)(v0 + 24), *(void *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_24D4C6638(uint64_t a1)
{
  return sub_24D4C05CC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t sub_24D4C6648(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(unsigned char *))(v1 + 16);
  sub_24D3F0BA0(a1, (uint64_t)v4, (uint64_t *)&unk_26B190970);
  return v2(v4);
}

uint64_t sub_24D4C668C()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_24D4C66C8(uint64_t a1)
{
  uint64_t v2 = *(void (**)(long long *))(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  sub_24D3F0BA0(a1, (uint64_t)v4, (uint64_t *)&unk_26B190970);
  sub_24D5B02B8((uint64_t)v4, v2, v3);
}

uint64_t sub_24D4C6720()
{
  sub_24D400DCC(*(void *)(v0 + 16), *(void *)(v0 + 24));

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D4C6778()
{
  return sub_24D4C084C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(char **)(v0 + 64));
}

void sub_24D4C67A0(void *a1)
{
  sub_24D46585C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_24D4C67A8@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = result;
    uint64_t v6 = sub_24DB3A898(a2);
    uint64_t v8 = v7;
    char v10 = v9 & 1;
    uint64_t v11 = sub_24D4C3808(v6, v7, v9 & 1, v4, 1 << *(unsigned char *)(a2 + 32), *(_DWORD *)(a2 + 36), 0, a2);
    uint64_t v13 = v12;
    char v15 = v14;
    int v16 = ~v14;
    sub_24D4C6A6C(v6, v8, v10);
    if (v16)
    {
      BOOL v17 = (v15 & 1) == 0;
    }
    else
    {
      BOOL v17 = 1;
      uint64_t v11 = 1 << *(unsigned char *)(a2 + 32);
      uint64_t v13 = *(unsigned int *)(a2 + 36);
    }
    unint64_t result = sub_24DB3A898(a2);
    if (!v17 || (v19 & 1) != 0) {
      goto LABEL_16;
    }
    if (v13 == v18)
    {
      if (v11 >= result)
      {
        v24[0] = result;
        v24[1] = v18;
        char v25 = 0;
        uint64_t v26 = v11;
        uint64_t v27 = v13;
        char v28 = 0;
        unint64_t result = sub_24D4C2ED0((uint64_t)v24, a2, (uint64_t)v22);
        long long v21 = v22[1];
        *(_OWORD *)a3 = v22[0];
        *(_OWORD *)(a3 + 16) = v21;
        *(_OWORD *)(a3 + 32) = v22[2];
        *(void *)(a3 + 48) = v23;
        return result;
      }
      goto LABEL_15;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

uint64_t sub_24D4C68EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v10 = MEMORY[0x263F8EE78];
  sub_24DCCA838();
  if (v5)
  {
    uint64_t v6 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410) - 8);
    uint64_t v7 = (void *)(a1 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
    uint64_t v8 = *(void *)(v6 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_24DAB9E2C(v7, 0, 1, a3);
      sub_24DCCA808();
      sub_24DCCA848();
      sub_24DCCA858();
      sub_24DCCA818();
      uint64_t v7 = (void *)((char *)v7 + v8);
      --v5;
    }
    while (v5);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_24D4C6A38(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D4C6A6C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24D4C6A78(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D4C6AA4(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24D4C6AB0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D4C6AE4(uint64_t a1)
{
  return a1;
}

id sub_24D4C6B10(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
    return a1;
  }
  else
  {
    swift_bridgeObjectRetain();
    return (id)swift_bridgeObjectRetain();
  }
}

uint64_t sub_24D4C6B5C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void sub_24D4C6B9C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5)
  {
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
}

void sub_24D4C6BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24D98EEC8(a1, a2, a3, a4, a5, *(void *)(v5 + 16));
}

uint64_t objectdestroy_57Tm()
{
  uint64_t v1 = sub_24DCC9078();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D4C6D08(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  int v8 = a4 & 1;
  uint64_t v9 = *(void *)(sub_24DCC9078() - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D4BD17C(a1, a2, a3, v8, *(void *)(v4 + 16), v4 + v10, *(void **)(v4 + v11), *(void *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v4 + ((((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_60Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_release();
  swift_release();
  uint64_t v5 = v0 + v3;
  uint64_t v6 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v6 - 1) + 48))(v0 + v3, 1, v6))
  {
    uint64_t v21 = v4;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v7 = v5 + v6[12];
    int v8 = (int *)type metadata accessor for ItemMetadata();
    uint64_t v9 = v7 + v8[7];
    uint64_t v10 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v12(v9, v10);
    v12(v7 + v8[8], v10);
    swift_bridgeObjectRelease();
    uint64_t v13 = v7 + v8[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
      v12(v13, v10);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v14 = (uint64_t *)(v7 + v8[33]);
    unint64_t v15 = v14[1];
    if (v15 >> 60 != 15) {
      sub_24D400DCC(*v14, v15);
    }
    swift_bridgeObjectRelease();
    uint64_t v16 = v5 + v6[13];
    BOOL v17 = *(void **)(v16 + 16);
    uint64_t v4 = v21;
    if (v17 != (void *)1)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v16 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24D466534(*(void *)(v5 + v6[17]), *(void *)(v5 + v6[17] + 8));
    uint64_t v3 = (v2 + 32) & ~v2;
  }
  unint64_t v18 = (v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;

  swift_release();
  objc_release(*(id *)(v0
                     + ((((((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

uint64_t sub_24D4C7150(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D4BDF04(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), v1 + v4, *(void **)(v1 + v5), *(void **)(v1 + v6), *(void *)(v1 + v7), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v1 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_24D4C7228(uint64_t a1, uint64_t a2)
{
  sub_24D3D5FD0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D4C7230(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24D4C7260(uint64_t a1)
{
  return sub_24D4BA824(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t objectdestroy_162Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_24D4C72B0()
{
  sub_24D4BA948(*(void (**)(void *, void))(v0 + 16));
}

uint64_t sub_24D4C72D0(uint64_t a1)
{
  return sub_24D5B3F98(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_24D4C72D8()
{
  unint64_t result = qword_26B199E10;
  if (!qword_26B199E10)
  {
    sub_24D3FB6F8(255, (unint64_t *)&qword_26B197E10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199E10);
  }
  return result;
}

uint64_t sub_24D4C7340(uint64_t a1)
{
  return sub_24D4B8B1C(a1, v1);
}

uint64_t sub_24D4C73A4()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v10 = v1;
  uint64_t v2 = swift_getAssociatedTypeWitness();
  unint64_t v9 = v3;
  uint64_t v23 = AssociatedTypeWitness;
  uint64_t v24 = v2;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v26 = swift_getAssociatedConformanceWitness();
  uint64_t result = type metadata accessor for ReconciliationID();
  if (v5 <= 0x3F)
  {
    uint64_t v6 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    char v28 = &v27;
    if (v10 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else if (v9 > 0x3F)
    {
      return v2;
    }
    else
    {
      swift_getTupleTypeLayout3();
      uint64_t v29 = &v22;
      swift_getTupleTypeLayout2();
      unint64_t v30 = &v21;
      uint64_t v31 = v6;
      swift_getTupleTypeLayout2();
      char v32 = &v20;
      swift_getTupleTypeLayout2();
      uint64_t v33 = &v19;
      swift_getTupleTypeLayout2();
      unint64_t v34 = &v18;
      swift_getTupleTypeLayout2();
      uint64_t v35 = &v17;
      uint64_t result = type metadata accessor for ReconciliationSideMutation();
      if (v7 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        uint64_t v36 = &v16;
        uint64_t result = type metadata accessor for ReconciliationSideMutation();
        if (v8 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          unint64_t v37 = &v15;
          swift_getTupleTypeLayout2();
          unint64_t v38 = &v14;
          swift_getTupleTypeLayout2();
          uint64_t v39 = &v13;
          swift_getTupleTypeLayout2();
          unint64_t v40 = &v12;
          swift_getTupleTypeLayout3();
          uint64_t v41 = &v11;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

void *sub_24D4C774C(void *a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= v3) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = *(void *)(v4 + 64);
  }
  unint64_t v7 = v6 + 1;
  uint64_t v479 = *(void *)(AssociatedTypeWitness - 8);
  int v8 = *(_DWORD *)(v4 + 80);
  unint64_t v470 = v3 + v8;
  unint64_t v471 = v5;
  uint64_t v474 = v8;
  unint64_t v9 = v5 + ((v3 + v474) & ~v474);
  unint64_t v495 = v6 + 2;
  if (v9 + 1 > v6 + 2) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v6 + 2;
  }
  if (v7 > v10) {
    unint64_t v10 = v6 + 1;
  }
  unint64_t v478 = v6;
  unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFF8;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 16 > v10) {
    unint64_t v10 = (v6 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v480 = v2;
  int v485 = *(_DWORD *)(v2 + 80) | v8;
  uint64_t v12 = (*(unsigned char *)(v2 + 80) | v8);
  uint64_t v472 = v7 + v12;
  uint64_t v487 = v12;
  unint64_t v13 = ((v7 + v12) & ~v12) + v7;
  if (v13 <= v10) {
    unint64_t v13 = v10;
  }
  unint64_t v496 = v13;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v463 = v15;
  uint64_t v464 = v14;
  int v483 = *(_DWORD *)(v15 + 80);
  int v16 = v483 & 0xF8;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(_DWORD *)(v18 + 80);
  uint64_t v20 = v16 | v19 | 7;
  unint64_t v494 = v7;
  unint64_t v21 = (v7 + v20) & ~v20;
  uint64_t v22 = *(void *)(v15 + 64) + 7;
  uint64_t v23 = *(void *)(v18 + 64) + 7;
  unint64_t v24 = (((v23 + ((v19 + 8 + (v22 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v24 + 18 <= 0x39) {
    uint64_t v25 = 57;
  }
  else {
    uint64_t v25 = v24 + 18;
  }
  uint64_t v465 = *(void *)(v17 - 8);
  uint64_t v466 = v17;
  uint64_t v461 = v19 + 8;
  uint64_t v462 = *(void *)(v465 + 64) + 7;
  uint64_t v460 = *(void *)(v15 + 64) + 7;
  uint64_t v469 = v7 + v20;
  unint64_t v475 = (((v23 + ((v19 + 8 + (v22 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v476 = *(_DWORD *)(v18 + 80);
  int v481 = *(_DWORD *)(v18 + 80);
  if (v25 > 3) {
    goto LABEL_21;
  }
  unsigned int v26 = ((1 << (8 * v25)) | 2u) >> (8 * v25);
  unsigned int v27 = v26 | 0x10;
  BOOL v28 = HIWORD(v26) == 0;
  uint64_t v29 = 2;
  if (!v28) {
    uint64_t v29 = 4;
  }
  if (v27 <= 0xFF)
  {
LABEL_21:
    uint64_t v30 = v16 | v19 | 7;
    uint64_t v29 = 1;
  }
  else
  {
    uint64_t v30 = v16 | v19 | 7;
  }
  uint64_t v491 = v25;
  unint64_t v493 = v25 + v21;
  unint64_t v31 = v25 + v21 + v29;
  if (v31 <= v496) {
    unint64_t v32 = v496;
  }
  else {
    unint64_t v32 = v31;
  }
  uint64_t v33 = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v467 = v34;
  uint64_t v468 = v33;
  int v35 = *(_DWORD *)(v34 + 80);
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = *(_DWORD *)(v37 + 80);
  uint64_t v39 = v35 & 0xF8 | v38 | 7;
  unint64_t v40 = (v494 + v39) & ~v39;
  uint64_t v41 = *(void *)(v34 + 64) + 7;
  uint64_t v42 = v38 + 8;
  uint64_t v43 = *(void *)(v37 + 64) + 7;
  unint64_t v44 = (((v43 + ((v38 + 8 + (v41 & 0xFFFFFFFFFFFFFFF8)) & ~v38)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v44 + 18 <= 0x39) {
    uint64_t v45 = 57;
  }
  else {
    uint64_t v45 = v44 + 18;
  }
  if (v45 > 3) {
    goto LABEL_32;
  }
  unsigned int v46 = ((1 << (8 * v45)) | 2u) >> (8 * v45);
  unsigned int v47 = v46 | 0x10;
  BOOL v28 = HIWORD(v46) == 0;
  uint64_t v48 = 2;
  if (!v28) {
    uint64_t v48 = 4;
  }
  if (v47 <= 0xFF) {
LABEL_32:
  }
    uint64_t v48 = 1;
  uint64_t v50 = v487;
  uint64_t v49 = a2;
  unint64_t v51 = v45 + v40;
  unint64_t v52 = v45 + v40 + v48;
  if (v52 <= v32) {
    unint64_t v52 = v32;
  }
  unint64_t v53 = v11 + 17;
  if (v11 + 17 > v52) {
    unint64_t v52 = v11 + 17;
  }
  unint64_t v54 = v11 + 24;
  if (v11 + 24 > v52) {
    unint64_t v52 = v11 + 24;
  }
  if (v495 > v52) {
    unint64_t v52 = v495;
  }
  unint64_t v55 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = v55 + 8;
  if (v55 + 8 <= v52) {
    unint64_t v57 = v52;
  }
  else {
    unint64_t v57 = v55 + 8;
  }
  uint64_t v58 = v30 | v487 | v39;
  if (v58 != 7 || ((v485 | v483 | v481 | v35 | *(_DWORD *)(v37 + 80)) & 0x100000) != 0 || v57 + 1 > 0x18)
  {
    uint64_t v80 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v81 = (void *)(v80 + ((v58 + 16) & ~v58));
    swift_retain();
    return v81;
  }
  if (v491 > 3) {
    goto LABEL_51;
  }
  unsigned int v59 = ((1 << (8 * v491)) | 2u) >> (8 * v491);
  unsigned int v60 = v59 | 0x10;
  BOOL v28 = HIWORD(v59) == 0;
  uint64_t v61 = 2;
  if (!v28) {
    uint64_t v61 = 4;
  }
  if (v60 <= 0xFF) {
LABEL_51:
  }
    uint64_t v61 = 1;
  unint64_t v62 = v493 + v61;
  if (v62 <= v496) {
    unint64_t v62 = v496;
  }
  if (v45 > 3) {
    goto LABEL_58;
  }
  unsigned int v63 = ((1 << (8 * v45)) | 2u) >> (8 * v45);
  unsigned int v64 = v63 | 0x10;
  BOOL v28 = HIWORD(v63) == 0;
  uint64_t v65 = 2;
  if (!v28) {
    uint64_t v65 = 4;
  }
  if (v64 <= 0xFF) {
LABEL_58:
  }
    uint64_t v65 = 1;
  unint64_t v66 = v51 + v65;
  if (v66 > v62) {
    unint64_t v62 = v66;
  }
  if (v53 > v62) {
    unint64_t v62 = v11 + 17;
  }
  if (v54 > v62) {
    unint64_t v62 = v11 + 24;
  }
  if (v495 > v62) {
    unint64_t v62 = v495;
  }
  if (v56 > v62) {
    unint64_t v62 = v56;
  }
  unsigned int v67 = a2[v62];
  unsigned int v68 = v67 - 14;
  unint64_t v459 = v56;
  if (v67 < 0xE)
  {
    uint64_t v76 = v474;
  }
  else
  {
    if (v491 > 3) {
      goto LABEL_74;
    }
    unsigned int v69 = ((1 << (8 * v491)) | 2u) >> (8 * v491);
    unsigned int v70 = v69 | 0x10;
    BOOL v28 = HIWORD(v69) == 0;
    uint64_t v71 = 2;
    if (!v28) {
      uint64_t v71 = 4;
    }
    if (v70 <= 0xFF) {
LABEL_74:
    }
      uint64_t v71 = 1;
    unint64_t v72 = v493 + v71;
    if (v72 <= v496) {
      unint64_t v72 = v496;
    }
    if (v45 > 3) {
      goto LABEL_81;
    }
    unsigned int v73 = ((1 << (8 * v45)) | 2u) >> (8 * v45);
    unsigned int v74 = v73 | 0x10;
    BOOL v28 = HIWORD(v73) == 0;
    uint64_t v75 = 2;
    if (!v28) {
      uint64_t v75 = 4;
    }
    if (v74 <= 0xFF) {
LABEL_81:
    }
      uint64_t v75 = 1;
    uint64_t v76 = v474;
    unint64_t v77 = v51 + v75;
    if (v77 > v72) {
      unint64_t v72 = v77;
    }
    if (v53 > v72) {
      unint64_t v72 = v11 + 17;
    }
    if (v54 > v72) {
      unint64_t v72 = v11 + 24;
    }
    if (v495 > v72) {
      unint64_t v72 = v495;
    }
    if (v56 > v72) {
      LODWORD(v72) = v56;
    }
    if (v72 <= 3) {
      uint64_t v78 = v72;
    }
    else {
      uint64_t v78 = 4;
    }
    switch(v78)
    {
      case 1:
        int v79 = *a2;
        if (v72 < 4) {
          goto LABEL_106;
        }
        goto LABEL_107;
      case 2:
        int v79 = *(unsigned __int16 *)a2;
        if (v72 >= 4) {
          goto LABEL_107;
        }
        goto LABEL_106;
      case 3:
        int v79 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v72 >= 4) {
          goto LABEL_107;
        }
        goto LABEL_106;
      case 4:
        int v79 = *(_DWORD *)a2;
        if (v72 < 4) {
LABEL_106:
        }
          v79 |= v68 << (8 * v72);
LABEL_107:
        unsigned int v67 = v79 + 14;
        break;
      default:
        break;
    }
  }
  unint64_t v486 = v11 + 17;
  unint64_t v488 = v51;
  unint64_t v484 = v11 + 24;
  uint64_t v83 = ~v76;
  uint64_t v84 = ~v50;
  uint64_t v85 = ~v30;
  uint64_t v86 = ~v476;
  uint64_t v87 = ~v39;
  uint64_t v88 = ~v38;
  unint64_t v89 = v44 + 16;
  uint64_t v490 = v45;
  switch(v67)
  {
    case 1u:
      uint64_t v81 = a1;
      uint64_t v104 = v49;
      (*(void (**)(void *))(v480 + 16))(a1);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v479 + 16))(((unint64_t)a1 + v470) & v83, (unint64_t)&v104[v470] & v83, AssociatedTypeWitness);
      *(unsigned char *)((((unint64_t)a1 + v470) & v83) + v471) = *(unsigned char *)(((unint64_t)&v104[v470] & v83) + v471);
      if (v491 > 3) {
        goto LABEL_125;
      }
      unsigned int v105 = ((1 << (8 * v491)) | 2u) >> (8 * v491);
      unsigned int v106 = v105 | 0x10;
      BOOL v28 = HIWORD(v105) == 0;
      uint64_t v107 = 2;
      if (!v28) {
        uint64_t v107 = 4;
      }
      if (v106 <= 0xFF) {
LABEL_125:
      }
        uint64_t v107 = 1;
      unint64_t v108 = v493 + v107;
      if (v108 <= v496) {
        unint64_t v108 = v496;
      }
      if (v490 > 3) {
        goto LABEL_132;
      }
      unsigned int v109 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v110 = v109 | 0x10;
      BOOL v28 = HIWORD(v109) == 0;
      uint64_t v111 = 2;
      if (!v28) {
        uint64_t v111 = 4;
      }
      if (v110 <= 0xFF) {
LABEL_132:
      }
        uint64_t v111 = 1;
      unint64_t v112 = v488 + v111;
      if (v112 > v108) {
        unint64_t v108 = v112;
      }
      if (v486 > v108) {
        unint64_t v108 = v486;
      }
      if (v484 > v108) {
        unint64_t v108 = v484;
      }
      if (v495 > v108) {
        unint64_t v108 = v495;
      }
      if (v459 > v108) {
        unint64_t v108 = v459;
      }
      *((unsigned char *)a1 + v108) = 1;
      return v81;
    case 2u:
      unsigned int v113 = v49[v478];
      unsigned int v114 = v113 - 2;
      if (v113 < 2)
      {
        unsigned int v116 = v491;
        uint64_t v81 = a1;
        unint64_t v117 = v484;
        unint64_t v118 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v115 = v478;
        }
        else {
          uint64_t v115 = 4;
        }
        unsigned int v116 = v491;
        uint64_t v81 = a1;
        unint64_t v117 = v484;
        unint64_t v118 = v486;
        switch(v115)
        {
          case 1:
            int v119 = *v49;
            goto LABEL_287;
          case 2:
            int v119 = *(unsigned __int16 *)v49;
            goto LABEL_287;
          case 3:
            int v119 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_287;
          case 4:
            int v119 = *(_DWORD *)v49;
LABEL_287:
            if (v478 < 4) {
              unsigned int v113 = (v119 | (v114 << (8 * v478))) + 2;
            }
            else {
              unsigned int v113 = v119 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v208 = v113 == 1;
      uint64_t v209 = v480;
      if (v113 == 1) {
        uint64_t v209 = v479;
      }
      long long v210 = v49;
      (*(void (**)(void *))(v209 + 16))(v81);
      *((unsigned char *)v81 + v478) = v208;
      *((unsigned char *)v81 + v494) = v210[v494];
      if (v116 > 3) {
        goto LABEL_296;
      }
      unsigned int v211 = ((1 << (8 * v116)) | 2u) >> (8 * v116);
      unsigned int v212 = v211 | 0x10;
      BOOL v28 = HIWORD(v211) == 0;
      uint64_t v213 = 2;
      if (!v28) {
        uint64_t v213 = 4;
      }
      if (v212 <= 0xFF) {
LABEL_296:
      }
        uint64_t v213 = 1;
      unint64_t v214 = v493 + v213;
      if (v214 <= v496) {
        unint64_t v214 = v496;
      }
      if (v490 > 3) {
        goto LABEL_303;
      }
      unsigned int v215 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v216 = v215 | 0x10;
      BOOL v28 = HIWORD(v215) == 0;
      uint64_t v217 = 2;
      if (!v28) {
        uint64_t v217 = 4;
      }
      if (v216 <= 0xFF) {
LABEL_303:
      }
        uint64_t v217 = 1;
      unint64_t v218 = v488 + v217;
      if (v218 > v214) {
        unint64_t v214 = v218;
      }
      if (v118 > v214) {
        unint64_t v214 = v118;
      }
      if (v117 > v214) {
        unint64_t v214 = v117;
      }
      if (v495 > v214) {
        unint64_t v214 = v495;
      }
      if (v459 > v214) {
        unint64_t v214 = v459;
      }
      *((unsigned char *)v81 + v214) = 2;
      return v81;
    case 3u:
      unsigned int v120 = v49[v478];
      unsigned int v121 = v120 - 2;
      if (v120 < 2)
      {
        unsigned int v123 = v491;
        uint64_t v81 = a1;
        unint64_t v124 = v484;
        unint64_t v125 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v122 = v478;
        }
        else {
          uint64_t v122 = 4;
        }
        unsigned int v123 = v491;
        uint64_t v81 = a1;
        unint64_t v124 = v484;
        unint64_t v125 = v486;
        switch(v122)
        {
          case 1:
            int v126 = *v49;
            goto LABEL_318;
          case 2:
            int v126 = *(unsigned __int16 *)v49;
            goto LABEL_318;
          case 3:
            int v126 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_318;
          case 4:
            int v126 = *(_DWORD *)v49;
LABEL_318:
            if (v478 < 4) {
              unsigned int v120 = (v126 | (v121 << (8 * v478))) + 2;
            }
            else {
              unsigned int v120 = v126 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v219 = v120 == 1;
      uint64_t v220 = v480;
      if (v120 == 1) {
        uint64_t v220 = v479;
      }
      (*(void (**)(void *))(v220 + 16))(v81);
      *((unsigned char *)v81 + v478) = v219;
      if (v123 > 3) {
        goto LABEL_327;
      }
      unsigned int v221 = ((1 << (8 * v123)) | 2u) >> (8 * v123);
      unsigned int v222 = v221 | 0x10;
      BOOL v28 = HIWORD(v221) == 0;
      uint64_t v223 = 2;
      if (!v28) {
        uint64_t v223 = 4;
      }
      if (v222 <= 0xFF) {
LABEL_327:
      }
        uint64_t v223 = 1;
      unint64_t v224 = v493 + v223;
      if (v224 <= v496) {
        unint64_t v224 = v496;
      }
      if (v490 > 3) {
        goto LABEL_334;
      }
      unsigned int v225 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v226 = v225 | 0x10;
      BOOL v28 = HIWORD(v225) == 0;
      uint64_t v227 = 2;
      if (!v28) {
        uint64_t v227 = 4;
      }
      if (v226 <= 0xFF) {
LABEL_334:
      }
        uint64_t v227 = 1;
      unint64_t v228 = v488 + v227;
      if (v228 > v224) {
        unint64_t v224 = v228;
      }
      if (v125 > v224) {
        unint64_t v224 = v125;
      }
      if (v124 > v224) {
        unint64_t v224 = v124;
      }
      if (v495 > v224) {
        unint64_t v224 = v495;
      }
      if (v459 > v224) {
        unint64_t v224 = v459;
      }
      *((unsigned char *)v81 + v224) = 3;
      return v81;
    case 4u:
      unsigned int v127 = v49[v478];
      unsigned int v128 = v127 - 2;
      if (v127 < 2)
      {
        unsigned int v130 = v491;
        uint64_t v81 = a1;
        unint64_t v131 = v484;
        unint64_t v132 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v129 = v478;
        }
        else {
          uint64_t v129 = 4;
        }
        unsigned int v130 = v491;
        uint64_t v81 = a1;
        unint64_t v131 = v484;
        unint64_t v132 = v486;
        switch(v129)
        {
          case 1:
            int v133 = *v49;
            goto LABEL_349;
          case 2:
            int v133 = *(unsigned __int16 *)v49;
            goto LABEL_349;
          case 3:
            int v133 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_349;
          case 4:
            int v133 = *(_DWORD *)v49;
LABEL_349:
            if (v478 < 4) {
              unsigned int v127 = (v133 | (v128 << (8 * v478))) + 2;
            }
            else {
              unsigned int v127 = v133 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v229 = v127 == 1;
      uint64_t v230 = v480;
      if (v127 == 1) {
        uint64_t v230 = v479;
      }
      uint64_t v231 = v49;
      (*(void (**)(void *))(v230 + 16))(v81);
      *((unsigned char *)v81 + v478) = v229;
      *(void *)(((unint64_t)v81 + v494 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v231[v494 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v130 > 3) {
        goto LABEL_358;
      }
      unsigned int v232 = ((1 << (8 * v130)) | 2u) >> (8 * v130);
      unsigned int v233 = v232 | 0x10;
      BOOL v28 = HIWORD(v232) == 0;
      uint64_t v234 = 2;
      if (!v28) {
        uint64_t v234 = 4;
      }
      if (v233 <= 0xFF) {
LABEL_358:
      }
        uint64_t v234 = 1;
      unint64_t v235 = v493 + v234;
      if (v235 <= v496) {
        unint64_t v235 = v496;
      }
      if (v490 > 3) {
        goto LABEL_365;
      }
      unsigned int v236 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v237 = v236 | 0x10;
      BOOL v28 = HIWORD(v236) == 0;
      uint64_t v238 = 2;
      if (!v28) {
        uint64_t v238 = 4;
      }
      if (v237 <= 0xFF) {
LABEL_365:
      }
        uint64_t v238 = 1;
      unint64_t v239 = v488 + v238;
      if (v239 > v235) {
        unint64_t v235 = v239;
      }
      if (v132 > v235) {
        unint64_t v235 = v132;
      }
      if (v131 > v235) {
        unint64_t v235 = v131;
      }
      if (v495 > v235) {
        unint64_t v235 = v495;
      }
      if (v459 > v235) {
        unint64_t v235 = v459;
      }
      *((unsigned char *)v81 + v235) = 4;
      return v81;
    case 5u:
      unsigned int v134 = v49[v478];
      unsigned int v135 = v134 - 2;
      if (v134 < 2)
      {
        unsigned int v137 = v491;
        uint64_t v81 = a1;
        unint64_t v138 = v484;
        unint64_t v139 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v136 = v478;
        }
        else {
          uint64_t v136 = 4;
        }
        unsigned int v137 = v491;
        uint64_t v81 = a1;
        unint64_t v138 = v484;
        unint64_t v139 = v486;
        switch(v136)
        {
          case 1:
            int v140 = *v49;
            goto LABEL_380;
          case 2:
            int v140 = *(unsigned __int16 *)v49;
            goto LABEL_380;
          case 3:
            int v140 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_380;
          case 4:
            int v140 = *(_DWORD *)v49;
LABEL_380:
            if (v478 < 4) {
              unsigned int v134 = (v140 | (v135 << (8 * v478))) + 2;
            }
            else {
              unsigned int v134 = v140 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v240 = v134 == 1;
      uint64_t v241 = v480;
      if (v134 == 1) {
        uint64_t v241 = v479;
      }
      unsigned int v242 = v49;
      (*(void (**)(void *))(v241 + 16))(v81);
      *((unsigned char *)v81 + v478) = v240;
      *(void *)(((unint64_t)v81 + v494 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v242[v494 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v137 > 3) {
        goto LABEL_389;
      }
      unsigned int v243 = ((1 << (8 * v137)) | 2u) >> (8 * v137);
      unsigned int v244 = v243 | 0x10;
      BOOL v28 = HIWORD(v243) == 0;
      uint64_t v245 = 2;
      if (!v28) {
        uint64_t v245 = 4;
      }
      if (v244 <= 0xFF) {
LABEL_389:
      }
        uint64_t v245 = 1;
      unint64_t v246 = v493 + v245;
      if (v246 <= v496) {
        unint64_t v246 = v496;
      }
      if (v490 > 3) {
        goto LABEL_396;
      }
      unsigned int v247 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v248 = v247 | 0x10;
      BOOL v28 = HIWORD(v247) == 0;
      uint64_t v249 = 2;
      if (!v28) {
        uint64_t v249 = 4;
      }
      if (v248 <= 0xFF) {
LABEL_396:
      }
        uint64_t v249 = 1;
      unint64_t v250 = v488 + v249;
      if (v250 > v246) {
        unint64_t v246 = v250;
      }
      if (v139 > v246) {
        unint64_t v246 = v139;
      }
      if (v138 > v246) {
        unint64_t v246 = v138;
      }
      if (v495 > v246) {
        unint64_t v246 = v495;
      }
      if (v459 > v246) {
        unint64_t v246 = v459;
      }
      *((unsigned char *)v81 + v246) = 5;
      return v81;
    case 6u:
      unsigned int v141 = v49[v478];
      unsigned int v142 = v141 - 2;
      if (v141 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v144 = v484;
        unint64_t v145 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v143 = v478;
        }
        else {
          uint64_t v143 = 4;
        }
        uint64_t v81 = a1;
        unint64_t v144 = v484;
        unint64_t v145 = v486;
        switch(v143)
        {
          case 1:
            int v146 = *v49;
            goto LABEL_411;
          case 2:
            int v146 = *(unsigned __int16 *)v49;
            goto LABEL_411;
          case 3:
            int v146 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_411;
          case 4:
            int v146 = *(_DWORD *)v49;
LABEL_411:
            if (v478 < 4) {
              unsigned int v141 = (v146 | (v142 << (8 * v478))) + 2;
            }
            else {
              unsigned int v141 = v146 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v251 = v141 == 1;
      uint64_t v252 = v480;
      if (v141 == 1) {
        uint64_t v252 = v479;
      }
      long long v253 = v49;
      (*(void (**)(void *))(v252 + 16))(v81);
      *((unsigned char *)v81 + v478) = v251;
      long long v254 = (unsigned __int8 *)((unint64_t)&v253[v472] & v84);
      unsigned int v255 = v254[v478];
      unsigned int v256 = v255 - 2;
      if (v255 >= 2)
      {
        if (v478 <= 3) {
          uint64_t v257 = v478;
        }
        else {
          uint64_t v257 = 4;
        }
        switch(v257)
        {
          case 1:
            int v258 = *v254;
            goto LABEL_572;
          case 2:
            int v258 = *(unsigned __int16 *)v254;
            goto LABEL_572;
          case 3:
            int v258 = *(unsigned __int16 *)v254 | (*(unsigned __int8 *)(((unint64_t)&v253[v472] & v84) + 2) << 16);
            goto LABEL_572;
          case 4:
            int v258 = *(_DWORD *)v254;
LABEL_572:
            if (v478 < 4) {
              unsigned int v255 = (v258 | (v256 << (8 * v478))) + 2;
            }
            else {
              unsigned int v255 = v258 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v329 = v255 == 1;
      uint64_t v330 = v480;
      if (v255 == 1) {
        uint64_t v330 = v479;
      }
      (*(void (**)(unint64_t))(v330 + 16))(((unint64_t)v81 + v472) & v84);
      *(unsigned char *)((((unint64_t)v81 + v472) & v84) + v478) = v329;
      if (v491 > 3) {
        goto LABEL_581;
      }
      unsigned int v331 = ((1 << (8 * v491)) | 2u) >> (8 * v491);
      unsigned int v332 = v331 | 0x10;
      BOOL v28 = HIWORD(v331) == 0;
      uint64_t v333 = 2;
      if (!v28) {
        uint64_t v333 = 4;
      }
      if (v332 <= 0xFF) {
LABEL_581:
      }
        uint64_t v333 = 1;
      unint64_t v334 = v493 + v333;
      if (v334 <= v496) {
        unint64_t v334 = v496;
      }
      if (v490 > 3) {
        goto LABEL_588;
      }
      unsigned int v335 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v336 = v335 | 0x10;
      BOOL v28 = HIWORD(v335) == 0;
      uint64_t v337 = 2;
      if (!v28) {
        uint64_t v337 = 4;
      }
      if (v336 <= 0xFF) {
LABEL_588:
      }
        uint64_t v337 = 1;
      unint64_t v338 = v488 + v337;
      if (v338 > v334) {
        unint64_t v334 = v338;
      }
      if (v145 > v334) {
        unint64_t v334 = v145;
      }
      if (v144 > v334) {
        unint64_t v334 = v144;
      }
      if (v495 > v334) {
        unint64_t v334 = v495;
      }
      if (v459 > v334) {
        unint64_t v334 = v459;
      }
      *((unsigned char *)v81 + v334) = 6;
      return v81;
    case 7u:
      unsigned int v147 = v49[v478];
      unsigned int v148 = v147 - 2;
      if (v147 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v150 = v484;
        unint64_t v151 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v149 = v478;
        }
        else {
          uint64_t v149 = 4;
        }
        uint64_t v81 = a1;
        unint64_t v150 = v484;
        unint64_t v151 = v486;
        switch(v149)
        {
          case 1:
            int v152 = *v49;
            goto LABEL_425;
          case 2:
            int v152 = *(unsigned __int16 *)v49;
            goto LABEL_425;
          case 3:
            int v152 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_425;
          case 4:
            int v152 = *(_DWORD *)v49;
LABEL_425:
            if (v478 < 4) {
              unsigned int v147 = (v152 | (v148 << (8 * v478))) + 2;
            }
            else {
              unsigned int v147 = v152 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v259 = v147 == 1;
      uint64_t v260 = v480;
      if (v147 == 1) {
        uint64_t v260 = v479;
      }
      unint64_t v261 = v49;
      (*(void (**)(void *))(v260 + 16))(v81);
      *((unsigned char *)v81 + v478) = v259;
      uint64_t v262 = (unsigned __int8 *)((unint64_t)&v261[v472] & v84);
      unsigned int v263 = v262[v478];
      unsigned int v264 = v263 - 2;
      if (v263 >= 2)
      {
        if (v478 <= 3) {
          uint64_t v265 = v478;
        }
        else {
          uint64_t v265 = 4;
        }
        switch(v265)
        {
          case 1:
            int v266 = *v262;
            goto LABEL_603;
          case 2:
            int v266 = *(unsigned __int16 *)v262;
            goto LABEL_603;
          case 3:
            int v266 = *(unsigned __int16 *)v262 | (*(unsigned __int8 *)(((unint64_t)&v261[v472] & v84) + 2) << 16);
            goto LABEL_603;
          case 4:
            int v266 = *(_DWORD *)v262;
LABEL_603:
            if (v478 < 4) {
              unsigned int v263 = (v266 | (v264 << (8 * v478))) + 2;
            }
            else {
              unsigned int v263 = v266 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v339 = v263 == 1;
      uint64_t v340 = v480;
      if (v263 == 1) {
        uint64_t v340 = v479;
      }
      (*(void (**)(unint64_t))(v340 + 16))(((unint64_t)v81 + v472) & v84);
      *(unsigned char *)((((unint64_t)v81 + v472) & v84) + v478) = v339;
      if (v491 > 3) {
        goto LABEL_612;
      }
      unsigned int v341 = ((1 << (8 * v491)) | 2u) >> (8 * v491);
      unsigned int v342 = v341 | 0x10;
      BOOL v28 = HIWORD(v341) == 0;
      uint64_t v343 = 2;
      if (!v28) {
        uint64_t v343 = 4;
      }
      if (v342 <= 0xFF) {
LABEL_612:
      }
        uint64_t v343 = 1;
      unint64_t v344 = v493 + v343;
      if (v344 <= v496) {
        unint64_t v344 = v496;
      }
      if (v490 > 3) {
        goto LABEL_619;
      }
      unsigned int v345 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v346 = v345 | 0x10;
      BOOL v28 = HIWORD(v345) == 0;
      uint64_t v347 = 2;
      if (!v28) {
        uint64_t v347 = 4;
      }
      if (v346 <= 0xFF) {
LABEL_619:
      }
        uint64_t v347 = 1;
      unint64_t v348 = v488 + v347;
      if (v348 > v344) {
        unint64_t v344 = v348;
      }
      if (v151 > v344) {
        unint64_t v344 = v151;
      }
      if (v150 > v344) {
        unint64_t v344 = v150;
      }
      if (v495 > v344) {
        unint64_t v344 = v495;
      }
      if (v459 > v344) {
        unint64_t v344 = v459;
      }
      *((unsigned char *)v81 + v344) = 7;
      return v81;
    case 8u:
      unsigned int v153 = v49[v478];
      unsigned int v154 = v153 - 2;
      if (v153 < 2)
      {
        unint64_t v158 = v475 + 16;
        uint64_t v156 = v491;
        uint64_t v81 = a1;
        unint64_t v159 = v484;
        uint64_t v157 = v469;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v155 = v478;
        }
        else {
          uint64_t v155 = 4;
        }
        uint64_t v156 = v491;
        uint64_t v81 = a1;
        uint64_t v157 = v469;
        unint64_t v158 = v475 + 16;
        unint64_t v159 = v484;
        switch(v155)
        {
          case 1:
            int v160 = *v49;
            goto LABEL_439;
          case 2:
            int v160 = *(unsigned __int16 *)v49;
            goto LABEL_439;
          case 3:
            int v160 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_439;
          case 4:
            int v160 = *(_DWORD *)v49;
LABEL_439:
            if (v478 < 4) {
              unsigned int v153 = (v160 | (v154 << (8 * v478))) + 2;
            }
            else {
              unsigned int v153 = v160 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v267 = v153 == 1;
      uint64_t v268 = v480;
      if (v153 == 1) {
        uint64_t v268 = v479;
      }
      size_t v269 = v49;
      (*(void (**)(void *))(v268 + 16))(v81);
      *((unsigned char *)v81 + v478) = v267;
      uint64_t v270 = (unsigned __int8 *)((unint64_t)&v269[v157] & v85);
      if (v156 > 3) {
        goto LABEL_445;
      }
      unsigned int v272 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
      if (HIWORD(v272))
      {
        unsigned int v271 = *(_DWORD *)&v270[v156];
      }
      else if ((v272 | 0x10) <= 0xFF)
      {
LABEL_445:
        unsigned int v271 = v270[v156];
      }
      else
      {
        unsigned int v271 = *(unsigned __int16 *)&v270[v156];
      }
      uint64_t v273 = (char *)(((unint64_t)v81 + v157) & v85);
      unsigned int v274 = v271 - 16;
      unsigned int v275 = v490;
      if (v271 >= 0x10)
      {
        if (v156 <= 3) {
          uint64_t v276 = v156;
        }
        else {
          uint64_t v276 = 4;
        }
        switch(v276)
        {
          case 1:
            int v277 = *v270;
            goto LABEL_634;
          case 2:
            int v277 = *(unsigned __int16 *)v270;
            goto LABEL_634;
          case 3:
            int v277 = *(unsigned __int16 *)v270 | (v270[2] << 16);
            goto LABEL_634;
          case 4:
            int v277 = *(_DWORD *)v270;
LABEL_634:
            if (v156 < 4) {
              v277 |= v274 << (8 * v156);
            }
            unsigned int v271 = v277 + 16;
            break;
          default:
            break;
        }
      }
      switch(v271)
      {
        case 0u:
          long long v349 = *(_OWORD *)v270;
          *((void *)v273 + 2) = *((void *)v270 + 2);
          *(_OWORD *)uint64_t v273 = v349;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_641;
          }
          unsigned int v352 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v352 | 0x10;
          if (HIWORD(v352))
          {
            *(_DWORD *)&v273[v156] = 0;
          }
          else
          {
            if (v353 <= 0xFF)
            {
LABEL_641:
              v273[v156] = 0;
              goto LABEL_822;
            }
            *(_WORD *)&v273[v156] = 0;
          }
          goto LABEL_866;
        case 1u:
          *(void *)uint64_t v273 = *(void *)v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_656;
          }
          __int16 v360 = 1;
          unsigned int v361 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v361 | 0x10;
          if (HIWORD(v361))
          {
            *(_DWORD *)&v273[v156] = 1;
            goto LABEL_866;
          }
          if (v353 > 0xFF) {
            goto LABEL_865;
          }
LABEL_656:
          char v362 = 1;
          goto LABEL_821;
        case 2u:
          *(_OWORD *)uint64_t v273 = *(_OWORD *)v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_660;
          }
          unsigned int v363 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v363 | 0x10;
          if (HIWORD(v363))
          {
            *(_DWORD *)&v273[v156] = 2;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_660:
            char v362 = 2;
            goto LABEL_821;
          }
          __int16 v360 = 2;
          goto LABEL_865;
        case 3u:
          char *v273 = *v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_664;
          }
          unsigned int v364 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v364 | 0x10;
          if (HIWORD(v364))
          {
            *(_DWORD *)&v273[v156] = 3;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_664:
            char v362 = 3;
            goto LABEL_821;
          }
          __int16 v360 = 3;
          goto LABEL_865;
        case 4u:
          char *v273 = *v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_668;
          }
          unsigned int v365 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v365 | 0x10;
          if (HIWORD(v365))
          {
            *(_DWORD *)&v273[v156] = 4;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_668:
            char v362 = 4;
            goto LABEL_821;
          }
          __int16 v360 = 4;
          goto LABEL_865;
        case 5u:
          char *v273 = *v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_672;
          }
          unsigned int v366 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v366 | 0x10;
          if (HIWORD(v366))
          {
            *(_DWORD *)&v273[v156] = 5;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_672:
            char v362 = 5;
            goto LABEL_821;
          }
          __int16 v360 = 5;
          goto LABEL_865;
        case 6u:
          char *v273 = *v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_676;
          }
          unsigned int v367 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v367 | 0x10;
          if (HIWORD(v367))
          {
            *(_DWORD *)&v273[v156] = 6;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_676:
            char v362 = 6;
            goto LABEL_821;
          }
          __int16 v360 = 6;
          goto LABEL_865;
        case 7u:
          char *v273 = *v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_680;
          }
          unsigned int v368 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v368 | 0x10;
          if (HIWORD(v368))
          {
            *(_DWORD *)&v273[v156] = 7;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_680:
            char v362 = 7;
            goto LABEL_821;
          }
          __int16 v360 = 7;
          goto LABEL_865;
        case 8u:
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v463 + 16))(v273, v270, v464);
          int v419 = (void *)((unint64_t)&v273[v460] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v420 = (void *)((unint64_t)&v270[v460] & 0xFFFFFFFFFFFFFFF8);
          *int v419 = *v420;
          unint64_t v421 = ((unint64_t)v419 + v461) & v86;
          unint64_t v422 = ((unint64_t)v420 + v461) & v86;
          uint64_t v423 = *(void (**)(unint64_t, unint64_t, uint64_t))(v465 + 16);
          swift_bridgeObjectRetain();
          v423(v421, v422, v466);
          unsigned int v424 = (void *)((v462 + v421) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v425 = (void *)((v462 + v422) & 0xFFFFFFFFFFFFFFF8);
          void *v424 = *v425;
          uint64_t v426 = (void *)(((unint64_t)v424 + 15) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v427 = (void *)(((unint64_t)v425 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v426 = *v427;
          v426[1] = v427[1];
          v273[v158] = v270[v158];
          *(unsigned char *)((unint64_t)&v273[v158] | 1) = *(unsigned char *)((unint64_t)&v270[v158] | 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unsigned int v275 = v490;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_772;
          }
          unsigned int v435 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v435 | 0x10;
          if (HIWORD(v435))
          {
            *(_DWORD *)&v273[v156] = 8;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_772:
            char v362 = 8;
            goto LABEL_821;
          }
          __int16 v360 = 8;
          goto LABEL_865;
        case 9u:
          unsigned int v369 = *(void **)v270;
          *(void *)uint64_t v273 = *(void *)v270;
          id v370 = v369;
          unsigned int v275 = v490;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_684;
          }
          unsigned int v371 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v371 | 0x10;
          if (HIWORD(v371))
          {
            *(_DWORD *)&v273[v156] = 9;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_684:
            char v362 = 9;
            goto LABEL_821;
          }
          __int16 v360 = 9;
          goto LABEL_865;
        case 0xAu:
          char *v273 = *v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_688;
          }
          unsigned int v372 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v372 | 0x10;
          if (HIWORD(v372))
          {
            *(_DWORD *)&v273[v156] = 10;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_688:
            char v362 = 10;
            goto LABEL_821;
          }
          __int16 v360 = 10;
          goto LABEL_865;
        case 0xBu:
          *(_WORD *)uint64_t v273 = *(_WORD *)v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_692;
          }
          unsigned int v373 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v373 | 0x10;
          if (HIWORD(v373))
          {
            *(_DWORD *)&v273[v156] = 11;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_692:
            char v362 = 11;
            goto LABEL_821;
          }
          __int16 v360 = 11;
          goto LABEL_865;
        case 0xCu:
          uint64_t v374 = *(void *)v270;
          unint64_t v375 = (void *)*((void *)v270 + 1);
          char v376 = v270[16];
          sub_24D3F1C98(*(id *)v270, v375, v376);
          *(void *)uint64_t v273 = v374;
          *((void *)v273 + 1) = v375;
          v273[16] = v376;
          unsigned int v275 = v490;
          uint64_t v156 = v491;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v491 > 3) {
            goto LABEL_696;
          }
          unsigned int v377 = ((1 << (8 * v491)) | 2u) >> (8 * v491);
          unsigned int v353 = v377 | 0x10;
          if (HIWORD(v377))
          {
            *(_DWORD *)&v273[v491] = 12;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_696:
            char v362 = 12;
            goto LABEL_821;
          }
          __int16 v360 = 12;
          goto LABEL_865;
        case 0xDu:
          long long v378 = *(_OWORD *)v270;
          *((void *)v273 + 2) = *((void *)v270 + 2);
          *(_OWORD *)uint64_t v273 = v378;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_700;
          }
          unsigned int v379 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v379 | 0x10;
          if (HIWORD(v379))
          {
            *(_DWORD *)&v273[v156] = 13;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_700:
            char v362 = 13;
            goto LABEL_821;
          }
          __int16 v360 = 13;
          goto LABEL_865;
        case 0xEu:
          if (*((void *)v270 + 2) >> 60 == 11)
          {
            long long v380 = *(_OWORD *)v270;
            long long v381 = *((_OWORD *)v270 + 1);
            long long v382 = *((_OWORD *)v270 + 2);
            *((void *)v273 + 6) = *((void *)v270 + 6);
            *((_OWORD *)v273 + 1) = v381;
            *((_OWORD *)v273 + 2) = v382;
            *(_OWORD *)uint64_t v273 = v380;
            unint64_t v350 = v495;
            unint64_t v351 = v459;
          }
          else
          {
            *(void *)uint64_t v273 = *(void *)v270;
            unint64_t v431 = (uint64_t *)(v270 + 8);
            unint64_t v432 = *((void *)v270 + 2);
            if (v432 >> 60 == 15)
            {
              *(_OWORD *)(v273 + 8) = *(_OWORD *)v431;
            }
            else
            {
              uint64_t v436 = *v431;
              sub_24D3F9C18(*v431, *((void *)v270 + 2));
              unsigned int v275 = v490;
              *((void *)v273 + 1) = v436;
              *((void *)v273 + 2) = v432;
            }
            unint64_t v350 = v495;
            unint64_t v351 = v459;
            uint64_t v156 = v491;
            long long v437 = *(_OWORD *)(v270 + 24);
            v273[40] = v270[40];
            *(_OWORD *)(v273 + 24) = v437;
            *((void *)v273 + 6) = *((void *)v270 + 6);
          }
          v273[56] = v270[56];
          if (v156 > 3) {
            goto LABEL_820;
          }
          unsigned int v438 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v438 | 0x10;
          if (HIWORD(v438))
          {
            *(_DWORD *)&v273[v156] = 14;
            goto LABEL_866;
          }
          if (v353 <= 0xFF)
          {
LABEL_820:
            char v362 = 14;
            goto LABEL_821;
          }
          __int16 v360 = 14;
          goto LABEL_865;
        case 0xFu:
          char *v273 = *v270;
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          if (v156 > 3) {
            goto LABEL_706;
          }
          unsigned int v383 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v353 = v383 | 0x10;
          if (HIWORD(v383))
          {
            *(_DWORD *)&v273[v156] = 15;
          }
          else
          {
            if (v353 <= 0xFF)
            {
LABEL_706:
              char v362 = 15;
LABEL_821:
              v273[v156] = v362;
LABEL_822:
              if (v156 > 3) {
                goto LABEL_826;
              }
              unsigned int v439 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
              unsigned int v440 = v439 | 0x10;
              BOOL v28 = HIWORD(v439) == 0;
              uint64_t v441 = 2;
              if (!v28) {
                uint64_t v441 = 4;
              }
              if (v440 <= 0xFF) {
LABEL_826:
              }
                uint64_t v441 = 1;
LABEL_868:
              unint64_t v446 = v493 + v441;
              if (v446 <= v496) {
                unint64_t v446 = v496;
              }
              if (v275 > 3) {
                goto LABEL_874;
              }
              unsigned int v447 = ((1 << (8 * v275)) | 2u) >> (8 * v275);
              unsigned int v448 = v447 | 0x10;
              BOOL v28 = HIWORD(v447) == 0;
              uint64_t v449 = 2;
              if (!v28) {
                uint64_t v449 = 4;
              }
              if (v448 <= 0xFF) {
LABEL_874:
              }
                uint64_t v449 = 1;
              unint64_t v450 = v488 + v449;
              if (v450 > v446) {
                unint64_t v446 = v450;
              }
              if (v486 > v446) {
                unint64_t v446 = v486;
              }
              if (v159 > v446) {
                unint64_t v446 = v159;
              }
              if (v350 > v446) {
                unint64_t v446 = v350;
              }
              if (v351 > v446) {
                unint64_t v446 = v351;
              }
              *((unsigned char *)v81 + v446) = 8;
              return v81;
            }
            __int16 v360 = 15;
LABEL_865:
            *(_WORD *)&v273[v156] = v360;
          }
LABEL_866:
          BOOL v28 = HIWORD(v353) == 0;
          uint64_t v441 = 2;
          if (!v28) {
            uint64_t v441 = 4;
          }
          goto LABEL_868;
        default:
          if (v156 > 3) {
            goto LABEL_769;
          }
          unsigned int v416 = ((1 << (8 * v156)) | 2u) >> (8 * v156);
          unsigned int v417 = v416 | 0x10;
          BOOL v28 = HIWORD(v416) == 0;
          uint64_t v418 = 2;
          if (!v28) {
            uint64_t v418 = 4;
          }
          if (v417 <= 0xFF) {
LABEL_769:
          }
            uint64_t v418 = 1;
          memcpy(v273, v270, v418 + v156);
          unint64_t v350 = v495;
          unint64_t v351 = v459;
          unsigned int v275 = v490;
          goto LABEL_822;
      }
    case 9u:
      unint64_t v477 = v89;
      unsigned int v161 = v49[v478];
      unsigned int v162 = v161 - 2;
      if (v161 >= 2)
      {
        if (v478 <= 3) {
          uint64_t v163 = v478;
        }
        else {
          uint64_t v163 = 4;
        }
        switch(v163)
        {
          case 1:
            int v164 = *v49;
            goto LABEL_459;
          case 2:
            int v164 = *(unsigned __int16 *)v49;
            goto LABEL_459;
          case 3:
            int v164 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_459;
          case 4:
            int v164 = *(_DWORD *)v49;
LABEL_459:
            if (v478 < 4) {
              unsigned int v161 = (v164 | (v162 << (8 * v478))) + 2;
            }
            else {
              unsigned int v161 = v164 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v278 = *(void *)(v36 - 8);
      uint64_t v482 = v36;
      BOOL v279 = v161 == 1;
      uint64_t v280 = v480;
      if (v161 == 1) {
        uint64_t v280 = v479;
      }
      uint64_t v281 = v49;
      (*(void (**)(void *))(v280 + 16))(a1);
      *((unsigned char *)a1 + v478) = v279;
      unint64_t v282 = (unint64_t)a1 + v494 + v39;
      int v283 = (unsigned __int8 *)((unint64_t)&v281[v494 + v39] & v87);
      uint64_t v284 = v490;
      if (v490 > 3) {
        goto LABEL_465;
      }
      unsigned int v286 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v286))
      {
        unsigned int v285 = *(_DWORD *)&v283[v490];
      }
      else if ((v286 | 0x10) <= 0xFF)
      {
LABEL_465:
        unsigned int v285 = v283[v490];
      }
      else
      {
        unsigned int v285 = *(unsigned __int16 *)&v283[v490];
      }
      int v287 = (char *)(v282 & v87);
      unsigned int v288 = v285 - 16;
      if (v285 >= 0x10)
      {
        if (v490 <= 3) {
          uint64_t v289 = v490;
        }
        else {
          uint64_t v289 = 4;
        }
        switch(v289)
        {
          case 1:
            int v290 = *v283;
            goto LABEL_645;
          case 2:
            int v290 = *(unsigned __int16 *)v283;
            goto LABEL_645;
          case 3:
            int v290 = *(unsigned __int16 *)v283 | (v283[2] << 16);
            goto LABEL_645;
          case 4:
            int v290 = *(_DWORD *)v283;
LABEL_645:
            if (v490 < 4) {
              v290 |= v288 << (8 * v490);
            }
            unsigned int v285 = v290 + 16;
            break;
          default:
            goto LABEL_648;
        }
      }
      break;
    case 0xAu:
      unsigned int v165 = v49[v478];
      unsigned int v166 = v165 - 2;
      if (v165 < 2)
      {
        unsigned int v168 = v491;
        uint64_t v81 = a1;
        unint64_t v169 = v484;
        unint64_t v170 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v167 = v478;
        }
        else {
          uint64_t v167 = 4;
        }
        unsigned int v168 = v491;
        uint64_t v81 = a1;
        unint64_t v169 = v484;
        unint64_t v170 = v486;
        switch(v167)
        {
          case 1:
            int v171 = *v49;
            goto LABEL_479;
          case 2:
            int v171 = *(unsigned __int16 *)v49;
            goto LABEL_479;
          case 3:
            int v171 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_479;
          case 4:
            int v171 = *(_DWORD *)v49;
LABEL_479:
            if (v478 < 4) {
              unsigned int v165 = (v171 | (v166 << (8 * v478))) + 2;
            }
            else {
              unsigned int v165 = v171 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v291 = v165 == 1;
      uint64_t v292 = v480;
      if (v165 == 1) {
        uint64_t v292 = v479;
      }
      uint64_t v293 = v49;
      (*(void (**)(void *))(v292 + 16))(v81);
      *((unsigned char *)v81 + v478) = v291;
      unint64_t v294 = (unint64_t)&v293[v494 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v295 = *(unsigned char *)(v294 + 8);
      unint64_t v296 = ((unint64_t)v81 + v494 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v296 = *(void *)v294;
      *(unsigned char *)(v296 + 8) = v295;
      if (v168 > 3) {
        goto LABEL_488;
      }
      unsigned int v297 = ((1 << (8 * v168)) | 2u) >> (8 * v168);
      unsigned int v298 = v297 | 0x10;
      BOOL v28 = HIWORD(v297) == 0;
      uint64_t v299 = 2;
      if (!v28) {
        uint64_t v299 = 4;
      }
      if (v298 <= 0xFF) {
LABEL_488:
      }
        uint64_t v299 = 1;
      unint64_t v300 = v493 + v299;
      if (v300 <= v496) {
        unint64_t v300 = v496;
      }
      if (v490 > 3) {
        goto LABEL_495;
      }
      unsigned int v301 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v302 = v301 | 0x10;
      BOOL v28 = HIWORD(v301) == 0;
      uint64_t v303 = 2;
      if (!v28) {
        uint64_t v303 = 4;
      }
      if (v302 <= 0xFF) {
LABEL_495:
      }
        uint64_t v303 = 1;
      unint64_t v304 = v488 + v303;
      if (v304 > v300) {
        unint64_t v300 = v304;
      }
      if (v170 > v300) {
        unint64_t v300 = v170;
      }
      if (v169 > v300) {
        unint64_t v300 = v169;
      }
      if (v495 > v300) {
        unint64_t v300 = v495;
      }
      if (v459 > v300) {
        unint64_t v300 = v459;
      }
      *((unsigned char *)v81 + v300) = 10;
      return v81;
    case 0xBu:
      unsigned int v97 = v49[v478];
      unsigned int v98 = v97 - 2;
      if (v97 < 2)
      {
        unsigned int v100 = v491;
        uint64_t v81 = a1;
        unint64_t v101 = v484;
        unint64_t v102 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v99 = v478;
        }
        else {
          uint64_t v99 = 4;
        }
        unsigned int v100 = v491;
        uint64_t v81 = a1;
        unint64_t v101 = v484;
        unint64_t v102 = v486;
        switch(v99)
        {
          case 1:
            int v103 = *v49;
            goto LABEL_256;
          case 2:
            int v103 = *(unsigned __int16 *)v49;
            goto LABEL_256;
          case 3:
            int v103 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_256;
          case 4:
            int v103 = *(_DWORD *)v49;
LABEL_256:
            if (v478 < 4) {
              unsigned int v97 = (v103 | (v98 << (8 * v478))) + 2;
            }
            else {
              unsigned int v97 = v103 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v197 = v97 == 1;
      uint64_t v198 = v480;
      if (v97 == 1) {
        uint64_t v198 = v479;
      }
      unint64_t v199 = v49;
      (*(void (**)(void *))(v198 + 16))(v81);
      *((unsigned char *)v81 + v478) = v197;
      *(_OWORD *)(((unint64_t)v81 + v494 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&v199[v494 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v100 > 3) {
        goto LABEL_265;
      }
      unsigned int v200 = ((1 << (8 * v100)) | 2u) >> (8 * v100);
      unsigned int v201 = v200 | 0x10;
      BOOL v28 = HIWORD(v200) == 0;
      uint64_t v202 = 2;
      if (!v28) {
        uint64_t v202 = 4;
      }
      if (v201 <= 0xFF) {
LABEL_265:
      }
        uint64_t v202 = 1;
      unint64_t v203 = v493 + v202;
      if (v203 <= v496) {
        unint64_t v203 = v496;
      }
      if (v490 > 3) {
        goto LABEL_272;
      }
      unsigned int v204 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v205 = v204 | 0x10;
      BOOL v28 = HIWORD(v204) == 0;
      uint64_t v206 = 2;
      if (!v28) {
        uint64_t v206 = 4;
      }
      if (v205 <= 0xFF) {
LABEL_272:
      }
        uint64_t v206 = 1;
      unint64_t v207 = v488 + v206;
      if (v207 > v203) {
        unint64_t v203 = v207;
      }
      if (v102 > v203) {
        unint64_t v203 = v102;
      }
      if (v101 > v203) {
        unint64_t v203 = v101;
      }
      if (v495 > v203) {
        unint64_t v203 = v495;
      }
      if (v459 > v203) {
        unint64_t v203 = v459;
      }
      *((unsigned char *)v81 + v203) = 11;
      return v81;
    case 0xCu:
      unsigned int v172 = v49[v478];
      unsigned int v173 = v172 - 2;
      if (v172 < 2)
      {
        unsigned int v175 = v491;
        uint64_t v81 = a1;
        unint64_t v176 = v484;
        unint64_t v177 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v174 = v478;
        }
        else {
          uint64_t v174 = 4;
        }
        unsigned int v175 = v491;
        uint64_t v81 = a1;
        unint64_t v176 = v484;
        unint64_t v177 = v486;
        switch(v174)
        {
          case 1:
            int v178 = *v49;
            goto LABEL_510;
          case 2:
            int v178 = *(unsigned __int16 *)v49;
            goto LABEL_510;
          case 3:
            int v178 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_510;
          case 4:
            int v178 = *(_DWORD *)v49;
LABEL_510:
            if (v478 < 4) {
              unsigned int v172 = (v178 | (v173 << (8 * v478))) + 2;
            }
            else {
              unsigned int v172 = v178 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v305 = v172 == 1;
      uint64_t v306 = v480;
      if (v172 == 1) {
        uint64_t v306 = v479;
      }
      unint64_t v307 = v49;
      (*(void (**)(void *))(v306 + 16))(v81);
      *((unsigned char *)v81 + v478) = v305;
      *((unsigned char *)v81 + v494) = v307[v494];
      if (v175 > 3) {
        goto LABEL_519;
      }
      unsigned int v308 = ((1 << (8 * v175)) | 2u) >> (8 * v175);
      unsigned int v309 = v308 | 0x10;
      BOOL v28 = HIWORD(v308) == 0;
      uint64_t v310 = 2;
      if (!v28) {
        uint64_t v310 = 4;
      }
      if (v309 <= 0xFF) {
LABEL_519:
      }
        uint64_t v310 = 1;
      unint64_t v311 = v493 + v310;
      if (v311 <= v496) {
        unint64_t v311 = v496;
      }
      if (v490 > 3) {
        goto LABEL_526;
      }
      unsigned int v312 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v313 = v312 | 0x10;
      BOOL v28 = HIWORD(v312) == 0;
      uint64_t v314 = 2;
      if (!v28) {
        uint64_t v314 = 4;
      }
      if (v313 <= 0xFF) {
LABEL_526:
      }
        uint64_t v314 = 1;
      unint64_t v315 = v488 + v314;
      if (v315 > v311) {
        unint64_t v311 = v315;
      }
      if (v177 > v311) {
        unint64_t v311 = v177;
      }
      if (v176 > v311) {
        unint64_t v311 = v176;
      }
      if (v495 > v311) {
        unint64_t v311 = v495;
      }
      if (v459 > v311) {
        unint64_t v311 = v459;
      }
      *((unsigned char *)v81 + v311) = 12;
      return v81;
    case 0xDu:
      unsigned int v179 = v49[v478];
      unsigned int v180 = v179 - 2;
      if (v179 < 2)
      {
        unsigned int v182 = v491;
        uint64_t v81 = a1;
        unint64_t v183 = v484;
        unint64_t v184 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v181 = v478;
        }
        else {
          uint64_t v181 = 4;
        }
        unsigned int v182 = v491;
        uint64_t v81 = a1;
        unint64_t v183 = v484;
        unint64_t v184 = v486;
        switch(v181)
        {
          case 1:
            int v185 = *v49;
            goto LABEL_541;
          case 2:
            int v185 = *(unsigned __int16 *)v49;
            goto LABEL_541;
          case 3:
            int v185 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_541;
          case 4:
            int v185 = *(_DWORD *)v49;
LABEL_541:
            if (v478 < 4) {
              unsigned int v179 = (v185 | (v180 << (8 * v478))) + 2;
            }
            else {
              unsigned int v179 = v185 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v316 = v179 == 1;
      uint64_t v317 = v480;
      if (v179 == 1) {
        uint64_t v317 = v479;
      }
      unint64_t v318 = v49;
      (*(void (**)(void *))(v317 + 16))(v81);
      *((unsigned char *)v81 + v478) = v316;
      unint64_t v319 = (void *)(((unint64_t)v81 + v494 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v320 = (void *)((unint64_t)&v318[v494 + 7] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v319 = *v320;
      *(void *)(((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v182 > 3) {
        goto LABEL_550;
      }
      unsigned int v321 = ((1 << (8 * v182)) | 2u) >> (8 * v182);
      unsigned int v322 = v321 | 0x10;
      BOOL v28 = HIWORD(v321) == 0;
      uint64_t v323 = 2;
      if (!v28) {
        uint64_t v323 = 4;
      }
      if (v322 <= 0xFF) {
LABEL_550:
      }
        uint64_t v323 = 1;
      unint64_t v324 = v493 + v323;
      if (v324 <= v496) {
        unint64_t v324 = v496;
      }
      if (v490 > 3) {
        goto LABEL_557;
      }
      unsigned int v325 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v326 = v325 | 0x10;
      BOOL v28 = HIWORD(v325) == 0;
      uint64_t v327 = 2;
      if (!v28) {
        uint64_t v327 = 4;
      }
      if (v326 <= 0xFF) {
LABEL_557:
      }
        uint64_t v327 = 1;
      unint64_t v328 = v488 + v327;
      if (v328 > v324) {
        unint64_t v324 = v328;
      }
      if (v184 > v324) {
        unint64_t v324 = v184;
      }
      if (v183 > v324) {
        unint64_t v324 = v183;
      }
      if (v495 > v324) {
        unint64_t v324 = v495;
      }
      if (v459 > v324) {
        unint64_t v324 = v459;
      }
      *((unsigned char *)v81 + v324) = 13;
      return v81;
    default:
      unsigned int v90 = v49[v478];
      unsigned int v91 = v90 - 2;
      if (v90 < 2)
      {
        unsigned int v93 = v491;
        uint64_t v81 = a1;
        unint64_t v94 = v484;
        unint64_t v95 = v486;
      }
      else
      {
        if (v478 <= 3) {
          uint64_t v92 = v478;
        }
        else {
          uint64_t v92 = 4;
        }
        unsigned int v93 = v491;
        uint64_t v81 = a1;
        unint64_t v94 = v484;
        unint64_t v95 = v486;
        switch(v92)
        {
          case 1:
            int v96 = *v49;
            goto LABEL_225;
          case 2:
            int v96 = *(unsigned __int16 *)v49;
            goto LABEL_225;
          case 3:
            int v96 = *(unsigned __int16 *)v49 | (v49[2] << 16);
            goto LABEL_225;
          case 4:
            int v96 = *(_DWORD *)v49;
LABEL_225:
            if (v478 < 4) {
              unsigned int v90 = (v96 | (v91 << (8 * v478))) + 2;
            }
            else {
              unsigned int v90 = v96 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v186 = v90 == 1;
      uint64_t v187 = v480;
      if (v90 == 1) {
        uint64_t v187 = v479;
      }
      uint64_t v188 = v49;
      (*(void (**)(void *))(v187 + 16))(v81);
      *((unsigned char *)v81 + v478) = v186;
      *((unsigned char *)v81 + v494) = v188[v494];
      if (v93 > 3) {
        goto LABEL_234;
      }
      unsigned int v189 = ((1 << (8 * v93)) | 2u) >> (8 * v93);
      unsigned int v190 = v189 | 0x10;
      BOOL v28 = HIWORD(v189) == 0;
      uint64_t v191 = 2;
      if (!v28) {
        uint64_t v191 = 4;
      }
      if (v190 <= 0xFF) {
LABEL_234:
      }
        uint64_t v191 = 1;
      unint64_t v192 = v493 + v191;
      if (v192 <= v496) {
        unint64_t v192 = v496;
      }
      if (v490 > 3) {
        goto LABEL_241;
      }
      unsigned int v193 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v194 = v193 | 0x10;
      BOOL v28 = HIWORD(v193) == 0;
      uint64_t v195 = 2;
      if (!v28) {
        uint64_t v195 = 4;
      }
      if (v194 <= 0xFF) {
LABEL_241:
      }
        uint64_t v195 = 1;
      unint64_t v196 = v488 + v195;
      if (v196 > v192) {
        unint64_t v192 = v196;
      }
      if (v95 > v192) {
        unint64_t v192 = v95;
      }
      if (v94 > v192) {
        unint64_t v192 = v94;
      }
      if (v495 > v192) {
        unint64_t v192 = v495;
      }
      if (v459 > v192) {
        unint64_t v192 = v459;
      }
      *((unsigned char *)v81 + v192) = 0;
      return v81;
  }
LABEL_648:
  switch(v285)
  {
    case 0u:
      long long v354 = *(_OWORD *)v283;
      *((void *)v287 + 2) = *((void *)v283 + 2);
      *(_OWORD *)int v287 = v354;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_652;
      }
      unsigned int v359 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v359))
      {
        *(_DWORD *)&v287[v490] = 0;
      }
      else if ((v359 | 0x10) > 0xFF)
      {
        *(_WORD *)&v287[v490] = 0;
      }
      else
      {
LABEL_652:
        v287[v490] = 0;
      }
      break;
    case 1u:
      *(void *)int v287 = *(void *)v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_710;
      }
      unsigned int v384 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v384))
      {
        *(_DWORD *)&v287[v490] = 1;
      }
      else
      {
        if ((v384 | 0x10) > 0xFF)
        {
          __int16 v445 = 1;
          goto LABEL_887;
        }
LABEL_710:
        v287[v490] = 1;
      }
      break;
    case 2u:
      *(_OWORD *)int v287 = *(_OWORD *)v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_714;
      }
      unsigned int v385 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v385))
      {
        *(_DWORD *)&v287[v490] = 2;
      }
      else
      {
        if ((v385 | 0x10) > 0xFF)
        {
          __int16 v445 = 2;
          goto LABEL_887;
        }
LABEL_714:
        v287[v490] = 2;
      }
      break;
    case 3u:
      *int v287 = *v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_718;
      }
      unsigned int v386 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v386))
      {
        *(_DWORD *)&v287[v490] = 3;
      }
      else
      {
        if ((v386 | 0x10) > 0xFF)
        {
          __int16 v445 = 3;
          goto LABEL_887;
        }
LABEL_718:
        v287[v490] = 3;
      }
      break;
    case 4u:
      *int v287 = *v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_722;
      }
      unsigned int v387 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v387))
      {
        *(_DWORD *)&v287[v490] = 4;
      }
      else
      {
        if ((v387 | 0x10) > 0xFF)
        {
          __int16 v445 = 4;
          goto LABEL_887;
        }
LABEL_722:
        v287[v490] = 4;
      }
      break;
    case 5u:
      *int v287 = *v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_726;
      }
      unsigned int v388 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v388))
      {
        *(_DWORD *)&v287[v490] = 5;
      }
      else
      {
        if ((v388 | 0x10) > 0xFF)
        {
          __int16 v445 = 5;
          goto LABEL_887;
        }
LABEL_726:
        v287[v490] = 5;
      }
      break;
    case 6u:
      *int v287 = *v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_730;
      }
      unsigned int v389 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v389))
      {
        *(_DWORD *)&v287[v490] = 6;
      }
      else
      {
        if ((v389 | 0x10) > 0xFF)
        {
          __int16 v445 = 6;
          goto LABEL_887;
        }
LABEL_730:
        v287[v490] = 6;
      }
      break;
    case 7u:
      *int v287 = *v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_734;
      }
      unsigned int v390 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v390))
      {
        *(_DWORD *)&v287[v490] = 7;
      }
      else
      {
        if ((v390 | 0x10) > 0xFF)
        {
          __int16 v445 = 7;
          goto LABEL_887;
        }
LABEL_734:
        v287[v490] = 7;
      }
      break;
    case 8u:
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v467 + 16))(v287, v283, v468);
      long long v391 = (void *)((unint64_t)&v287[v41] & 0xFFFFFFFFFFFFFFF8);
      long long v392 = (void *)((unint64_t)&v283[v41] & 0xFFFFFFFFFFFFFFF8);
      void *v391 = *v392;
      unint64_t v393 = ((unint64_t)v391 + v42) & v88;
      unint64_t v394 = ((unint64_t)v392 + v42) & v88;
      unsigned int v395 = *(void (**)(unint64_t, unint64_t, uint64_t))(v278 + 16);
      swift_bridgeObjectRetain();
      v395(v393, v394, v482);
      uint64_t v396 = (void *)((v43 + v393) & 0xFFFFFFFFFFFFFFF8);
      long long v397 = (void *)((v43 + v394) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v396 = *v397;
      long long v398 = (void *)(((unint64_t)v396 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v399 = (void *)(((unint64_t)v397 + 15) & 0xFFFFFFFFFFFFFFF8);
      *long long v398 = *v399;
      v398[1] = v399[1];
      v287[v477] = v283[v477];
      *(unsigned char *)((unint64_t)&v287[v477] | 1) = *(unsigned char *)((unint64_t)&v283[v477] | 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v284 = v490;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_738;
      }
      unsigned int v400 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v400))
      {
        *(_DWORD *)&v287[v490] = 8;
      }
      else
      {
        if ((v400 | 0x10) > 0xFF)
        {
          __int16 v445 = 8;
          goto LABEL_887;
        }
LABEL_738:
        v287[v490] = 8;
      }
      break;
    case 9u:
      unint64_t v401 = *(void **)v283;
      *(void *)int v287 = *(void *)v283;
      id v402 = v401;
      uint64_t v284 = v490;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_742;
      }
      unsigned int v403 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v403))
      {
        *(_DWORD *)&v287[v490] = 9;
      }
      else
      {
        if ((v403 | 0x10) > 0xFF)
        {
          __int16 v445 = 9;
          goto LABEL_887;
        }
LABEL_742:
        v287[v490] = 9;
      }
      break;
    case 0xAu:
      *int v287 = *v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_746;
      }
      unsigned int v404 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v404))
      {
        *(_DWORD *)&v287[v490] = 10;
      }
      else
      {
        if ((v404 | 0x10) > 0xFF)
        {
          __int16 v445 = 10;
          goto LABEL_887;
        }
LABEL_746:
        v287[v490] = 10;
      }
      break;
    case 0xBu:
      *(_WORD *)int v287 = *(_WORD *)v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_750;
      }
      unsigned int v405 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v405))
      {
        *(_DWORD *)&v287[v490] = 11;
      }
      else
      {
        if ((v405 | 0x10) > 0xFF)
        {
          __int16 v445 = 11;
          goto LABEL_887;
        }
LABEL_750:
        v287[v490] = 11;
      }
      break;
    case 0xCu:
      uint64_t v406 = *(void *)v283;
      unint64_t v407 = (void *)*((void *)v283 + 1);
      char v408 = v283[16];
      sub_24D3F1C98(*(id *)v283, v407, v408);
      uint64_t v284 = v490;
      *(void *)int v287 = v406;
      *((void *)v287 + 1) = v407;
      v287[16] = v408;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_754;
      }
      unsigned int v409 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v409))
      {
        *(_DWORD *)&v287[v490] = 12;
      }
      else
      {
        if ((v409 | 0x10) > 0xFF)
        {
          __int16 v445 = 12;
          goto LABEL_887;
        }
LABEL_754:
        v287[v490] = 12;
      }
      break;
    case 0xDu:
      long long v410 = *(_OWORD *)v283;
      *((void *)v287 + 2) = *((void *)v283 + 2);
      *(_OWORD *)int v287 = v410;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_758;
      }
      unsigned int v411 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v411))
      {
        *(_DWORD *)&v287[v490] = 13;
      }
      else
      {
        if ((v411 | 0x10) > 0xFF)
        {
          __int16 v445 = 13;
          goto LABEL_887;
        }
LABEL_758:
        v287[v490] = 13;
      }
      break;
    case 0xEu:
      if (*((void *)v283 + 2) >> 60 == 11)
      {
        long long v412 = *(_OWORD *)v283;
        long long v413 = *((_OWORD *)v283 + 1);
        long long v414 = *((_OWORD *)v283 + 2);
        *((void *)v287 + 6) = *((void *)v283 + 6);
        *((_OWORD *)v287 + 1) = v413;
        *((_OWORD *)v287 + 2) = v414;
        *(_OWORD *)int v287 = v412;
        uint64_t v81 = a1;
        unint64_t v355 = v495;
        unint64_t v356 = v459;
        unint64_t v357 = v484;
        unint64_t v358 = v486;
      }
      else
      {
        *(void *)int v287 = *(void *)v283;
        uint64_t v433 = (uint64_t *)(v283 + 8);
        unint64_t v434 = *((void *)v283 + 2);
        uint64_t v81 = a1;
        unint64_t v357 = v484;
        unint64_t v358 = v486;
        if (v434 >> 60 == 15)
        {
          *(_OWORD *)(v287 + 8) = *(_OWORD *)v433;
        }
        else
        {
          uint64_t v442 = *v433;
          sub_24D3F9C18(*v433, *((void *)v283 + 2));
          uint64_t v284 = v490;
          *((void *)v287 + 1) = v442;
          *((void *)v287 + 2) = v434;
        }
        unint64_t v355 = v495;
        unint64_t v356 = v459;
        long long v443 = *(_OWORD *)(v283 + 24);
        v287[40] = v283[40];
        *(_OWORD *)(v287 + 24) = v443;
        *((void *)v287 + 6) = *((void *)v283 + 6);
      }
      v287[56] = v283[56];
      if (v284 > 3) {
        goto LABEL_832;
      }
      unsigned int v444 = ((1 << (8 * v284)) | 2u) >> (8 * v284);
      if (HIWORD(v444))
      {
        *(_DWORD *)&v287[v284] = 14;
      }
      else
      {
        if ((v444 | 0x10) > 0xFF)
        {
          __int16 v445 = 14;
          goto LABEL_887;
        }
LABEL_832:
        v287[v284] = 14;
      }
      break;
    case 0xFu:
      *int v287 = *v283;
      uint64_t v81 = a1;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      if (v490 > 3) {
        goto LABEL_764;
      }
      unsigned int v415 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      if (HIWORD(v415))
      {
        *(_DWORD *)&v287[v490] = 15;
      }
      else
      {
        if ((v415 | 0x10) > 0xFF)
        {
          __int16 v445 = 15;
LABEL_887:
          *(_WORD *)&v287[v284] = v445;
          break;
        }
LABEL_764:
        v287[v490] = 15;
      }
      break;
    default:
      if (v490 > 3) {
        goto LABEL_777;
      }
      unsigned int v428 = ((1 << (8 * v490)) | 2u) >> (8 * v490);
      unsigned int v429 = v428 | 0x10;
      BOOL v28 = HIWORD(v428) == 0;
      uint64_t v430 = 2;
      if (!v28) {
        uint64_t v430 = 4;
      }
      if (v429 <= 0xFF) {
LABEL_777:
      }
        uint64_t v430 = 1;
      uint64_t v81 = a1;
      unint64_t v357 = v484;
      unint64_t v358 = v486;
      memcpy(v287, v283, v430 + v490);
      LODWORD(v284) = v490;
      unint64_t v355 = v495;
      unint64_t v356 = v459;
      break;
  }
  if (v491 > 3) {
    goto LABEL_892;
  }
  unsigned int v451 = ((1 << (8 * v491)) | 2u) >> (8 * v491);
  unsigned int v452 = v451 | 0x10;
  BOOL v28 = HIWORD(v451) == 0;
  uint64_t v453 = 2;
  if (!v28) {
    uint64_t v453 = 4;
  }
  if (v452 <= 0xFF) {
LABEL_892:
  }
    uint64_t v453 = 1;
  unint64_t v454 = v493 + v453;
  if (v454 <= v496) {
    unint64_t v454 = v496;
  }
  if (v284 > 3) {
    goto LABEL_899;
  }
  unsigned int v455 = ((1 << (8 * v284)) | 2u) >> (8 * v284);
  unsigned int v456 = v455 | 0x10;
  BOOL v28 = HIWORD(v455) == 0;
  uint64_t v457 = 2;
  if (!v28) {
    uint64_t v457 = 4;
  }
  if (v456 <= 0xFF) {
LABEL_899:
  }
    uint64_t v457 = 1;
  unint64_t v458 = v488 + v457;
  if (v458 > v454) {
    unint64_t v454 = v458;
  }
  if (v358 > v454) {
    unint64_t v454 = v358;
  }
  if (v357 > v454) {
    unint64_t v454 = v357;
  }
  if (v355 > v454) {
    unint64_t v454 = v355;
  }
  if (v356 > v454) {
    unint64_t v454 = v356;
  }
  *((unsigned char *)v81 + v454) = 9;
  return v81;
}

void sub_24D4CAC68(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v149 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v1 = *(void *)(v149 + 64);
  uint64_t v137 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v137 - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  if (v3 <= v1) {
    unint64_t v4 = v1;
  }
  else {
    unint64_t v4 = *(void *)(*(void *)(v137 - 8) + 64);
  }
  unint64_t v5 = v4 + 1;
  uint64_t v138 = *(void *)(v137 - 8);
  uint64_t v6 = *(_DWORD *)(v2 + 80);
  uint64_t v134 = v1 + v6;
  uint64_t v145 = v6;
  unint64_t v7 = v3 + ((v1 + v6) & ~v6);
  unint64_t v140 = v4;
  unint64_t v141 = v4 + 2;
  if (v7 + 1 > v4 + 2) {
    unint64_t v8 = v7 + 1;
  }
  else {
    unint64_t v8 = v4 + 2;
  }
  if (v5 > v8) {
    unint64_t v8 = v4 + 1;
  }
  unint64_t v9 = v4 & 0xFFFFFFFFFFFFFFF8;
  if ((v4 & 0xFFFFFFFFFFFFFFF8) + 16 > v8) {
    unint64_t v8 = (v4 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v10 = *(unsigned __int8 *)(v149 + 80) | *(_DWORD *)(v2 + 80);
  uint64_t v136 = v5 + v10;
  uint64_t v144 = v10;
  if (((v5 + v10) & ~v10) + v5 > v8) {
    unint64_t v8 = ((v5 + v10) & ~v10) + v5;
  }
  unint64_t v148 = v8;
  uint64_t v133 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v133 - 8);
  uint64_t v131 = v11;
  int v12 = *(_DWORD *)(v11 + 80) & 0xF8;
  uint64_t v132 = swift_getAssociatedTypeWitness();
  uint64_t v130 = *(void *)(v132 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v130 + 80);
  uint64_t v14 = v12 | v13 | 7;
  unint64_t v147 = v5;
  uint64_t v135 = v5 + v14;
  uint64_t v142 = v14;
  unint64_t v15 = (v5 + v14) & ~v14;
  uint64_t v127 = *(void *)(v11 + 64) + 7;
  uint64_t v128 = v13 + 8;
  uint64_t v143 = v13;
  unint64_t v16 = (v13 + 8 + (v127 & 0xFFFFFFFFFFFFFFF8)) & ~v13;
  uint64_t v129 = *(void *)(v130 + 64) + 7;
  if (((((v129 + v16) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18 <= 0x39) {
    unint64_t v17 = 57;
  }
  else {
    unint64_t v17 = ((((v129 + v16) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18;
  }
  if (v17 > 3) {
    goto LABEL_20;
  }
  unsigned int v18 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
  unsigned int v19 = v18 | 0x10;
  BOOL v20 = HIWORD(v18) == 0;
  uint64_t v21 = 2;
  if (!v20) {
    uint64_t v21 = 4;
  }
  if (v19 <= 0xFF) {
LABEL_20:
  }
    uint64_t v21 = 1;
  unint64_t v22 = v17 + v15;
  unint64_t v23 = v17 + v15 + v21;
  if (v23 <= v148) {
    unint64_t v24 = v148;
  }
  else {
    unint64_t v24 = v23;
  }
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v125 = v26;
  uint64_t v126 = v25;
  int v27 = *(_DWORD *)(v26 + 80) & 0xF8;
  uint64_t v28 = swift_getAssociatedTypeWitness();
  uint64_t v29 = *(unsigned __int8 *)(*(void *)(v28 - 8) + 80);
  uint64_t v30 = v27 | v29 | 7;
  uint64_t v31 = *(void *)(v26 + 64) + 7;
  uint64_t v32 = v29 + 8;
  unint64_t v33 = (v29 + 8 + (v31 & 0xFFFFFFFFFFFFFFF8)) & ~v29;
  uint64_t v34 = *(void *)(*(void *)(v28 - 8) + 64) + 7;
  if (((((v34 + v33) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18 <= 0x39) {
    unint64_t v35 = 57;
  }
  else {
    unint64_t v35 = ((((v34 + v33) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 18;
  }
  char v36 = 8 * v35;
  if (v35 <= 3) {
    unsigned int v37 = (((1 << (8 * v35)) | 2u) >> (8 * v35)) | 0x10;
  }
  else {
    unsigned int v37 = 17;
  }
  unint64_t v38 = v9 + 17;
  unint64_t v39 = v9 + 24;
  unint64_t v40 = ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v41 = 4;
  if (v37 < 0x10000) {
    uint64_t v41 = 2;
  }
  if (v37 < 0x100) {
    uint64_t v42 = 1;
  }
  else {
    uint64_t v42 = v41;
  }
  unint64_t v43 = v35 + ((v147 + v30) & ~v30);
  unint64_t v44 = v43 + v42;
  if (v44 <= v24) {
    unint64_t v44 = v24;
  }
  if (v38 > v44) {
    unint64_t v44 = v9 + 17;
  }
  if (v39 > v44) {
    unint64_t v44 = v9 + 24;
  }
  if (v141 > v44) {
    unint64_t v44 = v141;
  }
  if (v40 > v44) {
    unint64_t v44 = ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v45 = a1[v44];
  unsigned int v46 = v45 - 14;
  if (v45 >= 0xE)
  {
    if (v17 > 3) {
      goto LABEL_50;
    }
    unsigned int v47 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
    unsigned int v48 = v47 | 0x10;
    BOOL v20 = HIWORD(v47) == 0;
    uint64_t v49 = 2;
    if (!v20) {
      uint64_t v49 = 4;
    }
    if (v48 <= 0xFF) {
LABEL_50:
    }
      uint64_t v49 = 1;
    unint64_t v50 = v22 + v49;
    if (v50 <= v148) {
      unint64_t v50 = v148;
    }
    if (v35 > 3) {
      goto LABEL_57;
    }
    unsigned int v51 = ((1 << v36) | 2u) >> v36;
    unsigned int v52 = v51 | 0x10;
    BOOL v20 = HIWORD(v51) == 0;
    uint64_t v53 = 2;
    if (!v20) {
      uint64_t v53 = 4;
    }
    if (v52 <= 0xFF) {
LABEL_57:
    }
      uint64_t v53 = 1;
    unint64_t v54 = v43 + v53;
    if (v54 <= v50) {
      unint64_t v54 = v50;
    }
    if (v38 <= v54) {
      unint64_t v38 = v54;
    }
    if (v39 <= v38) {
      unint64_t v39 = v38;
    }
    if (v141 > v39) {
      unint64_t v39 = v141;
    }
    if (v40 <= v39) {
      LODWORD(v40) = v39;
    }
    if (v40 <= 3) {
      uint64_t v55 = v40;
    }
    else {
      uint64_t v55 = 4;
    }
    switch(v55)
    {
      case 1:
        int v56 = *a1;
        if (v40 < 4) {
          goto LABEL_79;
        }
        goto LABEL_80;
      case 2:
        int v56 = *(unsigned __int16 *)a1;
        if (v40 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_79;
      case 3:
        int v56 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v40 >= 4) {
          goto LABEL_80;
        }
        goto LABEL_79;
      case 4:
        int v56 = *(_DWORD *)a1;
        if (v40 < 4) {
LABEL_79:
        }
          v56 |= v46 << (8 * v40);
LABEL_80:
        unsigned int v45 = v56 + 14;
        break;
      default:
        break;
    }
  }
  uint64_t v57 = ~v144;
  uint64_t v58 = ~v29;
  switch(v45)
  {
    case 1u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v149 + 8))(a1, AssociatedTypeWitness);
      unsigned int v63 = (unsigned __int8 *)((unint64_t)&a1[v134] & ~v145);
      goto LABEL_255;
    case 2u:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v64 = v140;
        }
        else {
          uint64_t v64 = 4;
        }
        switch(v64)
        {
          case 1:
            goto LABEL_152;
          case 2:
            goto LABEL_154;
          case 3:
            goto LABEL_156;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_158;
        }
      }
      goto LABEL_158;
    case 3u:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v65 = v140;
        }
        else {
          uint64_t v65 = 4;
        }
        switch(v65)
        {
          case 1:
            goto LABEL_152;
          case 2:
            goto LABEL_154;
          case 3:
            goto LABEL_156;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_158;
        }
      }
      goto LABEL_158;
    case 4u:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v66 = v140;
        }
        else {
          uint64_t v66 = 4;
        }
        switch(v66)
        {
          case 1:
            goto LABEL_152;
          case 2:
            goto LABEL_154;
          case 3:
            goto LABEL_156;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_158;
        }
      }
      goto LABEL_158;
    case 5u:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v67 = v140;
        }
        else {
          uint64_t v67 = 4;
        }
        switch(v67)
        {
          case 1:
            goto LABEL_152;
          case 2:
            goto LABEL_154;
          case 3:
            goto LABEL_156;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_158;
        }
      }
      goto LABEL_158;
    case 6u:
      char v68 = v140;
      unsigned int v69 = a1[v140];
      unsigned int v70 = v69 - 2;
      if (v69 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v71 = v140;
        }
        else {
          uint64_t v71 = 4;
        }
        switch(v71)
        {
          case 1:
            int v72 = *a1;
            goto LABEL_168;
          case 2:
            int v72 = *(unsigned __int16 *)a1;
            goto LABEL_168;
          case 3:
            int v72 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_168;
          case 4:
            int v72 = *(_DWORD *)a1;
LABEL_168:
            if (v140 < 4) {
              unsigned int v69 = (v72 | (v70 << (8 * v140))) + 2;
            }
            else {
              unsigned int v69 = v72 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v69 == 1) {
        uint64_t v92 = v138;
      }
      else {
        uint64_t v92 = v149;
      }
      if (v69 == 1) {
        uint64_t v93 = v137;
      }
      else {
        uint64_t v93 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v92 + 8))(a1, v93);
      unsigned int v63 = (unsigned __int8 *)((unint64_t)&a1[v136] & v57);
      unsigned int v94 = v63[v140];
      unsigned int v95 = v94 - 2;
      if (v94 < 2) {
        goto LABEL_254;
      }
      if (v140 <= 3) {
        uint64_t v96 = v140;
      }
      else {
        uint64_t v96 = 4;
      }
      switch(v96)
      {
        case 1:
          int v97 = *v63;
          break;
        case 2:
          int v97 = *(unsigned __int16 *)v63;
          break;
        case 3:
          int v97 = *(unsigned __int16 *)v63 | (*(unsigned __int8 *)(((unint64_t)&a1[v136] & v57) + 2) << 16);
          break;
        case 4:
          int v97 = *(_DWORD *)v63;
          break;
        default:
          goto LABEL_254;
      }
      if (v140 >= 4) {
        goto LABEL_253;
      }
      goto LABEL_263;
    case 7u:
      char v68 = v140;
      unsigned int v73 = a1[v140];
      unsigned int v74 = v73 - 2;
      if (v73 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v75 = v140;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            int v76 = *a1;
            goto LABEL_186;
          case 2:
            int v76 = *(unsigned __int16 *)a1;
            goto LABEL_186;
          case 3:
            int v76 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_186;
          case 4:
            int v76 = *(_DWORD *)a1;
LABEL_186:
            if (v140 < 4) {
              unsigned int v73 = (v76 | (v74 << (8 * v140))) + 2;
            }
            else {
              unsigned int v73 = v76 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v73 == 1) {
        uint64_t v98 = v138;
      }
      else {
        uint64_t v98 = v149;
      }
      if (v73 == 1) {
        uint64_t v99 = v137;
      }
      else {
        uint64_t v99 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v98 + 8))(a1, v99);
      unsigned int v63 = (unsigned __int8 *)((unint64_t)&a1[v136] & v57);
      unsigned int v94 = v63[v140];
      unsigned int v95 = v94 - 2;
      if (v94 < 2) {
        goto LABEL_254;
      }
      if (v140 <= 3) {
        uint64_t v100 = v140;
      }
      else {
        uint64_t v100 = 4;
      }
      switch(v100)
      {
        case 1:
          int v97 = *v63;
          break;
        case 2:
          int v97 = *(unsigned __int16 *)v63;
          break;
        case 3:
          int v97 = *(unsigned __int16 *)v63 | (*(unsigned __int8 *)(((unint64_t)&a1[v136] & v57) + 2) << 16);
          break;
        case 4:
          int v97 = *(_DWORD *)v63;
          break;
        default:
          goto LABEL_254;
      }
      if (v140 >= 4)
      {
LABEL_253:
        unsigned int v94 = v97 + 2;
LABEL_254:
        if (v94 != 1) {
          goto LABEL_264;
        }
LABEL_255:
        uint64_t v90 = v137;
        unsigned int v91 = *(void (**)(unsigned __int8 *, uint64_t))(v138 + 8);
        goto LABEL_256;
      }
LABEL_263:
      if ((v97 | (v95 << (8 * v68))) == 0xFFFFFFFF) {
        goto LABEL_255;
      }
LABEL_264:
      unsigned int v91 = *(void (**)(unsigned __int8 *, uint64_t))(v149 + 8);
LABEL_163:
      uint64_t v90 = AssociatedTypeWitness;
LABEL_256:
      v91(v63, v90);
      return;
    case 8u:
      unsigned int v77 = a1[v140];
      unsigned int v78 = v77 - 2;
      if (v77 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v79 = v140;
        }
        else {
          uint64_t v79 = 4;
        }
        switch(v79)
        {
          case 1:
            int v80 = *a1;
            goto LABEL_204;
          case 2:
            int v80 = *(unsigned __int16 *)a1;
            goto LABEL_204;
          case 3:
            int v80 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_204;
          case 4:
            int v80 = *(_DWORD *)a1;
LABEL_204:
            if (v140 < 4) {
              unsigned int v77 = (v80 | (v78 << (8 * v140))) + 2;
            }
            else {
              unsigned int v77 = v80 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v77 == 1) {
        uint64_t v101 = v138;
      }
      else {
        uint64_t v101 = v149;
      }
      if (v77 == 1) {
        uint64_t v102 = v137;
      }
      else {
        uint64_t v102 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v101 + 8))(a1, v102);
      int v103 = (unsigned __int8 *)((unint64_t)&a1[v135] & ~v142);
      if (v17 > 3) {
        goto LABEL_214;
      }
      unsigned int v105 = ((1 << (8 * v17)) | 2u) >> (8 * v17);
      if (HIWORD(v105))
      {
        unsigned int v104 = *(_DWORD *)&v103[v17];
      }
      else if ((v105 | 0x10) <= 0xFF)
      {
LABEL_214:
        unsigned int v104 = v103[v17];
      }
      else
      {
        unsigned int v104 = *(unsigned __int16 *)&v103[v17];
      }
      unsigned int v106 = v104 - 16;
      if (v104 >= 0x10)
      {
        if (v17 <= 3) {
          uint64_t v107 = v17;
        }
        else {
          uint64_t v107 = 4;
        }
        switch(v107)
        {
          case 1:
            int v108 = *v103;
            goto LABEL_268;
          case 2:
            int v108 = *(unsigned __int16 *)v103;
            goto LABEL_268;
          case 3:
            int v108 = *(unsigned __int16 *)((unint64_t)&a1[v135] & ~v142) | (*(unsigned __int8 *)(((unint64_t)&a1[v135] & ~v142) + 2) << 16);
            goto LABEL_268;
          case 4:
            int v108 = *(_DWORD *)v103;
LABEL_268:
            if (v17 < 4) {
              unsigned int v104 = (v108 | (v106 << (8 * v17))) + 16;
            }
            else {
              unsigned int v104 = v108 + 16;
            }
            break;
          default:
            break;
        }
      }
      switch(v104)
      {
        case 8u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v131 + 8))(v103, v133);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v130 + 8))((v128 + ((unint64_t)&v103[v127] & 0xFFFFFFFFFFFFFFF8)) & ~v143, v132);
          goto LABEL_281;
        case 9u:
          goto LABEL_284;
        case 0xCu:
          goto LABEL_287;
        case 0xEu:
          goto LABEL_290;
        default:
          return;
      }
      return;
    case 9u:
      unsigned int v81 = a1[v140];
      unsigned int v82 = v81 - 2;
      if (v81 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v83 = v140;
        }
        else {
          uint64_t v83 = 4;
        }
        switch(v83)
        {
          case 1:
            int v84 = *a1;
            goto LABEL_228;
          case 2:
            int v84 = *(unsigned __int16 *)a1;
            goto LABEL_228;
          case 3:
            int v84 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_228;
          case 4:
            int v84 = *(_DWORD *)a1;
LABEL_228:
            if (v140 < 4) {
              unsigned int v81 = (v84 | (v82 << (8 * v140))) + 2;
            }
            else {
              unsigned int v81 = v84 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v109 = v32;
      uint64_t v110 = *(void *)(v28 - 8);
      uint64_t v111 = v28;
      if (v81 == 1) {
        uint64_t v112 = v138;
      }
      else {
        uint64_t v112 = v149;
      }
      if (v81 == 1) {
        uint64_t v113 = v137;
      }
      else {
        uint64_t v113 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v112 + 8))(a1, v113);
      int v103 = (unsigned __int8 *)((unint64_t)&a1[v147 + v30] & ~v30);
      if (v35 > 3) {
        goto LABEL_238;
      }
      unsigned int v115 = ((1 << v36) | 2u) >> v36;
      if (HIWORD(v115))
      {
        unsigned int v114 = *(_DWORD *)&v103[v35];
      }
      else if ((v115 | 0x10) <= 0xFF)
      {
LABEL_238:
        unsigned int v114 = v103[v35];
      }
      else
      {
        unsigned int v114 = *(unsigned __int16 *)&v103[v35];
      }
      unsigned int v116 = v114 - 16;
      if (v114 >= 0x10)
      {
        if (v35 <= 3) {
          uint64_t v117 = v35;
        }
        else {
          uint64_t v117 = 4;
        }
        switch(v117)
        {
          case 1:
            int v118 = *v103;
            goto LABEL_276;
          case 2:
            int v118 = *(unsigned __int16 *)v103;
            goto LABEL_276;
          case 3:
            int v118 = *(unsigned __int16 *)((unint64_t)&a1[v147 + v30] & ~v30) | (*(unsigned __int8 *)(((unint64_t)&a1[v147 + v30] & ~v30) + 2) << 16);
            goto LABEL_276;
          case 4:
            int v118 = *(_DWORD *)v103;
LABEL_276:
            if (v35 < 4) {
              unsigned int v114 = (v118 | (v116 << v36)) + 16;
            }
            else {
              unsigned int v114 = v118 + 16;
            }
            break;
          default:
            break;
        }
      }
      switch(v114)
      {
        case 8u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v125 + 8))(v103, v126);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v110 + 8))((v109 + ((unint64_t)&v103[v31] & 0xFFFFFFFFFFFFFFF8)) & v58, v111);
LABEL_281:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 9u:
LABEL_284:
          int v119 = *(void **)v103;

          break;
        case 0xCu:
LABEL_287:
          unsigned int v120 = *(void **)v103;
          unsigned int v121 = (void *)*((void *)v103 + 1);
          char v122 = v103[16];
          sub_24D3E380C(v120, v121, v122);
          break;
        case 0xEu:
LABEL_290:
          unint64_t v123 = *((void *)v103 + 2);
          if (v123 >> 60 != 11 && v123 >> 60 != 15)
          {
            uint64_t v124 = *((void *)v103 + 1);
            sub_24D400DCC(v124, v123);
          }
          break;
        default:
          return;
      }
      return;
    case 0xAu:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v85 = v140;
        }
        else {
          uint64_t v85 = 4;
        }
        switch(v85)
        {
          case 1:
            goto LABEL_152;
          case 2:
            goto LABEL_154;
          case 3:
            goto LABEL_156;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_158;
        }
      }
      goto LABEL_158;
    case 0xBu:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v86 = v140;
        }
        else {
          uint64_t v86 = 4;
        }
        switch(v86)
        {
          case 1:
            goto LABEL_152;
          case 2:
            goto LABEL_154;
          case 3:
            goto LABEL_156;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_158;
        }
      }
      goto LABEL_158;
    case 0xCu:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v87 = v140;
        }
        else {
          uint64_t v87 = 4;
        }
        switch(v87)
        {
          case 1:
            goto LABEL_152;
          case 2:
            goto LABEL_154;
          case 3:
            goto LABEL_156;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_158;
        }
      }
      goto LABEL_158;
    case 0xDu:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v88 = v140;
        }
        else {
          uint64_t v88 = 4;
        }
        switch(v88)
        {
          case 1:
            goto LABEL_152;
          case 2:
            goto LABEL_154;
          case 3:
            goto LABEL_156;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_158;
        }
      }
      goto LABEL_158;
    default:
      unsigned int v59 = v140;
      unsigned int v60 = a1[v140];
      unsigned int v61 = v60 - 2;
      if (v60 >= 2)
      {
        if (v140 <= 3) {
          uint64_t v62 = v140;
        }
        else {
          uint64_t v62 = 4;
        }
        switch(v62)
        {
          case 1:
LABEL_152:
            int v89 = *a1;
            if (v59 >= 4) {
              goto LABEL_161;
            }
            goto LABEL_157;
          case 2:
LABEL_154:
            int v89 = *(unsigned __int16 *)a1;
            if (v59 >= 4) {
              goto LABEL_161;
            }
            goto LABEL_157;
          case 3:
LABEL_156:
            int v89 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v59 < 4) {
              goto LABEL_157;
            }
            goto LABEL_161;
          case 4:
LABEL_160:
            int v89 = *(_DWORD *)a1;
            if (v59 < 4)
            {
LABEL_157:
              unsigned int v60 = (v89 | (v61 << (8 * v59))) + 2;
              break;
            }
LABEL_161:
            if (v89 != -1) {
              goto LABEL_162;
            }
            goto LABEL_159;
          default:
            break;
        }
      }
LABEL_158:
      if (v60 == 1)
      {
LABEL_159:
        uint64_t v90 = v137;
        unsigned int v91 = *(void (**)(unsigned __int8 *, uint64_t))(v138 + 8);
        unsigned int v63 = a1;
        goto LABEL_256;
      }
LABEL_162:
      unsigned int v91 = *(void (**)(unsigned __int8 *, uint64_t))(v149 + 8);
      unsigned int v63 = a1;
      goto LABEL_163;
  }
}

uint64_t sub_24D4CBF54(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= v3) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = *(void *)(v4 + 64);
  }
  unint64_t v7 = v6 + 1;
  uint64_t v415 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v8 = *(_DWORD *)(v4 + 80);
  uint64_t v9 = *(_DWORD *)(v4 + 80);
  uint64_t v398 = v3 + v9;
  uint64_t v399 = *(void *)(v4 + 64);
  uint64_t v406 = v9;
  unint64_t v10 = v5 + ((v3 + v9) & ~v9);
  unint64_t v422 = v6 + 2;
  if (v10 + 1 > v6 + 2) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v6 + 2;
  }
  if (v7 > v11) {
    unint64_t v11 = v6 + 1;
  }
  unint64_t v412 = v6;
  unint64_t v12 = v6 & 0xFFFFFFFFFFFFFFF8;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 16 > v11) {
    unint64_t v11 = (v6 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v416 = v2;
  uint64_t v13 = *(unsigned __int8 *)(v2 + 80) | v8;
  uint64_t v400 = v7 + v13;
  uint64_t v404 = v13;
  if (((v7 + v13) & ~v13) + v7 <= v11) {
    unint64_t v14 = v11;
  }
  else {
    unint64_t v14 = ((v7 + v13) & ~v13) + v7;
  }
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v391 = v16;
  uint64_t v392 = v15;
  int v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(unsigned __int8 *)(*(void *)(v18 - 8) + 80);
  uint64_t v20 = v17 | v19 | 7;
  unint64_t v421 = v7;
  uint64_t v21 = v7 + v20;
  unint64_t v22 = (v7 + v20) & ~v20;
  uint64_t v23 = *(void *)(v16 + 64) + 7;
  uint64_t v24 = *(void *)(*(void *)(v18 - 8) + 64) + 7;
  unint64_t v25 = (((v24 + ((v19 + 8 + (v23 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v25 + 18 <= 0x39) {
    uint64_t v26 = 57;
  }
  else {
    uint64_t v26 = v25 + 18;
  }
  uint64_t v393 = *(void *)(v18 - 8);
  uint64_t v394 = v18;
  uint64_t v389 = v19 + 8;
  uint64_t v390 = *(void *)(v393 + 64) + 7;
  uint64_t v388 = *(void *)(v16 + 64) + 7;
  uint64_t v397 = v21;
  unint64_t v408 = (((v24 + ((v19 + 8 + (v23 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v26 > 3) {
    goto LABEL_21;
  }
  unsigned int v27 = ((1 << (8 * v26)) | 2u) >> (8 * v26);
  unsigned int v28 = v27 | 0x10;
  BOOL v29 = HIWORD(v27) == 0;
  uint64_t v30 = 2;
  if (!v29) {
    uint64_t v30 = 4;
  }
  if (v28 <= 0xFF) {
LABEL_21:
  }
    uint64_t v30 = 1;
  unint64_t v419 = v14;
  unint64_t v420 = v26 + v22;
  unint64_t v31 = v26 + v22 + v30;
  if (v31 <= v14) {
    unint64_t v32 = v14;
  }
  else {
    unint64_t v32 = v31;
  }
  uint64_t v33 = swift_getAssociatedTypeWitness();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v395 = v34;
  uint64_t v396 = v33;
  int v35 = *(_DWORD *)(v34 + 80) & 0xF8;
  uint64_t v36 = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(unsigned __int8 *)(*(void *)(v36 - 8) + 80);
  uint64_t v38 = v35 | v37 | 7;
  unint64_t v39 = (v7 + v38) & ~v38;
  uint64_t v40 = *(void *)(v34 + 64) + 7;
  uint64_t v41 = v37 + 8;
  uint64_t v42 = *(void *)(*(void *)(v36 - 8) + 64) + 7;
  unint64_t v43 = (((v42 + ((v37 + 8 + (v40 & 0xFFFFFFFFFFFFFFF8)) & ~v37)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v43 + 18 <= 0x39) {
    uint64_t v44 = 57;
  }
  else {
    uint64_t v44 = v43 + 18;
  }
  if (v44 <= 3) {
    unsigned int v45 = (((1 << (8 * v44)) | 2u) >> (8 * v44)) | 0x10;
  }
  else {
    unsigned int v45 = 17;
  }
  unint64_t v46 = v12 + 17;
  unint64_t v47 = v12 + 24;
  unint64_t v48 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v49 = 4;
  if (v45 < 0x10000) {
    uint64_t v49 = 2;
  }
  if (v45 < 0x100) {
    uint64_t v50 = 1;
  }
  else {
    uint64_t v50 = v49;
  }
  unint64_t v51 = v44 + v39;
  unint64_t v52 = v44 + v39 + v50;
  if (v52 <= v32) {
    unint64_t v52 = v32;
  }
  if (v46 > v52) {
    unint64_t v52 = v12 + 17;
  }
  if (v47 > v52) {
    unint64_t v52 = v12 + 24;
  }
  if (v422 > v52) {
    unint64_t v52 = v422;
  }
  if (v48 > v52) {
    unint64_t v52 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v53 = a2[v52];
  unsigned int v54 = v53 - 14;
  unint64_t v401 = v12 + 24;
  unint64_t v402 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v418 = v26;
  if (v53 < 0xE)
  {
    uint64_t v60 = v404;
    uint64_t v59 = v406;
    uint64_t v61 = v17 | v19 | 7;
    unint64_t v55 = v408;
  }
  else
  {
    unint64_t v55 = v408;
    if (v26 > 3) {
      goto LABEL_51;
    }
    unsigned int v56 = ((1 << (8 * v26)) | 2u) >> (8 * v26);
    unsigned int v57 = v56 | 0x10;
    BOOL v29 = HIWORD(v56) == 0;
    uint64_t v58 = 2;
    if (!v29) {
      uint64_t v58 = 4;
    }
    if (v57 <= 0xFF) {
LABEL_51:
    }
      uint64_t v58 = 1;
    uint64_t v60 = v404;
    uint64_t v59 = v406;
    uint64_t v61 = v17 | v19 | 7;
    unint64_t v62 = v420 + v58;
    if (v62 <= v419) {
      unint64_t v62 = v419;
    }
    if (v44 > 3) {
      goto LABEL_58;
    }
    unsigned int v63 = ((1 << (8 * v44)) | 2u) >> (8 * v44);
    unsigned int v64 = v63 | 0x10;
    BOOL v29 = HIWORD(v63) == 0;
    uint64_t v65 = 2;
    if (!v29) {
      uint64_t v65 = 4;
    }
    if (v64 <= 0xFF) {
LABEL_58:
    }
      uint64_t v65 = 1;
    unint64_t v66 = v51 + v65;
    if (v66 > v62) {
      unint64_t v62 = v66;
    }
    if (v46 > v62) {
      unint64_t v62 = v12 + 17;
    }
    if (v47 > v62) {
      unint64_t v62 = v12 + 24;
    }
    if (v422 > v62) {
      unint64_t v62 = v422;
    }
    if (v48 > v62) {
      LODWORD(v62) = ((v12 + 23) & 0xFFFFFFF8) + 8;
    }
    if (v62 <= 3) {
      uint64_t v67 = v62;
    }
    else {
      uint64_t v67 = 4;
    }
    switch(v67)
    {
      case 1:
        int v68 = *a2;
        if (v62 < 4) {
          goto LABEL_81;
        }
        goto LABEL_82;
      case 2:
        int v68 = *(unsigned __int16 *)a2;
        if (v62 >= 4) {
          goto LABEL_82;
        }
        goto LABEL_81;
      case 3:
        int v68 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v62 >= 4) {
          goto LABEL_82;
        }
        goto LABEL_81;
      case 4:
        int v68 = *(_DWORD *)a2;
        if (v62 < 4) {
LABEL_81:
        }
          v68 |= v54 << (8 * v62);
LABEL_82:
        unsigned int v53 = v68 + 14;
        break;
      default:
        break;
    }
  }
  uint64_t v410 = v44;
  char v403 = 8 * v44;
  unint64_t v405 = v51;
  unint64_t v407 = v12 + 17;
  uint64_t v69 = ~v59;
  uint64_t v70 = ~v60;
  uint64_t v71 = ~v61;
  uint64_t v72 = ~v19;
  unint64_t v73 = v55 + 16;
  uint64_t v74 = ~v38;
  uint64_t v75 = ~v37;
  unint64_t v76 = v43 + 16;
  switch(v53)
  {
    case 1u:
      uint64_t v81 = a1;
      (*(void (**)(uint64_t))(v416 + 16))(a1);
      uint64_t v92 = (v398 + a1) & v69;
      unint64_t v93 = (unint64_t)&a2[v398] & v69;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v415 + 16))(v92, v93, AssociatedTypeWitness);
      *(unsigned char *)(v92 + v399) = *(unsigned char *)(v93 + v399);
      if (v418 > 3) {
        goto LABEL_100;
      }
      unsigned int v94 = ((1 << (8 * v418)) | 2u) >> (8 * v418);
      unsigned int v95 = v94 | 0x10;
      BOOL v29 = HIWORD(v94) == 0;
      uint64_t v96 = 2;
      if (!v29) {
        uint64_t v96 = 4;
      }
      if (v95 <= 0xFF) {
LABEL_100:
      }
        uint64_t v96 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v83 = v405;
      unint64_t v82 = v407;
      unint64_t v99 = v420 + v96;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v410 > 3) {
        goto LABEL_107;
      }
      char v100 = 1;
      unsigned int v101 = ((1 << v403) | 2u) >> v403;
      unsigned int v102 = v101 | 0x10;
      BOOL v29 = HIWORD(v101) == 0;
      uint64_t v103 = 2;
      if (!v29) {
        uint64_t v103 = 4;
      }
      if (v102 <= 0xFF)
      {
LABEL_107:
        uint64_t v103 = 1;
        char v100 = 1;
      }
      goto LABEL_750;
    case 2u:
      unsigned int v104 = a2[v412];
      unsigned int v105 = v104 - 2;
      if (v104 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v107 = v44;
        unsigned int v108 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v106 = v412;
        }
        else {
          uint64_t v106 = 4;
        }
        unsigned int v107 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v108 = v418;
        switch(v106)
        {
          case 1:
            int v109 = *a2;
            goto LABEL_232;
          case 2:
            int v109 = *(unsigned __int16 *)a2;
            goto LABEL_232;
          case 3:
            int v109 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_232;
          case 4:
            int v109 = *(_DWORD *)a2;
LABEL_232:
            if (v412 < 4) {
              unsigned int v104 = (v109 | (v105 << (8 * v412))) + 2;
            }
            else {
              unsigned int v104 = v109 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v183 = v104 == 1;
      uint64_t v184 = v416;
      if (v104 == 1) {
        uint64_t v184 = v415;
      }
      (*(void (**)(uint64_t))(v184 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v183;
      *(unsigned char *)(v421 + v81) = a2[v421];
      if (v108 > 3) {
        goto LABEL_241;
      }
      unsigned int v185 = ((1 << (8 * v108)) | 2u) >> (8 * v108);
      unsigned int v186 = v185 | 0x10;
      BOOL v29 = HIWORD(v185) == 0;
      uint64_t v187 = 2;
      if (!v29) {
        uint64_t v187 = 4;
      }
      if (v186 <= 0xFF) {
LABEL_241:
      }
        uint64_t v187 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v187;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v107 <= 3)
      {
        unsigned int v188 = ((1 << v403) | 2u) >> v403;
        unsigned int v189 = v188 | 0x10;
        BOOL v29 = HIWORD(v188) == 0;
        char v100 = 2;
        uint64_t v103 = 4;
        if (v29) {
          uint64_t v103 = 2;
        }
        if (v189 > 0xFF) {
          goto LABEL_750;
        }
      }
      char v100 = 2;
      goto LABEL_749;
    case 3u:
      unsigned int v110 = a2[v412];
      unsigned int v111 = v110 - 2;
      if (v110 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v113 = v44;
        unsigned int v114 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v112 = v412;
        }
        else {
          uint64_t v112 = 4;
        }
        unsigned int v113 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v114 = v418;
        switch(v112)
        {
          case 1:
            int v115 = *a2;
            goto LABEL_253;
          case 2:
            int v115 = *(unsigned __int16 *)a2;
            goto LABEL_253;
          case 3:
            int v115 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_253;
          case 4:
            int v115 = *(_DWORD *)a2;
LABEL_253:
            if (v412 < 4) {
              unsigned int v110 = (v115 | (v111 << (8 * v412))) + 2;
            }
            else {
              unsigned int v110 = v115 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v190 = v110 == 1;
      uint64_t v191 = v416;
      if (v110 == 1) {
        uint64_t v191 = v415;
      }
      (*(void (**)(uint64_t))(v191 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v190;
      if (v114 > 3) {
        goto LABEL_262;
      }
      unsigned int v192 = ((1 << (8 * v114)) | 2u) >> (8 * v114);
      unsigned int v193 = v192 | 0x10;
      BOOL v29 = HIWORD(v192) == 0;
      uint64_t v194 = 2;
      if (!v29) {
        uint64_t v194 = 4;
      }
      if (v193 <= 0xFF) {
LABEL_262:
      }
        uint64_t v194 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v194;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v113 <= 3)
      {
        unsigned int v195 = ((1 << v403) | 2u) >> v403;
        unsigned int v196 = v195 | 0x10;
        BOOL v29 = HIWORD(v195) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v196 > 0xFF)
        {
          char v100 = 3;
          goto LABEL_750;
        }
      }
      char v100 = 3;
      goto LABEL_749;
    case 4u:
      unsigned int v116 = a2[v412];
      unsigned int v117 = v116 - 2;
      if (v116 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v119 = v44;
        unsigned int v120 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v118 = v412;
        }
        else {
          uint64_t v118 = 4;
        }
        unsigned int v119 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v120 = v418;
        switch(v118)
        {
          case 1:
            int v121 = *a2;
            goto LABEL_274;
          case 2:
            int v121 = *(unsigned __int16 *)a2;
            goto LABEL_274;
          case 3:
            int v121 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_274;
          case 4:
            int v121 = *(_DWORD *)a2;
LABEL_274:
            if (v412 < 4) {
              unsigned int v116 = (v121 | (v117 << (8 * v412))) + 2;
            }
            else {
              unsigned int v116 = v121 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v197 = v116 == 1;
      uint64_t v198 = v416;
      if (v116 == 1) {
        uint64_t v198 = v415;
      }
      (*(void (**)(uint64_t))(v198 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v197;
      *(void *)((v81 + v421 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v421 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v120 > 3) {
        goto LABEL_283;
      }
      unsigned int v199 = ((1 << (8 * v120)) | 2u) >> (8 * v120);
      unsigned int v200 = v199 | 0x10;
      BOOL v29 = HIWORD(v199) == 0;
      uint64_t v201 = 2;
      if (!v29) {
        uint64_t v201 = 4;
      }
      if (v200 <= 0xFF) {
LABEL_283:
      }
        uint64_t v201 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v201;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v119 <= 3)
      {
        unsigned int v202 = ((1 << v403) | 2u) >> v403;
        unsigned int v203 = v202 | 0x10;
        BOOL v29 = HIWORD(v202) == 0;
        uint64_t v103 = 2;
        char v100 = 4;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v203 > 0xFF) {
          goto LABEL_750;
        }
      }
      char v100 = 4;
      goto LABEL_749;
    case 5u:
      unsigned int v122 = a2[v412];
      unsigned int v123 = v122 - 2;
      if (v122 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v125 = v44;
        unsigned int v126 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v124 = v412;
        }
        else {
          uint64_t v124 = 4;
        }
        unsigned int v125 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v126 = v418;
        switch(v124)
        {
          case 1:
            int v127 = *a2;
            goto LABEL_294;
          case 2:
            int v127 = *(unsigned __int16 *)a2;
            goto LABEL_294;
          case 3:
            int v127 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_294;
          case 4:
            int v127 = *(_DWORD *)a2;
LABEL_294:
            if (v412 < 4) {
              unsigned int v122 = (v127 | (v123 << (8 * v412))) + 2;
            }
            else {
              unsigned int v122 = v127 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v204 = v122 == 1;
      uint64_t v205 = v416;
      if (v122 == 1) {
        uint64_t v205 = v415;
      }
      (*(void (**)(uint64_t))(v205 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v204;
      *(void *)((v81 + v421 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v421 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v126 > 3) {
        goto LABEL_303;
      }
      unsigned int v206 = ((1 << (8 * v126)) | 2u) >> (8 * v126);
      unsigned int v207 = v206 | 0x10;
      BOOL v29 = HIWORD(v206) == 0;
      uint64_t v208 = 2;
      if (!v29) {
        uint64_t v208 = 4;
      }
      if (v207 <= 0xFF) {
LABEL_303:
      }
        uint64_t v208 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v208;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v125 <= 3)
      {
        unsigned int v209 = ((1 << v403) | 2u) >> v403;
        unsigned int v210 = v209 | 0x10;
        BOOL v29 = HIWORD(v209) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v210 > 0xFF)
        {
          char v100 = 5;
          goto LABEL_750;
        }
      }
      char v100 = 5;
      goto LABEL_749;
    case 6u:
      unsigned int v128 = a2[v412];
      unsigned int v129 = v128 - 2;
      if (v128 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unsigned int v131 = v44;
        unsigned int v132 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v130 = v412;
        }
        else {
          uint64_t v130 = 4;
        }
        unsigned int v131 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unsigned int v132 = v418;
        switch(v130)
        {
          case 1:
            int v133 = *a2;
            goto LABEL_315;
          case 2:
            int v133 = *(unsigned __int16 *)a2;
            goto LABEL_315;
          case 3:
            int v133 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_315;
          case 4:
            int v133 = *(_DWORD *)a2;
LABEL_315:
            if (v412 < 4) {
              unsigned int v128 = (v133 | (v129 << (8 * v412))) + 2;
            }
            else {
              unsigned int v128 = v133 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v211 = v128 == 1;
      uint64_t v212 = v416;
      if (v128 == 1) {
        uint64_t v212 = v415;
      }
      (*(void (**)(uint64_t))(v212 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v211;
      uint64_t v213 = (v400 + v81) & v70;
      unint64_t v214 = (unsigned __int8 *)((unint64_t)&a2[v400] & v70);
      unsigned int v215 = v214[v412];
      unsigned int v216 = v215 - 2;
      if (v215 < 2)
      {
        unint64_t v82 = v407;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v217 = v412;
        }
        else {
          uint64_t v217 = 4;
        }
        unint64_t v82 = v407;
        switch(v217)
        {
          case 1:
            int v218 = *v214;
            goto LABEL_449;
          case 2:
            int v218 = *(unsigned __int16 *)v214;
            goto LABEL_449;
          case 3:
            int v218 = *(unsigned __int16 *)v214 | (v214[2] << 16);
            goto LABEL_449;
          case 4:
            int v218 = *(_DWORD *)v214;
LABEL_449:
            if (v412 < 4) {
              unsigned int v215 = (v218 | (v216 << (8 * v412))) + 2;
            }
            else {
              unsigned int v215 = v218 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v272 = v215 == 1;
      uint64_t v273 = v416;
      if (v215 == 1) {
        uint64_t v273 = v415;
      }
      (*(void (**)(uint64_t))(v273 + 16))(v213);
      *(unsigned char *)(v213 + v412) = v272;
      if (v132 > 3) {
        goto LABEL_458;
      }
      unsigned int v274 = ((1 << (8 * v132)) | 2u) >> (8 * v132);
      unsigned int v275 = v274 | 0x10;
      BOOL v29 = HIWORD(v274) == 0;
      uint64_t v276 = 2;
      if (!v29) {
        uint64_t v276 = 4;
      }
      if (v275 <= 0xFF) {
LABEL_458:
      }
        uint64_t v276 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v276;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v131 <= 3)
      {
        unsigned int v277 = ((1 << v403) | 2u) >> v403;
        unsigned int v278 = v277 | 0x10;
        BOOL v29 = HIWORD(v277) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v278 > 0xFF)
        {
          char v100 = 6;
          goto LABEL_750;
        }
      }
      char v100 = 6;
      goto LABEL_749;
    case 7u:
      unsigned int v134 = a2[v412];
      unsigned int v135 = v134 - 2;
      if (v134 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unsigned int v137 = v44;
        unsigned int v138 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v136 = v412;
        }
        else {
          uint64_t v136 = 4;
        }
        unsigned int v137 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unsigned int v138 = v418;
        switch(v136)
        {
          case 1:
            int v139 = *a2;
            goto LABEL_330;
          case 2:
            int v139 = *(unsigned __int16 *)a2;
            goto LABEL_330;
          case 3:
            int v139 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_330;
          case 4:
            int v139 = *(_DWORD *)a2;
LABEL_330:
            if (v412 < 4) {
              unsigned int v134 = (v139 | (v135 << (8 * v412))) + 2;
            }
            else {
              unsigned int v134 = v139 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v219 = v134 == 1;
      uint64_t v220 = v416;
      if (v134 == 1) {
        uint64_t v220 = v415;
      }
      (*(void (**)(uint64_t))(v220 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v219;
      uint64_t v221 = (v400 + v81) & v70;
      unsigned int v222 = (unsigned __int8 *)((unint64_t)&a2[v400] & v70);
      unsigned int v223 = v222[v412];
      unsigned int v224 = v223 - 2;
      if (v223 < 2)
      {
        unint64_t v82 = v407;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v225 = v412;
        }
        else {
          uint64_t v225 = 4;
        }
        unint64_t v82 = v407;
        switch(v225)
        {
          case 1:
            int v226 = *v222;
            goto LABEL_470;
          case 2:
            int v226 = *(unsigned __int16 *)v222;
            goto LABEL_470;
          case 3:
            int v226 = *(unsigned __int16 *)v222 | (v222[2] << 16);
            goto LABEL_470;
          case 4:
            int v226 = *(_DWORD *)v222;
LABEL_470:
            if (v412 < 4) {
              unsigned int v223 = (v226 | (v224 << (8 * v412))) + 2;
            }
            else {
              unsigned int v223 = v226 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v279 = v223 == 1;
      uint64_t v280 = v416;
      if (v223 == 1) {
        uint64_t v280 = v415;
      }
      (*(void (**)(uint64_t))(v280 + 16))(v221);
      *(unsigned char *)(v221 + v412) = v279;
      if (v138 > 3) {
        goto LABEL_479;
      }
      unsigned int v281 = ((1 << (8 * v138)) | 2u) >> (8 * v138);
      unsigned int v282 = v281 | 0x10;
      BOOL v29 = HIWORD(v281) == 0;
      uint64_t v283 = 2;
      if (!v29) {
        uint64_t v283 = 4;
      }
      if (v282 <= 0xFF) {
LABEL_479:
      }
        uint64_t v283 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v283;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v137 <= 3)
      {
        unsigned int v284 = ((1 << v403) | 2u) >> v403;
        unsigned int v285 = v284 | 0x10;
        BOOL v29 = HIWORD(v284) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v285 > 0xFF)
        {
          char v100 = 7;
          goto LABEL_750;
        }
      }
      char v100 = 7;
      goto LABEL_749;
    case 8u:
      unsigned int v140 = a2[v412];
      unsigned int v141 = v140 - 2;
      if (v140 < 2)
      {
        unint64_t v144 = v73;
        uint64_t v145 = v418;
        uint64_t v143 = v397;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v142 = v412;
        }
        else {
          uint64_t v142 = 4;
        }
        uint64_t v143 = v397;
        unint64_t v144 = v73;
        uint64_t v145 = v418;
        switch(v142)
        {
          case 1:
            int v146 = *a2;
            goto LABEL_345;
          case 2:
            int v146 = *(unsigned __int16 *)a2;
            goto LABEL_345;
          case 3:
            int v146 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_345;
          case 4:
            int v146 = *(_DWORD *)a2;
LABEL_345:
            if (v412 < 4) {
              unsigned int v140 = (v146 | (v141 << (8 * v412))) + 2;
            }
            else {
              unsigned int v140 = v146 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v227 = v140 == 1;
      uint64_t v228 = v416;
      if (v140 == 1) {
        uint64_t v228 = v415;
      }
      (*(void (**)(uint64_t))(v228 + 16))(a1);
      *(unsigned char *)(a1 + v412) = v227;
      BOOL v229 = (unsigned __int8 *)((unint64_t)&a2[v143] & v71);
      if (v145 > 3) {
        goto LABEL_351;
      }
      unsigned int v231 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
      if (HIWORD(v231))
      {
        unsigned int v230 = *(_DWORD *)&v229[v145];
      }
      else if ((v231 | 0x10) <= 0xFF)
      {
LABEL_351:
        unsigned int v230 = v229[v145];
      }
      else
      {
        unsigned int v230 = *(unsigned __int16 *)&v229[v145];
      }
      unsigned int v232 = (unsigned __int8 *)((v143 + a1) & v71);
      unsigned int v233 = v230 - 16;
      if (v230 < 0x10)
      {
        unint64_t v83 = v405;
      }
      else
      {
        if (v145 <= 3) {
          uint64_t v234 = v145;
        }
        else {
          uint64_t v234 = 4;
        }
        unint64_t v83 = v405;
        switch(v234)
        {
          case 1:
            int v235 = *v229;
            goto LABEL_491;
          case 2:
            int v235 = *(unsigned __int16 *)v229;
            goto LABEL_491;
          case 3:
            int v235 = *(unsigned __int16 *)v229 | (v229[2] << 16);
            goto LABEL_491;
          case 4:
            int v235 = *(_DWORD *)v229;
LABEL_491:
            if (v145 < 4) {
              v235 |= v233 << (8 * v145);
            }
            unsigned int v230 = v235 + 16;
            break;
          default:
            break;
        }
      }
      switch(v230)
      {
        case 0u:
          long long v286 = *(_OWORD *)v229;
          *((void *)v232 + 2) = *((void *)v229 + 2);
          *(_OWORD *)unsigned int v232 = v286;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_498;
          }
          unsigned int v287 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v287 | 0x10;
          if (HIWORD(v287))
          {
            *(_DWORD *)&v232[v145] = 0;
          }
          else
          {
            if (v288 <= 0xFF)
            {
LABEL_498:
              v232[v145] = 0;
              goto LABEL_679;
            }
            *(_WORD *)&v232[v145] = 0;
          }
          goto LABEL_723;
        case 1u:
          *(void *)unsigned int v232 = *(void *)v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_513;
          }
          __int16 v292 = 1;
          unsigned int v293 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v293 | 0x10;
          if (HIWORD(v293))
          {
            *(_DWORD *)&v232[v145] = 1;
            goto LABEL_723;
          }
          if (v288 > 0xFF) {
            goto LABEL_722;
          }
LABEL_513:
          char v294 = 1;
          goto LABEL_678;
        case 2u:
          *(_OWORD *)unsigned int v232 = *(_OWORD *)v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_517;
          }
          unsigned int v295 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v295 | 0x10;
          if (HIWORD(v295))
          {
            *(_DWORD *)&v232[v145] = 2;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_517:
            char v294 = 2;
            goto LABEL_678;
          }
          __int16 v292 = 2;
          goto LABEL_722;
        case 3u:
          unsigned __int8 *v232 = *v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_521;
          }
          unsigned int v296 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v296 | 0x10;
          if (HIWORD(v296))
          {
            *(_DWORD *)&v232[v145] = 3;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_521:
            char v294 = 3;
            goto LABEL_678;
          }
          __int16 v292 = 3;
          goto LABEL_722;
        case 4u:
          unsigned __int8 *v232 = *v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_525;
          }
          unsigned int v297 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v297 | 0x10;
          if (HIWORD(v297))
          {
            *(_DWORD *)&v232[v145] = 4;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_525:
            char v294 = 4;
            goto LABEL_678;
          }
          __int16 v292 = 4;
          goto LABEL_722;
        case 5u:
          unsigned __int8 *v232 = *v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_529;
          }
          unsigned int v298 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v298 | 0x10;
          if (HIWORD(v298))
          {
            *(_DWORD *)&v232[v145] = 5;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_529:
            char v294 = 5;
            goto LABEL_678;
          }
          __int16 v292 = 5;
          goto LABEL_722;
        case 6u:
          unsigned __int8 *v232 = *v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_533;
          }
          unsigned int v299 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v299 | 0x10;
          if (HIWORD(v299))
          {
            *(_DWORD *)&v232[v145] = 6;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_533:
            char v294 = 6;
            goto LABEL_678;
          }
          __int16 v292 = 6;
          goto LABEL_722;
        case 7u:
          unsigned __int8 *v232 = *v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_537;
          }
          unsigned int v300 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v300 | 0x10;
          if (HIWORD(v300))
          {
            *(_DWORD *)&v232[v145] = 7;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_537:
            char v294 = 7;
            goto LABEL_678;
          }
          __int16 v292 = 7;
          goto LABEL_722;
        case 8u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v391 + 16))(v232, v229, v392);
          unint64_t v351 = (void *)((unint64_t)&v232[v388] & 0xFFFFFFFFFFFFFFF8);
          unsigned int v352 = (void *)((unint64_t)&v229[v388] & 0xFFFFFFFFFFFFFFF8);
          void *v351 = *v352;
          unint64_t v353 = ((unint64_t)v351 + v389) & v72;
          unint64_t v354 = ((unint64_t)v352 + v389) & v72;
          unint64_t v355 = *(void (**)(unint64_t, unint64_t, uint64_t))(v393 + 16);
          swift_bridgeObjectRetain();
          v355(v353, v354, v394);
          unint64_t v356 = (void *)((v390 + v353) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v357 = (void *)((v390 + v354) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v356 = *v357;
          unint64_t v358 = (void *)(((unint64_t)v356 + 15) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v359 = (void *)(((unint64_t)v357 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v358 = *v359;
          v358[1] = v359[1];
          v232[v144] = v229[v144];
          *(unsigned char *)((unint64_t)&v232[v144] | 1) = *(unsigned char *)((unint64_t)&v229[v144] | 1);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_631;
          }
          unsigned int v360 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v360 | 0x10;
          if (HIWORD(v360))
          {
            *(_DWORD *)&v232[v145] = 8;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_631:
            char v294 = 8;
            goto LABEL_678;
          }
          __int16 v292 = 8;
          goto LABEL_722;
        case 9u:
          unsigned int v301 = *(void **)v229;
          *(void *)unsigned int v232 = *(void *)v229;
          id v302 = v301;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_541;
          }
          unsigned int v303 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v303 | 0x10;
          if (HIWORD(v303))
          {
            *(_DWORD *)&v232[v145] = 9;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_541:
            char v294 = 9;
            goto LABEL_678;
          }
          __int16 v292 = 9;
          goto LABEL_722;
        case 0xAu:
          unsigned __int8 *v232 = *v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_545;
          }
          unsigned int v304 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v304 | 0x10;
          if (HIWORD(v304))
          {
            *(_DWORD *)&v232[v145] = 10;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_545:
            char v294 = 10;
            goto LABEL_678;
          }
          __int16 v292 = 10;
          goto LABEL_722;
        case 0xBu:
          *(_WORD *)unsigned int v232 = *(_WORD *)v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_549;
          }
          unsigned int v305 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v305 | 0x10;
          if (HIWORD(v305))
          {
            *(_DWORD *)&v232[v145] = 11;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_549:
            char v294 = 11;
            goto LABEL_678;
          }
          __int16 v292 = 11;
          goto LABEL_722;
        case 0xCu:
          uint64_t v306 = *(void **)v229;
          unint64_t v307 = (void *)*((void *)v229 + 1);
          char v308 = v229[16];
          sub_24D3F1C98(v306, v307, v308);
          *(void *)unsigned int v232 = v306;
          *((void *)v232 + 1) = v307;
          v232[16] = v308;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_553;
          }
          unsigned int v309 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v309 | 0x10;
          if (HIWORD(v309))
          {
            *(_DWORD *)&v232[v145] = 12;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_553:
            char v294 = 12;
            goto LABEL_678;
          }
          __int16 v292 = 12;
          goto LABEL_722;
        case 0xDu:
          long long v310 = *(_OWORD *)v229;
          *((void *)v232 + 2) = *((void *)v229 + 2);
          *(_OWORD *)unsigned int v232 = v310;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_557;
          }
          unsigned int v311 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v311 | 0x10;
          if (HIWORD(v311))
          {
            *(_DWORD *)&v232[v145] = 13;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_557:
            char v294 = 13;
            goto LABEL_678;
          }
          __int16 v292 = 13;
          goto LABEL_722;
        case 0xEu:
          if (*((void *)v229 + 2) >> 60 == 11)
          {
            long long v312 = *(_OWORD *)v229;
            long long v313 = *((_OWORD *)v229 + 1);
            long long v314 = *((_OWORD *)v229 + 2);
            *((void *)v232 + 6) = *((void *)v229 + 6);
            *((_OWORD *)v232 + 1) = v313;
            *((_OWORD *)v232 + 2) = v314;
            *(_OWORD *)unsigned int v232 = v312;
            uint64_t v81 = a1;
            unint64_t v98 = v401;
            unint64_t v97 = v402;
          }
          else
          {
            *(void *)unsigned int v232 = *(void *)v229;
            unsigned int v364 = (uint64_t *)(v229 + 8);
            unint64_t v365 = *((void *)v229 + 2);
            uint64_t v81 = a1;
            if (v365 >> 60 == 15)
            {
              *(_OWORD *)(v232 + 8) = *(_OWORD *)v364;
            }
            else
            {
              uint64_t v368 = *v364;
              sub_24D3F9C18(*v364, *((void *)v229 + 2));
              *((void *)v232 + 1) = v368;
              *((void *)v232 + 2) = v365;
            }
            unint64_t v98 = v401;
            unint64_t v97 = v402;
            long long v369 = *(_OWORD *)(v229 + 24);
            v232[40] = v229[40];
            *(_OWORD *)(v232 + 24) = v369;
            *((void *)v232 + 6) = *((void *)v229 + 6);
          }
          v232[56] = v229[56];
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_677;
          }
          unsigned int v370 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v370 | 0x10;
          if (HIWORD(v370))
          {
            *(_DWORD *)&v232[v145] = 14;
            goto LABEL_723;
          }
          if (v288 <= 0xFF)
          {
LABEL_677:
            char v294 = 14;
            goto LABEL_678;
          }
          __int16 v292 = 14;
          goto LABEL_722;
        case 0xFu:
          unsigned __int8 *v232 = *v229;
          uint64_t v81 = a1;
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          if (v145 > 3) {
            goto LABEL_563;
          }
          unsigned int v315 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v288 = v315 | 0x10;
          if (HIWORD(v315))
          {
            *(_DWORD *)&v232[v145] = 15;
          }
          else
          {
            if (v288 <= 0xFF)
            {
LABEL_563:
              char v294 = 15;
LABEL_678:
              v232[v145] = v294;
LABEL_679:
              unsigned int v371 = v410;
              if (v145 > 3) {
                goto LABEL_683;
              }
              unsigned int v372 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
              unsigned int v373 = v372 | 0x10;
              BOOL v29 = HIWORD(v372) == 0;
              uint64_t v374 = 2;
              if (!v29) {
                uint64_t v374 = 4;
              }
              if (v373 <= 0xFF) {
LABEL_683:
              }
                uint64_t v374 = 1;
LABEL_726:
              unint64_t v99 = v420 + v374;
              if (v99 <= v419) {
                unint64_t v99 = v419;
              }
              if (v371 <= 3)
              {
                unsigned int v379 = ((1 << v403) | 2u) >> v403;
                unsigned int v380 = v379 | 0x10;
                BOOL v29 = HIWORD(v379) == 0;
                uint64_t v103 = 2;
                if (!v29) {
                  uint64_t v103 = 4;
                }
                if (v380 > 0xFF)
                {
                  char v100 = 8;
                  goto LABEL_750;
                }
              }
              char v100 = 8;
              goto LABEL_749;
            }
            __int16 v292 = 15;
LABEL_722:
            *(_WORD *)&v232[v145] = v292;
          }
LABEL_723:
          BOOL v29 = HIWORD(v288) == 0;
          uint64_t v374 = 2;
          if (!v29) {
            uint64_t v374 = 4;
          }
          unsigned int v371 = v410;
          goto LABEL_726;
        default:
          if (v145 > 3) {
            goto LABEL_626;
          }
          unsigned int v348 = ((1 << (8 * v145)) | 2u) >> (8 * v145);
          unsigned int v349 = v348 | 0x10;
          BOOL v29 = HIWORD(v348) == 0;
          uint64_t v350 = 2;
          if (!v29) {
            uint64_t v350 = 4;
          }
          if (v349 <= 0xFF) {
LABEL_626:
          }
            uint64_t v350 = 1;
          uint64_t v81 = a1;
          memcpy(v232, v229, v350 + v145);
          unint64_t v98 = v401;
          unint64_t v97 = v402;
          unint64_t v82 = v407;
          goto LABEL_679;
      }
    case 9u:
      unint64_t v409 = v76;
      unsigned int v147 = a2[v412];
      unsigned int v148 = v147 - 2;
      if (v147 < 2)
      {
        uint64_t v81 = a1;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v149 = v412;
        }
        else {
          uint64_t v149 = 4;
        }
        uint64_t v81 = a1;
        switch(v149)
        {
          case 1:
            int v150 = *a2;
            goto LABEL_366;
          case 2:
            int v150 = *(unsigned __int16 *)a2;
            goto LABEL_366;
          case 3:
            int v150 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_366;
          case 4:
            int v150 = *(_DWORD *)a2;
LABEL_366:
            if (v412 < 4) {
              unsigned int v147 = (v150 | (v148 << (8 * v412))) + 2;
            }
            else {
              unsigned int v147 = v150 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v236 = *(void *)(v36 - 8);
      uint64_t v414 = v36;
      BOOL v237 = v147 == 1;
      uint64_t v238 = v416;
      if (v147 == 1) {
        uint64_t v238 = v415;
      }
      (*(void (**)(uint64_t))(v238 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v237;
      unint64_t v239 = (unsigned __int8 *)((unint64_t)&a2[v421 + v38] & v74);
      if (v410 > 3) {
        goto LABEL_372;
      }
      unsigned int v241 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v241))
      {
        unsigned int v240 = *(_DWORD *)&v239[v410];
      }
      else if ((v241 | 0x10) <= 0xFF)
      {
LABEL_372:
        unsigned int v240 = v239[v410];
      }
      else
      {
        unsigned int v240 = *(unsigned __int16 *)&v239[v410];
      }
      unsigned int v242 = (unsigned __int8 *)((v421 + v81 + v38) & v74);
      unsigned int v243 = v240 - 16;
      if (v240 >= 0x10)
      {
        if (v410 <= 3) {
          uint64_t v244 = v410;
        }
        else {
          uint64_t v244 = 4;
        }
        switch(v244)
        {
          case 1:
            int v245 = *v239;
            goto LABEL_502;
          case 2:
            int v245 = *(unsigned __int16 *)v239;
            goto LABEL_502;
          case 3:
            int v245 = *(unsigned __int16 *)v239 | (v239[2] << 16);
            goto LABEL_502;
          case 4:
            int v245 = *(_DWORD *)v239;
LABEL_502:
            if (v410 < 4) {
              v245 |= v243 << v403;
            }
            unsigned int v240 = v245 + 16;
            break;
          default:
            goto LABEL_505;
        }
      }
      break;
    case 0xAu:
      unsigned int v151 = a2[v412];
      unsigned int v152 = v151 - 2;
      if (v151 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v154 = v44;
        unsigned int v155 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v153 = v412;
        }
        else {
          uint64_t v153 = 4;
        }
        unsigned int v154 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v155 = v418;
        switch(v153)
        {
          case 1:
            int v156 = *a2;
            goto LABEL_386;
          case 2:
            int v156 = *(unsigned __int16 *)a2;
            goto LABEL_386;
          case 3:
            int v156 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_386;
          case 4:
            int v156 = *(_DWORD *)a2;
LABEL_386:
            if (v412 < 4) {
              unsigned int v151 = (v156 | (v152 << (8 * v412))) + 2;
            }
            else {
              unsigned int v151 = v156 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v246 = v151 == 1;
      uint64_t v247 = v416;
      if (v151 == 1) {
        uint64_t v247 = v415;
      }
      (*(void (**)(uint64_t))(v247 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v246;
      unint64_t v248 = (unint64_t)&a2[v421 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v249 = *(unsigned char *)(v248 + 8);
      unint64_t v250 = (v81 + v421 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v250 = *(void *)v248;
      *(unsigned char *)(v250 + 8) = v249;
      if (v155 > 3) {
        goto LABEL_395;
      }
      unsigned int v251 = ((1 << (8 * v155)) | 2u) >> (8 * v155);
      unsigned int v252 = v251 | 0x10;
      BOOL v29 = HIWORD(v251) == 0;
      uint64_t v253 = 2;
      if (!v29) {
        uint64_t v253 = 4;
      }
      if (v252 <= 0xFF) {
LABEL_395:
      }
        uint64_t v253 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v253;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v154 <= 3)
      {
        unsigned int v254 = ((1 << v403) | 2u) >> v403;
        unsigned int v255 = v254 | 0x10;
        BOOL v29 = HIWORD(v254) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v255 > 0xFF)
        {
          char v100 = 10;
          goto LABEL_750;
        }
      }
      char v100 = 10;
      goto LABEL_749;
    case 0xBu:
      unsigned int v86 = a2[v412];
      unsigned int v87 = v86 - 2;
      if (v86 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v89 = v44;
        unsigned int v90 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v88 = v412;
        }
        else {
          uint64_t v88 = 4;
        }
        unsigned int v89 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v90 = v418;
        switch(v88)
        {
          case 1:
            int v91 = *a2;
            goto LABEL_211;
          case 2:
            int v91 = *(unsigned __int16 *)a2;
            goto LABEL_211;
          case 3:
            int v91 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_211;
          case 4:
            int v91 = *(_DWORD *)a2;
LABEL_211:
            if (v412 < 4) {
              unsigned int v86 = (v91 | (v87 << (8 * v412))) + 2;
            }
            else {
              unsigned int v86 = v91 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v176 = v86 == 1;
      uint64_t v177 = v416;
      if (v86 == 1) {
        uint64_t v177 = v415;
      }
      (*(void (**)(uint64_t))(v177 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v176;
      *(_OWORD *)((v81 + v421 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v421 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v90 > 3) {
        goto LABEL_220;
      }
      unsigned int v178 = ((1 << (8 * v90)) | 2u) >> (8 * v90);
      unsigned int v179 = v178 | 0x10;
      BOOL v29 = HIWORD(v178) == 0;
      uint64_t v180 = 2;
      if (!v29) {
        uint64_t v180 = 4;
      }
      if (v179 <= 0xFF) {
LABEL_220:
      }
        uint64_t v180 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v180;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v89 <= 3)
      {
        unsigned int v181 = ((1 << v403) | 2u) >> v403;
        unsigned int v182 = v181 | 0x10;
        BOOL v29 = HIWORD(v181) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v182 > 0xFF)
        {
          char v100 = 11;
          goto LABEL_750;
        }
      }
      char v100 = 11;
      goto LABEL_749;
    case 0xCu:
      unsigned int v157 = a2[v412];
      unsigned int v158 = v157 - 2;
      if (v157 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v160 = v44;
        unsigned int v161 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v159 = v412;
        }
        else {
          uint64_t v159 = 4;
        }
        unsigned int v160 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v161 = v418;
        switch(v159)
        {
          case 1:
            int v162 = *a2;
            goto LABEL_407;
          case 2:
            int v162 = *(unsigned __int16 *)a2;
            goto LABEL_407;
          case 3:
            int v162 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_407;
          case 4:
            int v162 = *(_DWORD *)a2;
LABEL_407:
            if (v412 < 4) {
              unsigned int v157 = (v162 | (v158 << (8 * v412))) + 2;
            }
            else {
              unsigned int v157 = v162 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v256 = v157 == 1;
      uint64_t v257 = v416;
      if (v157 == 1) {
        uint64_t v257 = v415;
      }
      (*(void (**)(uint64_t))(v257 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v256;
      *(unsigned char *)(v421 + v81) = a2[v421];
      if (v161 > 3) {
        goto LABEL_416;
      }
      unsigned int v258 = ((1 << (8 * v161)) | 2u) >> (8 * v161);
      unsigned int v259 = v258 | 0x10;
      BOOL v29 = HIWORD(v258) == 0;
      uint64_t v260 = 2;
      if (!v29) {
        uint64_t v260 = 4;
      }
      if (v259 <= 0xFF) {
LABEL_416:
      }
        uint64_t v260 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v260;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v160 <= 3)
      {
        unsigned int v261 = ((1 << v403) | 2u) >> v403;
        unsigned int v262 = v261 | 0x10;
        BOOL v29 = HIWORD(v261) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v262 > 0xFF)
        {
          char v100 = 12;
          goto LABEL_750;
        }
      }
      char v100 = 12;
      goto LABEL_749;
    case 0xDu:
      unsigned int v163 = a2[v412];
      unsigned int v164 = v163 - 2;
      if (v163 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v166 = v44;
        unsigned int v167 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v165 = v412;
        }
        else {
          uint64_t v165 = 4;
        }
        unsigned int v166 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v167 = v418;
        switch(v165)
        {
          case 1:
            int v168 = *a2;
            goto LABEL_428;
          case 2:
            int v168 = *(unsigned __int16 *)a2;
            goto LABEL_428;
          case 3:
            int v168 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_428;
          case 4:
            int v168 = *(_DWORD *)a2;
LABEL_428:
            if (v412 < 4) {
              unsigned int v163 = (v168 | (v164 << (8 * v412))) + 2;
            }
            else {
              unsigned int v163 = v168 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v263 = v163 == 1;
      uint64_t v264 = v416;
      if (v163 == 1) {
        uint64_t v264 = v415;
      }
      (*(void (**)(uint64_t))(v264 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v263;
      uint64_t v265 = (void *)((v81 + v421 + 7) & 0xFFFFFFFFFFFFFFF8);
      int v266 = (void *)((unint64_t)&a2[v421 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v265 = *v266;
      *(void *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v266 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v167 > 3) {
        goto LABEL_437;
      }
      unsigned int v267 = ((1 << (8 * v167)) | 2u) >> (8 * v167);
      unsigned int v268 = v267 | 0x10;
      BOOL v29 = HIWORD(v267) == 0;
      uint64_t v269 = 2;
      if (!v29) {
        uint64_t v269 = 4;
      }
      if (v268 <= 0xFF) {
LABEL_437:
      }
        uint64_t v269 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v269;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v166 <= 3)
      {
        unsigned int v270 = ((1 << v403) | 2u) >> v403;
        unsigned int v271 = v270 | 0x10;
        BOOL v29 = HIWORD(v270) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v271 > 0xFF)
        {
          char v100 = 13;
          goto LABEL_750;
        }
      }
      char v100 = 13;
      goto LABEL_749;
    default:
      unsigned int v77 = a2[v412];
      unsigned int v78 = v77 - 2;
      if (v77 < 2)
      {
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v80 = v44;
        unsigned int v84 = v418;
      }
      else
      {
        if (v412 <= 3) {
          uint64_t v79 = v412;
        }
        else {
          uint64_t v79 = 4;
        }
        unsigned int v80 = v44;
        uint64_t v81 = a1;
        unint64_t v83 = v51;
        unint64_t v82 = v407;
        unsigned int v84 = v418;
        switch(v79)
        {
          case 1:
            int v85 = *a2;
            goto LABEL_190;
          case 2:
            int v85 = *(unsigned __int16 *)a2;
            goto LABEL_190;
          case 3:
            int v85 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_190;
          case 4:
            int v85 = *(_DWORD *)a2;
LABEL_190:
            if (v412 < 4) {
              unsigned int v77 = (v85 | (v78 << (8 * v412))) + 2;
            }
            else {
              unsigned int v77 = v85 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v169 = v77 == 1;
      uint64_t v170 = v416;
      if (v77 == 1) {
        uint64_t v170 = v415;
      }
      (*(void (**)(uint64_t))(v170 + 16))(v81);
      *(unsigned char *)(v81 + v412) = v169;
      *(unsigned char *)(v421 + v81) = a2[v421];
      if (v84 > 3) {
        goto LABEL_199;
      }
      unsigned int v171 = ((1 << (8 * v84)) | 2u) >> (8 * v84);
      unsigned int v172 = v171 | 0x10;
      BOOL v29 = HIWORD(v171) == 0;
      uint64_t v173 = 2;
      if (!v29) {
        uint64_t v173 = 4;
      }
      if (v172 <= 0xFF) {
LABEL_199:
      }
        uint64_t v173 = 1;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v99 = v420 + v173;
      if (v99 <= v419) {
        unint64_t v99 = v419;
      }
      if (v80 <= 3)
      {
        unsigned int v174 = ((1 << v403) | 2u) >> v403;
        unsigned int v175 = v174 | 0x10;
        BOOL v29 = HIWORD(v174) == 0;
        uint64_t v103 = 2;
        if (!v29) {
          uint64_t v103 = 4;
        }
        if (v175 > 0xFF)
        {
          char v100 = 0;
          goto LABEL_750;
        }
      }
      char v100 = 0;
      goto LABEL_749;
  }
LABEL_505:
  switch(v240)
  {
    case 0u:
      long long v289 = *(_OWORD *)v239;
      *((void *)v242 + 2) = *((void *)v239 + 2);
      *(_OWORD *)unsigned int v242 = v289;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_509;
      }
      unsigned int v291 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v291))
      {
        *(_DWORD *)&v242[v410] = 0;
      }
      else if ((v291 | 0x10) > 0xFF)
      {
        *(_WORD *)&v242[v410] = 0;
      }
      else
      {
LABEL_509:
        v242[v410] = 0;
      }
      break;
    case 1u:
      *(void *)unsigned int v242 = *(void *)v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_567;
      }
      unsigned int v316 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v316))
      {
        *(_DWORD *)&v242[v410] = 1;
      }
      else
      {
        if ((v316 | 0x10) > 0xFF)
        {
          __int16 v378 = 1;
          goto LABEL_735;
        }
LABEL_567:
        v242[v410] = 1;
      }
      break;
    case 2u:
      *(_OWORD *)unsigned int v242 = *(_OWORD *)v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_571;
      }
      unsigned int v317 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v317))
      {
        *(_DWORD *)&v242[v410] = 2;
      }
      else
      {
        if ((v317 | 0x10) > 0xFF)
        {
          __int16 v378 = 2;
          goto LABEL_735;
        }
LABEL_571:
        v242[v410] = 2;
      }
      break;
    case 3u:
      unsigned __int8 *v242 = *v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_575;
      }
      unsigned int v318 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v318))
      {
        *(_DWORD *)&v242[v410] = 3;
      }
      else
      {
        if ((v318 | 0x10) > 0xFF)
        {
          __int16 v378 = 3;
          goto LABEL_735;
        }
LABEL_575:
        v242[v410] = 3;
      }
      break;
    case 4u:
      unsigned __int8 *v242 = *v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_579;
      }
      unsigned int v319 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v319))
      {
        *(_DWORD *)&v242[v410] = 4;
      }
      else
      {
        if ((v319 | 0x10) > 0xFF)
        {
          __int16 v378 = 4;
          goto LABEL_735;
        }
LABEL_579:
        v242[v410] = 4;
      }
      break;
    case 5u:
      unsigned __int8 *v242 = *v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_583;
      }
      unsigned int v320 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v320))
      {
        *(_DWORD *)&v242[v410] = 5;
      }
      else
      {
        if ((v320 | 0x10) > 0xFF)
        {
          __int16 v378 = 5;
          goto LABEL_735;
        }
LABEL_583:
        v242[v410] = 5;
      }
      break;
    case 6u:
      unsigned __int8 *v242 = *v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_587;
      }
      unsigned int v321 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v321))
      {
        *(_DWORD *)&v242[v410] = 6;
      }
      else
      {
        if ((v321 | 0x10) > 0xFF)
        {
          __int16 v378 = 6;
          goto LABEL_735;
        }
LABEL_587:
        v242[v410] = 6;
      }
      break;
    case 7u:
      unsigned __int8 *v242 = *v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_591;
      }
      unsigned int v322 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v322))
      {
        *(_DWORD *)&v242[v410] = 7;
      }
      else
      {
        if ((v322 | 0x10) > 0xFF)
        {
          __int16 v378 = 7;
          goto LABEL_735;
        }
LABEL_591:
        v242[v410] = 7;
      }
      break;
    case 8u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v395 + 16))(v242, v239, v396);
      uint64_t v323 = (void *)((unint64_t)&v242[v40] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v324 = (void *)((unint64_t)&v239[v40] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v323 = *v324;
      unint64_t v325 = ((unint64_t)v323 + v41) & v75;
      unint64_t v326 = ((unint64_t)v324 + v41) & v75;
      uint64_t v327 = *(void (**)(unint64_t, unint64_t, uint64_t))(v236 + 16);
      swift_bridgeObjectRetain();
      v327(v325, v326, v414);
      unint64_t v328 = (void *)((v42 + v325) & 0xFFFFFFFFFFFFFFF8);
      BOOL v329 = (void *)((v42 + v326) & 0xFFFFFFFFFFFFFFF8);
      void *v328 = *v329;
      uint64_t v330 = (void *)(((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v331 = (void *)(((unint64_t)v329 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v330 = *v331;
      v330[1] = v331[1];
      v242[v409] = v239[v409];
      *(unsigned char *)((unint64_t)&v242[v409] | 1) = *(unsigned char *)((unint64_t)&v239[v409] | 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_595;
      }
      unsigned int v332 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v332))
      {
        *(_DWORD *)&v242[v410] = 8;
      }
      else
      {
        if ((v332 | 0x10) > 0xFF)
        {
          __int16 v378 = 8;
          goto LABEL_735;
        }
LABEL_595:
        v242[v410] = 8;
      }
      break;
    case 9u:
      uint64_t v333 = *(void **)v239;
      *(void *)unsigned int v242 = *(void *)v239;
      id v334 = v333;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_599;
      }
      unsigned int v335 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v335))
      {
        *(_DWORD *)&v242[v410] = 9;
      }
      else
      {
        if ((v335 | 0x10) > 0xFF)
        {
          __int16 v378 = 9;
          goto LABEL_735;
        }
LABEL_599:
        v242[v410] = 9;
      }
      break;
    case 0xAu:
      unsigned __int8 *v242 = *v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_603;
      }
      unsigned int v336 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v336))
      {
        *(_DWORD *)&v242[v410] = 10;
      }
      else
      {
        if ((v336 | 0x10) > 0xFF)
        {
          __int16 v378 = 10;
          goto LABEL_735;
        }
LABEL_603:
        v242[v410] = 10;
      }
      break;
    case 0xBu:
      *(_WORD *)unsigned int v242 = *(_WORD *)v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_607;
      }
      unsigned int v337 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v337))
      {
        *(_DWORD *)&v242[v410] = 11;
      }
      else
      {
        if ((v337 | 0x10) > 0xFF)
        {
          __int16 v378 = 11;
          goto LABEL_735;
        }
LABEL_607:
        v242[v410] = 11;
      }
      break;
    case 0xCu:
      unint64_t v338 = *(void **)v239;
      BOOL v339 = (void *)*((void *)v239 + 1);
      char v340 = v239[16];
      sub_24D3F1C98(v338, v339, v340);
      *(void *)unsigned int v242 = v338;
      *((void *)v242 + 1) = v339;
      v242[16] = v340;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_611;
      }
      unsigned int v341 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v341))
      {
        *(_DWORD *)&v242[v410] = 12;
      }
      else
      {
        if ((v341 | 0x10) > 0xFF)
        {
          __int16 v378 = 12;
          goto LABEL_735;
        }
LABEL_611:
        v242[v410] = 12;
      }
      break;
    case 0xDu:
      long long v342 = *(_OWORD *)v239;
      *((void *)v242 + 2) = *((void *)v239 + 2);
      *(_OWORD *)unsigned int v242 = v342;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_615;
      }
      unsigned int v343 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v343))
      {
        *(_DWORD *)&v242[v410] = 13;
      }
      else
      {
        if ((v343 | 0x10) > 0xFF)
        {
          __int16 v378 = 13;
          goto LABEL_735;
        }
LABEL_615:
        v242[v410] = 13;
      }
      break;
    case 0xEu:
      if (*((void *)v239 + 2) >> 60 == 11)
      {
        long long v344 = *(_OWORD *)v239;
        long long v345 = *((_OWORD *)v239 + 1);
        long long v346 = *((_OWORD *)v239 + 2);
        *((void *)v242 + 6) = *((void *)v239 + 6);
        *((_OWORD *)v242 + 1) = v345;
        *((_OWORD *)v242 + 2) = v346;
        *(_OWORD *)unsigned int v242 = v344;
        unint64_t v98 = v401;
        unint64_t v97 = v402;
        unsigned int v290 = v418;
      }
      else
      {
        *(void *)unsigned int v242 = *(void *)v239;
        unsigned int v366 = (uint64_t *)(v239 + 8);
        unint64_t v367 = *((void *)v239 + 2);
        unsigned int v290 = v418;
        if (v367 >> 60 == 15)
        {
          *(_OWORD *)(v242 + 8) = *(_OWORD *)v366;
        }
        else
        {
          uint64_t v375 = *v366;
          sub_24D3F9C18(*v366, *((void *)v239 + 2));
          *((void *)v242 + 1) = v375;
          *((void *)v242 + 2) = v367;
        }
        unint64_t v98 = v401;
        unint64_t v97 = v402;
        long long v376 = *(_OWORD *)(v239 + 24);
        v242[40] = v239[40];
        *(_OWORD *)(v242 + 24) = v376;
        *((void *)v242 + 6) = *((void *)v239 + 6);
      }
      v242[56] = v239[56];
      unint64_t v82 = v407;
      if (v410 > 3) {
        goto LABEL_689;
      }
      unsigned int v377 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v377))
      {
        *(_DWORD *)&v242[v410] = 14;
      }
      else
      {
        if ((v377 | 0x10) > 0xFF)
        {
          __int16 v378 = 14;
          goto LABEL_735;
        }
LABEL_689:
        v242[v410] = 14;
      }
      break;
    case 0xFu:
      unsigned __int8 *v242 = *v239;
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      unsigned int v290 = v418;
      if (v410 > 3) {
        goto LABEL_621;
      }
      unsigned int v347 = ((1 << v403) | 2u) >> v403;
      if (HIWORD(v347))
      {
        *(_DWORD *)&v242[v410] = 15;
      }
      else
      {
        if ((v347 | 0x10) > 0xFF)
        {
          __int16 v378 = 15;
LABEL_735:
          *(_WORD *)&v242[v410] = v378;
          break;
        }
LABEL_621:
        v242[v410] = 15;
      }
      break;
    default:
      if (v410 > 3) {
        goto LABEL_636;
      }
      unsigned int v361 = ((1 << v403) | 2u) >> v403;
      unsigned int v362 = v361 | 0x10;
      BOOL v29 = HIWORD(v361) == 0;
      uint64_t v363 = 2;
      if (!v29) {
        uint64_t v363 = 4;
      }
      if (v362 <= 0xFF) {
LABEL_636:
      }
        uint64_t v363 = 1;
      unsigned int v290 = v418;
      memcpy(v242, v239, v363 + v410);
      unint64_t v98 = v401;
      unint64_t v97 = v402;
      unint64_t v82 = v407;
      break;
  }
  unint64_t v83 = v405;
  if (v290 > 3) {
    goto LABEL_740;
  }
  unsigned int v381 = ((1 << (8 * v290)) | 2u) >> (8 * v290);
  unsigned int v382 = v381 | 0x10;
  BOOL v29 = HIWORD(v381) == 0;
  uint64_t v383 = 2;
  if (!v29) {
    uint64_t v383 = 4;
  }
  if (v382 <= 0xFF) {
LABEL_740:
  }
    uint64_t v383 = 1;
  unint64_t v99 = v420 + v383;
  if (v99 <= v419) {
    unint64_t v99 = v419;
  }
  if (v410 <= 3)
  {
    unsigned int v384 = ((1 << v403) | 2u) >> v403;
    unsigned int v385 = v384 | 0x10;
    BOOL v29 = HIWORD(v384) == 0;
    uint64_t v103 = 2;
    if (!v29) {
      uint64_t v103 = 4;
    }
    if (v385 > 0xFF)
    {
      char v100 = 9;
      goto LABEL_750;
    }
  }
  char v100 = 9;
LABEL_749:
  uint64_t v103 = 1;
LABEL_750:
  unint64_t v386 = v83 + v103;
  if (v386 > v99) {
    unint64_t v99 = v386;
  }
  if (v82 > v99) {
    unint64_t v99 = v82;
  }
  if (v98 > v99) {
    unint64_t v99 = v98;
  }
  if (v422 > v99) {
    unint64_t v99 = v422;
  }
  if (v97 > v99) {
    unint64_t v99 = v97;
  }
  *(unsigned char *)(v81 + v99) = v100;
  return v81;
}

unsigned __int8 *sub_24D4CF174(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v482 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v482 - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= v4) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = *(void *)(v5 + 64);
  }
  unint64_t v8 = v7 + 1;
  uint64_t v480 = *(void *)(v482 - 8);
  unsigned int v9 = *(_DWORD *)(v5 + 80);
  uint64_t v10 = *(_DWORD *)(v5 + 80);
  uint64_t v464 = v4 + v10;
  uint64_t v472 = v10;
  uint64_t v463 = *(void *)(v5 + 64);
  unint64_t v11 = v6 + ((v4 + v10) & ~v10);
  unint64_t v475 = v7 + 2;
  if (v11 + 1 > v7 + 2) {
    unint64_t v12 = v11 + 1;
  }
  else {
    unint64_t v12 = v7 + 2;
  }
  if (v8 > v12) {
    unint64_t v12 = v7 + 1;
  }
  unint64_t v486 = v7;
  unint64_t v13 = v7 & 0xFFFFFFFFFFFFFFF8;
  if ((v7 & 0xFFFFFFFFFFFFFFF8) + 16 > v12) {
    unint64_t v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v481 = v3;
  uint64_t v14 = *(unsigned __int8 *)(v3 + 80) | v9;
  uint64_t v466 = v8 + v14;
  uint64_t v470 = v14;
  if (((v8 + v14) & ~v14) + v8 > v12) {
    unint64_t v12 = ((v8 + v14) & ~v14) + v8;
  }
  unint64_t v489 = v12;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v451 = v16;
  uint64_t v452 = v15;
  int v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v453 = *(void *)(v18 - 8);
  uint64_t v454 = v18;
  uint64_t v19 = *(unsigned __int8 *)(v453 + 80);
  uint64_t v20 = v17 | v19 | 7;
  unint64_t v478 = v8;
  uint64_t v465 = v8 + v20;
  uint64_t v448 = *(void *)(v16 + 64) + 7;
  uint64_t v449 = v19 + 8;
  uint64_t v450 = *(void *)(v453 + 64) + 7;
  unint64_t v21 = (((v450 + ((v19 + 8 + (v448 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v21 + 18 <= 0x39) {
    uint64_t v22 = 57;
  }
  else {
    uint64_t v22 = v21 + 18;
  }
  uint64_t v468 = v17 | v19 | 7;
  if (v22 > 3) {
    goto LABEL_21;
  }
  unsigned int v23 = ((1 << (8 * v22)) | 2u) >> (8 * v22);
  unsigned int v24 = v23 | 0x10;
  BOOL v25 = HIWORD(v23) == 0;
  uint64_t v26 = 2;
  if (!v25) {
    uint64_t v26 = 4;
  }
  if (v24 <= 0xFF) {
LABEL_21:
  }
    uint64_t v26 = 1;
  uint64_t v485 = v22 + ((v8 + v20) & ~v20);
  unint64_t v27 = v485 + v26;
  if (v27 <= v489) {
    unint64_t v28 = v489;
  }
  else {
    unint64_t v28 = v27;
  }
  uint64_t v29 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v459 = v30;
  uint64_t v460 = v29;
  int v31 = *(_DWORD *)(v30 + 80) & 0xF8;
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v33 = v30;
  uint64_t v461 = *(void *)(v32 - 8);
  uint64_t v462 = v32;
  uint64_t v34 = *(unsigned __int8 *)(v461 + 80);
  uint64_t v35 = v31 | v34 | 7;
  unint64_t v36 = (v8 + v35) & ~v35;
  uint64_t v456 = *(void *)(v33 + 64) + 7;
  uint64_t v457 = v34 + 8;
  uint64_t v458 = *(void *)(v461 + 64) + 7;
  unint64_t v37 = (((v458 + ((v34 + 8 + (v456 & 0xFFFFFFFFFFFFFFF8)) & ~v34)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v37 + 18 <= 0x39) {
    uint64_t v38 = 57;
  }
  else {
    uint64_t v38 = v37 + 18;
  }
  char v477 = 8 * v38;
  if (v38 <= 3) {
    unsigned int v39 = (((1 << (8 * v38)) | 2u) >> (8 * v38)) | 0x10;
  }
  else {
    unsigned int v39 = 17;
  }
  unint64_t v40 = v13 + 17;
  unint64_t v41 = v13 + 24;
  unint64_t v42 = ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v43 = 4;
  if (v39 < 0x10000) {
    uint64_t v43 = 2;
  }
  if (v39 < 0x100) {
    uint64_t v44 = 1;
  }
  else {
    uint64_t v44 = v43;
  }
  uint64_t v479 = v38;
  unint64_t v45 = v38 + v36;
  unint64_t v46 = v38 + v36 + v44;
  if (v46 <= v28) {
    unint64_t v46 = v28;
  }
  if (v40 > v46) {
    unint64_t v46 = v40;
  }
  if (v41 > v46) {
    unint64_t v46 = v41;
  }
  unint64_t v47 = v475;
  uint64_t v2 = a1;
  if (v475 > v46) {
    unint64_t v46 = v475;
  }
  if (v42 > v46) {
    unint64_t v46 = v42;
  }
  unsigned int v48 = a1[v46];
  unsigned int v49 = v48 - 14;
  uint64_t v484 = v22;
  if (v48 < 0xE)
  {
    unint64_t v61 = v486;
    uint64_t v50 = v472;
    uint64_t v52 = v468;
    uint64_t v51 = v470;
    unint64_t v56 = v41;
    unint64_t v62 = (((v450 + ((v19 + 8 + (v448 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  }
  else
  {
    uint64_t v50 = v472;
    uint64_t v52 = v468;
    uint64_t v51 = v470;
    if (v22 > 3) {
      goto LABEL_51;
    }
    unsigned int v53 = ((1 << (8 * v22)) | 2u) >> (8 * v22);
    unsigned int v54 = v53 | 0x10;
    BOOL v25 = HIWORD(v53) == 0;
    uint64_t v55 = 2;
    if (!v25) {
      uint64_t v55 = 4;
    }
    if (v54 <= 0xFF) {
LABEL_51:
    }
      uint64_t v55 = 1;
    unint64_t v56 = v41;
    unint64_t v57 = v485 + v55;
    if (v57 <= v489) {
      unint64_t v57 = v489;
    }
    if (v38 > 3) {
      goto LABEL_58;
    }
    unsigned int v58 = ((1 << v477) | 2u) >> v477;
    unsigned int v59 = v58 | 0x10;
    BOOL v25 = HIWORD(v58) == 0;
    uint64_t v60 = 2;
    if (!v25) {
      uint64_t v60 = 4;
    }
    if (v59 <= 0xFF) {
LABEL_58:
    }
      uint64_t v60 = 1;
    unint64_t v61 = v486;
    unint64_t v62 = (((v450 + ((v19 + 8 + (v448 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v63 = v45 + v60;
    if (v63 > v57) {
      unint64_t v57 = v63;
    }
    if (v40 > v57) {
      unint64_t v57 = v40;
    }
    if (v41 > v57) {
      unint64_t v57 = v41;
    }
    if (v475 > v57) {
      unint64_t v57 = v475;
    }
    if (v42 > v57) {
      LODWORD(v57) = v42;
    }
    if (v57 <= 3) {
      uint64_t v64 = v57;
    }
    else {
      uint64_t v64 = 4;
    }
    switch(v64)
    {
      case 1:
        int v65 = *a1;
        if (v57 < 4) {
          goto LABEL_81;
        }
        goto LABEL_82;
      case 2:
        int v65 = *(unsigned __int16 *)a1;
        if (v57 >= 4) {
          goto LABEL_82;
        }
        goto LABEL_81;
      case 3:
        int v65 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v57 >= 4) {
          goto LABEL_82;
        }
        goto LABEL_81;
      case 4:
        int v65 = *(_DWORD *)a1;
        if (v57 < 4) {
LABEL_81:
        }
          v65 |= v49 << (8 * v57);
LABEL_82:
        unsigned int v48 = v65 + 14;
        break;
      default:
        break;
    }
  }
  uint64_t v471 = ~v50;
  uint64_t v473 = ~v51;
  uint64_t v447 = ~v19;
  uint64_t v455 = ~v34;
  unint64_t v445 = v62 + 16;
  unint64_t v446 = v37 + 16;
  uint64_t v467 = ~v35;
  uint64_t v469 = ~v52;
  switch(v48)
  {
    case 1u:
      unint64_t v70 = v45;
      (*(void (**)(unsigned __int8 *, uint64_t))(v481 + 8))(a1, AssociatedTypeWitness);
      uint64_t v71 = (unsigned __int8 *)((unint64_t)&a1[v464] & v471);
      goto LABEL_252;
    case 2u:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v72 = v61;
        }
        else {
          uint64_t v72 = 4;
        }
        switch(v72)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 3u:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v73 = v61;
        }
        else {
          uint64_t v73 = 4;
        }
        switch(v73)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 4u:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v74 = v61;
        }
        else {
          uint64_t v74 = 4;
        }
        switch(v74)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 5u:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v75 = v61;
        }
        else {
          uint64_t v75 = 4;
        }
        switch(v75)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 6u:
      unsigned int v76 = a1[v61];
      unsigned int v77 = v76 - 2;
      if (v76 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v78 = v61;
        }
        else {
          uint64_t v78 = 4;
        }
        switch(v78)
        {
          case 1:
            int v79 = *a1;
            goto LABEL_170;
          case 2:
            int v79 = *(unsigned __int16 *)a1;
            goto LABEL_170;
          case 3:
            int v79 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_170;
          case 4:
            int v79 = *(_DWORD *)a1;
LABEL_170:
            if (v61 < 4) {
              unsigned int v76 = (v79 | (v77 << (8 * v61))) + 2;
            }
            else {
              unsigned int v76 = v79 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v98 = v481;
      if (v76 == 1)
      {
        uint64_t v98 = v480;
        uint64_t v99 = v482;
      }
      else
      {
        uint64_t v99 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v98 + 8))(a1, v99);
      char v100 = v486;
      uint64_t v71 = (unsigned __int8 *)((unint64_t)&a1[v466] & v473);
      unsigned int v101 = v71[v486];
      unsigned int v102 = v101 - 2;
      if (v101 >= 2)
      {
        if (v486 <= 3) {
          uint64_t v103 = v486;
        }
        else {
          uint64_t v103 = 4;
        }
        unint64_t v70 = v45;
        switch(v103)
        {
          case 1:
            int v104 = *v71;
            goto LABEL_244;
          case 2:
            int v104 = *(unsigned __int16 *)v71;
            goto LABEL_244;
          case 3:
            int v104 = *(unsigned __int16 *)v71 | (*(unsigned __int8 *)(((unint64_t)&a1[v466] & v473) + 2) << 16);
            goto LABEL_244;
          case 4:
            int v104 = *(_DWORD *)v71;
LABEL_244:
            if (v486 >= 4) {
              goto LABEL_245;
            }
            goto LABEL_250;
          default:
            goto LABEL_251;
        }
      }
      goto LABEL_197;
    case 7u:
      unsigned int v80 = a1[v61];
      unsigned int v81 = v80 - 2;
      if (v80 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v82 = v61;
        }
        else {
          uint64_t v82 = 4;
        }
        switch(v82)
        {
          case 1:
            int v83 = *a1;
            goto LABEL_185;
          case 2:
            int v83 = *(unsigned __int16 *)a1;
            goto LABEL_185;
          case 3:
            int v83 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_185;
          case 4:
            int v83 = *(_DWORD *)a1;
LABEL_185:
            if (v61 < 4) {
              unsigned int v80 = (v83 | (v81 << (8 * v61))) + 2;
            }
            else {
              unsigned int v80 = v83 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v105 = v481;
      if (v80 == 1)
      {
        uint64_t v105 = v480;
        uint64_t v106 = v482;
      }
      else
      {
        uint64_t v106 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v105 + 8))(a1, v106);
      char v100 = v486;
      uint64_t v71 = (unsigned __int8 *)((unint64_t)&a1[v466] & v473);
      unsigned int v101 = v71[v486];
      unsigned int v102 = v101 - 2;
      if (v101 < 2)
      {
LABEL_197:
        unint64_t v70 = v45;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v107 = v486;
        }
        else {
          uint64_t v107 = 4;
        }
        unint64_t v70 = v45;
        switch(v107)
        {
          case 1:
            int v104 = *v71;
            goto LABEL_249;
          case 2:
            int v104 = *(unsigned __int16 *)v71;
            goto LABEL_249;
          case 3:
            int v104 = *(unsigned __int16 *)v71 | (*(unsigned __int8 *)(((unint64_t)&a1[v466] & v473) + 2) << 16);
            goto LABEL_249;
          case 4:
            int v104 = *(_DWORD *)v71;
LABEL_249:
            if (v486 >= 4) {
LABEL_245:
            }
              unsigned int v101 = v104 + 2;
            else {
LABEL_250:
            }
              unsigned int v101 = (v104 | (v102 << (8 * v100))) + 2;
            break;
          default:
            break;
        }
      }
LABEL_251:
      if (v101 == 1) {
LABEL_252:
      }
        (*(void (**)(unsigned __int8 *, uint64_t))(v480 + 8))(v71, v482);
      else {
        (*(void (**)(unsigned __int8 *, uint64_t))(v481 + 8))(v71, AssociatedTypeWitness);
      }
      break;
    case 8u:
      unsigned int v84 = a1[v61];
      unsigned int v85 = v84 - 2;
      unint64_t v444 = v56;
      if (v84 < 2)
      {
        uint64_t v87 = ~v52;
      }
      else
      {
        if (v61 <= 3) {
          uint64_t v86 = v61;
        }
        else {
          uint64_t v86 = 4;
        }
        uint64_t v87 = ~v52;
        switch(v86)
        {
          case 1:
            int v88 = *a1;
            goto LABEL_201;
          case 2:
            int v88 = *(unsigned __int16 *)a1;
            goto LABEL_201;
          case 3:
            int v88 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_201;
          case 4:
            int v88 = *(_DWORD *)a1;
LABEL_201:
            if (v61 < 4) {
              unsigned int v84 = (v88 | (v85 << (8 * v61))) + 2;
            }
            else {
              unsigned int v84 = v88 + 2;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v70 = v45;
      uint64_t v108 = v481;
      if (v84 == 1)
      {
        uint64_t v108 = v480;
        uint64_t v109 = v482;
      }
      else
      {
        uint64_t v109 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v108 + 8))(a1, v109);
      unsigned int v110 = (unsigned __int8 *)((unint64_t)&a1[v465] & v87);
      unint64_t v56 = v444;
      if (v484 > 3) {
        goto LABEL_208;
      }
      unsigned int v112 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      if (HIWORD(v112))
      {
        unsigned int v111 = *(_DWORD *)&v110[v484];
      }
      else if ((v112 | 0x10) <= 0xFF)
      {
LABEL_208:
        unsigned int v111 = v110[v484];
      }
      else
      {
        unsigned int v111 = *(unsigned __int16 *)&v110[v484];
      }
      unsigned int v113 = v111 - 16;
      if (v111 >= 0x10)
      {
        if (v484 <= 3) {
          uint64_t v114 = v484;
        }
        else {
          uint64_t v114 = 4;
        }
        switch(v114)
        {
          case 1:
            int v115 = *v110;
            goto LABEL_413;
          case 2:
            int v115 = *(unsigned __int16 *)v110;
            goto LABEL_413;
          case 3:
            int v115 = *(unsigned __int16 *)v110 | (v110[2] << 16);
            goto LABEL_413;
          case 4:
            int v115 = *(_DWORD *)v110;
LABEL_413:
            if (v484 < 4) {
              unsigned int v111 = (v115 | (v113 << (8 * v484))) + 16;
            }
            else {
              unsigned int v111 = v115 + 16;
            }
            break;
          default:
            break;
        }
      }
      switch(v111)
      {
        case 8u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v451 + 8))(v110, v452);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v453 + 8))((v449 + ((unint64_t)&v110[v448] & 0xFFFFFFFFFFFFFFF8)) & v447, v454);
          goto LABEL_426;
        case 9u:
          goto LABEL_427;
        case 0xCu:
          goto LABEL_428;
        case 0xEu:
          goto LABEL_429;
        default:
          goto LABEL_253;
      }
    case 9u:
      unsigned int v89 = a1[v61];
      unsigned int v90 = v89 - 2;
      unint64_t v443 = v40;
      if (v89 < 2)
      {
        uint64_t v92 = ~v35;
      }
      else
      {
        if (v61 <= 3) {
          uint64_t v91 = v61;
        }
        else {
          uint64_t v91 = 4;
        }
        uint64_t v92 = ~v35;
        switch(v91)
        {
          case 1:
            int v93 = *a1;
            goto LABEL_222;
          case 2:
            int v93 = *(unsigned __int16 *)a1;
            goto LABEL_222;
          case 3:
            int v93 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_222;
          case 4:
            int v93 = *(_DWORD *)a1;
LABEL_222:
            if (v61 < 4) {
              unsigned int v89 = (v93 | (v90 << (8 * v61))) + 2;
            }
            else {
              unsigned int v89 = v93 + 2;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v70 = v45;
      uint64_t v116 = v481;
      if (v89 == 1)
      {
        uint64_t v116 = v480;
        uint64_t v117 = v482;
      }
      else
      {
        uint64_t v117 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v116 + 8))(a1, v117);
      unsigned int v110 = (unsigned __int8 *)((unint64_t)&a1[v478 + v35] & v92);
      uint64_t v118 = v479;
      unint64_t v40 = v443;
      if (v479 > 3) {
        goto LABEL_229;
      }
      unsigned int v120 = ((1 << v477) | 2u) >> v477;
      if (HIWORD(v120))
      {
        unsigned int v119 = *(_DWORD *)&v110[v479];
      }
      else
      {
        BOOL v121 = (v120 | 0x10) > 0xFF;
        uint64_t v118 = v479;
        if (v121) {
          unsigned int v119 = *(unsigned __int16 *)&v110[v479];
        }
        else {
LABEL_229:
        }
          unsigned int v119 = v110[v118];
      }
      unsigned int v122 = v119 - 16;
      if (v119 >= 0x10)
      {
        if (v479 <= 3) {
          uint64_t v123 = v479;
        }
        else {
          uint64_t v123 = 4;
        }
        switch(v123)
        {
          case 1:
            int v124 = *v110;
            goto LABEL_421;
          case 2:
            int v124 = *(unsigned __int16 *)v110;
            goto LABEL_421;
          case 3:
            int v124 = *(unsigned __int16 *)v110 | (v110[2] << 16);
            goto LABEL_421;
          case 4:
            int v124 = *(_DWORD *)v110;
LABEL_421:
            if (v479 < 4) {
              unsigned int v119 = (v124 | (v122 << v477)) + 16;
            }
            else {
              unsigned int v119 = v124 + 16;
            }
            break;
          default:
            break;
        }
      }
      switch(v119)
      {
        case 8u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v459 + 8))(v110, v460);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v461 + 8))((v457 + ((unint64_t)&v110[v456] & 0xFFFFFFFFFFFFFFF8)) & v455, v462);
LABEL_426:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 9u:
LABEL_427:

          break;
        case 0xCu:
LABEL_428:
          sub_24D3E380C(*(void **)v110, *((id *)v110 + 1), v110[16]);
          break;
        case 0xEu:
LABEL_429:
          unint64_t v219 = *((void *)v110 + 2);
          if (v219 >> 60 != 11 && v219 >> 60 != 15) {
            sub_24D400DCC(*((void *)v110 + 1), v219);
          }
          break;
        default:
          goto LABEL_253;
      }
      break;
    case 0xAu:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v94 = v61;
        }
        else {
          uint64_t v94 = 4;
        }
        switch(v94)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 0xBu:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v69 = v61;
        }
        else {
          uint64_t v69 = 4;
        }
        switch(v69)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 0xCu:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v95 = v61;
        }
        else {
          uint64_t v95 = 4;
        }
        switch(v95)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 0xDu:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v96 = v61;
        }
        else {
          uint64_t v96 = 4;
        }
        switch(v96)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    default:
      unsigned int v66 = a1[v61];
      unsigned int v67 = v66 - 2;
      if (v66 >= 2)
      {
        if (v61 <= 3) {
          uint64_t v68 = v61;
        }
        else {
          uint64_t v68 = 4;
        }
        switch(v68)
        {
          case 1:
LABEL_154:
            int v97 = *a1;
            if (v61 < 4) {
              goto LABEL_159;
            }
            goto LABEL_161;
          case 2:
LABEL_156:
            int v97 = *(unsigned __int16 *)a1;
            if (v61 >= 4) {
              goto LABEL_161;
            }
            goto LABEL_159;
          case 3:
LABEL_158:
            int v97 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v61 < 4) {
              goto LABEL_159;
            }
            goto LABEL_161;
          case 4:
LABEL_160:
            int v97 = *(_DWORD *)a1;
            if (v61 < 4) {
LABEL_159:
            }
              unsigned int v66 = (v97 | (v67 << (8 * v61))) + 2;
            else {
LABEL_161:
            }
              unsigned int v66 = v97 + 2;
            break;
          default:
            break;
        }
      }
LABEL_162:
      unint64_t v70 = v45;
      if (v66 == 1) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v480 + 8))(a1, v482);
      }
      else {
        (*(void (**)(unsigned __int8 *, uint64_t))(v481 + 8))(a1, AssociatedTypeWitness);
      }
      break;
  }
LABEL_253:
  if (v484 > 3) {
    goto LABEL_257;
  }
  unsigned int v125 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
  unsigned int v126 = v125 | 0x10;
  BOOL v25 = HIWORD(v125) == 0;
  uint64_t v127 = 2;
  if (!v25) {
    uint64_t v127 = 4;
  }
  if (v126 <= 0xFF) {
LABEL_257:
  }
    uint64_t v127 = 1;
  unint64_t v128 = v70;
  unint64_t v129 = v486;
  unint64_t v130 = v485 + v127;
  if (v130 <= v489) {
    unint64_t v130 = v489;
  }
  unsigned int v131 = (unsigned char *)v479;
  if (v479 > 3) {
    goto LABEL_264;
  }
  unsigned int v132 = ((1 << v477) | 2u) >> v477;
  unsigned int v133 = v132 | 0x10;
  BOOL v25 = HIWORD(v132) == 0;
  uint64_t v134 = 2;
  if (!v25) {
    uint64_t v134 = 4;
  }
  if (v133 <= 0xFF) {
LABEL_264:
  }
    uint64_t v134 = 1;
  unint64_t v135 = v128 + v134;
  if (v135 > v130) {
    unint64_t v130 = v135;
  }
  if (v40 > v130) {
    unint64_t v130 = v40;
  }
  if (v56 > v130) {
    unint64_t v130 = v56;
  }
  if (v475 > v130) {
    unint64_t v130 = v475;
  }
  if (v42 > v130) {
    unint64_t v130 = v42;
  }
  unsigned int v136 = a2[v130];
  unsigned int v137 = v136 - 14;
  if (v136 >= 0xE)
  {
    if (v484 > 3) {
      goto LABEL_280;
    }
    unsigned int v138 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
    unsigned int v139 = v138 | 0x10;
    BOOL v25 = HIWORD(v138) == 0;
    uint64_t v140 = 2;
    if (!v25) {
      uint64_t v140 = 4;
    }
    if (v139 <= 0xFF) {
LABEL_280:
    }
      uint64_t v140 = 1;
    unint64_t v141 = v485 + v140;
    if (v141 <= v489) {
      unint64_t v141 = v489;
    }
    if (v479 > 3) {
      goto LABEL_287;
    }
    unsigned int v142 = ((1 << v477) | 2u) >> v477;
    unsigned int v143 = v142 | 0x10;
    BOOL v25 = HIWORD(v142) == 0;
    uint64_t v144 = 2;
    if (!v25) {
      uint64_t v144 = 4;
    }
    if (v143 <= 0xFF) {
LABEL_287:
    }
      uint64_t v144 = 1;
    unint64_t v145 = v128 + v144;
    if (v145 > v141) {
      unint64_t v141 = v145;
    }
    if (v40 > v141) {
      unint64_t v141 = v40;
    }
    if (v56 > v141) {
      unint64_t v141 = v56;
    }
    if (v475 > v141) {
      unint64_t v141 = v475;
    }
    if (v42 > v141) {
      LODWORD(v141) = v42;
    }
    if (v141 <= 3) {
      uint64_t v146 = v141;
    }
    else {
      uint64_t v146 = 4;
    }
    switch(v146)
    {
      case 1:
        int v147 = *a2;
        if (v141 < 4) {
          goto LABEL_305;
        }
        goto LABEL_309;
      case 2:
        int v147 = *(unsigned __int16 *)a2;
        if (v141 < 4) {
          goto LABEL_305;
        }
        goto LABEL_309;
      case 3:
        int v147 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v141 < 4) {
          goto LABEL_305;
        }
        goto LABEL_309;
      case 4:
        int v147 = *(_DWORD *)a2;
        if (v141 < 4) {
LABEL_305:
        }
          unsigned int v136 = (v147 | (v137 << (8 * v141))) + 14;
        else {
LABEL_309:
        }
          unsigned int v136 = v147 + 14;
        break;
      default:
        break;
    }
  }
  switch(v136)
  {
    case 1u:
      unint64_t v158 = v42;
      (*(void (**)(unsigned __int8 *))(v481 + 16))(a1);
      unint64_t v159 = (unint64_t)&a1[v464] & v471;
      unint64_t v160 = (unint64_t)&a2[v464] & v471;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v480 + 16))(v159, v160, v482);
      *(unsigned char *)(v159 + v463) = *(unsigned char *)(v160 + v463);
      if (v484 > 3) {
        goto LABEL_328;
      }
      unsigned int v161 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v162 = v161 | 0x10;
      BOOL v25 = HIWORD(v161) == 0;
      uint64_t v163 = 2;
      if (!v25) {
        uint64_t v163 = 4;
      }
      if (v162 <= 0xFF) {
LABEL_328:
      }
        uint64_t v163 = 1;
      unint64_t v42 = v158;
      unint64_t v164 = v485 + v163;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      uint64_t v2 = a1;
      if (v479 > 3) {
        goto LABEL_335;
      }
      char v165 = 1;
      unsigned int v166 = ((1 << v477) | 2u) >> v477;
      unsigned int v167 = v166 | 0x10;
      BOOL v25 = HIWORD(v166) == 0;
      uint64_t v168 = 2;
      if (!v25) {
        uint64_t v168 = 4;
      }
      if (v167 <= 0xFF)
      {
LABEL_335:
        uint64_t v168 = 1;
        char v165 = 1;
      }
      goto LABEL_995;
    case 2u:
      unsigned int v169 = a2[v486];
      unsigned int v170 = v169 - 2;
      if (v169 < 2)
      {
        unint64_t v172 = v128;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v171 = v486;
        }
        else {
          uint64_t v171 = 4;
        }
        unint64_t v172 = v128;
        switch(v171)
        {
          case 1:
            int v173 = *a2;
            goto LABEL_477;
          case 2:
            int v173 = *(unsigned __int16 *)a2;
            goto LABEL_477;
          case 3:
            int v173 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_477;
          case 4:
            int v173 = *(_DWORD *)a2;
LABEL_477:
            if (v486 < 4) {
              unsigned int v169 = (v173 | (v170 << (8 * v486))) + 2;
            }
            else {
              unsigned int v169 = v173 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v234 = v169 == 1;
      uint64_t v235 = v481;
      if (v169 == 1) {
        uint64_t v235 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v235 + 16))(a1);
      a1[v486] = v234;
      a1[v478] = a2[v478];
      if (v484 > 3) {
        goto LABEL_486;
      }
      unsigned int v236 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v237 = v236 | 0x10;
      BOOL v25 = HIWORD(v236) == 0;
      uint64_t v238 = 2;
      if (!v25) {
        uint64_t v238 = 4;
      }
      if (v237 <= 0xFF) {
LABEL_486:
      }
        uint64_t v238 = 1;
      unint64_t v128 = v172;
      unint64_t v164 = v485 + v238;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v239 = ((1 << v477) | 2u) >> v477;
        unsigned int v240 = v239 | 0x10;
        BOOL v25 = HIWORD(v239) == 0;
        char v165 = 2;
        uint64_t v168 = 4;
        if (v25) {
          uint64_t v168 = 2;
        }
        if (v240 > 0xFF) {
          goto LABEL_995;
        }
      }
      char v165 = 2;
      goto LABEL_994;
    case 3u:
      unsigned int v174 = a2[v486];
      unsigned int v175 = v174 - 2;
      if (v174 >= 2)
      {
        if (v486 <= 3) {
          uint64_t v176 = v486;
        }
        else {
          uint64_t v176 = 4;
        }
        switch(v176)
        {
          case 1:
            int v177 = *a2;
            goto LABEL_498;
          case 2:
            int v177 = *(unsigned __int16 *)a2;
            goto LABEL_498;
          case 3:
            int v177 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_498;
          case 4:
            int v177 = *(_DWORD *)a2;
LABEL_498:
            if (v486 < 4) {
              unsigned int v174 = (v177 | (v175 << (8 * v486))) + 2;
            }
            else {
              unsigned int v174 = v177 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v241 = v174 == 1;
      uint64_t v242 = v481;
      if (v174 == 1)
      {
        uint64_t v242 = v480;
        uint64_t v243 = v482;
      }
      else
      {
        uint64_t v243 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v242 + 16))(a1, a2, v243);
      a1[v486] = v241;
      if (v484 > 3) {
        goto LABEL_508;
      }
      unsigned int v244 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v245 = v244 | 0x10;
      BOOL v25 = HIWORD(v244) == 0;
      uint64_t v246 = 2;
      if (!v25) {
        uint64_t v246 = 4;
      }
      if (v245 <= 0xFF) {
LABEL_508:
      }
        uint64_t v246 = 1;
      unint64_t v164 = v485 + v246;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v247 = ((1 << v477) | 2u) >> v477;
        unsigned int v248 = v247 | 0x10;
        BOOL v25 = HIWORD(v247) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v248 > 0xFF)
        {
          char v165 = 3;
          goto LABEL_995;
        }
      }
      char v165 = 3;
      goto LABEL_994;
    case 4u:
      unsigned int v178 = a2[v486];
      unsigned int v179 = v178 - 2;
      if (v178 < 2)
      {
        unint64_t v181 = v128;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v180 = v486;
        }
        else {
          uint64_t v180 = 4;
        }
        unint64_t v181 = v128;
        switch(v180)
        {
          case 1:
            int v182 = *a2;
            goto LABEL_520;
          case 2:
            int v182 = *(unsigned __int16 *)a2;
            goto LABEL_520;
          case 3:
            int v182 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_520;
          case 4:
            int v182 = *(_DWORD *)a2;
LABEL_520:
            if (v486 < 4) {
              unsigned int v178 = (v182 | (v179 << (8 * v486))) + 2;
            }
            else {
              unsigned int v178 = v182 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v249 = v178 == 1;
      uint64_t v250 = v481;
      if (v178 == 1) {
        uint64_t v250 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v250 + 16))(a1);
      a1[v486] = v249;
      *(void *)((unint64_t)&a1[v478 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v478 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v484 > 3) {
        goto LABEL_529;
      }
      unsigned int v251 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v252 = v251 | 0x10;
      BOOL v25 = HIWORD(v251) == 0;
      uint64_t v253 = 2;
      if (!v25) {
        uint64_t v253 = 4;
      }
      if (v252 <= 0xFF) {
LABEL_529:
      }
        uint64_t v253 = 1;
      unint64_t v128 = v181;
      unint64_t v164 = v485 + v253;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v254 = ((1 << v477) | 2u) >> v477;
        unsigned int v255 = v254 | 0x10;
        BOOL v25 = HIWORD(v254) == 0;
        uint64_t v168 = 2;
        char v165 = 4;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v255 > 0xFF) {
          goto LABEL_995;
        }
      }
      char v165 = 4;
      goto LABEL_994;
    case 5u:
      unsigned int v183 = a2[v486];
      unsigned int v184 = v183 - 2;
      if (v183 < 2)
      {
        unint64_t v186 = v128;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v185 = v486;
        }
        else {
          uint64_t v185 = 4;
        }
        unint64_t v186 = v128;
        switch(v185)
        {
          case 1:
            int v187 = *a2;
            goto LABEL_540;
          case 2:
            int v187 = *(unsigned __int16 *)a2;
            goto LABEL_540;
          case 3:
            int v187 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_540;
          case 4:
            int v187 = *(_DWORD *)a2;
LABEL_540:
            if (v486 < 4) {
              unsigned int v183 = (v187 | (v184 << (8 * v486))) + 2;
            }
            else {
              unsigned int v183 = v187 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v256 = v183 == 1;
      uint64_t v257 = v481;
      if (v183 == 1) {
        uint64_t v257 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v257 + 16))(a1);
      a1[v486] = v256;
      *(void *)((unint64_t)&a1[v478 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v478 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v484 > 3) {
        goto LABEL_549;
      }
      unsigned int v258 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v259 = v258 | 0x10;
      BOOL v25 = HIWORD(v258) == 0;
      uint64_t v260 = 2;
      if (!v25) {
        uint64_t v260 = 4;
      }
      if (v259 <= 0xFF) {
LABEL_549:
      }
        uint64_t v260 = 1;
      unint64_t v128 = v186;
      unint64_t v164 = v485 + v260;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v261 = ((1 << v477) | 2u) >> v477;
        unsigned int v262 = v261 | 0x10;
        BOOL v25 = HIWORD(v261) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v262 > 0xFF)
        {
          char v165 = 5;
          goto LABEL_995;
        }
      }
      char v165 = 5;
      goto LABEL_994;
    case 6u:
      unsigned int v188 = a2[v486];
      unsigned int v189 = v188 - 2;
      if (v188 >= 2)
      {
        if (v486 <= 3) {
          uint64_t v190 = v486;
        }
        else {
          uint64_t v190 = 4;
        }
        switch(v190)
        {
          case 1:
            int v191 = *a2;
            goto LABEL_561;
          case 2:
            int v191 = *(unsigned __int16 *)a2;
            goto LABEL_561;
          case 3:
            int v191 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_561;
          case 4:
            int v191 = *(_DWORD *)a2;
LABEL_561:
            if (v486 < 4) {
              unsigned int v188 = (v191 | (v189 << (8 * v486))) + 2;
            }
            else {
              unsigned int v188 = v191 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v263 = v188 == 1;
      uint64_t v264 = v481;
      if (v188 == 1) {
        uint64_t v264 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v264 + 16))(a1);
      a1[v486] = v263;
      uint64_t v265 = (unsigned __int8 *)((unint64_t)&a2[v466] & v473);
      unsigned int v266 = v265[v486];
      unsigned int v267 = v266 - 2;
      if (v266 < 2)
      {
        uint64_t v269 = v485;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v268 = v486;
        }
        else {
          uint64_t v268 = 4;
        }
        uint64_t v269 = v485;
        switch(v268)
        {
          case 1:
            int v270 = *v265;
            goto LABEL_694;
          case 2:
            int v270 = *(unsigned __int16 *)v265;
            goto LABEL_694;
          case 3:
            int v270 = *(unsigned __int16 *)((unint64_t)&a2[v466] & v473) | (*(unsigned __int8 *)(((unint64_t)&a2[v466] & v473) + 2) << 16);
            goto LABEL_694;
          case 4:
            int v270 = *(_DWORD *)v265;
LABEL_694:
            if (v486 < 4) {
              unsigned int v266 = (v270 | (v267 << (8 * v486))) + 2;
            }
            else {
              unsigned int v266 = v270 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v327 = v266 == 1;
      uint64_t v328 = v481;
      if (v266 == 1) {
        uint64_t v328 = v480;
      }
      (*(void (**)(unint64_t))(v328 + 16))((unint64_t)&a1[v466] & v473);
      *(unsigned char *)(((unint64_t)&a1[v466] & v473) + v486) = v327;
      if (v484 > 3) {
        goto LABEL_703;
      }
      unsigned int v329 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v330 = v329 | 0x10;
      BOOL v25 = HIWORD(v329) == 0;
      uint64_t v331 = 2;
      if (!v25) {
        uint64_t v331 = 4;
      }
      if (v330 <= 0xFF) {
LABEL_703:
      }
        uint64_t v331 = 1;
      unint64_t v164 = v269 + v331;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v332 = ((1 << v477) | 2u) >> v477;
        unsigned int v333 = v332 | 0x10;
        BOOL v25 = HIWORD(v332) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v333 > 0xFF)
        {
          char v165 = 6;
          goto LABEL_995;
        }
      }
      char v165 = 6;
      goto LABEL_994;
    case 7u:
      unsigned int v192 = a2[v486];
      unsigned int v193 = v192 - 2;
      if (v192 >= 2)
      {
        if (v486 <= 3) {
          uint64_t v194 = v486;
        }
        else {
          uint64_t v194 = 4;
        }
        switch(v194)
        {
          case 1:
            int v195 = *a2;
            goto LABEL_576;
          case 2:
            int v195 = *(unsigned __int16 *)a2;
            goto LABEL_576;
          case 3:
            int v195 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_576;
          case 4:
            int v195 = *(_DWORD *)a2;
LABEL_576:
            if (v486 < 4) {
              unsigned int v192 = (v195 | (v193 << (8 * v486))) + 2;
            }
            else {
              unsigned int v192 = v195 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v271 = v192 == 1;
      uint64_t v272 = v481;
      if (v192 == 1) {
        uint64_t v272 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v272 + 16))(a1);
      a1[v486] = v271;
      uint64_t v273 = (unsigned __int8 *)((unint64_t)&a2[v466] & v473);
      unsigned int v274 = v273[v486];
      unsigned int v275 = v274 - 2;
      if (v274 < 2)
      {
        uint64_t v277 = v485;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v276 = v486;
        }
        else {
          uint64_t v276 = 4;
        }
        uint64_t v277 = v485;
        switch(v276)
        {
          case 1:
            int v278 = *v273;
            goto LABEL_715;
          case 2:
            int v278 = *(unsigned __int16 *)v273;
            goto LABEL_715;
          case 3:
            int v278 = *(unsigned __int16 *)((unint64_t)&a2[v466] & v473) | (*(unsigned __int8 *)(((unint64_t)&a2[v466] & v473) + 2) << 16);
            goto LABEL_715;
          case 4:
            int v278 = *(_DWORD *)v273;
LABEL_715:
            if (v486 < 4) {
              unsigned int v274 = (v278 | (v275 << (8 * v486))) + 2;
            }
            else {
              unsigned int v274 = v278 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v334 = v274 == 1;
      uint64_t v335 = v481;
      if (v274 == 1) {
        uint64_t v335 = v480;
      }
      (*(void (**)(unint64_t))(v335 + 16))((unint64_t)&a1[v466] & v473);
      *(unsigned char *)(((unint64_t)&a1[v466] & v473) + v486) = v334;
      if (v484 > 3) {
        goto LABEL_724;
      }
      unsigned int v336 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v337 = v336 | 0x10;
      BOOL v25 = HIWORD(v336) == 0;
      uint64_t v338 = 2;
      if (!v25) {
        uint64_t v338 = 4;
      }
      if (v337 <= 0xFF) {
LABEL_724:
      }
        uint64_t v338 = 1;
      unint64_t v164 = v277 + v338;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v339 = ((1 << v477) | 2u) >> v477;
        unsigned int v340 = v339 | 0x10;
        BOOL v25 = HIWORD(v339) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v340 > 0xFF)
        {
          char v165 = 7;
          goto LABEL_995;
        }
      }
      char v165 = 7;
      goto LABEL_994;
    case 8u:
      unsigned int v196 = a2[v486];
      unsigned int v197 = v196 - 2;
      if (v196 >= 2)
      {
        if (v486 <= 3) {
          uint64_t v198 = v486;
        }
        else {
          uint64_t v198 = 4;
        }
        switch(v198)
        {
          case 1:
            int v199 = *a2;
            goto LABEL_591;
          case 2:
            int v199 = *(unsigned __int16 *)a2;
            goto LABEL_591;
          case 3:
            int v199 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_591;
          case 4:
            int v199 = *(_DWORD *)a2;
LABEL_591:
            if (v486 < 4) {
              unsigned int v196 = (v199 | (v197 << (8 * v486))) + 2;
            }
            else {
              unsigned int v196 = v199 + 2;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v279 = v42;
      BOOL v280 = v196 == 1;
      uint64_t v281 = v481;
      if (v196 == 1) {
        uint64_t v281 = v480;
      }
      unint64_t v282 = v128;
      (*(void (**)(unsigned __int8 *))(v281 + 16))(a1);
      a1[v486] = v280;
      uint64_t v283 = (unsigned __int8 *)((unint64_t)&a2[v465] & v469);
      if (v484 > 3) {
        goto LABEL_597;
      }
      unsigned int v285 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      if (HIWORD(v285))
      {
        unsigned int v284 = *(_DWORD *)&v283[v484];
      }
      else if ((v285 | 0x10) <= 0xFF)
      {
LABEL_597:
        unsigned int v284 = v283[v484];
      }
      else
      {
        unsigned int v284 = *(unsigned __int16 *)&v283[v484];
      }
      long long v286 = (_OWORD *)((unint64_t)&a1[v465] & v469);
      unsigned int v287 = v284 - 16;
      if (v284 >= 0x10)
      {
        if (v484 <= 3) {
          uint64_t v288 = v484;
        }
        else {
          uint64_t v288 = 4;
        }
        switch(v288)
        {
          case 1:
            int v289 = *v283;
            goto LABEL_736;
          case 2:
            int v289 = *(unsigned __int16 *)v283;
            goto LABEL_736;
          case 3:
            int v289 = *(unsigned __int16 *)((unint64_t)&a2[v465] & v469) | (*(unsigned __int8 *)(((unint64_t)&a2[v465] & v469) + 2) << 16);
            goto LABEL_736;
          case 4:
            int v289 = *(_DWORD *)v283;
LABEL_736:
            if (v484 < 4) {
              v289 |= v287 << (8 * v484);
            }
            unsigned int v284 = v289 + 16;
            break;
          default:
            goto LABEL_739;
        }
      }
      break;
    case 9u:
      unsigned int v200 = a2[v486];
      unsigned int v201 = v200 - 2;
      if (v200 >= 2)
      {
        if (v486 <= 3) {
          uint64_t v202 = v486;
        }
        else {
          uint64_t v202 = 4;
        }
        switch(v202)
        {
          case 1:
            int v203 = *a2;
            goto LABEL_611;
          case 2:
            int v203 = *(unsigned __int16 *)a2;
            goto LABEL_611;
          case 3:
            int v203 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_611;
          case 4:
            int v203 = *(_DWORD *)a2;
LABEL_611:
            if (v486 < 4) {
              unsigned int v200 = (v203 | (v201 << (8 * v486))) + 2;
            }
            else {
              unsigned int v200 = v203 + 2;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v487 = v42;
      BOOL v290 = v200 == 1;
      uint64_t v291 = v481;
      if (v200 == 1) {
        uint64_t v291 = v480;
      }
      unint64_t v292 = v128;
      unint64_t v293 = v129;
      (*(void (**)(unsigned __int8 *))(v291 + 16))(a1);
      a1[v293] = v290;
      char v294 = (unsigned __int8 *)((unint64_t)&a2[v478 + v35] & v467);
      if (v479 > 3) {
        goto LABEL_617;
      }
      unsigned int v296 = ((1 << v477) | 2u) >> v477;
      if (HIWORD(v296))
      {
        unsigned int v295 = *(_DWORD *)&v294[v479];
      }
      else if ((v296 | 0x10) <= 0xFF)
      {
LABEL_617:
        unsigned int v295 = v294[v479];
      }
      else
      {
        unsigned int v295 = *(unsigned __int16 *)&v294[v479];
      }
      unint64_t v297 = (unint64_t)&a1[v478 + v35] & v467;
      unsigned int v298 = v295 - 16;
      if (v295 >= 0x10)
      {
        if (v479 <= 3) {
          uint64_t v299 = v479;
        }
        else {
          uint64_t v299 = 4;
        }
        switch(v299)
        {
          case 1:
            int v300 = *v294;
            goto LABEL_747;
          case 2:
            int v300 = *(unsigned __int16 *)v294;
            goto LABEL_747;
          case 3:
            int v300 = *(unsigned __int16 *)((unint64_t)&a2[v478 + v35] & v467) | (*(unsigned __int8 *)(((unint64_t)&a2[v478 + v35] & v467) + 2) << 16);
            goto LABEL_747;
          case 4:
            int v300 = *(_DWORD *)v294;
LABEL_747:
            if (v479 < 4) {
              v300 |= v298 << v477;
            }
            unsigned int v295 = v300 + 16;
            break;
          default:
            break;
        }
      }
      switch(v295)
      {
        case 0u:
          long long v346 = *(_OWORD *)v294;
          *(void *)(((unint64_t)&a1[v478 + v35] & v467) + 0x10) = *(void *)(((unint64_t)&a2[v478 + v35] & v467)
                                                                                     + 0x10);
          *(_OWORD *)unint64_t v297 = v346;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_754;
          }
          unsigned int v349 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v349))
          {
            *(_DWORD *)(v297 + v479) = 0;
          }
          else if ((v349 | 0x10) > 0xFF)
          {
            *(_WORD *)(v297 + v479) = 0;
          }
          else
          {
LABEL_754:
            *(unsigned char *)(v297 + v479) = 0;
          }
          break;
        case 1u:
          *(void *)unint64_t v297 = *(void *)v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_812;
          }
          unsigned int v373 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v373))
          {
            *(_DWORD *)(v297 + v479) = 1;
          }
          else
          {
            if ((v373 | 0x10) > 0xFF)
            {
              __int16 v433 = 1;
              goto LABEL_980;
            }
LABEL_812:
            *(unsigned char *)(v297 + v479) = 1;
          }
          break;
        case 2u:
          *(_OWORD *)unint64_t v297 = *(_OWORD *)v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_816;
          }
          unsigned int v374 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v374))
          {
            *(_DWORD *)(v297 + v479) = 2;
          }
          else
          {
            if ((v374 | 0x10) > 0xFF)
            {
              __int16 v433 = 2;
              goto LABEL_980;
            }
LABEL_816:
            *(unsigned char *)(v297 + v479) = 2;
          }
          break;
        case 3u:
          *(unsigned char *)unint64_t v297 = *v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_820;
          }
          unsigned int v375 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v375))
          {
            *(_DWORD *)(v297 + v479) = 3;
          }
          else
          {
            if ((v375 | 0x10) > 0xFF)
            {
              __int16 v433 = 3;
              goto LABEL_980;
            }
LABEL_820:
            *(unsigned char *)(v297 + v479) = 3;
          }
          break;
        case 4u:
          *(unsigned char *)unint64_t v297 = *v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_824;
          }
          unsigned int v376 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v376))
          {
            *(_DWORD *)(v297 + v479) = 4;
          }
          else
          {
            if ((v376 | 0x10) > 0xFF)
            {
              __int16 v433 = 4;
              goto LABEL_980;
            }
LABEL_824:
            *(unsigned char *)(v297 + v479) = 4;
          }
          break;
        case 5u:
          *(unsigned char *)unint64_t v297 = *v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_828;
          }
          unsigned int v377 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v377))
          {
            *(_DWORD *)(v297 + v479) = 5;
          }
          else
          {
            if ((v377 | 0x10) > 0xFF)
            {
              __int16 v433 = 5;
              goto LABEL_980;
            }
LABEL_828:
            *(unsigned char *)(v297 + v479) = 5;
          }
          break;
        case 6u:
          *(unsigned char *)unint64_t v297 = *v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_832;
          }
          unsigned int v378 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v378))
          {
            *(_DWORD *)(v297 + v479) = 6;
          }
          else
          {
            if ((v378 | 0x10) > 0xFF)
            {
              __int16 v433 = 6;
              goto LABEL_980;
            }
LABEL_832:
            *(unsigned char *)(v297 + v479) = 6;
          }
          break;
        case 7u:
          *(unsigned char *)unint64_t v297 = *v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_836;
          }
          unsigned int v379 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v379))
          {
            *(_DWORD *)(v297 + v479) = 7;
          }
          else
          {
            if ((v379 | 0x10) > 0xFF)
            {
              __int16 v433 = 7;
              goto LABEL_980;
            }
LABEL_836:
            *(unsigned char *)(v297 + v479) = 7;
          }
          break;
        case 8u:
          (*(void (**)(unint64_t, unsigned __int8 *, uint64_t))(v459 + 16))(v297, v294, v460);
          unsigned int v380 = (void *)((v456 + v297) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v381 = (void *)((unint64_t)&v294[v456] & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v380 = *v381;
          unint64_t v382 = v128;
          unint64_t v383 = ((unint64_t)v380 + v457) & v455;
          unint64_t v384 = ((unint64_t)v381 + v457) & v455;
          unsigned int v385 = *(void (**)(unint64_t, unint64_t, uint64_t))(v461 + 16);
          swift_bridgeObjectRetain();
          v385(v383, v384, v462);
          unint64_t v386 = v458 + v383;
          unint64_t v128 = v382;
          v386 &= 0xFFFFFFFFFFFFFFF8;
          unint64_t v387 = v458 + v384;
          unint64_t v47 = v475;
          v387 &= 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v386 = *(void *)v387;
          uint64_t v388 = (void *)((v386 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v389 = (void *)((v387 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v388 = *v389;
          v388[1] = v389[1];
          *(unsigned char *)(v446 + v297) = v294[v446];
          *(unsigned char *)((v446 + v297) | 1) = *(unsigned char *)((unint64_t)&v294[v446] | 1);
          swift_bridgeObjectRetain();
          unsigned int v131 = (unsigned char *)v479;
          swift_bridgeObjectRetain();
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_840;
          }
          unsigned int v390 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v390))
          {
            *(_DWORD *)(v297 + v479) = 8;
          }
          else
          {
            if ((v390 | 0x10) > 0xFF)
            {
              __int16 v433 = 8;
              goto LABEL_980;
            }
LABEL_840:
            *(unsigned char *)(v297 + v479) = 8;
          }
          break;
        case 9u:
          uint64_t v391 = *(void **)v294;
          *(void *)unint64_t v297 = *(void *)v294;
          id v392 = v391;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_844;
          }
          unsigned int v393 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v393))
          {
            *(_DWORD *)(v297 + v479) = 9;
          }
          else
          {
            if ((v393 | 0x10) > 0xFF)
            {
              __int16 v433 = 9;
              goto LABEL_980;
            }
LABEL_844:
            *(unsigned char *)(v297 + v479) = 9;
          }
          break;
        case 0xAu:
          *(unsigned char *)unint64_t v297 = *v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_848;
          }
          unsigned int v394 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v394))
          {
            *(_DWORD *)(v297 + v479) = 10;
          }
          else
          {
            if ((v394 | 0x10) > 0xFF)
            {
              __int16 v433 = 10;
              goto LABEL_980;
            }
LABEL_848:
            *(unsigned char *)(v297 + v479) = 10;
          }
          break;
        case 0xBu:
          *(_WORD *)unint64_t v297 = *(_WORD *)v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_852;
          }
          unsigned int v395 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v395))
          {
            *(_DWORD *)(v297 + v479) = 11;
          }
          else
          {
            if ((v395 | 0x10) > 0xFF)
            {
              __int16 v433 = 11;
              goto LABEL_980;
            }
LABEL_852:
            *(unsigned char *)(v297 + v479) = 11;
          }
          break;
        case 0xCu:
          uint64_t v397 = *(void **)v294;
          uint64_t v396 = *(void **)(((unint64_t)&a2[v478 + v35] & v467) + 8);
          char v398 = *(unsigned char *)(((unint64_t)&a2[v478 + v35] & v467) + 0x10);
          sub_24D3F1C98(v397, v396, v398);
          *(void *)unint64_t v297 = v397;
          *(void *)(((unint64_t)&a1[v478 + v35] & v467) + 8) = v396;
          unint64_t v128 = v292;
          unsigned int v131 = (unsigned char *)v479;
          *(unsigned char *)(((unint64_t)&a1[v478 + v35] & v467) + 0x10) = v398;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_856;
          }
          unsigned int v399 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v399))
          {
            *(_DWORD *)(v297 + v479) = 12;
          }
          else
          {
            if ((v399 | 0x10) > 0xFF)
            {
              __int16 v433 = 12;
              goto LABEL_980;
            }
LABEL_856:
            *(unsigned char *)(v297 + v479) = 12;
          }
          break;
        case 0xDu:
          long long v400 = *(_OWORD *)v294;
          *(void *)(((unint64_t)&a1[v478 + v35] & v467) + 0x10) = *(void *)(((unint64_t)&a2[v478 + v35] & v467)
                                                                                     + 0x10);
          *(_OWORD *)unint64_t v297 = v400;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_860;
          }
          unsigned int v401 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v401))
          {
            *(_DWORD *)(v297 + v479) = 13;
          }
          else
          {
            if ((v401 | 0x10) > 0xFF)
            {
              __int16 v433 = 13;
              goto LABEL_980;
            }
LABEL_860:
            *(unsigned char *)(v297 + v479) = 13;
          }
          break;
        case 0xEu:
          if (*(void *)(((unint64_t)&a2[v478 + v35] & v467) + 0x10) >> 60 == 11)
          {
            long long v402 = *(_OWORD *)v294;
            long long v403 = *(_OWORD *)(((unint64_t)&a2[v478 + v35] & v467) + 0x10);
            long long v404 = *(_OWORD *)(((unint64_t)&a2[v478 + v35] & v467) + 0x20);
            *(void *)(((unint64_t)&a1[v478 + v35] & v467) + 0x30) = *(void *)(((unint64_t)&a2[v478 + v35] & v467)
                                                                                       + 0x30);
            *(_OWORD *)(((unint64_t)&a1[v478 + v35] & v467) + 0x10) = v403;
            *(_OWORD *)(((unint64_t)&a1[v478 + v35] & v467) + 0x20) = v404;
            *(_OWORD *)unint64_t v297 = v402;
            unsigned int v348 = v484;
          }
          else
          {
            *(void *)unint64_t v297 = *(void *)v294;
            unint64_t v422 = (uint64_t *)(v294 + 8);
            unint64_t v423 = *(void *)(((unint64_t)&a2[v478 + v35] & v467) + 0x10);
            if (v423 >> 60 == 15)
            {
              *(_OWORD *)(((unint64_t)&a1[v478 + v35] & v467) + 8) = *(_OWORD *)v422;
            }
            else
            {
              uint64_t v430 = *v422;
              sub_24D3F9C18(*v422, *(void *)(((unint64_t)&a2[v478 + v35] & v467) + 0x10));
              *(void *)(((unint64_t)&a1[v478 + v35] & v467) + 8) = v430;
              *(void *)(((unint64_t)&a1[v478 + v35] & v467) + 0x10) = v423;
              unsigned int v131 = (unsigned char *)v479;
            }
            unint64_t v128 = v292;
            unsigned int v348 = v484;
            long long v431 = *(_OWORD *)(((unint64_t)&a2[v478 + v35] & v467) + 0x18);
            *(unsigned char *)(((unint64_t)&a1[v478 + v35] & v467) + 0x28) = *(unsigned char *)(((unint64_t)&a2[v478 + v35] & v467)
                                                                                     + 0x28);
            *(_OWORD *)(((unint64_t)&a1[v478 + v35] & v467) + 0x18) = v431;
            *(void *)(((unint64_t)&a1[v478 + v35] & v467) + 0x30) = *(void *)(((unint64_t)&a2[v478 + v35] & v467)
                                                                                       + 0x30);
          }
          *(unsigned char *)(((unint64_t)&a1[v478 + v35] & v467) + 0x38) = *(unsigned char *)(((unint64_t)&a2[v478 + v35] & v467)
                                                                                   + 0x38);
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          if (v131 > 3) {
            goto LABEL_934;
          }
          unsigned int v432 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v432))
          {
            *(_DWORD *)&v131[v297] = 14;
          }
          else
          {
            if ((v432 | 0x10) > 0xFF)
            {
              __int16 v433 = 14;
              goto LABEL_980;
            }
LABEL_934:
            v131[v297] = 14;
          }
          break;
        case 0xFu:
          *(unsigned char *)unint64_t v297 = *v294;
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          if (v479 > 3) {
            goto LABEL_866;
          }
          unsigned int v405 = ((1 << v477) | 2u) >> v477;
          if (HIWORD(v405))
          {
            *(_DWORD *)(v297 + v479) = 15;
          }
          else if ((v405 | 0x10) > 0xFF)
          {
            __int16 v433 = 15;
LABEL_980:
            *(_WORD *)&v131[v297] = v433;
          }
          else
          {
LABEL_866:
            *(unsigned char *)(v297 + v479) = 15;
          }
          break;
        default:
          if (v479 > 3) {
            goto LABEL_879;
          }
          unsigned int v417 = ((1 << v477) | 2u) >> v477;
          unsigned int v418 = v417 | 0x10;
          BOOL v25 = HIWORD(v417) == 0;
          uint64_t v419 = 2;
          if (!v25) {
            uint64_t v419 = 4;
          }
          if (v418 <= 0xFF) {
LABEL_879:
          }
            uint64_t v419 = 1;
          memcpy((void *)v297, v294, v419 + v479);
          uint64_t v347 = v485;
          unint64_t v42 = v487;
          unsigned int v348 = v484;
          break;
      }
      uint64_t v2 = a1;
      if (v348 > 3) {
        goto LABEL_985;
      }
      unsigned int v436 = ((1 << (8 * v348)) | 2u) >> (8 * v348);
      unsigned int v437 = v436 | 0x10;
      BOOL v25 = HIWORD(v436) == 0;
      uint64_t v438 = 2;
      if (!v25) {
        uint64_t v438 = 4;
      }
      if (v437 <= 0xFF) {
LABEL_985:
      }
        uint64_t v438 = 1;
      unint64_t v164 = v347 + v438;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v131 <= 3)
      {
        unsigned int v439 = ((1 << v477) | 2u) >> v477;
        unsigned int v440 = v439 | 0x10;
        BOOL v25 = HIWORD(v439) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v440 > 0xFF)
        {
          char v165 = 9;
          goto LABEL_995;
        }
      }
      char v165 = 9;
      goto LABEL_994;
    case 0xAu:
      unsigned int v204 = a2[v486];
      unsigned int v205 = v204 - 2;
      if (v204 < 2)
      {
        unint64_t v207 = v128;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v206 = v486;
        }
        else {
          uint64_t v206 = 4;
        }
        unint64_t v207 = v128;
        switch(v206)
        {
          case 1:
            int v208 = *a2;
            goto LABEL_631;
          case 2:
            int v208 = *(unsigned __int16 *)a2;
            goto LABEL_631;
          case 3:
            int v208 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_631;
          case 4:
            int v208 = *(_DWORD *)a2;
LABEL_631:
            if (v486 < 4) {
              unsigned int v204 = (v208 | (v205 << (8 * v486))) + 2;
            }
            else {
              unsigned int v204 = v208 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v301 = v204 == 1;
      uint64_t v302 = v481;
      if (v204 == 1) {
        uint64_t v302 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v302 + 16))(a1);
      a1[v486] = v301;
      unint64_t v303 = (unint64_t)&a2[v478 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v304 = *(unsigned char *)(v303 + 8);
      unint64_t v305 = (unint64_t)&a1[v478 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v305 = *(void *)v303;
      *(unsigned char *)(v305 + 8) = v304;
      if (v484 > 3) {
        goto LABEL_640;
      }
      unsigned int v306 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v307 = v306 | 0x10;
      BOOL v25 = HIWORD(v306) == 0;
      uint64_t v308 = 2;
      if (!v25) {
        uint64_t v308 = 4;
      }
      if (v307 <= 0xFF) {
LABEL_640:
      }
        uint64_t v308 = 1;
      unint64_t v128 = v207;
      unint64_t v164 = v485 + v308;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v309 = ((1 << v477) | 2u) >> v477;
        unsigned int v310 = v309 | 0x10;
        BOOL v25 = HIWORD(v309) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v310 > 0xFF)
        {
          char v165 = 10;
          goto LABEL_995;
        }
      }
      char v165 = 10;
      goto LABEL_994;
    case 0xBu:
      unsigned int v153 = a2[v486];
      unsigned int v154 = v153 - 2;
      if (v153 < 2)
      {
        unint64_t v156 = v128;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v155 = v486;
        }
        else {
          uint64_t v155 = 4;
        }
        unint64_t v156 = v128;
        switch(v155)
        {
          case 1:
            int v157 = *a2;
            goto LABEL_456;
          case 2:
            int v157 = *(unsigned __int16 *)a2;
            goto LABEL_456;
          case 3:
            int v157 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_456;
          case 4:
            int v157 = *(_DWORD *)a2;
LABEL_456:
            if (v486 < 4) {
              unsigned int v153 = (v157 | (v154 << (8 * v486))) + 2;
            }
            else {
              unsigned int v153 = v157 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v227 = v153 == 1;
      uint64_t v228 = v481;
      if (v153 == 1) {
        uint64_t v228 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v228 + 16))(a1);
      a1[v486] = v227;
      *(_OWORD *)((unint64_t)&a1[v478 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v478 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v484 > 3) {
        goto LABEL_465;
      }
      unsigned int v229 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v230 = v229 | 0x10;
      BOOL v25 = HIWORD(v229) == 0;
      uint64_t v231 = 2;
      if (!v25) {
        uint64_t v231 = 4;
      }
      if (v230 <= 0xFF) {
LABEL_465:
      }
        uint64_t v231 = 1;
      unint64_t v128 = v156;
      unint64_t v164 = v485 + v231;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v232 = ((1 << v477) | 2u) >> v477;
        unsigned int v233 = v232 | 0x10;
        BOOL v25 = HIWORD(v232) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v233 > 0xFF)
        {
          char v165 = 11;
          goto LABEL_995;
        }
      }
      char v165 = 11;
      goto LABEL_994;
    case 0xCu:
      unsigned int v209 = a2[v486];
      unsigned int v210 = v209 - 2;
      if (v209 < 2)
      {
        unint64_t v212 = v128;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v211 = v486;
        }
        else {
          uint64_t v211 = 4;
        }
        unint64_t v212 = v128;
        switch(v211)
        {
          case 1:
            int v213 = *a2;
            goto LABEL_652;
          case 2:
            int v213 = *(unsigned __int16 *)a2;
            goto LABEL_652;
          case 3:
            int v213 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_652;
          case 4:
            int v213 = *(_DWORD *)a2;
LABEL_652:
            if (v486 < 4) {
              unsigned int v209 = (v213 | (v210 << (8 * v486))) + 2;
            }
            else {
              unsigned int v209 = v213 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v311 = v209 == 1;
      uint64_t v312 = v481;
      if (v209 == 1) {
        uint64_t v312 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v312 + 16))(a1);
      a1[v486] = v311;
      a1[v478] = a2[v478];
      if (v484 > 3) {
        goto LABEL_661;
      }
      unsigned int v313 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v314 = v313 | 0x10;
      BOOL v25 = HIWORD(v313) == 0;
      uint64_t v315 = 2;
      if (!v25) {
        uint64_t v315 = 4;
      }
      if (v314 <= 0xFF) {
LABEL_661:
      }
        uint64_t v315 = 1;
      unint64_t v128 = v212;
      unint64_t v164 = v485 + v315;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v316 = ((1 << v477) | 2u) >> v477;
        unsigned int v317 = v316 | 0x10;
        BOOL v25 = HIWORD(v316) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v317 > 0xFF)
        {
          char v165 = 12;
          goto LABEL_995;
        }
      }
      char v165 = 12;
      goto LABEL_994;
    case 0xDu:
      unsigned int v214 = a2[v486];
      unsigned int v215 = v214 - 2;
      if (v214 < 2)
      {
        unint64_t v217 = v128;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v216 = v486;
        }
        else {
          uint64_t v216 = 4;
        }
        unint64_t v217 = v128;
        switch(v216)
        {
          case 1:
            int v218 = *a2;
            goto LABEL_673;
          case 2:
            int v218 = *(unsigned __int16 *)a2;
            goto LABEL_673;
          case 3:
            int v218 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_673;
          case 4:
            int v218 = *(_DWORD *)a2;
LABEL_673:
            if (v486 < 4) {
              unsigned int v214 = (v218 | (v215 << (8 * v486))) + 2;
            }
            else {
              unsigned int v214 = v218 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v318 = v214 == 1;
      uint64_t v319 = v481;
      if (v214 == 1) {
        uint64_t v319 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v319 + 16))(a1);
      a1[v486] = v318;
      unsigned int v320 = (void *)((unint64_t)&a1[v478 + 7] & 0xFFFFFFFFFFFFFFF8);
      unsigned int v321 = (void *)((unint64_t)&a2[v478 + 7] & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v320 = *v321;
      *(void *)(((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v321 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v484 > 3) {
        goto LABEL_682;
      }
      unsigned int v322 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v323 = v322 | 0x10;
      BOOL v25 = HIWORD(v322) == 0;
      uint64_t v324 = 2;
      if (!v25) {
        uint64_t v324 = 4;
      }
      if (v323 <= 0xFF) {
LABEL_682:
      }
        uint64_t v324 = 1;
      unint64_t v128 = v217;
      unint64_t v164 = v485 + v324;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v325 = ((1 << v477) | 2u) >> v477;
        unsigned int v326 = v325 | 0x10;
        BOOL v25 = HIWORD(v325) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v326 > 0xFF)
        {
          char v165 = 13;
          goto LABEL_995;
        }
      }
      char v165 = 13;
      goto LABEL_994;
    default:
      unsigned int v148 = a2[v486];
      unsigned int v149 = v148 - 2;
      if (v148 < 2)
      {
        unint64_t v151 = v128;
      }
      else
      {
        if (v486 <= 3) {
          uint64_t v150 = v486;
        }
        else {
          uint64_t v150 = 4;
        }
        unint64_t v151 = v128;
        switch(v150)
        {
          case 1:
            int v152 = *a2;
            goto LABEL_435;
          case 2:
            int v152 = *(unsigned __int16 *)a2;
            goto LABEL_435;
          case 3:
            int v152 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_435;
          case 4:
            int v152 = *(_DWORD *)a2;
LABEL_435:
            if (v486 < 4) {
              unsigned int v148 = (v152 | (v149 << (8 * v486))) + 2;
            }
            else {
              unsigned int v148 = v152 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v220 = v148 == 1;
      uint64_t v221 = v481;
      if (v148 == 1) {
        uint64_t v221 = v480;
      }
      (*(void (**)(unsigned __int8 *))(v221 + 16))(a1);
      a1[v486] = v220;
      a1[v478] = a2[v478];
      if (v484 > 3) {
        goto LABEL_444;
      }
      unsigned int v222 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v223 = v222 | 0x10;
      BOOL v25 = HIWORD(v222) == 0;
      uint64_t v224 = 2;
      if (!v25) {
        uint64_t v224 = 4;
      }
      if (v223 <= 0xFF) {
LABEL_444:
      }
        uint64_t v224 = 1;
      unint64_t v128 = v151;
      unint64_t v164 = v485 + v224;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v479 <= 3)
      {
        unsigned int v225 = ((1 << v477) | 2u) >> v477;
        unsigned int v226 = v225 | 0x10;
        BOOL v25 = HIWORD(v225) == 0;
        uint64_t v168 = 2;
        if (!v25) {
          uint64_t v168 = 4;
        }
        if (v226 > 0xFF)
        {
          char v165 = 0;
          goto LABEL_995;
        }
      }
      char v165 = 0;
      goto LABEL_994;
  }
LABEL_739:
  switch(v284)
  {
    case 0u:
      long long v341 = *(_OWORD *)v283;
      *(void *)(((unint64_t)&a1[v465] & v469) + 0x10) = *(void *)(((unint64_t)&a2[v465] & v469) + 0x10);
      *long long v286 = v341;
      LODWORD(v343) = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_743;
      }
      unsigned int v344 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v344 | 0x10;
      if (HIWORD(v344))
      {
        *(_DWORD *)((char *)v286 + v484) = 0;
      }
      else
      {
        if (v345 <= 0xFF)
        {
LABEL_743:
          *((unsigned char *)v286 + v484) = 0;
          goto LABEL_924;
        }
        *(_WORD *)((char *)v286 + v484) = 0;
      }
      goto LABEL_968;
    case 1u:
      *(void *)long long v286 = *(void *)v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_758;
      }
      __int16 v350 = 1;
      unsigned int v351 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v351 | 0x10;
      if (HIWORD(v351))
      {
        *(_DWORD *)((char *)v286 + v484) = 1;
        goto LABEL_968;
      }
      if (v345 > 0xFF) {
        goto LABEL_967;
      }
LABEL_758:
      char v352 = 1;
      goto LABEL_923;
    case 2u:
      *long long v286 = *(_OWORD *)v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_762;
      }
      unsigned int v353 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v353 | 0x10;
      if (HIWORD(v353))
      {
        *(_DWORD *)((char *)v286 + v484) = 2;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_762:
        char v352 = 2;
        goto LABEL_923;
      }
      __int16 v350 = 2;
      goto LABEL_967;
    case 3u:
      *(unsigned char *)long long v286 = *v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_766;
      }
      unsigned int v354 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v354 | 0x10;
      if (HIWORD(v354))
      {
        *(_DWORD *)((char *)v286 + v484) = 3;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_766:
        char v352 = 3;
        goto LABEL_923;
      }
      __int16 v350 = 3;
      goto LABEL_967;
    case 4u:
      *(unsigned char *)long long v286 = *v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_770;
      }
      unsigned int v355 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v355 | 0x10;
      if (HIWORD(v355))
      {
        *(_DWORD *)((char *)v286 + v484) = 4;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_770:
        char v352 = 4;
        goto LABEL_923;
      }
      __int16 v350 = 4;
      goto LABEL_967;
    case 5u:
      *(unsigned char *)long long v286 = *v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_774;
      }
      unsigned int v356 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v356 | 0x10;
      if (HIWORD(v356))
      {
        *(_DWORD *)((char *)v286 + v484) = 5;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_774:
        char v352 = 5;
        goto LABEL_923;
      }
      __int16 v350 = 5;
      goto LABEL_967;
    case 6u:
      *(unsigned char *)long long v286 = *v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_778;
      }
      unsigned int v357 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v357 | 0x10;
      if (HIWORD(v357))
      {
        *(_DWORD *)((char *)v286 + v484) = 6;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_778:
        char v352 = 6;
        goto LABEL_923;
      }
      __int16 v350 = 6;
      goto LABEL_967;
    case 7u:
      *(unsigned char *)long long v286 = *v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_782;
      }
      unsigned int v358 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v358 | 0x10;
      if (HIWORD(v358))
      {
        *(_DWORD *)((char *)v286 + v484) = 7;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_782:
        char v352 = 7;
        goto LABEL_923;
      }
      __int16 v350 = 7;
      goto LABEL_967;
    case 8u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v451 + 16))(v286, v283, v452);
      unint64_t v409 = (void *)(((unint64_t)v286 + v448) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v410 = (void *)((unint64_t)&v283[v448] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v409 = *v410;
      unsigned int v131 = (unsigned char *)(((unint64_t)v409 + v449) & v447);
      unint64_t v488 = v128;
      unint64_t v411 = ((unint64_t)v410 + v449) & v447;
      unint64_t v412 = *(void (**)(unsigned char *, unint64_t, uint64_t))(v453 + 16);
      swift_bridgeObjectRetain();
      v412(v131, v411, v454);
      long long v413 = (void *)((unint64_t)&v131[v450] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v414 = v450 + v411;
      unint64_t v128 = v488;
      v414 &= 0xFFFFFFFFFFFFFFF8;
      void *v413 = *(void *)v414;
      uint64_t v415 = (void *)(((unint64_t)v413 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v416 = (void *)((v414 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v415 = *v416;
      v415[1] = v416[1];
      *((unsigned char *)v286 + v445) = v283[v445];
      *(unsigned char *)(((unint64_t)v286 + v445) | 1) = *(unsigned char *)((unint64_t)&v283[v445] | 1);
      swift_bridgeObjectRetain();
      LODWORD(v131) = v479;
      swift_bridgeObjectRetain();
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_874;
      }
      unsigned int v424 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v424 | 0x10;
      if (HIWORD(v424))
      {
        *(_DWORD *)((char *)v286 + v484) = 8;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_874:
        char v352 = 8;
        goto LABEL_923;
      }
      __int16 v350 = 8;
      goto LABEL_967;
    case 9u:
      unsigned int v359 = *(void **)v283;
      *(void *)long long v286 = *(void *)v283;
      id v360 = v359;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_786;
      }
      unsigned int v361 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v361 | 0x10;
      if (HIWORD(v361))
      {
        *(_DWORD *)((char *)v286 + v484) = 9;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_786:
        char v352 = 9;
        goto LABEL_923;
      }
      __int16 v350 = 9;
      goto LABEL_967;
    case 0xAu:
      *(unsigned char *)long long v286 = *v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_790;
      }
      unsigned int v362 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v362 | 0x10;
      if (HIWORD(v362))
      {
        *(_DWORD *)((char *)v286 + v484) = 10;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_790:
        char v352 = 10;
        goto LABEL_923;
      }
      __int16 v350 = 10;
      goto LABEL_967;
    case 0xBu:
      *(_WORD *)long long v286 = *(_WORD *)v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_794;
      }
      unsigned int v363 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v363 | 0x10;
      if (HIWORD(v363))
      {
        *(_DWORD *)((char *)v286 + v484) = 11;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_794:
        char v352 = 11;
        goto LABEL_923;
      }
      __int16 v350 = 11;
      goto LABEL_967;
    case 0xCu:
      unsigned int v364 = *(void **)v283;
      unsigned int v131 = *(unsigned char **)(((unint64_t)&a2[v465] & v469) + 8);
      char v365 = *(unsigned char *)(((unint64_t)&a2[v465] & v469) + 0x10);
      sub_24D3F1C98(v364, v131, v365);
      *(void *)long long v286 = v364;
      *(void *)(((unint64_t)&a1[v465] & v469) + 8) = v131;
      unint64_t v128 = v282;
      LODWORD(v131) = v479;
      *(unsigned char *)(((unint64_t)&a1[v465] & v469) + 0x10) = v365;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_798;
      }
      unsigned int v366 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v366 | 0x10;
      if (HIWORD(v366))
      {
        *(_DWORD *)((char *)v286 + v484) = 12;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_798:
        char v352 = 12;
        goto LABEL_923;
      }
      __int16 v350 = 12;
      goto LABEL_967;
    case 0xDu:
      long long v367 = *(_OWORD *)v283;
      *(void *)(((unint64_t)&a1[v465] & v469) + 0x10) = *(void *)(((unint64_t)&a2[v465] & v469) + 0x10);
      *long long v286 = v367;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_802;
      }
      unsigned int v368 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v368 | 0x10;
      if (HIWORD(v368))
      {
        *(_DWORD *)((char *)v286 + v484) = 13;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_802:
        char v352 = 13;
        goto LABEL_923;
      }
      __int16 v350 = 13;
      goto LABEL_967;
    case 0xEu:
      if (*(void *)(((unint64_t)&a2[v465] & v469) + 0x10) >> 60 == 11)
      {
        long long v369 = *(_OWORD *)v283;
        long long v370 = *(_OWORD *)(((unint64_t)&a2[v465] & v469) + 0x10);
        long long v371 = *(_OWORD *)(((unint64_t)&a2[v465] & v469) + 0x20);
        *(void *)(((unint64_t)&a1[v465] & v469) + 0x30) = *(void *)(((unint64_t)&a2[v465] & v469)
                                                                             + 0x30);
        *(_OWORD *)(((unint64_t)&a1[v465] & v469) + 0x10) = v370;
        *(_OWORD *)(((unint64_t)&a1[v465] & v469) + 0x20) = v371;
        *long long v286 = v369;
        uint64_t v343 = v484;
      }
      else
      {
        *(void *)long long v286 = *(void *)v283;
        unint64_t v420 = (uint64_t *)(v283 + 8);
        unint64_t v421 = *(void *)(((unint64_t)&a2[v465] & v469) + 0x10);
        if (v421 >> 60 == 15)
        {
          *(_OWORD *)(((unint64_t)&a1[v465] & v469) + 8) = *(_OWORD *)v420;
        }
        else
        {
          unsigned int v131 = (unsigned char *)*v420;
          sub_24D3F9C18(*v420, *(void *)(((unint64_t)&a2[v465] & v469) + 0x10));
          *(void *)(((unint64_t)&a1[v465] & v469) + 8) = v131;
          *(void *)(((unint64_t)&a1[v465] & v469) + 0x10) = v421;
          LODWORD(v131) = v479;
        }
        unint64_t v128 = v282;
        uint64_t v343 = v484;
        long long v425 = *(_OWORD *)(((unint64_t)&a2[v465] & v469) + 0x18);
        *(unsigned char *)(((unint64_t)&a1[v465] & v469) + 0x28) = *(unsigned char *)(((unint64_t)&a2[v465] & v469) + 0x28);
        *(_OWORD *)(((unint64_t)&a1[v465] & v469) + 0x18) = v425;
        *(void *)(((unint64_t)&a1[v465] & v469) + 0x30) = *(void *)(((unint64_t)&a2[v465] & v469)
                                                                             + 0x30);
      }
      *(unsigned char *)(((unint64_t)&a1[v465] & v469) + 0x38) = *(unsigned char *)(((unint64_t)&a2[v465] & v469) + 0x38);
      unint64_t v42 = v279;
      uint64_t v342 = v485;
      if (v343 > 3) {
        goto LABEL_922;
      }
      unsigned int v426 = ((1 << (8 * v343)) | 2u) >> (8 * v343);
      unsigned int v345 = v426 | 0x10;
      if (HIWORD(v426))
      {
        *(_DWORD *)((char *)v286 + v343) = 14;
        goto LABEL_968;
      }
      if (v345 <= 0xFF)
      {
LABEL_922:
        char v352 = 14;
        goto LABEL_923;
      }
      __int16 v350 = 14;
      goto LABEL_967;
    case 0xFu:
      *(unsigned char *)long long v286 = *v283;
      uint64_t v343 = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      if (v484 > 3) {
        goto LABEL_808;
      }
      unsigned int v372 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v345 = v372 | 0x10;
      if (HIWORD(v372))
      {
        *(_DWORD *)((char *)v286 + v484) = 15;
LABEL_968:
        BOOL v25 = HIWORD(v345) == 0;
        uint64_t v429 = 2;
        if (!v25) {
          uint64_t v429 = 4;
        }
        uint64_t v2 = a1;
        goto LABEL_971;
      }
      if (v345 > 0xFF)
      {
        __int16 v350 = 15;
LABEL_967:
        *(_WORD *)((char *)v286 + v343) = v350;
        goto LABEL_968;
      }
LABEL_808:
      char v352 = 15;
LABEL_923:
      *((unsigned char *)v286 + v343) = v352;
LABEL_924:
      uint64_t v2 = a1;
      if (v343 > 3) {
        goto LABEL_928;
      }
      unsigned int v427 = ((1 << (8 * v343)) | 2u) >> (8 * v343);
      unsigned int v428 = v427 | 0x10;
      BOOL v25 = HIWORD(v427) == 0;
      uint64_t v429 = 2;
      if (!v25) {
        uint64_t v429 = 4;
      }
      if (v428 <= 0xFF) {
LABEL_928:
      }
        uint64_t v429 = 1;
LABEL_971:
      unint64_t v164 = v342 + v429;
      if (v164 <= v489) {
        unint64_t v164 = v489;
      }
      if (v131 > 3) {
        goto LABEL_978;
      }
      unsigned int v434 = ((1 << v477) | 2u) >> v477;
      unsigned int v435 = v434 | 0x10;
      BOOL v25 = HIWORD(v434) == 0;
      uint64_t v168 = 2;
      if (!v25) {
        uint64_t v168 = 4;
      }
      if (v435 <= 0xFF)
      {
LABEL_978:
        char v165 = 8;
LABEL_994:
        uint64_t v168 = 1;
        goto LABEL_995;
      }
      char v165 = 8;
LABEL_995:
      unint64_t v441 = v128 + v168;
      if (v441 > v164) {
        unint64_t v164 = v441;
      }
      if (v40 > v164) {
        unint64_t v164 = v40;
      }
      if (v56 > v164) {
        unint64_t v164 = v56;
      }
      if (v47 > v164) {
        unint64_t v164 = v47;
      }
      if (v42 > v164) {
        unint64_t v164 = v42;
      }
      v2[v164] = v165;
      return v2;
    default:
      if (v484 > 3) {
        goto LABEL_871;
      }
      unsigned int v406 = ((1 << (8 * v484)) | 2u) >> (8 * v484);
      unsigned int v407 = v406 | 0x10;
      BOOL v25 = HIWORD(v406) == 0;
      uint64_t v408 = 2;
      if (!v25) {
        uint64_t v408 = 4;
      }
      if (v407 <= 0xFF) {
LABEL_871:
      }
        uint64_t v408 = 1;
      memcpy(v286, v283, v408 + v484);
      LODWORD(v343) = v484;
      uint64_t v342 = v485;
      unint64_t v42 = v279;
      goto LABEL_924;
  }
}

uint64_t sub_24D4D3044(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= v3) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = *(void *)(v4 + 64);
  }
  unint64_t v7 = v6 + 1;
  uint64_t v393 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v8 = *(_DWORD *)(v4 + 80);
  uint64_t v9 = *(_DWORD *)(v4 + 80);
  uint64_t v376 = v3 + v9;
  uint64_t v377 = *(void *)(v4 + 64);
  uint64_t v384 = v9;
  unint64_t v10 = v5 + ((v3 + v9) & ~v9);
  unint64_t v400 = v6 + 2;
  if (v10 + 1 > v6 + 2) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v6 + 2;
  }
  if (v7 > v11) {
    unint64_t v11 = v6 + 1;
  }
  unint64_t v390 = v6;
  unint64_t v12 = v6 & 0xFFFFFFFFFFFFFFF8;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 16 > v11) {
    unint64_t v11 = (v6 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v394 = v2;
  uint64_t v13 = *(unsigned __int8 *)(v2 + 80) | v8;
  uint64_t v378 = v7 + v13;
  uint64_t v382 = v13;
  if (((v7 + v13) & ~v13) + v7 <= v11) {
    unint64_t v14 = v11;
  }
  else {
    unint64_t v14 = ((v7 + v13) & ~v13) + v7;
  }
  uint64_t v371 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v371 - 8);
  uint64_t v369 = v15;
  int v16 = *(_DWORD *)(v15 + 80) & 0xF8;
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(unsigned __int8 *)(*(void *)(v17 - 8) + 80);
  uint64_t v19 = v16 | v18 | 7;
  unint64_t v399 = v7;
  uint64_t v20 = v7 + v19;
  unint64_t v21 = (v7 + v19) & ~v19;
  uint64_t v22 = *(void *)(v15 + 64) + 7;
  uint64_t v23 = *(void *)(*(void *)(v17 - 8) + 64) + 7;
  unint64_t v24 = (((v23 + ((v18 + 8 + (v22 & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v24 + 18 <= 0x39) {
    uint64_t v25 = 57;
  }
  else {
    uint64_t v25 = v24 + 18;
  }
  uint64_t v372 = v17;
  uint64_t v370 = *(void *)(v17 - 8);
  uint64_t v367 = v18 + 8;
  uint64_t v368 = *(void *)(v370 + 64) + 7;
  uint64_t v366 = *(void *)(v15 + 64) + 7;
  uint64_t v375 = v20;
  unint64_t v386 = (((v23 + ((v18 + 8 + (v22 & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v25 > 3) {
    goto LABEL_21;
  }
  unsigned int v26 = ((1 << (8 * v25)) | 2u) >> (8 * v25);
  unsigned int v27 = v26 | 0x10;
  BOOL v28 = HIWORD(v26) == 0;
  uint64_t v29 = 2;
  if (!v28) {
    uint64_t v29 = 4;
  }
  if (v27 <= 0xFF) {
LABEL_21:
  }
    uint64_t v29 = 1;
  unint64_t v397 = v14;
  unint64_t v398 = v25 + v21;
  unint64_t v30 = v25 + v21 + v29;
  if (v30 <= v14) {
    unint64_t v31 = v14;
  }
  else {
    unint64_t v31 = v30;
  }
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v373 = v33;
  uint64_t v374 = v32;
  int v34 = *(_DWORD *)(v33 + 80) & 0xF8;
  uint64_t v35 = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(unsigned __int8 *)(*(void *)(v35 - 8) + 80);
  uint64_t v37 = v34 | v36 | 7;
  unint64_t v38 = (v7 + v37) & ~v37;
  uint64_t v39 = *(void *)(v33 + 64) + 7;
  uint64_t v40 = v36 + 8;
  uint64_t v41 = *(void *)(*(void *)(v35 - 8) + 64) + 7;
  unint64_t v42 = (((v41 + ((v36 + 8 + (v39 & 0xFFFFFFFFFFFFFFF8)) & ~v36)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v42 + 18 <= 0x39) {
    uint64_t v43 = 57;
  }
  else {
    uint64_t v43 = v42 + 18;
  }
  if (v43 <= 3) {
    unsigned int v44 = (((1 << (8 * v43)) | 2u) >> (8 * v43)) | 0x10;
  }
  else {
    unsigned int v44 = 17;
  }
  unint64_t v45 = v12 + 17;
  unint64_t v46 = v12 + 24;
  unint64_t v47 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v48 = 4;
  if (v44 < 0x10000) {
    uint64_t v48 = 2;
  }
  if (v44 < 0x100) {
    uint64_t v49 = 1;
  }
  else {
    uint64_t v49 = v48;
  }
  unint64_t v50 = v43 + v38;
  unint64_t v51 = v43 + v38 + v49;
  if (v51 <= v31) {
    unint64_t v51 = v31;
  }
  if (v45 > v51) {
    unint64_t v51 = v12 + 17;
  }
  if (v46 > v51) {
    unint64_t v51 = v12 + 24;
  }
  if (v400 > v51) {
    unint64_t v51 = v400;
  }
  if (v47 > v51) {
    unint64_t v51 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unsigned int v52 = a2[v51];
  unsigned int v53 = v52 - 14;
  unint64_t v379 = v12 + 24;
  unint64_t v380 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v396 = v25;
  if (v52 < 0xE)
  {
    uint64_t v59 = v382;
    uint64_t v58 = v384;
    uint64_t v60 = v16 | v18 | 7;
    unint64_t v54 = v386;
  }
  else
  {
    unint64_t v54 = v386;
    if (v25 > 3) {
      goto LABEL_51;
    }
    unsigned int v55 = ((1 << (8 * v25)) | 2u) >> (8 * v25);
    unsigned int v56 = v55 | 0x10;
    BOOL v28 = HIWORD(v55) == 0;
    uint64_t v57 = 2;
    if (!v28) {
      uint64_t v57 = 4;
    }
    if (v56 <= 0xFF) {
LABEL_51:
    }
      uint64_t v57 = 1;
    uint64_t v59 = v382;
    uint64_t v58 = v384;
    uint64_t v60 = v16 | v18 | 7;
    unint64_t v61 = v398 + v57;
    if (v61 <= v397) {
      unint64_t v61 = v397;
    }
    if (v43 > 3) {
      goto LABEL_58;
    }
    unsigned int v62 = ((1 << (8 * v43)) | 2u) >> (8 * v43);
    unsigned int v63 = v62 | 0x10;
    BOOL v28 = HIWORD(v62) == 0;
    uint64_t v64 = 2;
    if (!v28) {
      uint64_t v64 = 4;
    }
    if (v63 <= 0xFF) {
LABEL_58:
    }
      uint64_t v64 = 1;
    unint64_t v65 = v50 + v64;
    if (v65 > v61) {
      unint64_t v61 = v65;
    }
    if (v45 > v61) {
      unint64_t v61 = v12 + 17;
    }
    if (v46 > v61) {
      unint64_t v61 = v12 + 24;
    }
    if (v400 > v61) {
      unint64_t v61 = v400;
    }
    if (v47 > v61) {
      LODWORD(v61) = ((v12 + 23) & 0xFFFFFFF8) + 8;
    }
    if (v61 <= 3) {
      uint64_t v66 = v61;
    }
    else {
      uint64_t v66 = 4;
    }
    switch(v66)
    {
      case 1:
        int v67 = *a2;
        if (v61 < 4) {
          goto LABEL_81;
        }
        goto LABEL_82;
      case 2:
        int v67 = *(unsigned __int16 *)a2;
        if (v61 >= 4) {
          goto LABEL_82;
        }
        goto LABEL_81;
      case 3:
        int v67 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v61 >= 4) {
          goto LABEL_82;
        }
        goto LABEL_81;
      case 4:
        int v67 = *(_DWORD *)a2;
        if (v61 < 4) {
LABEL_81:
        }
          v67 |= v53 << (8 * v61);
LABEL_82:
        unsigned int v52 = v67 + 14;
        break;
      default:
        break;
    }
  }
  uint64_t v388 = v43;
  char v381 = 8 * v43;
  unint64_t v383 = v50;
  unint64_t v385 = v12 + 17;
  uint64_t v68 = ~v58;
  uint64_t v69 = ~v59;
  uint64_t v70 = ~v60;
  uint64_t v71 = ~v18;
  unint64_t v72 = v54 + 16;
  uint64_t v73 = ~v37;
  uint64_t v74 = ~v36;
  unint64_t v75 = v42 + 16;
  switch(v52)
  {
    case 1u:
      uint64_t v80 = a1;
      (*(void (**)(uint64_t))(v394 + 32))(a1);
      uint64_t v91 = (v376 + a1) & v68;
      unint64_t v92 = (unint64_t)&a2[v376] & v68;
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v393 + 32))(v91, v92, AssociatedTypeWitness);
      *(unsigned char *)(v91 + v377) = *(unsigned char *)(v92 + v377);
      if (v396 > 3) {
        goto LABEL_100;
      }
      unsigned int v93 = ((1 << (8 * v396)) | 2u) >> (8 * v396);
      unsigned int v94 = v93 | 0x10;
      BOOL v28 = HIWORD(v93) == 0;
      uint64_t v95 = 2;
      if (!v28) {
        uint64_t v95 = 4;
      }
      if (v94 <= 0xFF) {
LABEL_100:
      }
        uint64_t v95 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v82 = v383;
      unint64_t v81 = v385;
      unint64_t v98 = v398 + v95;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v388 > 3) {
        goto LABEL_107;
      }
      char v99 = 1;
      unsigned int v100 = ((1 << v381) | 2u) >> v381;
      unsigned int v101 = v100 | 0x10;
      BOOL v28 = HIWORD(v100) == 0;
      uint64_t v102 = 2;
      if (!v28) {
        uint64_t v102 = 4;
      }
      if (v101 <= 0xFF)
      {
LABEL_107:
        uint64_t v102 = 1;
        char v99 = 1;
      }
      goto LABEL_738;
    case 2u:
      unsigned int v103 = a2[v390];
      unsigned int v104 = v103 - 2;
      if (v103 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v106 = v43;
        unsigned int v107 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v105 = v390;
        }
        else {
          uint64_t v105 = 4;
        }
        unsigned int v106 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v107 = v396;
        switch(v105)
        {
          case 1:
            int v108 = *a2;
            goto LABEL_232;
          case 2:
            int v108 = *(unsigned __int16 *)a2;
            goto LABEL_232;
          case 3:
            int v108 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_232;
          case 4:
            int v108 = *(_DWORD *)a2;
LABEL_232:
            if (v390 < 4) {
              unsigned int v103 = (v108 | (v104 << (8 * v390))) + 2;
            }
            else {
              unsigned int v103 = v108 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v182 = v103 == 1;
      uint64_t v183 = v394;
      if (v103 == 1) {
        uint64_t v183 = v393;
      }
      (*(void (**)(uint64_t))(v183 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v182;
      *(unsigned char *)(v399 + v80) = a2[v399];
      if (v107 > 3) {
        goto LABEL_241;
      }
      unsigned int v184 = ((1 << (8 * v107)) | 2u) >> (8 * v107);
      unsigned int v185 = v184 | 0x10;
      BOOL v28 = HIWORD(v184) == 0;
      uint64_t v186 = 2;
      if (!v28) {
        uint64_t v186 = 4;
      }
      if (v185 <= 0xFF) {
LABEL_241:
      }
        uint64_t v186 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v186;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v106 <= 3)
      {
        unsigned int v187 = ((1 << v381) | 2u) >> v381;
        unsigned int v188 = v187 | 0x10;
        BOOL v28 = HIWORD(v187) == 0;
        char v99 = 2;
        uint64_t v102 = 4;
        if (v28) {
          uint64_t v102 = 2;
        }
        if (v188 > 0xFF) {
          goto LABEL_738;
        }
      }
      char v99 = 2;
      goto LABEL_737;
    case 3u:
      unsigned int v109 = a2[v390];
      unsigned int v110 = v109 - 2;
      if (v109 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v112 = v43;
        unsigned int v113 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v111 = v390;
        }
        else {
          uint64_t v111 = 4;
        }
        unsigned int v112 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v113 = v396;
        switch(v111)
        {
          case 1:
            int v114 = *a2;
            goto LABEL_253;
          case 2:
            int v114 = *(unsigned __int16 *)a2;
            goto LABEL_253;
          case 3:
            int v114 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_253;
          case 4:
            int v114 = *(_DWORD *)a2;
LABEL_253:
            if (v390 < 4) {
              unsigned int v109 = (v114 | (v110 << (8 * v390))) + 2;
            }
            else {
              unsigned int v109 = v114 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v189 = v109 == 1;
      uint64_t v190 = v394;
      if (v109 == 1) {
        uint64_t v190 = v393;
      }
      (*(void (**)(uint64_t))(v190 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v189;
      if (v113 > 3) {
        goto LABEL_262;
      }
      unsigned int v191 = ((1 << (8 * v113)) | 2u) >> (8 * v113);
      unsigned int v192 = v191 | 0x10;
      BOOL v28 = HIWORD(v191) == 0;
      uint64_t v193 = 2;
      if (!v28) {
        uint64_t v193 = 4;
      }
      if (v192 <= 0xFF) {
LABEL_262:
      }
        uint64_t v193 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v193;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v112 <= 3)
      {
        unsigned int v194 = ((1 << v381) | 2u) >> v381;
        unsigned int v195 = v194 | 0x10;
        BOOL v28 = HIWORD(v194) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v195 > 0xFF)
        {
          char v99 = 3;
          goto LABEL_738;
        }
      }
      char v99 = 3;
      goto LABEL_737;
    case 4u:
      unsigned int v115 = a2[v390];
      unsigned int v116 = v115 - 2;
      if (v115 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v118 = v43;
        unsigned int v119 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v117 = v390;
        }
        else {
          uint64_t v117 = 4;
        }
        unsigned int v118 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v119 = v396;
        switch(v117)
        {
          case 1:
            int v120 = *a2;
            goto LABEL_274;
          case 2:
            int v120 = *(unsigned __int16 *)a2;
            goto LABEL_274;
          case 3:
            int v120 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_274;
          case 4:
            int v120 = *(_DWORD *)a2;
LABEL_274:
            if (v390 < 4) {
              unsigned int v115 = (v120 | (v116 << (8 * v390))) + 2;
            }
            else {
              unsigned int v115 = v120 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v196 = v115 == 1;
      uint64_t v197 = v394;
      if (v115 == 1) {
        uint64_t v197 = v393;
      }
      (*(void (**)(uint64_t))(v197 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v196;
      *(void *)((v80 + v399 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v399 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v119 > 3) {
        goto LABEL_283;
      }
      unsigned int v198 = ((1 << (8 * v119)) | 2u) >> (8 * v119);
      unsigned int v199 = v198 | 0x10;
      BOOL v28 = HIWORD(v198) == 0;
      uint64_t v200 = 2;
      if (!v28) {
        uint64_t v200 = 4;
      }
      if (v199 <= 0xFF) {
LABEL_283:
      }
        uint64_t v200 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v200;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v118 <= 3)
      {
        unsigned int v201 = ((1 << v381) | 2u) >> v381;
        unsigned int v202 = v201 | 0x10;
        BOOL v28 = HIWORD(v201) == 0;
        uint64_t v102 = 2;
        char v99 = 4;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v202 > 0xFF) {
          goto LABEL_738;
        }
      }
      char v99 = 4;
      goto LABEL_737;
    case 5u:
      unsigned int v121 = a2[v390];
      unsigned int v122 = v121 - 2;
      if (v121 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v124 = v43;
        unsigned int v125 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v123 = v390;
        }
        else {
          uint64_t v123 = 4;
        }
        unsigned int v124 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v125 = v396;
        switch(v123)
        {
          case 1:
            int v126 = *a2;
            goto LABEL_294;
          case 2:
            int v126 = *(unsigned __int16 *)a2;
            goto LABEL_294;
          case 3:
            int v126 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_294;
          case 4:
            int v126 = *(_DWORD *)a2;
LABEL_294:
            if (v390 < 4) {
              unsigned int v121 = (v126 | (v122 << (8 * v390))) + 2;
            }
            else {
              unsigned int v121 = v126 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v203 = v121 == 1;
      uint64_t v204 = v394;
      if (v121 == 1) {
        uint64_t v204 = v393;
      }
      (*(void (**)(uint64_t))(v204 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v203;
      *(void *)((v80 + v399 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v399 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v125 > 3) {
        goto LABEL_303;
      }
      unsigned int v205 = ((1 << (8 * v125)) | 2u) >> (8 * v125);
      unsigned int v206 = v205 | 0x10;
      BOOL v28 = HIWORD(v205) == 0;
      uint64_t v207 = 2;
      if (!v28) {
        uint64_t v207 = 4;
      }
      if (v206 <= 0xFF) {
LABEL_303:
      }
        uint64_t v207 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v207;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v124 <= 3)
      {
        unsigned int v208 = ((1 << v381) | 2u) >> v381;
        unsigned int v209 = v208 | 0x10;
        BOOL v28 = HIWORD(v208) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v209 > 0xFF)
        {
          char v99 = 5;
          goto LABEL_738;
        }
      }
      char v99 = 5;
      goto LABEL_737;
    case 6u:
      unsigned int v127 = a2[v390];
      unsigned int v128 = v127 - 2;
      if (v127 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unsigned int v130 = v43;
        unsigned int v131 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v129 = v390;
        }
        else {
          uint64_t v129 = 4;
        }
        unsigned int v130 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unsigned int v131 = v396;
        switch(v129)
        {
          case 1:
            int v132 = *a2;
            goto LABEL_315;
          case 2:
            int v132 = *(unsigned __int16 *)a2;
            goto LABEL_315;
          case 3:
            int v132 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_315;
          case 4:
            int v132 = *(_DWORD *)a2;
LABEL_315:
            if (v390 < 4) {
              unsigned int v127 = (v132 | (v128 << (8 * v390))) + 2;
            }
            else {
              unsigned int v127 = v132 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v210 = v127 == 1;
      uint64_t v211 = v394;
      if (v127 == 1) {
        uint64_t v211 = v393;
      }
      (*(void (**)(uint64_t))(v211 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v210;
      uint64_t v212 = (v378 + v80) & v69;
      int v213 = (unsigned __int8 *)((unint64_t)&a2[v378] & v69);
      unsigned int v214 = v213[v390];
      unsigned int v215 = v214 - 2;
      if (v214 < 2)
      {
        unint64_t v81 = v385;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v216 = v390;
        }
        else {
          uint64_t v216 = 4;
        }
        unint64_t v81 = v385;
        switch(v216)
        {
          case 1:
            int v217 = *v213;
            goto LABEL_449;
          case 2:
            int v217 = *(unsigned __int16 *)v213;
            goto LABEL_449;
          case 3:
            int v217 = *(unsigned __int16 *)v213 | (v213[2] << 16);
            goto LABEL_449;
          case 4:
            int v217 = *(_DWORD *)v213;
LABEL_449:
            if (v390 < 4) {
              unsigned int v214 = (v217 | (v215 << (8 * v390))) + 2;
            }
            else {
              unsigned int v214 = v217 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v271 = v214 == 1;
      uint64_t v272 = v394;
      if (v214 == 1) {
        uint64_t v272 = v393;
      }
      (*(void (**)(uint64_t))(v272 + 32))(v212);
      *(unsigned char *)(v212 + v390) = v271;
      if (v131 > 3) {
        goto LABEL_458;
      }
      unsigned int v273 = ((1 << (8 * v131)) | 2u) >> (8 * v131);
      unsigned int v274 = v273 | 0x10;
      BOOL v28 = HIWORD(v273) == 0;
      uint64_t v275 = 2;
      if (!v28) {
        uint64_t v275 = 4;
      }
      if (v274 <= 0xFF) {
LABEL_458:
      }
        uint64_t v275 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v275;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v130 <= 3)
      {
        unsigned int v276 = ((1 << v381) | 2u) >> v381;
        unsigned int v277 = v276 | 0x10;
        BOOL v28 = HIWORD(v276) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v277 > 0xFF)
        {
          char v99 = 6;
          goto LABEL_738;
        }
      }
      char v99 = 6;
      goto LABEL_737;
    case 7u:
      unsigned int v133 = a2[v390];
      unsigned int v134 = v133 - 2;
      if (v133 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unsigned int v136 = v43;
        unsigned int v137 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v135 = v390;
        }
        else {
          uint64_t v135 = 4;
        }
        unsigned int v136 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unsigned int v137 = v396;
        switch(v135)
        {
          case 1:
            int v138 = *a2;
            goto LABEL_330;
          case 2:
            int v138 = *(unsigned __int16 *)a2;
            goto LABEL_330;
          case 3:
            int v138 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_330;
          case 4:
            int v138 = *(_DWORD *)a2;
LABEL_330:
            if (v390 < 4) {
              unsigned int v133 = (v138 | (v134 << (8 * v390))) + 2;
            }
            else {
              unsigned int v133 = v138 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v218 = v133 == 1;
      uint64_t v219 = v394;
      if (v133 == 1) {
        uint64_t v219 = v393;
      }
      (*(void (**)(uint64_t))(v219 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v218;
      uint64_t v220 = (v378 + v80) & v69;
      uint64_t v221 = (unsigned __int8 *)((unint64_t)&a2[v378] & v69);
      unsigned int v222 = v221[v390];
      unsigned int v223 = v222 - 2;
      if (v222 < 2)
      {
        unint64_t v81 = v385;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v224 = v390;
        }
        else {
          uint64_t v224 = 4;
        }
        unint64_t v81 = v385;
        switch(v224)
        {
          case 1:
            int v225 = *v221;
            goto LABEL_470;
          case 2:
            int v225 = *(unsigned __int16 *)v221;
            goto LABEL_470;
          case 3:
            int v225 = *(unsigned __int16 *)v221 | (v221[2] << 16);
            goto LABEL_470;
          case 4:
            int v225 = *(_DWORD *)v221;
LABEL_470:
            if (v390 < 4) {
              unsigned int v222 = (v225 | (v223 << (8 * v390))) + 2;
            }
            else {
              unsigned int v222 = v225 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v278 = v222 == 1;
      uint64_t v279 = v394;
      if (v222 == 1) {
        uint64_t v279 = v393;
      }
      (*(void (**)(uint64_t))(v279 + 32))(v220);
      *(unsigned char *)(v220 + v390) = v278;
      if (v137 > 3) {
        goto LABEL_479;
      }
      unsigned int v280 = ((1 << (8 * v137)) | 2u) >> (8 * v137);
      unsigned int v281 = v280 | 0x10;
      BOOL v28 = HIWORD(v280) == 0;
      uint64_t v282 = 2;
      if (!v28) {
        uint64_t v282 = 4;
      }
      if (v281 <= 0xFF) {
LABEL_479:
      }
        uint64_t v282 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v282;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v136 <= 3)
      {
        unsigned int v283 = ((1 << v381) | 2u) >> v381;
        unsigned int v284 = v283 | 0x10;
        BOOL v28 = HIWORD(v283) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v284 > 0xFF)
        {
          char v99 = 7;
          goto LABEL_738;
        }
      }
      char v99 = 7;
      goto LABEL_737;
    case 8u:
      unsigned int v139 = a2[v390];
      unsigned int v140 = v139 - 2;
      if (v139 < 2)
      {
        unint64_t v143 = v72;
        uint64_t v144 = v396;
        uint64_t v142 = v375;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v141 = v390;
        }
        else {
          uint64_t v141 = 4;
        }
        uint64_t v142 = v375;
        unint64_t v143 = v72;
        uint64_t v144 = v396;
        switch(v141)
        {
          case 1:
            int v145 = *a2;
            goto LABEL_345;
          case 2:
            int v145 = *(unsigned __int16 *)a2;
            goto LABEL_345;
          case 3:
            int v145 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_345;
          case 4:
            int v145 = *(_DWORD *)a2;
LABEL_345:
            if (v390 < 4) {
              unsigned int v139 = (v145 | (v140 << (8 * v390))) + 2;
            }
            else {
              unsigned int v139 = v145 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v226 = v139 == 1;
      uint64_t v227 = v394;
      if (v139 == 1) {
        uint64_t v227 = v393;
      }
      (*(void (**)(uint64_t))(v227 + 32))(a1);
      *(unsigned char *)(a1 + v390) = v226;
      uint64_t v228 = (unsigned __int8 *)((unint64_t)&a2[v142] & v70);
      if (v144 > 3) {
        goto LABEL_351;
      }
      unsigned int v230 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      if (HIWORD(v230))
      {
        unsigned int v229 = *(_DWORD *)&v228[v144];
      }
      else if ((v230 | 0x10) <= 0xFF)
      {
LABEL_351:
        unsigned int v229 = v228[v144];
      }
      else
      {
        unsigned int v229 = *(unsigned __int16 *)&v228[v144];
      }
      uint64_t v231 = (unsigned __int8 *)((v142 + a1) & v70);
      unsigned int v232 = v229 - 16;
      if (v229 < 0x10)
      {
        unint64_t v82 = v383;
      }
      else
      {
        if (v144 <= 3) {
          uint64_t v233 = v144;
        }
        else {
          uint64_t v233 = 4;
        }
        unint64_t v82 = v383;
        switch(v233)
        {
          case 1:
            int v234 = *v228;
            goto LABEL_491;
          case 2:
            int v234 = *(unsigned __int16 *)v228;
            goto LABEL_491;
          case 3:
            int v234 = *(unsigned __int16 *)v228 | (v228[2] << 16);
            goto LABEL_491;
          case 4:
            int v234 = *(_DWORD *)v228;
LABEL_491:
            if (v144 < 4) {
              v234 |= v232 << (8 * v144);
            }
            unsigned int v229 = v234 + 16;
            break;
          default:
            goto LABEL_494;
        }
      }
      break;
    case 9u:
      unint64_t v387 = v75;
      unsigned int v146 = a2[v390];
      unsigned int v147 = v146 - 2;
      if (v146 < 2)
      {
        uint64_t v80 = a1;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v148 = v390;
        }
        else {
          uint64_t v148 = 4;
        }
        uint64_t v80 = a1;
        switch(v148)
        {
          case 1:
            int v149 = *a2;
            goto LABEL_366;
          case 2:
            int v149 = *(unsigned __int16 *)a2;
            goto LABEL_366;
          case 3:
            int v149 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_366;
          case 4:
            int v149 = *(_DWORD *)a2;
LABEL_366:
            if (v390 < 4) {
              unsigned int v146 = (v149 | (v147 << (8 * v390))) + 2;
            }
            else {
              unsigned int v146 = v149 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v235 = *(void *)(v35 - 8);
      uint64_t v392 = v35;
      BOOL v236 = v146 == 1;
      uint64_t v237 = v394;
      if (v146 == 1) {
        uint64_t v237 = v393;
      }
      (*(void (**)(uint64_t))(v237 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v236;
      uint64_t v238 = (unsigned __int8 *)((unint64_t)&a2[v399 + v37] & v73);
      if (v388 > 3) {
        goto LABEL_372;
      }
      unsigned int v240 = ((1 << v381) | 2u) >> v381;
      if (HIWORD(v240))
      {
        unsigned int v239 = *(_DWORD *)&v238[v388];
      }
      else if ((v240 | 0x10) <= 0xFF)
      {
LABEL_372:
        unsigned int v239 = v238[v388];
      }
      else
      {
        unsigned int v239 = *(unsigned __int16 *)&v238[v388];
      }
      BOOL v241 = (unsigned __int8 *)((v399 + v80 + v37) & v73);
      unsigned int v242 = v239 - 16;
      if (v239 >= 0x10)
      {
        if (v388 <= 3) {
          uint64_t v243 = v388;
        }
        else {
          uint64_t v243 = 4;
        }
        switch(v243)
        {
          case 1:
            int v244 = *v238;
            goto LABEL_502;
          case 2:
            int v244 = *(unsigned __int16 *)v238;
            goto LABEL_502;
          case 3:
            int v244 = *(unsigned __int16 *)v238 | (v238[2] << 16);
            goto LABEL_502;
          case 4:
            int v244 = *(_DWORD *)v238;
LABEL_502:
            if (v388 < 4) {
              v244 |= v242 << v381;
            }
            unsigned int v239 = v244 + 16;
            break;
          default:
            break;
        }
      }
      switch(v239)
      {
        case 0u:
          long long v288 = *(_OWORD *)v238;
          *((void *)v241 + 2) = *((void *)v238 + 2);
          *(_OWORD *)BOOL v241 = v288;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_509;
          }
          unsigned int v290 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v290))
          {
            *(_DWORD *)&v241[v388] = 0;
          }
          else if ((v290 | 0x10) > 0xFF)
          {
            *(_WORD *)&v241[v388] = 0;
          }
          else
          {
LABEL_509:
            v241[v388] = 0;
          }
          break;
        case 1u:
          *(void *)BOOL v241 = *(void *)v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_569;
          }
          unsigned int v312 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v312))
          {
            *(_DWORD *)&v241[v388] = 1;
          }
          else
          {
            if ((v312 | 0x10) > 0xFF)
            {
              __int16 v356 = 1;
              goto LABEL_710;
            }
LABEL_569:
            v241[v388] = 1;
          }
          break;
        case 2u:
          *(_OWORD *)BOOL v241 = *(_OWORD *)v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_573;
          }
          unsigned int v313 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v313))
          {
            *(_DWORD *)&v241[v388] = 2;
          }
          else
          {
            if ((v313 | 0x10) > 0xFF)
            {
              __int16 v356 = 2;
              goto LABEL_710;
            }
LABEL_573:
            v241[v388] = 2;
          }
          break;
        case 3u:
          *BOOL v241 = *v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_577;
          }
          unsigned int v314 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v314))
          {
            *(_DWORD *)&v241[v388] = 3;
          }
          else
          {
            if ((v314 | 0x10) > 0xFF)
            {
              __int16 v356 = 3;
              goto LABEL_710;
            }
LABEL_577:
            v241[v388] = 3;
          }
          break;
        case 4u:
          *BOOL v241 = *v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_581;
          }
          unsigned int v315 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v315))
          {
            *(_DWORD *)&v241[v388] = 4;
          }
          else
          {
            if ((v315 | 0x10) > 0xFF)
            {
              __int16 v356 = 4;
              goto LABEL_710;
            }
LABEL_581:
            v241[v388] = 4;
          }
          break;
        case 5u:
          *BOOL v241 = *v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_585;
          }
          unsigned int v316 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v316))
          {
            *(_DWORD *)&v241[v388] = 5;
          }
          else
          {
            if ((v316 | 0x10) > 0xFF)
            {
              __int16 v356 = 5;
              goto LABEL_710;
            }
LABEL_585:
            v241[v388] = 5;
          }
          break;
        case 6u:
          *BOOL v241 = *v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_589;
          }
          unsigned int v317 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v317))
          {
            *(_DWORD *)&v241[v388] = 6;
          }
          else
          {
            if ((v317 | 0x10) > 0xFF)
            {
              __int16 v356 = 6;
              goto LABEL_710;
            }
LABEL_589:
            v241[v388] = 6;
          }
          break;
        case 7u:
          *BOOL v241 = *v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_593;
          }
          unsigned int v318 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v318))
          {
            *(_DWORD *)&v241[v388] = 7;
          }
          else
          {
            if ((v318 | 0x10) > 0xFF)
            {
              __int16 v356 = 7;
              goto LABEL_710;
            }
LABEL_593:
            v241[v388] = 7;
          }
          break;
        case 8u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v373 + 32))(v241, v238, v374);
          uint64_t v319 = (void *)((unint64_t)&v241[v39] & 0xFFFFFFFFFFFFFFF8);
          unsigned int v320 = (void *)((unint64_t)&v238[v39] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v319 = *v320;
          unint64_t v321 = ((unint64_t)v319 + v40) & v74;
          unint64_t v322 = ((unint64_t)v320 + v40) & v74;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v235 + 32))(v321, v322, v392);
          unsigned int v323 = (void *)((v41 + v321) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v324 = (void *)((v41 + v322) & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v323 = *v324;
          *(_OWORD *)(((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v325 = (unint64_t)&v241[v387];
          *(unsigned char *)unint64_t v325 = v238[v387];
          *(unsigned char *)(v325 | 1) = *(unsigned char *)((unint64_t)&v238[v387] | 1);
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_597;
          }
          unsigned int v326 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v326))
          {
            *(_DWORD *)&v241[v388] = 8;
          }
          else
          {
            if ((v326 | 0x10) > 0xFF)
            {
              __int16 v356 = 8;
              goto LABEL_710;
            }
LABEL_597:
            v241[v388] = 8;
          }
          break;
        case 9u:
          *(void *)BOOL v241 = *(void *)v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_601;
          }
          unsigned int v327 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v327))
          {
            *(_DWORD *)&v241[v388] = 9;
          }
          else
          {
            if ((v327 | 0x10) > 0xFF)
            {
              __int16 v356 = 9;
              goto LABEL_710;
            }
LABEL_601:
            v241[v388] = 9;
          }
          break;
        case 0xAu:
          *BOOL v241 = *v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_605;
          }
          unsigned int v328 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v328))
          {
            *(_DWORD *)&v241[v388] = 10;
          }
          else
          {
            if ((v328 | 0x10) > 0xFF)
            {
              __int16 v356 = 10;
              goto LABEL_710;
            }
LABEL_605:
            v241[v388] = 10;
          }
          break;
        case 0xBu:
          *(_WORD *)BOOL v241 = *(_WORD *)v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_609;
          }
          unsigned int v329 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v329))
          {
            *(_DWORD *)&v241[v388] = 11;
          }
          else
          {
            if ((v329 | 0x10) > 0xFF)
            {
              __int16 v356 = 11;
              goto LABEL_710;
            }
LABEL_609:
            v241[v388] = 11;
          }
          break;
        case 0xCu:
          long long v330 = *(_OWORD *)v238;
          v241[16] = v238[16];
          *(_OWORD *)BOOL v241 = v330;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_613;
          }
          unsigned int v331 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v331))
          {
            *(_DWORD *)&v241[v388] = 12;
          }
          else
          {
            if ((v331 | 0x10) > 0xFF)
            {
              __int16 v356 = 12;
              goto LABEL_710;
            }
LABEL_613:
            v241[v388] = 12;
          }
          break;
        case 0xDu:
          long long v332 = *(_OWORD *)v238;
          *((void *)v241 + 2) = *((void *)v238 + 2);
          *(_OWORD *)BOOL v241 = v332;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_617;
          }
          unsigned int v333 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v333))
          {
            *(_DWORD *)&v241[v388] = 13;
          }
          else
          {
            if ((v333 | 0x10) > 0xFF)
            {
              __int16 v356 = 13;
              goto LABEL_710;
            }
LABEL_617:
            v241[v388] = 13;
          }
          break;
        case 0xEu:
          long long v334 = *(_OWORD *)v238;
          long long v335 = *((_OWORD *)v238 + 1);
          long long v336 = *((_OWORD *)v238 + 2);
          *(_OWORD *)(v241 + 41) = *(_OWORD *)(v238 + 41);
          *((_OWORD *)v241 + 1) = v335;
          *((_OWORD *)v241 + 2) = v336;
          *(_OWORD *)BOOL v241 = v334;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_621;
          }
          unsigned int v337 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v337))
          {
            *(_DWORD *)&v241[v388] = 14;
          }
          else
          {
            if ((v337 | 0x10) > 0xFF)
            {
              __int16 v356 = 14;
              goto LABEL_710;
            }
LABEL_621:
            v241[v388] = 14;
          }
          break;
        case 0xFu:
          *BOOL v241 = *v238;
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          unsigned int v289 = v396;
          if (v388 > 3) {
            goto LABEL_625;
          }
          unsigned int v338 = ((1 << v381) | 2u) >> v381;
          if (HIWORD(v338))
          {
            *(_DWORD *)&v241[v388] = 15;
          }
          else if ((v338 | 0x10) > 0xFF)
          {
            __int16 v356 = 15;
LABEL_710:
            *(_WORD *)&v241[v388] = v356;
          }
          else
          {
LABEL_625:
            v241[v388] = 15;
          }
          break;
        default:
          if (v388 > 3) {
            goto LABEL_646;
          }
          unsigned int v353 = ((1 << v381) | 2u) >> v381;
          unsigned int v354 = v353 | 0x10;
          BOOL v28 = HIWORD(v353) == 0;
          uint64_t v355 = 2;
          if (!v28) {
            uint64_t v355 = 4;
          }
          if (v354 <= 0xFF) {
LABEL_646:
          }
            uint64_t v355 = 1;
          unsigned int v289 = v396;
          memcpy(v241, v238, v355 + v388);
          unint64_t v97 = v379;
          unint64_t v96 = v380;
          unint64_t v81 = v385;
          break;
      }
      unint64_t v82 = v383;
      if (v289 > 3) {
        goto LABEL_715;
      }
      unsigned int v357 = ((1 << (8 * v289)) | 2u) >> (8 * v289);
      unsigned int v358 = v357 | 0x10;
      BOOL v28 = HIWORD(v357) == 0;
      uint64_t v359 = 2;
      if (!v28) {
        uint64_t v359 = 4;
      }
      if (v358 <= 0xFF) {
LABEL_715:
      }
        uint64_t v359 = 1;
      unint64_t v98 = v398 + v359;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v388 <= 3)
      {
        unsigned int v360 = ((1 << v381) | 2u) >> v381;
        unsigned int v361 = v360 | 0x10;
        BOOL v28 = HIWORD(v360) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v361 > 0xFF)
        {
          char v99 = 9;
          goto LABEL_738;
        }
      }
      char v99 = 9;
      goto LABEL_737;
    case 0xAu:
      unsigned int v150 = a2[v390];
      unsigned int v151 = v150 - 2;
      if (v150 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v153 = v43;
        unsigned int v154 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v152 = v390;
        }
        else {
          uint64_t v152 = 4;
        }
        unsigned int v153 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v154 = v396;
        switch(v152)
        {
          case 1:
            int v155 = *a2;
            goto LABEL_386;
          case 2:
            int v155 = *(unsigned __int16 *)a2;
            goto LABEL_386;
          case 3:
            int v155 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_386;
          case 4:
            int v155 = *(_DWORD *)a2;
LABEL_386:
            if (v390 < 4) {
              unsigned int v150 = (v155 | (v151 << (8 * v390))) + 2;
            }
            else {
              unsigned int v150 = v155 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v245 = v150 == 1;
      uint64_t v246 = v394;
      if (v150 == 1) {
        uint64_t v246 = v393;
      }
      (*(void (**)(uint64_t))(v246 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v245;
      unint64_t v247 = (unint64_t)&a2[v399 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v248 = *(unsigned char *)(v247 + 8);
      unint64_t v249 = (v80 + v399 + 7) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v249 = *(void *)v247;
      *(unsigned char *)(v249 + 8) = v248;
      if (v154 > 3) {
        goto LABEL_395;
      }
      unsigned int v250 = ((1 << (8 * v154)) | 2u) >> (8 * v154);
      unsigned int v251 = v250 | 0x10;
      BOOL v28 = HIWORD(v250) == 0;
      uint64_t v252 = 2;
      if (!v28) {
        uint64_t v252 = 4;
      }
      if (v251 <= 0xFF) {
LABEL_395:
      }
        uint64_t v252 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v252;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v153 <= 3)
      {
        unsigned int v253 = ((1 << v381) | 2u) >> v381;
        unsigned int v254 = v253 | 0x10;
        BOOL v28 = HIWORD(v253) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v254 > 0xFF)
        {
          char v99 = 10;
          goto LABEL_738;
        }
      }
      char v99 = 10;
      goto LABEL_737;
    case 0xBu:
      unsigned int v85 = a2[v390];
      unsigned int v86 = v85 - 2;
      if (v85 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v88 = v43;
        unsigned int v89 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v87 = v390;
        }
        else {
          uint64_t v87 = 4;
        }
        unsigned int v88 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v89 = v396;
        switch(v87)
        {
          case 1:
            int v90 = *a2;
            goto LABEL_211;
          case 2:
            int v90 = *(unsigned __int16 *)a2;
            goto LABEL_211;
          case 3:
            int v90 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_211;
          case 4:
            int v90 = *(_DWORD *)a2;
LABEL_211:
            if (v390 < 4) {
              unsigned int v85 = (v90 | (v86 << (8 * v390))) + 2;
            }
            else {
              unsigned int v85 = v90 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v175 = v85 == 1;
      uint64_t v176 = v394;
      if (v85 == 1) {
        uint64_t v176 = v393;
      }
      (*(void (**)(uint64_t))(v176 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v175;
      *(_OWORD *)((v80 + v399 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v399 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v89 > 3) {
        goto LABEL_220;
      }
      unsigned int v177 = ((1 << (8 * v89)) | 2u) >> (8 * v89);
      unsigned int v178 = v177 | 0x10;
      BOOL v28 = HIWORD(v177) == 0;
      uint64_t v179 = 2;
      if (!v28) {
        uint64_t v179 = 4;
      }
      if (v178 <= 0xFF) {
LABEL_220:
      }
        uint64_t v179 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v179;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v88 <= 3)
      {
        unsigned int v180 = ((1 << v381) | 2u) >> v381;
        unsigned int v181 = v180 | 0x10;
        BOOL v28 = HIWORD(v180) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v181 > 0xFF)
        {
          char v99 = 11;
          goto LABEL_738;
        }
      }
      char v99 = 11;
      goto LABEL_737;
    case 0xCu:
      unsigned int v156 = a2[v390];
      unsigned int v157 = v156 - 2;
      if (v156 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v159 = v43;
        unsigned int v160 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v158 = v390;
        }
        else {
          uint64_t v158 = 4;
        }
        unsigned int v159 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v160 = v396;
        switch(v158)
        {
          case 1:
            int v161 = *a2;
            goto LABEL_407;
          case 2:
            int v161 = *(unsigned __int16 *)a2;
            goto LABEL_407;
          case 3:
            int v161 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_407;
          case 4:
            int v161 = *(_DWORD *)a2;
LABEL_407:
            if (v390 < 4) {
              unsigned int v156 = (v161 | (v157 << (8 * v390))) + 2;
            }
            else {
              unsigned int v156 = v161 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v255 = v156 == 1;
      uint64_t v256 = v394;
      if (v156 == 1) {
        uint64_t v256 = v393;
      }
      (*(void (**)(uint64_t))(v256 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v255;
      *(unsigned char *)(v399 + v80) = a2[v399];
      if (v160 > 3) {
        goto LABEL_416;
      }
      unsigned int v257 = ((1 << (8 * v160)) | 2u) >> (8 * v160);
      unsigned int v258 = v257 | 0x10;
      BOOL v28 = HIWORD(v257) == 0;
      uint64_t v259 = 2;
      if (!v28) {
        uint64_t v259 = 4;
      }
      if (v258 <= 0xFF) {
LABEL_416:
      }
        uint64_t v259 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v259;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v159 <= 3)
      {
        unsigned int v260 = ((1 << v381) | 2u) >> v381;
        unsigned int v261 = v260 | 0x10;
        BOOL v28 = HIWORD(v260) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v261 > 0xFF)
        {
          char v99 = 12;
          goto LABEL_738;
        }
      }
      char v99 = 12;
      goto LABEL_737;
    case 0xDu:
      unsigned int v162 = a2[v390];
      unsigned int v163 = v162 - 2;
      if (v162 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v165 = v43;
        unsigned int v166 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v164 = v390;
        }
        else {
          uint64_t v164 = 4;
        }
        unsigned int v165 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v166 = v396;
        switch(v164)
        {
          case 1:
            int v167 = *a2;
            goto LABEL_428;
          case 2:
            int v167 = *(unsigned __int16 *)a2;
            goto LABEL_428;
          case 3:
            int v167 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_428;
          case 4:
            int v167 = *(_DWORD *)a2;
LABEL_428:
            if (v390 < 4) {
              unsigned int v162 = (v167 | (v163 << (8 * v390))) + 2;
            }
            else {
              unsigned int v162 = v167 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v262 = v162 == 1;
      uint64_t v263 = v394;
      if (v162 == 1) {
        uint64_t v263 = v393;
      }
      (*(void (**)(uint64_t))(v263 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v262;
      uint64_t v264 = (void *)((v80 + v399 + 7) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v265 = (void *)((unint64_t)&a2[v399 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v264 = *v265;
      *(void *)(((unint64_t)v264 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v166 > 3) {
        goto LABEL_437;
      }
      unsigned int v266 = ((1 << (8 * v166)) | 2u) >> (8 * v166);
      unsigned int v267 = v266 | 0x10;
      BOOL v28 = HIWORD(v266) == 0;
      uint64_t v268 = 2;
      if (!v28) {
        uint64_t v268 = 4;
      }
      if (v267 <= 0xFF) {
LABEL_437:
      }
        uint64_t v268 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v268;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v165 <= 3)
      {
        unsigned int v269 = ((1 << v381) | 2u) >> v381;
        unsigned int v270 = v269 | 0x10;
        BOOL v28 = HIWORD(v269) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v270 > 0xFF)
        {
          char v99 = 13;
          goto LABEL_738;
        }
      }
      char v99 = 13;
      goto LABEL_737;
    default:
      unsigned int v76 = a2[v390];
      unsigned int v77 = v76 - 2;
      if (v76 < 2)
      {
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v79 = v43;
        unsigned int v83 = v396;
      }
      else
      {
        if (v390 <= 3) {
          uint64_t v78 = v390;
        }
        else {
          uint64_t v78 = 4;
        }
        unsigned int v79 = v43;
        uint64_t v80 = a1;
        unint64_t v82 = v50;
        unint64_t v81 = v385;
        unsigned int v83 = v396;
        switch(v78)
        {
          case 1:
            int v84 = *a2;
            goto LABEL_190;
          case 2:
            int v84 = *(unsigned __int16 *)a2;
            goto LABEL_190;
          case 3:
            int v84 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_190;
          case 4:
            int v84 = *(_DWORD *)a2;
LABEL_190:
            if (v390 < 4) {
              unsigned int v76 = (v84 | (v77 << (8 * v390))) + 2;
            }
            else {
              unsigned int v76 = v84 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v168 = v76 == 1;
      uint64_t v169 = v394;
      if (v76 == 1) {
        uint64_t v169 = v393;
      }
      (*(void (**)(uint64_t))(v169 + 32))(v80);
      *(unsigned char *)(v80 + v390) = v168;
      *(unsigned char *)(v399 + v80) = a2[v399];
      if (v83 > 3) {
        goto LABEL_199;
      }
      unsigned int v170 = ((1 << (8 * v83)) | 2u) >> (8 * v83);
      unsigned int v171 = v170 | 0x10;
      BOOL v28 = HIWORD(v170) == 0;
      uint64_t v172 = 2;
      if (!v28) {
        uint64_t v172 = 4;
      }
      if (v171 <= 0xFF) {
LABEL_199:
      }
        uint64_t v172 = 1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v98 = v398 + v172;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v79 <= 3)
      {
        unsigned int v173 = ((1 << v381) | 2u) >> v381;
        unsigned int v174 = v173 | 0x10;
        BOOL v28 = HIWORD(v173) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v174 > 0xFF)
        {
          char v99 = 0;
          goto LABEL_738;
        }
      }
      char v99 = 0;
      goto LABEL_737;
  }
LABEL_494:
  switch(v229)
  {
    case 0u:
      long long v285 = *(_OWORD *)v228;
      *((void *)v231 + 2) = *((void *)v228 + 2);
      *(_OWORD *)uint64_t v231 = v285;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_498;
      }
      unsigned int v286 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v286 | 0x10;
      if (HIWORD(v286))
      {
        *(_DWORD *)&v231[v144] = 0;
      }
      else
      {
        if (v287 <= 0xFF)
        {
LABEL_498:
          v231[v144] = 0;
          goto LABEL_637;
        }
        *(_WORD *)&v231[v144] = 0;
      }
      goto LABEL_726;
    case 1u:
      *(void *)uint64_t v231 = *(void *)v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_513;
      }
      __int16 v291 = 1;
      unsigned int v292 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v292 | 0x10;
      if (HIWORD(v292))
      {
        *(_DWORD *)&v231[v144] = 1;
        goto LABEL_726;
      }
      if (v287 > 0xFF) {
        goto LABEL_725;
      }
LABEL_513:
      char v293 = 1;
      goto LABEL_636;
    case 2u:
      *(_OWORD *)uint64_t v231 = *(_OWORD *)v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_517;
      }
      unsigned int v294 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v294 | 0x10;
      if (HIWORD(v294))
      {
        *(_DWORD *)&v231[v144] = 2;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_517:
        char v293 = 2;
        goto LABEL_636;
      }
      __int16 v291 = 2;
      goto LABEL_725;
    case 3u:
      *uint64_t v231 = *v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_521;
      }
      unsigned int v295 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v295 | 0x10;
      if (HIWORD(v295))
      {
        *(_DWORD *)&v231[v144] = 3;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_521:
        char v293 = 3;
        goto LABEL_636;
      }
      __int16 v291 = 3;
      goto LABEL_725;
    case 4u:
      *uint64_t v231 = *v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_525;
      }
      unsigned int v296 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v296 | 0x10;
      if (HIWORD(v296))
      {
        *(_DWORD *)&v231[v144] = 4;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_525:
        char v293 = 4;
        goto LABEL_636;
      }
      __int16 v291 = 4;
      goto LABEL_725;
    case 5u:
      *uint64_t v231 = *v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_529;
      }
      unsigned int v297 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v297 | 0x10;
      if (HIWORD(v297))
      {
        *(_DWORD *)&v231[v144] = 5;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_529:
        char v293 = 5;
        goto LABEL_636;
      }
      __int16 v291 = 5;
      goto LABEL_725;
    case 6u:
      *uint64_t v231 = *v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_533;
      }
      unsigned int v298 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v298 | 0x10;
      if (HIWORD(v298))
      {
        *(_DWORD *)&v231[v144] = 6;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_533:
        char v293 = 6;
        goto LABEL_636;
      }
      __int16 v291 = 6;
      goto LABEL_725;
    case 7u:
      *uint64_t v231 = *v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_537;
      }
      unsigned int v299 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v299 | 0x10;
      if (HIWORD(v299))
      {
        *(_DWORD *)&v231[v144] = 7;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_537:
        char v293 = 7;
        goto LABEL_636;
      }
      __int16 v291 = 7;
      goto LABEL_725;
    case 8u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v369 + 32))(v231, v228, v371);
      uint64_t v342 = (void *)((unint64_t)&v231[v366] & 0xFFFFFFFFFFFFFFF8);
      uint64_t v343 = (void *)((unint64_t)&v228[v366] & 0xFFFFFFFFFFFFFFF8);
      void *v342 = *v343;
      unint64_t v344 = ((unint64_t)v342 + v367) & v71;
      unint64_t v345 = ((unint64_t)v343 + v367) & v71;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v370 + 32))(v344, v345, v372);
      long long v346 = (void *)((v368 + v344) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v347 = (void *)((v368 + v345) & 0xFFFFFFFFFFFFFFF8);
      *long long v346 = *v347;
      *(_OWORD *)(((unint64_t)v346 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v347 + 15) & 0xFFFFFFFFFFFFFFF8);
      v231[v143] = v228[v143];
      *(unsigned char *)((unint64_t)&v231[v143] | 1) = *(unsigned char *)((unint64_t)&v228[v143] | 1);
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_635;
      }
      unsigned int v348 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v348 | 0x10;
      if (HIWORD(v348))
      {
        *(_DWORD *)&v231[v144] = 8;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_635:
        char v293 = 8;
        goto LABEL_636;
      }
      __int16 v291 = 8;
      goto LABEL_725;
    case 9u:
      *(void *)uint64_t v231 = *(void *)v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_541;
      }
      unsigned int v300 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v300 | 0x10;
      if (HIWORD(v300))
      {
        *(_DWORD *)&v231[v144] = 9;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_541:
        char v293 = 9;
        goto LABEL_636;
      }
      __int16 v291 = 9;
      goto LABEL_725;
    case 0xAu:
      *uint64_t v231 = *v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_545;
      }
      unsigned int v301 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v301 | 0x10;
      if (HIWORD(v301))
      {
        *(_DWORD *)&v231[v144] = 10;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_545:
        char v293 = 10;
        goto LABEL_636;
      }
      __int16 v291 = 10;
      goto LABEL_725;
    case 0xBu:
      *(_WORD *)uint64_t v231 = *(_WORD *)v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_549;
      }
      unsigned int v302 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v302 | 0x10;
      if (HIWORD(v302))
      {
        *(_DWORD *)&v231[v144] = 11;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_549:
        char v293 = 11;
        goto LABEL_636;
      }
      __int16 v291 = 11;
      goto LABEL_725;
    case 0xCu:
      long long v303 = *(_OWORD *)v228;
      v231[16] = v228[16];
      *(_OWORD *)uint64_t v231 = v303;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_553;
      }
      unsigned int v304 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v304 | 0x10;
      if (HIWORD(v304))
      {
        *(_DWORD *)&v231[v144] = 12;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_553:
        char v293 = 12;
        goto LABEL_636;
      }
      __int16 v291 = 12;
      goto LABEL_725;
    case 0xDu:
      long long v305 = *(_OWORD *)v228;
      *((void *)v231 + 2) = *((void *)v228 + 2);
      *(_OWORD *)uint64_t v231 = v305;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_557;
      }
      unsigned int v306 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v306 | 0x10;
      if (HIWORD(v306))
      {
        *(_DWORD *)&v231[v144] = 13;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_557:
        char v293 = 13;
        goto LABEL_636;
      }
      __int16 v291 = 13;
      goto LABEL_725;
    case 0xEu:
      long long v307 = *(_OWORD *)v228;
      long long v308 = *((_OWORD *)v228 + 1);
      long long v309 = *((_OWORD *)v228 + 2);
      *(_OWORD *)(v231 + 41) = *(_OWORD *)(v228 + 41);
      *((_OWORD *)v231 + 1) = v308;
      *((_OWORD *)v231 + 2) = v309;
      *(_OWORD *)uint64_t v231 = v307;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_561;
      }
      unsigned int v310 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v310 | 0x10;
      if (HIWORD(v310))
      {
        *(_DWORD *)&v231[v144] = 14;
        goto LABEL_726;
      }
      if (v287 <= 0xFF)
      {
LABEL_561:
        char v293 = 14;
        goto LABEL_636;
      }
      __int16 v291 = 14;
      goto LABEL_725;
    case 0xFu:
      *uint64_t v231 = *v228;
      uint64_t v80 = a1;
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      if (v144 > 3) {
        goto LABEL_565;
      }
      unsigned int v311 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v287 = v311 | 0x10;
      if (HIWORD(v311))
      {
        *(_DWORD *)&v231[v144] = 15;
LABEL_726:
        BOOL v28 = HIWORD(v287) == 0;
        uint64_t v352 = 2;
        if (!v28) {
          uint64_t v352 = 4;
        }
        unsigned int v349 = v388;
        goto LABEL_729;
      }
      if (v287 > 0xFF)
      {
        __int16 v291 = 15;
LABEL_725:
        *(_WORD *)&v231[v144] = v291;
        goto LABEL_726;
      }
LABEL_565:
      char v293 = 15;
LABEL_636:
      v231[v144] = v293;
LABEL_637:
      unsigned int v349 = v388;
      if (v144 > 3) {
        goto LABEL_641;
      }
      unsigned int v350 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v351 = v350 | 0x10;
      BOOL v28 = HIWORD(v350) == 0;
      uint64_t v352 = 2;
      if (!v28) {
        uint64_t v352 = 4;
      }
      if (v351 <= 0xFF) {
LABEL_641:
      }
        uint64_t v352 = 1;
LABEL_729:
      unint64_t v98 = v398 + v352;
      if (v98 <= v397) {
        unint64_t v98 = v397;
      }
      if (v349 <= 3)
      {
        unsigned int v362 = ((1 << v381) | 2u) >> v381;
        unsigned int v363 = v362 | 0x10;
        BOOL v28 = HIWORD(v362) == 0;
        uint64_t v102 = 2;
        if (!v28) {
          uint64_t v102 = 4;
        }
        if (v363 > 0xFF)
        {
          char v99 = 8;
          goto LABEL_738;
        }
      }
      char v99 = 8;
LABEL_737:
      uint64_t v102 = 1;
LABEL_738:
      unint64_t v364 = v82 + v102;
      if (v364 > v98) {
        unint64_t v98 = v364;
      }
      if (v81 > v98) {
        unint64_t v98 = v81;
      }
      if (v97 > v98) {
        unint64_t v98 = v97;
      }
      if (v400 > v98) {
        unint64_t v98 = v400;
      }
      if (v96 > v98) {
        unint64_t v98 = v96;
      }
      *(unsigned char *)(v80 + v98) = v99;
      return v80;
    default:
      if (v144 > 3) {
        goto LABEL_630;
      }
      unsigned int v339 = ((1 << (8 * v144)) | 2u) >> (8 * v144);
      unsigned int v340 = v339 | 0x10;
      BOOL v28 = HIWORD(v339) == 0;
      uint64_t v341 = 2;
      if (!v28) {
        uint64_t v341 = 4;
      }
      if (v340 <= 0xFF) {
LABEL_630:
      }
        uint64_t v341 = 1;
      uint64_t v80 = a1;
      memcpy(v231, v228, v341 + v144);
      unint64_t v97 = v379;
      unint64_t v96 = v380;
      unint64_t v81 = v385;
      goto LABEL_637;
  }
}

unsigned __int8 *sub_24D4D6124(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v443 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v443 - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= v4) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = *(void *)(v5 + 64);
  }
  unint64_t v8 = v7 + 1;
  uint64_t v441 = *(void *)(v443 - 8);
  unsigned int v9 = *(_DWORD *)(v5 + 80);
  uint64_t v10 = *(_DWORD *)(v5 + 80);
  uint64_t v427 = v4 + v10;
  uint64_t v431 = v10;
  uint64_t v425 = *(void *)(v5 + 64);
  unint64_t v11 = v6 + ((v4 + v10) & ~v10);
  unint64_t v437 = v7 + 2;
  if (v11 + 1 > v7 + 2) {
    unint64_t v12 = v11 + 1;
  }
  else {
    unint64_t v12 = v7 + 2;
  }
  if (v8 > v12) {
    unint64_t v12 = v7 + 1;
  }
  unint64_t v448 = v7;
  unint64_t v13 = v7 & 0xFFFFFFFFFFFFFFF8;
  if ((v7 & 0xFFFFFFFFFFFFFFF8) + 16 > v12) {
    unint64_t v12 = (v7 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v442 = v3;
  uint64_t v14 = *(unsigned __int8 *)(v3 + 80) | v9;
  uint64_t v429 = v8 + v14;
  uint64_t v445 = v14;
  if (((v8 + v14) & ~v14) + v8 > v12) {
    unint64_t v12 = ((v8 + v14) & ~v14) + v8;
  }
  unint64_t v450 = v12;
  uint64_t v416 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v416 - 8);
  uint64_t v414 = v15;
  int v16 = *(_DWORD *)(v15 + 80) & 0xF8;
  uint64_t v417 = swift_getAssociatedTypeWitness();
  uint64_t v415 = *(void *)(v417 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v415 + 80);
  uint64_t v18 = v16 | v17 | 7;
  unint64_t v440 = v8;
  uint64_t v428 = v8 + v18;
  uint64_t v411 = *(void *)(v15 + 64) + 7;
  uint64_t v412 = v17 + 8;
  uint64_t v413 = *(void *)(v415 + 64) + 7;
  unint64_t v19 = (((v413 + ((v17 + 8 + (v411 & 0xFFFFFFFFFFFFFFF8)) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v19 + 18 <= 0x39) {
    uint64_t v20 = 57;
  }
  else {
    uint64_t v20 = v19 + 18;
  }
  uint64_t v433 = v16 | v17 | 7;
  if (v20 > 3) {
    goto LABEL_21;
  }
  unsigned int v21 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
  unsigned int v22 = v21 | 0x10;
  BOOL v23 = HIWORD(v21) == 0;
  uint64_t v24 = 2;
  if (!v23) {
    uint64_t v24 = 4;
  }
  if (v22 <= 0xFF) {
LABEL_21:
  }
    uint64_t v24 = 1;
  uint64_t v449 = v20 + ((v8 + v18) & ~v18);
  unint64_t v25 = v449 + v24;
  if (v25 <= v450) {
    unint64_t v26 = v450;
  }
  else {
    unint64_t v26 = v25;
  }
  uint64_t v423 = swift_getAssociatedTypeWitness();
  uint64_t v27 = *(void *)(v423 - 8);
  uint64_t v421 = v27;
  int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
  uint64_t v424 = swift_getAssociatedTypeWitness();
  uint64_t v29 = v27;
  uint64_t v422 = *(void *)(v424 - 8);
  uint64_t v30 = *(unsigned __int8 *)(v422 + 80);
  uint64_t v31 = v28 | v30 | 7;
  unint64_t v32 = (v8 + v31) & ~v31;
  uint64_t v418 = *(void *)(v29 + 64) + 7;
  uint64_t v419 = v30 + 8;
  uint64_t v420 = *(void *)(v422 + 64) + 7;
  unint64_t v33 = (((v420 + ((v30 + 8 + (v418 & 0xFFFFFFFFFFFFFFF8)) & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v33 + 18 <= 0x39) {
    uint64_t v34 = 57;
  }
  else {
    uint64_t v34 = v33 + 18;
  }
  char v439 = 8 * v34;
  if (v34 <= 3) {
    unsigned int v35 = (((1 << (8 * v34)) | 2u) >> (8 * v34)) | 0x10;
  }
  else {
    unsigned int v35 = 17;
  }
  unint64_t v36 = v13 + 17;
  unint64_t v37 = v13 + 24;
  unint64_t v38 = ((v13 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v39 = 4;
  if (v35 < 0x10000) {
    uint64_t v39 = 2;
  }
  if (v35 < 0x100) {
    uint64_t v40 = 1;
  }
  else {
    uint64_t v40 = v39;
  }
  unint64_t v41 = v34 + v32;
  unint64_t v42 = v34 + v32 + v40;
  if (v42 <= v26) {
    unint64_t v42 = v26;
  }
  if (v36 > v42) {
    unint64_t v42 = v36;
  }
  unint64_t v43 = v37;
  if (v37 > v42) {
    unint64_t v42 = v37;
  }
  unint64_t v44 = v437;
  uint64_t v2 = a1;
  if (v437 > v42) {
    unint64_t v42 = v437;
  }
  if (v38 > v42) {
    unint64_t v42 = v38;
  }
  unsigned int v45 = a1[v42];
  unsigned int v46 = v45 - 14;
  uint64_t v447 = v20;
  if (v45 < 0xE)
  {
    unint64_t v53 = v448;
    uint64_t v58 = v431;
    uint64_t v48 = v433;
    uint64_t v47 = v445;
    unint64_t v52 = v43;
    unint64_t v59 = (((v413 + ((v17 + 8 + (v411 & 0xFFFFFFFFFFFFFFF8)) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  }
  else
  {
    uint64_t v47 = v445;
    uint64_t v48 = v433;
    if (v20 > 3) {
      goto LABEL_51;
    }
    unsigned int v49 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
    unsigned int v50 = v49 | 0x10;
    BOOL v23 = HIWORD(v49) == 0;
    uint64_t v51 = 2;
    if (!v23) {
      uint64_t v51 = 4;
    }
    if (v50 <= 0xFF) {
LABEL_51:
    }
      uint64_t v51 = 1;
    unint64_t v52 = v37;
    unint64_t v53 = v448;
    unint64_t v54 = v449 + v51;
    if (v54 <= v450) {
      unint64_t v54 = v450;
    }
    if (v34 > 3) {
      goto LABEL_58;
    }
    unsigned int v55 = ((1 << v439) | 2u) >> v439;
    unsigned int v56 = v55 | 0x10;
    BOOL v23 = HIWORD(v55) == 0;
    uint64_t v57 = 2;
    if (!v23) {
      uint64_t v57 = 4;
    }
    if (v56 <= 0xFF) {
LABEL_58:
    }
      uint64_t v57 = 1;
    unint64_t v59 = (((v413 + ((v17 + 8 + (v411 & 0xFFFFFFFFFFFFFFF8)) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v58 = v431;
    unint64_t v60 = v41 + v57;
    if (v60 > v54) {
      unint64_t v54 = v60;
    }
    if (v36 > v54) {
      unint64_t v54 = v36;
    }
    if (v52 > v54) {
      unint64_t v54 = v52;
    }
    if (v437 > v54) {
      unint64_t v54 = v437;
    }
    if (v38 > v54) {
      LODWORD(v54) = v38;
    }
    if (v54 <= 3) {
      uint64_t v61 = v54;
    }
    else {
      uint64_t v61 = 4;
    }
    switch(v61)
    {
      case 1:
        int v62 = *a1;
        if (v54 < 4) {
          goto LABEL_81;
        }
        goto LABEL_82;
      case 2:
        int v62 = *(unsigned __int16 *)a1;
        if (v54 >= 4) {
          goto LABEL_82;
        }
        goto LABEL_81;
      case 3:
        int v62 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v54 >= 4) {
          goto LABEL_82;
        }
        goto LABEL_81;
      case 4:
        int v62 = *(_DWORD *)a1;
        if (v54 < 4) {
LABEL_81:
        }
          v62 |= v46 << (8 * v54);
LABEL_82:
        unsigned int v45 = v62 + 14;
        break;
      default:
        break;
    }
  }
  uint64_t v426 = ~v58;
  uint64_t v432 = ~v47;
  uint64_t v410 = ~v17;
  uint64_t v430 = ~v30;
  uint64_t v446 = v34;
  unint64_t v408 = v59 + 16;
  unint64_t v409 = v33 + 16;
  uint64_t v434 = ~v31;
  switch(v45)
  {
    case 1u:
      uint64_t v67 = ~v48;
      unint64_t v68 = v41;
      (*(void (**)(unsigned __int8 *, uint64_t, uint64_t))(v442 + 8))(a1, AssociatedTypeWitness, v48);
      uint64_t v69 = (unsigned __int8 *)((unint64_t)&a1[v427] & v426);
      goto LABEL_203;
    case 2u:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v70 = v53;
        }
        else {
          uint64_t v70 = 4;
        }
        switch(v70)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 3u:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v71 = v53;
        }
        else {
          uint64_t v71 = 4;
        }
        switch(v71)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 4u:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v72 = v53;
        }
        else {
          uint64_t v72 = 4;
        }
        switch(v72)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 5u:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v73 = v53;
        }
        else {
          uint64_t v73 = 4;
        }
        switch(v73)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 6u:
      unsigned int v74 = a1[v53];
      unsigned int v75 = v74 - 2;
      if (v74 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v76 = v53;
        }
        else {
          uint64_t v76 = 4;
        }
        switch(v76)
        {
          case 1:
            int v77 = *a1;
            goto LABEL_169;
          case 2:
            int v77 = *(unsigned __int16 *)a1;
            goto LABEL_169;
          case 3:
            int v77 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_169;
          case 4:
            int v77 = *(_DWORD *)a1;
LABEL_169:
            if (v53 < 4) {
              unsigned int v74 = (v77 | (v75 << (8 * v53))) + 2;
            }
            else {
              unsigned int v74 = v77 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v67 = ~v48;
      uint64_t v94 = v442;
      if (v74 == 1)
      {
        uint64_t v94 = v441;
        uint64_t v95 = v443;
      }
      else
      {
        uint64_t v95 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v94 + 8))(a1, v95);
      uint64_t v69 = (unsigned __int8 *)((unint64_t)&a1[v429] & v432);
      unsigned int v96 = v69[v53];
      unsigned int v97 = v96 - 2;
      if (v96 < 2) {
        goto LABEL_195;
      }
      if (v53 <= 3) {
        uint64_t v98 = v53;
      }
      else {
        uint64_t v98 = 4;
      }
      unint64_t v68 = v41;
      switch(v98)
      {
        case 1:
          goto LABEL_194;
        case 2:
          goto LABEL_196;
        case 3:
          goto LABEL_197;
        case 4:
          goto LABEL_198;
        default:
          goto LABEL_202;
      }
      goto LABEL_202;
    case 7u:
      unsigned int v78 = a1[v53];
      unsigned int v79 = v78 - 2;
      if (v78 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v80 = v53;
        }
        else {
          uint64_t v80 = 4;
        }
        switch(v80)
        {
          case 1:
            int v81 = *a1;
            goto LABEL_183;
          case 2:
            int v81 = *(unsigned __int16 *)a1;
            goto LABEL_183;
          case 3:
            int v81 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_183;
          case 4:
            int v81 = *(_DWORD *)a1;
LABEL_183:
            if (v53 < 4) {
              unsigned int v78 = (v81 | (v79 << (8 * v53))) + 2;
            }
            else {
              unsigned int v78 = v81 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v67 = ~v48;
      uint64_t v99 = v442;
      if (v78 == 1)
      {
        uint64_t v99 = v441;
        uint64_t v100 = v443;
      }
      else
      {
        uint64_t v100 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v99 + 8))(a1, v100);
      uint64_t v69 = (unsigned __int8 *)((unint64_t)&a1[v429] & v432);
      unsigned int v96 = v69[v53];
      unsigned int v97 = v96 - 2;
      if (v96 < 2)
      {
LABEL_195:
        unint64_t v68 = v41;
      }
      else
      {
        if (v53 <= 3) {
          uint64_t v101 = v53;
        }
        else {
          uint64_t v101 = 4;
        }
        unint64_t v68 = v41;
        switch(v101)
        {
          case 1:
LABEL_194:
            int v102 = *v69;
            goto LABEL_199;
          case 2:
LABEL_196:
            int v102 = *(unsigned __int16 *)v69;
            goto LABEL_199;
          case 3:
LABEL_197:
            int v102 = *(unsigned __int16 *)v69 | (v69[2] << 16);
            goto LABEL_199;
          case 4:
LABEL_198:
            int v102 = *(_DWORD *)v69;
LABEL_199:
            if (v448 < 4) {
              unsigned int v96 = (v102 | (v97 << (8 * v448))) + 2;
            }
            else {
              unsigned int v96 = v102 + 2;
            }
            break;
          default:
            break;
        }
      }
LABEL_202:
      if (v96 == 1) {
LABEL_203:
      }
        (*(void (**)(unsigned __int8 *, uint64_t))(v441 + 8))(v69, v443);
      else {
        (*(void (**)(unsigned __int8 *, uint64_t))(v442 + 8))(v69, AssociatedTypeWitness);
      }
      break;
    case 8u:
      unsigned int v82 = a1[v53];
      unsigned int v83 = v82 - 2;
      if (v82 < 2)
      {
        uint64_t v67 = ~v48;
      }
      else
      {
        if (v53 <= 3) {
          uint64_t v84 = v53;
        }
        else {
          uint64_t v84 = 4;
        }
        uint64_t v67 = ~v48;
        switch(v84)
        {
          case 1:
            int v85 = *a1;
            goto LABEL_357;
          case 2:
            int v85 = *(unsigned __int16 *)a1;
            goto LABEL_357;
          case 3:
            int v85 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_357;
          case 4:
            int v85 = *(_DWORD *)a1;
LABEL_357:
            if (v53 < 4) {
              unsigned int v82 = (v85 | (v83 << (8 * v53))) + 2;
            }
            else {
              unsigned int v82 = v85 + 2;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v68 = v41;
      uint64_t v189 = v442;
      if (v82 == 1)
      {
        uint64_t v189 = v441;
        uint64_t v190 = v443;
      }
      else
      {
        uint64_t v190 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v189 + 8))(a1, v190);
      unsigned int v191 = (unsigned __int8 *)((unint64_t)&a1[v428] & v67);
      if (v447 > 3) {
        goto LABEL_364;
      }
      unsigned int v193 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      if (HIWORD(v193))
      {
        unsigned int v192 = *(_DWORD *)&v191[v447];
      }
      else if ((v193 | 0x10) <= 0xFF)
      {
LABEL_364:
        unsigned int v192 = v191[v447];
      }
      else
      {
        unsigned int v192 = *(unsigned __int16 *)&v191[v447];
      }
      unsigned int v194 = v192 - 16;
      if (v192 >= 0x10)
      {
        if (v447 <= 3) {
          uint64_t v195 = v447;
        }
        else {
          uint64_t v195 = 4;
        }
        switch(v195)
        {
          case 1:
            int v196 = *v191;
            goto LABEL_656;
          case 2:
            int v196 = *(unsigned __int16 *)v191;
            goto LABEL_656;
          case 3:
            int v196 = *(unsigned __int16 *)v191 | (*(unsigned __int8 *)(((unint64_t)&a1[v428] & v67) + 2) << 16);
            goto LABEL_656;
          case 4:
            int v196 = *(_DWORD *)v191;
LABEL_656:
            if (v447 < 4) {
              unsigned int v192 = (v196 | (v194 << (8 * v447))) + 16;
            }
            else {
              unsigned int v192 = v196 + 16;
            }
            break;
          default:
            break;
        }
      }
      switch(v192)
      {
        case 8u:
          (*(void (**)(unint64_t, uint64_t))(v414 + 8))((unint64_t)&a1[v428] & v67, v416);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v415 + 8))((v412 + ((unint64_t)&v191[v411] & 0xFFFFFFFFFFFFFFF8)) & v410, v417);
          goto LABEL_669;
        case 9u:
          goto LABEL_670;
        case 0xCu:
          goto LABEL_671;
        case 0xEu:
          goto LABEL_672;
        default:
          goto LABEL_204;
      }
    case 9u:
      unsigned int v86 = a1[v53];
      unsigned int v87 = v86 - 2;
      if (v86 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v88 = v53;
        }
        else {
          uint64_t v88 = 4;
        }
        switch(v88)
        {
          case 1:
            int v89 = *a1;
            goto LABEL_378;
          case 2:
            int v89 = *(unsigned __int16 *)a1;
            goto LABEL_378;
          case 3:
            int v89 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            goto LABEL_378;
          case 4:
            int v89 = *(_DWORD *)a1;
LABEL_378:
            if (v53 < 4) {
              unsigned int v86 = (v89 | (v87 << (8 * v53))) + 2;
            }
            else {
              unsigned int v86 = v89 + 2;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v67 = ~v48;
      unint64_t v68 = v41;
      uint64_t v197 = v442;
      if (v86 == 1)
      {
        uint64_t v197 = v441;
        uint64_t v198 = v443;
      }
      else
      {
        uint64_t v198 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, uint64_t))(v197 + 8))(a1, v198);
      unsigned int v191 = (unsigned __int8 *)((unint64_t)&a1[v440 + v31] & v434);
      if (v446 > 3) {
        goto LABEL_385;
      }
      unsigned int v200 = ((1 << v439) | 2u) >> v439;
      if (HIWORD(v200))
      {
        unsigned int v199 = *(_DWORD *)&v191[v446];
      }
      else if ((v200 | 0x10) <= 0xFF)
      {
LABEL_385:
        unsigned int v199 = v191[v446];
      }
      else
      {
        unsigned int v199 = *(unsigned __int16 *)&v191[v446];
      }
      unsigned int v201 = v199 - 16;
      if (v199 >= 0x10)
      {
        if (v446 <= 3) {
          uint64_t v202 = v446;
        }
        else {
          uint64_t v202 = 4;
        }
        switch(v202)
        {
          case 1:
            int v203 = *v191;
            goto LABEL_664;
          case 2:
            int v203 = *(unsigned __int16 *)v191;
            goto LABEL_664;
          case 3:
            int v203 = *(unsigned __int16 *)v191 | (*(unsigned __int8 *)(((unint64_t)&a1[v440 + v31] & v434) + 2) << 16);
            goto LABEL_664;
          case 4:
            int v203 = *(_DWORD *)v191;
LABEL_664:
            if (v446 < 4) {
              unsigned int v199 = (v203 | (v201 << v439)) + 16;
            }
            else {
              unsigned int v199 = v203 + 16;
            }
            break;
          default:
            break;
        }
      }
      switch(v199)
      {
        case 8u:
          (*(void (**)(unint64_t, uint64_t))(v421 + 8))((unint64_t)&a1[v440 + v31] & v434, v423);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v422 + 8))((v419 + ((unint64_t)&v191[v418] & 0xFFFFFFFFFFFFFFF8)) & v430, v424);
LABEL_669:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 9u:
LABEL_670:

          break;
        case 0xCu:
LABEL_671:
          sub_24D3E380C(*(void **)v191, *((id *)v191 + 1), v191[16]);
          break;
        case 0xEu:
LABEL_672:
          unint64_t v309 = *((void *)v191 + 2);
          if (v309 >> 60 != 11 && v309 >> 60 != 15) {
            sub_24D400DCC(*((void *)v191 + 1), v309);
          }
          break;
        default:
          goto LABEL_204;
      }
      break;
    case 0xAu:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v90 = v53;
        }
        else {
          uint64_t v90 = 4;
        }
        switch(v90)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 0xBu:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v66 = v53;
        }
        else {
          uint64_t v66 = 4;
        }
        switch(v66)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 0xCu:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v91 = v53;
        }
        else {
          uint64_t v91 = 4;
        }
        switch(v91)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    case 0xDu:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v92 = v53;
        }
        else {
          uint64_t v92 = 4;
        }
        switch(v92)
        {
          case 1:
            goto LABEL_154;
          case 2:
            goto LABEL_156;
          case 3:
            goto LABEL_158;
          case 4:
            goto LABEL_160;
          default:
            goto LABEL_162;
        }
      }
      goto LABEL_162;
    default:
      unsigned int v63 = a1[v53];
      unsigned int v64 = v63 - 2;
      if (v63 >= 2)
      {
        if (v53 <= 3) {
          uint64_t v65 = v53;
        }
        else {
          uint64_t v65 = 4;
        }
        switch(v65)
        {
          case 1:
LABEL_154:
            int v93 = *a1;
            if (v53 < 4) {
              goto LABEL_159;
            }
            goto LABEL_161;
          case 2:
LABEL_156:
            int v93 = *(unsigned __int16 *)a1;
            if (v53 >= 4) {
              goto LABEL_161;
            }
            goto LABEL_159;
          case 3:
LABEL_158:
            int v93 = *(unsigned __int16 *)a1 | (a1[2] << 16);
            if (v53 < 4) {
              goto LABEL_159;
            }
            goto LABEL_161;
          case 4:
LABEL_160:
            int v93 = *(_DWORD *)a1;
            if (v53 < 4) {
LABEL_159:
            }
              unsigned int v63 = (v93 | (v64 << (8 * v53))) + 2;
            else {
LABEL_161:
            }
              unsigned int v63 = v93 + 2;
            break;
          default:
            break;
        }
      }
LABEL_162:
      uint64_t v67 = ~v48;
      unint64_t v68 = v41;
      if (v63 == 1) {
        (*(void (**)(unsigned __int8 *, uint64_t))(v441 + 8))(a1, v443);
      }
      else {
        (*(void (**)(unsigned __int8 *, uint64_t))(v442 + 8))(a1, AssociatedTypeWitness);
      }
      break;
  }
LABEL_204:
  if (v447 > 3) {
    goto LABEL_208;
  }
  unsigned int v103 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
  unsigned int v104 = v103 | 0x10;
  BOOL v23 = HIWORD(v103) == 0;
  uint64_t v105 = 2;
  if (!v23) {
    uint64_t v105 = 4;
  }
  if (v104 <= 0xFF) {
LABEL_208:
  }
    uint64_t v105 = 1;
  unint64_t v106 = v68;
  unsigned int v107 = a2;
  unint64_t v108 = v449 + v105;
  if (v108 <= v450) {
    unint64_t v108 = v450;
  }
  if (v446 > 3) {
    goto LABEL_215;
  }
  unsigned int v109 = ((1 << v439) | 2u) >> v439;
  unsigned int v110 = v109 | 0x10;
  BOOL v23 = HIWORD(v109) == 0;
  uint64_t v111 = 2;
  if (!v23) {
    uint64_t v111 = 4;
  }
  if (v110 <= 0xFF) {
LABEL_215:
  }
    uint64_t v111 = 1;
  unint64_t v112 = v68 + v111;
  if (v112 > v108) {
    unint64_t v108 = v112;
  }
  if (v36 > v108) {
    unint64_t v108 = v36;
  }
  if (v52 > v108) {
    unint64_t v108 = v52;
  }
  if (v437 > v108) {
    unint64_t v108 = v437;
  }
  if (v38 > v108) {
    unint64_t v108 = v38;
  }
  unsigned int v113 = a2[v108];
  unsigned int v114 = v113 - 14;
  if (v113 >= 0xE)
  {
    if (v447 > 3) {
      goto LABEL_231;
    }
    unsigned int v115 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
    unsigned int v116 = v115 | 0x10;
    BOOL v23 = HIWORD(v115) == 0;
    uint64_t v117 = 2;
    if (!v23) {
      uint64_t v117 = 4;
    }
    if (v116 <= 0xFF) {
LABEL_231:
    }
      uint64_t v117 = 1;
    unint64_t v118 = v449 + v117;
    if (v118 <= v450) {
      unint64_t v118 = v450;
    }
    if (v446 > 3) {
      goto LABEL_238;
    }
    unsigned int v119 = ((1 << v439) | 2u) >> v439;
    unsigned int v120 = v119 | 0x10;
    BOOL v23 = HIWORD(v119) == 0;
    uint64_t v121 = 2;
    if (!v23) {
      uint64_t v121 = 4;
    }
    if (v120 <= 0xFF) {
LABEL_238:
    }
      uint64_t v121 = 1;
    unint64_t v122 = v68 + v121;
    if (v122 > v118) {
      unint64_t v118 = v122;
    }
    if (v36 > v118) {
      unint64_t v118 = v36;
    }
    if (v52 > v118) {
      unint64_t v118 = v52;
    }
    if (v437 > v118) {
      unint64_t v118 = v437;
    }
    if (v38 > v118) {
      LODWORD(v118) = v38;
    }
    if (v118 <= 3) {
      uint64_t v123 = v118;
    }
    else {
      uint64_t v123 = 4;
    }
    switch(v123)
    {
      case 1:
        int v124 = *a2;
        if (v118 < 4) {
          goto LABEL_256;
        }
        goto LABEL_260;
      case 2:
        int v124 = *(unsigned __int16 *)a2;
        if (v118 < 4) {
          goto LABEL_256;
        }
        goto LABEL_260;
      case 3:
        int v124 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v118 < 4) {
          goto LABEL_256;
        }
        goto LABEL_260;
      case 4:
        int v124 = *(_DWORD *)a2;
        if (v118 < 4) {
LABEL_256:
        }
          unsigned int v113 = (v124 | (v114 << (8 * v118))) + 14;
        else {
LABEL_260:
        }
          unsigned int v113 = v124 + 14;
        break;
      default:
        break;
    }
  }
  switch(v113)
  {
    case 1u:
      unint64_t v133 = v38;
      (*(void (**)(unsigned __int8 *))(v442 + 32))(a1);
      unint64_t v134 = (unint64_t)&a1[v427] & v426;
      unint64_t v135 = (unint64_t)&a2[v427] & v426;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v441 + 32))(v134, v135, v443);
      *(unsigned char *)(v134 + v425) = *(unsigned char *)(v135 + v425);
      if (v447 > 3) {
        goto LABEL_279;
      }
      unsigned int v136 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v137 = v136 | 0x10;
      BOOL v23 = HIWORD(v136) == 0;
      uint64_t v138 = 2;
      if (!v23) {
        uint64_t v138 = 4;
      }
      if (v137 <= 0xFF) {
LABEL_279:
      }
        uint64_t v138 = 1;
      unint64_t v38 = v133;
      unint64_t v139 = v449 + v138;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      uint64_t v2 = a1;
      if (v446 > 3) {
        goto LABEL_286;
      }
      char v140 = 1;
      unsigned int v141 = ((1 << v439) | 2u) >> v439;
      unsigned int v142 = v141 | 0x10;
      BOOL v23 = HIWORD(v141) == 0;
      uint64_t v143 = 2;
      if (!v23) {
        uint64_t v143 = 4;
      }
      if (v142 <= 0xFF)
      {
LABEL_286:
        uint64_t v143 = 1;
        char v140 = 1;
      }
      goto LABEL_967;
    case 2u:
      unsigned int v144 = a2[v448];
      unsigned int v145 = v144 - 2;
      if (v144 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v146 = v448;
        }
        else {
          uint64_t v146 = 4;
        }
        switch(v146)
        {
          case 1:
            int v147 = *a2;
            goto LABEL_441;
          case 2:
            int v147 = *(unsigned __int16 *)a2;
            goto LABEL_441;
          case 3:
            int v147 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_441;
          case 4:
            int v147 = *(_DWORD *)a2;
LABEL_441:
            if (v448 < 4) {
              unsigned int v144 = (v147 | (v145 << (8 * v448))) + 2;
            }
            else {
              unsigned int v144 = v147 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v218 = v144 == 1;
      uint64_t v219 = v442;
      if (v144 == 1) {
        uint64_t v219 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v219 + 32))(a1);
      a1[v448] = v218;
      a1[v440] = a2[v440];
      if (v447 > 3) {
        goto LABEL_450;
      }
      unsigned int v220 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v221 = v220 | 0x10;
      BOOL v23 = HIWORD(v220) == 0;
      uint64_t v222 = 2;
      if (!v23) {
        uint64_t v222 = 4;
      }
      if (v221 <= 0xFF) {
LABEL_450:
      }
        uint64_t v222 = 1;
      unint64_t v139 = v449 + v222;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v223 = ((1 << v439) | 2u) >> v439;
        unsigned int v224 = v223 | 0x10;
        BOOL v23 = HIWORD(v223) == 0;
        char v140 = 2;
        uint64_t v143 = 4;
        if (v23) {
          uint64_t v143 = 2;
        }
        if (v224 > 0xFF) {
          goto LABEL_967;
        }
      }
      char v140 = 2;
      goto LABEL_966;
    case 3u:
      unsigned int v148 = a2[v448];
      unsigned int v149 = v148 - 2;
      if (v148 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v150 = v448;
        }
        else {
          uint64_t v150 = 4;
        }
        switch(v150)
        {
          case 1:
            int v151 = *a2;
            goto LABEL_462;
          case 2:
            int v151 = *(unsigned __int16 *)a2;
            goto LABEL_462;
          case 3:
            int v151 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_462;
          case 4:
            int v151 = *(_DWORD *)a2;
LABEL_462:
            if (v448 < 4) {
              unsigned int v148 = (v151 | (v149 << (8 * v448))) + 2;
            }
            else {
              unsigned int v148 = v151 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v225 = v148 == 1;
      uint64_t v226 = v442;
      if (v148 == 1)
      {
        uint64_t v226 = v441;
        uint64_t v227 = v443;
      }
      else
      {
        uint64_t v227 = AssociatedTypeWitness;
      }
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v226 + 32))(a1, a2, v227);
      a1[v448] = v225;
      if (v447 > 3) {
        goto LABEL_472;
      }
      unsigned int v228 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v229 = v228 | 0x10;
      BOOL v23 = HIWORD(v228) == 0;
      uint64_t v230 = 2;
      if (!v23) {
        uint64_t v230 = 4;
      }
      if (v229 <= 0xFF) {
LABEL_472:
      }
        uint64_t v230 = 1;
      unint64_t v139 = v449 + v230;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v231 = ((1 << v439) | 2u) >> v439;
        unsigned int v232 = v231 | 0x10;
        BOOL v23 = HIWORD(v231) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v232 > 0xFF)
        {
          char v140 = 3;
          goto LABEL_967;
        }
      }
      char v140 = 3;
      goto LABEL_966;
    case 4u:
      unsigned int v152 = a2[v448];
      unsigned int v153 = v152 - 2;
      if (v152 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v154 = v448;
        }
        else {
          uint64_t v154 = 4;
        }
        switch(v154)
        {
          case 1:
            int v155 = *a2;
            goto LABEL_484;
          case 2:
            int v155 = *(unsigned __int16 *)a2;
            goto LABEL_484;
          case 3:
            int v155 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_484;
          case 4:
            int v155 = *(_DWORD *)a2;
LABEL_484:
            if (v448 < 4) {
              unsigned int v152 = (v155 | (v153 << (8 * v448))) + 2;
            }
            else {
              unsigned int v152 = v155 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v233 = v152 == 1;
      uint64_t v234 = v442;
      if (v152 == 1) {
        uint64_t v234 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v234 + 32))(a1);
      a1[v448] = v233;
      *(void *)((unint64_t)&a1[v440 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v440 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v447 > 3) {
        goto LABEL_493;
      }
      unsigned int v235 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v236 = v235 | 0x10;
      BOOL v23 = HIWORD(v235) == 0;
      uint64_t v237 = 2;
      if (!v23) {
        uint64_t v237 = 4;
      }
      if (v236 <= 0xFF) {
LABEL_493:
      }
        uint64_t v237 = 1;
      unint64_t v139 = v449 + v237;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v238 = ((1 << v439) | 2u) >> v439;
        unsigned int v239 = v238 | 0x10;
        BOOL v23 = HIWORD(v238) == 0;
        uint64_t v143 = 2;
        char v140 = 4;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v239 > 0xFF) {
          goto LABEL_967;
        }
      }
      char v140 = 4;
      goto LABEL_966;
    case 5u:
      unsigned int v156 = a2[v448];
      unsigned int v157 = v156 - 2;
      if (v156 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v158 = v448;
        }
        else {
          uint64_t v158 = 4;
        }
        switch(v158)
        {
          case 1:
            int v159 = *a2;
            goto LABEL_504;
          case 2:
            int v159 = *(unsigned __int16 *)a2;
            goto LABEL_504;
          case 3:
            int v159 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_504;
          case 4:
            int v159 = *(_DWORD *)a2;
LABEL_504:
            if (v448 < 4) {
              unsigned int v156 = (v159 | (v157 << (8 * v448))) + 2;
            }
            else {
              unsigned int v156 = v159 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v240 = v156 == 1;
      uint64_t v241 = v442;
      if (v156 == 1) {
        uint64_t v241 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v241 + 32))(a1);
      a1[v448] = v240;
      *(void *)((unint64_t)&a1[v440 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&a2[v440 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v447 > 3) {
        goto LABEL_513;
      }
      unsigned int v242 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v243 = v242 | 0x10;
      BOOL v23 = HIWORD(v242) == 0;
      uint64_t v244 = 2;
      if (!v23) {
        uint64_t v244 = 4;
      }
      if (v243 <= 0xFF) {
LABEL_513:
      }
        uint64_t v244 = 1;
      unint64_t v139 = v449 + v244;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v245 = ((1 << v439) | 2u) >> v439;
        unsigned int v246 = v245 | 0x10;
        BOOL v23 = HIWORD(v245) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v246 > 0xFF)
        {
          char v140 = 5;
          goto LABEL_967;
        }
      }
      char v140 = 5;
      goto LABEL_966;
    case 6u:
      unsigned int v160 = a2[v448];
      unsigned int v161 = v160 - 2;
      if (v160 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v162 = v448;
        }
        else {
          uint64_t v162 = 4;
        }
        switch(v162)
        {
          case 1:
            int v163 = *a2;
            goto LABEL_525;
          case 2:
            int v163 = *(unsigned __int16 *)a2;
            goto LABEL_525;
          case 3:
            int v163 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_525;
          case 4:
            int v163 = *(_DWORD *)a2;
LABEL_525:
            if (v448 < 4) {
              unsigned int v160 = (v163 | (v161 << (8 * v448))) + 2;
            }
            else {
              unsigned int v160 = v163 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v247 = v160 == 1;
      uint64_t v248 = v442;
      if (v160 == 1) {
        uint64_t v248 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v248 + 32))(a1);
      a1[v448] = v247;
      unint64_t v249 = (unsigned __int8 *)((unint64_t)&a2[v429] & v432);
      unsigned int v250 = v249[v448];
      unsigned int v251 = v250 - 2;
      if (v250 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v252 = v448;
        }
        else {
          uint64_t v252 = 4;
        }
        switch(v252)
        {
          case 1:
            int v253 = *v249;
            goto LABEL_678;
          case 2:
            int v253 = *(unsigned __int16 *)v249;
            goto LABEL_678;
          case 3:
            int v253 = *(unsigned __int16 *)v249 | (*(unsigned __int8 *)(((unint64_t)&a2[v429] & v432) + 2) << 16);
            goto LABEL_678;
          case 4:
            int v253 = *(_DWORD *)v249;
LABEL_678:
            if (v448 < 4) {
              unsigned int v250 = (v253 | (v251 << (8 * v448))) + 2;
            }
            else {
              unsigned int v250 = v253 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v310 = v250 == 1;
      uint64_t v311 = v442;
      if (v250 == 1) {
        uint64_t v311 = v441;
      }
      (*(void (**)(unint64_t))(v311 + 32))((unint64_t)&a1[v429] & v432);
      *(unsigned char *)(((unint64_t)&a1[v429] & v432) + v448) = v310;
      if (v447 > 3) {
        goto LABEL_687;
      }
      unsigned int v312 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v313 = v312 | 0x10;
      BOOL v23 = HIWORD(v312) == 0;
      uint64_t v314 = 2;
      if (!v23) {
        uint64_t v314 = 4;
      }
      if (v313 <= 0xFF) {
LABEL_687:
      }
        uint64_t v314 = 1;
      unint64_t v139 = v449 + v314;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v315 = ((1 << v439) | 2u) >> v439;
        unsigned int v316 = v315 | 0x10;
        BOOL v23 = HIWORD(v315) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v316 > 0xFF)
        {
          char v140 = 6;
          goto LABEL_967;
        }
      }
      char v140 = 6;
      goto LABEL_966;
    case 7u:
      unsigned int v164 = a2[v448];
      unsigned int v165 = v164 - 2;
      if (v164 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v166 = v448;
        }
        else {
          uint64_t v166 = 4;
        }
        switch(v166)
        {
          case 1:
            int v167 = *a2;
            goto LABEL_539;
          case 2:
            int v167 = *(unsigned __int16 *)a2;
            goto LABEL_539;
          case 3:
            int v167 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_539;
          case 4:
            int v167 = *(_DWORD *)a2;
LABEL_539:
            if (v448 < 4) {
              unsigned int v164 = (v167 | (v165 << (8 * v448))) + 2;
            }
            else {
              unsigned int v164 = v167 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v254 = v164 == 1;
      uint64_t v255 = v442;
      if (v164 == 1) {
        uint64_t v255 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v255 + 32))(a1);
      a1[v448] = v254;
      uint64_t v256 = (unsigned __int8 *)((unint64_t)&a2[v429] & v432);
      unsigned int v257 = v256[v448];
      unsigned int v258 = v257 - 2;
      if (v257 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v259 = v448;
        }
        else {
          uint64_t v259 = 4;
        }
        switch(v259)
        {
          case 1:
            int v260 = *v256;
            goto LABEL_699;
          case 2:
            int v260 = *(unsigned __int16 *)v256;
            goto LABEL_699;
          case 3:
            int v260 = *(unsigned __int16 *)v256 | (*(unsigned __int8 *)(((unint64_t)&a2[v429] & v432) + 2) << 16);
            goto LABEL_699;
          case 4:
            int v260 = *(_DWORD *)v256;
LABEL_699:
            if (v448 < 4) {
              unsigned int v257 = (v260 | (v258 << (8 * v448))) + 2;
            }
            else {
              unsigned int v257 = v260 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v317 = v257 == 1;
      uint64_t v318 = v442;
      if (v257 == 1) {
        uint64_t v318 = v441;
      }
      (*(void (**)(unint64_t))(v318 + 32))((unint64_t)&a1[v429] & v432);
      *(unsigned char *)(((unint64_t)&a1[v429] & v432) + v448) = v317;
      if (v447 > 3) {
        goto LABEL_708;
      }
      unsigned int v319 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v320 = v319 | 0x10;
      BOOL v23 = HIWORD(v319) == 0;
      uint64_t v321 = 2;
      if (!v23) {
        uint64_t v321 = 4;
      }
      if (v320 <= 0xFF) {
LABEL_708:
      }
        uint64_t v321 = 1;
      unint64_t v139 = v449 + v321;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v322 = ((1 << v439) | 2u) >> v439;
        unsigned int v323 = v322 | 0x10;
        BOOL v23 = HIWORD(v322) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v323 > 0xFF)
        {
          char v140 = 7;
          goto LABEL_967;
        }
      }
      char v140 = 7;
      goto LABEL_966;
    case 8u:
      unsigned int v168 = a2[v448];
      unsigned int v169 = v168 - 2;
      if (v168 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v170 = v448;
        }
        else {
          uint64_t v170 = 4;
        }
        switch(v170)
        {
          case 1:
            int v171 = *a2;
            goto LABEL_553;
          case 2:
            int v171 = *(unsigned __int16 *)a2;
            goto LABEL_553;
          case 3:
            int v171 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_553;
          case 4:
            int v171 = *(_DWORD *)a2;
LABEL_553:
            if (v448 < 4) {
              unsigned int v168 = (v171 | (v169 << (8 * v448))) + 2;
            }
            else {
              unsigned int v168 = v171 + 2;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v261 = v38;
      BOOL v262 = v168 == 1;
      uint64_t v263 = v442;
      if (v168 == 1) {
        uint64_t v263 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v263 + 32))(a1);
      a1[v448] = v262;
      uint64_t v264 = (unsigned __int8 *)((unint64_t)&a2[v428] & v67);
      if (v447 > 3) {
        goto LABEL_559;
      }
      unsigned int v266 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      if (HIWORD(v266))
      {
        unsigned int v265 = *(_DWORD *)&v264[v447];
      }
      else if ((v266 | 0x10) <= 0xFF)
      {
LABEL_559:
        unsigned int v265 = v264[v447];
      }
      else
      {
        unsigned int v265 = *(unsigned __int16 *)&v264[v447];
      }
      unsigned int v267 = (_OWORD *)((unint64_t)&a1[v428] & v67);
      unsigned int v268 = v265 - 16;
      unsigned int v269 = v446;
      if (v265 >= 0x10)
      {
        if (v447 <= 3) {
          uint64_t v270 = v447;
        }
        else {
          uint64_t v270 = 4;
        }
        switch(v270)
        {
          case 1:
            int v271 = *v264;
            goto LABEL_720;
          case 2:
            int v271 = *(unsigned __int16 *)v264;
            goto LABEL_720;
          case 3:
            int v271 = *(unsigned __int16 *)((unint64_t)&a2[v428] & v67) | (*(unsigned __int8 *)(((unint64_t)&a2[v428] & v67)
                                                                                                  + 2) << 16);
            goto LABEL_720;
          case 4:
            int v271 = *(_DWORD *)v264;
LABEL_720:
            if (v447 < 4) {
              v271 |= v268 << (8 * v447);
            }
            unsigned int v265 = v271 + 16;
            break;
          default:
            goto LABEL_723;
        }
      }
      break;
    case 9u:
      unsigned int v172 = a2[v448];
      unsigned int v173 = v172 - 2;
      if (v172 < 2)
      {
        uint64_t v175 = ~v31;
      }
      else
      {
        if (v448 <= 3) {
          uint64_t v174 = v448;
        }
        else {
          uint64_t v174 = 4;
        }
        uint64_t v175 = ~v31;
        switch(v174)
        {
          case 1:
            int v176 = *a2;
            goto LABEL_573;
          case 2:
            int v176 = *(unsigned __int16 *)a2;
            goto LABEL_573;
          case 3:
            int v176 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_573;
          case 4:
            int v176 = *(_DWORD *)a2;
LABEL_573:
            if (v448 < 4) {
              unsigned int v172 = (v176 | (v173 << (8 * v448))) + 2;
            }
            else {
              unsigned int v172 = v176 + 2;
            }
            break;
          default:
            break;
        }
      }
      unint64_t v436 = v38;
      BOOL v272 = v172 == 1;
      uint64_t v273 = v442;
      if (v172 == 1) {
        uint64_t v273 = v441;
      }
      unsigned int v274 = v107;
      (*(void (**)(unsigned __int8 *))(v273 + 32))(a1);
      a1[v448] = v272;
      uint64_t v275 = (unsigned __int8 *)((unint64_t)&v274[v440 + v31] & v175);
      uint64_t v276 = v446;
      if (v446 > 3) {
        goto LABEL_579;
      }
      unsigned int v278 = ((1 << v439) | 2u) >> v439;
      if (HIWORD(v278))
      {
        unsigned int v277 = *(_DWORD *)&v275[v446];
      }
      else if ((v278 | 0x10) <= 0xFF)
      {
LABEL_579:
        unsigned int v277 = v275[v446];
      }
      else
      {
        unsigned int v277 = *(unsigned __int16 *)&v275[v446];
      }
      uint64_t v279 = (_OWORD *)((unint64_t)&a1[v440 + v31] & v175);
      unsigned int v280 = v277 - 16;
      if (v277 >= 0x10)
      {
        if (v446 <= 3) {
          uint64_t v281 = v446;
        }
        else {
          uint64_t v281 = 4;
        }
        switch(v281)
        {
          case 1:
            int v282 = *v275;
            goto LABEL_731;
          case 2:
            int v282 = *(unsigned __int16 *)v275;
            goto LABEL_731;
          case 3:
            int v282 = *(unsigned __int16 *)v275 | (v275[2] << 16);
            goto LABEL_731;
          case 4:
            int v282 = *(_DWORD *)v275;
LABEL_731:
            if (v446 < 4) {
              v282 |= v280 << v439;
            }
            unsigned int v277 = v282 + 16;
            break;
          default:
            break;
        }
      }
      switch(v277)
      {
        case 0u:
          long long v329 = *(_OWORD *)v275;
          *(void *)(((unint64_t)&a1[v440 + v31] & v175) + 0x10) = *((void *)v275 + 2);
          _OWORD *v279 = v329;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_738;
          }
          unsigned int v331 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v331))
          {
            *(_DWORD *)((char *)v279 + v446) = 0;
          }
          else if ((v331 | 0x10) > 0xFF)
          {
            *(_WORD *)((char *)v279 + v446) = 0;
          }
          else
          {
LABEL_738:
            *((unsigned char *)v279 + v446) = 0;
          }
          break;
        case 1u:
          *(void *)uint64_t v279 = *(void *)v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_798;
          }
          unsigned int v353 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v353))
          {
            *(_DWORD *)((char *)v279 + v446) = 1;
          }
          else
          {
            if ((v353 | 0x10) > 0xFF)
            {
              __int16 v400 = 1;
              goto LABEL_952;
            }
LABEL_798:
            *((unsigned char *)v279 + v446) = 1;
          }
          break;
        case 2u:
          _OWORD *v279 = *(_OWORD *)v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_802;
          }
          unsigned int v354 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v354))
          {
            *(_DWORD *)((char *)v279 + v446) = 2;
          }
          else
          {
            if ((v354 | 0x10) > 0xFF)
            {
              __int16 v400 = 2;
              goto LABEL_952;
            }
LABEL_802:
            *((unsigned char *)v279 + v446) = 2;
          }
          break;
        case 3u:
          *(unsigned char *)uint64_t v279 = *v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_806;
          }
          unsigned int v355 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v355))
          {
            *(_DWORD *)((char *)v279 + v446) = 3;
          }
          else
          {
            if ((v355 | 0x10) > 0xFF)
            {
              __int16 v400 = 3;
              goto LABEL_952;
            }
LABEL_806:
            *((unsigned char *)v279 + v446) = 3;
          }
          break;
        case 4u:
          *(unsigned char *)uint64_t v279 = *v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_810;
          }
          unsigned int v356 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v356))
          {
            *(_DWORD *)((char *)v279 + v446) = 4;
          }
          else
          {
            if ((v356 | 0x10) > 0xFF)
            {
              __int16 v400 = 4;
              goto LABEL_952;
            }
LABEL_810:
            *((unsigned char *)v279 + v446) = 4;
          }
          break;
        case 5u:
          *(unsigned char *)uint64_t v279 = *v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_814;
          }
          unsigned int v357 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v357))
          {
            *(_DWORD *)((char *)v279 + v446) = 5;
          }
          else
          {
            if ((v357 | 0x10) > 0xFF)
            {
              __int16 v400 = 5;
              goto LABEL_952;
            }
LABEL_814:
            *((unsigned char *)v279 + v446) = 5;
          }
          break;
        case 6u:
          *(unsigned char *)uint64_t v279 = *v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_818;
          }
          unsigned int v358 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v358))
          {
            *(_DWORD *)((char *)v279 + v446) = 6;
          }
          else
          {
            if ((v358 | 0x10) > 0xFF)
            {
              __int16 v400 = 6;
              goto LABEL_952;
            }
LABEL_818:
            *((unsigned char *)v279 + v446) = 6;
          }
          break;
        case 7u:
          *(unsigned char *)uint64_t v279 = *v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_822;
          }
          unsigned int v359 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v359))
          {
            *(_DWORD *)((char *)v279 + v446) = 7;
          }
          else
          {
            if ((v359 | 0x10) > 0xFF)
            {
              __int16 v400 = 7;
              goto LABEL_952;
            }
LABEL_822:
            *((unsigned char *)v279 + v446) = 7;
          }
          break;
        case 8u:
          (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v421 + 32))(v279, v275, v423);
          unsigned int v360 = (void *)(((unint64_t)v279 + v418) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v361 = (void *)((unint64_t)&v275[v418] & 0xFFFFFFFFFFFFFFF8);
          *unsigned int v360 = *v361;
          unint64_t v362 = ((unint64_t)v360 + v419) & v430;
          unint64_t v363 = ((unint64_t)v361 + v419) & v430;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v422 + 32))(v362, v363, v424);
          uint64_t v276 = v446;
          unint64_t v364 = v420 + v362;
          unint64_t v106 = v68;
          v364 &= 0xFFFFFFFFFFFFFFF8;
          unint64_t v365 = v420 + v363;
          unint64_t v44 = v437;
          v365 &= 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v364 = *(void *)v365;
          *(_OWORD *)((v364 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v365 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v366 = (unint64_t)v279 + v409;
          *(unsigned char *)unint64_t v366 = v275[v409];
          *(unsigned char *)(v366 | 1) = *(unsigned char *)((unint64_t)&v275[v409] | 1);
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_826;
          }
          unsigned int v367 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v367))
          {
            *(_DWORD *)((char *)v279 + v446) = 8;
          }
          else
          {
            if ((v367 | 0x10) > 0xFF)
            {
              __int16 v400 = 8;
              goto LABEL_952;
            }
LABEL_826:
            *((unsigned char *)v279 + v446) = 8;
          }
          break;
        case 9u:
          *(void *)uint64_t v279 = *(void *)v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_830;
          }
          unsigned int v368 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v368))
          {
            *(_DWORD *)((char *)v279 + v446) = 9;
          }
          else
          {
            if ((v368 | 0x10) > 0xFF)
            {
              __int16 v400 = 9;
              goto LABEL_952;
            }
LABEL_830:
            *((unsigned char *)v279 + v446) = 9;
          }
          break;
        case 0xAu:
          *(unsigned char *)uint64_t v279 = *v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_834;
          }
          unsigned int v369 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v369))
          {
            *(_DWORD *)((char *)v279 + v446) = 10;
          }
          else
          {
            if ((v369 | 0x10) > 0xFF)
            {
              __int16 v400 = 10;
              goto LABEL_952;
            }
LABEL_834:
            *((unsigned char *)v279 + v446) = 10;
          }
          break;
        case 0xBu:
          *(_WORD *)uint64_t v279 = *(_WORD *)v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_838;
          }
          unsigned int v370 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v370))
          {
            *(_DWORD *)((char *)v279 + v446) = 11;
          }
          else
          {
            if ((v370 | 0x10) > 0xFF)
            {
              __int16 v400 = 11;
              goto LABEL_952;
            }
LABEL_838:
            *((unsigned char *)v279 + v446) = 11;
          }
          break;
        case 0xCu:
          long long v371 = *(_OWORD *)v275;
          *(unsigned char *)(((unint64_t)&a1[v440 + v31] & v175) + 0x10) = v275[16];
          _OWORD *v279 = v371;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_842;
          }
          unsigned int v372 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v372))
          {
            *(_DWORD *)((char *)v279 + v446) = 12;
          }
          else
          {
            if ((v372 | 0x10) > 0xFF)
            {
              __int16 v400 = 12;
              goto LABEL_952;
            }
LABEL_842:
            *((unsigned char *)v279 + v446) = 12;
          }
          break;
        case 0xDu:
          long long v373 = *(_OWORD *)v275;
          *(void *)(((unint64_t)&a1[v440 + v31] & v175) + 0x10) = *((void *)v275 + 2);
          _OWORD *v279 = v373;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_846;
          }
          unsigned int v374 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v374))
          {
            *(_DWORD *)((char *)v279 + v446) = 13;
          }
          else
          {
            if ((v374 | 0x10) > 0xFF)
            {
              __int16 v400 = 13;
              goto LABEL_952;
            }
LABEL_846:
            *((unsigned char *)v279 + v446) = 13;
          }
          break;
        case 0xEu:
          long long v375 = *(_OWORD *)v275;
          long long v376 = *((_OWORD *)v275 + 1);
          long long v377 = *((_OWORD *)v275 + 2);
          *(_OWORD *)(((unint64_t)&a1[v440 + v31] & v175) + 0x29) = *(_OWORD *)(v275 + 41);
          *(_OWORD *)(((unint64_t)&a1[v440 + v31] & v175) + 0x10) = v376;
          *(_OWORD *)(((unint64_t)&a1[v440 + v31] & v175) + 0x20) = v377;
          _OWORD *v279 = v375;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_850;
          }
          unsigned int v378 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v378))
          {
            *(_DWORD *)((char *)v279 + v446) = 14;
          }
          else
          {
            if ((v378 | 0x10) > 0xFF)
            {
              __int16 v400 = 14;
              goto LABEL_952;
            }
LABEL_850:
            *((unsigned char *)v279 + v446) = 14;
          }
          break;
        case 0xFu:
          *(unsigned char *)uint64_t v279 = *v275;
          unint64_t v38 = v436;
          unsigned int v330 = v447;
          if (v446 > 3) {
            goto LABEL_854;
          }
          unsigned int v379 = ((1 << v439) | 2u) >> v439;
          if (HIWORD(v379))
          {
            *(_DWORD *)((char *)v279 + v446) = 15;
          }
          else if ((v379 | 0x10) > 0xFF)
          {
            __int16 v400 = 15;
LABEL_952:
            *(_WORD *)((char *)v279 + v276) = v400;
          }
          else
          {
LABEL_854:
            *((unsigned char *)v279 + v446) = 15;
          }
          break;
        default:
          if (v446 > 3) {
            goto LABEL_873;
          }
          unsigned int v394 = ((1 << v439) | 2u) >> v439;
          unsigned int v395 = v394 | 0x10;
          BOOL v23 = HIWORD(v394) == 0;
          uint64_t v396 = 2;
          if (!v23) {
            uint64_t v396 = 4;
          }
          if (v395 <= 0xFF) {
LABEL_873:
          }
            uint64_t v396 = 1;
          memcpy(v279, v275, v396 + v446);
          LODWORD(v276) = v446;
          unsigned int v330 = v447;
          unint64_t v38 = v436;
          break;
      }
      uint64_t v2 = a1;
      if (v330 > 3) {
        goto LABEL_957;
      }
      unsigned int v401 = ((1 << (8 * v330)) | 2u) >> (8 * v330);
      unsigned int v402 = v401 | 0x10;
      BOOL v23 = HIWORD(v401) == 0;
      uint64_t v403 = 2;
      if (!v23) {
        uint64_t v403 = 4;
      }
      if (v402 <= 0xFF) {
LABEL_957:
      }
        uint64_t v403 = 1;
      unint64_t v139 = v449 + v403;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v276 <= 3)
      {
        unsigned int v404 = ((1 << v439) | 2u) >> v439;
        unsigned int v405 = v404 | 0x10;
        BOOL v23 = HIWORD(v404) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v405 > 0xFF)
        {
          char v140 = 9;
          goto LABEL_967;
        }
      }
      char v140 = 9;
      goto LABEL_966;
    case 0xAu:
      unsigned int v177 = a2[v448];
      unsigned int v178 = v177 - 2;
      if (v177 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v179 = v448;
        }
        else {
          uint64_t v179 = 4;
        }
        switch(v179)
        {
          case 1:
            int v180 = *a2;
            goto LABEL_593;
          case 2:
            int v180 = *(unsigned __int16 *)a2;
            goto LABEL_593;
          case 3:
            int v180 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_593;
          case 4:
            int v180 = *(_DWORD *)a2;
LABEL_593:
            if (v448 < 4) {
              unsigned int v177 = (v180 | (v178 << (8 * v448))) + 2;
            }
            else {
              unsigned int v177 = v180 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v283 = v177 == 1;
      uint64_t v284 = v442;
      if (v177 == 1) {
        uint64_t v284 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v284 + 32))(a1);
      a1[v448] = v283;
      unint64_t v285 = (unint64_t)&a2[v440 + 7] & 0xFFFFFFFFFFFFFFF8;
      char v286 = *(unsigned char *)(v285 + 8);
      unint64_t v287 = (unint64_t)&a1[v440 + 7] & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v287 = *(void *)v285;
      *(unsigned char *)(v287 + 8) = v286;
      if (v447 > 3) {
        goto LABEL_602;
      }
      unsigned int v288 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v289 = v288 | 0x10;
      BOOL v23 = HIWORD(v288) == 0;
      uint64_t v290 = 2;
      if (!v23) {
        uint64_t v290 = 4;
      }
      if (v289 <= 0xFF) {
LABEL_602:
      }
        uint64_t v290 = 1;
      unint64_t v139 = v449 + v290;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v291 = ((1 << v439) | 2u) >> v439;
        unsigned int v292 = v291 | 0x10;
        BOOL v23 = HIWORD(v291) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v292 > 0xFF)
        {
          char v140 = 10;
          goto LABEL_967;
        }
      }
      char v140 = 10;
      goto LABEL_966;
    case 0xBu:
      unsigned int v129 = a2[v448];
      unsigned int v130 = v129 - 2;
      if (v129 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v131 = v448;
        }
        else {
          uint64_t v131 = 4;
        }
        switch(v131)
        {
          case 1:
            int v132 = *a2;
            goto LABEL_420;
          case 2:
            int v132 = *(unsigned __int16 *)a2;
            goto LABEL_420;
          case 3:
            int v132 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_420;
          case 4:
            int v132 = *(_DWORD *)a2;
LABEL_420:
            if (v448 < 4) {
              unsigned int v129 = (v132 | (v130 << (8 * v448))) + 2;
            }
            else {
              unsigned int v129 = v132 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v211 = v129 == 1;
      uint64_t v212 = v442;
      if (v129 == 1) {
        uint64_t v212 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v212 + 32))(a1);
      a1[v448] = v211;
      *(_OWORD *)((unint64_t)&a1[v440 + 7] & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((unint64_t)&a2[v440 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v447 > 3) {
        goto LABEL_429;
      }
      unsigned int v213 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v214 = v213 | 0x10;
      BOOL v23 = HIWORD(v213) == 0;
      uint64_t v215 = 2;
      if (!v23) {
        uint64_t v215 = 4;
      }
      if (v214 <= 0xFF) {
LABEL_429:
      }
        uint64_t v215 = 1;
      unint64_t v139 = v449 + v215;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v216 = ((1 << v439) | 2u) >> v439;
        unsigned int v217 = v216 | 0x10;
        BOOL v23 = HIWORD(v216) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v217 > 0xFF)
        {
          char v140 = 11;
          goto LABEL_967;
        }
      }
      char v140 = 11;
      goto LABEL_966;
    case 0xCu:
      unsigned int v181 = a2[v448];
      unsigned int v182 = v181 - 2;
      if (v181 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v183 = v448;
        }
        else {
          uint64_t v183 = 4;
        }
        switch(v183)
        {
          case 1:
            int v184 = *a2;
            goto LABEL_614;
          case 2:
            int v184 = *(unsigned __int16 *)a2;
            goto LABEL_614;
          case 3:
            int v184 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_614;
          case 4:
            int v184 = *(_DWORD *)a2;
LABEL_614:
            if (v448 < 4) {
              unsigned int v181 = (v184 | (v182 << (8 * v448))) + 2;
            }
            else {
              unsigned int v181 = v184 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v293 = v181 == 1;
      uint64_t v294 = v442;
      if (v181 == 1) {
        uint64_t v294 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v294 + 32))(a1);
      a1[v448] = v293;
      a1[v440] = a2[v440];
      if (v447 > 3) {
        goto LABEL_623;
      }
      unsigned int v295 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v296 = v295 | 0x10;
      BOOL v23 = HIWORD(v295) == 0;
      uint64_t v297 = 2;
      if (!v23) {
        uint64_t v297 = 4;
      }
      if (v296 <= 0xFF) {
LABEL_623:
      }
        uint64_t v297 = 1;
      unint64_t v139 = v449 + v297;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v298 = ((1 << v439) | 2u) >> v439;
        unsigned int v299 = v298 | 0x10;
        BOOL v23 = HIWORD(v298) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v299 > 0xFF)
        {
          char v140 = 12;
          goto LABEL_967;
        }
      }
      char v140 = 12;
      goto LABEL_966;
    case 0xDu:
      unsigned int v185 = a2[v448];
      unsigned int v186 = v185 - 2;
      if (v185 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v187 = v448;
        }
        else {
          uint64_t v187 = 4;
        }
        switch(v187)
        {
          case 1:
            int v188 = *a2;
            goto LABEL_635;
          case 2:
            int v188 = *(unsigned __int16 *)a2;
            goto LABEL_635;
          case 3:
            int v188 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_635;
          case 4:
            int v188 = *(_DWORD *)a2;
LABEL_635:
            if (v448 < 4) {
              unsigned int v185 = (v188 | (v186 << (8 * v448))) + 2;
            }
            else {
              unsigned int v185 = v188 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v300 = v185 == 1;
      uint64_t v301 = v442;
      if (v185 == 1) {
        uint64_t v301 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v301 + 32))(a1);
      a1[v448] = v300;
      unsigned int v302 = (void *)((unint64_t)&a1[v440 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v303 = (void *)((unint64_t)&a2[v440 + 7] & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v302 = *v303;
      *(void *)(((unint64_t)v302 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v303 + 15) & 0xFFFFFFFFFFFFFFF8);
      if (v447 > 3) {
        goto LABEL_644;
      }
      unsigned int v304 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v305 = v304 | 0x10;
      BOOL v23 = HIWORD(v304) == 0;
      uint64_t v306 = 2;
      if (!v23) {
        uint64_t v306 = 4;
      }
      if (v305 <= 0xFF) {
LABEL_644:
      }
        uint64_t v306 = 1;
      unint64_t v139 = v449 + v306;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v307 = ((1 << v439) | 2u) >> v439;
        unsigned int v308 = v307 | 0x10;
        BOOL v23 = HIWORD(v307) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v308 > 0xFF)
        {
          char v140 = 13;
          goto LABEL_967;
        }
      }
      char v140 = 13;
      goto LABEL_966;
    default:
      unsigned int v125 = a2[v448];
      unsigned int v126 = v125 - 2;
      if (v125 >= 2)
      {
        if (v448 <= 3) {
          uint64_t v127 = v448;
        }
        else {
          uint64_t v127 = 4;
        }
        switch(v127)
        {
          case 1:
            int v128 = *a2;
            goto LABEL_399;
          case 2:
            int v128 = *(unsigned __int16 *)a2;
            goto LABEL_399;
          case 3:
            int v128 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_399;
          case 4:
            int v128 = *(_DWORD *)a2;
LABEL_399:
            if (v448 < 4) {
              unsigned int v125 = (v128 | (v126 << (8 * v448))) + 2;
            }
            else {
              unsigned int v125 = v128 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v204 = v125 == 1;
      uint64_t v205 = v442;
      if (v125 == 1) {
        uint64_t v205 = v441;
      }
      (*(void (**)(unsigned __int8 *))(v205 + 32))(a1);
      a1[v448] = v204;
      a1[v440] = a2[v440];
      if (v447 > 3) {
        goto LABEL_408;
      }
      unsigned int v206 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v207 = v206 | 0x10;
      BOOL v23 = HIWORD(v206) == 0;
      uint64_t v208 = 2;
      if (!v23) {
        uint64_t v208 = 4;
      }
      if (v207 <= 0xFF) {
LABEL_408:
      }
        uint64_t v208 = 1;
      unint64_t v139 = v449 + v208;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v446 <= 3)
      {
        unsigned int v209 = ((1 << v439) | 2u) >> v439;
        unsigned int v210 = v209 | 0x10;
        BOOL v23 = HIWORD(v209) == 0;
        uint64_t v143 = 2;
        if (!v23) {
          uint64_t v143 = 4;
        }
        if (v210 > 0xFF)
        {
          char v140 = 0;
          goto LABEL_967;
        }
      }
      char v140 = 0;
      goto LABEL_966;
  }
LABEL_723:
  switch(v265)
  {
    case 0u:
      long long v324 = *(_OWORD *)v264;
      *(void *)(((unint64_t)&a1[v428] & v67) + 0x10) = *(void *)(((unint64_t)&a2[v428] & v67) + 0x10);
      *unsigned int v267 = v324;
      LODWORD(v325) = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_727;
      }
      unsigned int v327 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v327 | 0x10;
      if (HIWORD(v327))
      {
        *(_DWORD *)((char *)v267 + v447) = 0;
      }
      else
      {
        if (v328 <= 0xFF)
        {
LABEL_727:
          *((unsigned char *)v267 + v447) = 0;
          goto LABEL_864;
        }
        *(_WORD *)((char *)v267 + v447) = 0;
      }
      goto LABEL_926;
    case 1u:
      *(void *)unsigned int v267 = *(void *)v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_742;
      }
      __int16 v332 = 1;
      unsigned int v333 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v333 | 0x10;
      if (HIWORD(v333))
      {
        *(_DWORD *)((char *)v267 + v447) = 1;
        goto LABEL_926;
      }
      if (v328 > 0xFF) {
        goto LABEL_925;
      }
LABEL_742:
      char v334 = 1;
      goto LABEL_863;
    case 2u:
      *unsigned int v267 = *(_OWORD *)v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_746;
      }
      unsigned int v335 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v335 | 0x10;
      if (HIWORD(v335))
      {
        *(_DWORD *)((char *)v267 + v447) = 2;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_746:
        char v334 = 2;
        goto LABEL_863;
      }
      __int16 v332 = 2;
      goto LABEL_925;
    case 3u:
      *(unsigned char *)unsigned int v267 = *v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_750;
      }
      unsigned int v336 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v336 | 0x10;
      if (HIWORD(v336))
      {
        *(_DWORD *)((char *)v267 + v447) = 3;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_750:
        char v334 = 3;
        goto LABEL_863;
      }
      __int16 v332 = 3;
      goto LABEL_925;
    case 4u:
      *(unsigned char *)unsigned int v267 = *v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_754;
      }
      unsigned int v337 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v337 | 0x10;
      if (HIWORD(v337))
      {
        *(_DWORD *)((char *)v267 + v447) = 4;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_754:
        char v334 = 4;
        goto LABEL_863;
      }
      __int16 v332 = 4;
      goto LABEL_925;
    case 5u:
      *(unsigned char *)unsigned int v267 = *v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_758;
      }
      unsigned int v338 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v338 | 0x10;
      if (HIWORD(v338))
      {
        *(_DWORD *)((char *)v267 + v447) = 5;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_758:
        char v334 = 5;
        goto LABEL_863;
      }
      __int16 v332 = 5;
      goto LABEL_925;
    case 6u:
      *(unsigned char *)unsigned int v267 = *v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_762;
      }
      unsigned int v339 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v339 | 0x10;
      if (HIWORD(v339))
      {
        *(_DWORD *)((char *)v267 + v447) = 6;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_762:
        char v334 = 6;
        goto LABEL_863;
      }
      __int16 v332 = 6;
      goto LABEL_925;
    case 7u:
      *(unsigned char *)unsigned int v267 = *v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_766;
      }
      unsigned int v340 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v340 | 0x10;
      if (HIWORD(v340))
      {
        *(_DWORD *)((char *)v267 + v447) = 7;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_766:
        char v334 = 7;
        goto LABEL_863;
      }
      __int16 v332 = 7;
      goto LABEL_925;
    case 8u:
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v414 + 32))(v267, v264, v416);
      unint64_t v383 = (void *)(((unint64_t)v267 + v411) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v384 = (void *)((unint64_t)&v264[v411] & 0xFFFFFFFFFFFFFFF8);
      void *v383 = *v384;
      unint64_t v385 = ((unint64_t)v383 + v412) & v410;
      unint64_t v386 = v106;
      unint64_t v387 = ((unint64_t)v384 + v412) & v410;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v415 + 32))(v385, v387, v417);
      unsigned int v269 = v446;
      uint64_t v388 = (void *)((v413 + v385) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v389 = v413 + v387;
      unint64_t v106 = v386;
      v389 &= 0xFFFFFFFFFFFFFFF8;
      void *v388 = *(void *)v389;
      *(_OWORD *)(((unint64_t)v388 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v389 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v390 = (unint64_t)v267 + v408;
      *(unsigned char *)unint64_t v390 = v264[v408];
      *(unsigned char *)(v390 | 1) = *(unsigned char *)((unint64_t)&v264[v408] | 1);
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_862;
      }
      unsigned int v397 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v397 | 0x10;
      if (HIWORD(v397))
      {
        *(_DWORD *)((char *)v267 + v447) = 8;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_862:
        char v334 = 8;
        goto LABEL_863;
      }
      __int16 v332 = 8;
      goto LABEL_925;
    case 9u:
      *(void *)unsigned int v267 = *(void *)v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_770;
      }
      unsigned int v341 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v341 | 0x10;
      if (HIWORD(v341))
      {
        *(_DWORD *)((char *)v267 + v447) = 9;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_770:
        char v334 = 9;
        goto LABEL_863;
      }
      __int16 v332 = 9;
      goto LABEL_925;
    case 0xAu:
      *(unsigned char *)unsigned int v267 = *v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_774;
      }
      unsigned int v342 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v342 | 0x10;
      if (HIWORD(v342))
      {
        *(_DWORD *)((char *)v267 + v447) = 10;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_774:
        char v334 = 10;
        goto LABEL_863;
      }
      __int16 v332 = 10;
      goto LABEL_925;
    case 0xBu:
      *(_WORD *)unsigned int v267 = *(_WORD *)v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_778;
      }
      unsigned int v343 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v343 | 0x10;
      if (HIWORD(v343))
      {
        *(_DWORD *)((char *)v267 + v447) = 11;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_778:
        char v334 = 11;
        goto LABEL_863;
      }
      __int16 v332 = 11;
      goto LABEL_925;
    case 0xCu:
      long long v344 = *(_OWORD *)v264;
      *(unsigned char *)(((unint64_t)&a1[v428] & v67) + 0x10) = *(unsigned char *)(((unint64_t)&a2[v428] & v67) + 0x10);
      *unsigned int v267 = v344;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_782;
      }
      unsigned int v345 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v345 | 0x10;
      if (HIWORD(v345))
      {
        *(_DWORD *)((char *)v267 + v447) = 12;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_782:
        char v334 = 12;
        goto LABEL_863;
      }
      __int16 v332 = 12;
      goto LABEL_925;
    case 0xDu:
      long long v346 = *(_OWORD *)v264;
      *(void *)(((unint64_t)&a1[v428] & v67) + 0x10) = *(void *)(((unint64_t)&a2[v428] & v67) + 0x10);
      *unsigned int v267 = v346;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_786;
      }
      unsigned int v347 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v347 | 0x10;
      if (HIWORD(v347))
      {
        *(_DWORD *)((char *)v267 + v447) = 13;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_786:
        char v334 = 13;
        goto LABEL_863;
      }
      __int16 v332 = 13;
      goto LABEL_925;
    case 0xEu:
      long long v348 = *(_OWORD *)v264;
      long long v349 = *(_OWORD *)(((unint64_t)&a2[v428] & v67) + 0x10);
      long long v350 = *(_OWORD *)(((unint64_t)&a2[v428] & v67) + 0x20);
      *(_OWORD *)(((unint64_t)&a1[v428] & v67) + 0x29) = *(_OWORD *)(((unint64_t)&a2[v428] & v67) + 0x29);
      *(_OWORD *)(((unint64_t)&a1[v428] & v67) + 0x10) = v349;
      *(_OWORD *)(((unint64_t)&a1[v428] & v67) + 0x20) = v350;
      *unsigned int v267 = v348;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_790;
      }
      unsigned int v351 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v351 | 0x10;
      if (HIWORD(v351))
      {
        *(_DWORD *)((char *)v267 + v447) = 14;
        goto LABEL_926;
      }
      if (v328 <= 0xFF)
      {
LABEL_790:
        char v334 = 14;
        goto LABEL_863;
      }
      __int16 v332 = 14;
      goto LABEL_925;
    case 0xFu:
      *(unsigned char *)unsigned int v267 = *v264;
      uint64_t v325 = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      if (v447 > 3) {
        goto LABEL_794;
      }
      unsigned int v352 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v328 = v352 | 0x10;
      if (HIWORD(v352))
      {
        *(_DWORD *)((char *)v267 + v447) = 15;
LABEL_926:
        BOOL v23 = HIWORD(v328) == 0;
        uint64_t v393 = 2;
        if (!v23) {
          uint64_t v393 = 4;
        }
        uint64_t v2 = a1;
        goto LABEL_929;
      }
      if (v328 > 0xFF)
      {
        __int16 v332 = 15;
LABEL_925:
        *(_WORD *)((char *)v267 + v325) = v332;
        goto LABEL_926;
      }
LABEL_794:
      char v334 = 15;
LABEL_863:
      *((unsigned char *)v267 + v325) = v334;
LABEL_864:
      uint64_t v2 = a1;
      if (v325 > 3) {
        goto LABEL_868;
      }
      unsigned int v391 = ((1 << (8 * v325)) | 2u) >> (8 * v325);
      unsigned int v392 = v391 | 0x10;
      BOOL v23 = HIWORD(v391) == 0;
      uint64_t v393 = 2;
      if (!v23) {
        uint64_t v393 = 4;
      }
      if (v392 <= 0xFF) {
LABEL_868:
      }
        uint64_t v393 = 1;
LABEL_929:
      unint64_t v139 = v326 + v393;
      if (v139 <= v450) {
        unint64_t v139 = v450;
      }
      if (v269 > 3) {
        goto LABEL_936;
      }
      unsigned int v398 = ((1 << v439) | 2u) >> v439;
      unsigned int v399 = v398 | 0x10;
      BOOL v23 = HIWORD(v398) == 0;
      uint64_t v143 = 2;
      if (!v23) {
        uint64_t v143 = 4;
      }
      if (v399 <= 0xFF)
      {
LABEL_936:
        char v140 = 8;
LABEL_966:
        uint64_t v143 = 1;
        goto LABEL_967;
      }
      char v140 = 8;
LABEL_967:
      unint64_t v406 = v106 + v143;
      if (v406 > v139) {
        unint64_t v139 = v406;
      }
      if (v36 > v139) {
        unint64_t v139 = v36;
      }
      if (v52 > v139) {
        unint64_t v139 = v52;
      }
      if (v44 > v139) {
        unint64_t v139 = v44;
      }
      if (v38 > v139) {
        unint64_t v139 = v38;
      }
      v2[v139] = v140;
      return v2;
    default:
      if (v447 > 3) {
        goto LABEL_859;
      }
      unsigned int v380 = ((1 << (8 * v447)) | 2u) >> (8 * v447);
      unsigned int v381 = v380 | 0x10;
      BOOL v23 = HIWORD(v380) == 0;
      uint64_t v382 = 2;
      if (!v23) {
        uint64_t v382 = 4;
      }
      if (v381 <= 0xFF) {
LABEL_859:
      }
        uint64_t v382 = 1;
      memcpy(v267, v264, v382 + v447);
      unsigned int v269 = v446;
      LODWORD(v325) = v447;
      unint64_t v38 = v261;
      uint64_t v326 = v449;
      goto LABEL_864;
  }
}

uint64_t sub_24D4D9DE4(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  if (v5 <= v3) {
    unint64_t v6 = v3;
  }
  else {
    unint64_t v6 = *(void *)(v4 + 64);
  }
  unint64_t v7 = v6 + 1;
  unsigned __int8 v8 = *(_DWORD *)(v4 + 80);
  unint64_t v9 = v5 + ((v3 + v8) & ~(unint64_t)v8);
  unint64_t v61 = v6 + 2;
  if (v9 + 1 > v6 + 2) {
    unint64_t v10 = v9 + 1;
  }
  else {
    unint64_t v10 = v6 + 2;
  }
  if (v7 > v10) {
    unint64_t v10 = v6 + 1;
  }
  unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFF8;
  if ((v6 & 0xFFFFFFFFFFFFFFF8) + 16 > v10) {
    unint64_t v10 = (v6 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v12 = *(unsigned __int8 *)(v2 + 80) | v8;
  unint64_t v13 = ((v7 + v12) & ~v12) + v7;
  if (v13 > v10) {
    unint64_t v10 = v13;
  }
  unint64_t v59 = v10;
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  unint64_t v58 = (v7 + (v15 | v17 | 7)) & ~(unint64_t)(v15 | v17 | 7);
  unint64_t v18 = ((((*(void *)(v16 + 64) + ((v17 + ((*(void *)(v14 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 18;
  if (v18 <= 0x39) {
    uint64_t v19 = 57;
  }
  else {
    uint64_t v19 = v18;
  }
  uint64_t v20 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v21 = *(_DWORD *)(v20 + 80) & 0xF8;
  uint64_t v22 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v23 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v24 = v21 | v23 | 7;
  unint64_t v25 = ((((*(void *)(v22 + 64) + ((v23 + ((*(void *)(v20 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v23) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 18;
  if (v25 <= 0x39) {
    unint64_t v25 = 57;
  }
  unint64_t v26 = (v11 + 23) & 0xFFFFFFFFFFFFFFF8;
  if (v19 > 3) {
    goto LABEL_22;
  }
  unsigned int v27 = ((1 << (8 * v19)) | 2u) >> (8 * v19);
  uint64_t v28 = 4;
  if (!HIWORD(v27)) {
    uint64_t v28 = 2;
  }
  if ((v27 | 0x10) <= 0xFF) {
LABEL_22:
  }
    uint64_t v28 = 1;
  unint64_t v29 = (v7 + v24) & ~v24;
  unint64_t v30 = v11 + 17;
  unint64_t v31 = v11 + 24;
  unint64_t v32 = v26 + 8;
  unint64_t v33 = v19 + v58 + v28;
  if (v33 <= v59) {
    unint64_t v33 = v59;
  }
  if (v25 > 3) {
    goto LABEL_29;
  }
  unsigned int v34 = ((1 << (8 * v25)) | 2u) >> (8 * v25);
  unsigned int v35 = v34 | 0x10;
  BOOL v36 = HIWORD(v34) == 0;
  uint64_t v37 = 2;
  if (!v36) {
    uint64_t v37 = 4;
  }
  if (v35 <= 0xFF) {
LABEL_29:
  }
    uint64_t v37 = 1;
  unint64_t v38 = v25 + v29;
  unint64_t v39 = v38 + v37;
  if (v39 > v33) {
    unint64_t v33 = v39;
  }
  if (v30 > v33) {
    unint64_t v33 = v11 + 17;
  }
  if (v31 > v33) {
    unint64_t v33 = v11 + 24;
  }
  if (v61 > v33) {
    unint64_t v33 = v61;
  }
  if (v32 > v33) {
    unint64_t v33 = v26 + 8;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_61;
  }
  unint64_t v40 = v33 + 1;
  char v41 = 8 * v40;
  if (v40 <= 3)
  {
    unsigned int v44 = ((a2 + ~(-1 << v41) - 242) >> v41) + 1;
    if (HIWORD(v44))
    {
      int v42 = *(_DWORD *)((char *)a1 + v40);
      if (!v42) {
        goto LABEL_61;
      }
      goto LABEL_51;
    }
    if (v44 > 0xFF)
    {
      int v42 = *(unsigned __int16 *)((char *)a1 + v40);
      if (!*(unsigned __int16 *)((char *)a1 + v40)) {
        goto LABEL_61;
      }
      goto LABEL_51;
    }
    if (v44 < 2)
    {
LABEL_61:
      if (v19 > 3) {
        goto LABEL_65;
      }
      unsigned int v48 = ((1 << (8 * v19)) | 2u) >> (8 * v19);
      unsigned int v49 = v48 | 0x10;
      BOOL v36 = HIWORD(v48) == 0;
      uint64_t v50 = 2;
      if (!v36) {
        uint64_t v50 = 4;
      }
      if (v49 <= 0xFF) {
LABEL_65:
      }
        uint64_t v50 = 1;
      unint64_t v51 = v19 + v58 + v50;
      if (v51 <= v59) {
        unint64_t v51 = v59;
      }
      if (v25 > 3) {
        goto LABEL_72;
      }
      unsigned int v52 = ((1 << (8 * v25)) | 2u) >> (8 * v25);
      unsigned int v53 = v52 | 0x10;
      BOOL v36 = HIWORD(v52) == 0;
      uint64_t v54 = 2;
      if (!v36) {
        uint64_t v54 = 4;
      }
      if (v53 <= 0xFF) {
LABEL_72:
      }
        uint64_t v54 = 1;
      unint64_t v55 = v38 + v54;
      if (v55 <= v51) {
        unint64_t v55 = v51;
      }
      if (v30 > v55) {
        unint64_t v55 = v11 + 17;
      }
      if (v31 > v55) {
        unint64_t v55 = v11 + 24;
      }
      if (v61 > v55) {
        unint64_t v55 = v61;
      }
      if (v32 > v55) {
        unint64_t v55 = v32;
      }
      unsigned int v56 = *((unsigned __int8 *)a1 + v55);
      if (v56 >= 0xE) {
        return (v56 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v42 = *((unsigned __int8 *)a1 + v40);
  if (!*((unsigned char *)a1 + v40)) {
    goto LABEL_61;
  }
LABEL_51:
  int v45 = (v42 - 1) << v41;
  if (v40 > 3) {
    int v45 = 0;
  }
  if (v40)
  {
    if (v40 <= 3) {
      int v46 = v40;
    }
    else {
      int v46 = 4;
    }
    switch(v46)
    {
      case 2:
        int v47 = *a1;
        break;
      case 3:
        int v47 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v47 = *(_DWORD *)a1;
        break;
      default:
        int v47 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v47 = 0;
  }
  return (v47 | v45) + 243;
}

void sub_24D4DA458(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= v4) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = *(void *)(v5 + 64);
  }
  unint64_t v8 = v7 + 1;
  unsigned __int8 v9 = *(_DWORD *)(v5 + 80);
  unint64_t v10 = v6 + ((v4 + v9) & ~(unint64_t)v9);
  if (v10 + 1 > v7 + 2) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v7 + 2;
  }
  if (v8 > v11) {
    unint64_t v11 = v7 + 1;
  }
  unint64_t v12 = v7 & 0xFFFFFFFFFFFFFFF8;
  if ((v7 & 0xFFFFFFFFFFFFFFF8) + 16 > v11) {
    unint64_t v11 = (v7 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v13 = *(unsigned __int8 *)(v3 + 80) | v9;
  unint64_t v14 = ((v8 + v13) & ~v13) + v8;
  if (v14 > v11) {
    unint64_t v11 = v14;
  }
  unint64_t v56 = v11;
  unint64_t v57 = v7 + 2;
  uint64_t v15 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v16 = *(_DWORD *)(v15 + 80) & 0xF8;
  uint64_t v17 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v18 = *(unsigned __int8 *)(v17 + 80);
  unint64_t v54 = (v8 + (v16 | v18 | 7)) & ~(unint64_t)(v16 | v18 | 7);
  unint64_t v19 = ((((*(void *)(v17 + 64) + ((v18 + ((*(void *)(v15 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v18) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 18;
  if (v19 <= 0x39) {
    uint64_t v20 = 57;
  }
  else {
    uint64_t v20 = v19;
  }
  uint64_t v21 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v22 = *(_DWORD *)(v21 + 80) & 0xF8;
  uint64_t v23 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = v22 | v24 | 7;
  unint64_t v26 = ((((*(void *)(v23 + 64) + ((v24 + ((*(void *)(v21 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v24) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 18;
  if (v26 <= 0x39) {
    unint64_t v26 = 57;
  }
  if (v20 > 3) {
    goto LABEL_22;
  }
  unsigned int v27 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
  uint64_t v28 = 4;
  if (!HIWORD(v27)) {
    uint64_t v28 = 2;
  }
  if ((v27 | 0x10) <= 0xFF) {
LABEL_22:
  }
    uint64_t v28 = 1;
  unint64_t v29 = (v8 + v25) & ~v25;
  unint64_t v30 = v12 + 17;
  unint64_t v31 = v12 + 24;
  unint64_t v32 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v33 = v20 + v54 + v28;
  if (v33 <= v56) {
    unint64_t v33 = v56;
  }
  if (v26 > 3) {
    goto LABEL_29;
  }
  unsigned int v34 = ((1 << (8 * v26)) | 2u) >> (8 * v26);
  unsigned int v35 = v34 | 0x10;
  BOOL v36 = HIWORD(v34) == 0;
  uint64_t v37 = 2;
  if (!v36) {
    uint64_t v37 = 4;
  }
  if (v35 <= 0xFF) {
LABEL_29:
  }
    uint64_t v37 = 1;
  unint64_t v38 = v26 + v29;
  unint64_t v39 = v38 + v37;
  if (v39 > v33) {
    unint64_t v33 = v39;
  }
  if (v30 > v33) {
    unint64_t v33 = v12 + 17;
  }
  if (v31 > v33) {
    unint64_t v33 = v12 + 24;
  }
  if (v57 > v33) {
    unint64_t v33 = v57;
  }
  if (v32 > v33) {
    unint64_t v33 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  size_t v40 = v33 + 1;
  if (a3 < 0xF3)
  {
    int v41 = 0;
  }
  else if (v40 <= 3)
  {
    unsigned int v44 = ((a3 + ~(-1 << (8 * v40)) - 242) >> (8 * v40)) + 1;
    if (HIWORD(v44))
    {
      int v41 = 4;
    }
    else if (v44 >= 0x100)
    {
      int v41 = 2;
    }
    else
    {
      int v41 = v44 > 1;
    }
  }
  else
  {
    int v41 = 1;
  }
  if (a2 > 0xF2)
  {
    unsigned int v42 = a2 - 243;
    if (v40 < 4)
    {
      int v43 = (v42 >> (8 * v40)) + 1;
      if (v40)
      {
        int v45 = v42 & ~(-1 << (8 * v40));
        bzero(a1, v40);
        if (v40 == 3)
        {
          *(_WORD *)a1 = v45;
          a1[2] = BYTE2(v45);
        }
        else if (v40 == 2)
        {
          *(_WORD *)a1 = v45;
        }
        else
        {
          *a1 = v45;
        }
      }
    }
    else
    {
      bzero(a1, v40);
      *(_DWORD *)a1 = v42;
      int v43 = 1;
    }
    switch(v41)
    {
      case 1:
        a1[v40] = v43;
        break;
      case 2:
        *(_WORD *)&a1[v40] = v43;
        break;
      case 3:
LABEL_93:
        __break(1u);
        JUMPOUT(0x24D4DAB14);
      case 4:
        *(_DWORD *)&a1[v40] = v43;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v41)
    {
      case 1:
        a1[v40] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_60;
      case 2:
        *(_WORD *)&a1[v40] = 0;
        goto LABEL_59;
      case 3:
        goto LABEL_93;
      case 4:
        *(_DWORD *)&a1[v40] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_60;
      default:
LABEL_59:
        if (a2)
        {
LABEL_60:
          if (v20 > 3) {
            goto LABEL_64;
          }
          unsigned int v46 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
          unsigned int v47 = v46 | 0x10;
          BOOL v36 = HIWORD(v46) == 0;
          uint64_t v48 = 2;
          if (!v36) {
            uint64_t v48 = 4;
          }
          if (v47 <= 0xFF) {
LABEL_64:
          }
            uint64_t v48 = 1;
          unint64_t v49 = v20 + v54 + v48;
          if (v49 <= v56) {
            unint64_t v49 = v56;
          }
          if (v26 > 3) {
            goto LABEL_71;
          }
          unsigned int v50 = ((1 << (8 * v26)) | 2u) >> (8 * v26);
          unsigned int v51 = v50 | 0x10;
          BOOL v36 = HIWORD(v50) == 0;
          uint64_t v52 = 2;
          if (!v36) {
            uint64_t v52 = 4;
          }
          if (v51 <= 0xFF) {
LABEL_71:
          }
            uint64_t v52 = 1;
          unint64_t v53 = v38 + v52;
          if (v53 <= v49) {
            unint64_t v53 = v49;
          }
          if (v30 > v53) {
            unint64_t v53 = v12 + 17;
          }
          if (v31 > v53) {
            unint64_t v53 = v12 + 24;
          }
          if (v57 > v53) {
            unint64_t v53 = v57;
          }
          if (v32 > v53) {
            unint64_t v53 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
          }
          a1[v53] = -(char)a2;
        }
        break;
    }
  }
}

uint64_t sub_24D4DAB3C(unsigned __int8 *a1)
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  if (v4 <= v2) {
    unint64_t v5 = v2;
  }
  else {
    unint64_t v5 = *(void *)(v3 + 64);
  }
  unint64_t v6 = v5 + 1;
  unsigned __int8 v7 = *(_DWORD *)(v3 + 80);
  unint64_t v8 = v4 + ((v2 + v7) & ~(unint64_t)v7);
  unint64_t v53 = v5 + 2;
  if (v8 + 1 > v5 + 2) {
    unint64_t v9 = v8 + 1;
  }
  else {
    unint64_t v9 = v5 + 2;
  }
  if (v6 > v9) {
    unint64_t v9 = v5 + 1;
  }
  unint64_t v10 = v5 & 0xFFFFFFFFFFFFFFF8;
  if ((v5 & 0xFFFFFFFFFFFFFFF8) + 16 > v9) {
    unint64_t v9 = (v5 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v11 = *(unsigned __int8 *)(v1 + 80) | v7;
  unint64_t v12 = ((v6 + v11) & ~v11) + v6;
  if (v12 > v9) {
    unint64_t v9 = v12;
  }
  unint64_t v55 = v9;
  uint64_t v13 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (v6 + (v14 | v16 | 7)) & ~(unint64_t)(v14 | v16 | 7);
  unint64_t v18 = ((((*(void *)(v15 + 64) + ((v16 + ((*(void *)(v13 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 18;
  if (v18 <= 0x39) {
    uint64_t v19 = 57;
  }
  else {
    uint64_t v19 = v18;
  }
  if (v19 > 3) {
    goto LABEL_20;
  }
  unsigned int v20 = ((1 << (8 * v19)) | 2u) >> (8 * v19);
  unsigned int v21 = v20 | 0x10;
  BOOL v22 = HIWORD(v20) == 0;
  uint64_t v23 = 2;
  if (!v22) {
    uint64_t v23 = 4;
  }
  if (v21 <= 0xFF) {
LABEL_20:
  }
    uint64_t v23 = 1;
  unint64_t v52 = v19 + v17;
  unint64_t v24 = v19 + v17 + v23;
  if (v24 <= v55) {
    unint64_t v25 = v55;
  }
  else {
    unint64_t v25 = v24;
  }
  uint64_t v26 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v27 = *(_DWORD *)(v26 + 80) & 0xF8;
  uint64_t v28 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v29 = *(unsigned __int8 *)(v28 + 80);
  unint64_t v30 = (v6 + (v27 | v29 | 7)) & ~(unint64_t)(v27 | v29 | 7);
  unint64_t v31 = ((((*(void *)(v28 + 64) + ((v29 + ((*(void *)(v26 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v29) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 18;
  if (v31 <= 0x39) {
    uint64_t v32 = 57;
  }
  else {
    uint64_t v32 = v31;
  }
  if (v32 <= 3) {
    unsigned int v33 = (((1 << (8 * v32)) | 2u) >> (8 * v32)) | 0x10;
  }
  else {
    unsigned int v33 = 17;
  }
  unint64_t v34 = v10 + 17;
  unint64_t v35 = v10 + 24;
  unint64_t v36 = ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v37 = 4;
  if (v33 < 0x10000) {
    uint64_t v37 = 2;
  }
  if (v33 < 0x100) {
    uint64_t v38 = 1;
  }
  else {
    uint64_t v38 = v37;
  }
  unint64_t v39 = v32 + v30;
  unint64_t v40 = v39 + v38;
  if (v40 <= v25) {
    unint64_t v40 = v25;
  }
  if (v34 > v40) {
    unint64_t v40 = v10 + 17;
  }
  if (v35 > v40) {
    unint64_t v40 = v10 + 24;
  }
  if (v53 > v40) {
    unint64_t v40 = v53;
  }
  if (v36 > v40) {
    unint64_t v40 = ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  uint64_t result = a1[v40];
  if (result >= 0xE)
  {
    if (v19 > 3) {
      goto LABEL_50;
    }
    unsigned int v42 = ((1 << (8 * v19)) | 2u) >> (8 * v19);
    unsigned int v43 = v42 | 0x10;
    BOOL v22 = HIWORD(v42) == 0;
    uint64_t v44 = 2;
    if (!v22) {
      uint64_t v44 = 4;
    }
    if (v43 <= 0xFF) {
LABEL_50:
    }
      uint64_t v44 = 1;
    unint64_t v45 = v52 + v44;
    if (v45 <= v55) {
      unint64_t v45 = v55;
    }
    if (v32 > 3) {
      goto LABEL_57;
    }
    unsigned int v46 = ((1 << (8 * v32)) | 2u) >> (8 * v32);
    unsigned int v47 = v46 | 0x10;
    BOOL v22 = HIWORD(v46) == 0;
    uint64_t v48 = 2;
    if (!v22) {
      uint64_t v48 = 4;
    }
    if (v47 <= 0xFF) {
LABEL_57:
    }
      uint64_t v48 = 1;
    unint64_t v49 = v39 + v48;
    if (v49 <= v45) {
      unint64_t v49 = v45;
    }
    if (v34 <= v49) {
      unint64_t v34 = v49;
    }
    if (v35 <= v34) {
      unint64_t v35 = v34;
    }
    if (v53 > v35) {
      unint64_t v35 = v53;
    }
    if (v36 <= v35) {
      LODWORD(v36) = v35;
    }
    if (v36 <= 3) {
      uint64_t v50 = v36;
    }
    else {
      uint64_t v50 = 4;
    }
    switch(v50)
    {
      case 1:
        int v51 = *a1;
        if (v36 < 4) {
          goto LABEL_77;
        }
        goto LABEL_79;
      case 2:
        int v51 = *(unsigned __int16 *)a1;
        if (v36 >= 4) {
          goto LABEL_79;
        }
        goto LABEL_77;
      case 3:
        int v51 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v36 < 4) {
          goto LABEL_77;
        }
        goto LABEL_79;
      case 4:
        int v51 = *(_DWORD *)a1;
        if (v36 < 4) {
LABEL_77:
        }
          uint64_t result = (v51 | ((result - 14) << (8 * v36))) + 14;
        else {
LABEL_79:
        }
          uint64_t result = (v51 + 14);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24D4DB11C(unsigned char *a1, unsigned int a2)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  if (v6 <= v4) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = *(void *)(v5 + 64);
  }
  unint64_t v8 = v7 + 1;
  unsigned __int8 v9 = *(_DWORD *)(v5 + 80);
  unint64_t v10 = v6 + ((v4 + v9) & ~(unint64_t)v9);
  unint64_t v87 = v7 + 2;
  if (v10 + 1 > v7 + 2) {
    unint64_t v11 = v10 + 1;
  }
  else {
    unint64_t v11 = v7 + 2;
  }
  if (v8 > v11) {
    unint64_t v11 = v7 + 1;
  }
  unint64_t v86 = v7 & 0xFFFFFFFFFFFFFFF8;
  if ((v7 & 0xFFFFFFFFFFFFFFF8) + 16 > v11) {
    unint64_t v11 = (v7 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v12 = *(unsigned __int8 *)(v3 + 80) | v9;
  unint64_t v13 = ((v8 + v12) & ~v12) + v8;
  if (v13 > v11) {
    unint64_t v11 = v13;
  }
  unint64_t v89 = v11;
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (v8 + (v15 | v17 | 7)) & ~(unint64_t)(v15 | v17 | 7);
  unint64_t v19 = ((((*(void *)(v16 + 64) + ((v17 + ((*(void *)(v14 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 18;
  if (v19 <= 0x39) {
    uint64_t v20 = 57;
  }
  else {
    uint64_t v20 = v19;
  }
  if (a2 > 0xD)
  {
    if (v20 > 3) {
      goto LABEL_50;
    }
    unsigned int v37 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
    unsigned int v38 = v37 | 0x10;
    BOOL v23 = HIWORD(v37) == 0;
    uint64_t v39 = 2;
    if (!v23) {
      uint64_t v39 = 4;
    }
    if (v38 <= 0xFF) {
LABEL_50:
    }
      uint64_t v39 = 1;
    unint64_t v85 = v20 + v18;
    unint64_t v40 = v20 + v18 + v39;
    if (v40 <= v89) {
      unint64_t v41 = v89;
    }
    else {
      unint64_t v41 = v40;
    }
    uint64_t v42 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    int v43 = *(_DWORD *)(v42 + 80) & 0xF8;
    uint64_t v44 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    uint64_t v45 = *(unsigned __int8 *)(v44 + 80);
    unint64_t v46 = (v8 + (v43 | v45 | 7)) & ~(unint64_t)(v43 | v45 | 7);
    unint64_t v47 = ((((*(void *)(v44 + 64) + ((v45 + ((*(void *)(v42 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v45) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 18;
    uint64_t v48 = 57;
    if (v47 > 0x39) {
      uint64_t v48 = v47;
    }
    char v49 = 8 * v48;
    if (v48 > 3) {
      goto LABEL_60;
    }
    unsigned int v50 = ((1 << v49) | 2u) >> v49;
    unsigned int v51 = v50 | 0x10;
    BOOL v23 = HIWORD(v50) == 0;
    uint64_t v52 = 2;
    if (!v23) {
      uint64_t v52 = 4;
    }
    if (v51 <= 0xFF) {
LABEL_60:
    }
      uint64_t v52 = 1;
    char v53 = 8 * v20;
    unint64_t v54 = v48 + v46;
    unint64_t v55 = v54 + v52;
    if (v55 <= v41) {
      unint64_t v56 = v41;
    }
    else {
      unint64_t v56 = v55;
    }
    unint64_t v57 = v86 + 17;
    if (v86 + 17 <= v56) {
      unint64_t v58 = v56;
    }
    else {
      unint64_t v58 = v86 + 17;
    }
    unint64_t v59 = v86 + 24;
    if (v86 + 24 > v58) {
      unint64_t v58 = v86 + 24;
    }
    if (v87 <= v58) {
      unint64_t v60 = v58;
    }
    else {
      unint64_t v60 = v87;
    }
    unint64_t v61 = ((v86 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    if (v61 > v60) {
      LODWORD(v60) = ((v86 + 23) & 0xFFFFFFF8) + 8;
    }
    BOOL v62 = v60 > 3;
    char v63 = 8 * v60;
    int v64 = (a2 - 14) & ~(-1 << v63);
    unsigned int v65 = ((a2 - 14) >> v63) + 14;
    if (v62)
    {
      LOBYTE(v65) = 14;
      int v66 = a2 - 14;
    }
    else
    {
      int v66 = v64;
    }
    if (v20 > 3) {
      goto LABEL_81;
    }
    unsigned int v67 = ((1 << v53) | 2u) >> v53;
    unsigned int v68 = v67 | 0x10;
    BOOL v23 = HIWORD(v67) == 0;
    uint64_t v69 = 2;
    if (!v23) {
      uint64_t v69 = 4;
    }
    if (v68 <= 0xFF) {
LABEL_81:
    }
      uint64_t v69 = 1;
    unint64_t v70 = v85 + v69;
    if (v70 <= v89) {
      unint64_t v70 = v89;
    }
    if (v48 > 3) {
      goto LABEL_88;
    }
    unsigned int v71 = ((1 << v49) | 2u) >> v49;
    unsigned int v72 = v71 | 0x10;
    BOOL v23 = HIWORD(v71) == 0;
    uint64_t v73 = 2;
    if (!v23) {
      uint64_t v73 = 4;
    }
    if (v72 <= 0xFF) {
LABEL_88:
    }
      uint64_t v73 = 1;
    unint64_t v74 = v54 + v73;
    if (v74 > v70) {
      unint64_t v70 = v74;
    }
    if (v57 > v70) {
      unint64_t v70 = v86 + 17;
    }
    if (v59 > v70) {
      unint64_t v70 = v86 + 24;
    }
    if (v87 > v70) {
      unint64_t v70 = v87;
    }
    if (v61 > v70) {
      unint64_t v70 = ((v86 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    a1[v70] = v65;
    if (v20 > 3) {
      goto LABEL_103;
    }
    unsigned int v75 = ((1 << v53) | 2u) >> v53;
    unsigned int v76 = v75 | 0x10;
    BOOL v23 = HIWORD(v75) == 0;
    uint64_t v77 = 2;
    if (!v23) {
      uint64_t v77 = 4;
    }
    if (v76 <= 0xFF) {
LABEL_103:
    }
      uint64_t v77 = 1;
    size_t v78 = v85 + v77;
    if (v78 <= v89) {
      size_t v78 = v89;
    }
    if (v48 > 3) {
      goto LABEL_110;
    }
    unsigned int v79 = ((1 << v49) | 2u) >> v49;
    unsigned int v80 = v79 | 0x10;
    BOOL v23 = HIWORD(v79) == 0;
    uint64_t v81 = 2;
    if (!v23) {
      uint64_t v81 = 4;
    }
    if (v80 <= 0xFF) {
LABEL_110:
    }
      uint64_t v81 = 1;
    size_t v82 = v54 + v81;
    if (v82 <= v78) {
      size_t v82 = v78;
    }
    if (v57 > v82) {
      size_t v82 = v86 + 17;
    }
    if (v59 > v82) {
      size_t v82 = v86 + 24;
    }
    if (v87 > v82) {
      size_t v82 = v87;
    }
    if (v61 <= v82) {
      size_t v83 = v82;
    }
    else {
      size_t v83 = ((v86 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (v83 >= 4) {
      int v84 = 4;
    }
    else {
      int v84 = v83;
    }
    bzero(a1, v83);
    switch(v84)
    {
      case 2:
        *(_WORD *)a1 = v66;
        break;
      case 3:
        *(_WORD *)a1 = v66;
        a1[2] = BYTE2(v66);
        break;
      case 4:
        *(_DWORD *)a1 = v66;
        break;
      default:
        *a1 = v66;
        break;
    }
  }
  else
  {
    if (v20 > 3) {
      goto LABEL_21;
    }
    unsigned int v21 = ((1 << (8 * v20)) | 2u) >> (8 * v20);
    unsigned int v22 = v21 | 0x10;
    BOOL v23 = HIWORD(v21) == 0;
    uint64_t v24 = 2;
    if (!v23) {
      uint64_t v24 = 4;
    }
    if (v22 <= 0xFF) {
LABEL_21:
    }
      uint64_t v24 = 1;
    unint64_t v25 = v20 + v18 + v24;
    if (v25 <= v89) {
      unint64_t v26 = v89;
    }
    else {
      unint64_t v26 = v25;
    }
    uint64_t v27 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    int v28 = *(_DWORD *)(v27 + 80) & 0xF8;
    uint64_t v29 = *(void *)(swift_getAssociatedTypeWitness() - 8);
    uint64_t v30 = *(unsigned __int8 *)(v29 + 80);
    unint64_t v31 = (v8 + (v28 | v30 | 7)) & ~(unint64_t)(v28 | v30 | 7);
    unint64_t v32 = ((((*(void *)(v29 + 64) + ((v30 + ((*(void *)(v27 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v30) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 18;
    if (v32 <= 0x39) {
      unint64_t v32 = 57;
    }
    if (v32 <= 3) {
      unsigned int v33 = (((1 << (8 * v32)) | 2u) >> (8 * v32)) | 0x10;
    }
    else {
      unsigned int v33 = 17;
    }
    uint64_t v34 = 4;
    if (v33 < 0x10000) {
      uint64_t v34 = 2;
    }
    if (v33 < 0x100) {
      uint64_t v35 = 1;
    }
    else {
      uint64_t v35 = v34;
    }
    unint64_t v36 = v32 + v31 + v35;
    if (v36 <= v26) {
      unint64_t v36 = v26;
    }
    if (v86 + 17 > v36) {
      unint64_t v36 = v86 + 17;
    }
    if (v86 + 24 > v36) {
      unint64_t v36 = v86 + 24;
    }
    if (v87 > v36) {
      unint64_t v36 = v87;
    }
    if (((v86 + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v36) {
      unint64_t v36 = ((v86 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    a1[v36] = a2;
  }
}

uint64_t type metadata accessor for ReconciliationMutation()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ReconciliationSideMutation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D4DB9F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_24D4DB9F8()
{
  uint64_t v3 = &unk_24DCD3DE0;
  uint64_t v4 = MEMORY[0x263F8CF70] + 64;
  uint64_t v5 = &unk_24DCD3D78;
  unint64_t v6 = &unk_24DCD3D90;
  unint64_t v7 = &unk_24DCD3D90;
  unint64_t v8 = &unk_24DCD3D90;
  unsigned __int8 v9 = &unk_24DCD3D90;
  unint64_t v10 = &unk_24DCD3D90;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t result = type metadata accessor for FileItemVersion();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    unint64_t v11 = &v2;
    uint64_t v12 = &unk_24DCD3DF8;
    unint64_t v13 = &unk_24DCD3E10;
    uint64_t v14 = &unk_24DCD3E28;
    int v15 = &unk_24DCD3E40;
    uint64_t v16 = &unk_24DCD3E58;
    uint64_t v17 = &unk_24DCD3E70;
    unint64_t v18 = &unk_24DCD3D90;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_24D4DBBB8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64) + 7;
  unint64_t v11 = (((v10 + ((v9 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v11 + 18 <= 0x39) {
    uint64_t v12 = 57;
  }
  else {
    uint64_t v12 = v11 + 18;
  }
  if (v12 > 3) {
    goto LABEL_8;
  }
  unsigned int v13 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
  unsigned int v14 = v13 | 0x10;
  BOOL v18 = HIWORD(v13) == 0;
  uint64_t v15 = 2;
  if (!v18) {
    uint64_t v15 = 4;
  }
  if (v14 <= 0xFF) {
LABEL_8:
  }
    uint64_t v15 = 1;
  unint64_t v16 = v15 + v12;
  unsigned int v17 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  BOOL v18 = v16 <= 0x18 && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) == 0;
  if (!v18 || v17 > 7)
  {
    uint64_t v20 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (unsigned __int8 *)(v20 + (((v17 | 7) + 16) & ~(unint64_t)(v17 | 7)));
    swift_retain();
    return (char *)a1;
  }
  if (v12 > 3) {
    goto LABEL_20;
  }
  unsigned int v23 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
  if (HIWORD(v23))
  {
    unsigned int v22 = *(_DWORD *)&a2[v12];
    goto LABEL_25;
  }
  if ((v23 | 0x10) <= 0xFF) {
LABEL_20:
  }
    unsigned int v22 = a2[v12];
  else {
    unsigned int v22 = *(unsigned __int16 *)&a2[v12];
  }
LABEL_25:
  unsigned int v24 = v22 - 16;
  if (v22 >= 0x10)
  {
    if (v12 <= 3) {
      uint64_t v25 = v12;
    }
    else {
      uint64_t v25 = 4;
    }
    switch(v25)
    {
      case 1:
        int v26 = *a2;
        if (v12 < 4) {
          goto LABEL_35;
        }
        goto LABEL_37;
      case 2:
        int v26 = *(unsigned __int16 *)a2;
        if (v12 >= 4) {
          goto LABEL_37;
        }
        goto LABEL_35;
      case 3:
        int v26 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v12 < 4) {
          goto LABEL_35;
        }
        goto LABEL_37;
      case 4:
        int v26 = *(_DWORD *)a2;
        if (v12 < 4) {
LABEL_35:
        }
          unsigned int v22 = (v26 | (v24 << (8 * v12))) + 16;
        else {
LABEL_37:
        }
          unsigned int v22 = v26 + 16;
        break;
      default:
        break;
    }
  }
  switch(v22)
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      if (v12 <= 3)
      {
        unsigned int v27 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v27))
        {
          *(_DWORD *)&a1[v12] = 0;
          return (char *)a1;
        }
        if ((v27 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 0;
          return (char *)a1;
        }
      }
      a1[v12] = 0;
      break;
    case 1u:
      *(void *)a1 = *(void *)a2;
      if (v12 <= 3)
      {
        unsigned int v28 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v28))
        {
          *(_DWORD *)&a1[v12] = 1;
          return (char *)a1;
        }
        if ((v28 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 1;
          return (char *)a1;
        }
      }
      a1[v12] = 1;
      break;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v12 <= 3)
      {
        unsigned int v29 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v29))
        {
          *(_DWORD *)&a1[v12] = 2;
          return (char *)a1;
        }
        if ((v29 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 2;
          return (char *)a1;
        }
      }
      a1[v12] = 2;
      break;
    case 3u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v30))
        {
          *(_DWORD *)&a1[v12] = 3;
          return (char *)a1;
        }
        if ((v30 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 3;
          return (char *)a1;
        }
      }
      a1[v12] = 3;
      break;
    case 4u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v31))
        {
          *(_DWORD *)&a1[v12] = 4;
          return (char *)a1;
        }
        if ((v31 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 4;
          return (char *)a1;
        }
      }
      a1[v12] = 4;
      break;
    case 5u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v32 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v32))
        {
          *(_DWORD *)&a1[v12] = 5;
          return (char *)a1;
        }
        if ((v32 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 5;
          return (char *)a1;
        }
      }
      a1[v12] = 5;
      break;
    case 6u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v33 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v33))
        {
          *(_DWORD *)&a1[v12] = 6;
          return (char *)a1;
        }
        if ((v33 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 6;
          return (char *)a1;
        }
      }
      a1[v12] = 6;
      break;
    case 7u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v34 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v34))
        {
          *(_DWORD *)&a1[v12] = 7;
          return (char *)a1;
        }
        if ((v34 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 7;
          return (char *)a1;
        }
      }
      a1[v12] = 7;
      break;
    case 8u:
      unint64_t v65 = v11 + 16;
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      unsigned int v51 = (void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      uint64_t v52 = (void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v51 = *v52;
      uint64_t v53 = ((unint64_t)v51 + v9 + 8) & ~v9;
      uint64_t v54 = ((unint64_t)v52 + v9 + 8) & ~v9;
      unint64_t v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      swift_bridgeObjectRetain();
      v55(v53, v54, v7);
      unint64_t v56 = (void *)((v10 + v53) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v57 = (void *)((v10 + v54) & 0xFFFFFFFFFFFFFFF8);
      void *v56 = *v57;
      unint64_t v58 = (void *)(((unint64_t)v56 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v59 = (void *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v58 = *v59;
      v58[1] = v59[1];
      unint64_t v60 = (char *)&a1[v65];
      *unint64_t v60 = a2[v65];
      v60[1] = a2[v65 + 1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 > 3) {
        goto LABEL_104;
      }
      unsigned int v62 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
      if (HIWORD(v62))
      {
        *(_DWORD *)&a1[v12] = 8;
        return (char *)a1;
      }
      if ((v62 | 0x10) <= 0xFF) {
LABEL_104:
      }
        a1[v12] = 8;
      else {
        *(_WORD *)&a1[v12] = 8;
      }
      break;
    case 9u:
      uint64_t v35 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v36 = v35;
      if (v12 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v37))
        {
          *(_DWORD *)&a1[v12] = 9;
          return (char *)a1;
        }
        if ((v37 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 9;
          return (char *)a1;
        }
      }
      a1[v12] = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v38 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v38))
        {
          *(_DWORD *)&a1[v12] = 10;
          return (char *)a1;
        }
        if ((v38 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 10;
          return (char *)a1;
        }
      }
      a1[v12] = 10;
      break;
    case 0xBu:
      *(_WORD *)a1 = *(_WORD *)a2;
      if (v12 <= 3)
      {
        unsigned int v39 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v39))
        {
          *(_DWORD *)&a1[v12] = 11;
          return (char *)a1;
        }
        if ((v39 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 11;
          return (char *)a1;
        }
      }
      a1[v12] = 11;
      break;
    case 0xCu:
      unint64_t v40 = *(void **)a2;
      unint64_t v41 = (void *)*((void *)a2 + 1);
      char v42 = a2[16];
      sub_24D3F1C98(v40, v41, v42);
      *(void *)a1 = v40;
      *((void *)a1 + 1) = v41;
      a1[16] = v42;
      if (v12 <= 3)
      {
        unsigned int v43 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v43))
        {
          *(_DWORD *)&a1[v12] = 12;
          return (char *)a1;
        }
        if ((v43 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 12;
          return (char *)a1;
        }
      }
      a1[v12] = 12;
      break;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      if (v12 <= 3)
      {
        unsigned int v44 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v44))
        {
          *(_DWORD *)&a1[v12] = 13;
          return (char *)a1;
        }
        if ((v44 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 13;
          return (char *)a1;
        }
      }
      a1[v12] = 13;
      break;
    case 0xEu:
      unint64_t v45 = *((void *)a2 + 2);
      if (v45 >> 60 == 11)
      {
        long long v46 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v46;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      }
      else
      {
        unint64_t v61 = (uint64_t *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        if (v45 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v61;
        }
        else
        {
          uint64_t v63 = *v61;
          sub_24D3F9C18(*v61, v45);
          *((void *)a1 + 1) = v63;
          *((void *)a1 + 2) = v45;
        }
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        a1[40] = a2[40];
      }
      *((void *)a1 + 6) = *((void *)a2 + 6);
      a1[56] = a2[56];
      if (v12 <= 3)
      {
        unsigned int v64 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v64))
        {
          *(_DWORD *)&a1[v12] = 14;
          return (char *)a1;
        }
        if ((v64 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 14;
          return (char *)a1;
        }
      }
      a1[v12] = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v47 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v47))
        {
          *(_DWORD *)&a1[v12] = 15;
          return (char *)a1;
        }
        if ((v47 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 15;
          return (char *)a1;
        }
      }
      a1[v12] = 15;
      break;
    default:
      if (v12 > 3) {
        goto LABEL_101;
      }
      unsigned int v48 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
      unsigned int v49 = v48 | 0x10;
      BOOL v18 = HIWORD(v48) == 0;
      uint64_t v50 = 2;
      if (!v18) {
        uint64_t v50 = 4;
      }
      if (v49 <= 0xFF) {
LABEL_101:
      }
        uint64_t v50 = 1;
      memcpy(a1, a2, v50 + v12);
      break;
  }
  return (char *)a1;
}

void sub_24D4DC668(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = ((((*(void *)(v6 + 64) + 7 + ((v7 + ((v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 18;
  if (v8 <= 0x39) {
    unint64_t v8 = 57;
  }
  if (v8 > 3) {
    goto LABEL_4;
  }
  unsigned int v10 = ((1 << (8 * v8)) | 2u) >> (8 * v8);
  if (HIWORD(v10))
  {
    unsigned int v9 = *(_DWORD *)&a1[v8];
  }
  else
  {
    if ((v10 | 0x10) <= 0xFF)
    {
LABEL_4:
      unsigned int v9 = a1[v8];
      goto LABEL_9;
    }
    unsigned int v9 = *(unsigned __int16 *)&a1[v8];
  }
LABEL_9:
  unsigned int v11 = v9 - 16;
  if (v9 >= 0x10)
  {
    if (v8 <= 3) {
      uint64_t v12 = v8;
    }
    else {
      uint64_t v12 = 4;
    }
    switch(v12)
    {
      case 1:
        int v13 = *a1;
        goto LABEL_18;
      case 2:
        int v13 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v13 = *(_DWORD *)a1;
LABEL_18:
        int v14 = (v13 | (v11 << (8 * v8))) + 16;
        unsigned int v9 = v13 + 16;
        if (v8 < 4) {
          unsigned int v9 = v14;
        }
        break;
      default:
        break;
    }
  }
  switch(v9)
  {
    case 8u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v6 + 8))((((unint64_t)&a1[v4 + 7] & 0xFFFFFFFFFFFFFFF8) + v7 + 8) & ~v7, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
    case 9u:
      uint64_t v15 = *(void **)a1;

      break;
    case 0xCu:
      unint64_t v16 = *(void **)a1;
      unsigned int v17 = (void *)*((void *)a1 + 1);
      char v18 = a1[16];
      sub_24D3E380C(v16, v17, v18);
      break;
    case 0xEu:
      unint64_t v19 = *((void *)a1 + 2);
      if (v19 >> 60 != 11 && v19 >> 60 != 15)
      {
        uint64_t v20 = *((void *)a1 + 1);
        sub_24D400DCC(v20, v19);
      }
      break;
    default:
      return;
  }
}

char *sub_24D4DCA10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64) + 7;
  unint64_t v11 = (((v10 + ((v9 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v11 + 18 <= 0x39) {
    uint64_t v12 = 57;
  }
  else {
    uint64_t v12 = v11 + 18;
  }
  if (v12 > 3) {
    goto LABEL_5;
  }
  unsigned int v14 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
  if (HIWORD(v14))
  {
    unsigned int v13 = *(_DWORD *)&a2[v12];
  }
  else
  {
    if ((v14 | 0x10) <= 0xFF)
    {
LABEL_5:
      unsigned int v13 = a2[v12];
      goto LABEL_10;
    }
    unsigned int v13 = *(unsigned __int16 *)&a2[v12];
  }
LABEL_10:
  unsigned int v15 = v13 - 16;
  if (v13 >= 0x10)
  {
    if (v12 <= 3) {
      uint64_t v16 = v12;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_19;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_19:
        int v18 = (v17 | (v15 << (8 * v12))) + 16;
        unsigned int v13 = v17 + 16;
        if (v12 < 4) {
          unsigned int v13 = v18;
        }
        break;
      default:
        break;
    }
  }
  switch(v13)
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      if (v12 <= 3)
      {
        unsigned int v19 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v19))
        {
          *(_DWORD *)&a1[v12] = 0;
          return (char *)a1;
        }
        if ((v19 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 0;
          return (char *)a1;
        }
      }
      a1[v12] = 0;
      break;
    case 1u:
      *(void *)a1 = *(void *)a2;
      if (v12 <= 3)
      {
        unsigned int v20 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v20))
        {
          *(_DWORD *)&a1[v12] = 1;
          return (char *)a1;
        }
        if ((v20 | 0x10) > 0xFF)
        {
          __int16 v58 = 1;
          goto LABEL_130;
        }
      }
      a1[v12] = 1;
      break;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v12 <= 3)
      {
        unsigned int v21 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v21))
        {
          *(_DWORD *)&a1[v12] = 2;
          return (char *)a1;
        }
        if ((v21 | 0x10) > 0xFF)
        {
          __int16 v58 = 2;
          goto LABEL_130;
        }
      }
      a1[v12] = 2;
      break;
    case 3u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v22 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v22))
        {
          *(_DWORD *)&a1[v12] = 3;
          return (char *)a1;
        }
        if ((v22 | 0x10) > 0xFF)
        {
          __int16 v58 = 3;
          goto LABEL_130;
        }
      }
      a1[v12] = 3;
      break;
    case 4u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v23 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v23))
        {
          *(_DWORD *)&a1[v12] = 4;
          return (char *)a1;
        }
        if ((v23 | 0x10) > 0xFF)
        {
          __int16 v58 = 4;
          goto LABEL_130;
        }
      }
      a1[v12] = 4;
      break;
    case 5u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v24 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v24))
        {
          *(_DWORD *)&a1[v12] = 5;
          return (char *)a1;
        }
        if ((v24 | 0x10) > 0xFF)
        {
          __int16 v58 = 5;
          goto LABEL_130;
        }
      }
      a1[v12] = 5;
      break;
    case 6u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v25 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v25))
        {
          *(_DWORD *)&a1[v12] = 6;
          return (char *)a1;
        }
        if ((v25 | 0x10) > 0xFF)
        {
          __int16 v58 = 6;
          goto LABEL_130;
        }
      }
      a1[v12] = 6;
      break;
    case 7u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v26 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v26))
        {
          *(_DWORD *)&a1[v12] = 7;
          return (char *)a1;
        }
        if ((v26 | 0x10) > 0xFF)
        {
          __int16 v58 = 7;
          goto LABEL_130;
        }
      }
      a1[v12] = 7;
      break;
    case 8u:
      unint64_t v60 = v11 + 16;
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      unsigned int v44 = (void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      unint64_t v45 = (void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v44 = *v45;
      uint64_t v46 = ((unint64_t)v44 + v9 + 8) & ~v9;
      uint64_t v47 = ((unint64_t)v45 + v9 + 8) & ~v9;
      unsigned int v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      swift_bridgeObjectRetain();
      v48(v46, v47, v7);
      unsigned int v49 = (void *)((v10 + v46) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v50 = (void *)((v10 + v47) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v49 = *v50;
      unsigned int v51 = (void *)(((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v52 = (void *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v51 = *v52;
      v51[1] = v52[1];
      uint64_t v53 = (char *)&a1[v60];
      char *v53 = a2[v60];
      v53[1] = a2[v60 + 1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v12 <= 3)
      {
        unsigned int v54 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v54))
        {
          *(_DWORD *)&a1[v12] = 8;
          return (char *)a1;
        }
        if ((v54 | 0x10) > 0xFF)
        {
          __int16 v58 = 8;
          goto LABEL_130;
        }
      }
      a1[v12] = 8;
      break;
    case 9u:
      unsigned int v27 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v28 = v27;
      if (v12 <= 3)
      {
        unsigned int v29 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v29))
        {
          *(_DWORD *)&a1[v12] = 9;
          return (char *)a1;
        }
        if ((v29 | 0x10) > 0xFF)
        {
          __int16 v58 = 9;
          goto LABEL_130;
        }
      }
      a1[v12] = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v30))
        {
          *(_DWORD *)&a1[v12] = 10;
          return (char *)a1;
        }
        if ((v30 | 0x10) > 0xFF)
        {
          __int16 v58 = 10;
          goto LABEL_130;
        }
      }
      a1[v12] = 10;
      break;
    case 0xBu:
      *(_WORD *)a1 = *(_WORD *)a2;
      if (v12 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v31))
        {
          *(_DWORD *)&a1[v12] = 11;
          return (char *)a1;
        }
        if ((v31 | 0x10) > 0xFF)
        {
          __int16 v58 = 11;
          goto LABEL_130;
        }
      }
      a1[v12] = 11;
      break;
    case 0xCu:
      unsigned int v32 = *(void **)a2;
      unsigned int v33 = (void *)*((void *)a2 + 1);
      char v34 = a2[16];
      sub_24D3F1C98(v32, v33, v34);
      *(void *)a1 = v32;
      *((void *)a1 + 1) = v33;
      a1[16] = v34;
      if (v12 <= 3)
      {
        unsigned int v35 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v35))
        {
          *(_DWORD *)&a1[v12] = 12;
          return (char *)a1;
        }
        if ((v35 | 0x10) > 0xFF)
        {
          __int16 v58 = 12;
          goto LABEL_130;
        }
      }
      a1[v12] = 12;
      break;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      if (v12 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v36))
        {
          *(_DWORD *)&a1[v12] = 13;
          return (char *)a1;
        }
        if ((v36 | 0x10) > 0xFF)
        {
          __int16 v58 = 13;
          goto LABEL_130;
        }
      }
      a1[v12] = 13;
      break;
    case 0xEu:
      unint64_t v37 = *((void *)a2 + 2);
      if (v37 >> 60 == 11)
      {
        long long v38 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v38;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      }
      else
      {
        unint64_t v55 = (uint64_t *)(a2 + 8);
        *(void *)a1 = *(void *)a2;
        if (v37 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v55;
        }
        else
        {
          uint64_t v56 = *v55;
          sub_24D3F9C18(*v55, v37);
          *((void *)a1 + 1) = v56;
          *((void *)a1 + 2) = v37;
        }
        *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
        a1[40] = a2[40];
      }
      *((void *)a1 + 6) = *((void *)a2 + 6);
      a1[56] = a2[56];
      if (v12 <= 3)
      {
        unsigned int v57 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v57))
        {
          *(_DWORD *)&a1[v12] = 14;
          return (char *)a1;
        }
        if ((v57 | 0x10) > 0xFF)
        {
          __int16 v58 = 14;
          goto LABEL_130;
        }
      }
      a1[v12] = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      if (v12 > 3) {
        goto LABEL_79;
      }
      unsigned int v39 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
      if (HIWORD(v39))
      {
        *(_DWORD *)&a1[v12] = 15;
        return (char *)a1;
      }
      if ((v39 | 0x10) > 0xFF)
      {
        __int16 v58 = 15;
LABEL_130:
        *(_WORD *)&a1[v12] = v58;
      }
      else
      {
LABEL_79:
        a1[v12] = 15;
      }
      break;
    default:
      if (v12 > 3) {
        goto LABEL_84;
      }
      unsigned int v40 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
      unsigned int v41 = v40 | 0x10;
      BOOL v42 = HIWORD(v40) == 0;
      uint64_t v43 = 2;
      if (!v42) {
        uint64_t v43 = 4;
      }
      if (v41 <= 0xFF) {
LABEL_84:
      }
        uint64_t v43 = 1;
      memcpy(a1, a2, v43 + v12);
      break;
  }
  return (char *)a1;
}

unsigned __int8 *sub_24D4DD3E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v77 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(void *)(v77 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64) + 7;
  unint64_t v10 = (((v9 + ((v8 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v10 + 18 <= 0x39) {
    uint64_t v11 = 57;
  }
  else {
    uint64_t v11 = v10 + 18;
  }
  if (v11 > 3) {
    goto LABEL_6;
  }
  unsigned int v13 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
  if (HIWORD(v13))
  {
    unsigned int v12 = *(_DWORD *)&a1[v11];
    goto LABEL_11;
  }
  if ((v13 | 0x10) <= 0xFF) {
LABEL_6:
  }
    unsigned int v12 = a1[v11];
  else {
    unsigned int v12 = *(unsigned __int16 *)&a1[v11];
  }
LABEL_11:
  unsigned int v14 = v12 - 16;
  if (v12 >= 0x10)
  {
    if (v11 <= 3) {
      uint64_t v15 = v11;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *a1;
        if (v11 < 4) {
          goto LABEL_23;
        }
        goto LABEL_24;
      case 2:
        int v16 = *(unsigned __int16 *)a1;
        if (v11 >= 4) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 3:
        int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v11 >= 4) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 4:
        int v16 = *(_DWORD *)a1;
        if (v11 < 4) {
LABEL_23:
        }
          v16 |= v14 << (8 * v11);
LABEL_24:
        unsigned int v12 = v16 + 16;
        break;
      default:
        break;
    }
  }
  uint64_t v76 = ~v8;
  switch(v12)
  {
    case 8u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v77 + 8))(a1, AssociatedTypeWitness);
      uint64_t v17 = (uint64_t)&a1[v5 + 7];
      unint64_t v75 = (((v9 + ((v8 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v18 = v5;
      uint64_t v19 = AssociatedTypeWitness;
      uint64_t v20 = v6;
      unint64_t v21 = v17 & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((v21 + v8 + 8) & v76, v20);
      swift_bridgeObjectRelease();
      uint64_t v6 = v20;
      uint64_t AssociatedTypeWitness = v19;
      uint64_t v5 = v18;
      unint64_t v10 = v75;
      swift_bridgeObjectRelease();
      break;
    case 9u:

      break;
    case 0xCu:
      sub_24D3E380C(*(void **)a1, *((id *)a1 + 1), a1[16]);
      break;
    case 0xEu:
      unint64_t v22 = *((void *)a1 + 2);
      if (v22 >> 60 != 11 && v22 >> 60 != 15) {
        sub_24D400DCC(*((void *)a1 + 1), v22);
      }
      break;
    default:
      break;
  }
  if (v11 > 3) {
    goto LABEL_33;
  }
  unsigned int v24 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
  if (HIWORD(v24))
  {
    unsigned int v23 = *(_DWORD *)&a2[v11];
    goto LABEL_38;
  }
  if ((v24 | 0x10) <= 0xFF) {
LABEL_33:
  }
    unsigned int v23 = a2[v11];
  else {
    unsigned int v23 = *(unsigned __int16 *)&a2[v11];
  }
LABEL_38:
  unsigned int v25 = v23 - 16;
  if (v23 >= 0x10)
  {
    if (v11 <= 3) {
      uint64_t v26 = v11;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *a2;
        if (v11 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 2:
        int v27 = *(unsigned __int16 *)a2;
        if (v11 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 3:
        int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v11 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 4:
        int v27 = *(_DWORD *)a2;
        if (v11 < 4) {
LABEL_46:
        }
          unsigned int v23 = (v27 | (v25 << (8 * v11))) + 16;
        else {
LABEL_50:
        }
          unsigned int v23 = v27 + 16;
        break;
      default:
        break;
    }
  }
  switch(v23)
  {
    case 0u:
      long long v28 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *(_OWORD *)a1 = v28;
      if (v11 <= 3)
      {
        unsigned int v29 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v29))
        {
          *(_DWORD *)&a1[v11] = 0;
          return a1;
        }
        if ((v29 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v11] = 0;
          return a1;
        }
      }
      a1[v11] = 0;
      break;
    case 1u:
      *(void *)a1 = *(void *)a2;
      if (v11 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v30))
        {
          *(_DWORD *)&a1[v11] = 1;
          return a1;
        }
        if ((v30 | 0x10) > 0xFF)
        {
          __int16 v73 = 1;
          goto LABEL_160;
        }
      }
      a1[v11] = 1;
      break;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v11 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v31))
        {
          *(_DWORD *)&a1[v11] = 2;
          return a1;
        }
        if ((v31 | 0x10) > 0xFF)
        {
          __int16 v73 = 2;
          goto LABEL_160;
        }
      }
      a1[v11] = 2;
      break;
    case 3u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v32 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v32))
        {
          *(_DWORD *)&a1[v11] = 3;
          return a1;
        }
        if ((v32 | 0x10) > 0xFF)
        {
          __int16 v73 = 3;
          goto LABEL_160;
        }
      }
      a1[v11] = 3;
      break;
    case 4u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v33 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v33))
        {
          *(_DWORD *)&a1[v11] = 4;
          return a1;
        }
        if ((v33 | 0x10) > 0xFF)
        {
          __int16 v73 = 4;
          goto LABEL_160;
        }
      }
      a1[v11] = 4;
      break;
    case 5u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v34 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v34))
        {
          *(_DWORD *)&a1[v11] = 5;
          return a1;
        }
        if ((v34 | 0x10) > 0xFF)
        {
          __int16 v73 = 5;
          goto LABEL_160;
        }
      }
      a1[v11] = 5;
      break;
    case 6u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v35 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v35))
        {
          *(_DWORD *)&a1[v11] = 6;
          return a1;
        }
        if ((v35 | 0x10) > 0xFF)
        {
          __int16 v73 = 6;
          goto LABEL_160;
        }
      }
      a1[v11] = 6;
      break;
    case 7u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v36))
        {
          *(_DWORD *)&a1[v11] = 7;
          return a1;
        }
        if ((v36 | 0x10) > 0xFF)
        {
          __int16 v73 = 7;
          goto LABEL_160;
        }
      }
      a1[v11] = 7;
      break;
    case 8u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v77 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v56 = (void *)((unint64_t)&a1[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      unsigned int v57 = (void *)((unint64_t)&a2[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      void *v56 = *v57;
      uint64_t v58 = ((unint64_t)v56 + v8 + 8) & v76;
      uint64_t v59 = v6;
      uint64_t v60 = ((unint64_t)v57 + v8 + 8) & v76;
      unint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
      swift_bridgeObjectRetain();
      v61(v58, v60, v59);
      unsigned int v62 = (void *)((v9 + v58) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v63 = (void *)((v9 + v60) & 0xFFFFFFFFFFFFFFF8);
      void *v62 = *v63;
      unsigned int v64 = (void *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v65 = (void *)(((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v64 = *v65;
      v64[1] = v65[1];
      int v66 = &a1[v10 + 16];
      *int v66 = a2[v10 + 16];
      v66[1] = a2[v10 + 17];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v11 <= 3)
      {
        unsigned int v67 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v67))
        {
          *(_DWORD *)&a1[v11] = 8;
          return a1;
        }
        if ((v67 | 0x10) > 0xFF)
        {
          __int16 v73 = 8;
          goto LABEL_160;
        }
      }
      a1[v11] = 8;
      break;
    case 9u:
      unint64_t v37 = *(void **)a2;
      *(void *)a1 = *(void *)a2;
      id v38 = v37;
      if (v11 <= 3)
      {
        unsigned int v39 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v39))
        {
          *(_DWORD *)&a1[v11] = 9;
          return a1;
        }
        if ((v39 | 0x10) > 0xFF)
        {
          __int16 v73 = 9;
          goto LABEL_160;
        }
      }
      a1[v11] = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v40 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v40))
        {
          *(_DWORD *)&a1[v11] = 10;
          return a1;
        }
        if ((v40 | 0x10) > 0xFF)
        {
          __int16 v73 = 10;
          goto LABEL_160;
        }
      }
      a1[v11] = 10;
      break;
    case 0xBu:
      *(_WORD *)a1 = *(_WORD *)a2;
      if (v11 <= 3)
      {
        unsigned int v41 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v41))
        {
          *(_DWORD *)&a1[v11] = 11;
          return a1;
        }
        if ((v41 | 0x10) > 0xFF)
        {
          __int16 v73 = 11;
          goto LABEL_160;
        }
      }
      a1[v11] = 11;
      break;
    case 0xCu:
      BOOL v42 = *(void **)a2;
      uint64_t v43 = (void *)*((void *)a2 + 1);
      char v44 = a2[16];
      sub_24D3F1C98(v42, v43, v44);
      *(void *)a1 = v42;
      *((void *)a1 + 1) = v43;
      a1[16] = v44;
      if (v11 <= 3)
      {
        unsigned int v45 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v45))
        {
          *(_DWORD *)&a1[v11] = 12;
          return a1;
        }
        if ((v45 | 0x10) > 0xFF)
        {
          __int16 v73 = 12;
          goto LABEL_160;
        }
      }
      a1[v11] = 12;
      break;
    case 0xDu:
      long long v46 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      *(_OWORD *)a1 = v46;
      if (v11 <= 3)
      {
        unsigned int v47 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v47))
        {
          *(_DWORD *)&a1[v11] = 13;
          return a1;
        }
        if ((v47 | 0x10) > 0xFF)
        {
          __int16 v73 = 13;
          goto LABEL_160;
        }
      }
      a1[v11] = 13;
      break;
    case 0xEu:
      if (*((void *)a2 + 2) >> 60 == 11)
      {
        long long v48 = *(_OWORD *)a2;
        long long v49 = *((_OWORD *)a2 + 1);
        long long v50 = *((_OWORD *)a2 + 2);
        *((void *)a1 + 6) = *((void *)a2 + 6);
        *((_OWORD *)a1 + 1) = v49;
        *((_OWORD *)a1 + 2) = v50;
        *(_OWORD *)a1 = v48;
      }
      else
      {
        *(void *)a1 = *(void *)a2;
        unsigned int v68 = (uint64_t *)(a2 + 8);
        unint64_t v69 = *((void *)a2 + 2);
        if (v69 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v68;
        }
        else
        {
          uint64_t v70 = *v68;
          sub_24D3F9C18(*v68, *((void *)a2 + 2));
          *((void *)a1 + 1) = v70;
          *((void *)a1 + 2) = v69;
        }
        long long v71 = *(_OWORD *)(a2 + 24);
        a1[40] = a2[40];
        *(_OWORD *)(a1 + 24) = v71;
        *((void *)a1 + 6) = *((void *)a2 + 6);
      }
      a1[56] = a2[56];
      if (v11 <= 3)
      {
        unsigned int v72 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v72))
        {
          *(_DWORD *)&a1[v11] = 14;
          return a1;
        }
        if ((v72 | 0x10) > 0xFF)
        {
          __int16 v73 = 14;
          goto LABEL_160;
        }
      }
      a1[v11] = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      if (v11 > 3) {
        goto LABEL_109;
      }
      unsigned int v51 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
      if (HIWORD(v51))
      {
        *(_DWORD *)&a1[v11] = 15;
        return a1;
      }
      if ((v51 | 0x10) > 0xFF)
      {
        __int16 v73 = 15;
LABEL_160:
        *(_WORD *)&a1[v11] = v73;
      }
      else
      {
LABEL_109:
        a1[v11] = 15;
      }
      break;
    default:
      if (v11 > 3) {
        goto LABEL_114;
      }
      unsigned int v52 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
      unsigned int v53 = v52 | 0x10;
      BOOL v54 = HIWORD(v52) == 0;
      uint64_t v55 = 2;
      if (!v54) {
        uint64_t v55 = 4;
      }
      if (v53 <= 0xFF) {
LABEL_114:
      }
        uint64_t v55 = 1;
      memcpy(a1, a2, v55 + v11);
      break;
  }
  return a1;
}

char *sub_24D4DDFF4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v8 + 64) + 7;
  unint64_t v11 = (((v10 + ((v9 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v11 + 18 <= 0x39) {
    uint64_t v12 = 57;
  }
  else {
    uint64_t v12 = v11 + 18;
  }
  if (v12 > 3) {
    goto LABEL_5;
  }
  unsigned int v14 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
  if (HIWORD(v14))
  {
    unsigned int v13 = *(_DWORD *)&a2[v12];
  }
  else
  {
    if ((v14 | 0x10) <= 0xFF)
    {
LABEL_5:
      unsigned int v13 = a2[v12];
      goto LABEL_10;
    }
    unsigned int v13 = *(unsigned __int16 *)&a2[v12];
  }
LABEL_10:
  unsigned int v15 = v13 - 16;
  if (v13 >= 0x10)
  {
    if (v12 <= 3) {
      uint64_t v16 = v12;
    }
    else {
      uint64_t v16 = 4;
    }
    switch(v16)
    {
      case 1:
        int v17 = *a2;
        goto LABEL_19;
      case 2:
        int v17 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v17 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v17 = *(_DWORD *)a2;
LABEL_19:
        int v18 = (v17 | (v15 << (8 * v12))) + 16;
        unsigned int v13 = v17 + 16;
        if (v12 < 4) {
          unsigned int v13 = v18;
        }
        break;
      default:
        break;
    }
  }
  switch(v13)
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      if (v12 <= 3)
      {
        unsigned int v19 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v19))
        {
          *(_DWORD *)&a1[v12] = 0;
          return (char *)a1;
        }
        if ((v19 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v12] = 0;
          return (char *)a1;
        }
      }
      a1[v12] = 0;
      break;
    case 1u:
      *(void *)a1 = *(void *)a2;
      if (v12 <= 3)
      {
        unsigned int v20 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v20))
        {
          *(_DWORD *)&a1[v12] = 1;
          return (char *)a1;
        }
        if ((v20 | 0x10) > 0xFF)
        {
          __int16 v47 = 1;
          goto LABEL_124;
        }
      }
      a1[v12] = 1;
      break;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v12 <= 3)
      {
        unsigned int v21 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v21))
        {
          *(_DWORD *)&a1[v12] = 2;
          return (char *)a1;
        }
        if ((v21 | 0x10) > 0xFF)
        {
          __int16 v47 = 2;
          goto LABEL_124;
        }
      }
      a1[v12] = 2;
      break;
    case 3u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v22 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v22))
        {
          *(_DWORD *)&a1[v12] = 3;
          return (char *)a1;
        }
        if ((v22 | 0x10) > 0xFF)
        {
          __int16 v47 = 3;
          goto LABEL_124;
        }
      }
      a1[v12] = 3;
      break;
    case 4u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v23 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v23))
        {
          *(_DWORD *)&a1[v12] = 4;
          return (char *)a1;
        }
        if ((v23 | 0x10) > 0xFF)
        {
          __int16 v47 = 4;
          goto LABEL_124;
        }
      }
      a1[v12] = 4;
      break;
    case 5u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v24 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v24))
        {
          *(_DWORD *)&a1[v12] = 5;
          return (char *)a1;
        }
        if ((v24 | 0x10) > 0xFF)
        {
          __int16 v47 = 5;
          goto LABEL_124;
        }
      }
      a1[v12] = 5;
      break;
    case 6u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v25 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v25))
        {
          *(_DWORD *)&a1[v12] = 6;
          return (char *)a1;
        }
        if ((v25 | 0x10) > 0xFF)
        {
          __int16 v47 = 6;
          goto LABEL_124;
        }
      }
      a1[v12] = 6;
      break;
    case 7u:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v26 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v26))
        {
          *(_DWORD *)&a1[v12] = 7;
          return (char *)a1;
        }
        if ((v26 | 0x10) > 0xFF)
        {
          __int16 v47 = 7;
          goto LABEL_124;
        }
      }
      a1[v12] = 7;
      break;
    case 8u:
      unint64_t v49 = v11 + 16;
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      unsigned int v39 = (void *)((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      unsigned int v40 = (void *)((unint64_t)&a2[v6 + 7] & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v39 = *v40;
      uint64_t v41 = ((unint64_t)v39 + v9 + 8) & ~v9;
      uint64_t v42 = ((unint64_t)v40 + v9 + 8) & ~v9;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v41, v42, v7);
      uint64_t v43 = (void *)((v10 + v41) & 0xFFFFFFFFFFFFFFF8);
      char v44 = (void *)((v10 + v42) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v43 = *v44;
      *(_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v45 = (char *)&a1[v49];
      *unsigned int v45 = a2[v49];
      v45[1] = a2[v49 + 1];
      if (v12 <= 3)
      {
        unsigned int v46 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v46))
        {
          *(_DWORD *)&a1[v12] = 8;
          return (char *)a1;
        }
        if ((v46 | 0x10) > 0xFF)
        {
          __int16 v47 = 8;
          goto LABEL_124;
        }
      }
      a1[v12] = 8;
      break;
    case 9u:
      *(void *)a1 = *(void *)a2;
      if (v12 <= 3)
      {
        unsigned int v27 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v27))
        {
          *(_DWORD *)&a1[v12] = 9;
          return (char *)a1;
        }
        if ((v27 | 0x10) > 0xFF)
        {
          __int16 v47 = 9;
          goto LABEL_124;
        }
      }
      a1[v12] = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      if (v12 <= 3)
      {
        unsigned int v28 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v28))
        {
          *(_DWORD *)&a1[v12] = 10;
          return (char *)a1;
        }
        if ((v28 | 0x10) > 0xFF)
        {
          __int16 v47 = 10;
          goto LABEL_124;
        }
      }
      a1[v12] = 10;
      break;
    case 0xBu:
      *(_WORD *)a1 = *(_WORD *)a2;
      if (v12 <= 3)
      {
        unsigned int v29 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v29))
        {
          *(_DWORD *)&a1[v12] = 11;
          return (char *)a1;
        }
        if ((v29 | 0x10) > 0xFF)
        {
          __int16 v47 = 11;
          goto LABEL_124;
        }
      }
      a1[v12] = 11;
      break;
    case 0xCu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v12 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v30))
        {
          *(_DWORD *)&a1[v12] = 12;
          return (char *)a1;
        }
        if ((v30 | 0x10) > 0xFF)
        {
          __int16 v47 = 12;
          goto LABEL_124;
        }
      }
      a1[v12] = 12;
      break;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      if (v12 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v31))
        {
          *(_DWORD *)&a1[v12] = 13;
          return (char *)a1;
        }
        if ((v31 | 0x10) > 0xFF)
        {
          __int16 v47 = 13;
          goto LABEL_124;
        }
      }
      a1[v12] = 13;
      break;
    case 0xEu:
      long long v32 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v32;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
      if (v12 <= 3)
      {
        unsigned int v33 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
        if (HIWORD(v33))
        {
          *(_DWORD *)&a1[v12] = 14;
          return (char *)a1;
        }
        if ((v33 | 0x10) > 0xFF)
        {
          __int16 v47 = 14;
          goto LABEL_124;
        }
      }
      a1[v12] = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      if (v12 > 3) {
        goto LABEL_81;
      }
      unsigned int v34 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
      if (HIWORD(v34))
      {
        *(_DWORD *)&a1[v12] = 15;
        return (char *)a1;
      }
      if ((v34 | 0x10) > 0xFF)
      {
        __int16 v47 = 15;
LABEL_124:
        *(_WORD *)&a1[v12] = v47;
      }
      else
      {
LABEL_81:
        a1[v12] = 15;
      }
      break;
    default:
      if (v12 > 3) {
        goto LABEL_86;
      }
      unsigned int v35 = ((1 << (8 * v12)) | 2u) >> (8 * v12);
      unsigned int v36 = v35 | 0x10;
      BOOL v37 = HIWORD(v35) == 0;
      uint64_t v38 = 2;
      if (!v37) {
        uint64_t v38 = 4;
      }
      if (v36 <= 0xFF) {
LABEL_86:
      }
        uint64_t v38 = 1;
      memcpy(a1, a2, v38 + v12);
      break;
  }
  return (char *)a1;
}

unsigned __int8 *sub_24D4DE938(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (a1 == a2) {
    return a1;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v62 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = *(void *)(v62 + 64);
  uint64_t v6 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(v7 + 64) + 7;
  unint64_t v10 = (((v9 + ((v8 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (v10 + 18 <= 0x39) {
    uint64_t v11 = 57;
  }
  else {
    uint64_t v11 = v10 + 18;
  }
  if (v11 > 3) {
    goto LABEL_6;
  }
  unsigned int v13 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
  if (HIWORD(v13))
  {
    unsigned int v12 = *(_DWORD *)&a1[v11];
    goto LABEL_11;
  }
  if ((v13 | 0x10) <= 0xFF) {
LABEL_6:
  }
    unsigned int v12 = a1[v11];
  else {
    unsigned int v12 = *(unsigned __int16 *)&a1[v11];
  }
LABEL_11:
  unsigned int v14 = v12 - 16;
  if (v12 >= 0x10)
  {
    if (v11 <= 3) {
      uint64_t v15 = v11;
    }
    else {
      uint64_t v15 = 4;
    }
    switch(v15)
    {
      case 1:
        int v16 = *a1;
        if (v11 < 4) {
          goto LABEL_23;
        }
        goto LABEL_24;
      case 2:
        int v16 = *(unsigned __int16 *)a1;
        if (v11 >= 4) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 3:
        int v16 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v11 >= 4) {
          goto LABEL_24;
        }
        goto LABEL_23;
      case 4:
        int v16 = *(_DWORD *)a1;
        if (v11 < 4) {
LABEL_23:
        }
          v16 |= v14 << (8 * v11);
LABEL_24:
        unsigned int v12 = v16 + 16;
        break;
      default:
        break;
    }
  }
  uint64_t v61 = ~v8;
  switch(v12)
  {
    case 8u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v62 + 8))(a1, AssociatedTypeWitness);
      uint64_t v17 = (uint64_t)&a1[v5 + 7];
      unint64_t v60 = (((v9 + ((v8 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v18 = v5;
      uint64_t v19 = AssociatedTypeWitness;
      uint64_t v20 = v6;
      unint64_t v21 = v17 & 0xFFFFFFFFFFFFFFF8;
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v7 + 8))((v21 + v8 + 8) & v61, v20);
      swift_bridgeObjectRelease();
      uint64_t v6 = v20;
      uint64_t AssociatedTypeWitness = v19;
      uint64_t v5 = v18;
      unint64_t v10 = v60;
      swift_bridgeObjectRelease();
      break;
    case 9u:

      break;
    case 0xCu:
      sub_24D3E380C(*(void **)a1, *((id *)a1 + 1), a1[16]);
      break;
    case 0xEu:
      unint64_t v22 = *((void *)a1 + 2);
      if (v22 >> 60 != 11 && v22 >> 60 != 15) {
        sub_24D400DCC(*((void *)a1 + 1), v22);
      }
      break;
    default:
      break;
  }
  if (v11 > 3) {
    goto LABEL_33;
  }
  unsigned int v24 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
  if (HIWORD(v24))
  {
    unsigned int v23 = *(_DWORD *)&a2[v11];
    goto LABEL_38;
  }
  if ((v24 | 0x10) <= 0xFF) {
LABEL_33:
  }
    unsigned int v23 = a2[v11];
  else {
    unsigned int v23 = *(unsigned __int16 *)&a2[v11];
  }
LABEL_38:
  unsigned int v25 = v23 - 16;
  if (v23 >= 0x10)
  {
    if (v11 <= 3) {
      uint64_t v26 = v11;
    }
    else {
      uint64_t v26 = 4;
    }
    switch(v26)
    {
      case 1:
        int v27 = *a2;
        if (v11 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 2:
        int v27 = *(unsigned __int16 *)a2;
        if (v11 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 3:
        int v27 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v11 < 4) {
          goto LABEL_46;
        }
        goto LABEL_50;
      case 4:
        int v27 = *(_DWORD *)a2;
        if (v11 < 4) {
LABEL_46:
        }
          unsigned int v23 = (v27 | (v25 << (8 * v11))) + 16;
        else {
LABEL_50:
        }
          unsigned int v23 = v27 + 16;
        break;
      default:
        break;
    }
  }
  switch(v23)
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      if (v11 <= 3)
      {
        unsigned int v28 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v28))
        {
          *(_DWORD *)&a1[v11] = 0;
          return a1;
        }
        if ((v28 | 0x10) > 0xFF)
        {
          *(_WORD *)&a1[v11] = 0;
          return a1;
        }
      }
      a1[v11] = 0;
      break;
    case 1u:
      *(void *)a1 = *(void *)a2;
      if (v11 <= 3)
      {
        unsigned int v29 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v29))
        {
          *(_DWORD *)&a1[v11] = 1;
          return a1;
        }
        if ((v29 | 0x10) > 0xFF)
        {
          __int16 v58 = 1;
          goto LABEL_154;
        }
      }
      a1[v11] = 1;
      break;
    case 2u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      if (v11 <= 3)
      {
        unsigned int v30 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v30))
        {
          *(_DWORD *)&a1[v11] = 2;
          return a1;
        }
        if ((v30 | 0x10) > 0xFF)
        {
          __int16 v58 = 2;
          goto LABEL_154;
        }
      }
      a1[v11] = 2;
      break;
    case 3u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v31 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v31))
        {
          *(_DWORD *)&a1[v11] = 3;
          return a1;
        }
        if ((v31 | 0x10) > 0xFF)
        {
          __int16 v58 = 3;
          goto LABEL_154;
        }
      }
      a1[v11] = 3;
      break;
    case 4u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v32 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v32))
        {
          *(_DWORD *)&a1[v11] = 4;
          return a1;
        }
        if ((v32 | 0x10) > 0xFF)
        {
          __int16 v58 = 4;
          goto LABEL_154;
        }
      }
      a1[v11] = 4;
      break;
    case 5u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v33 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v33))
        {
          *(_DWORD *)&a1[v11] = 5;
          return a1;
        }
        if ((v33 | 0x10) > 0xFF)
        {
          __int16 v58 = 5;
          goto LABEL_154;
        }
      }
      a1[v11] = 5;
      break;
    case 6u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v34 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v34))
        {
          *(_DWORD *)&a1[v11] = 6;
          return a1;
        }
        if ((v34 | 0x10) > 0xFF)
        {
          __int16 v58 = 6;
          goto LABEL_154;
        }
      }
      a1[v11] = 6;
      break;
    case 7u:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v35 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v35))
        {
          *(_DWORD *)&a1[v11] = 7;
          return a1;
        }
        if ((v35 | 0x10) > 0xFF)
        {
          __int16 v58 = 7;
          goto LABEL_154;
        }
      }
      a1[v11] = 7;
      break;
    case 8u:
      unint64_t v48 = v10 + 16;
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v62 + 32))(a1, a2, AssociatedTypeWitness);
      unint64_t v49 = (void *)((unint64_t)&a1[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      long long v50 = (void *)((unint64_t)&a2[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v49 = *v50;
      uint64_t v51 = ((unint64_t)v49 + v8 + 8) & v61;
      uint64_t v52 = v6;
      uint64_t v53 = ((unint64_t)v50 + v8 + 8) & v61;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v51, v53, v52);
      BOOL v54 = (void *)((v9 + v51) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v55 = (void *)((v9 + v53) & 0xFFFFFFFFFFFFFFF8);
      *BOOL v54 = *v55;
      *(_OWORD *)(((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v56 = &a1[v48];
      unsigned __int8 *v56 = a2[v48];
      v56[1] = a2[v48 + 1];
      if (v11 <= 3)
      {
        unsigned int v57 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v57))
        {
          *(_DWORD *)&a1[v11] = 8;
          return a1;
        }
        if ((v57 | 0x10) > 0xFF)
        {
          __int16 v58 = 8;
          goto LABEL_154;
        }
      }
      a1[v11] = 8;
      break;
    case 9u:
      *(void *)a1 = *(void *)a2;
      if (v11 <= 3)
      {
        unsigned int v36 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v36))
        {
          *(_DWORD *)&a1[v11] = 9;
          return a1;
        }
        if ((v36 | 0x10) > 0xFF)
        {
          __int16 v58 = 9;
          goto LABEL_154;
        }
      }
      a1[v11] = 9;
      break;
    case 0xAu:
      *a1 = *a2;
      if (v11 <= 3)
      {
        unsigned int v37 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v37))
        {
          *(_DWORD *)&a1[v11] = 10;
          return a1;
        }
        if ((v37 | 0x10) > 0xFF)
        {
          __int16 v58 = 10;
          goto LABEL_154;
        }
      }
      a1[v11] = 10;
      break;
    case 0xBu:
      *(_WORD *)a1 = *(_WORD *)a2;
      if (v11 <= 3)
      {
        unsigned int v38 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v38))
        {
          *(_DWORD *)&a1[v11] = 11;
          return a1;
        }
        if ((v38 | 0x10) > 0xFF)
        {
          __int16 v58 = 11;
          goto LABEL_154;
        }
      }
      a1[v11] = 11;
      break;
    case 0xCu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[16] = a2[16];
      if (v11 <= 3)
      {
        unsigned int v39 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v39))
        {
          *(_DWORD *)&a1[v11] = 12;
          return a1;
        }
        if ((v39 | 0x10) > 0xFF)
        {
          __int16 v58 = 12;
          goto LABEL_154;
        }
      }
      a1[v11] = 12;
      break;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((void *)a1 + 2) = *((void *)a2 + 2);
      if (v11 <= 3)
      {
        unsigned int v40 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v40))
        {
          *(_DWORD *)&a1[v11] = 13;
          return a1;
        }
        if ((v40 | 0x10) > 0xFF)
        {
          __int16 v58 = 13;
          goto LABEL_154;
        }
      }
      a1[v11] = 13;
      break;
    case 0xEu:
      long long v41 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v41;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
      if (v11 <= 3)
      {
        unsigned int v42 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
        if (HIWORD(v42))
        {
          *(_DWORD *)&a1[v11] = 14;
          return a1;
        }
        if ((v42 | 0x10) > 0xFF)
        {
          __int16 v58 = 14;
          goto LABEL_154;
        }
      }
      a1[v11] = 14;
      break;
    case 0xFu:
      *a1 = *a2;
      if (v11 > 3) {
        goto LABEL_111;
      }
      unsigned int v43 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
      if (HIWORD(v43))
      {
        *(_DWORD *)&a1[v11] = 15;
        return a1;
      }
      if ((v43 | 0x10) > 0xFF)
      {
        __int16 v58 = 15;
LABEL_154:
        *(_WORD *)&a1[v11] = v58;
      }
      else
      {
LABEL_111:
        a1[v11] = 15;
      }
      break;
    default:
      if (v11 > 3) {
        goto LABEL_116;
      }
      unsigned int v44 = ((1 << (8 * v11)) | 2u) >> (8 * v11);
      unsigned int v45 = v44 | 0x10;
      BOOL v46 = HIWORD(v44) == 0;
      uint64_t v47 = 2;
      if (!v46) {
        uint64_t v47 = 4;
      }
      if (v45 <= 0xFF) {
LABEL_116:
      }
        uint64_t v47 = 1;
      memcpy(a1, a2, v47 + v11);
      break;
  }
  return a1;
}

uint64_t sub_24D4DF49C(unsigned __int16 *a1, unsigned int a2)
{
  unint64_t v4 = (*(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = ((((*(void *)(v5 + 64)
         + ((v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 18;
  if (v6 <= 0x39) {
    unint64_t v6 = 57;
  }
  if (v6 > 3)
  {
    unsigned int v7 = 17;
LABEL_7:
    char v9 = 8;
    goto LABEL_8;
  }
  unsigned int v8 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
  if (HIWORD(v8)) {
    goto LABEL_11;
  }
  unsigned int v7 = v8 | 0x10;
  if (v7 <= 0xFF) {
    goto LABEL_7;
  }
  char v9 = 16;
LABEL_8:
  int v10 = (1 << v9) - v7;
  if (v10 >= 0)
  {
    if (v6 > 3) {
      goto LABEL_15;
    }
LABEL_12:
    unsigned int v11 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
    unsigned int v12 = v11 | 0x10;
    BOOL v13 = HIWORD(v11) == 0;
    uint64_t v14 = 2;
    if (!v13) {
      uint64_t v14 = 4;
    }
    if (v12 > 0xFF) {
      goto LABEL_16;
    }
    goto LABEL_15;
  }
LABEL_11:
  int v10 = 0x7FFFFFFF;
  if (v6 <= 3) {
    goto LABEL_12;
  }
LABEL_15:
  uint64_t v14 = 1;
LABEL_16:
  if (!a2) {
    return 0;
  }
  if (a2 <= v10) {
    goto LABEL_36;
  }
  unint64_t v15 = v14 + v6;
  char v16 = 8 * v15;
  if (v15 <= 3)
  {
    unsigned int v19 = ((a2 - v10 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      int v17 = *(_DWORD *)((char *)a1 + v15);
      if (!v17) {
        goto LABEL_36;
      }
      goto LABEL_28;
    }
    if (v19 > 0xFF)
    {
      int v17 = *(unsigned __int16 *)((char *)a1 + v15);
      if (!*(unsigned __int16 *)((char *)a1 + v15)) {
        goto LABEL_36;
      }
      goto LABEL_28;
    }
    if (v19 < 2)
    {
LABEL_36:
      if (v6 <= 3)
      {
        unsigned int v27 = ((1 << (8 * v6)) | 2u) >> (8 * v6);
        if (HIWORD(v27))
        {
          unsigned int v22 = *(_DWORD *)((char *)a1 + v6);
          unsigned int v23 = ~v22;
LABEL_44:
          int v26 = 0x7FFFFFFF;
LABEL_45:
          if (v26 > v23) {
            return -v22;
          }
          else {
            return 0;
          }
        }
        int v25 = v27 | 0x10;
        if ((v27 | 0x10) > 0xFF)
        {
          int v29 = *(unsigned __int16 *)((char *)a1 + v6);
          unsigned int v22 = v29 | 0xFFFF0000;
          unsigned int v23 = v29 ^ 0xFFFF;
          char v24 = 16;
        }
        else
        {
          int v28 = *((unsigned __int8 *)a1 + v6);
          unsigned int v22 = v28 | 0xFFFFFF00;
          unsigned int v23 = v28 ^ 0xFF;
          char v24 = 8;
        }
      }
      else
      {
        int v21 = *((unsigned __int8 *)a1 + v6);
        unsigned int v22 = v21 | 0xFFFFFF00;
        unsigned int v23 = v21 ^ 0xFF;
        char v24 = 8;
        int v25 = 17;
      }
      int v26 = (1 << v24) - v25;
      if (v26 >= 0) {
        goto LABEL_45;
      }
      goto LABEL_44;
    }
  }
  int v17 = *((unsigned __int8 *)a1 + v15);
  if (!*((unsigned char *)a1 + v15)) {
    goto LABEL_36;
  }
LABEL_28:
  int v20 = (v17 - 1) << v16;
  if (v15 > 3) {
    int v20 = 0;
  }
  if (v15)
  {
    if (v15 > 3) {
      LODWORD(v15) = 4;
    }
    switch((int)v15)
    {
      case 2:
        LODWORD(v15) = *a1;
        break;
      case 3:
        LODWORD(v15) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v15) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v15) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v10 + (v15 | v20) + 1;
}

void sub_24D4DF7D8(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6 = (*(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v8 = ((((*(void *)(v7 + 64)
         + ((v6 + *(unsigned __int8 *)(v7 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 18;
  if (v8 <= 0x39) {
    unint64_t v8 = 57;
  }
  char v9 = 8 * v8;
  if (v8 > 3)
  {
    unsigned int v10 = 17;
LABEL_5:
    char v11 = 8;
    goto LABEL_6;
  }
  unsigned int v13 = ((1 << v9) | 2u) >> v9;
  if (HIWORD(v13)) {
    goto LABEL_12;
  }
  unsigned int v10 = v13 | 0x10;
  if (v10 <= 0xFF) {
    goto LABEL_5;
  }
  char v11 = 16;
LABEL_6:
  int v12 = (1 << v11) - v10;
  if (v12 >= 0)
  {
    if (v8 > 3) {
      goto LABEL_16;
    }
    goto LABEL_13;
  }
LABEL_12:
  int v12 = 0x7FFFFFFF;
  if (v8 > 3)
  {
LABEL_16:
    uint64_t v17 = 1;
    goto LABEL_17;
  }
LABEL_13:
  unsigned int v14 = ((1 << v9) | 2u) >> v9;
  unsigned int v15 = v14 | 0x10;
  BOOL v16 = HIWORD(v14) == 0;
  uint64_t v17 = 2;
  if (!v16) {
    uint64_t v17 = 4;
  }
  if (v15 <= 0xFF) {
    goto LABEL_16;
  }
LABEL_17:
  size_t v18 = v17 + v8;
  if (a3 <= v12)
  {
    int v19 = 0;
  }
  else if (v18 <= 3)
  {
    unsigned int v22 = ((a3 - v12 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v22))
    {
      int v19 = 4;
    }
    else if (v22 >= 0x100)
    {
      int v19 = 2;
    }
    else
    {
      int v19 = v22 > 1;
    }
  }
  else
  {
    int v19 = 1;
  }
  if (v12 < a2)
  {
    unsigned int v20 = ~v12 + a2;
    if (v18 < 4)
    {
      int v21 = (v20 >> (8 * v18)) + 1;
      if (v18)
      {
        int v23 = v20 & ~(-1 << (8 * v18));
        bzero(a1, v18);
        if (v18 == 3)
        {
          *(_WORD *)a1 = v23;
          a1[2] = BYTE2(v23);
        }
        else if (v18 == 2)
        {
          *(_WORD *)a1 = v23;
        }
        else
        {
          *a1 = v23;
        }
      }
    }
    else
    {
      bzero(a1, v18);
      *(_DWORD *)a1 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        a1[v18] = v21;
        return;
      case 2:
        *(_WORD *)&a1[v18] = v21;
        return;
      case 3:
        goto LABEL_53;
      case 4:
        *(_DWORD *)&a1[v18] = v21;
        return;
      default:
        return;
    }
  }
  switch(v19)
  {
    case 1:
      a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 2:
      *(_WORD *)&a1[v18] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_37;
    case 3:
LABEL_53:
      __break(1u);
      JUMPOUT(0x24D4DFB38);
    case 4:
      *(_DWORD *)&a1[v18] = 0;
      goto LABEL_36;
    default:
LABEL_36:
      if (!a2) {
        return;
      }
LABEL_37:
      int v24 = -a2;
      if (v8 > 3) {
        goto LABEL_38;
      }
      unsigned int v25 = ((1 << v9) | 2u) >> v9;
      if (HIWORD(v25))
      {
        *(_DWORD *)&a1[v8] = v24;
      }
      else if ((v25 | 0x10) <= 0xFF)
      {
LABEL_38:
        a1[v8] = v24;
      }
      else
      {
        *(_WORD *)&a1[v8] = v24;
      }
      return;
  }
}

uint64_t sub_24D4DFB60(unsigned __int8 *a1)
{
  unint64_t v2 = (*(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = ((((*(void *)(v3 + 64)
         + ((v2 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 18;
  if (v4 <= 0x39) {
    unint64_t v4 = 57;
  }
  if (v4 > 3) {
    goto LABEL_4;
  }
  unsigned int v6 = ((1 << (8 * v4)) | 2u) >> (8 * v4);
  if (HIWORD(v6))
  {
    uint64_t result = *(unsigned int *)&a1[v4];
  }
  else
  {
    if ((v6 | 0x10) <= 0xFF)
    {
LABEL_4:
      uint64_t result = a1[v4];
      goto LABEL_9;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v4];
  }
LABEL_9:
  if (result >= 0x10)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_18;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_18;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_18;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_18:
        unsigned int v9 = (v8 | ((result - 16) << (8 * v4))) + 16;
        unsigned int v10 = v8 + 16;
        if (v4 >= 4) {
          uint64_t result = v10;
        }
        else {
          uint64_t result = v9;
        }
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24D4DFD30(unsigned char *a1, unsigned int a2)
{
  unint64_t v4 = (*(void *)(*(void *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = ((((*(void *)(v5 + 64)
         + ((v4 + *(unsigned __int8 *)(v5 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
         + 7) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8)
     + 18;
  if (v6 <= 0x39) {
    size_t v7 = 57;
  }
  else {
    size_t v7 = v6;
  }
  if (a2 > 0xF)
  {
    unsigned int v8 = a2 - 16;
    if (v7 < 4)
    {
      int v10 = (v8 >> (8 * v7)) + 16;
      v8 &= ~(-1 << (8 * v7));
      char v11 = (int *)&a1[v7];
      unsigned int v12 = ((1 << (8 * v7)) | 2u) >> (8 * v7);
      if (HIWORD(v12))
      {
        *char v11 = v10;
      }
      else if ((v12 | 0x10) > 0xFF)
      {
        *(_WORD *)char v11 = v10;
      }
      else
      {
        *(unsigned char *)char v11 = v10;
      }
    }
    else
    {
      a1[v7] = 16;
    }
    if (v7 <= 3) {
      int v13 = v7;
    }
    else {
      int v13 = 4;
    }
    bzero(a1, v7);
    switch(v13)
    {
      case 2:
        *(_WORD *)a1 = v8;
        break;
      case 3:
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
        break;
      case 4:
        *(_DWORD *)a1 = v8;
        break;
      default:
        *a1 = v8;
        break;
    }
  }
  else
  {
    if (v7 > 3)
    {
LABEL_6:
      a1[v7] = a2;
      return;
    }
    unsigned int v9 = ((1 << (8 * v7)) | 2u) >> (8 * v7);
    if (HIWORD(v9))
    {
      *(_DWORD *)&a1[v7] = a2;
    }
    else
    {
      if ((v9 | 0x10) <= 0xFF) {
        goto LABEL_6;
      }
      *(_WORD *)&a1[v7] = a2;
    }
  }
}

uint64_t getEnumTagSinglePayload for UpdateSyncPauseOperation(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateSyncPauseOperation(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24D4DFFF0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_24D4DFFF8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for UpdateSyncPauseOperation()
{
  return &type metadata for UpdateSyncPauseOperation;
}

uint64_t sub_24D4E0014@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  int v4 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v27 = swift_getAssociatedTypeWitness();
      int v28 = &v4[*(int *)(swift_getTupleTypeMetadata3() + 48)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a2, v4, AssociatedTypeWitness);
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v30 = swift_getAssociatedConformanceWitness();
      uint64_t v48 = AssociatedTypeWitness;
      uint64_t v49 = v27;
      uint64_t v50 = AssociatedConformanceWitness;
      uint64_t v51 = v30;
      type metadata accessor for ReconciliationID();
      swift_storeEnumTagMultiPayload();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v27 - 8) + 8))(v28, v27);
      break;
    case 6u:
    case 7u:
      uint64_t v18 = swift_getAssociatedTypeWitness();
      uint64_t v19 = swift_getAssociatedTypeWitness();
      uint64_t v20 = swift_getAssociatedConformanceWitness();
      uint64_t v21 = swift_getAssociatedConformanceWitness();
      uint64_t v48 = v18;
      uint64_t v49 = v19;
      uint64_t v50 = v20;
      uint64_t v51 = v21;
      uint64_t v22 = type metadata accessor for ReconciliationID();
      int v23 = &v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v24 = a2;
      uint64_t v25 = *(void *)(v22 - 8);
      (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v24, v4, v22);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v23, v22);
      break;
    case 8u:
      uint64_t v31 = swift_getAssociatedTypeWitness();
      uint64_t v32 = swift_getAssociatedTypeWitness();
      uint64_t v33 = swift_getAssociatedConformanceWitness();
      uint64_t v34 = swift_getAssociatedConformanceWitness();
      uint64_t v48 = v31;
      uint64_t v49 = v32;
      uint64_t v50 = v33;
      uint64_t v51 = v34;
      uint64_t v35 = type metadata accessor for ReconciliationID();
      uint64_t v36 = type metadata accessor for ReconciliationSideMutation();
      unsigned int v37 = &v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 32))(a2, v4, v35);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v37, v36);
      break;
    case 9u:
      uint64_t v38 = swift_getAssociatedTypeWitness();
      uint64_t v39 = swift_getAssociatedTypeWitness();
      uint64_t v40 = swift_getAssociatedConformanceWitness();
      uint64_t v47 = a2;
      uint64_t v41 = v40;
      uint64_t v42 = swift_getAssociatedConformanceWitness();
      uint64_t v48 = v38;
      uint64_t v49 = v39;
      uint64_t v50 = v41;
      uint64_t v51 = v42;
      uint64_t v43 = type metadata accessor for ReconciliationID();
      uint64_t v44 = type metadata accessor for ReconciliationSideMutation();
      unsigned int v45 = &v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v43 - 8) + 32))(v47, v4, v43);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v45, v44);
      break;
    case 0xAu:
    case 0xBu:
    case 0xCu:
    case 0xDu:
      uint64_t v12 = a2;
      uint64_t v13 = swift_getAssociatedTypeWitness();
      uint64_t v14 = swift_getAssociatedTypeWitness();
      uint64_t v15 = swift_getAssociatedConformanceWitness();
      uint64_t v16 = swift_getAssociatedConformanceWitness();
      uint64_t v48 = v13;
      uint64_t v49 = v14;
      uint64_t v50 = v15;
      uint64_t v51 = v16;
      uint64_t v17 = type metadata accessor for ReconciliationID();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v12, v4, v17);
      break;
    default:
      uint64_t v6 = swift_getAssociatedTypeWitness();
      uint64_t v7 = swift_getAssociatedTypeWitness();
      uint64_t v8 = swift_getAssociatedConformanceWitness();
      uint64_t v9 = swift_getAssociatedConformanceWitness();
      uint64_t v48 = v6;
      uint64_t v49 = v7;
      uint64_t v50 = v8;
      uint64_t v51 = v9;
      uint64_t v10 = type metadata accessor for ReconciliationID();
      uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a2, v4, v10);
      break;
  }
  return result;
}

uint64_t sub_24D4E07F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  MEMORY[0x270FA5388](a1);
  int v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v5;
  (*(void (**)(char *))(v5 + 16))(v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = swift_getAssociatedTypeWitness();
  if (EnumCaseMultiPayload == 1)
  {
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v10 = v19;
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v8 - 8) + 32))(v19, &v4[*(int *)(TupleTypeMetadata3 + 48)], v8);
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v12 = swift_getAssociatedConformanceWitness();
    uint64_t v20 = AssociatedTypeWitness;
    uint64_t v21 = v8;
    uint64_t v22 = AssociatedConformanceWitness;
    uint64_t v23 = v12;
    uint64_t v13 = type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 0, 1, v13);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v4, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v15 = swift_getAssociatedConformanceWitness();
    uint64_t v16 = swift_getAssociatedConformanceWitness();
    uint64_t v20 = AssociatedTypeWitness;
    uint64_t v21 = v8;
    uint64_t v22 = v15;
    uint64_t v23 = v16;
    uint64_t v17 = type metadata accessor for ReconciliationID();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v19, 1, 1, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v4, a1);
  }
}

uint64_t sub_24D4E0B10(uint64_t a1)
{
  uint64_t v38 = *(void *)(a1 + 24);
  uint64_t v3 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v37 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v36 = (char *)&v35 - v4;
  uint64_t v5 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](v6);
  char v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v1, a1);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 8:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v22 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v24 = swift_getAssociatedConformanceWitness();
      uint64_t v39 = AssociatedTypeWitness;
      uint64_t v40 = v22;
      uint64_t v41 = AssociatedConformanceWitness;
      uint64_t v42 = v24;
      uint64_t v25 = type metadata accessor for ReconciliationID();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      int v28 = v36;
      uint64_t v27 = v37;
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, &v11[*(int *)(TupleTypeMetadata2 + 48)], v3);
      uint64_t v20 = sub_24D4E10CC(v3);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v28, v3);
      (*(void (**)(char *, uint64_t))(*(void *)(v25 - 8) + 8))(v11, v25);
      break;
    case 11:
      uint64_t v29 = swift_getAssociatedTypeWitness();
      uint64_t v30 = swift_getAssociatedTypeWitness();
      uint64_t v31 = swift_getAssociatedConformanceWitness();
      uint64_t v32 = swift_getAssociatedConformanceWitness();
      uint64_t v39 = v29;
      uint64_t v40 = v30;
      uint64_t v41 = v31;
      uint64_t v42 = v32;
      uint64_t v33 = type metadata accessor for ReconciliationID();
      uint64_t v20 = *(void *)&v11[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v11, v33);
      break;
    case 9:
      uint64_t v13 = swift_getAssociatedTypeWitness();
      uint64_t v14 = swift_getAssociatedTypeWitness();
      uint64_t v15 = swift_getAssociatedConformanceWitness();
      uint64_t v16 = swift_getAssociatedConformanceWitness();
      uint64_t v39 = v13;
      uint64_t v40 = v14;
      uint64_t v41 = v15;
      uint64_t v42 = v16;
      uint64_t v17 = type metadata accessor for ReconciliationID();
      uint64_t v18 = swift_getTupleTypeMetadata2();
      uint64_t v19 = v35;
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v8, &v11[*(int *)(v18 + 48)], v5);
      uint64_t v20 = sub_24D4E10CC(v5);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v5);
      (*(void (**)(char *, uint64_t))(*(void *)(v17 - 8) + 8))(v11, v17);
      break;
    default:
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, a1);
      return 0;
  }
  return v20;
}

uint64_t sub_24D4E10CC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  uint64_t v8 = (uint64_t *)((char *)&v15 - v7);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v15 - v9;
  char v11 = *(void (**)(char *))(v2 + 16);
  v11((char *)&v15 - v9);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 13)
  {
    ((void (*)(char *, char *, uint64_t))v11)(v5, v10, a1);
    if (v5[1] <= 1u)
    {
      uint64_t v13 = *((void *)v5 + 1);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (EnumCaseMultiPayload == 2)
  {
    ((void (*)(uint64_t *, char *, uint64_t))v11)(v8, v10, a1);
    uint64_t v13 = *v8;
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload)
  {
LABEL_8:
    uint64_t v13 = 0;
    goto LABEL_9;
  }
  ((void (*)(uint64_t *, char *, uint64_t))v11)(v8, v10, a1);
  uint64_t v13 = v8[1];
LABEL_9:
  (*(void (**)(char *, uint64_t))(v2 + 8))(v10, a1);
  return v13;
}

uint64_t sub_24D4E12A4()
{
  return sub_24DA605B8(*v0);
}

uint64_t sub_24D4E12AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24DA61194(a1, a2, a3, *v3);
}

uint64_t sub_24D4E12B4()
{
  return sub_24DCC9AC8();
}

uint64_t sub_24D4E12D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v80 = *(void *)(v2 - 8);
  uint64_t v81 = v2;
  MEMORY[0x270FA5388](v2);
  size_t v78 = (char *)&v74 - v3;
  uint64_t v4 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v76 = *(void *)(v4 - 8);
  uint64_t v77 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v75 = (char *)&v74 - v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unsigned int v79 = (char *)&v74 - v7;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v84 = (char *)&v74 - v9;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = swift_getAssociatedConformanceWitness();
  uint64_t v91 = v8;
  unint64_t v92 = AssociatedTypeWitness;
  uint64_t v93 = AssociatedConformanceWitness;
  uint64_t v94 = v11;
  uint64_t v12 = type metadata accessor for ReconciliationID();
  uint64_t v87 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  unint64_t v74 = (char *)&v74 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  size_t v83 = (char *)&v74 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v86 = (char *)&v74 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v74 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v27 = (char *)&v74 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v29 = (char *)&v74 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v29, v88, a1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v33 = &v29[*(int *)(swift_getTupleTypeMetadata3() + 48)];
      (*(void (**)(char *, char *, uint64_t))(v85 + 32))(v84, v29, v8);
      uint64_t v34 = v82;
      uint64_t v35 = v79;
      (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v79, v33, AssociatedTypeWitness);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v72 = v91;
      (*(void (**)(char *, uint64_t))(v34 + 8))(v35, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v85 + 8))(v84, v8);
      return v72;
    case 2u:
      uint64_t v36 = v12;
      swift_getTupleTypeMetadata2();
      uint64_t v37 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v24, v29, v36);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v72 = v91;
      (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v36);
      return v72;
    case 3u:
      uint64_t v39 = v86;
      uint64_t v38 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v29, v12);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v72 = v91;
      (*(void (**)(char *, uint64_t))(v38 + 8))(v39, v12);
      return v72;
    case 4u:
    case 5u:
      uint64_t v50 = *(void *)&v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v52 = v86;
      uint64_t v51 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v29, v12);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v89 = v50;
      sub_24DCCA948();
      goto LABEL_17;
    case 6u:
    case 7u:
      uint64_t v53 = v12;
      BOOL v54 = &v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v56 = v86;
      uint64_t v55 = v87;
      unsigned int v57 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
      v57(v86, v29, v53);
      __int16 v58 = v83;
      v57(v83, v54, v53);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v72 = v91;
      uint64_t v59 = *(void (**)(char *, uint64_t))(v55 + 8);
      v59(v58, v53);
      v59(v56, v53);
      return v72;
    case 8u:
      uint64_t v40 = v12;
      uint64_t v41 = v77;
      unint64_t v60 = &v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v44 = v86;
      uint64_t v43 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v29, v40);
      uint64_t v45 = v76;
      uint64_t v46 = v75;
      (*(void (**)(char *, char *, uint64_t))(v76 + 32))(v75, v60, v41);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      goto LABEL_12;
    case 9u:
      uint64_t v40 = v12;
      uint64_t v41 = v81;
      uint64_t v42 = &v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v44 = v86;
      uint64_t v43 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v29, v40);
      uint64_t v45 = v80;
      uint64_t v46 = v78;
      (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v78, v42, v41);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
LABEL_12:
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCCADB8();
      sub_24DCC9968();
      uint64_t v72 = v91;
      (*(void (**)(char *, uint64_t))(v45 + 8))(v46, v41);
      goto LABEL_13;
    case 0xAu:
      uint64_t v61 = v12;
      uint64_t v62 = &v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      unint64_t v63 = *(void *)v62;
      char v64 = v62[8];
      uint64_t v65 = v87;
      int v66 = v74;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v74, v29, v61);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      if (v64)
      {
        uint64_t v67 = 0x2865766F6D6572;
        unint64_t v68 = 0xE700000000000000;
      }
      else
      {
        uint64_t v67 = 677667937;
        unint64_t v68 = 0xE400000000000000;
      }
      uint64_t v89 = v67;
      unint64_t v90 = v68;
      sub_24D97BA84(v63);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v72 = v91;
      (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v61);
      return v72;
    case 0xBu:
      uint64_t v40 = v12;
      unint64_t v47 = *(void *)&v29[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v44 = v86;
      uint64_t v43 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v29, v40);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      uint64_t v89 = sub_24D7C000C(v47);
      unint64_t v90 = v48;
      sub_24DCC9968();
      sub_24DCC9E38();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v72 = v91;
LABEL_13:
      (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v40);
      break;
    case 0xCu:
      swift_getTupleTypeMetadata2();
      uint64_t v49 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v15, v29, v12);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v72 = v91;
      (*(void (**)(char *, uint64_t))(v49 + 8))(v15, v12);
      break;
    case 0xDu:
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      unint64_t v70 = *(void *)&v29[*(int *)(TupleTypeMetadata3 + 48)];
      unint64_t v71 = *(void *)&v29[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v52 = v86;
      uint64_t v51 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v86, v29, v12);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24D97BCC8(v70);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24D97BCC8(v71);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
LABEL_17:
      sub_24DCC9968();
      uint64_t v72 = v91;
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v12);
      break;
    default:
      uint64_t v31 = v12;
      swift_getTupleTypeMetadata2();
      uint64_t v32 = v87;
      (*(void (**)(char *, char *, uint64_t))(v87 + 32))(v27, v29, v31);
      uint64_t v91 = 0;
      unint64_t v92 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v72 = v91;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v27, v31);
      break;
  }
  return v72;
}

uint64_t sub_24D4E26F8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v100 = a2;
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[4];
  uint64_t v7 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v92 = *(void *)(v7 - 8);
  uint64_t v93 = (void (*)(void, void, void))v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v91 = (char *)&v87 - v8;
  uint64_t v9 = (void (*)(void, void, void))a1[3];
  uint64_t v10 = a1[5];
  uint64_t v11 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v89 = *(void *)(v11 - 8);
  uint64_t v90 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v88 = (char *)&v87 - v12;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v99 = v6;
  uint64_t v97 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v98 = v10;
  uint64_t v16 = v9;
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v95 = v14;
  uint64_t v96 = AssociatedTypeWitness;
  uint64_t v101 = (void (*)(void, void, void))AssociatedTypeWitness;
  uint64_t v102 = v14;
  uint64_t v18 = AssociatedConformanceWitness;
  uint64_t v103 = AssociatedConformanceWitness;
  uint64_t v104 = v17;
  uint64_t v94 = v17;
  uint64_t v19 = (int8x16_t *)type metadata accessor for ReconciliationID();
  uint64_t v20 = v19[-1].i64[1];
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v87 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v28 = (char *)&v87 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, void *))(v29 + 16))(v28, v3, a1);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v35 = v95;
      uint64_t v34 = v96;
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v37 = &v28[*(int *)(TupleTypeMetadata3 + 48)];
      char v38 = v28[*(int *)(TupleTypeMetadata3 + 64)];
      uint64_t v39 = swift_getTupleTypeMetadata3();
      uint64_t v40 = v100;
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v34 - 8) + 32))(v100 + *(int *)(v39 + 48), v28, v34);
      uint64_t v41 = *(int *)(v39 + 64);
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v35 - 8) + 32))(v40, v37, v35);
      *(unsigned char *)(v40 + v41) = v38;
      uint64_t v101 = v16;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 3u:
      (*(void (**)(char *, char *, int8x16_t *))(v20 + 32))(v26, v28, v19);
      sub_24D95FD44(v19, v100);
      (*(void (**)(char *, int8x16_t *))(v20 + 8))(v26, v19);
      uint64_t v101 = v16;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 4u:
    case 5u:
      uint64_t v42 = v19;
      uint64_t v43 = *(void *)&v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, int8x16_t *))(v20 + 32))(v26, v28, v42);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v18;
      type metadata accessor for ReconciliationID();
      uint64_t v44 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v45 = v100;
      sub_24D95FD44(v42, v100);
      (*(void (**)(char *, int8x16_t *))(v20 + 8))(v26, v42);
      *(void *)(v45 + v44) = v43;
      uint64_t v101 = v16;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 6u:
      uint64_t v46 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v93 = v16;
      unint64_t v47 = *(void (**)(char *, char *, int8x16_t *))(v20 + 32);
      v47(v26, v28, v19);
      v47(v23, v46, v19);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v18;
      type metadata accessor for ReconciliationID();
      uint64_t v48 = v100 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      sub_24D95FD44(v19, v100);
      uint64_t v49 = *(void (**)(char *, int8x16_t *))(v20 + 8);
      v49(v26, v19);
      sub_24D95FD44(v19, v48);
      v49(v23, v19);
      uint64_t v101 = v93;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 7u:
      uint64_t v50 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v93 = v16;
      uint64_t v51 = *(void (**)(char *, char *, int8x16_t *))(v20 + 32);
      v51(v26, v28, v19);
      v51(v23, v50, v19);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v18;
      type metadata accessor for ReconciliationID();
      uint64_t v52 = v100 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      sub_24D95FD44(v19, v100);
      uint64_t v53 = *(void (**)(char *, int8x16_t *))(v20 + 8);
      v53(v26, v19);
      sub_24D95FD44(v19, v52);
      v53(v23, v19);
      uint64_t v101 = v93;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 8u:
      uint64_t v54 = v90;
      uint64_t v55 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, int8x16_t *))(v20 + 32))(v26, v28, v19);
      uint64_t v56 = v88;
      uint64_t v93 = *(void (**)(void, void, void))(v89 + 32);
      v93(v88, v55, v54);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v18;
      type metadata accessor for ReconciliationID();
      uint64_t v57 = v100 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      sub_24D95FD44(v19, v100);
      (*(void (**)(char *, int8x16_t *))(v20 + 8))(v26, v19);
      v93(v57, v56, v54);
      uint64_t v101 = v16;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 9u:
      __int16 v58 = v93;
      uint64_t v59 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, int8x16_t *))(v20 + 32))(v26, v28, v19);
      unint64_t v60 = v91;
      uint64_t v92 = *(void *)(v92 + 32);
      ((void (*)(char *, char *, void))v92)(v91, v59, v58);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v18;
      type metadata accessor for ReconciliationID();
      uint64_t v61 = v100 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      sub_24D95FD44(v19, v100);
      (*(void (**)(char *, int8x16_t *))(v20 + 8))(v26, v19);
      ((void (*)(uint64_t, char *, void))v92)(v61, v60, v58);
      uint64_t v101 = v16;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 0xAu:
      uint64_t v62 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v63 = v18;
      char v64 = v19;
      uint64_t v65 = *(void *)v62;
      int v66 = v16;
      char v67 = v62[8];
      (*(void (**)(char *, char *, int8x16_t *))(v20 + 32))(v26, v28, v64);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v63;
      type metadata accessor for ReconciliationID();
      uint64_t v68 = v100 + *(int *)(swift_getTupleTypeMetadata2() + 48);
      sub_24D95FD44(v64, v100);
      (*(void (**)(char *, int8x16_t *))(v20 + 8))(v26, v64);
      *(void *)uint64_t v68 = v65;
      *(unsigned char *)(v68 + 8) = v67;
      uint64_t v101 = v66;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 0xBu:
      unint64_t v69 = &v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      uint64_t v70 = v18;
      unint64_t v71 = v19;
      uint64_t v72 = v16;
      uint64_t v73 = *(void *)v69;
      uint64_t v74 = *((void *)v69 + 1);
      (*(void (**)(char *, char *, int8x16_t *))(v20 + 32))(v26, v28, v71);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v70;
      type metadata accessor for ReconciliationID();
      unint64_t v75 = (void *)(v100 + *(int *)(swift_getTupleTypeMetadata2() + 48));
      sub_24D95FD44(v71, v100);
      (*(void (**)(char *, int8x16_t *))(v20 + 8))(v26, v71);
      *unint64_t v75 = v73;
      v75[1] = v74;
      uint64_t v101 = v72;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    case 0xDu:
      uint64_t v76 = swift_getTupleTypeMetadata3();
      uint64_t v77 = v18;
      size_t v78 = v19;
      uint64_t v79 = *(void *)&v28[*(int *)(v76 + 48)];
      uint64_t v80 = v16;
      uint64_t v81 = *(void *)&v28[*(int *)(v76 + 64)];
      (*(void (**)(char *, char *, int8x16_t *))(v20 + 32))(v26, v28, v78);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v77;
      type metadata accessor for ReconciliationID();
      uint64_t v82 = swift_getTupleTypeMetadata3();
      uint64_t v83 = *(int *)(v82 + 48);
      uint64_t v84 = *(int *)(v82 + 64);
      uint64_t v85 = v100;
      sub_24D95FD44(v78, v100);
      (*(void (**)(char *, int8x16_t *))(v20 + 8))(v26, v78);
      *(void *)(v85 + v83) = v79;
      *(void *)(v85 + v84) = v81;
      uint64_t v101 = v80;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
    default:
      uint64_t v30 = v19;
      char v31 = v28[*(int *)(swift_getTupleTypeMetadata2() + 48)];
      (*(void (**)(char *, char *, int8x16_t *))(v20 + 32))(v26, v28, v30);
      uint64_t v101 = (void (*)(void, void, void))v95;
      uint64_t v102 = v96;
      uint64_t v103 = v94;
      uint64_t v104 = v18;
      type metadata accessor for ReconciliationID();
      uint64_t v32 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      uint64_t v33 = v100;
      sub_24D95FD44(v30, v100);
      (*(void (**)(char *, int8x16_t *))(v20 + 8))(v26, v30);
      *(unsigned char *)(v33 + v32) = v31;
      uint64_t v101 = v16;
      uint64_t v102 = v97;
      uint64_t v103 = v98;
      uint64_t v104 = v99;
      type metadata accessor for ReconciliationMutation();
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24D4E37F4(unint64_t a1, char a2)
{
  if (a2) {
    uint64_t v2 = 0x2865766F6D6572;
  }
  else {
    uint64_t v2 = 677667937;
  }
  uint64_t v4 = v2;
  sub_24D97BA84(a1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24D4E3860()
{
  return sub_24D4E37F4(*(void *)v0, *(unsigned char *)(v0 + 8));
}

ValueMetadata *type metadata accessor for ReconciliationChildrenDeletionOptions()
{
  return &type metadata for ReconciliationChildrenDeletionOptions;
}

unint64_t sub_24D4E3880()
{
  unint64_t result = qword_26986BBF0;
  if (!qword_26986BBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BBF0);
  }
  return result;
}

unint64_t sub_24D4E38D8()
{
  unint64_t result = qword_26986BBF8;
  if (!qword_26986BBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BBF8);
  }
  return result;
}

unint64_t sub_24D4E3930()
{
  unint64_t result = qword_26986BC00;
  if (!qword_26986BC00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26986BC08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC00);
  }
  return result;
}

unint64_t sub_24D4E3990()
{
  unint64_t result = qword_26986BC10;
  if (!qword_26986BC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC10);
  }
  return result;
}

unint64_t sub_24D4E39E8()
{
  unint64_t result = qword_26986BC18;
  if (!qword_26986BC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC18);
  }
  return result;
}

unint64_t sub_24D4E3A40()
{
  unint64_t result = qword_26B193EF0;
  if (!qword_26B193EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193EF0);
  }
  return result;
}

unint64_t sub_24D4E3A94(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24D4E3AC4();
  unint64_t result = sub_24D4E3B18();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24D4E3AC4()
{
  unint64_t result = qword_26986BC20;
  if (!qword_26986BC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC20);
  }
  return result;
}

unint64_t sub_24D4E3B18()
{
  unint64_t result = qword_26986BC28;
  if (!qword_26986BC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC28);
  }
  return result;
}

uint64_t sub_24D4E3B6C()
{
  return sub_24DCCA478();
}

double sub_24D4E3BE0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D4E3C10(a1, (void (*)(uint64_t))sub_24D4E4B98, a2);
}

double sub_24D4E3BF8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D4E3C10(a1, (void (*)(uint64_t))sub_24D4018B8, a2);
}

double sub_24D4E3C10@<D0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    char v4 = *(unsigned char *)(a1 + 41);
    char v5 = *(unsigned char *)(a1 + 42);
    char v6 = *(unsigned char *)(a1 + 48);
    uint64_t v7 = *(void **)(a1 + 88);
    char v8 = *(unsigned char *)(a1 + 96);
    uint64_t v9 = *(void *)(a1 + 104);
    uint64_t v10 = *(void *)(a1 + 112);
    *(void *)a3 = v3;
    *(unsigned char *)(a3 + 8) = *(unsigned char *)(a1 + 40);
    *(unsigned char *)(a3 + 9) = v4;
    *(unsigned char *)(a3 + 10) = v5;
    *(unsigned char *)(a3 + 16) = v6;
    *(_OWORD *)(a3 + 24) = *(_OWORD *)(a1 + 56);
    *(_OWORD *)(a3 + 40) = *(_OWORD *)(a1 + 72);
    *(void *)(a3 + 56) = v7;
    *(unsigned char *)(a3 + 64) = v8;
    *(void *)(a3 + 72) = v9;
    *(void *)(a3 + 80) = v10;
    a2(v3);
    id v11 = v7;
    swift_bridgeObjectRetain();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
    *(void *)(a3 + 48) = 0;
    *(void *)(a3 + 56) = 1;
    *(void *)(a3 + 72) = 0;
    *(void *)(a3 + 80) = 0;
    *(void *)(a3 + 64) = 0;
  }
  return result;
}

void *sub_24D4E3CD8(uint64_t a1)
{
  return sub_24D4E3CF0(a1, (uint64_t (*)(void))sub_24DB3A898);
}

void *sub_24D4E3CF0(uint64_t a1, uint64_t (*a2)(void))
{
  double result = (void *)a2();
  if (v5) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v4)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_24D4E4C60(&v6, (uint64_t)result, v4, 0, a1);
  }
}

void *sub_24D4E3D7C(uint64_t a1)
{
  double result = (void *)sub_24DB3A898(a1);
  if (v4) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == (void *)(1 << *(unsigned char *)(a1 + 32))) {
    return 0;
  }
  else {
    return sub_24D4E4D50(&v5, (uint64_t)result, v3, 0, a1);
  }
}

uint64_t sub_24D4E3E08()
{
  sub_24D3F0EB8();
  uint64_t v0 = sub_24DCCA478();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24D4E3EA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D4E3ED4()
{
  uint64_t v0 = (void *)sub_24DCC97B8();
  id v1 = objc_msgSend(v0, sel_fp_obfuscatedFilename);

  uint64_t v2 = sub_24DCC97E8();
  return v2;
}

uint64_t sub_24D4E3F38(uint64_t a1, unint64_t a2)
{
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24D40114C(a1, a2);
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (!v6) {
    goto LABEL_7;
  }
  if (v4 != 12565487 || v6 != 0xA300000000000000)
  {
    char v7 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_6;
    }
LABEL_7:
    swift_bridgeObjectRetain();
    return a1;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_24DCC9918();
  unint64_t v9 = sub_24D41824C(v8, a1, a2);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  a1 = MEMORY[0x253327950](v9, v11, v13, v15);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24D4E405C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_24D40114C(a1, a2);
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  if (v10)
  {
    if (v8 == 12565487 && v10 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRetain();
      unint64_t v12 = sub_24DCC9918();
      unint64_t v13 = sub_24D41824C(v12, a1, a2);
      uint64_t v15 = v14;
      uint64_t v17 = v16;
      uint64_t v19 = v18;
      swift_bridgeObjectRelease();
      a1 = MEMORY[0x253327950](v13, v15, v17, v19);
      a2 = v20;
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    char v11 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v11) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRetain();
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_24D40114C(a3, a4);
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  if (v23)
  {
    if (v21 == 12565487 && v23 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    char v24 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v24)
    {
LABEL_13:
      swift_bridgeObjectRetain();
      unint64_t v25 = sub_24DCC9918();
      unint64_t v26 = sub_24D41824C(v25, a3, a4);
      uint64_t v28 = v27;
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      swift_bridgeObjectRelease();
      uint64_t v33 = MEMORY[0x253327950](v26, v28, v30, v32);
      a4 = v34;
      swift_bridgeObjectRelease();
      if (a1 != v33) {
        goto LABEL_18;
      }
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRetain();
  if (a1 != a3)
  {
LABEL_18:
    char v35 = sub_24DCCAE28();
    goto LABEL_19;
  }
LABEL_16:
  if (a2 != a4) {
    goto LABEL_18;
  }
  char v35 = 1;
LABEL_19:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v35 & 1;
}

uint64_t sub_24D4E42BC(uint64_t a1, uint64_t a2)
{
  if (a1 == 11822 && a2 == 0xE200000000000000) {
    return 0;
  }
  char v5 = sub_24DCCAE28();
  char v6 = 0;
  if ((v5 & 1) == 0)
  {
    if (a1 == 46 && a2 == 0xE100000000000000) {
      char v6 = 0;
    }
    else {
      char v6 = sub_24DCCAE28() ^ 1;
    }
  }
  return v6 & 1;
}

void *sub_24D4E4354@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  *a2 = *result;
  a2[1] = v2;
  return result;
}

uint64_t sub_24D4E4360@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24D4E436C()
{
  return sub_24DCCB048();
}

uint64_t sub_24D4E43C8()
{
  swift_bridgeObjectRetain();
  sub_24DCC98F8();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D4E4420()
{
  return sub_24DCCB048();
}

uint64_t sub_24D4E4478()
{
  uint64_t v0 = (void *)sub_24DCC97B8();
  id v1 = objc_msgSend(v0, sel_fp_obfuscatedFilename);

  uint64_t v2 = sub_24DCC97E8();
  return v2;
}

uint64_t sub_24D4E44E0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  uint64_t v4 = sub_24D4E3F38(*(void *)a1, *(void *)(a1 + 8));
  uint64_t v6 = v5;
  if (v4 == sub_24D4E3F38(v2, v3) && v6 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_24D4E4578()
{
  return sub_24DCC9978();
}

uint64_t sub_24D4E4590(uint64_t a1)
{
  sub_24D433858(a1, (uint64_t)v4);
  uint64_t v2 = sub_24DCC98E8();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t sub_24D4E45F8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24D433858(a1, (uint64_t)v10);
  uint64_t v5 = sub_24DCC98E8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v8;
  a2[1] = v9;
  return result;
}

uint64_t sub_24D4E4678()
{
  return sub_24DCC9978();
}

uint64_t sub_24D4E469C@<X0>(uint64_t *a1@<X8>)
{
  sub_24D3F0EB8();
  uint64_t v2 = sub_24DCCA478();
  uint64_t v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  a1[1] = v4;
  return result;
}

uint64_t sub_24D4E4734()
{
  sub_24D3F0EB8();
  uint64_t result = sub_24DCCA478();
  qword_269891600 = result;
  *(void *)algn_269891608 = v1;
  return result;
}

uint64_t *sub_24D4E47C8()
{
  if (qword_26986A740 != -1) {
    swift_once();
  }
  return &qword_269891600;
}

uint64_t sub_24D4E4814()
{
  return sub_24D4E4948(&qword_26986A740, &qword_269891600);
}

uint64_t sub_24D4E483C()
{
  sub_24D3F0EB8();
  uint64_t result = sub_24DCCA478();
  qword_269891610 = result;
  *(void *)algn_269891618 = v1;
  return result;
}

uint64_t *sub_24D4E48D4()
{
  if (qword_26986A748 != -1) {
    swift_once();
  }
  return &qword_269891610;
}

uint64_t sub_24D4E4920()
{
  return sub_24D4E4948(&qword_26986A748, &qword_269891610);
}

uint64_t sub_24D4E4948(void *a1, uint64_t *a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v3 = *a2;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t sub_24D4E49A0()
{
  unint64_t result = qword_26986BC30;
  if (!qword_26986BC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC30);
  }
  return result;
}

unint64_t sub_24D4E49F8()
{
  unint64_t result = qword_26986BC38;
  if (!qword_26986BC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC38);
  }
  return result;
}

uint64_t sub_24D4E4A4C()
{
  return MEMORY[0x263F8D388];
}

unint64_t sub_24D4E4A5C()
{
  unint64_t result = qword_26986BC40;
  if (!qword_26986BC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC40);
  }
  return result;
}

uint64_t sub_24D4E4AB0()
{
  return MEMORY[0x263F8D398];
}

uint64_t sub_24D4E4ABC()
{
  return MEMORY[0x263F8D390];
}

void *assignWithCopy for Filename(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Filename(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Filename(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

ValueMetadata *type metadata accessor for Filename()
{
  return &type metadata for Filename;
}

id sub_24D4E4B98(id result, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return result;
  }
  return result;
}

uint64_t sub_24D4E4BA4(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v6 = result;
    uint64_t v7 = *(void *)(a5 + 56);
    uint64_t v8 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
    sub_24D4E4CE8(v7 + *(void *)(*(void *)(v9 - 8) + 72) * a2, v6);
    return v8;
  }
LABEL_8:
  __break(1u);
  return result;
}

void *sub_24D4E4C60(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void **)(*(void *)(a5 + 48) + 8 * a2);
    *unint64_t result = *(void *)(*(void *)(a5 + 56) + 8 * a2);
    id v6 = v5;
    swift_retain();
    return v6;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_24D4E4CE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_24D4E4D50(void *result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  if (a2 < 0 || 1 << *(unsigned char *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a5 + 8 * ((unint64_t)a2 >> 6) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    uint64_t v5 = *(void *)(*(void *)(a5 + 48) + 16 * a2);
    id v6 = *(void **)(*(void *)(a5 + 56) + 8 * a2);
    *unint64_t result = v6;
    swift_bridgeObjectRetain();
    id v7 = v6;
    return (void *)v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_24D4E4DE4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v3 = a1;
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, v1, 0);
    uint64_t v2 = v37;
    uint64_t v5 = sub_24D965F24(v3);
    uint64_t v6 = 0;
    uint64_t v7 = v3 + 64;
    char v8 = *(unsigned char *)(v3 + 32);
    uint64_t v29 = v3 + 80;
    int64_t v30 = v1;
    uint64_t v32 = v3 + 64;
    uint64_t v33 = v3;
    int v31 = v4;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << v8)
    {
      unint64_t v11 = (unint64_t)v5 >> 6;
      if ((*(void *)(v7 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
        goto LABEL_27;
      }
      if (*(_DWORD *)(v3 + 36) != v4) {
        goto LABEL_28;
      }
      uint64_t v34 = v6 + 1;
      uint64_t v35 = v2;
      unint64_t v12 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v5);
      uint64_t v13 = *v12;
      unint64_t v14 = v12[1];
      swift_bridgeObjectRetain();
      sub_24D3F9C18(v13, v14);
      swift_bridgeObjectRetain();
      sub_24D3F9C18(v13, v14);
      swift_bridgeObjectRelease();
      sub_24D400DCC(v13, v14);
      uint64_t v15 = (void *)sub_24DCC97B8();
      id v16 = objc_msgSend(v15, sel_fp_obfuscatedExtendedAttributeName);

      uint64_t v17 = sub_24DCC97E8();
      uint64_t v19 = v18;

      uint64_t v36 = v17;
      sub_24DCC9968();
      switch(v14 >> 62)
      {
        case 1uLL:
          if (!__OFSUB__(HIDWORD(v13), v13)) {
            goto LABEL_13;
          }
          goto LABEL_32;
        case 2uLL:
          if (!__OFSUB__(*(void *)(v13 + 24), *(void *)(v13 + 16))) {
            goto LABEL_13;
          }
          goto LABEL_33;
        default:
LABEL_13:
          sub_24DCCAD78();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24D400DCC(v13, v14);
          uint64_t v2 = v35;
          unint64_t v21 = *(void *)(v35 + 16);
          unint64_t v20 = *(void *)(v35 + 24);
          if (v21 >= v20 >> 1)
          {
            sub_24D3E4C28(v20 > 1, v21 + 1, 1);
            uint64_t v2 = v35;
          }
          *(void *)(v2 + 16) = v21 + 1;
          uint64_t v22 = v2 + 16 * v21;
          *(void *)(v22 + 32) = v36;
          *(void *)(v22 + 40) = v19;
          uint64_t v3 = v33;
          char v8 = *(unsigned char *)(v33 + 32);
          unint64_t v9 = 1 << v8;
          if (v5 >= 1 << v8) {
            goto LABEL_29;
          }
          uint64_t v7 = v32;
          uint64_t v23 = *(void *)(v32 + 8 * v11);
          if ((v23 & (1 << v5)) == 0) {
            goto LABEL_30;
          }
          int v4 = v31;
          if (*(_DWORD *)(v33 + 36) != v31) {
            goto LABEL_31;
          }
          unint64_t v24 = v23 & (-2 << (v5 & 0x3F));
          if (v24)
          {
            unint64_t v9 = __clz(__rbit64(v24)) | v5 & 0xFFFFFFFFFFFFFFC0;
            int64_t v10 = v30;
            goto LABEL_4;
          }
          unint64_t v25 = v11 + 1;
          unint64_t v26 = (v9 + 63) >> 6;
          int64_t v10 = v30;
          if (v11 + 1 >= v26) {
            goto LABEL_4;
          }
          unint64_t v27 = *(void *)(v32 + 8 * v25);
          if (v27) {
            goto LABEL_24;
          }
          break;
      }
      while (v26 - 2 != v11)
      {
        unint64_t v27 = *(void *)(v29 + 8 * v11++);
        if (v27)
        {
          unint64_t v25 = v11 + 1;
LABEL_24:
          unint64_t v9 = __clz(__rbit64(v27)) + (v25 << 6);
          break;
        }
      }
LABEL_4:
      uint64_t v6 = v34;
      uint64_t v5 = v9;
      if (v34 == v10) {
        return v2;
      }
    }
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    JUMPOUT(0x24D4E5150);
  }
  return v2;
}

uint64_t sub_24D4E5160(uint64_t a1)
{
  return __ROR8__(a1, 32);
}

uint64_t sub_24D4E516C(uint64_t a1)
{
  return sub_24D4ED378(HIDWORD(a1));
}

uint64_t sub_24D4E5174(unint64_t a1)
{
  v13[1] = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24DCC9858();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24DCC8A98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = __rev32(a1);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F06F00], v3);
  sub_24DCC8A88();
  sub_24DCC8518();
  swift_allocObject();
  swift_retain();
  uint64_t v7 = sub_24DCC84B8();
  uint64_t v8 = sub_24D4ED290(v7, 8);
  unint64_t v10 = v9;
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24DCC9838();
  uint64_t v11 = sub_24DCC9808();
  sub_24D400DCC(v8, v10);
  return v11;
}

void *sub_24D4E5380@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = __ROR8__(*result, 32);
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_24D4E5394(unint64_t *a1@<X8>)
{
  *a1 = v1[1] | ((unint64_t)*v1 << 32);
}

BOOL sub_24D4E53A4(unsigned int *a1, unsigned int *a2)
{
  return (a1[1] | ((unint64_t)*a1 << 32)) == (a2[1] | ((unint64_t)*a2 << 32));
}

uint64_t sub_24D4E53C0()
{
  return sub_24DCC9BF8();
}

uint64_t sub_24D4E5450()
{
  return sub_24DCC9B88();
}

uint64_t sub_24D4E54D0()
{
  return *v0;
}

uint64_t sub_24D4E54D8(uint64_t result)
{
  *int64_t v1 = result;
  return result;
}

uint64_t (*sub_24D4E54E0())()
{
  return nullsub_1;
}

unint64_t sub_24D4E5500()
{
  return *(unsigned int *)(v0 + 4) | ((unint64_t)*(unsigned __int8 *)(v0 + 8) << 32);
}

uint64_t sub_24D4E5520(uint64_t result)
{
  *(_DWORD *)(v1 + 4) = result;
  *(unsigned char *)(v1 + 8) = BYTE4(result) & 1;
  return result;
}

uint64_t (*sub_24D4E5530())()
{
  return nullsub_1;
}

uint64_t sub_24D4E5550()
{
  return *(unsigned __int16 *)(v0 + 10);
}

uint64_t sub_24D4E5558(uint64_t result)
{
  *(_WORD *)(v1 + 10) = result;
  return result;
}

uint64_t (*sub_24D4E5560())()
{
  return nullsub_1;
}

uint64_t sub_24D4E5580@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ItemMetadata() + 28);
  uint64_t v4 = sub_24DCC8CE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_24D4E55F8(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ItemMetadata() + 28);
  uint64_t v4 = sub_24DCC8CE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*sub_24D4E5670())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E56B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ItemMetadata() + 32);
  uint64_t v4 = sub_24DCC8CE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t sub_24D4E5730(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ItemMetadata() + 32);
  uint64_t v4 = sub_24DCC8CE8();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*sub_24D4E57A8())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E57F0()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 36));
}

uint64_t sub_24D4E5814(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*sub_24D4E5844())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E588C()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 40));
}

uint64_t sub_24D4E58B0(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_24D4E58E0())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5928()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 44));
}

uint64_t sub_24D4E594C(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_24D4E597C())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E59C4()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 48));
}

uint64_t sub_24D4E59E8(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*sub_24D4E5A18())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5A60()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 52));
}

uint64_t sub_24D4E5A84(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*sub_24D4E5AB4())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5AFC()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24D4E5B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ItemMetadata() + 56));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_24D4E5B84())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5BCC()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 60));
}

uint64_t sub_24D4E5BF0(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*sub_24D4E5C20())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5C68()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 64));
}

uint64_t sub_24D4E5C8C(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*sub_24D4E5CBC())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5D04()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 68));
}

uint64_t sub_24D4E5D28(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 68)) = a1;
  return result;
}

uint64_t (*sub_24D4E5D58())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5DA0()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 72));
}

uint64_t sub_24D4E5DC4(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 72)) = a1;
  return result;
}

uint64_t (*sub_24D4E5DF4())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5E3C()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 76));
}

uint64_t sub_24D4E5E60(uint64_t a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(void *)(v1 + *(int *)(result + 76)) = a1;
  return result;
}

uint64_t (*sub_24D4E5E90())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5ED8()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 80));
}

uint64_t sub_24D4E5EFC(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 80)) = a1;
  return result;
}

uint64_t (*sub_24D4E5F2C())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E5F74()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 84));
}

uint64_t sub_24D4E5F98(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 84)) = a1;
  return result;
}

uint64_t (*sub_24D4E5FC8())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6010()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 88));
}

uint64_t sub_24D4E6034(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 88)) = a1;
  return result;
}

uint64_t (*sub_24D4E6064())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E60AC()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 92));
}

uint64_t sub_24D4E60D0(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*sub_24D4E6100())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6148()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 96));
}

uint64_t sub_24D4E616C(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 96)) = a1;
  return result;
}

uint64_t (*sub_24D4E619C())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E61E4()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 100));
}

uint64_t sub_24D4E6208(uint64_t a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(void *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*sub_24D4E6238())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6280()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 104));
}

uint64_t sub_24D4E62A4(uint64_t a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(void *)(v1 + *(int *)(result + 104)) = a1;
  return result;
}

uint64_t (*sub_24D4E62D4())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E631C()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 108));
}

uint64_t sub_24D4E6340(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 108)) = a1;
  return result;
}

uint64_t (*sub_24D4E6370())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E63B8()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 112));
}

uint64_t sub_24D4E63DC(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 112)) = a1;
  return result;
}

uint64_t (*sub_24D4E640C())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6454@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ItemMetadata();
  return sub_24D415FD0(v1 + *(int *)(v3 + 116), a1, (uint64_t *)&unk_26B196B10);
}

uint64_t sub_24D4E6494(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ItemMetadata() + 116);

  return sub_24D4190E8(a1, v3);
}

uint64_t (*sub_24D4E64D8())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6520()
{
  type metadata accessor for ItemMetadata();

  return swift_bridgeObjectRetain();
}

uint64_t sub_24D4E6554(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ItemMetadata() + 120);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_24D4E6594())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E65DC()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 124));
}

uint64_t sub_24D4E6608(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  uint64_t v6 = v2 + *(int *)(result + 124);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_24D4E6650())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6698()
{
  type metadata accessor for ItemMetadata();

  return swift_bridgeObjectRetain();
}

uint64_t sub_24D4E66CC(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ItemMetadata() + 128);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_24D4E670C())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6754()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ItemMetadata() + 132);
  uint64_t v2 = *(void *)v1;
  sub_24D416048(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t sub_24D4E6798(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for ItemMetadata() + 132);
  uint64_t result = sub_24D416034(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_24D4E67E0())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6828()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 136));
}

uint64_t sub_24D4E6854(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  uint64_t v6 = v2 + *(int *)(result + 136);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_24D4E689C())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E68E4()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 140));
}

uint64_t sub_24D4E6908(char a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  *(unsigned char *)(v1 + *(int *)(result + 140)) = a1;
  return result;
}

uint64_t (*sub_24D4E6938())(void)
{
  return nullsub_1;
}

unint64_t sub_24D4E6980()
{
  uint64_t v1 = (unsigned int *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 144));
  return *v1 | ((unint64_t)*((unsigned __int8 *)v1 + 4) << 32);
}

uint64_t sub_24D4E69C0(uint64_t a1)
{
  uint64_t result = type metadata accessor for ItemMetadata();
  uint64_t v4 = v1 + *(int *)(result + 144);
  *(_DWORD *)uint64_t v4 = a1;
  *(unsigned char *)(v4 + 4) = BYTE4(a1) & 1;
  return result;
}

uint64_t (*sub_24D4E69FC())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6A44()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 148));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24D4E6A84(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ItemMetadata() + 148));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_24D4E6ACC())(void)
{
  return nullsub_1;
}

uint64_t sub_24D4E6B44@<X0>(unint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, uint64_t a14, unint64_t a15, unsigned __int8 a16, unsigned __int8 a17, unsigned __int8 a18, unsigned __int8 a19, unsigned __int8 a20,uint64_t a21,unint64_t a22,unsigned __int8 a23)
{
  uint64_t v38 = a8;
  int v49 = a7;
  int v50 = a6;
  int v51 = a5;
  unsigned int v52 = a2;
  uint64_t v48 = a9;
  int v46 = a17;
  int v47 = a16;
  int v43 = a19;
  int v44 = a18;
  int v39 = a23;
  uint64_t v40 = a21;
  uint64_t v36 = a4;
  unint64_t v37 = a15;
  uint64_t v45 = a11;
  int v41 = a20;
  int v42 = a12 & 1;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  uint64_t v28 = (char *)&v36 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  int v31 = (char *)&v36 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v36 - v32;
  sub_24D415FD0(a3, (uint64_t)&v36 - v32, (uint64_t *)&unk_26B196B10);
  sub_24D415FD0(v36, (uint64_t)v31, (uint64_t *)&unk_26B196B10);
  sub_24D415FD0(v38, (uint64_t)v28, (uint64_t *)&unk_26B196B10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v34 = v37;
  sub_24D416048(a14, v37);
  swift_bridgeObjectRetain();
  char v53 = 1;
  return sub_24D41571C(1, 0, 0, 1, a1 | ((HIDWORD(a1) & 1) << 32), v52, (uint64_t)v33, (uint64_t)v31, v48, v51, v50, v49, (uint64_t)v28, a10, v45, v42, a13, a14, v34,
           0,
           0,
           v47,
           v46,
           v44,
           v43,
           0,
           v41,
           0,
           2,
           0,
           0,
           0,
           1u,
           0x100000000uLL,
           0,
           v40,
           a22,
           0,
           0,
           v39);
}

uint64_t sub_24D4E6DB0@<X0>(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int v26 = a6;
  int v27 = a5;
  unsigned int v28 = a2;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = &v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  unint64_t v21 = &v25[-v20];
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = &v25[-v22];
  sub_24D415FD0(a3, (uint64_t)&v25[-v22], (uint64_t *)&unk_26B196B10);
  sub_24D415FD0(a4, (uint64_t)v21, (uint64_t *)&unk_26B196B10);
  sub_24D415FD0(a7, (uint64_t)v18, (uint64_t *)&unk_26B196B10);
  swift_bridgeObjectRetain();
  char v30 = 1;
  char v29 = 1;
  return sub_24D41571C(2, a1, 0, 1, 0x100000000, v28, (uint64_t)v23, (uint64_t)v21, a9, v27, v26, 0, (uint64_t)v18, 0, 0, 1u, a8, 0, 0xF000000000000000,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           0,
           2,
           2,
           0,
           0,
           0,
           1u,
           0x100000000uLL,
           0,
           0,
           0,
           0,
           0,
           0);
}

const char *sub_24D4E6F80()
{
  return "silaSCAMlibfssync";
}

uint64_t sub_24D4E6F8C()
{
  return 0x4D414353616C6973;
}

uint64_t sub_24D4E6FA0()
{
  uint64_t v1 = (uint64_t)v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  unint64_t v37 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  unint64_t v12 = (char *)&v37 - v11;
  int v13 = *v0;
  switch(*v0)
  {
    case 1u:
      uint64_t v14 = 7498084;
      goto LABEL_7;
    case 2u:
      uint64_t v14 = 7040620;
      goto LABEL_7;
    case 3u:
      uint64_t v42 = 0x7361696C61;
      unint64_t v15 = 0xE500000000000000;
      goto LABEL_9;
    default:
      uint64_t v14 = 6516580;
      if (v0[v7[27]]) {
        uint64_t v14 = 6777712;
      }
LABEL_7:
      uint64_t v42 = v14;
      unint64_t v15 = 0xE300000000000000;
LABEL_9:
      unint64_t v43 = v15;
      if (v0[v7[20]] == 1)
      {
        sub_24DCC9968();
        if (v0[v7[22]])
        {
          v41[0] = 58;
          v41[1] = 0xE100000000000000;
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
        }
      }
      if (v13 != 1)
      {
        v41[0] = 981103392;
        v41[1] = 0xE400000000000000;
        uint64_t v40 = *(void *)&v0[v7[25]];
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      if ((v0[8] & 1) == 0)
      {
        int v16 = *((_DWORD *)v0 + 1);
        strcpy((char *)v41, " child:");
        v41[1] = 0xE700000000000000;
        LODWORD(v40) = v16;
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      int v39 = v10;
      uint64_t v17 = &v0[v7[36]];
      if ((v17[4] & 1) == 0)
      {
        unsigned int v18 = *(_DWORD *)v17;
        if (v18 >= 2)
        {
          strcpy((char *)v41, " links:");
          v41[1] = 0xE700000000000000;
          LODWORD(v40) = v18;
          sub_24DCCAD78();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
        }
      }
      sub_24DCC9968();
      sub_24DCC9968();
      sub_24DCC9968();
      sub_24DCC9968();
      if (v0[v7[10]] == 1) {
        sub_24DCC9968();
      }
      if (v0[v7[13]] == 1) {
        sub_24DCC9968();
      }
      if (v0[v7[9]] == 1) {
        sub_24DCC9968();
      }
      if (v0[v7[28]] == 1) {
        sub_24DCC9968();
      }
      if (v0[v7[15]] == 1) {
        sub_24DCC9968();
      }
      if (v0[v7[18]] == 1) {
        sub_24DCC9968();
      }
      if (v0[v7[21]])
      {
        v41[0] = 15397;
        v41[1] = 0xE200000000000000;
        uint64_t v40 = *(void *)&v0[v7[19]];
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      int v19 = v0[v7[11]];
      sub_24D409F80(v1, (uint64_t)v12);
      if (v19 == 1)
      {
        sub_24D409FE4((uint64_t)v12);
      }
      else
      {
        int v20 = v12[v7[12]];
        sub_24D409FE4((uint64_t)v12);
        if (v20 != 1) {
          goto LABEL_37;
        }
      }
      sub_24DCC9968();
      sub_24DCC9968();
LABEL_37:
      if (*(void *)(v1 + v7[14] + 8))
      {
        strcpy((char *)v41, " orig-name:\"");
        BYTE5(v41[1]) = 0;
        HIWORD(v41[1]) = -5120;
        unint64_t v21 = (void *)sub_24DCC97B8();
        id v22 = objc_msgSend(v21, sel_fp_obfuscatedFilename);

        sub_24DCC97E8();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      uint64_t v23 = *(void *)(v1 + v7[30]);
      if (v23)
      {
        v41[0] = 3830816;
        v41[1] = 0xE300000000000000;
        sub_24D9864FC(v23);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      v41[0] = 0;
      v41[1] = 0xE000000000000000;
      sub_24DCC9968();
      sub_24DCC8C88();
      sub_24DCC9E58();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      v41[0] = 0;
      v41[1] = 0xE000000000000000;
      sub_24DCC9968();
      sub_24DCC8C88();
      sub_24DCC9E58();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24D415FD0(v1 + v7[29], (uint64_t)v4, (uint64_t *)&unk_26B196B10);
      uint64_t v24 = v38;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v38) == 1)
      {
        sub_24D415F74((uint64_t)v4, (uint64_t *)&unk_26B196B10);
      }
      else
      {
        uint64_t v25 = v37;
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v37, v4, v24);
        v41[0] = 0;
        v41[1] = 0xE000000000000000;
        sub_24DCC9968();
        sub_24DCC8C88();
        sub_24DCC9E58();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v5 + 8))(v25, v24);
      }
      uint64_t v26 = (uint64_t)v39;
      uint64_t v27 = v1 + v7[31];
      if ((*(unsigned char *)(v27 + 8) & 1) == 0)
      {
        uint64_t v28 = *(void *)v27;
        v41[0] = 980837920;
        v41[1] = 0xE400000000000000;
        uint64_t v40 = v28;
        sub_24DCCAD78();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      uint64_t v29 = *(void *)(v1 + v7[32]);
      if (v29)
      {
        sub_24DCC9968();
        v41[0] = sub_24D4E4DE4(v29);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
        sub_24D43E3F0();
        sub_24DCC9708();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v1 + v7[33] + 8) >> 60 != 15) {
        sub_24DCC9968();
      }
      int v30 = *(unsigned __int8 *)(v1 + v7[16]);
      sub_24D409F80(v1, v26);
      if (v30 == 1)
      {
        sub_24D409FE4(v26);
      }
      else
      {
        char v31 = *(unsigned char *)(v26 + v7[17]);
        sub_24D409FE4(v26);
        if ((v31 & 1) == 0) {
          goto LABEL_54;
        }
      }
      strcpy((char *)v41, " ignore:");
      BYTE1(v41[1]) = 0;
      WORD1(v41[1]) = 0;
      HIDWORD(v41[1]) = -402653184;
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
LABEL_54:
      uint64_t v32 = v1 + v7[34];
      if ((*(unsigned char *)(v32 + 8) & 1) == 0)
      {
        uint64_t v33 = *(void *)v32;
        v41[0] = 0;
        v41[1] = 0xE000000000000000;
        sub_24DCC9968();
        uint64_t v40 = v33;
        type metadata accessor for NSFileProviderTypeAndCreator(0);
        sub_24DCCA948();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v1 + v7[37] + 8))
      {
        strcpy((char *)v41, " collabID:\"");
        HIDWORD(v41[1]) = -352321536;
        unint64_t v34 = (void *)sub_24DCC97B8();
        id v35 = objc_msgSend(v34, sel_fp_obfuscatedFilename);

        sub_24DCC97E8();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
      }
      if (*(unsigned char *)(v1 + v7[23]) == 1) {
        sub_24DCC9968();
      }
      if (*(unsigned char *)(v1 + v7[24]) == 1) {
        sub_24DCC9968();
      }
      return v42;
  }
}

int *sub_24D4E7C7C(int *result, uint64_t a2)
{
  if (result)
  {
    unint64_t v4 = (unint64_t)result;
    for (char i = __clz(__rbit64((unint64_t)result)); ; char i = __clz(__rbit64(v4)))
    {
      uint64_t v6 = 1 << i;
      if ((v6 & v4) != 0) {
        uint64_t v7 = ~v6;
      }
      else {
        uint64_t v7 = -1;
      }
      if (v6 < 0x20000)
      {
        if (v6 <= 255)
        {
          switch(v6)
          {
            case 1:
              uint64_t v9 = *(int *)(type metadata accessor for ItemMetadata() + 56);
              goto LABEL_61;
            case 2:
              goto LABEL_87;
            case 3:
            case 5:
            case 6:
            case 7:
            case 9:
            case 10:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 27:
            case 28:
            case 29:
            case 30:
            case 31:
            case 33:
            case 34:
            case 35:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 43:
            case 44:
            case 45:
            case 46:
            case 47:
            case 48:
            case 49:
            case 50:
            case 51:
            case 52:
            case 53:
            case 54:
            case 55:
            case 56:
            case 57:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
              goto LABEL_94;
            case 4:
              __int16 v25 = *(_WORD *)(v2 + 10);
              if ((v25 & 0x38) != 0) {
                __int16 v26 = 504;
              }
              else {
                __int16 v26 = 448;
              }
              if ((v25 & 7) != 0) {
                __int16 v27 = v26 | 7;
              }
              else {
                __int16 v27 = v26;
              }
              *(_WORD *)(v2 + 10) = v27 & *(_WORD *)(a2 + 10);
              goto LABEL_87;
            case 8:
              uint64_t result = (int *)type metadata accessor for ItemMetadata();
              *(void *)(v2 + result[25]) = *(void *)(a2 + result[25]);
              *(void *)(v2 + result[26]) = *(void *)(a2 + result[26]);
              goto LABEL_54;
            case 16:
              uint64_t result = (int *)type metadata accessor for ItemMetadata();
              *(void *)(v2 + result[25]) = *(void *)(a2 + result[25]);
              *(void *)(v2 + result[26]) = *(void *)(a2 + result[26]);
              *(unsigned char *)(v2 + result[20]) = *(unsigned char *)(a2 + result[20]);
              *(unsigned char *)(v2 + result[27]) = *(unsigned char *)(a2 + result[27]);
              uint64_t v8 = result[21];
              goto LABEL_85;
            case 32:
              uint64_t v31 = type metadata accessor for ItemMetadata();
              uint64_t result = (int *)sub_24D416068(a2 + *(int *)(v31 + 116), v2 + *(int *)(v31 + 116));
              goto LABEL_87;
            case 64:
              uint64_t v10 = *(int *)(type metadata accessor for ItemMetadata() + 120);
              goto LABEL_91;
            default:
              if (v6 != 128) {
                goto LABEL_94;
              }
              uint64_t result = (int *)type metadata accessor for ItemMetadata();
              uint64_t v17 = result[31];
              break;
          }
LABEL_69:
          uint64_t v22 = *(void *)(a2 + v17);
          char v23 = *(unsigned char *)(a2 + v17 + 8);
          uint64_t v24 = v2 + v17;
          *(void *)uint64_t v24 = v22;
          *(unsigned char *)(v24 + 8) = v23;
          goto LABEL_87;
        }
        if (v6 <= 4095)
        {
          if (v6 > 1023)
          {
            if (v6 == 1024)
            {
              uint64_t v15 = *(int *)(type metadata accessor for ItemMetadata() + 28);
            }
            else
            {
              if (v6 != 2048) {
                goto LABEL_94;
              }
              uint64_t v15 = *(int *)(type metadata accessor for ItemMetadata() + 32);
            }
            uint64_t v28 = a2 + v15;
            uint64_t v29 = v2 + v15;
            uint64_t v30 = sub_24DCC8CE8();
            uint64_t result = (int *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 24))(v29, v28, v30);
          }
          else
          {
            if (v6 != 256)
            {
              if (v6 != 512) {
                goto LABEL_94;
              }
              uint64_t result = (int *)type metadata accessor for ItemMetadata();
              uint64_t v8 = result[9];
              goto LABEL_85;
            }
            uint64_t v10 = *(int *)(type metadata accessor for ItemMetadata() + 128);
LABEL_91:
            uint64_t v32 = *(void *)(a2 + v10);
            swift_bridgeObjectRetain();
            uint64_t result = (int *)swift_bridgeObjectRelease();
            *(void *)(v2 + v10) = v32;
          }
        }
        else
        {
          if (v6 < 0x4000)
          {
            if (v6 == 4096)
            {
              uint64_t result = (int *)type metadata accessor for ItemMetadata();
              uint64_t v8 = result[10];
            }
            else
            {
              if (v6 != 0x2000) {
                goto LABEL_94;
              }
              uint64_t result = (int *)type metadata accessor for ItemMetadata();
              uint64_t v8 = result[13];
            }
            goto LABEL_85;
          }
          if (v6 == 0x4000)
          {
            char v16 = *(unsigned char *)(a2 + 8);
            *(_DWORD *)(v2 + 4) = *(_DWORD *)(a2 + 4);
            *(unsigned char *)(v2 + 8) = v16;
            goto LABEL_87;
          }
          if (v6 == 0x8000)
          {
            uint64_t result = (int *)type metadata accessor for ItemMetadata();
            uint64_t v8 = result[35];
            goto LABEL_85;
          }
          if (v6 != 0x10000) {
            goto LABEL_94;
          }
          uint64_t result = (int *)type metadata accessor for ItemMetadata();
          uint64_t v8 = result[21];
          if (*(unsigned char *)(a2 + result[12]) == 1)
          {
            char v21 = 5;
LABEL_86:
            *(unsigned char *)(v2 + v8) = v21;
            goto LABEL_87;
          }
          *(unsigned char *)(v2 + v8) = *(unsigned char *)(a2 + v8);
          *(void *)(v2 + result[19]) = *(void *)(a2 + result[19]);
        }
      }
      else if (v6 > 0x1FFFFFFFFFFFLL)
      {
        if (v6 > 0x3FFFFFFFFFFFFLL)
        {
          if (v6 <= 0x1FFFFFFFFFFFFFLL)
          {
            if (v6 == 0x4000000000000) {
              goto LABEL_87;
            }
            if (v6 != 0x10000000000000) {
              goto LABEL_94;
            }
            uint64_t result = (int *)type metadata accessor for ItemMetadata();
            uint64_t v8 = result[18];
          }
          else
          {
            switch(v6)
            {
              case 0x20000000000000:
                uint64_t result = (int *)type metadata accessor for ItemMetadata();
                uint64_t v8 = result[23];
                break;
              case 0x40000000000000:
                uint64_t result = (int *)type metadata accessor for ItemMetadata();
                uint64_t v8 = result[24];
                break;
              case 0x100000000000000:
                uint64_t result = (int *)type metadata accessor for ItemMetadata();
                uint64_t v8 = result[22];
                break;
              default:
                goto LABEL_94;
            }
          }
          goto LABEL_85;
        }
        if (v6 <= 0x7FFFFFFFFFFFLL)
        {
          if (v6 != 0x200000000000)
          {
            if (v6 != 0x400000000000) {
              goto LABEL_94;
            }
            uint64_t result = (int *)type metadata accessor for ItemMetadata();
            uint64_t v17 = result[34];
            goto LABEL_69;
          }
          uint64_t result = (int *)type metadata accessor for ItemMetadata();
LABEL_54:
          uint64_t v8 = result[27];
          goto LABEL_85;
        }
        if (v6 == 0x800000000000)
        {
          uint64_t result = (int *)type metadata accessor for ItemMetadata();
          uint64_t v11 = result[36];
          int v12 = *(_DWORD *)(a2 + v11);
          char v13 = *(unsigned char *)(a2 + v11 + 4);
          uint64_t v14 = v2 + v11;
          *(_DWORD *)uint64_t v14 = v12;
          *(unsigned char *)(v14 + 4) = v13;
        }
        else
        {
          if (v6 != 0x1000000000000) {
            goto LABEL_94;
          }
          uint64_t v9 = *(int *)(type metadata accessor for ItemMetadata() + 148);
LABEL_61:
          uint64_t v19 = *(void *)(a2 + v9);
          uint64_t v18 = *(void *)(a2 + v9 + 8);
          int v20 = (void *)(v2 + v9);
          swift_bridgeObjectRetain();
          uint64_t result = (int *)swift_bridgeObjectRelease();
          *int v20 = v19;
          v20[1] = v18;
        }
      }
      else if (v6 <= 0x7FFFFFF)
      {
        if (v6 <= 0xFFFFFF)
        {
          if (v6 == 0x20000)
          {
            uint64_t result = (int *)type metadata accessor for ItemMetadata();
            uint64_t v8 = result[11];
          }
          else
          {
            if (v6 != 0x800000) {
              goto LABEL_94;
            }
            uint64_t result = (int *)type metadata accessor for ItemMetadata();
            uint64_t v8 = result[16];
          }
          goto LABEL_85;
        }
        if (v6 != 0x1000000 && v6 != 0x4000000)
        {
LABEL_94:
          sub_24DCCA978();
          __break(1u);
          JUMPOUT(0x24D4E8238);
        }
      }
      else if (v6 <= 0x1FFFFFFFFFFLL)
      {
        if (v6 != 0x8000000)
        {
          if (v6 != 0x10000000000) {
            goto LABEL_94;
          }
          *(unsigned char *)uint64_t v2 = *(unsigned char *)a2;
        }
      }
      else if (v6 != 0x20000000000 && v6 != 0x80000000000)
      {
        if (v6 != 0x100000000000) {
          goto LABEL_94;
        }
        uint64_t result = (int *)type metadata accessor for ItemMetadata();
        uint64_t v8 = result[15];
LABEL_85:
        char v21 = *(unsigned char *)(a2 + v8);
        goto LABEL_86;
      }
LABEL_87:
      v4 &= v7;
      if (!v4) {
        return result;
      }
    }
  }
  return result;
}

uint64_t sub_24D4E8338(char *a1, unint64_t a2, char a3)
{
  unint64_t v4 = v3;
  uint64_t v173 = sub_24DCCADA8();
  uint64_t v171 = *(void *)(v173 - 8);
  MEMORY[0x270FA5388](v173);
  unsigned int v169 = (char *)&v164 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_24DCC8CE8();
  uint64_t v170 = *(void *)(v172 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v172);
  unsigned int v168 = (char *)&v164 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v167 = (char *)&v164 - v11;
  int v12 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unsigned int v178 = (char *)&v164 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unsigned int v177 = (char *)&v164 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v190 = (uint64_t)&v164 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  int v184 = (char *)&v164 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v183 = (char *)&v164 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unsigned int v182 = (char *)&v164 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v180 = (uint64_t)&v164 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v181 = (uint64_t)&v164 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v165 = (uint64_t)&v164 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v175 = (char *)&v164 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v189 = (uint64_t)&v164 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v188 = (uint64_t)&v164 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v187 = (uint64_t)&v164 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v186 = (uint64_t)&v164 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  unint64_t v43 = (char *)&v164 - v42;
  uint64_t v44 = MEMORY[0x270FA5388](v41);
  int v46 = (char *)&v164 - v45;
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  int v49 = (char *)&v164 - v48;
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  unsigned int v52 = (char *)&v164 - v51;
  uint64_t v53 = (a2 >> 11) & 1;
  if (a3) {
    LODWORD(v53) = 0;
  }
  int v179 = v53;
  BOOL v54 = (a3 & 1) == 0 && (a2 & 0x400) != 0;
  if ((v4[*(int *)(v50 + 36)] ^ a1[*(int *)(v50 + 36)])) {
    unint64_t v55 = ((unint64_t)(qword_24DCD46C8[*v4] != qword_24DCD46C8[*a1]) << 40) | 0x200;
  }
  else {
    unint64_t v55 = (unint64_t)(qword_24DCD46C8[*v4] != qword_24DCD46C8[*a1]) << 40;
  }
  int v56 = v4[*(int *)(v50 + 84)];
  sub_24D409F80((uint64_t)v4, (uint64_t)&v164 - v51);
  if (v56) {
    LOBYTE(v56) = v52[v12[12]] ^ 1;
  }
  sub_24D409FE4((uint64_t)v52);
  int v57 = a1[v12[21]];
  sub_24D409F80((uint64_t)a1, (uint64_t)v49);
  if (v57) {
    LOBYTE(v57) = v49[v12[12]] ^ 1;
  }
  sub_24D409FE4((uint64_t)v49);
  sub_24D409F80((uint64_t)v4, (uint64_t)v46);
  sub_24D409F80((uint64_t)a1, (uint64_t)v43);
  if ((v56 & 1) == (v57 & 1))
  {
    int v60 = v46[v12[21]];
    sub_24D409FE4((uint64_t)v46);
    int v61 = v43[v12[21]];
    sub_24D409FE4((uint64_t)v43);
    BOOL v62 = v60 == v61;
    uint64_t v58 = v186;
    uint64_t v59 = v187;
    if (v62) {
      goto LABEL_17;
    }
  }
  else
  {
    sub_24D409FE4((uint64_t)v43);
    sub_24D409FE4((uint64_t)v46);
    uint64_t v58 = v186;
    uint64_t v59 = v187;
  }
  v55 |= 0x10000uLL;
LABEL_17:
  if (((*((_WORD *)a1 + 5) ^ *((_WORD *)v4 + 5)) & 0x1C0) != 0) {
    uint64_t v63 = v55 | 4;
  }
  else {
    uint64_t v63 = v55;
  }
  if ((v4[v12[10]] ^ a1[v12[10]])) {
    v63 |= 0x1000uLL;
  }
  uint64_t v64 = (uint64_t)v4;
  if ((v4[v12[13]] ^ a1[v12[13]])) {
    uint64_t v65 = v63 | 0x2000;
  }
  else {
    uint64_t v65 = v63;
  }
  int v176 = (unsigned __int8 *)v64;
  sub_24D409F80(v64, v58);
  sub_24D409F80((uint64_t)a1, v59);
  unsigned int v185 = v12;
  if (v54)
  {
    uint64_t v174 = v65;
    sub_24D409FE4(v59);
    sub_24D409FE4(v58);
  }
  else
  {
    uint64_t v174 = v59 + v12[7];
    uint64_t v66 = *MEMORY[0x263F8E1F8];
    uint64_t v67 = v171;
    uint64_t v68 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 104);
    uint64_t v166 = a1;
    uint64_t v69 = (uint64_t)v169;
    uint64_t v70 = v173;
    v68(v169, v66, v173);
    unint64_t v71 = v167;
    sub_24DC0EE4C(v69);
    uint64_t v72 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v72(v69, v70);
    v68((char *)v69, v66, v70);
    uint64_t v73 = v168;
    sub_24DC0EE4C(v69);
    uint64_t v74 = v69;
    a1 = v166;
    v72(v74, v70);
    uint64_t v75 = sub_24DCC8CC8();
    uint64_t v76 = *(void (**)(char *, uint64_t))(v170 + 8);
    uint64_t v77 = v172;
    v76(v73, v172);
    v76(v71, v77);
    sub_24D409FE4(v187);
    sub_24D409FE4(v186);
    if (v75) {
      v65 |= 0x400uLL;
    }
    uint64_t v174 = v65;
  }
  uint64_t v78 = (uint64_t)v183;
  uint64_t v79 = (uint64_t)v184;
  uint64_t v81 = v181;
  uint64_t v80 = (uint64_t)v182;
  uint64_t v82 = v180;
  uint64_t v84 = v188;
  uint64_t v83 = v189;
  unint64_t v86 = (unsigned __int8 *)v175;
  uint64_t v85 = v176;
  sub_24D409F80((uint64_t)v176, v188);
  sub_24D409F80((uint64_t)a1, v83);
  if (v179)
  {
    sub_24D409FE4(v83);
    uint64_t v87 = v84;
LABEL_38:
    sub_24D409FE4(v87);
    uint64_t v95 = v174;
    goto LABEL_41;
  }
  int v88 = fpfs_supports_parent_mtime_iopolicy();
  sub_24D409F80(v84, (uint64_t)v86);
  if (v88)
  {
    sub_24D409FE4((uint64_t)v86);
    sub_24D409F80(v84, v81);
    sub_24D409F80(v189, v82);
    goto LABEL_39;
  }
  int v89 = *v86;
  uint64_t v90 = (uint64_t)v86;
  uint64_t v91 = v165;
  sub_24D4EFE74(v90, v165);
  if (v89 == 1)
  {
    sub_24D409FE4(v91);
    uint64_t v92 = v188;
    sub_24D409F80(v188, v81);
    uint64_t v93 = v189;
    sub_24D409F80(v189, v82);
LABEL_37:
    sub_24D409FE4(v82);
    sub_24D409FE4(v81);
    sub_24D409FE4(v93);
    uint64_t v87 = v92;
    goto LABEL_38;
  }
  char v94 = *(unsigned char *)(v91 + v185[27]);
  sub_24D409FE4(v91);
  uint64_t v92 = v188;
  sub_24D409F80(v188, v81);
  uint64_t v93 = v189;
  sub_24D409F80(v189, v82);
  if (v94) {
    goto LABEL_37;
  }
LABEL_39:
  uint64_t v187 = v82 + v185[8];
  uint64_t v96 = *MEMORY[0x263F8E1F8];
  uint64_t v97 = v171;
  uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t))(v171 + 104);
  uint64_t v166 = a1;
  uint64_t v99 = (uint64_t)v169;
  uint64_t v100 = v173;
  v98(v169, v96, v173);
  uint64_t v101 = v167;
  sub_24DC0EE4C(v99);
  uint64_t v102 = *(void (**)(uint64_t, uint64_t))(v97 + 8);
  v102(v99, v100);
  uint64_t v103 = v96;
  uint64_t v80 = (uint64_t)v182;
  v98((char *)v99, v103, v100);
  uint64_t v79 = (uint64_t)v184;
  uint64_t v104 = v168;
  sub_24DC0EE4C(v99);
  uint64_t v105 = v99;
  a1 = v166;
  v102(v105, v100);
  uint64_t v106 = sub_24DCC8CC8();
  unsigned int v107 = *(void (**)(char *, uint64_t))(v170 + 8);
  unint64_t v108 = v104;
  uint64_t v109 = v172;
  v107(v108, v172);
  v107(v101, v109);
  uint64_t v78 = (uint64_t)v183;
  sub_24D409FE4(v180);
  sub_24D409FE4(v181);
  sub_24D409FE4(v189);
  sub_24D409FE4(v188);
  uint64_t v95 = v174;
  if (v106) {
    uint64_t v95 = v174 | 0x800;
  }
LABEL_41:
  int v110 = *v85;
  sub_24D409F80((uint64_t)v85, v80);
  if (v110 == 1)
  {
    sub_24D409FE4(v80);
    sub_24D409F80((uint64_t)v85, v78);
    sub_24D409F80((uint64_t)a1, v79);
    uint64_t v111 = v185;
  }
  else
  {
    uint64_t v111 = v185;
    int v112 = *(unsigned __int8 *)(v80 + v185[27]);
    sub_24D409FE4(v80);
    sub_24D409F80((uint64_t)v85, v78);
    sub_24D409F80((uint64_t)a1, v79);
    if (v112 != 1)
    {
      sub_24D409FE4(v79);
      sub_24D409FE4(v78);
      goto LABEL_53;
    }
  }
  int v113 = *(_DWORD *)(v78 + 4);
  char v114 = *(unsigned char *)(v78 + 8);
  sub_24D409FE4(v78);
  int v115 = *(_DWORD *)(v79 + 4);
  char v116 = *(unsigned char *)(v79 + 8);
  sub_24D409FE4(v79);
  if (v114)
  {
    if (v116) {
      goto LABEL_53;
    }
LABEL_51:
    v95 |= 0x4000uLL;
    goto LABEL_53;
  }
  if (v113 == v115) {
    char v117 = v116;
  }
  else {
    char v117 = 1;
  }
  if (v117) {
    goto LABEL_51;
  }
LABEL_53:
  if (sub_24DC0EA70((uint64_t)&a1[v111[29]])) {
    uint64_t v118 = v95;
  }
  else {
    uint64_t v118 = v95 | 0x20;
  }
  uint64_t v119 = v111[30];
  uint64_t v120 = *(void *)&a1[v119];
  if (!*(void *)&v85[v119])
  {
    if (!v120) {
      goto LABEL_62;
    }
    goto LABEL_61;
  }
  if (!v120
    || (swift_bridgeObjectRetain(),
        uint64_t v121 = swift_bridgeObjectRetain(),
        char v122 = sub_24D9840EC(v121, v120),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v122 & 1) == 0))
  {
LABEL_61:
    v118 |= 0x40uLL;
  }
LABEL_62:
  uint64_t v123 = v111[31];
  int v124 = &v85[v123];
  unsigned __int8 v125 = v85[v123 + 8];
  unsigned int v126 = &a1[v123];
  char v127 = a1[v123 + 8];
  if (v125)
  {
    if (v127) {
      goto LABEL_69;
    }
LABEL_68:
    v118 |= 0x80uLL;
    goto LABEL_69;
  }
  if (*(void *)v124 != *(void *)v126) {
    char v127 = 1;
  }
  if (v127) {
    goto LABEL_68;
  }
LABEL_69:
  if ((v85[v111[11]] ^ a1[v111[11]])) {
    uint64_t v128 = v118 | 0x20000;
  }
  else {
    uint64_t v128 = v118;
  }
  if ((v85[v111[20]] ^ a1[v111[20]])) {
    v128 |= 0x10uLL;
  }
  if ((v85[v111[27]] ^ a1[v111[27]])) {
    v128 |= 0x200000000000uLL;
  }
  if ((v85[v111[15]] ^ a1[v111[15]])) {
    v128 |= 0x100000000000uLL;
  }
  if ((v85[v111[16]] ^ a1[v111[16]])) {
    uint64_t v129 = v128 | 0x800000;
  }
  else {
    uint64_t v129 = v128;
  }
  uint64_t v130 = v111[32];
  unint64_t v193 = *(void *)&v85[v130];
  if (v193)
  {
    swift_bridgeObjectRetain();
    sub_24DC732E4(0xD000000000000015, 0x800000024DCFC310, &v192);
    sub_24D416034(v192, *((unint64_t *)&v192 + 1));
    uint64_t v130 = v111[32];
  }
  unint64_t v191 = *(void *)&a1[v130];
  if (v191)
  {
    swift_bridgeObjectRetain();
    sub_24DC732E4(0xD000000000000015, 0x800000024DCFC310, &v192);
    sub_24D416034(v192, *((unint64_t *)&v192 + 1));
  }
  if (v193)
  {
    unint64_t v131 = v193;
    unint64_t v132 = v191;
    if (v191)
    {
LABEL_87:
      swift_bridgeObjectRetain();
      unint64_t v133 = v132;
      goto LABEL_90;
    }
  }
  else
  {
    unint64_t v131 = sub_24D428F94(MEMORY[0x263F8EE78]);
    unint64_t v132 = v191;
    if (v191) {
      goto LABEL_87;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v133 = sub_24D428F94(MEMORY[0x263F8EE78]);
LABEL_90:
  swift_bridgeObjectRetain();
  char v134 = sub_24D4EB9F0(v131, v133);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v134) {
    uint64_t v135 = v129;
  }
  else {
    uint64_t v135 = v129 | 0x100;
  }
  uint64_t v136 = v111[34];
  unsigned int v137 = &v85[v136];
  unsigned __int8 v138 = v85[v136 + 8];
  unint64_t v139 = &a1[v136];
  char v140 = a1[v136 + 8];
  if (v138)
  {
    uint64_t v142 = (uint64_t)v177;
    uint64_t v141 = (uint64_t)v178;
    if (v140) {
      goto LABEL_100;
    }
LABEL_99:
    v135 |= 0x400000000000uLL;
    goto LABEL_100;
  }
  if (*(void *)v137 != *(void *)v139) {
    char v140 = 1;
  }
  uint64_t v142 = (uint64_t)v177;
  uint64_t v141 = (uint64_t)v178;
  if (v140) {
    goto LABEL_99;
  }
LABEL_100:
  unsigned __int8 v143 = v85[v111[36] + 4];
  sub_24D409F80((uint64_t)a1, v190);
  if (v143)
  {
    sub_24D409FE4(v190);
    sub_24D409F80((uint64_t)v85, v142);
    sub_24D409F80((uint64_t)a1, v141);
LABEL_103:
    sub_24D409FE4(v141);
    sub_24D409FE4(v142);
    goto LABEL_108;
  }
  char v144 = *(unsigned char *)(v190 + v111[36] + 4);
  sub_24D409FE4(v190);
  sub_24D409F80((uint64_t)v85, v142);
  sub_24D409F80((uint64_t)a1, v141);
  if (v144) {
    goto LABEL_103;
  }
  uint64_t v145 = v142 + v111[36];
  int v146 = *(_DWORD *)v145;
  char v147 = *(unsigned char *)(v145 + 4);
  sub_24D409FE4(v142);
  uint64_t v148 = v141 + v111[36];
  uint64_t v149 = v141;
  int v150 = *(_DWORD *)v148;
  int v151 = *(unsigned __int8 *)(v148 + 4);
  sub_24D409FE4(v149);
  if ((v147 & 1) == 0) {
    int v151 = (v146 == v150) & ~v151;
  }
  if (!v151) {
    v135 |= 0x800000000000uLL;
  }
LABEL_108:
  uint64_t v152 = v111[37];
  unsigned int v153 = &v85[v152];
  uint64_t v154 = *(void *)&v85[v152 + 8];
  int v155 = &a1[v152];
  uint64_t v156 = *((void *)v155 + 1);
  if (!v154)
  {
    if (!v156) {
      goto LABEL_116;
    }
    goto LABEL_115;
  }
  if (!v156 || (*(void *)v153 != *(void *)v155 || v154 != v156) && (sub_24DCCAE28() & 1) == 0) {
LABEL_115:
  }
    v135 |= 0x1000000000000uLL;
LABEL_116:
  if ((v85[v111[18]] ^ a1[v111[18]])) {
    uint64_t v157 = v135 | 0x10000000000000;
  }
  else {
    uint64_t v157 = v135;
  }
  uint64_t v158 = v111[22];
  if ((v85[v111[23]] ^ a1[v111[23]])) {
    v157 |= 0x20000000000000uLL;
  }
  if ((v85[v111[24]] ^ a1[v111[24]])) {
    uint64_t v159 = v157 | 0x40000000000000;
  }
  else {
    uint64_t v159 = v157;
  }
  int v160 = v85[v158];
  int v161 = a1[v158];
  swift_bridgeObjectRelease();
  if (v160 == v161) {
    uint64_t v162 = v159;
  }
  else {
    uint64_t v162 = v159 | 0x100000000000000;
  }
  swift_bridgeObjectRelease();
  return v162;
}

int *sub_24D4E9214@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_24D409F80(v3, a3);
  return sub_24D4E7C7C(a1, a2);
}

BOOL sub_24D4E9260(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24DCCADA8();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v45 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v46 = v6;
  uint64_t v47 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  int v12 = (char *)&v42 - v11;
  uint64_t v13 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v42 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v42 - v20;
  uint64_t v22 = qword_24DCD46C8[*v1];
  uint64_t v23 = qword_24DCD46C8[*a1];
  sub_24D409F80((uint64_t)v2, (uint64_t)&v42 - v20);
  sub_24D409F80((uint64_t)a1, (uint64_t)v19);
  if (v22 != v23)
  {
    sub_24D409FE4((uint64_t)v19);
    sub_24D409FE4((uint64_t)v21);
    return 0;
  }
  uint64_t v24 = (unsigned __int8 *)v16;
  unint64_t v43 = v12;
  uint64_t v44 = v10;
  uint64_t v26 = v48;
  uint64_t v25 = v49;
  int v27 = v21[v13[27]];
  sub_24D409FE4((uint64_t)v21);
  int v28 = v19[v13[27]];
  sub_24D409FE4((uint64_t)v19);
  if (v27 != v28 || *v2 != 1 && (v2[v13[27]] & 1) == 0 && *(void *)&v2[v13[25]] != *(void *)&a1[v13[25]]) {
    return 0;
  }
  int v30 = fpfs_supports_parent_mtime_iopolicy();
  sub_24D409F80((uint64_t)v2, (uint64_t)v24);
  if (v30)
  {
    sub_24D409FE4((uint64_t)v24);
  }
  else
  {
    int v31 = *v24;
    sub_24D409FE4((uint64_t)v24);
    if (v31 == 1) {
      return 1;
    }
  }
  uint64_t v42 = &a1[v13[8]];
  uint64_t v32 = *MEMORY[0x263F8E1F8];
  uint64_t v33 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 104);
  uint64_t v34 = (uint64_t)v45;
  v33(v45, v32, v25);
  uint64_t v35 = v43;
  sub_24DC0EE4C(v34);
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v26 + 8);
  v36(v34, v25);
  v33((char *)v34, v32, v25);
  uint64_t v37 = v44;
  sub_24DC0EE4C(v34);
  v36(v34, v25);
  uint64_t v38 = sub_24DCC8CC8();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v47 + 8);
  uint64_t v40 = v37;
  uint64_t v41 = v46;
  v39(v40, v46);
  v39(v35, v41);
  return v38 == 0;
}

uint64_t sub_24D4E9634()
{
  uint64_t v1 = type metadata accessor for ItemMetadata();
  uint64_t v2 = MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v12 - v5;
  int v7 = *v0;
  uint64_t v8 = (char *)&v12 - v5;
  if (v7 == 2)
  {
    sub_24D409F80((uint64_t)v0, (uint64_t)v8);
LABEL_4:
    sub_24D409FE4((uint64_t)v6);
    sub_24D409F80((uint64_t)v0, (uint64_t)v4);
    goto LABEL_5;
  }
  sub_24D409F80((uint64_t)v0, (uint64_t)v8);
  if (v7 == 1) {
    goto LABEL_4;
  }
  char v11 = v6[*(int *)(v1 + 48)];
  sub_24D409FE4((uint64_t)v6);
  sub_24D409F80((uint64_t)v0, (uint64_t)v4);
  if ((v11 & 1) == 0)
  {
    char v9 = v4[*(int *)(v1 + 44)] ^ 1;
    goto LABEL_6;
  }
LABEL_5:
  char v9 = 0;
LABEL_6:
  sub_24D409FE4((uint64_t)v4);
  return v9 & 1;
}

uint64_t sub_24D4E9750()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ItemMetadata() + 128));
  if (!v1 || !*(void *)(v1 + 16)) {
    return 0;
  }
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  uint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain_n();
  int64_t v8 = 0;
  while (v5)
  {
    v5 &= v5 - 1;
LABEL_7:
    uint64_t result = sub_24DCC9A08();
    if (result)
    {
      uint64_t v12 = 1;
LABEL_30:
      swift_release();
      swift_bridgeObjectRelease();
      return v12;
    }
  }
  int64_t v9 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v9 >= v6) {
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v2 + 8 * v9);
  ++v8;
  if (v10) {
    goto LABEL_26;
  }
  int64_t v8 = v9 + 1;
  if (v9 + 1 >= v6) {
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v2 + 8 * v8);
  if (v10) {
    goto LABEL_26;
  }
  int64_t v8 = v9 + 2;
  if (v9 + 2 >= v6) {
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v2 + 8 * v8);
  if (v10) {
    goto LABEL_26;
  }
  int64_t v8 = v9 + 3;
  if (v9 + 3 >= v6) {
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v2 + 8 * v8);
  if (v10) {
    goto LABEL_26;
  }
  int64_t v8 = v9 + 4;
  if (v9 + 4 >= v6) {
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v2 + 8 * v8);
  if (v10)
  {
LABEL_26:
    uint64_t v5 = (v10 - 1) & v10;
    goto LABEL_7;
  }
  int64_t v11 = v9 + 5;
  if (v11 >= v6)
  {
LABEL_29:
    uint64_t v12 = 0;
    goto LABEL_30;
  }
  uint64_t v10 = *(void *)(v2 + 8 * v11);
  if (v10)
  {
    int64_t v8 = v11;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v2 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_26;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

unint64_t sub_24D4E9914(char a1)
{
  unint64_t result = 1684957547;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x657449646C696863;
      break;
    case 2:
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6E6F697461657263;
      break;
    case 4:
      unint64_t result = 0xD000000000000017;
      break;
    case 5:
      unint64_t result = 0x64656B636F4C7369;
      break;
    case 6:
      unint64_t result = 0x6E65646469487369;
      break;
    case 7:
      unint64_t result = 0x64656E6E69507369;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD000000000000014;
      break;
    case 11:
      unint64_t result = 0x6F52636E79537369;
      break;
    case 12:
      unint64_t result = 0x65726F6E67497369;
      break;
    case 13:
      unint64_t result = 0x6F6E67496E497369;
      break;
    case 14:
      unint64_t result = 0x6863617465447369;
      break;
    case 15:
      unint64_t result = 0x53747365736F6C63;
      break;
    case 16:
      unint64_t result = 0x656C617461447369;
      break;
    case 17:
    case 18:
      unint64_t result = 0x6E6F697463697665;
      break;
    case 19:
      unint64_t result = 0x6150636E79537369;
      break;
    case 20:
      unint64_t result = 0xD000000000000022;
      break;
    case 21:
      unint64_t result = 1702521203;
      break;
    case 22:
      unint64_t result = 0x6C61636973796870;
      break;
    case 23:
      unint64_t result = 0x67616B6361507369;
      break;
    case 24:
      unint64_t result = 0x6C646E7542736168;
      break;
    case 25:
      unint64_t result = 0x646573557473616CLL;
      break;
    case 26:
      unint64_t result = 1936154996;
      break;
    case 27:
      unint64_t result = 0x657469726F766166;
      break;
    case 28:
      unint64_t result = 0xD000000000000012;
      break;
    case 29:
      unint64_t result = 0x69746E6172617571;
      break;
    case 30:
      unint64_t result = 0x65707954736FLL;
      break;
    case 31:
      unint64_t result = 0x7272757365527369;
      break;
    case 32:
      unint64_t result = 0x6E756F436B6E696CLL;
      break;
    case 33:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24D4E9D68()
{
  return sub_24D4E9914(*v0);
}

uint64_t sub_24D4E9D70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D4EEFF4(a1, a2);
  *a3 = result;
  return result;
}

void sub_24D4E9D98(unsigned char *a1@<X8>)
{
  *a1 = 34;
}

uint64_t sub_24D4E9DA4(uint64_t a1)
{
  unint64_t v2 = sub_24D4ED5EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D4E9DE0(uint64_t a1)
{
  unint64_t v2 = sub_24D4ED5EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D4E9E1C(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986BC50);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  int64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D4ED5EC();
  sub_24DCCB0D8();
  LOBYTE(v15) = *v3;
  char v16 = 0;
  sub_24D4ED640();
  sub_24DCCACF8();
  if (!v2)
  {
    char v9 = v3[8];
    LOBYTE(v15) = 1;
    char v16 = v9;
    sub_24DCCAC88();
    LOBYTE(v15) = 2;
    sub_24DCCAD28();
    uint64_t v10 = (int *)type metadata accessor for ItemMetadata();
    LOBYTE(v15) = 3;
    sub_24DCC8CE8();
    sub_24D4F0028(&qword_26986BC68, MEMORY[0x263F07490]);
    sub_24DCCACF8();
    LOBYTE(v15) = 4;
    sub_24DCCACF8();
    LOBYTE(v15) = 5;
    sub_24DCCACB8();
    LOBYTE(v15) = 6;
    sub_24DCCACB8();
    LOBYTE(v15) = 7;
    sub_24DCCACB8();
    LOBYTE(v15) = 8;
    sub_24DCCACB8();
    LOBYTE(v15) = 9;
    sub_24DCCACB8();
    long long v15 = *(_OWORD *)&v3[v10[14]];
    char v16 = 10;
    sub_24D4ED694();
    sub_24DCCAC58();
    LOBYTE(v15) = 11;
    sub_24DCCACB8();
    LOBYTE(v15) = 12;
    sub_24DCCACB8();
    LOBYTE(v15) = 13;
    sub_24DCCAC48();
    LOBYTE(v15) = 14;
    sub_24DCCACB8();
    LOBYTE(v15) = 15;
    sub_24DCCAD48();
    LOBYTE(v15) = 16;
    sub_24DCCACB8();
    LOBYTE(v15) = v3[v10[21]];
    char v16 = 17;
    sub_24D4ED6E8();
    sub_24DCCACF8();
    LOBYTE(v15) = v3[v10[22]];
    char v16 = 18;
    sub_24D4ED73C();
    sub_24DCCACF8();
    LOBYTE(v15) = 19;
    sub_24DCCACB8();
    LOBYTE(v15) = 20;
    sub_24DCCACB8();
    LOBYTE(v15) = 21;
    sub_24DCCAD18();
    LOBYTE(v15) = 22;
    sub_24DCCAD18();
    LOBYTE(v15) = 23;
    sub_24DCCACB8();
    LOBYTE(v15) = 24;
    sub_24DCCACB8();
    LOBYTE(v15) = 25;
    sub_24DCCAC58();
    *(void *)&long long v15 = *(void *)&v3[v10[30]];
    char v16 = 26;
    sub_24D4ED790();
    sub_24DCCAC58();
    LOBYTE(v15) = 27;
    sub_24DCCAC98();
    *(void *)&long long v15 = *(void *)&v3[v10[32]];
    char v16 = 28;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197DA8);
    sub_24D4ED9DC(&qword_26B1947E0, (void (*)(void))sub_24D4ED7E4);
    sub_24DCCAC58();
    long long v15 = *(_OWORD *)&v3[v10[33]];
    char v16 = 29;
    sub_24D4ED7E4();
    sub_24DCCAC58();
    int64_t v11 = &v3[v10[34]];
    uint64_t v12 = *(void *)v11;
    LOBYTE(v11) = v11[8];
    *(void *)&long long v15 = v12;
    BYTE8(v15) = (_BYTE)v11;
    char v16 = 30;
    type metadata accessor for NSFileProviderTypeAndCreator(0);
    sub_24D4F0028(&qword_26986BC88, type metadata accessor for NSFileProviderTypeAndCreator);
    sub_24DCCAC58();
    LOBYTE(v15) = 31;
    sub_24DCCACB8();
    char v13 = v3[v10[36] + 4];
    LOBYTE(v15) = 32;
    char v16 = v13;
    sub_24DCCAC88();
    LOBYTE(v15) = 33;
    sub_24DCCAC38();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24D4EA6E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v78 = a1;
  uint64_t v60 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v59 = (uint64_t)v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  BOOL v62 = (char *)v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v64 = (char *)v56 - v8;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986BC90);
  uint64_t v63 = *(void *)(v65 - 8);
  MEMORY[0x270FA5388](v65);
  uint64_t v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v11 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v12 = (int *)MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_DWORD *)v14 + 1) = 0;
  v14[8] = 1;
  long long v15 = &v14[v12[14]];
  *(void *)long long v15 = 0;
  *((void *)v15 + 1) = 0;
  uint64_t v73 = v15;
  uint64_t v61 = v12[17];
  v14[v61] = 2;
  uint64_t v16 = (uint64_t)&v14[v12[29]];
  uint64_t v75 = v4;
  uint64_t v76 = v5;
  uint64_t v17 = *(void (**)(void))(v5 + 56);
  uint64_t v71 = v16;
  v17();
  uint64_t v70 = v11[30];
  *(void *)&v14[v70] = 0;
  uint64_t v18 = &v14[v11[31]];
  *(void *)uint64_t v18 = 0;
  v18[8] = 1;
  uint64_t v68 = v11[32];
  *(void *)&v14[v68] = 0;
  uint64_t v69 = &v14[v11[33]];
  *(_OWORD *)uint64_t v69 = xmmword_24DCCED00;
  uint64_t v19 = &v14[v11[34]];
  *(void *)uint64_t v19 = 0;
  v19[8] = 1;
  uint64_t v20 = &v14[v11[36]];
  *(_DWORD *)uint64_t v20 = 0;
  void v20[4] = 1;
  uint64_t v74 = v11;
  uint64_t v21 = v11[37];
  uint64_t v77 = v14;
  uint64_t v22 = &v14[v21];
  *(void *)uint64_t v22 = 0;
  *((void *)v22 + 1) = 0;
  uint64_t v72 = v22;
  __swift_project_boxed_opaque_existential_1(v78, v78[3]);
  sub_24D4ED5EC();
  uint64_t v66 = v10;
  uint64_t v23 = v67;
  sub_24DCCB0B8();
  if (v23)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    swift_bridgeObjectRelease();
    sub_24D415F74(v71, (uint64_t *)&unk_26B196B10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D416034(*(void *)v69, *((void *)v69 + 1));
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v24 = v64;
    uint64_t v58 = (uint64_t *)v18;
    uint64_t v67 = v19;
    int v57 = v20;
    uint64_t v25 = v63;
    char v80 = 0;
    sub_24D4ED838();
    sub_24DCCAB98();
    uint64_t v26 = v74;
    int v27 = v77;
    unsigned char *v77 = v79;
    LOBYTE(v79) = 1;
    uint64_t v28 = sub_24DCCAB38();
    uint64_t v29 = v75;
    *((_DWORD *)v27 + 1) = v28;
    v27[8] = BYTE4(v28) & 1;
    LOBYTE(v79) = 2;
    *((_WORD *)v27 + 5) = sub_24DCCABC8();
    LOBYTE(v79) = 3;
    int v30 = v24;
    uint64_t v31 = sub_24D4F0028(&qword_26986BCA0, MEMORY[0x263F07490]);
    sub_24DCCAB98();
    uint64_t v33 = &v27[v26[7]];
    uint64_t v64 = *(char **)(v76 + 32);
    ((void (*)(unsigned char *, char *, uint64_t))v64)(v33, v30, v29);
    LOBYTE(v79) = 4;
    sub_24DCCAB98();
    v56[1] = v31;
    ((void (*)(unsigned char *, char *, uint64_t))v64)(&v77[v26[8]], v62, v29);
    LOBYTE(v79) = 5;
    char v34 = sub_24DCCAB68();
    uint64_t v35 = v77;
    v77[v26[9]] = v34 & 1;
    LOBYTE(v79) = 6;
    v35[v26[10]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 7;
    v35[v26[11]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 8;
    v35[v26[12]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 9;
    v77[v74[13]] = sub_24DCCAB68() & 1;
    char v80 = 10;
    sub_24D4ED88C();
    sub_24DCCAB08();
    *(_OWORD *)uint64_t v73 = v79;
    LOBYTE(v79) = 11;
    v77[v74[15]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 12;
    v77[v74[16]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 13;
    v77[v61] = sub_24DCCAAD8();
    LOBYTE(v79) = 14;
    v77[v74[18]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 15;
    *(void *)&v77[v74[19]] = sub_24DCCABE8();
    LOBYTE(v79) = 16;
    v77[v74[20]] = sub_24DCCAB68() & 1;
    char v80 = 17;
    sub_24D4ED8E0();
    sub_24DCCAB98();
    v77[v74[21]] = v79;
    char v80 = 18;
    sub_24D4ED934();
    sub_24DCCAB98();
    v77[v74[22]] = v79;
    LOBYTE(v79) = 19;
    v77[v74[23]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 20;
    v77[v74[24]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 21;
    *(void *)&v77[v74[25]] = sub_24DCCABB8();
    LOBYTE(v79) = 22;
    *(void *)&v77[v74[26]] = sub_24DCCABB8();
    LOBYTE(v79) = 23;
    v77[v74[27]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 24;
    v77[v74[28]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 25;
    sub_24DCCAB08();
    sub_24D4190E8(v59, v71);
    char v80 = 26;
    sub_24D4ED988();
    sub_24DCCAB08();
    uint64_t v36 = v79;
    uint64_t v37 = v70;
    uint64_t v38 = v77;
    swift_bridgeObjectRelease();
    *(void *)&v38[v37] = v36;
    LOBYTE(v79) = 27;
    uint64_t v39 = sub_24DCCAB48();
    uint64_t v40 = v58;
    *uint64_t v58 = v39;
    *((unsigned char *)v40 + 8) = v41 & 1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197DA8);
    char v80 = 28;
    sub_24D4ED9DC(&qword_26B199D68, (void (*)(void))sub_24D4EDA58);
    sub_24DCCAB08();
    uint64_t v42 = v79;
    uint64_t v43 = v68;
    uint64_t v44 = v77;
    swift_bridgeObjectRelease();
    *(void *)&v44[v43] = v42;
    char v80 = 29;
    sub_24D4EDA58();
    sub_24DCCAB08();
    long long v45 = v79;
    uint64_t v46 = v69;
    sub_24D416034(*(void *)v69, *((void *)v69 + 1));
    *(_OWORD *)uint64_t v46 = v45;
    type metadata accessor for NSFileProviderTypeAndCreator(0);
    char v80 = 30;
    sub_24D4F0028(&qword_26986BCC0, type metadata accessor for NSFileProviderTypeAndCreator);
    sub_24DCCAB08();
    char v47 = BYTE8(v79);
    uint64_t v48 = v67;
    *(void *)uint64_t v67 = v79;
    v48[8] = v47;
    LOBYTE(v79) = 31;
    v77[v74[35]] = sub_24DCCAB68() & 1;
    LOBYTE(v79) = 32;
    uint64_t v49 = sub_24DCCAB38();
    uint64_t v50 = v57;
    *(_DWORD *)int v57 = v49;
    v50[4] = BYTE4(v49) & 1;
    LOBYTE(v79) = 33;
    uint64_t v51 = sub_24DCCAAC8();
    uint64_t v53 = v52;
    (*(void (**)(char *, uint64_t))(v25 + 8))(v66, v65);
    BOOL v54 = (uint64_t *)v72;
    swift_bridgeObjectRelease();
    *BOOL v54 = v51;
    v54[1] = v53;
    unint64_t v55 = v77;
    sub_24D409F80((uint64_t)v77, v60);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v78);
    return sub_24D409FE4((uint64_t)v55);
  }
}

uint64_t sub_24D4EB518@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D4EA6E4(a1, a2);
}

uint64_t sub_24D4EB530(void *a1)
{
  return sub_24D4E9E1C(a1);
}

uint64_t sub_24D4EB548(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v2);
  uint64_t result = 6516580;
  switch((char)v2)
  {
    case 1:
      uint64_t result = 7498084;
      break;
    case 2:
      uint64_t result = 0x6B6E696C6D7973;
      break;
    case 3:
      uint64_t result = 0x7361696C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D4EB5F0(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_24D4EB788(a1, a2, (uint64_t *)&unk_26B199410, (uint64_t (*)(uint64_t))sub_24D82BF20);
}

uint64_t sub_24D4EB610(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  if (!v4)
  {
    uint64_t v2 = 0x284449636F64;
    goto LABEL_5;
  }
  if (v4 == 1)
  {
    uint64_t v2 = 0x284449656C6966;
LABEL_5:
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    return v2;
  }
  if (v3) {
    return 0x6873617274;
  }
  else {
    return 1953460082;
  }
}

uint64_t sub_24D4EB70C(void (*a1)(void **__return_ptr))
{
  a1(&v4);
  uint64_t v1 = v4;
  uint64_t v2 = sub_24D3D79D4();

  return v2;
}

uint64_t sub_24D4EB768(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  return sub_24D4EB788(a1, a2, (uint64_t *)&unk_26B196F50, (uint64_t (*)(uint64_t))sub_24D82C458);
}

uint64_t sub_24D4EB788(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = a1(v8);
  uint64_t v12 = a4(v11);
  sub_24D415F74((uint64_t)v10, a3);
  return v12;
}

uint64_t sub_24D4EB840(void (*a1)(uint64_t *__return_ptr))
{
  a1(&v3);
  type metadata accessor for BrokenInvariants(0);
  sub_24D4F0028(&qword_26B191460, type metadata accessor for BrokenInvariants);
  uint64_t v1 = sub_24DCC9588();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t sub_24D4EB8F0(void *(*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  return sub_24D4EB970(a1, a2, (void (*)(void *))sub_24D4EFFD4);
}

uint64_t sub_24D4EB910(void *(*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  return sub_24D4EB970(a1, a2, (void (*)(void *))sub_24D4EFF80);
}

uint64_t sub_24D4EB930(void *(*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  return sub_24D4EB970(a1, a2, (void (*)(void *))sub_24D4EFF2C);
}

uint64_t sub_24D4EB950(void *(*a1)(uint64_t *__return_ptr), uint64_t a2)
{
  return sub_24D4EB970(a1, a2, (void (*)(void *))sub_24D4EFED8);
}

uint64_t sub_24D4EB970(void *(*a1)(uint64_t *__return_ptr), uint64_t a2, void (*a3)(void *))
{
  char v4 = a1(&v7);
  a3(v4);
  uint64_t v5 = sub_24DCC9588();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_24D4EB9F0(uint64_t a1, uint64_t a2)
{
  __s2[2] = *MEMORY[0x263EF8340];
  if (a1 == a2) {
    return 1;
  }
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v90 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v91 = (unint64_t)(v5 + 63) >> 6;
  while (2)
  {
    if (v7)
    {
      unint64_t v8 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v93 = v4;
      unint64_t v9 = v8 | (v4 << 6);
    }
    else
    {
      int64_t v10 = v4 + 1;
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_142:
        __break(1u);
LABEL_143:
        __break(1u);
LABEL_144:
        __break(1u);
LABEL_145:
        __break(1u);
LABEL_146:
        __break(1u);
LABEL_147:
        __break(1u);
LABEL_148:
        __break(1u);
        goto LABEL_149;
      }
      if (v10 >= v91) {
        return 1;
      }
      unint64_t v11 = *(void *)(v90 + 8 * v10);
      int64_t v12 = v4 + 1;
      if (!v11)
      {
        int64_t v12 = v4 + 2;
        if (v4 + 2 >= v91) {
          return 1;
        }
        unint64_t v11 = *(void *)(v90 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v4 + 3;
          if (v4 + 3 >= v91) {
            return 1;
          }
          unint64_t v11 = *(void *)(v90 + 8 * v12);
          if (!v11)
          {
            int64_t v12 = v4 + 4;
            if (v4 + 4 >= v91) {
              return 1;
            }
            unint64_t v11 = *(void *)(v90 + 8 * v12);
            if (!v11)
            {
              uint64_t v13 = v4 + 5;
              if (v4 + 5 >= v91) {
                return 1;
              }
              unint64_t v11 = *(void *)(v90 + 8 * v13);
              if (!v11)
              {
                while (1)
                {
                  int64_t v12 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    break;
                  }
                  if (v12 >= v91) {
                    return 1;
                  }
                  unint64_t v11 = *(void *)(v90 + 8 * v12);
                  ++v13;
                  if (v11) {
                    goto LABEL_25;
                  }
                }
LABEL_149:
                __break(1u);
LABEL_150:
                __break(1u);
LABEL_151:
                __break(1u);
LABEL_152:
                __break(1u);
LABEL_153:
                __break(1u);
LABEL_154:
                __break(1u);
LABEL_155:
                __break(1u);
LABEL_156:
                __break(1u);
LABEL_157:
                __break(1u);
LABEL_158:
                __break(1u);
LABEL_159:
                __break(1u);
LABEL_160:
                __break(1u);
LABEL_161:
                __break(1u);
LABEL_162:
                __break(1u);
LABEL_163:
                __break(1u);
LABEL_164:
                __break(1u);
LABEL_165:
                __break(1u);
              }
              int64_t v12 = v4 + 5;
            }
          }
        }
      }
LABEL_25:
      unint64_t v7 = (v11 - 1) & v11;
      int64_t v93 = v12;
      unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
    }
    uint64_t v14 = 16 * v9;
    long long v15 = (uint64_t *)(*(void *)(v3 + 48) + v14);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    uint64_t v18 = (uint64_t *)(*(void *)(v3 + 56) + v14);
    uint64_t v20 = *v18;
    unint64_t v19 = v18[1];
    swift_bridgeObjectRetain();
    sub_24D3F9C18(v20, v19);
    unint64_t v21 = sub_24D4053BC(v16, v17);
    char v23 = v22;
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      goto LABEL_139;
    }
    unint64_t v24 = v19 >> 62;
    uint64_t v25 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v21);
    uint64_t v27 = *v25;
    unint64_t v26 = v25[1];
    uint64_t v28 = 0;
    switch(v26 >> 62)
    {
      case 1uLL:
        if (__OFSUB__(HIDWORD(v27), v27)) {
          goto LABEL_142;
        }
        uint64_t v28 = HIDWORD(v27) - (int)v27;
LABEL_32:
        sub_24D3F9C18(v27, v26);
        break;
      case 2uLL:
        uint64_t v30 = *(void *)(v27 + 16);
        uint64_t v29 = *(void *)(v27 + 24);
        uint64_t v28 = v29 - v30;
        if (!__OFSUB__(v29, v30)) {
          goto LABEL_32;
        }
        goto LABEL_143;
      case 3uLL:
        break;
      default:
        uint64_t v28 = BYTE6(v26);
        break;
    }
    switch((int)v24)
    {
      case 1:
        LODWORD(v31) = HIDWORD(v20) - v20;
        if (__OFSUB__(HIDWORD(v20), v20)) {
          goto LABEL_144;
        }
        uint64_t v31 = (int)v31;
LABEL_38:
        if (v28 == v31)
        {
          if (v28 < 1)
          {
LABEL_7:
            sub_24D400DCC(v27, v26);
            sub_24D400DCC(v20, v19);
            uint64_t v3 = a1;
            int64_t v4 = v93;
          }
          else
          {
            switch(v26 >> 62)
            {
              case 1uLL:
                if ((int)v27 > v27 >> 32) {
                  goto LABEL_146;
                }
                uint64_t v40 = (char *)sub_24DCC84D8();
                if (!v40) {
                  goto LABEL_52;
                }
                uint64_t v41 = sub_24DCC84F8();
                if (__OFSUB__((int)v27, v41)) {
                  goto LABEL_148;
                }
                v40 += (int)v27 - v41;
LABEL_52:
                uint64_t v2 = a2;
                sub_24DCC84E8();
                if (!v24)
                {
                  __s2[0] = v20;
                  LOWORD(__s2[1]) = v19;
                  BYTE2(__s2[1]) = BYTE2(v19);
                  BYTE3(__s2[1]) = BYTE3(v19);
                  BYTE4(__s2[1]) = BYTE4(v19);
                  BYTE5(__s2[1]) = BYTE5(v19);
                  if (!v40) {
                    goto LABEL_177;
                  }
                  size_t v58 = BYTE6(v19);
                  uint64_t v60 = __s2;
                  uint64_t v59 = v40;
LABEL_120:
                  int v46 = memcmp(v59, v60, v58);
                  goto LABEL_121;
                }
                if (v24 == 1)
                {
                  if (v20 >> 32 < (int)v20) {
                    goto LABEL_158;
                  }
                  swift_retain();
                  uint64_t v42 = (char *)sub_24DCC84D8();
                  if (v42)
                  {
                    uint64_t v43 = sub_24DCC84F8();
                    if (__OFSUB__((int)v20, v43)) {
                      goto LABEL_165;
                    }
                    v42 += (int)v20 - v43;
                  }
                  uint64_t v2 = a2;
                  uint64_t v44 = sub_24DCC84E8();
                  if (v44 >= (v20 >> 32) - (int)v20) {
                    size_t v45 = (v20 >> 32) - (int)v20;
                  }
                  else {
                    size_t v45 = v44;
                  }
                  if (!v40) {
                    goto LABEL_167;
                  }
                  uint64_t v3 = a1;
                  if (!v42) {
                    goto LABEL_168;
                  }
                  int v46 = memcmp(v40, v42, v45);
                  sub_24D400DCC(v20, v19);
                  sub_24D400DCC(v27, v26);
                  sub_24D400DCC(v20, v19);
                  goto LABEL_123;
                }
                uint64_t v81 = *(void *)(v20 + 16);
                uint64_t v80 = *(void *)(v20 + 24);
                swift_retain();
                swift_retain();
                uint64_t v82 = (char *)sub_24DCC84D8();
                if (v82)
                {
                  uint64_t v83 = sub_24DCC84F8();
                  if (__OFSUB__(v81, v83)) {
                    goto LABEL_164;
                  }
                  v82 += v81 - v83;
                }
                BOOL v34 = __OFSUB__(v80, v81);
                int64_t v84 = v80 - v81;
                if (v34) {
                  goto LABEL_159;
                }
                uint64_t v85 = sub_24DCC84E8();
                if (v85 >= v84) {
                  size_t v86 = v84;
                }
                else {
                  size_t v86 = v85;
                }
                uint64_t v3 = a1;
                if (!v40) {
                  goto LABEL_178;
                }
                uint64_t v2 = a2;
                if (!v82) {
                  goto LABEL_179;
                }
                int v71 = memcmp(v40, v82, v86);
                swift_release();
                swift_release();
                sub_24D400DCC(v27, v26);
                sub_24D400DCC(v20, v19);
LABEL_135:
                int64_t v4 = v93;
                if (v71) {
                  return 0;
                }
                continue;
              case 2uLL:
                uint64_t v47 = *(void *)(v27 + 16);
                swift_retain();
                swift_retain();
                uint64_t v48 = (char *)sub_24DCC84D8();
                if (!v48) {
                  goto LABEL_67;
                }
                uint64_t v49 = sub_24DCC84F8();
                if (__OFSUB__(v47, v49)) {
                  goto LABEL_147;
                }
                v48 += v47 - v49;
LABEL_67:
                uint64_t v2 = a2;
                sub_24DCC84E8();
                if (!v24)
                {
                  __s2[0] = v20;
                  LOWORD(__s2[1]) = v19;
                  BYTE2(__s2[1]) = BYTE2(v19);
                  BYTE3(__s2[1]) = BYTE3(v19);
                  BYTE4(__s2[1]) = BYTE4(v19);
                  BYTE5(__s2[1]) = BYTE5(v19);
                  if (!v48) {
                    goto LABEL_174;
                  }
                  int v46 = memcmp(v48, __s2, BYTE6(v19));
                  goto LABEL_106;
                }
                __s1 = v48;
                if (v24 == 1)
                {
                  if (v20 >> 32 < (int)v20) {
                    goto LABEL_152;
                  }
                  swift_retain();
                  uint64_t v50 = (char *)sub_24DCC84D8();
                  if (v50)
                  {
                    uint64_t v51 = sub_24DCC84F8();
                    if (__OFSUB__((int)v20, v51)) {
                      goto LABEL_163;
                    }
                    v50 += (int)v20 - v51;
                  }
                  uint64_t v2 = a2;
                  uint64_t v52 = sub_24DCC84E8();
                  if (v52 >= (v20 >> 32) - (int)v20) {
                    size_t v53 = (v20 >> 32) - (int)v20;
                  }
                  else {
                    size_t v53 = v52;
                  }
                  if (!v48) {
                    goto LABEL_169;
                  }
                  if (!v50) {
                    goto LABEL_170;
                  }
                  int v46 = memcmp(v48, v50, v53);
                  sub_24D400DCC(v20, v19);
LABEL_106:
                  swift_release();
                  swift_release();
LABEL_121:
                  sub_24D400DCC(v27, v26);
                  sub_24D400DCC(v20, v19);
LABEL_122:
                  uint64_t v3 = a1;
LABEL_123:
                  int64_t v4 = v93;
                  if (v46) {
                    return 0;
                  }
                  continue;
                }
                uint64_t v73 = *(void *)(v20 + 16);
                uint64_t v72 = *(void *)(v20 + 24);
                swift_retain();
                swift_retain();
                uint64_t v74 = (char *)sub_24DCC84D8();
                if (v74)
                {
                  uint64_t v75 = sub_24DCC84F8();
                  if (__OFSUB__(v73, v75)) {
                    goto LABEL_162;
                  }
                  v74 += v73 - v75;
                }
                BOOL v34 = __OFSUB__(v72, v73);
                int64_t v76 = v72 - v73;
                if (v34) {
                  goto LABEL_157;
                }
                uint64_t v77 = sub_24DCC84E8();
                if (v77 >= v76) {
                  size_t v78 = v76;
                }
                else {
                  size_t v78 = v77;
                }
                if (!__s1) {
                  goto LABEL_175;
                }
                uint64_t v2 = a2;
                if (!v74) {
                  goto LABEL_176;
                }
                int v79 = memcmp(__s1, v74, v78);
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                sub_24D400DCC(v27, v26);
                sub_24D400DCC(v20, v19);
                uint64_t v3 = a1;
                int64_t v4 = v93;
                if (v79) {
                  return 0;
                }
                break;
              case 3uLL:
                memset(__s2, 0, 14);
                if (!v24) {
                  goto LABEL_88;
                }
                if (v24 == 1)
                {
                  uint64_t v35 = (v20 >> 32) - (int)v20;
                  if (v20 >> 32 < (int)v20) {
                    goto LABEL_151;
                  }
                  sub_24D3F9C18(v20, v19);
                  uint64_t v54 = sub_24DCC84D8();
                  if (!v54) {
                    goto LABEL_171;
                  }
                  uint64_t v37 = v54;
                  uint64_t v55 = sub_24DCC84F8();
                  uint64_t v39 = (int)v20 - v55;
                  if (__OFSUB__((int)v20, v55)) {
                    goto LABEL_156;
                  }
LABEL_84:
                  uint64_t v56 = sub_24DCC84E8();
                  if (v56 >= v35) {
                    size_t v57 = v35;
                  }
                  else {
                    size_t v57 = v56;
                  }
                  int v46 = memcmp(__s2, (const void *)(v37 + v39), v57);
                  sub_24D400DCC(v20, v19);
                  sub_24D400DCC(v27, v26);
                  sub_24D400DCC(v20, v19);
                  uint64_t v2 = a2;
                  goto LABEL_122;
                }
                uint64_t v67 = *(void *)(v20 + 16);
                uint64_t v68 = *(void *)(v20 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_24DCC84D8();
                if (v63)
                {
                  uint64_t v69 = sub_24DCC84F8();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_161;
                  }
                  v63 += v67 - v69;
                }
                int64_t v65 = v68 - v67;
                if (__OFSUB__(v68, v67)) {
                  goto LABEL_154;
                }
                uint64_t v66 = sub_24DCC84E8();
                uint64_t v3 = a1;
                if (!v63) {
                  goto LABEL_173;
                }
LABEL_100:
                if (v66 >= v65) {
                  size_t v70 = v65;
                }
                else {
                  size_t v70 = v66;
                }
                int v71 = memcmp(__s2, v63, v70);
                swift_release();
                swift_release();
                sub_24D400DCC(v27, v26);
                sub_24D400DCC(v20, v19);
                uint64_t v2 = a2;
                goto LABEL_135;
              default:
                __s2[0] = v27;
                LOWORD(__s2[1]) = v26;
                BYTE2(__s2[1]) = BYTE2(v26);
                BYTE3(__s2[1]) = BYTE3(v26);
                BYTE4(__s2[1]) = BYTE4(v26);
                BYTE5(__s2[1]) = BYTE5(v26);
                if (!v24)
                {
LABEL_88:
                  uint64_t v94 = v20;
                  __int16 v95 = v19;
                  char v96 = BYTE2(v19);
                  char v97 = BYTE3(v19);
                  char v98 = BYTE4(v19);
                  size_t v58 = BYTE6(v19);
                  char v99 = BYTE5(v19);
                  uint64_t v59 = __s2;
                  uint64_t v60 = &v94;
                  goto LABEL_120;
                }
                if (v24 == 1)
                {
                  uint64_t v35 = (v20 >> 32) - (int)v20;
                  if (v20 >> 32 < (int)v20) {
                    goto LABEL_150;
                  }
                  sub_24D3F9C18(v20, v19);
                  uint64_t v36 = sub_24DCC84D8();
                  if (!v36)
                  {
                    sub_24DCC84E8();
                    __break(1u);
LABEL_167:
                    __break(1u);
LABEL_168:
                    __break(1u);
LABEL_169:
                    __break(1u);
LABEL_170:
                    __break(1u);
LABEL_171:
                    sub_24DCC84E8();
                    __break(1u);
LABEL_172:
                    __break(1u);
LABEL_173:
                    __break(1u);
LABEL_174:
                    __break(1u);
LABEL_175:
                    __break(1u);
LABEL_176:
                    __break(1u);
LABEL_177:
                    __break(1u);
LABEL_178:
                    __break(1u);
LABEL_179:
                    __break(1u);
                    JUMPOUT(0x24D4EC4ACLL);
                  }
                  uint64_t v37 = v36;
                  uint64_t v38 = sub_24DCC84F8();
                  uint64_t v39 = (int)v20 - v38;
                  if (__OFSUB__((int)v20, v38)) {
                    goto LABEL_155;
                  }
                  goto LABEL_84;
                }
                uint64_t v61 = *(void *)(v20 + 16);
                uint64_t v62 = *(void *)(v20 + 24);
                swift_retain();
                swift_retain();
                uint64_t v63 = (char *)sub_24DCC84D8();
                if (v63)
                {
                  uint64_t v64 = sub_24DCC84F8();
                  if (__OFSUB__(v61, v64)) {
                    goto LABEL_160;
                  }
                  v63 += v61 - v64;
                }
                int64_t v65 = v62 - v61;
                if (__OFSUB__(v62, v61)) {
                  goto LABEL_153;
                }
                uint64_t v66 = sub_24DCC84E8();
                uint64_t v3 = a1;
                if (!v63) {
                  goto LABEL_172;
                }
                goto LABEL_100;
            }
          }
          continue;
        }
LABEL_138:
        sub_24D400DCC(v27, v26);
LABEL_139:
        sub_24D400DCC(v20, v19);
        return 0;
      case 2:
        uint64_t v33 = *(void *)(v20 + 16);
        uint64_t v32 = *(void *)(v20 + 24);
        BOOL v34 = __OFSUB__(v32, v33);
        uint64_t v31 = v32 - v33;
        if (!v34) {
          goto LABEL_38;
        }
        goto LABEL_145;
      case 3:
        if (!v28) {
          goto LABEL_7;
        }
        goto LABEL_138;
      default:
        uint64_t v31 = BYTE6(v19);
        goto LABEL_38;
    }
  }
}

uint64_t sub_24D4EC4DC@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x263EF8340];
  unint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_24D3F9C18(a2, a3);
      int64_t v10 = (char *)sub_24DCC84D8();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_24DCC84F8();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_24DCC84E8();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x24D4EC740);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_24D400DCC(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_24DCC84D8();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_24DCC84F8();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_24DCC84E8();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

BOOL sub_24D4EC750(char *a1, char *a2)
{
  uint64_t v4 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v93 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990A8);
  MEMORY[0x270FA5388](v8);
  int64_t v10 = (char *)&v93 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  int v14 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  uint64_t v17 = (char *)&v93 - v16;
  MEMORY[0x270FA5388](v15);
  BOOL v19 = (char *)&v93 - v18;
  if (qword_24DCD46C8[*a1] != qword_24DCD46C8[*a2]) {
    return 0;
  }
  char v20 = a2[8];
  if (a1[8])
  {
    if (!a2[8]) {
      return 0;
    }
  }
  else
  {
    if (*((_DWORD *)a1 + 1) != *((_DWORD *)a2 + 1)) {
      char v20 = 1;
    }
    if (v20) {
      return 0;
    }
  }
  if (*((unsigned __int16 *)a1 + 5) != *((unsigned __int16 *)a2 + 5)) {
    return 0;
  }
  uint64_t v102 = v5;
  uint64_t v21 = (int *)type metadata accessor for ItemMetadata();
  if ((sub_24DCC8C98() & 1) == 0) {
    return 0;
  }
  if ((sub_24DCC8C98() & 1) == 0) {
    return 0;
  }
  if (a1[v21[9]] != a2[v21[9]]) {
    return 0;
  }
  size_t v22 = v21;
  if (a1[v21[10]] != a2[v21[10]]
    || a1[v21[11]] != a2[v21[11]]
    || a1[v21[12]] != a2[v21[12]]
    || a1[v21[13]] != a2[v21[13]])
  {
    return 0;
  }
  uint64_t v24 = v21[14];
  uint64_t v25 = (unint64_t *)&a1[v24];
  unint64_t v26 = *(void *)&a1[v24 + 8];
  char v27 = (uint64_t *)&a2[v24];
  char v28 = (unsigned int (*)(unint64_t, uint64_t, uint64_t))v27[1];
  unint64_t v101 = v26;
  if (!v26)
  {
    if (v28) {
      return 0;
    }
    goto LABEL_40;
  }
  if (!v28) {
    return 0;
  }
  char v96 = v22;
  unint64_t v99 = *v25;
  uint64_t v100 = v28;
  uint64_t v98 = *v27;
  unint64_t v29 = v101;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v97 = sub_24D40114C(v99, v29);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  if (v31)
  {
    if (v97 == 12565487 && v31 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
LABEL_27:
      unint64_t v32 = v101;
      swift_bridgeObjectRetain();
      unint64_t v33 = sub_24DCC9918();
      unint64_t v99 = sub_24D41824C(v33, v99, v32);
      uint64_t v97 = v34;
      uint64_t v94 = v36;
      uint64_t v95 = v35;
      swift_bridgeObjectRelease();
      unint64_t v99 = MEMORY[0x253327950](v99, v97, v95, v94);
      uint64_t v97 = v37;
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
    LODWORD(v97) = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v97) {
      goto LABEL_27;
    }
  }
  uint64_t v97 = swift_bridgeObjectRetain();
LABEL_29:
  unint64_t v38 = (unint64_t)v100;
  swift_bridgeObjectRetain();
  uint64_t v95 = sub_24D40114C(v98, v38);
  uint64_t v40 = v39;
  swift_bridgeObjectRelease();
  if (!v40) {
    goto LABEL_35;
  }
  if (v95 != 12565487 || v40 != 0xA300000000000000)
  {
    LODWORD(v95) = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v95) {
      goto LABEL_34;
    }
LABEL_35:
    uint64_t v49 = swift_bridgeObjectRetain();
    uint64_t v47 = v98;
    goto LABEL_36;
  }
  swift_bridgeObjectRelease();
LABEL_34:
  unint64_t v41 = (unint64_t)v100;
  swift_bridgeObjectRetain();
  unint64_t v42 = sub_24DCC9918();
  unint64_t v43 = sub_24D41824C(v42, v98, v41);
  uint64_t v94 = v44;
  uint64_t v95 = v43;
  uint64_t v93 = v45;
  uint64_t v98 = v46;
  swift_bridgeObjectRelease();
  uint64_t v47 = MEMORY[0x253327950](v95, v94, v93, v98);
  uint64_t v95 = v48;
  swift_bridgeObjectRelease();
  uint64_t v49 = v95;
LABEL_36:
  if (v99 == v47 && v97 == v49)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    size_t v22 = v96;
  }
  else
  {
    LODWORD(v99) = sub_24DCCAE28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    size_t v22 = v96;
    if ((v99 & 1) == 0) {
      return result;
    }
  }
LABEL_40:
  if (a1[v22[15]] != a2[v22[15]] || a1[v22[16]] != a2[v22[16]]) {
    return 0;
  }
  uint64_t v50 = v22[17];
  int v51 = a1[v50];
  int v52 = a2[v50];
  if (v51 == 2)
  {
    if (v52 != 2) {
      return 0;
    }
LABEL_47:
    if (a1[v22[18]] != a2[v22[18]]) {
      return 0;
    }
    uint64_t v54 = v22;
    if (*(void *)&a1[v22[19]] != *(void *)&a2[v22[19]]
      || a1[v22[20]] != a2[v22[20]]
      || a1[v22[21]] != a2[v22[21]]
      || a1[v22[22]] != a2[v22[22]]
      || a1[v22[23]] != a2[v22[23]]
      || a1[v22[24]] != a2[v22[24]]
      || *(void *)&a1[v22[25]] != *(void *)&a2[v22[25]]
      || *(void *)&a1[v22[26]] != *(void *)&a2[v22[26]]
      || a1[v22[27]] != a2[v22[27]]
      || a1[v22[28]] != a2[v22[28]])
    {
      return 0;
    }
    char v96 = v22;
    sub_24D415FD0((uint64_t)&a1[v22[29]], (uint64_t)v19, (uint64_t *)&unk_26B196B10);
    sub_24D415FD0((uint64_t)&a2[v96[29]], (uint64_t)v17, (uint64_t *)&unk_26B196B10);
    uint64_t v55 = (uint64_t)&v10[*(int *)(v8 + 48)];
    sub_24D415FD0((uint64_t)v19, (uint64_t)v10, (uint64_t *)&unk_26B196B10);
    unint64_t v101 = v55;
    sub_24D415FD0((uint64_t)v17, v55, (uint64_t *)&unk_26B196B10);
    uint64_t v100 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v102 + 48);
    if (v100((unint64_t)v10, 1, v4) == 1)
    {
      sub_24D415F74((uint64_t)v17, (uint64_t *)&unk_26B196B10);
      sub_24D415F74((uint64_t)v19, (uint64_t *)&unk_26B196B10);
      if (v100(v101, 1, v4) == 1)
      {
        sub_24D415F74((uint64_t)v10, (uint64_t *)&unk_26B196B10);
        goto LABEL_65;
      }
    }
    else
    {
      sub_24D415FD0((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_26B196B10);
      if (v100(v101, 1, v4) != 1)
      {
        uint64_t v56 = v102;
        (*(void (**)(char *, unint64_t, uint64_t))(v102 + 32))(v7, v101, v4);
        sub_24D4F0028((unint64_t *)&unk_26986C5B0, MEMORY[0x263F07490]);
        LODWORD(v101) = sub_24DCC9798();
        size_t v57 = *(void (**)(char *, uint64_t))(v56 + 8);
        v57(v7, v4);
        sub_24D415F74((uint64_t)v17, (uint64_t *)&unk_26B196B10);
        sub_24D415F74((uint64_t)v19, (uint64_t *)&unk_26B196B10);
        v57(v14, v4);
        sub_24D415F74((uint64_t)v10, (uint64_t *)&unk_26B196B10);
        if ((v101 & 1) == 0) {
          return 0;
        }
LABEL_65:
        uint64_t v58 = v54[30];
        uint64_t v59 = *(void *)&a2[v58];
        if (*(void *)&a1[v58])
        {
          if (!v59) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v60 = swift_bridgeObjectRetain();
          char v61 = sub_24D9840EC(v60, v59);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v61 & 1) == 0) {
            return 0;
          }
        }
        else if (v59)
        {
          return 0;
        }
        uint64_t v62 = v54[31];
        uint64_t v63 = &a1[v62];
        char v64 = a1[v62 + 8];
        int64_t v65 = &a2[v62];
        int v66 = a2[v62 + 8];
        if (v64)
        {
          if (!v66) {
            return 0;
          }
        }
        else
        {
          if (*(void *)v63 != *(void *)v65) {
            LOBYTE(v66) = 1;
          }
          if (v66) {
            return 0;
          }
        }
        uint64_t v67 = v54[32];
        uint64_t v68 = *(void *)&a2[v67];
        if (*(void *)&a1[v67])
        {
          if (!v68) {
            return 0;
          }
          swift_bridgeObjectRetain();
          uint64_t v69 = swift_bridgeObjectRetain();
          char v70 = sub_24D4EB9F0(v69, v68);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v70 & 1) == 0) {
            return 0;
          }
        }
        else if (v68)
        {
          return 0;
        }
        uint64_t v71 = v54[33];
        uint64_t v72 = *(void *)&a1[v71];
        unint64_t v73 = *(void *)&a1[v71 + 8];
        uint64_t v74 = (uint64_t *)&a2[v71];
        uint64_t v75 = *v74;
        unint64_t v76 = v74[1];
        if (v73 >> 60 == 15)
        {
          if (v76 >> 60 == 15)
          {
LABEL_87:
            uint64_t v78 = v54[34];
            int v79 = &a1[v78];
            char v80 = a1[v78 + 8];
            uint64_t v81 = &a2[v78];
            int v82 = a2[v78 + 8];
            if (v80)
            {
              if (!v82) {
                return 0;
              }
            }
            else
            {
              if (*(void *)v79 != *(void *)v81) {
                LOBYTE(v82) = 1;
              }
              if (v82) {
                return 0;
              }
            }
            if (a1[v54[35]] == a2[v54[35]])
            {
              uint64_t v83 = v54[36];
              int64_t v84 = &a1[v83];
              char v85 = a1[v83 + 4];
              size_t v86 = &a2[v83];
              int v87 = a2[v83 + 4];
              if (v85)
              {
                if (!v87) {
                  return 0;
                }
              }
              else
              {
                if (*(_DWORD *)v84 != *(_DWORD *)v86) {
                  LOBYTE(v87) = 1;
                }
                if (v87) {
                  return 0;
                }
              }
              uint64_t v88 = v54[37];
              int v89 = &a1[v88];
              uint64_t v90 = *(void *)&a1[v88 + 8];
              int64_t v91 = &a2[v88];
              uint64_t v92 = *((void *)v91 + 1);
              if (v90) {
                return v92 && (*(void *)v89 == *(void *)v91 && v90 == v92 || (sub_24DCCAE28() & 1) != 0);
              }
              if (!v92) {
                return 1;
              }
            }
            return 0;
          }
        }
        else if (v76 >> 60 != 15)
        {
          sub_24D416048(v72, v73);
          sub_24D416048(v75, v76);
          char v77 = sub_24D401DDC(v72, v73, v75, v76);
          sub_24D416034(v75, v76);
          sub_24D416034(v72, v73);
          if ((v77 & 1) == 0) {
            return 0;
          }
          goto LABEL_87;
        }
        sub_24D416048(v72, v73);
        sub_24D416048(v75, v76);
        sub_24D416034(v72, v73);
        sub_24D416034(v75, v76);
        return 0;
      }
      sub_24D415F74((uint64_t)v17, (uint64_t *)&unk_26B196B10);
      sub_24D415F74((uint64_t)v19, (uint64_t *)&unk_26B196B10);
      (*(void (**)(char *, uint64_t))(v102 + 8))(v14, v4);
    }
    sub_24D415F74((uint64_t)v10, &qword_26B1990A8);
    return 0;
  }
  BOOL result = 0;
  BOOL v53 = (v51 & 1) == 0;
  if (v52 != 2 && ((v53 ^ v52) & 1) != 0) {
    goto LABEL_47;
  }
  return result;
}

uint64_t sub_24D4ED290(uint64_t result, uint64_t a2)
{
  if (!a2)
  {
    swift_release();
    return 0;
  }
  if (a2 > 14)
  {
    if ((unint64_t)a2 < 0x7FFFFFFF) {
      return a2 << 32;
    }
    sub_24DCC8AC8();
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = 0;
    *(void *)(v3 + 24) = a2;
    return v3;
  }
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = (unsigned char *)sub_24DCC84D8();
    if (!v4)
    {
LABEL_10:
      uint64_t v5 = sub_24DCC84E8();
      if (v5 >= a2) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = v5;
      }
      unint64_t v7 = &v4[v6];
      if (v4) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0;
      }
      uint64_t v3 = sub_24DC9FBB8(v4, v8);
      swift_release();
      return v3;
    }
    BOOL result = sub_24DCC84F8();
    if (!__OFSUB__(0, result))
    {
      v4 -= result;
      goto LABEL_10;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24D4ED378(unsigned int a1)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_24DCC9858();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24DCC8A98();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[1] = bswap32(a1);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F06F00], v3);
  sub_24DCC8A88();
  sub_24DCC8518();
  swift_allocObject();
  swift_retain();
  uint64_t v7 = sub_24DCC84B8();
  uint64_t v8 = sub_24D4ED290(v7, 4);
  unint64_t v10 = v9;
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_24DCC9838();
  uint64_t v11 = sub_24DCC9808();
  sub_24D400DCC(v8, v10);
  return v11;
}

uint64_t sub_24D4ED584(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B192388);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24D4ED5EC()
{
  unint64_t result = qword_26986BC58;
  if (!qword_26986BC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC58);
  }
  return result;
}

unint64_t sub_24D4ED640()
{
  unint64_t result = qword_26986BC60;
  if (!qword_26986BC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC60);
  }
  return result;
}

unint64_t sub_24D4ED694()
{
  unint64_t result = qword_26B194798;
  if (!qword_26B194798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194798);
  }
  return result;
}

unint64_t sub_24D4ED6E8()
{
  unint64_t result = qword_26986BC70;
  if (!qword_26986BC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC70);
  }
  return result;
}

unint64_t sub_24D4ED73C()
{
  unint64_t result = qword_26986BC78;
  if (!qword_26986BC78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC78);
  }
  return result;
}

unint64_t sub_24D4ED790()
{
  unint64_t result = qword_26986BC80;
  if (!qword_26986BC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC80);
  }
  return result;
}

unint64_t sub_24D4ED7E4()
{
  unint64_t result = qword_26B1943E8[0];
  if (!qword_26B1943E8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B1943E8);
  }
  return result;
}

unint64_t sub_24D4ED838()
{
  unint64_t result = qword_26986BC98;
  if (!qword_26986BC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BC98);
  }
  return result;
}

unint64_t sub_24D4ED88C()
{
  unint64_t result = qword_26B1947A0;
  if (!qword_26B1947A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1947A0);
  }
  return result;
}

unint64_t sub_24D4ED8E0()
{
  unint64_t result = qword_26986BCA8;
  if (!qword_26986BCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BCA8);
  }
  return result;
}

unint64_t sub_24D4ED934()
{
  unint64_t result = qword_26986BCB0;
  if (!qword_26986BCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BCB0);
  }
  return result;
}

unint64_t sub_24D4ED988()
{
  unint64_t result = qword_26986BCB8;
  if (!qword_26986BCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BCB8);
  }
  return result;
}

uint64_t sub_24D4ED9DC(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197DA8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24D4EDA58()
{
  unint64_t result = qword_26B196B00;
  if (!qword_26B196B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B196B00);
  }
  return result;
}

void *sub_24D4EDAAC(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(_WORD *)(a1 + 10) = *((_WORD *)a2 + 5);
    uint64_t v7 = a3[7];
    uint64_t v8 = a1 + v7;
    uint64_t v9 = (uint64_t)a2 + v7;
    uint64_t v10 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
    v12(v8, v9, v10);
    uint64_t v54 = (void (*)(char *, char *, uint64_t))v12;
    v12((uint64_t)v4 + a3[8], (uint64_t)a2 + a3[8], v10);
    uint64_t v13 = a3[10];
    *((unsigned char *)v4 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *((unsigned char *)v4 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v14 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v4 + v14) = *((unsigned char *)a2 + v14);
    uint64_t v15 = a3[14];
    *((unsigned char *)v4 + a3[13]) = *((unsigned char *)a2 + a3[13]);
    uint64_t v16 = (void *)((char *)v4 + v15);
    uint64_t v17 = (uint64_t *)((char *)a2 + v15);
    uint64_t v18 = v17[1];
    void *v16 = *v17;
    v16[1] = v18;
    uint64_t v19 = a3[16];
    *((unsigned char *)v4 + a3[15]) = *((unsigned char *)a2 + a3[15]);
    *((unsigned char *)v4 + v19) = *((unsigned char *)a2 + v19);
    uint64_t v20 = a3[18];
    *((unsigned char *)v4 + a3[17]) = *((unsigned char *)a2 + a3[17]);
    *((unsigned char *)v4 + v20) = *((unsigned char *)a2 + v20);
    uint64_t v21 = a3[20];
    *(void *)((char *)v4 + a3[19]) = *(uint64_t *)((char *)a2 + a3[19]);
    *((unsigned char *)v4 + v21) = *((unsigned char *)a2 + v21);
    uint64_t v22 = a3[22];
    *((unsigned char *)v4 + a3[21]) = *((unsigned char *)a2 + a3[21]);
    *((unsigned char *)v4 + v22) = *((unsigned char *)a2 + v22);
    uint64_t v23 = a3[24];
    *((unsigned char *)v4 + a3[23]) = *((unsigned char *)a2 + a3[23]);
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
    uint64_t v24 = a3[26];
    *(void *)((char *)v4 + a3[25]) = *(uint64_t *)((char *)a2 + a3[25]);
    *(void *)((char *)v4 + v24) = *(uint64_t *)((char *)a2 + v24);
    uint64_t v25 = a3[28];
    *((unsigned char *)v4 + a3[27]) = *((unsigned char *)a2 + a3[27]);
    uint64_t v26 = a3[29];
    char v27 = (char *)v4 + v26;
    *((unsigned char *)v4 + v25) = *((unsigned char *)a2 + v25);
    char v28 = (char *)a2 + v26;
    unint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    if (v29(v28, 1, v10))
    {
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
      memcpy(v27, v28, *(void *)(*(void *)(v30 - 8) + 64));
    }
    else
    {
      v54(v27, v28, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v27, 0, 1, v10);
    }
    uint64_t v32 = a3[31];
    *(void *)((char *)v4 + a3[30]) = *(uint64_t *)((char *)a2 + a3[30]);
    unint64_t v33 = (char *)v4 + v32;
    uint64_t v34 = (uint64_t)a2 + v32;
    *(void *)unint64_t v33 = *(void *)v34;
    uint64_t v35 = a3[32];
    uint64_t v36 = a3[33];
    uint64_t v37 = *(uint64_t *)((char *)a2 + v35);
    v33[8] = *(unsigned char *)(v34 + 8);
    *(void *)((char *)v4 + v35) = v37;
    unint64_t v38 = (char *)v4 + v36;
    uint64_t v39 = (uint64_t *)((char *)a2 + v36);
    unint64_t v40 = *(uint64_t *)((char *)a2 + v36 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
    }
    else
    {
      uint64_t v41 = *v39;
      sub_24D3F9C18(*v39, v40);
      *(void *)unint64_t v38 = v41;
      *((void *)v38 + 1) = v40;
    }
    uint64_t v42 = a3[34];
    uint64_t v43 = a3[35];
    uint64_t v44 = (char *)v4 + v42;
    uint64_t v45 = (uint64_t)a2 + v42;
    *(void *)uint64_t v44 = *(void *)v45;
    v44[8] = *(unsigned char *)(v45 + 8);
    *((unsigned char *)v4 + v43) = *((unsigned char *)a2 + v43);
    uint64_t v46 = a3[36];
    uint64_t v47 = a3[37];
    uint64_t v48 = (char *)v4 + v46;
    uint64_t v49 = (uint64_t)a2 + v46;
    *(_DWORD *)uint64_t v48 = *(_DWORD *)v49;
    v48[4] = *(unsigned char *)(v49 + 4);
    uint64_t v50 = (void *)((char *)v4 + v47);
    int v51 = (uint64_t *)((char *)a2 + v47);
    uint64_t v52 = v51[1];
    void *v50 = *v51;
    v50[1] = v52;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24D4EDE2C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v6 = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_DWORD *)(a1 + 4) = v6;
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  uint64_t v7 = a3[7];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  uint64_t v45 = v12;
  v12((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), v10);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + a3[10]) = *(unsigned char *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v13 = a3[14];
  uint64_t v14 = (void *)(a1 + v13);
  uint64_t v15 = (void *)(a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + a3[16]) = *(unsigned char *)(a2 + a3[16]);
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + a3[18]) = *(unsigned char *)(a2 + a3[18]);
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(unsigned char *)(a1 + a3[20]) = *(unsigned char *)(a2 + a3[20]);
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + a3[22]) = *(unsigned char *)(a2 + a3[22]);
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + a3[24]) = *(unsigned char *)(a2 + a3[24]);
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(void *)(a1 + a3[26]) = *(void *)(a2 + a3[26]);
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  *(unsigned char *)(a1 + a3[28]) = *(unsigned char *)(a2 + a3[28]);
  uint64_t v16 = a3[29];
  uint64_t v17 = (void *)(a1 + v16);
  uint64_t v18 = (const void *)(a2 + v16);
  uint64_t v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v12) = v19(a1 + v16, 1, v10);
  int v20 = v19((uint64_t)v18, 1, v10);
  if (v12)
  {
    if (!v20)
    {
      (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v17, v18, v10);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v17, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v20)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v17, v10);
LABEL_6:
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  v45(v17, v18, v10);
LABEL_7:
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[31];
  uint64_t v23 = a1 + v22;
  uint64_t v24 = (uint64_t *)(a2 + v22);
  uint64_t v25 = *v24;
  *(unsigned char *)(v23 + 8) = *((unsigned char *)v24 + 8);
  *(void *)uint64_t v23 = v25;
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[33];
  char v27 = (uint64_t *)(a1 + v26);
  char v28 = (uint64_t *)(a2 + v26);
  unint64_t v29 = *(void *)(a2 + v26 + 8);
  if (*(void *)(a1 + v26 + 8) >> 60 != 15)
  {
    if (v29 >> 60 != 15)
    {
      uint64_t v31 = *v28;
      sub_24D3F9C18(v31, v29);
      uint64_t v32 = *v27;
      unint64_t v33 = v27[1];
      *char v27 = v31;
      v27[1] = v29;
      sub_24D400DCC(v32, v33);
      goto LABEL_14;
    }
    sub_24D4B12A0((uint64_t)v27);
    goto LABEL_12;
  }
  if (v29 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)char v27 = *(_OWORD *)v28;
    goto LABEL_14;
  }
  uint64_t v30 = *v28;
  sub_24D3F9C18(v30, v29);
  *char v27 = v30;
  v27[1] = v29;
LABEL_14:
  uint64_t v34 = a3[34];
  uint64_t v35 = a1 + v34;
  uint64_t v36 = (uint64_t *)(a2 + v34);
  uint64_t v37 = *v36;
  *(unsigned char *)(v35 + 8) = *((unsigned char *)v36 + 8);
  *(void *)uint64_t v35 = v37;
  *(unsigned char *)(a1 + a3[35]) = *(unsigned char *)(a2 + a3[35]);
  uint64_t v38 = a3[36];
  uint64_t v39 = a1 + v38;
  uint64_t v40 = a2 + v38;
  LODWORD(v37) = *(_DWORD *)v40;
  *(unsigned char *)(v39 + 4) = *(unsigned char *)(v40 + 4);
  *(_DWORD *)uint64_t v39 = v37;
  uint64_t v41 = a3[37];
  uint64_t v42 = (void *)(a1 + v41);
  uint64_t v43 = (void *)(a2 + v41);
  *uint64_t v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24D4EE27C(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  v11((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), v9);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  uint64_t v15 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v15) = *(unsigned char *)(a2 + v15);
  uint64_t v16 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v16) = *(unsigned char *)(a2 + v16);
  uint64_t v17 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  uint64_t v19 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);
  uint64_t v21 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v22 = a3[29];
  uint64_t v23 = (void *)(a1 + v22);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v24 = (const void *)(a2 + v22);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a2 + v22, 1, v9))
  {
    uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    v11(v23, v24, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = a3[31];
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  *(void *)uint64_t v27 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  uint64_t v29 = a3[33];
  *(void *)(a1 + a3[32]) = *(void *)(a2 + a3[32]);
  *(_OWORD *)(a1 + v29) = *(_OWORD *)(a2 + v29);
  uint64_t v30 = a3[34];
  uint64_t v31 = a3[35];
  uint64_t v32 = a1 + v30;
  uint64_t v33 = a2 + v30;
  *(void *)uint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = *(unsigned char *)(v33 + 8);
  *(unsigned char *)(a1 + v31) = *(unsigned char *)(a2 + v31);
  uint64_t v34 = a3[36];
  uint64_t v35 = a3[37];
  uint64_t v36 = a1 + v34;
  uint64_t v37 = a2 + v34;
  *(_DWORD *)uint64_t v36 = *(_DWORD *)v37;
  *(unsigned char *)(v36 + 4) = *(unsigned char *)(v37 + 4);
  *(_OWORD *)(a1 + v35) = *(_OWORD *)(a2 + v35);
  return a1;
}

uint64_t sub_24D4EE548(uint64_t a1, uint64_t a2, int *a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 10) = *(_WORD *)(a2 + 10);
  uint64_t v6 = a3[7];
  uint64_t v7 = (void *)(a1 + v6);
  uint64_t v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(void *, const void *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  uint64_t v56 = v11;
  v11((void *)(a1 + a3[8]), (const void *)(a2 + a3[8]), v9);
  uint64_t v12 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v13 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(a2 + v13);
  uint64_t v14 = a3[14];
  *(unsigned char *)(a1 + a3[13]) = *(unsigned char *)(a2 + a3[13]);
  uint64_t v15 = (void *)(a1 + v14);
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  *uint64_t v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[16];
  *(unsigned char *)(a1 + a3[15]) = *(unsigned char *)(a2 + a3[15]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  uint64_t v20 = a3[18];
  *(unsigned char *)(a1 + a3[17]) = *(unsigned char *)(a2 + a3[17]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[20];
  *(void *)(a1 + a3[19]) = *(void *)(a2 + a3[19]);
  *(unsigned char *)(a1 + v21) = *(unsigned char *)(a2 + v21);
  uint64_t v22 = a3[22];
  *(unsigned char *)(a1 + a3[21]) = *(unsigned char *)(a2 + a3[21]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  uint64_t v23 = a3[24];
  *(unsigned char *)(a1 + a3[23]) = *(unsigned char *)(a2 + a3[23]);
  *(unsigned char *)(a1 + v23) = *(unsigned char *)(a2 + v23);
  uint64_t v24 = a3[26];
  *(void *)(a1 + a3[25]) = *(void *)(a2 + a3[25]);
  *(void *)(a1 + v24) = *(void *)(a2 + v24);
  uint64_t v25 = a3[28];
  *(unsigned char *)(a1 + a3[27]) = *(unsigned char *)(a2 + a3[27]);
  uint64_t v26 = a3[29];
  uint64_t v27 = (void *)(a1 + v26);
  *(unsigned char *)(a1 + v25) = *(unsigned char *)(a2 + v25);
  uint64_t v28 = (const void *)(a2 + v26);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v11) = v29(a1 + v26, 1, v9);
  int v30 = v29((uint64_t)v28, 1, v9);
  if (v11)
  {
    if (!v30)
    {
      (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v27, v28, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v30)
  {
    (*(void (**)(void *, uint64_t))(v10 + 8))(v27, v9);
LABEL_6:
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
    goto LABEL_7;
  }
  v56(v27, v28, v9);
LABEL_7:
  *(void *)(a1 + a3[30]) = *(void *)(a2 + a3[30]);
  swift_bridgeObjectRelease();
  uint64_t v32 = a3[31];
  uint64_t v33 = a3[32];
  uint64_t v34 = a1 + v32;
  uint64_t v35 = a2 + v32;
  *(void *)uint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = *(unsigned char *)(v35 + 8);
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  swift_bridgeObjectRelease();
  uint64_t v36 = a3[33];
  uint64_t v37 = (uint64_t *)(a1 + v36);
  uint64_t v38 = (uint64_t *)(a2 + v36);
  unint64_t v39 = *(void *)(a1 + v36 + 8);
  if (v39 >> 60 != 15)
  {
    unint64_t v40 = v38[1];
    if (v40 >> 60 != 15)
    {
      uint64_t v41 = *v37;
      uint64_t *v37 = *v38;
      v37[1] = v40;
      sub_24D400DCC(v41, v39);
      goto LABEL_12;
    }
    sub_24D4B12A0((uint64_t)v37);
  }
  *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
LABEL_12:
  uint64_t v42 = a3[34];
  uint64_t v43 = a3[35];
  uint64_t v44 = a1 + v42;
  uint64_t v45 = a2 + v42;
  *(void *)uint64_t v44 = *(void *)v45;
  char v46 = *(unsigned char *)(a2 + v43);
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(unsigned char *)(a1 + v43) = v46;
  uint64_t v47 = a3[36];
  uint64_t v48 = a3[37];
  uint64_t v49 = a1 + v47;
  uint64_t v50 = a2 + v47;
  *(_DWORD *)uint64_t v49 = *(_DWORD *)v50;
  *(unsigned char *)(v49 + 4) = *(unsigned char *)(v50 + 4);
  int v51 = (void *)(a1 + v48);
  uint64_t v52 = (uint64_t *)(a2 + v48);
  uint64_t v54 = *v52;
  uint64_t v53 = v52[1];
  *int v51 = v54;
  v51[1] = v53;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24D4EE904(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + a3[7];
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else if (a2 == 2147483646)
  {
    unint64_t v12 = *(void *)(a1 + a3[14] + 8);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
  else
  {
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[29];
    return v15(v17, a2, v16);
  }
}

uint64_t sub_24D4EEA48(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = sub_24DCC8CE8();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + a4[7];
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[14] + 8) = a2;
  }
  else
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + a4[29];
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_24D4EEB80()
{
  sub_24DCC8CE8();
  if (v0 <= 0x3F)
  {
    sub_24D4EED00();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_24D4EED00()
{
  if (!qword_26B199090)
  {
    sub_24DCC8CE8();
    unint64_t v0 = sub_24DCCA3F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B199090);
    }
  }
}

uint64_t getEnumTagSinglePayload for ItemMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDF) {
    goto LABEL_17;
  }
  if (a2 + 33 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 33) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 33;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 33;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 33;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x22;
  int v8 = v6 - 34;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ItemMetadata.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 33 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 33) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDE)
  {
    unsigned int v6 = ((a2 - 223) >> 8) + 1;
    *uint64_t result = a2 + 33;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D4EEEB4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 33;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ItemMetadata.CodingKeys()
{
  return &type metadata for ItemMetadata.CodingKeys;
}

unint64_t sub_24D4EEEF0()
{
  unint64_t result = qword_26986BCC8;
  if (!qword_26986BCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BCC8);
  }
  return result;
}

unint64_t sub_24D4EEF48()
{
  unint64_t result = qword_26986BCD0;
  if (!qword_26986BCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BCD0);
  }
  return result;
}

unint64_t sub_24D4EEFA0()
{
  unint64_t result = qword_26986BCD8;
  if (!qword_26986BCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BCD8);
  }
  return result;
}

uint64_t sub_24D4EEFF4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1684957547 && a2 == 0xE400000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x657449646C696863 && a2 == 0xEE00746E756F436DLL || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024DCFC200 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024DCFC220 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x64656B636F4C7369 && a2 == 0xE800000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6E65646469487369 && a2 == 0xE800000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64656E6E69507369 && a2 == 0xE800000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024DCFC240 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024DCFC260 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024DCFC280 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x6F52636E79537369 && a2 == 0xEA0000000000746FLL || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x65726F6E67497369 && a2 == 0xEC000000746F6F52 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x6F6E67496E497369 && a2 == 0xEE00746F6F526572 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6863617465447369 && a2 == 0xEE00746F6F526465 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x53747365736F6C63 && a2 == 0xEF746F6F52636E79 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x656C617461447369 && a2 == 0xEA00000000007373 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6E6F697463697665 && a2 == 0xEF79636E65677255 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6E6F697463697665 && a2 == 0xEE006E6F73616552 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x6150636E79537369 && a2 == 0xEC00000064657375 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x800000024DCFC2A0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 1702521203 && a2 == 0xE400000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x6C61636973796870 && a2 == 0xEC000000657A6953 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x67616B6361507369 && a2 == 0xE900000000000065 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0x6C646E7542736168 && a2 == 0xEC00000074694265 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0x646573557473616CLL && a2 == 0xEC00000065746144 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 1936154996 && a2 == 0xE400000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x657469726F766166 && a2 == 0xEC0000006B6E6152 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024DCFC2D0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0x69746E6172617571 && a2 == 0xEE00626F6C42656ELL || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x65707954736FLL && a2 == 0xE600000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0x7272757365527369 && a2 == 0xED00006465746365 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0x6E756F436B6E696CLL && a2 == 0xE900000000000074 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024DCFC2F0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 33;
    }
    else {
      return 34;
    }
  }
}

uint64_t sub_24D4EFE74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ItemMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_24D4EFED8()
{
  unint64_t result = qword_26B191368;
  if (!qword_26B191368)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B191368);
  }
  return result;
}

unint64_t sub_24D4EFF2C()
{
  unint64_t result = qword_26B191390;
  if (!qword_26B191390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B191390);
  }
  return result;
}

unint64_t sub_24D4EFF80()
{
  unint64_t result = qword_26B191380;
  if (!qword_26B191380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B191380);
  }
  return result;
}

unint64_t sub_24D4EFFD4()
{
  unint64_t result = qword_26B191348;
  if (!qword_26B191348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B191348);
  }
  return result;
}

uint64_t sub_24D4F0028(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D4F0070()
{
  sub_24DCC97E8();
  unint64_t v0 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(v0, sel_pathComponents);
  uint64_t v2 = sub_24DCC9C28();

  unint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  if (v3 < 2)
  {
    sub_24DCC97E8();
    uint64_t v7 = sub_24DCC97B8();

    swift_bridgeObjectRelease();
  }
  else
  {
    id v4 = objc_msgSend(v0, sel_stringByDeletingLastPathComponent);
    if (v4)
    {
      id v5 = v4;

      return (uint64_t)v5;
    }
    sub_24DCC97E8();
    uint64_t v7 = sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  return v7;
}

id sub_24D4F0164()
{
  sub_24DCC97E8();
  unint64_t v0 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(v0, sel_pathComponents);
  uint64_t v2 = sub_24DCC9C28();

  unint64_t v3 = *(void *)(v2 + 16);
  swift_bridgeObjectRelease();
  if (v3 < 2)
  {
    id v4 = (id)*MEMORY[0x263F05360];
  }
  else
  {
    id v4 = objc_msgSend(v0, sel_lastPathComponent);
    if (!v4)
    {
      sub_24DCC97E8();
      id v4 = (id)sub_24DCC97B8();
      swift_bridgeObjectRelease();
    }
  }

  return v4;
}

id sub_24D4F027C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  id v13 = objc_allocWithZone(v6);
  return sub_24D4F02F0(a1, a2, a3, a4, a5, a6);
}

id sub_24D4F02F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v12 = &v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_appSupportURL];
  uint64_t v13 = sub_24DCC8A58();
  uint64_t v14 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_wharfDirectoryURL], 1, 1, v13);
  v14(&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_dbDirectoryURL], 1, 1, v13);
  v14(&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_dbURL], 1, 1, v13);
  v14(&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_temporaryDirectoryURL], 1, 1, v13);
  v14(&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_stateDirectoryURL], 1, 1, v13);
  *(void *)&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_providerDomainID] = a1;
  uint64_t v15 = &v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_personaIdentifier];
  *(void *)uint64_t v15 = a2;
  *((void *)v15 + 1) = a3;
  *(void *)&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_extensionManager] = a4;
  *(void *)&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_volume] = a5;
  *(void *)&v6[OBJC_IVAR____TtC9libfssync20InternalPathsManager_rtcReporter] = a6;
  v18.receiver = v6;
  v18.super_class = (Class)type metadata accessor for InternalPathsManager();
  return objc_msgSendSuper2(&v18, sel_init);
}

uint64_t type metadata accessor for InternalPathsManager()
{
  uint64_t result = qword_26B197788;
  if (!qword_26B197788) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24D4F04FC@<X0>(uint64_t a1@<X8>)
{
  return sub_24D4F056C((SEL *)&selRef_systemDirectory, 95, (uint64_t (*)(const char *, uint64_t, uint64_t, uint64_t))sub_24DA84D84, a1);
}

uint64_t sub_24D4F0534@<X0>(uint64_t a1@<X8>)
{
  return sub_24D4F056C((SEL *)&selRef_syncRootsDirectory, 103, (uint64_t (*)(const char *, uint64_t, uint64_t, uint64_t))sub_24DA84D84, a1);
}

uint64_t sub_24D4F056C@<X0>(SEL *a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(const char *, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v20 = a3;
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void **)(v4 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_volume);
  if (v15)
  {
    id v16 = [v15 *a1];
    sub_24DCC89E8();

    uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v17(v14, v11, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8) != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v17)(a4, v14, v8);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  sub_24D415F74((uint64_t)v14, (uint64_t *)&unk_26B199050);
  uint64_t result = v20("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/fpfs/InternalPathsManager.swift", 94, 2, a2);
  __break(1u);
  return result;
}

void sub_24D4F0788()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v13 - v6;
  id v8 = objc_msgSend(self, sel_defaultManager);
  sub_24D4F04FC((uint64_t)v7);
  if (v0)
  {
  }
  else
  {
    sub_24DCC8A18();
    uint64_t v9 = v7;
    uint64_t v10 = *(void (**)(char *, uint64_t))(v2 + 8);
    v10(v9, v1);
    uint64_t v11 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_fp_createPathIfNeeded_, v11);

    sub_24D4F0534((uint64_t)v5);
    sub_24DCC8A18();
    v10(v5, v1);
    uint64_t v12 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    objc_msgSend(v8, sel_fp_createPathIfNeeded_, v12);
  }
}

void sub_24D4F0974(uint64_t a1, void (*a2)(char *, id), uint64_t a3)
{
  uint64_t v53 = a2;
  uint64_t v54 = a3;
  v58[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = sub_24DCC8288();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v50 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_24DCC8A58();
  uint64_t v10 = *(void *)(v55 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v55);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v56 = (char *)&v50 - v14;
  uint64_t v15 = *(void **)(v3 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_volume);
  if (!v15) {
    __break(1u);
  }
  v58[0] = 0;
  id v16 = objc_msgSend(v15, sel_rootURLForLocation_error_, a1, v58);
  id v17 = v58[0];
  if (!v16)
  {
    id v38 = v58[0];
    sub_24DCC8828();

    swift_willThrow();
    return;
  }
  objc_super v18 = v16;
  uint64_t v51 = v7;
  uint64_t v52 = v10;
  sub_24DCC89E8();
  id v19 = v17;

  id v20 = objc_msgSend(self, sel_defaultManager);
  sub_24DCC8A18();
  uint64_t v21 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  v58[0] = 0;
  id v22 = objc_msgSend(v20, sel_contentsOfDirectoryAtPath_error_, v21, v58);

  id v23 = v58[0];
  if (v22)
  {
    uint64_t v24 = sub_24DCC9C28();
    id v25 = v23;

    uint64_t v26 = v24;
    uint64_t v27 = *(void *)(v24 + 16);
    uint64_t v28 = v52;
    if (v27)
    {
      uint64_t v50 = v4;
      uint64_t v29 = self;
      int v30 = (void (**)(char *, uint64_t))(v28 + 8);
      uint64_t v31 = v26 + 40;
      uint64_t v51 = v26;
      uint64_t v52 = (unint64_t)v30 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
      do
      {
        swift_bridgeObjectRetain();
        sub_24DCC8978();
        swift_bridgeObjectRelease();
        uint64_t v33 = (void *)sub_24DCC8948();
        id v57 = 0;
        v58[0] = 0;
        unsigned int v34 = objc_msgSend(v29, sel_getProviderDomainID_location_foundDomainID_error_, v33, a1, v58, &v57);

        id v35 = v58[0];
        id v36 = v57;
        if (!v34)
        {
          uint64_t v44 = v36;
          id v45 = v35;
          sub_24DCC8828();

          swift_willThrow();
          char v46 = *v30;
          uint64_t v47 = v55;
          (*v30)(v13, v55);
          swift_bridgeObjectRelease();
          v46(v56, v47);
          return;
        }
        if (v35)
        {
          id v37 = v35;
          v53(v13, v37);
        }
        v31 += 16;
        uint64_t v32 = *v30;
        (*v30)(v13, v55);
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      v32(v56, v55);
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v56, v55);
    }
  }
  else
  {
    id v39 = v58[0];
    unint64_t v40 = (void *)sub_24DCC8828();

    swift_willThrow();
    id v41 = v40;
    sub_24DCC8148();
    sub_24D501368((unint64_t *)&qword_26B1943D0, MEMORY[0x263F06038]);
    LOBYTE(v39) = sub_24DCC86A8();

    uint64_t v42 = *(void (**)(char *, uint64_t))(v51 + 8);
    v42(v9, v6);
    uint64_t v43 = v52;
    if (v39)
    {
      (*(void (**)(char *, uint64_t))(v52 + 8))(v56, v55);
    }
    else
    {
      id v48 = v40;
      sub_24DCC8168();
      char v49 = sub_24DCC86A8();

      v42(v9, v6);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v56, v55);
      if ((v49 & 1) == 0) {
        return;
      }
    }
  }
}

void sub_24D4F0ED8(uint64_t a1)
{
  v47[4] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_24DCC8A58();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v39 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v45 = (char *)v35 - v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v44 = (uint64_t)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v35 - v12;
  id v14 = objc_msgSend(self, sel_defaultManager);
  uint64_t v15 = v1 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_dbDirectoryURL;
  swift_beginAccess();
  uint64_t v43 = v15;
  sub_24D4FFDB8(v15, (uint64_t)v13);
  id v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v42 = v5 + 48;
  if (v41(v13, 1, v4) == 1) {
LABEL_15:
  }
    __break(1u);
  sub_24DCC8A18();
  id v16 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v40 = v5 + 8;
  v17(v13, v4);
  objc_msgSend(v14, sel_fp_createPathIfNeeded_, v16);

  sub_24DCC8A18();
  objc_super v18 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  v47[0] = 0;
  id v19 = objc_msgSend(v14, sel_contentsOfDirectoryAtPath_error_, v18, v47);

  id v20 = v47[0];
  id v21 = v14;
  if (v19)
  {
    uint64_t v38 = a1;
    v35[1] = v2;
    uint64_t v22 = sub_24DCC9C28();
    id v23 = v20;

    uint64_t v36 = v22;
    uint64_t v24 = *(void *)(v22 + 16);
    if (v24)
    {
      uint64_t v25 = v36 + 40;
      id v37 = v14;
      do
      {
        swift_bridgeObjectRetain();
        if (sub_24DCC9A08())
        {
          uint64_t v26 = v45;
          sub_24DCC8978();
          uint64_t v46 = sub_24DCC8948();
          uint64_t v27 = v4;
          v17(v26, v4);
          uint64_t v28 = v44;
          sub_24D4FFDB8(v43, v44);
          if (v41((char *)v28, 1, v4) == 1)
          {
            __break(1u);
            goto LABEL_15;
          }
          uint64_t v29 = v39;
          sub_24DCC8978();
          swift_bridgeObjectRelease();
          v17((char *)v28, v4);
          int v30 = (void *)sub_24DCC8948();
          v17(v29, v4);
          v47[0] = 0;
          id v21 = v37;
          uint64_t v31 = (void *)v46;
          unsigned __int8 v32 = objc_msgSend(v37, sel_moveItemAtURL_toURL_error_, v46, v30, v47);

          id v33 = v47[0];
          uint64_t v4 = v27;
          if ((v32 & 1) == 0)
          {
            id v34 = v33;
            swift_bridgeObjectRelease();
            goto LABEL_13;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
        }
        v25 += 16;
        --v24;
      }
      while (v24);
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    id v34 = v47[0];
LABEL_13:
    sub_24DCC8828();

    swift_willThrow();
  }
}

uint64_t sub_24D4F1368(void *a1)
{
  id v3 = objc_msgSend(a1, sel_nsDomain);
  id v4 = objc_msgSend(v3, sel_personaIdentifier);

  if (v4)
  {
    uint64_t v6 = sub_24DCC97E8();
    uint64_t v8 = v7;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v8 = 0;
  }
  MEMORY[0x270FA5388](v5);
  v10[2] = v1;
  v10[3] = a1;
  sub_24D601898(v6, v8, (uint64_t)sub_24D4FFD34, (uint64_t)v10);
  return swift_bridgeObjectRelease();
}

void sub_24D4F1450(void *a1, void *a2)
{
  id v5 = objc_msgSend(self, sel_defaultManager);
  sub_24D4F0788();
  if (!v2)
  {
    id v6 = a1;
    id v7 = a2;
    id v5 = v5;
    sub_24DBA2C44(v6, v6, v7, v5);
  }
}

id sub_24D4F14F0(uint64_t a1, uint64_t a2, void *a3)
{
  id v121 = a3;
  v124[3] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = sub_24DCC8A58();
  id v7 = *(void **)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v104 = (char *)&v101 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v103 = (uint64_t)&v101 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v105 = (uint64_t)&v101 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v107 = (uint64_t)&v101 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v108 = (uint64_t)&v101 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v109 = (uint64_t)&v101 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v113 = (uint64_t)&v101 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v115 = (uint64_t)&v101 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  int v112 = (char *)&v101 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v116 = (uint64_t)&v101 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  char v114 = (char *)&v101 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v119 = (char *)&v101 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  id v34 = (char *)&v101 - v33;
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v120 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v101 - v36);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  char v117 = (char *)&v101 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  id v41 = (char *)&v101 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v44 = (char *)&v101 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v101 - v45;
  uint64_t v47 = *(void **)(a1 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_volume);
  uint64_t v122 = a1;
  id v106 = v47;
  if (v47)
  {
    v124[0] = 0;
    id v48 = objc_msgSend(v47, sel_supportPathForDomain_failIfNotExisting_error_, a2, 0, v124);
    id v49 = v124[0];
    if (!v48)
    {
      id v100 = v124[0];
      sub_24DCC8828();

      return (id)swift_willThrow();
    }
    uint64_t v50 = v48;
    uint64_t v110 = v3;
    uint64_t v111 = v34;
    sub_24DCC89E8();
    id v51 = v49;

    uint64_t v52 = (void *)v7[7];
    ((void (*)(char *, void, uint64_t, uint64_t))v52)(v46, 0, 1, v6);
    a1 = v122;
  }
  else
  {
    uint64_t v110 = v3;
    uint64_t v111 = v34;
    uint64_t v52 = (void *)v7[7];
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v52)((char *)&v101 - v45, 1, 1, v6);
  }
  uint64_t v53 = a1 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_appSupportURL;
  swift_beginAccess();
  sub_24D4FFD50((uint64_t)v46, v53);
  swift_endAccess();
  sub_24D4FFDB8(v53, (uint64_t)v41);
  uint64_t v54 = (char *)(v7 + 6);
  uint64_t v55 = (uint64_t (*)(char *, uint64_t, uint64_t))v7[6];
  id result = (id)v55(v41, 1, v6);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_24;
  }
  sub_24DCC8978();
  uint64_t v59 = (uint64_t (*)(uint64_t, uint64_t))v7[1];
  uint64_t v58 = (char *)(v7 + 1);
  id v57 = v59;
  v59((uint64_t)v41, v6);
  uint64_t v123 = v58 + 48;
  ((void (*)(char *, void, uint64_t, uint64_t))v52)(v44, 0, 1, v6);
  uint64_t v60 = v122 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_wharfDirectoryURL;
  swift_beginAccess();
  uint64_t v102 = v60;
  sub_24D4FFD50((uint64_t)v44, v60);
  swift_endAccess();
  char v61 = (char *)v120;
  sub_24D4FFDB8(v53, (uint64_t)v120);
  id result = (id)v55(v61, 1, v6);
  if (result == 1)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v118 = v53;
  uint64_t v62 = (uint64_t)v117;
  sub_24DCC8978();
  v57((uint64_t)v61, v6);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v52)(v62, 0, 1, v6);
  uint64_t v63 = v122;
  uint64_t v64 = v122 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_dbDirectoryURL;
  swift_beginAccess();
  sub_24D4FFD50(v62, v64);
  swift_endAccess();
  uint64_t v65 = v64;
  int v66 = v119;
  sub_24D4FFDB8(v65, (uint64_t)v119);
  id result = (id)v55(v66, 1, v6);
  if (result == 1)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v67 = v63;
  uint64_t v68 = (uint64_t)v111;
  sub_24DCC8978();
  v57((uint64_t)v66, v6);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v52)(v68, 0, 1, v6);
  uint64_t v69 = v67 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_dbURL;
  swift_beginAccess();
  sub_24D4FFD50(v68, v69);
  swift_endAccess();
  uint64_t v70 = v118;
  uint64_t v71 = v116;
  sub_24D4FFDB8(v118, v116);
  id result = (id)v55((char *)v71, 1, v6);
  uint64_t v119 = (char *)v52;
  uint64_t v120 = v55;
  if (result == 1)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v72 = v54;
  sub_24DCC97E8();
  uint64_t v73 = (uint64_t)v114;
  sub_24DCC8978();
  swift_bridgeObjectRelease();
  v57(v71, v6);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v119)(v73, 0, 1, v6);
  uint64_t v74 = v67 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_temporaryDirectoryURL;
  swift_beginAccess();
  uint64_t v116 = v74;
  sub_24D4FFD50(v73, v74);
  swift_endAccess();
  uint64_t v75 = v115;
  sub_24D4FFDB8(v70, v115);
  id result = (id)v120((char *)v75, 1, v6);
  if (result == 1)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  sub_24DCC97E8();
  uint64_t v76 = (uint64_t)v112;
  sub_24DCC8978();
  swift_bridgeObjectRelease();
  char v77 = v57;
  char v117 = v58;
  v57(v75, v6);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v119)(v76, 0, 1, v6);
  uint64_t v78 = (char *)(v67 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_stateDirectoryURL);
  swift_beginAccess();
  sub_24D4FFD50(v76, (uint64_t)v78);
  swift_endAccess();
  uint64_t v79 = v113;
  sub_24D4FFDB8(v70, v113);
  uint64_t v123 = v72;
  char v80 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v120;
  id result = (id)v120((char *)v79, 1, v6);
  if (result == 1)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v81 = v110;
  sub_24D4F0ED8(v79);
  if (v81) {
    return (id)v77(v79, v6);
  }
  uint64_t v119 = v78;
  v77(v79, v6);
  uint64_t v82 = v109;
  sub_24D4FFDB8(v116, v109);
  id result = (id)v80(v82, 1, v6);
  if (result == 1) {
    goto LABEL_29;
  }
  uint64_t v83 = (void *)sub_24DCC8948();
  v77(v82, v6);
  v124[0] = 0;
  unsigned int v84 = objc_msgSend(v121, sel_removeItemAtURL_error_, v83, v124);

  id v85 = v124[0];
  if (!v84)
  {
    size_t v86 = v85;
    int v87 = (void *)sub_24DCC8828();

    swift_willThrow();
  }
  uint64_t v88 = v108;
  sub_24D4FFDB8(v116, v108);
  id result = (id)v80(v88, 1, v6);
  if (result == 1) {
    goto LABEL_30;
  }
  sub_24DCC8A18();
  int v89 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  uint64_t v90 = v88;
  int64_t v91 = (void (*)(uint64_t, uint64_t))v77;
  v77(v90, v6);
  objc_msgSend(v121, sel_fp_createPathIfNeeded_, v89);

  uint64_t v92 = v107;
  sub_24D4FFDB8(v102, v107);
  id result = (id)v80(v92, 1, v6);
  if (result == 1)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_24DCC8A18();
  uint64_t v93 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  v77(v92, v6);
  objc_msgSend(v121, sel_fp_createPathIfNeeded_, v93);

  id result = v106;
  if (!v106)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  id v94 = objc_msgSend(v106, sel_purgatoryDirectory);
  uint64_t v95 = v104;
  sub_24DCC89E8();

  sub_24DCC8A18();
  v77((uint64_t)v95, v6);
  char v96 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v121, sel_fp_createPathIfNeeded_, v96);

  uint64_t v97 = v105;
  sub_24D4FFDB8((uint64_t)v119, v105);
  id result = (id)v80(v97, 1, v6);
  if (result != 1)
  {
    sub_24DCC8A18();
    uint64_t v98 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    v91(v97, v6);
    objc_msgSend(v121, sel_fp_createPathIfNeeded_, v98);

    uint64_t v99 = v103;
    sub_24D4FFDB8(v118, v103);
    id result = (id)v80(v99, 1, v6);
    if (result != 1)
    {
      sub_24D4FF31C();
      return (id)((uint64_t (*)(uint64_t, uint64_t))v91)(v99, v6);
    }
    goto LABEL_34;
  }
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_24D4F2150(uint64_t a1)
{
  v18[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_24DCC8A58();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(self, sel_prettyNameForDomain_, a1);
  uint64_t v8 = sub_24DCC97E8();
  unint64_t v10 = v9;

  sub_24D4FF984(v8, v10);
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void **)(v1 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_volume);
  if (!v11) {
    __break(1u);
  }
  v18[0] = 0;
  id v12 = objc_msgSend(v11, sel_rootURLForLocation_error_, 1, v18);
  id v13 = v18[0];
  if (v12)
  {
    uint64_t v14 = v12;
    sub_24DCC89E8();
    id v15 = v13;

    sub_24DCC8978();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    id v17 = v18[0];
    swift_bridgeObjectRelease();
    sub_24DCC8828();

    return swift_willThrow();
  }
}

void sub_24D4F2350(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v82 = *MEMORY[0x263EF8340];
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v74 - v9;
  uint64_t v11 = sub_24DCC8A58();
  uint64_t v12 = *(void *)(v11 - 8);
  char v77 = (char *)v11;
  uint64_t v78 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v74 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v74 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v74 - v19;
  id v21 = objc_msgSend(a1, sel_provider);
  if (!v21) {
    goto LABEL_47;
  }
  uint64_t v22 = v21;
  uint64_t v74 = v2;
  uint64_t v75 = v18;
  uint64_t v76 = a2;
  id v79 = objc_msgSend(a1, sel_identifier);
  if (!v79)
  {
    id v80 = 0;
    unint64_t v81 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    id v80 = (id)0xD000000000000019;
    unint64_t v81 = 0x800000024DCFC5B0;
    id v72 = objc_msgSend(a1, sel_description);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
    goto LABEL_49;
  }
  id v23 = objc_msgSend(v22, sel_identifier);
  uint64_t v24 = sub_24DCC97E8();
  uint64_t v26 = v25;

  if (v24 == 0xD00000000000002BLL && v26 == 0x800000024DCFC5D0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v27 = sub_24DCC97E8();
    uint64_t v29 = v28;
    uint64_t v30 = sub_24DCC97E8();
    id v15 = v77;
    if (v27 == v30 && v29 == v31)
    {
      swift_bridgeObjectRelease_n();
LABEL_10:
      (*(void (**)(char *, uint64_t, uint64_t, char *))(v78 + 56))(v76, 1, 1, v15);
LABEL_28:

      id v46 = v79;

      return;
    }
    char v32 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v32) {
      goto LABEL_10;
    }
    id v33 = objc_msgSend(self, sel_fp_personaSharedDirectory);
    if (!v33) {
      goto LABEL_50;
    }
    id v34 = v33;
    uint64_t v35 = v75;
    sub_24DCC89E8();

    uint64_t v36 = *(void (**)(char *, char *, char *))(v78 + 32);
    v36(v10, v35, v15);
    uint64_t v37 = *(void (**)(char *, void, uint64_t, char *))(v78 + 56);
    v37(v10, 0, 1, v15);
    if ((*(unsigned int (**)(char *, uint64_t, char *))(v78 + 48))(v10, 1, v15) == 1)
    {
      while (1)
      {
        sub_24D415F74((uint64_t)v10, (uint64_t *)&unk_26B199050);
LABEL_49:
        sub_24DCCA978();
        __break(1u);
LABEL_50:
        (*(void (**)(char *, uint64_t, uint64_t, char *))(v78 + 56))(v10, 1, 1, v15);
      }
    }
    v36(v20, v10, v15);
    uint64_t v38 = v76;
    sub_24DCC8978();

    (*(void (**)(char *, char *))(v78 + 8))(v20, v15);
    uint64_t v39 = v38;
    uint64_t v40 = v15;
LABEL_17:
    v37(v39, 0, 1, v40);
    return;
  }
  if (v24 == 0xD000000000000032 && v26 == 0x800000024DCFC600 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    if (!fpfs_supports_sokoban())
    {
      uint64_t v41 = sub_24DCC97E8();
      uint64_t v43 = v42;
      if (v41 == sub_24DCC97E8() && v43 == v44)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v45 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v45 & 1) == 0)
        {
          id v53 = objc_msgSend(self, sel_fp_personaSharedDirectory);
          uint64_t v54 = v77;
          if (v53)
          {
            uint64_t v55 = v53;
            uint64_t v56 = v75;
            sub_24DCC89E8();

            id v57 = *(void (**)(char *, char *, char *))(v78 + 32);
            v57(v8, v56, v54);
            uint64_t v37 = *(void (**)(char *, void, uint64_t, char *))(v78 + 56);
            v37(v8, 0, 1, v54);
            if ((*(unsigned int (**)(char *, uint64_t, char *))(v78 + 48))(v8, 1, v54) != 1)
            {
              v57(v15, v8, v54);
              uint64_t v58 = v76;
              sub_24DCC8978();

              (*(void (**)(char *, char *))(v78 + 8))(v15, v54);
              uint64_t v39 = v58;
              uint64_t v40 = v54;
              goto LABEL_17;
            }
          }
          else
          {
            (*(void (**)(char *, uint64_t, uint64_t, char *))(v78 + 56))(v8, 1, 1, v77);
          }
          sub_24D415F74((uint64_t)v8, (uint64_t *)&unk_26B199050);
          goto LABEL_49;
        }
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, char *))(v78 + 56))(v76, 1, 1, v77);
    goto LABEL_28;
  }
  if (v24 == 0xD00000000000001ELL && v26 == 0x800000024DCFC640)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v47 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0) {
      goto LABEL_43;
    }
  }
  if (os_variant_has_internal_content())
  {
    id v48 = objc_msgSend(a1, sel_nsDomain);
    id v49 = objc_msgSend(v48, sel_identifier);

    uint64_t v50 = sub_24DCC97E8();
    uint64_t v52 = v51;

    if (v50 == 0xD00000000000002ALL && v52 == 0x800000024DCFC680)
    {
      swift_bridgeObjectRelease();
LABEL_40:
      uint64_t v60 = *(void **)(v74 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_volume);
      if (v60)
      {
        id v80 = 0;
        id v61 = objc_msgSend(v60, sel_rootURLForLocation_error_, 1, &v80);
        id v62 = v80;
        uint64_t v63 = v77;
        if (v61)
        {
          uint64_t v64 = v61;
          uint64_t v65 = v75;
          sub_24DCC89E8();
          id v66 = v62;

          uint64_t v67 = v76;
          sub_24DCC8978();

          (*(void (**)(char *, char *))(v78 + 8))(v65, v63);
          (*(void (**)(char *, void, uint64_t, char *))(v78 + 56))(v67, 0, 1, v63);
        }
        else
        {
          id v73 = v80;
          sub_24DCC8828();

          swift_willThrow();
          swift_unexpectedError();
          __break(1u);
        }
        return;
      }
      __break(1u);
LABEL_47:
      id v80 = 0;
      unint64_t v81 = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      id v80 = (id)0xD000000000000017;
      unint64_t v81 = 0x800000024DCFC590;
      id v71 = objc_msgSend(a1, sel_description);
      sub_24DCC97E8();

      sub_24DCC9968();
      swift_bridgeObjectRelease();
      goto LABEL_49;
    }
    char v59 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v59) {
      goto LABEL_40;
    }
  }
LABEL_43:

  uint64_t v68 = *(void (**)(uint64_t, uint64_t, uint64_t, char *))(v78 + 56);
  uint64_t v69 = v76;
  uint64_t v70 = v77;

  v68((uint64_t)v69, 1, 1, v70);
}

void sub_24D4F2E78(void *a1@<X1>, uint64_t a2@<X8>)
{
  v14[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D4F2350(a1, v6);
  uint64_t v7 = sub_24DCC8A58();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_24D415F74((uint64_t)v6, (uint64_t *)&unk_26B199050);
    id v9 = objc_msgSend(a1, sel_volume);
    v14[0] = 0;
    id v10 = objc_msgSend(v9, sel_findProviderDomainDirectory_location_error_, a1, 1, v14);

    id v11 = v14[0];
    if (v10)
    {
      sub_24DCC89E8();
      id v12 = v11;
    }
    else
    {
      id v13 = v14[0];
      sub_24DCC8828();

      swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  }
}

void sub_24D4F3058(void *a1@<X0>, uint64_t a2@<X8>)
{
  v14[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D4F2350(a1, v6);
  uint64_t v7 = sub_24DCC8A58();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_24D415F74((uint64_t)v6, (uint64_t *)&unk_26B199050);
    id v9 = objc_msgSend(a1, sel_volume);
    v14[0] = 0;
    id v10 = objc_msgSend(v9, sel_findProviderDomainDirectory_location_error_, a1, 1, v14);

    id v11 = v14[0];
    if (v10)
    {
      sub_24DCC89E8();
      id v12 = v11;
    }
    else
    {
      id v13 = v14[0];
      sub_24DCC8828();

      swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(a2, v6, v7);
  }
}

uint64_t sub_24D4F3234@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D4F2350(a1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_24D4F3058(a1, (uint64_t)v11);
    uint64_t result = sub_24D415F74((uint64_t)v7, (uint64_t *)&unk_26B199050);
    if (v2) {
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
  }
  id v13 = objc_msgSend(self, sel_defaultManager);
  sub_24DCC8A18();
  uint64_t v14 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  unsigned __int8 v15 = objc_msgSend(v13, sel_fileExistsAtPath_, v14);

  if ((v15 & 1) == 0) {
    goto LABEL_11;
  }
  char v16 = sub_24D4FFC3C((uint64_t)v11, a1);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  if (v16)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a2, v11, v8);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(a2, 0, 1, v8);
  }
  else
  {
LABEL_11:
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a2, 1, 1, v8);
  }
}

uint64_t sub_24D4F3508@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  return sub_24D4F3234(a1, a2);
}

void sub_24D4F3530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void **)(v4 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_rtcReporter);
  if (v6)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197F00);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
    id v10 = v6;
    uint64_t v11 = MEMORY[0x263F8D310];
    sub_24DCCA688();
    *(void *)(inited + 96) = v11;
    *(void *)(inited + 72) = a1;
    *(void *)(inited + 80) = a2;
    swift_bridgeObjectRetain();
    sub_24D4290BC(inited);
    id v12 = (void *)sub_24DCC9558();
    swift_bridgeObjectRelease();
    id v13 = (void *)sub_24DCC8818();
    objc_msgSend(v10, sel_postReportWithCategory_type_payload_error_, 1, 1, v12, v13);
  }
  if (a4)
  {
    uint64_t v14 = (void *)sub_24DCC97B8();
    unsigned __int8 v15 = (void *)sub_24DCC97B8();
    char v16 = (void *)sub_24DCC8818();
    FPCaptureLogsForOperationForSwift();
  }
}

void sub_24D4F36E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v103 = a1;
  v110[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v100 = sub_24DCC9078();
  uint64_t v102 = *(void *)(v100 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v100);
  uint64_t v99 = (char *)&v90 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v104 = (char *)&v90 - v5;
  uint64_t v105 = sub_24DCC8A58();
  uint64_t v107 = *(void *)(v105 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v105);
  uint64_t v98 = (char *)&v90 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v97 = (char *)&v90 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v12 = (char *)&v90 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  unsigned __int8 v15 = (char *)&v90 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v90 - v16;
  uint64_t v18 = sub_24DCC8408();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v21 = (char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(v110[0]) = 17;
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24D501368((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
  sub_24DCC8808();
  uint64_t v22 = (void *)sub_24DCC83E8();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  sub_24D4F3530(0xD000000000000022, 0x800000024DCFC4D0, 0xD000000000000018, 0x800000024DCFC500);

  id v23 = v106;
  sub_24D4F0788();
  if (!v23)
  {
    id v106 = 0;
    uint64_t v101 = v17;
    uint64_t v24 = *(void **)(v1 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_volume);
    if (v24)
    {
      id v25 = objc_msgSend(v24, sel_removedURL);
      uint64_t v26 = v101;
      sub_24DCC89E8();

      id v27 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v28 = v107 + 16;
      uint64_t v29 = *(void (**)(char *, void *, uint64_t))(v107 + 16);
      uint64_t v30 = v103;
      uint64_t v31 = v105;
      v29(v15, v103, v105);
      char v96 = v12;
      uint64_t v94 = v28;
      uint64_t v93 = v29;
      v29(v12, v26, v31);
      char v32 = sub_24DCC9068();
      os_log_type_t v33 = sub_24DCCA108();
      int v34 = v33;
      BOOL v35 = os_log_type_enabled(v32, v33);
      uint64_t v95 = v2;
      if (v35)
      {
        uint64_t v36 = swift_slowAlloc();
        uint64_t v92 = (void *)swift_slowAlloc();
        v110[0] = v92;
        *(_DWORD *)uint64_t v36 = 136315394;
        uint64_t v37 = (void *)sub_24DCC8948();
        int v91 = v34;
        uint64_t v38 = v37;
        id v39 = objc_msgSend(v37, sel_fp_shortDescription);

        uint64_t v40 = sub_24DCC97E8();
        unint64_t v42 = v41;

        uint64_t v109 = sub_24D418FB4(v40, v42, (uint64_t *)v110);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        uint64_t v43 = *(void (**)(char *, uint64_t))(v107 + 8);
        v43(v15, v105);
        *(_WORD *)(v36 + 12) = 2080;
        uint64_t v90 = v36 + 14;
        uint64_t v44 = v96;
        char v45 = (void *)sub_24DCC8948();
        id v46 = objc_msgSend(v45, sel_fp_shortDescription);

        uint64_t v47 = sub_24DCC97E8();
        unint64_t v49 = v48;

        uint64_t v50 = v43;
        uint64_t v109 = sub_24D418FB4(v47, v49, (uint64_t *)v110);
        sub_24DCCA428();
        uint64_t v31 = v105;
        swift_bridgeObjectRelease();
        v43(v44, v31);
        _os_log_impl(&dword_24D3D0000, v32, (os_log_type_t)v91, "trying to move un-owned directory %s to the purgatory %s", (uint8_t *)v36, 0x16u);
        uint64_t v51 = v92;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v51, -1, -1);
        uint64_t v52 = v36;
        uint64_t v30 = v103;
        MEMORY[0x25332B030](v52, -1, -1);
      }
      else
      {
        uint64_t v50 = *(void (**)(char *, uint64_t))(v107 + 8);
        v50(v15, v31);
        v50(v96, v31);
      }

      id v53 = v104;
      uint64_t v54 = v100;
      uint64_t v104 = *(char **)(v102 + 8);
      ((void (*)(char *, uint64_t))v104)(v53, v100);
      id v55 = objc_msgSend(self, sel_defaultManager);
      uint64_t v56 = (void *)sub_24DCC8948();
      id v57 = (void *)sub_24DCC8948();
      v110[0] = 0;
      uint64_t v58 = v30;
      unsigned int v59 = objc_msgSend(v55, sel_moveItemAtURL_toURL_error_, v56, v57, v110);

      if (v59)
      {
        uint64_t v60 = qword_26986A778;
        id v61 = v110[0];
        if (v60 != -1) {
          swift_once();
        }
        id v62 = (id)qword_26986E3E0;
        uint64_t v63 = v97;
        uint64_t v64 = v101;
        sub_24DCC89A8();
        uint64_t v65 = (void *)sub_24DCC8948();
        v50(v63, v31);
        objc_msgSend(v62, sel_purgeAsyncAtUrl_, v65);

        v50(v64, v31);
      }
      else
      {
        id v106 = v50;
        id v66 = v110[0];
        uint64_t v67 = (void *)sub_24DCC8828();

        swift_willThrow();
        id v68 = (id)fpfs_current_or_default_log();
        uint64_t v69 = v99;
        sub_24DCC9088();
        uint64_t v70 = v98;
        v93(v98, v58, v31);
        id v71 = v67;
        id v72 = v67;
        uint64_t v73 = v31;
        uint64_t v74 = sub_24DCC9068();
        os_log_type_t v75 = sub_24DCCA128();
        if (os_log_type_enabled(v74, v75))
        {
          uint64_t v76 = swift_slowAlloc();
          uint64_t v97 = (char *)swift_slowAlloc();
          uint64_t v103 = (void *)swift_slowAlloc();
          v110[0] = v103;
          *(_DWORD *)uint64_t v76 = 136446466;
          char v77 = (void *)sub_24DCC8948();
          id v78 = objc_msgSend(v77, sel_fp_shortDescription);

          uint64_t v79 = sub_24DCC97E8();
          unint64_t v81 = v80;

          uint64_t v109 = sub_24D418FB4(v79, v81, (uint64_t *)v110);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          uint64_t v82 = v106;
          v106(v70, v105);
          *(_WORD *)(v76 + 12) = 2112;
          swift_getErrorValue();
          id v83 = sub_24DBA2828(v108);
          uint64_t v109 = (uint64_t)v83;
          sub_24DCCA428();
          unsigned int v84 = v97;
          *(void *)uint64_t v97 = v83;

          id v85 = v82;
          _os_log_impl(&dword_24D3D0000, v74, v75, "move of un-owned directory %{public}s to purgatory, ended with error %@", (uint8_t *)v76, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
          swift_arrayDestroy();
          size_t v86 = v101;
          MEMORY[0x25332B030](v84, -1, -1);
          int v87 = v103;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v87, -1, -1);
          uint64_t v88 = v76;
          uint64_t v73 = v105;
          MEMORY[0x25332B030](v88, -1, -1);

          ((void (*)(char *, uint64_t))v104)(v99, v100);
        }
        else
        {
          int v89 = v70;
          id v85 = v106;
          v106(v89, v73);

          ((void (*)(char *, uint64_t))v104)(v69, v54);
          size_t v86 = v101;
        }
        sub_24D4F3530(0xD000000000000018, 0x800000024DCFC520, 0xD00000000000001DLL, 0x800000024DCFC540);
        swift_willThrow();
        v85(v86, v73);
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_24D4F41F0@<X0>(int a1@<W0>, BOOL *a2@<X8>)
{
  uint64_t v9 = *MEMORY[0x263EF8340];
  memset(&v8, 0, 28);
  memset(&v8.st_atimespec, 0, 112);
  uint64_t result = fstat(a1, &v8);
  BOOL v5 = 0;
  if (!result)
  {
    int st_mode = v8.st_mode;
    int v7 = sub_24DCC9118() & st_mode;
    uint64_t result = sub_24DCC9118();
    if (v7 == (unsigned __int16)result)
    {
      uint64_t result = fgetxattr(a1, "com.apple.fileprovider.detached-link#P", 0, 0, 0, 0);
      BOOL v5 = result >= 0;
    }
    else
    {
      BOOL v5 = 0;
    }
  }
  *a2 = v5;
  return result;
}

uint64_t sub_24D4F42E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v73 = a3;
  uint64_t v75 = sub_24DCC8A58();
  uint64_t v78 = *(void *)(v75 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v75);
  uint64_t v9 = (char *)&v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v63 - v10;
  uint64_t v12 = sub_24DCC9078();
  uint64_t v76 = *(void *)(v12 - 8);
  uint64_t v77 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  unsigned __int8 v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v63 - v16;
  uint64_t v18 = sub_24DCC8A18();
  uint64_t v20 = v19;
  uint64_t v74 = v4;
  uint64_t v80 = v4;
  uint64_t v81 = a1;
  uint64_t v21 = a1;
  uint64_t v82 = a2;
  *(_OWORD *)unsigned int v84 = xmmword_24DCD46F0;
  swift_bridgeObjectRetain();
  uint64_t result = sub_24DBAA044(4294967294, v18, v20, 0x200000, 0, 0, (uint64_t)v84, (uint64_t)sub_24D4FFE20, (uint64_t)v79);
  uint64_t v70 = v9;
  uint64_t v71 = a2;
  uint64_t v23 = v78;
  uint64_t v24 = v75;
  uint64_t v72 = v21;
  uint64_t v69 = v15;
  unint64_t v25 = v84[1];
  if (v84[1] == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v26 = v84[0];
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v28 = v71;
    uint64_t v27 = v72;
    if (v25)
    {
      uint64_t v68 = v26;
      id v29 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v30 = v17;
      uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
      char v32 = v11;
      uint64_t v33 = v24;
      v31(v11, v28, v24);
      int v34 = v70;
      v31(v70, v27, v33);
      swift_bridgeObjectRetain();
      uint64_t v67 = v30;
      BOOL v35 = sub_24DCC9068();
      os_log_type_t v36 = sub_24DCCA148();
      int v37 = v36;
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v38 = swift_slowAlloc();
        int v65 = v37;
        uint64_t v39 = v38;
        uint64_t v66 = swift_slowAlloc();
        v84[0] = v66;
        *(_DWORD *)uint64_t v39 = 136315650;
        os_log_t v64 = v35;
        uint64_t v40 = (void *)sub_24DCC8948();
        id v41 = objc_msgSend(v40, sel_fp_shortDescription);

        uint64_t v42 = sub_24DCC97E8();
        unint64_t v44 = v43;

        uint64_t v83 = sub_24D418FB4(v42, v44, v84);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        char v45 = *(void (**)(char *, uint64_t))(v78 + 8);
        v45(v32, v33);
        *(_WORD *)(v39 + 12) = 2080;
        uint64_t v78 = v39 + 14;
        id v46 = (void *)sub_24DCC8948();
        id v47 = objc_msgSend(v46, sel_fp_shortDescription);

        uint64_t v48 = sub_24DCC97E8();
        unint64_t v50 = v49;

        uint64_t v83 = sub_24D418FB4(v48, v50, v84);
        sub_24DCCA428();
        uint64_t v28 = v71;
        swift_bridgeObjectRelease();
        v45(v70, v33);
        uint64_t v27 = v72;
        *(_WORD *)(v39 + 22) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v51 = v68;
        uint64_t v83 = sub_24D418FB4(v68, v25, v84);
        sub_24DCCA428();
        sub_24D4FFE40(v51, v25);
        sub_24D4FFE40(v51, v25);
        swift_bridgeObjectRelease();
        BOOL v35 = v64;
        _os_log_impl(&dword_24D3D0000, v64, (os_log_type_t)v65, "refreshing relocation symlink from %s to %s: %s", (uint8_t *)v39, 0x20u);
        uint64_t v52 = v66;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v52, -1, -1);
        MEMORY[0x25332B030](v39, -1, -1);
      }
      else
      {
        id v53 = *(void (**)(char *, uint64_t))(v78 + 8);
        v53(v11, v33);
        v53(v34, v33);
        uint64_t v54 = v68;
        sub_24D4FFE40(v68, v25);
        sub_24D4FFE40(v54, v25);
      }

      id v55 = *(void (**)(char *, uint64_t))(v76 + 8);
      v55(v67, v77);
      sub_24DCC8A18();
      uint64_t v56 = sub_24DCC9898();
      swift_bridgeObjectRelease();
      int v57 = unlink((const char *)(v56 + 32));
      swift_release();
      if (v57)
      {
        id v58 = (id)fpfs_current_or_default_log();
        unsigned int v59 = v69;
        sub_24DCC9088();
        uint64_t v60 = sub_24DCC9068();
        os_log_type_t v61 = sub_24DCCA128();
        if (os_log_type_enabled(v60, v61))
        {
          id v62 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)id v62 = 67109120;
          LODWORD(v84[0]) = MEMORY[0x253327160]();
          sub_24DCCA428();
          _os_log_impl(&dword_24D3D0000, v60, v61, "couldn't remove existing symlink: %{darwin.errno}d", v62, 8u);
          MEMORY[0x25332B030](v62, -1, -1);
        }

        return ((uint64_t (*)(char *, uint64_t))v55)(v59, v77);
      }
      else
      {
        return sub_24D4F4B58(v27, v28, v73);
      }
    }
  }
  return result;
}

uint64_t sub_24D4F49A0@<X0>(int a1@<W0>, void *a2@<X8>)
{
  uint64_t v13 = *MEMORY[0x263EF8340];
  uint64_t result = sub_24D4FFE74(a1);
  if (result)
  {
    memset(&v12, 0, 28);
    memset(&v12.st_atimespec, 0, 112);
    sub_24DCC8A18();
    uint64_t v4 = sub_24DCC9898();
    swift_bridgeObjectRelease();
    int v5 = lstat((const char *)(v4 + 32), &v12);
    uint64_t result = swift_release();
    if (!v5)
    {
      int st_mode = v12.st_mode;
      int v7 = sub_24DCC9108() & st_mode;
      uint64_t result = sub_24DCC9108();
      if (v7 == (unsigned __int16)result)
      {
        memset(&v11, 0, 28);
        memset(&v11.st_atimespec, 0, 112);
        sub_24DCC8A18();
        uint64_t v8 = sub_24DCC9898();
        swift_bridgeObjectRelease();
        int v9 = stat((const char *)(v8 + 32), &v11);
        uint64_t result = swift_release();
        if (v9)
        {
          uint64_t v10 = "target of symlink doesn't exists";
LABEL_11:
          *a2 = 0xD000000000000020;
          a2[1] = (unint64_t)(v10 - 32) | 0x8000000000000000;
          return result;
        }
        if (v11.st_dev != v12.st_dev || v11.st_ino != v12.st_ino)
        {
          uint64_t v10 = "symlink points to the wrong item";
          goto LABEL_11;
        }
      }
    }
  }
  *a2 = 0;
  a2[1] = 0;
  return result;
}

uint64_t sub_24D4F4B58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v96 = a3;
  uint64_t v5 = sub_24DCC8A58();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v95 = (char *)v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v94 = (char *)v86 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v86 - v12;
  MEMORY[0x270FA5388](v11);
  unsigned __int8 v15 = (char *)v86 - v14;
  uint64_t v16 = sub_24DCC9078();
  uint64_t v98 = *(void *)(v16 - 8);
  uint64_t v99 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v86 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)v86 - v20;
  id v22 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v100 = a2;
  v23(v15, a2, v5);
  uint64_t v101 = a1;
  int v91 = v23;
  uint64_t v92 = v6 + 16;
  v23(v13, a1, v5);
  uint64_t v24 = sub_24DCC9068();
  os_log_type_t v25 = sub_24DCCA148();
  int v26 = v25;
  BOOL v27 = os_log_type_enabled(v24, v25);
  uint64_t v93 = v6;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    os_log_t v88 = v24;
    uint64_t v29 = v28;
    int v89 = (uint64_t (*)(void, void))swift_slowAlloc();
    uint64_t v102 = v89;
    *(_DWORD *)uint64_t v29 = 136446466;
    uint64_t v90 = v19;
    int v87 = v26;
    uint64_t v30 = (void *)sub_24DCC8948();
    id v31 = objc_msgSend(v30, sel_fp_shortDescription);

    uint64_t v32 = sub_24DCC97E8();
    unint64_t v34 = v33;

    uint64_t v104 = sub_24D418FB4(v32, v34, (uint64_t *)&v102);
    v86[1] = &v105;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    BOOL v35 = *(void (**)(char *, uint64_t))(v6 + 8);
    v35(v15, v5);
    *(_WORD *)(v29 + 12) = 2082;
    os_log_type_t v36 = (void *)sub_24DCC8948();
    id v37 = objc_msgSend(v36, sel_fp_shortDescription);

    uint64_t v38 = sub_24DCC97E8();
    unint64_t v40 = v39;

    uint64_t v104 = sub_24D418FB4(v38, v40, (uint64_t *)&v102);
    sub_24DCCA428();
    uint64_t v19 = v90;
    swift_bridgeObjectRelease();
    id v41 = v13;
    uint64_t v42 = v5;
    unint64_t v43 = v35;
    v35(v41, v5);
    os_log_t v44 = v88;
    _os_log_impl(&dword_24D3D0000, v88, (os_log_type_t)v87, "create relocation symlink from %{public}s to %{public}s", (uint8_t *)v29, 0x16u);
    char v45 = v89;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v45, -1, -1);
    MEMORY[0x25332B030](v29, -1, -1);
  }
  else
  {
    unint64_t v43 = *(void (**)(char *, uint64_t))(v6 + 8);
    v43(v15, v5);
    id v46 = v13;
    uint64_t v42 = v5;
    v43(v46, v5);
  }
  id v47 = *(void (**)(char *, uint64_t))(v98 + 8);
  v47(v21, v99);
  sub_24DCC8A18();
  sub_24DCC8A18();
  uint64_t v48 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  int v50 = symlink((const char *)(v48 + 32), (const char *)(v49 + 32));
  swift_release();
  uint64_t v51 = swift_release();
  if (v50 && MEMORY[0x253327160](v51) != 17)
  {
    id v58 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    unsigned int v59 = v91;
    v91(v94, v100, v42);
    v59(v95, v101, v42);
    uint64_t v60 = sub_24DCC9068();
    os_log_type_t v61 = sub_24DCCA128();
    int v62 = v61;
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v63 = swift_slowAlloc();
      uint64_t v96 = v42;
      uint64_t v64 = v63;
      uint64_t v101 = swift_slowAlloc();
      uint64_t v102 = (uint64_t (*)(void, void))v101;
      *(_DWORD *)uint64_t v64 = 136315650;
      os_log_t v97 = v60;
      int v65 = v94;
      uint64_t v66 = (void *)sub_24DCC8948();
      LODWORD(v100) = v62;
      uint64_t v67 = v66;
      uint64_t v90 = v19;
      id v68 = objc_msgSend(v66, sel_fp_shortDescription);
      uint64_t v69 = v95;
      uint64_t v70 = v43;
      int v89 = (uint64_t (*)(void, void))v43;
      id v71 = v68;

      uint64_t v72 = sub_24DCC97E8();
      unint64_t v74 = v73;

      uint64_t v104 = sub_24D418FB4(v72, v74, (uint64_t *)&v102);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      uint64_t v75 = v96;
      v70(v65, v96);
      *(_WORD *)(v64 + 12) = 2080;
      uint64_t v76 = (void *)sub_24DCC8948();
      id v77 = objc_msgSend(v76, sel_fp_shortDescription);

      uint64_t v78 = sub_24DCC97E8();
      unint64_t v80 = v79;

      uint64_t v104 = sub_24D418FB4(v78, v80, (uint64_t *)&v102);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      uint64_t v81 = v89(v69, v75);
      *(_WORD *)(v64 + 22) = 1024;
      LODWORD(v104) = MEMORY[0x253327160](v81);
      sub_24DCCA428();
      os_log_t v82 = v97;
      _os_log_impl(&dword_24D3D0000, v97, (os_log_type_t)v100, "cannot create symlink from %s to %s: %{darwin.errno}d", (uint8_t *)v64, 0x1Cu);
      uint64_t v83 = v101;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v83, -1, -1);
      MEMORY[0x25332B030](v64, -1, -1);

      unsigned int v84 = v90;
    }
    else
    {
      v43(v94, v42);
      v43(v95, v42);

      unsigned int v84 = v19;
    }
    return ((uint64_t (*)(char *, uint64_t))v47)(v84, v99);
  }
  else
  {
    uint64_t v52 = v100;
    uint64_t v53 = sub_24DCC8A18();
    uint64_t v55 = v54;
    MEMORY[0x270FA5388](v53);
    uint64_t v56 = v101;
    v86[-4] = v52;
    v86[-3] = v56;
    os_log_t v85 = v97;
    uint64_t v102 = 0;
    __int16 v103 = 256;
    swift_bridgeObjectRetain();
    uint64_t result = sub_24DBA9CF4(4294967294, v53, v55, 0x200000, 0, 0, (uint64_t)&v102, (uint64_t)sub_24D4FFE54, (uint64_t)&v86[-6]);
    if ((v103 & 0x100) != 0) {
      __break(1u);
    }
    else {
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_24D4F53E4@<X0>(int a1@<W0>, char *a2@<X1>, uint64_t a3@<X2>, NSObject *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v105 = a5;
  os_log_t v98 = a4;
  uint64_t v100 = a3;
  int v99 = a1;
  v111[1] = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v106 = *(void *)(v6 - 8);
  uint64_t v107 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v101 = (char *)v96 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (stat *)((char *)v96 - v10);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v96 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v96 - v15;
  uint64_t v17 = sub_24DCC9078();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v103 = v17;
  uint64_t v104 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v102 = (char *)v96 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)v96 - v22;
  MEMORY[0x270FA5388](v21);
  os_log_type_t v25 = (char *)v96 - v24;
  memset(&v109, 0, 28);
  memset(&v109.st_atimespec, 0, 112);
  int v26 = a2;
  sub_24DCC8A18();
  uint64_t v27 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  LODWORD(a2) = stat((const char *)(v27 + 32), &v109);
  swift_release();
  if (a2)
  {
    id v28 = (id)fpfs_current_or_default_log();
    uint64_t v29 = v102;
    sub_24DCC9088();
    uint64_t v30 = v106;
    id v31 = v101;
    uint64_t v32 = v26;
    uint64_t v33 = v107;
    (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v101, v32, v107);
    unint64_t v34 = sub_24DCC9068();
    os_log_type_t v35 = sub_24DCCA128();
    int v36 = v35;
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v100 = swift_slowAlloc();
      *(void *)&v110.st_dev = v100;
      *(_DWORD *)uint64_t v37 = 136315394;
      os_log_t v98 = (os_log_t)(v37 + 4);
      int v99 = v36;
      uint64_t v38 = (void *)sub_24DCC8948();
      id v39 = objc_msgSend(v38, sel_fp_shortDescription);

      uint64_t v40 = sub_24DCC97E8();
      unint64_t v42 = v41;

      v111[0] = sub_24D418FB4(v40, v42, (uint64_t *)&v110.st_dev);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      uint64_t v43 = (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v31, v107);
      *(_WORD *)(v37 + 12) = 1024;
      LODWORD(v111[0]) = MEMORY[0x253327160](v43);
      sub_24DCCA428();
      _os_log_impl(&dword_24D3D0000, v34, (os_log_type_t)v99, "cannot stat target of symlink at %s: %{darwin.errno}d", (uint8_t *)v37, 0x12u);
      uint64_t v44 = v100;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v44, -1, -1);
      MEMORY[0x25332B030](v37, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v33);
    }

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v29, v103);
    uint64_t v66 = v105;
    goto LABEL_19;
  }
  uint64_t v101 = v26;
  uint64_t v102 = v14;
  os_log_t v97 = v11;
  char v45 = v25;
  uint64_t v47 = v106;
  uint64_t v46 = v107;
  memset(&v110, 0, 28);
  memset(&v110.st_atimespec, 0, 112);
  uint64_t v48 = v100;
  sub_24DCC8A18();
  uint64_t v49 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  int v50 = lstat((const char *)(v49 + 32), &v110);
  swift_release();
  if (!v50)
  {
    if (v109.st_dev != v110.st_dev || v109.st_ino != v110.st_ino)
    {
      id v72 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      unint64_t v73 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
      v73(v16, v101, v46);
      uint64_t v74 = v48;
      uint64_t v75 = v102;
      v73(v102, (char *)v74, v46);
      uint64_t v76 = sub_24DCC9068();
      os_log_type_t v77 = sub_24DCCA128();
      int v78 = v77;
      if (os_log_type_enabled(v76, v77))
      {
        uint64_t v79 = swift_slowAlloc();
        uint64_t v101 = (char *)swift_slowAlloc();
        v111[0] = (uint64_t)v101;
        *(_DWORD *)uint64_t v79 = 136315394;
        v96[1] = v79 + 4;
        int v99 = v78;
        unint64_t v80 = (void *)sub_24DCC8948();
        id v81 = objc_msgSend(v80, sel_fp_shortDescription);

        uint64_t v82 = sub_24DCC97E8();
        os_log_t v98 = v76;
        uint64_t v100 = (uint64_t)v45;
        unint64_t v84 = v83;

        uint64_t v108 = sub_24D418FB4(v82, v84, v111);
        os_log_t v97 = &v109;
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        os_log_t v85 = *(void (**)(char *, uint64_t))(v47 + 8);
        uint64_t v86 = v107;
        v85(v16, v107);
        *(_WORD *)(v79 + 12) = 2080;
        uint64_t v106 = v79 + 14;
        int v87 = (void *)sub_24DCC8948();
        id v88 = objc_msgSend(v87, sel_fp_shortDescription);

        uint64_t v89 = sub_24DCC97E8();
        unint64_t v91 = v90;

        uint64_t v108 = sub_24D418FB4(v89, v91, v111);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        v85(v75, v86);
        os_log_t v92 = v98;
        _os_log_impl(&dword_24D3D0000, v98, (os_log_type_t)v99, "symlink at %s doesn't target %s", (uint8_t *)v79, 0x16u);
        uint64_t v93 = v101;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v93, -1, -1);
        MEMORY[0x25332B030](v79, -1, -1);

        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v104 + 8))(v100, v103);
      }
      else
      {
        uint64_t v94 = *(void (**)(char *, uint64_t))(v47 + 8);
        v94(v16, v46);
        v94(v75, v46);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v45, v103);
      }
      goto LABEL_18;
    }
    sub_24DCC97E8();
    sub_24DCC9898();
    swift_bridgeObjectRelease();
    fpfs_set_is_ignore_root();
    swift_release();
    uint64_t v67 = (void *)sub_24D4F0070();
    uint64_t v68 = sub_24DCC97E8();
    uint64_t v70 = v69;

    if (v68 == 0xD00000000000002BLL && v70 == 0x800000024DCFC5D0)
    {
      swift_bridgeObjectRelease();
      uint64_t v71 = v105;
    }
    else
    {
      char v95 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      uint64_t v71 = v105;
      if ((v95 & 1) == 0)
      {
LABEL_23:
        fpfs_fsetxattr();
        fpfs_fset_acl();
        uint64_t result = fpfs_fset_acl();
        *(void *)uint64_t v71 = 0;
        *(unsigned char *)(v71 + 8) = 0;
        return result;
      }
    }
    fpfs_fchflags();
    goto LABEL_23;
  }
  id v51 = (id)fpfs_current_or_default_log();
  uint64_t v52 = v23;
  sub_24DCC9088();
  uint64_t v53 = v97;
  (*(void (**)(stat *, uint64_t, uint64_t))(v47 + 16))(v97, v48, v46);
  uint64_t v54 = sub_24DCC9068();
  os_log_type_t v55 = sub_24DCCA128();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    uint64_t v102 = v52;
    uint64_t v57 = v56;
    uint64_t v101 = (char *)swift_slowAlloc();
    v111[0] = (uint64_t)v101;
    *(_DWORD *)uint64_t v57 = 136315394;
    uint64_t v100 = v57 + 4;
    id v58 = (void *)sub_24DCC8948();
    id v59 = objc_msgSend(v58, sel_fp_shortDescription);

    uint64_t v60 = sub_24DCC97E8();
    unint64_t v62 = v61;

    uint64_t v108 = sub_24D418FB4(v60, v62, v111);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    uint64_t v63 = (*(uint64_t (**)(stat *, uint64_t))(v47 + 8))(v97, v46);
    *(_WORD *)(v57 + 12) = 1024;
    LODWORD(v108) = MEMORY[0x253327160](v63);
    sub_24DCCA428();
    _os_log_impl(&dword_24D3D0000, v54, v55, "cannot stat relocated folder at %s: %{darwin.errno}d", (uint8_t *)v57, 0x12u);
    uint64_t v64 = v101;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v64, -1, -1);
    MEMORY[0x25332B030](v57, -1, -1);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v102, v103);
  }
  else
  {
    (*(void (**)(stat *, uint64_t))(v47 + 8))(v53, v46);

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v104 + 8))(v52, v103);
  }
LABEL_18:
  uint64_t v66 = v105;
LABEL_19:
  *(void *)uint64_t v66 = -1;
  *(unsigned char *)(v66 + 8) = 0;
  return result;
}

uint64_t sub_24D4F5EA0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v52 = a5;
  uint64_t v6 = v5;
  id v51 = a4;
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9078();
  uint64_t v49 = *(void *)(v14 - 8);
  uint64_t v50 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v47 = v10;
  v18(v13, a3, v10);
  uint64_t v48 = v16;
  uint64_t v19 = sub_24DCC9068();
  os_log_type_t v20 = sub_24DCCA148();
  int v21 = v20;
  BOOL v22 = os_log_type_enabled(v19, v20);
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  if (v22)
  {
    os_log_t v45 = v19;
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v44 = swift_slowAlloc();
    uint64_t v56 = v44;
    *(_DWORD *)uint64_t v23 = 136446210;
    v42[1] = v23 + 4;
    int v43 = v21;
    uint64_t v24 = v23;
    os_log_type_t v25 = (void *)sub_24DCC8948();
    id v26 = objc_msgSend(v25, sel_fp_shortDescription);

    uint64_t v27 = sub_24DCC97E8();
    uint64_t v46 = a3;
    unint64_t v29 = v28;

    uint64_t v55 = sub_24D418FB4(v27, v29, &v56);
    sub_24DCCA428();
    a3 = v46;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v47);
    os_log_t v30 = v45;
    _os_log_impl(&dword_24D3D0000, v45, (os_log_type_t)v43, "creating root at %{public}s", v24, 0xCu);
    uint64_t v31 = v44;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v31, -1, -1);
    MEMORY[0x25332B030](v24, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v47);
  }
  (*(void (**)(char *, uint64_t))(v49 + 8))(v48, v50);
  id v32 = v51;
  id v33 = objc_msgSend(v51, sel_nsDomain);
  id v34 = objc_msgSend(v33, sel_personaIdentifier);

  if (v34)
  {
    uint64_t v36 = sub_24DCC97E8();
    uint64_t v38 = v37;
  }
  else
  {
    uint64_t v36 = 0;
    uint64_t v38 = 0;
  }
  MEMORY[0x270FA5388](v35);
  v42[-6] = v6;
  v42[-5] = v32;
  uint64_t v39 = v54;
  v42[-4] = v53;
  v42[-3] = v39;
  uint64_t v40 = v52;
  v42[-2] = a3;
  v42[-1] = v40;
  sub_24D601898(v36, v38, (uint64_t)sub_24D4FFF50, (uint64_t)&v42[-8]);
  return swift_bridgeObjectRelease();
}

void sub_24D4F6298(uint64_t a1, NSObject *a2, uint8_t *a3, uint8_t *a4, __darwin_ino64_t a5, unsigned char *a6)
{
  uint64_t v640 = a6;
  __darwin_ino64_t v661 = a5;
  uint64_t v668 = (uint64_t)a4;
  unint64_t v666 = a3;
  uint64_t v670 = a1;
  v678[1] = *MEMORY[0x263EF8340];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  v639 = (uint8_t *)&v605 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v638 = (char *)&v605 - v11;
  MEMORY[0x270FA5388](v10);
  v637 = (char *)&v605 - v12;
  uint64_t v13 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v651 = (uint64_t)&v605 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v632 = sub_24DCC8408();
  os_log_t v633 = *(os_log_t *)(v632 - 8);
  MEMORY[0x270FA5388](v632);
  char v631 = (char *)&v605 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v655 = sub_24DCC9078();
  uint64_t v646 = *(void *)(v655 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v655);
  unint64_t v620 = (char *)&v605 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  unsigned int v667 = (uint8_t *)&v605 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v622 = (char *)&v605 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  char v634 = (char *)&v605 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v621 = (char *)&v605 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v649 = (char *)&v605 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  long long v647 = (char *)&v605 - v29;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v653 = (char *)&v605 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  unint64_t v644 = (char *)&v605 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  unint64_t v628 = (char *)&v605 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v624 = (char *)&v605 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v623 = (char *)&v605 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  v630 = ((char *)&v605 - v41);
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v627 = ((char *)&v605 - v43);
  MEMORY[0x270FA5388](v42);
  v629 = (char *)&v605 - v44;
  uint64_t v671 = sub_24DCC8A58();
  os_log_t isa = (os_log_t)v671[-1].isa;
  Class v45 = isa[8].isa;
  uint64_t v46 = MEMORY[0x270FA5388](v671);
  uint64_t v625 = ((char *)&v605 - (((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = MEMORY[0x270FA5388](v46);
  int v643 = (char *)&v605 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v652 = (uint64_t)&v605 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  long long v648 = (char *)&v605 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v626 = (char *)&v605 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v645 = (char *)&v605 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  unint64_t v635 = (char *)&v605 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  v664 = ((char *)&v605 - v60);
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v650 = (uint8_t *)&v605 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  v654 = (char *)&v605 - v64;
  MEMORY[0x270FA5388](v63);
  id v657 = (uint8_t *)&v605 - v65;
  uint64_t v66 = sub_24DCC8288();
  MEMORY[0x270FA5388](v66 - 8);
  unint64_t v659 = (char *)&v605 - ((v67 + 15) & 0xFFFFFFFFFFFFFFF0);
  v660 = sub_24DCC82A8();
  unint64_t v658 = (uint8_t *)v660[-1].isa;
  MEMORY[0x270FA5388](v660);
  unint64_t v663 = (uint8_t *)&v605 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v70 = MEMORY[0x270FA5388](v69 - 8);
  unint64_t v636 = ((char *)&v605 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v72 = MEMORY[0x270FA5388](v70);
  uint64_t v642 = (uint64_t)&v605 - v73;
  uint64_t v74 = MEMORY[0x270FA5388](v72);
  uint64_t v641 = (uint64_t)&v605 - v75;
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  int v78 = (char *)&v605 - v77;
  uint64_t v79 = MEMORY[0x270FA5388](v76);
  id v81 = (uint8_t *)&v605 - v80;
  uint64_t v82 = MEMORY[0x270FA5388](v79);
  unint64_t v84 = ((char *)&v605 - v83);
  uint64_t v85 = MEMORY[0x270FA5388](v82);
  unint64_t v662 = (uint8_t *)&v605 - v86;
  MEMORY[0x270FA5388](v85);
  id v88 = (char *)&v605 - v87;
  uint64_t v89 = self;
  id v90 = objc_msgSend(v89, sel_defaultManager);
  unint64_t v91 = v669;
  sub_24D4F3234(a2, (uint64_t)v88);
  unsigned int v669 = v91;
  if (v91)
  {

    return;
  }
  os_log_t v618 = v84;
  v615 = v81;
  unint64_t v613 = v78;
  id v616 = v89;
  v656 = a2;
  Class v612 = v45;
  id v619 = v90;
  os_log_t v92 = isa;
  os_log_t v94 = isa + 6;
  Class v93 = isa[6].isa;
  char v95 = v671;
  int v96 = ((uint64_t (*)(char *, uint64_t, NSObject *))v93)(v88, 1, v671);
  os_log_t v97 = v666;
  os_log_t v98 = v662;
  sub_24D4FFDB8((uint64_t)v666, (uint64_t)v662);
  if (v96 != 1 && ((unsigned int (*)(uint8_t *, uint64_t, NSObject *))v93)(v98, 1, v95) != 1)
  {
    sub_24D415F74((uint64_t)v98, (uint64_t *)&unk_26B199050);
    sub_24DCC8178();
    sub_24D5EFC98();
    sub_24D501368((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
    stat v110 = v663;
    uint64_t v111 = v660;
    sub_24DCC8808();
    sub_24DCC8128();
    (*((void (**)(uint8_t *, NSObject *))v658 + 1))(v110, v111);
    swift_willThrow();

    sub_24D415F74((uint64_t)v88, (uint64_t *)&unk_26B199050);
    return;
  }
  sub_24D415F74((uint64_t)v98, (uint64_t *)&unk_26B199050);
  int v99 = v663;
  if ((unint64_t)v668 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v100 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v100 = *(void *)((v668 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v101 = (uint64_t)v618;
  sub_24D4FFDB8((uint64_t)v97, (uint64_t)v618);
  if (v100 >= 1 && ((unsigned int (*)(uint64_t, uint64_t, NSObject *))v93)(v101, 1, v95) == 1)
  {
    sub_24D415F74(v101, (uint64_t *)&unk_26B199050);
    sub_24DCC8148();
    sub_24D5EFC98();
    sub_24D501368((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
    uint64_t v102 = v660;
    sub_24DCC8808();
    sub_24DCC8128();
    (*((void (**)(uint8_t *, NSObject *))v658 + 1))(v99, v102);
    swift_willThrow();

    sub_24D415F74((uint64_t)v88, (uint64_t *)&unk_26B199050);
    return;
  }
  v617 = (uint64_t (*)(uint8_t *, uint64_t, NSObject *))v93;
  v614 = v88;
  sub_24D415F74(v101, (uint64_t *)&unk_26B199050);
  id v103 = [v656 provider];
  if (v103)
  {
    uint64_t v104 = v103;
    id v105 = objc_msgSend(v103, sel_identifier);

    uint64_t v106 = sub_24D3F0F0C();
    uint64_t v108 = v107;

    if (v106 == 0xD00000000000002BLL && v108 == 0x800000024DCFC5D0)
    {
      swift_bridgeObjectRelease();
      int v109 = 1;
    }
    else
    {
      int v109 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    int v109 = 0;
  }
  int v112 = v615;
  sub_24D4FFDB8((uint64_t)v97, (uint64_t)v615);
  int v113 = v617(v112, 1, v95);
  os_log_t v618 = v94;
  char v114 = v657;
  if (v113 == 1)
  {
    sub_24D415F74((uint64_t)v112, (uint64_t *)&unk_26B199050);
    LODWORD(v657) = 0;
    uint64_t v115 = v661;
  }
  else
  {
    ((void (*)(uint8_t *, uint8_t *, NSObject *))v92[4].isa)(v657, v112, v95);
    uint64_t v116 = sub_24DCC8948();
    uint64_t v115 = v661;
    char v117 = (void *)sub_24DCC8948();
    id v118 = objc_msgSend((id)v116, sel_fp_relationshipToItemAtURL_, v117);

    LODWORD(v116) = sub_24D5EFCA4((uint64_t)v118, 1);
    ((void (*)(uint8_t *, NSObject *))v92[1].isa)(v114, v95);
    LODWORD(v657) = v116 & v109;
  }
  id v119 = objc_msgSend(v616, sel_defaultManager);
  sub_24DCC8A18();
  uint64_t v120 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v121 = &selRef_createIndexerWithExtension_enabled_error_;
  unsigned int v122 = objc_msgSend(v119, sel_fileExistsAtPath_, v120);

  if (!v122)
  {
    LODWORD(v631) = 0;
    uint64_t v123 = (uint8_t *)v668;
    goto LABEL_28;
  }
  uint64_t v123 = (uint8_t *)v668;
  if (v657)
  {
    LODWORD(v631) = 0;
LABEL_28:
    char v127 = v667;
    uint64_t v128 = v666;
    goto LABEL_29;
  }
  if (v617(v666, 1, v95) != 1)
  {
    sub_24DCC8178();
    sub_24D5EFC98();
    sub_24D501368((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
    uint64_t v135 = v660;
    sub_24DCC8808();
    sub_24DCC8128();
    (*((void (**)(uint8_t *, NSObject *))v658 + 1))(v99, v135);
    swift_willThrow();
    goto LABEL_102;
  }
  int v124 = v669;
  unsigned __int8 v125 = (uint8_t *)sub_24D4FF88C(v115, 1);
  unsigned int v669 = v124;
  if (v124)
  {

    uint64_t v126 = (uint64_t)v614;
LABEL_25:
    sub_24D415F74(v126, (uint64_t *)&unk_26B199050);
    return;
  }
  if (!v125)
  {
    if (v109)
    {
      unsigned int v313 = v627;
      sub_24DA18988();
      uint64_t v314 = v654;
      ((void (*)(char *, uint64_t, NSObject *))v92[2].isa)(v654, v115, v95);
      unint64_t v315 = (LOBYTE(v92[10].isa) + 16) & ~(unint64_t)LOBYTE(v92[10].isa);
      uint64_t v316 = swift_allocObject();
      unint64_t v317 = v316 + v315;
      uint64_t v318 = v313;
      ((void (*)(unint64_t, char *, NSObject *))v92[4].isa)(v317, v314, v95);
      os_log_t v92 = (os_log_t)sub_24DCC9068();
      BOOL v233 = (unsigned char *)sub_24DCCA128();
      __darwin_ino64_t v319 = swift_allocObject();
      *(unsigned char *)(v319 + 16) = 34;
      __darwin_ino64_t v320 = swift_allocObject();
      *(unsigned char *)(v320 + 16) = 8;
      uint64_t v321 = swift_allocObject();
      *(void *)(v321 + 16) = sub_24D4FFF78;
      *(void *)(v321 + 24) = v316;
      __darwin_ino64_t v232 = swift_allocObject();
      *(void *)(v232 + 16) = sub_24D4B7DA8;
      *(void *)(v232 + 24) = v321;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
      uint64_t v322 = swift_allocObject();
      sub_24D719BBC(v322, 3);
      *unsigned int v323 = sub_24D4B7DCC;
      v323[1] = v319;
      v323[2] = sub_24D4B7DCC;
      v323[3] = v320;
      v323[4] = sub_24D4B7DC8;
      v323[5] = v232;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      if (os_log_type_enabled(v92, (os_log_type_t)v233))
      {
        LODWORD(v662) = v233;
        __darwin_ino64_t v242 = sub_24DA8985C();
        unsigned int v236 = swift_slowAlloc();
        v676[0] = 0;
        v678[0] = v236;
        *(_WORD *)__darwin_ino64_t v242 = 258;
        uint64_t v672 = v242 + 2;
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v319;
        unsigned int v243 = v669;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        unsigned int v238 = v243;
        if (!v243)
        {
          swift_release();
          *(void *)&v675.st_dev = sub_24D4B7DCC;
          v675.st_ino = v320;
          sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
          swift_release();
          *(void *)&v675.st_dev = sub_24D4B7DC8;
          v675.st_ino = v232;
          sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
          unsigned int v669 = 0;
          swift_release();
          _os_log_impl(&dword_24D3D0000, v92, (os_log_type_t)v662, "taking over domain root at %{public}s, the path already exists and is not owned by anyone", (uint8_t *)v242, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x25332B030](v236, -1, -1);
          sub_24DA89864();
        }
        goto LABEL_205;
      }

      swift_release();
      swift_release();
      swift_release();
      (*(void (**)(NSObject *, uint64_t))(v646 + 8))(v318, v655);
      os_log_t v92 = isa;
      uint64_t v123 = (uint8_t *)v668;
      char v127 = v667;
      uint64_t v442 = v632;
      v675.st_dev = 17;
      sub_24D5EFC98();
      sub_24D501368((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
      uint64_t v443 = v631;
      sub_24DCC8808();
      uint64_t v164 = (uint8_t *)sub_24DCC83E8();
      ((void (*)(char *, uint64_t))v633[1].isa)(v443, v442);
      sub_24D4F3530(0xD000000000000020, 0x800000024DCFC820, 0xD00000000000001CLL, 0x800000024DCFC850);
      LODWORD(v631) = 1;
      char v95 = v671;
      goto LABEL_132;
    }
    unint64_t v662 = 0;
    sub_24DA18988();
    unsigned int v378 = v654;
    ((void (*)(char *, uint64_t, NSObject *))v92[2].isa)(v654, v115, v95);
    unint64_t v379 = (LOBYTE(v92[10].isa) + 16) & ~(unint64_t)LOBYTE(v92[10].isa);
    uint64_t v380 = swift_allocObject();
    ((void (*)(unint64_t, char *, NSObject *))v92[4].isa)(v380 + v379, v378, v95);
    uint64_t v381 = sub_24DCC9068();
    LOBYTE(v379) = sub_24DCCA138();
    BOOL v233 = (unsigned char *)swift_allocObject();
    v233[16] = 34;
    __darwin_ino64_t v382 = swift_allocObject();
    *(unsigned char *)(v382 + 16) = 8;
    uint64_t v383 = swift_allocObject();
    *(void *)(v383 + 16) = sub_24D4FFF78;
    *(void *)(v383 + 24) = v380;
    __darwin_ino64_t v232 = swift_allocObject();
    *(void *)(v232 + 16) = sub_24D4B7DA8;
    *(void *)(v232 + 24) = v383;
    uint64_t v384 = v381;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
    uint64_t v385 = swift_allocObject();
    sub_24D719BBC(v385, 3);
    void *v386 = sub_24D4B7DCC;
    v386[1] = v233;
    v386[2] = sub_24D4B7DCC;
    v386[3] = v382;
    v386[4] = sub_24D4B7DC8;
    v386[5] = v232;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    os_log_type_t v387 = v379;
    if (os_log_type_enabled(v384, (os_log_type_t)v379))
    {
      os_log_t v633 = v384;
      __darwin_ino64_t v242 = sub_24DA8985C();
      unsigned int v236 = swift_slowAlloc();
      v676[0] = 0;
      v678[0] = v236;
      *(_WORD *)__darwin_ino64_t v242 = 258;
      uint64_t v672 = v242 + 2;
      *(void *)&v675.st_dev = sub_24D4B7DCC;
      v675.st_ino = (__darwin_ino64_t)v233;
      unsigned int v243 = v669;
      sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
      unsigned int v238 = v243;
      if (!v243)
      {
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v382;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DC8;
        v675.st_ino = v232;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        unsigned int v669 = 0;
        swift_release();
        _os_log_impl(&dword_24D3D0000, v633, v387, "attempting create a domain at %{public}s, but that path already exists and is not owned by anyone", (uint8_t *)v242, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v236, -1, -1);
        sub_24DA89864();
      }
      goto LABEL_205;
    }

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v646 + 8))(v629, v655);
    uint64_t v444 = (uint64_t)v614;
    uint64_t v445 = (void *)v661;
    char v95 = v671;
    char v127 = v667;
LABEL_171:
    unint64_t v534 = v669;
    sub_24D4F36E8(v445);
    unsigned int v669 = v534;
    uint64_t v128 = v666;
    if (v534)
    {

      uint64_t v126 = v444;
      goto LABEL_25;
    }
    LODWORD(v631) = 0;
    uint64_t v164 = v662;
    uint64_t v123 = (uint8_t *)v668;
    goto LABEL_133;
  }
  unint64_t v662 = v125;
  uint64_t v164 = v125;
  uint64_t v165 = v656;
  id v166 = [v656 providerDomainID];
  char v167 = sub_24D5EFCB0(v164, v166);

  char v127 = v667;
  if ((v167 & 1) == 0)
  {
    unsigned int v338 = (void *)sub_24D4F0070();
    id v339 = [v165 provider];
    if (v339)
    {
      unsigned int v340 = v339;
      id v341 = objc_msgSend(v339, sel_identifier);

      id v342 = v338;
      LOBYTE(v340) = sub_24D5EFCB0(v342, v341);

      if (v340)
      {
        id v343 = [v656 provider];
        if (v343)
        {
          long long v344 = v343;
          id v345 = sub_24D4F0164();
          id v346 = objc_msgSend(v344, sel_domainForIdentifier_reason_, v345, 0);

          if (v346)
          {
            sub_24DA18988();
            unsigned int v347 = v654;
            ((void (*)(char *, uint64_t, NSObject *))v92[2].isa)(v654, v115, v95);
            unint64_t v348 = (LOBYTE(v92[10].isa) + 16) & ~(unint64_t)LOBYTE(v92[10].isa);
            uint64_t v349 = swift_allocObject();
            ((void (*)(unint64_t, char *, NSObject *))v92[4].isa)(v349 + v348, v347, v95);
            uint64_t v350 = swift_allocObject();
            *(void *)(v350 + 16) = v164;
            unint64_t v666 = (uint8_t *)swift_allocObject();
            unsigned int v351 = v656;
            *((void *)v666 + 2) = v656;
            unsigned int v667 = v164;
            unsigned int v352 = v351;
            uint64_t v671 = sub_24DCC9068();
            LODWORD(v668) = sub_24DCCA138();
            __darwin_ino64_t v353 = swift_allocObject();
            *(unsigned char *)(v353 + 16) = 34;
            os_log_t isa = (os_log_t)swift_allocObject();
            LOBYTE(isa[2].isa) = 8;
            uint64_t v354 = swift_allocObject();
            *(void *)(v354 + 16) = sub_24D4FFF78;
            *(void *)(v354 + 24) = v349;
            __darwin_ino64_t v355 = swift_allocObject();
            *(void *)(v355 + 16) = sub_24D4B7DA8;
            *(void *)(v355 + 24) = v354;
            __darwin_ino64_t v356 = swift_allocObject();
            *(unsigned char *)(v356 + 16) = 34;
            __darwin_ino64_t v357 = swift_allocObject();
            *(unsigned char *)(v357 + 16) = 8;
            uint64_t v358 = swift_allocObject();
            *(void *)(v358 + 16) = sub_24D501598;
            *(void *)(v358 + 24) = v350;
            unsigned int v359 = swift_allocObject();
            v359[2].os_log_t isa = (Class)sub_24D4B7DA8;
            v359[3].os_log_t isa = (Class)v358;
            unsigned int v360 = (uint8_t *)swift_allocObject();
            v360[16] = 34;
            unsigned int v361 = (uint8_t *)swift_allocObject();
            v361[16] = 8;
            uint64_t v362 = swift_allocObject();
            unint64_t v363 = v666;
            *(void *)(v362 + 16) = sub_24D50159C;
            *(void *)(v362 + 24) = v363;
            __darwin_ino64_t v364 = swift_allocObject();
            *(void *)(v364 + 16) = sub_24D4B7DA8;
            *(void *)(v364 + 24) = v362;
            os_log_t v365 = isa;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
            uint64_t v366 = swift_allocObject();
            sub_24D719BBC(v366, 9);
            *unsigned int v367 = sub_24D4B7DCC;
            v367[1] = v353;
            v367[2] = sub_24D4B7DCC;
            v367[3] = v365;
            v367[4] = sub_24D4B7DC8;
            v367[5] = v355;
            v367[6] = sub_24D4B7DCC;
            v367[7] = v356;
            v367[8] = sub_24D4B7DCC;
            v367[9] = v357;
            v367[10] = sub_24D4B7DC8;
            v367[11] = v359;
            v367[12] = sub_24D4B7DCC;
            v367[13] = v360;
            v367[14] = sub_24D4B7DCC;
            v367[15] = v361;
            v367[16] = sub_24D4B7DC8;
            v367[17] = v364;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v671, (os_log_type_t)v668))
            {
              v664 = v359;
              unint64_t v666 = v360;
              uint64_t v368 = sub_24DA8985C();
              uint64_t v369 = swift_slowAlloc();
              v676[0] = 0;
              __darwin_ino64_t v661 = v369;
              v678[0] = v369;
              unint64_t v662 = (uint8_t *)v368;
              *(_WORD *)uint64_t v368 = 770;
              uint64_t v672 = v368 + 2;
              *(void *)&v675.st_dev = sub_24D4B7DCC;
              v675.st_ino = v353;
              unsigned int v370 = v669;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              __darwin_ino64_t v232 = (__darwin_ino64_t)v370;
              if (!v370)
              {
                unsigned int v669 = v361;
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DCC;
                v675.st_ino = (__darwin_ino64_t)v365;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DC8;
                v675.st_ino = v355;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DCC;
                v675.st_ino = v356;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DCC;
                v675.st_ino = v357;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DC8;
                v675.st_ino = (__darwin_ino64_t)v664;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DCC;
                v675.st_ino = (__darwin_ino64_t)v666;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DCC;
                v675.st_ino = (__darwin_ino64_t)v669;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DC8;
                v675.st_ino = v364;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                _os_log_impl(&dword_24D3D0000, v671, (os_log_type_t)v668, "attempting create a domain root at %{public}s, but that path already exists and is owned by existing domain %{public}s, expected %{public}s", v662, 0x20u);
                __darwin_ino64_t v371 = v661;
                swift_arrayDestroy();
                MEMORY[0x25332B030](v371, -1, -1);
                sub_24DA89864();
              }
              goto LABEL_208;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            (*(void (**)(char *, uint64_t))(v646 + 8))(v623, v655);
            id v535 = v619;
            uint64_t v536 = v658;
            unint64_t v537 = v663;
            unint64_t v538 = v631;
            v675.st_dev = 17;
            sub_24D5EFC98();
            sub_24D501368((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
            uint64_t v539 = v632;
            sub_24DCC8808();
            unsigned int v540 = (void *)sub_24DCC83E8();
            ((void (*)(char *, uint64_t))v633[1].isa)(v538, v539);
            sub_24D4F3530(0xD00000000000001DLL, 0x800000024DCFC900, 0xD00000000000001BLL, 0x800000024DCFC920);

            sub_24DCC8178();
            sub_24D5EFC98();
            sub_24D501368((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
            uint64_t v541 = v660;
            sub_24DCC8808();
            sub_24DCC8128();
            (*((void (**)(uint8_t *, NSObject *))v536 + 1))(v537, v541);
            swift_willThrow();
            unsigned int v542 = v667;

            goto LABEL_103;
          }
        }
        sub_24DA18988();
        unint64_t v501 = v654;
        ((void (*)(char *, uint64_t, NSObject *))v92[2].isa)(v654, v115, v95);
        unint64_t v502 = (LOBYTE(v92[10].isa) + 16) & ~(unint64_t)LOBYTE(v92[10].isa);
        uint64_t v503 = swift_allocObject();
        ((void (*)(unint64_t, char *, NSObject *))v92[4].isa)(v503 + v502, v501, v95);
        uint64_t v504 = swift_allocObject();
        *(void *)(v504 + 16) = v164;
        uint64_t v505 = swift_allocObject();
        unint64_t v506 = v656;
        *(void *)(v505 + 16) = v656;
        v615 = v164;
        unint64_t v507 = v506;
        v630 = sub_24DCC9068();
        LODWORD(v629) = sub_24DCCA138();
        uint64_t v508 = swift_allocObject();
        *(unsigned char *)(v508 + 16) = 34;
        uint64_t v610 = swift_allocObject();
        *(unsigned char *)(v610 + 16) = 8;
        uint64_t v509 = swift_allocObject();
        *(void *)(v509 + 16) = sub_24D4FFF78;
        *(void *)(v509 + 24) = v503;
        uint64_t v510 = swift_allocObject();
        *(void *)(v510 + 16) = sub_24D4B7DA8;
        *(void *)(v510 + 24) = v509;
        uint64_t v627 = swift_allocObject();
        LOBYTE(v627[2].isa) = 34;
        uint64_t v511 = swift_allocObject();
        *(unsigned char *)(v511 + 16) = 8;
        uint64_t v512 = swift_allocObject();
        *(void *)(v512 + 16) = sub_24D50119C;
        *(void *)(v512 + 24) = v504;
        unsigned int v236 = swift_allocObject();
        v236[2].os_log_t isa = (Class)sub_24D4B7DA8;
        v236[3].os_log_t isa = (Class)v512;
        uint64_t v513 = swift_allocObject();
        *(unsigned char *)(v513 + 16) = 34;
        uint64_t v514 = swift_allocObject();
        *(unsigned char *)(v514 + 16) = 8;
        uint64_t v515 = swift_allocObject();
        *(void *)(v515 + 16) = sub_24D5011B8;
        *(void *)(v515 + 24) = v505;
        uint64_t v516 = swift_allocObject();
        *(void *)(v516 + 16) = sub_24D4B7DA8;
        *(void *)(v516 + 24) = v515;
        __darwin_ino64_t v517 = v513;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
        uint64_t v518 = swift_allocObject();
        sub_24D719BBC(v518, 9);
        *unsigned int v519 = sub_24D4B7DCC;
        v519[1] = v508;
        __darwin_ino64_t v520 = v610;
        v519[2] = sub_24D4B7DCC;
        v519[3] = v520;
        v519[4] = sub_24D4B7DC8;
        v519[5] = v510;
        os_log_t v92 = v627;
        v519[6] = sub_24D4B7DCC;
        v519[7] = v92;
        v519[8] = sub_24D4B7DCC;
        v519[9] = v511;
        v519[10] = sub_24D4B7DC8;
        v519[11] = v236;
        v519[12] = sub_24D4B7DCC;
        v519[13] = v517;
        v519[14] = sub_24D4B7DCC;
        v519[15] = v514;
        v519[16] = sub_24D4B7DC8;
        v519[17] = v516;
        uint64_t v623 = (char *)v508;
        __darwin_ino64_t v232 = v520;
        swift_retain();
        swift_retain();
        __darwin_ino64_t v611 = v510;
        swift_retain();
        swift_retain();
        __darwin_ino64_t v242 = v511;
        unint64_t v521 = (uint8_t *)v514;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled(v630, (os_log_type_t)v629))
        {
          __darwin_ino64_t v606 = (__darwin_ino64_t)v236;
          __darwin_ino64_t v609 = v516;
          __darwin_ino64_t v522 = v517;
          uint64_t v523 = sub_24DA8985C();
          uint64_t v524 = swift_slowAlloc();
          v676[0] = 0;
          uint64_t v607 = v524;
          v678[0] = v524;
          uint64_t v608 = (uint8_t *)v523;
          *(_WORD *)uint64_t v523 = 770;
          uint64_t v672 = v523 + 2;
          *(void *)&v675.st_dev = sub_24D4B7DCC;
          v675.st_ino = (__darwin_ino64_t)v623;
          unsigned int v243 = v669;
          sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
          unsigned int v238 = v243;
          BOOL v233 = v667;
          if (!v243)
          {
            unsigned int v669 = v521;
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = v232;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DC8;
            v675.st_ino = v611;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = (__darwin_ino64_t)v627;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = v242;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DC8;
            v675.st_ino = v606;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = v522;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = (__darwin_ino64_t)v669;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DC8;
            v675.st_ino = v609;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            unsigned int v669 = 0;
            swift_release();
            _os_log_impl(&dword_24D3D0000, v630, (os_log_type_t)v629, "attempting create a domain root at %{public}s, but that path already exists and is owned by missing domain %{public}s, expected %{public}s", v608, 0x20u);
            uint64_t v525 = v607;
            swift_arrayDestroy();
            MEMORY[0x25332B030](v525, -1, -1);
            sub_24DA89864();
          }
          goto LABEL_205;
        }

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v646 + 8))(v624, v655);
        uint64_t v445 = (void *)v661;
        char v95 = v671;
        char v127 = v667;
        os_log_t v530 = v633;
        v675.st_dev = 17;
        sub_24D5EFC98();
        sub_24D501368((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
        uint64_t v531 = v631;
        uint64_t v532 = v632;
        sub_24DCC8808();
        size_t v533 = (void *)sub_24DCC83E8();
        ((void (*)(char *, uint64_t))v530[1].isa)(v531, v532);
        sub_24D4F3530(0xD00000000000001CLL, 0x800000024DCFC8C0, 0xD00000000000001ALL, 0x800000024DCFC8E0);

        uint64_t v444 = (uint64_t)v614;
        os_log_t v92 = isa;
        goto LABEL_171;
      }
    }
    else
    {
    }
    sub_24DA18988();
    uint64_t v412 = v654;
    ((void (*)(char *, uint64_t, NSObject *))v92[2].isa)(v654, v115, v95);
    unint64_t v413 = (LOBYTE(v92[10].isa) + 16) & ~(unint64_t)LOBYTE(v92[10].isa);
    uint64_t v414 = swift_allocObject();
    ((void (*)(unint64_t, char *, NSObject *))v92[4].isa)(v414 + v413, v412, v95);
    uint64_t v415 = swift_allocObject();
    *(void *)(v415 + 16) = v164;
    uint64_t v416 = swift_allocObject();
    uint64_t v417 = v656;
    *(void *)(v416 + 16) = v656;
    unint64_t v666 = v164;
    uint64_t v418 = v417;
    os_log_t isa = (os_log_t)sub_24DCC9068();
    LODWORD(v668) = sub_24DCCA138();
    uint64_t v671 = swift_allocObject();
    LOBYTE(v671[2].isa) = 34;
    uint64_t v419 = swift_allocObject();
    *(unsigned char *)(v419 + 16) = 8;
    uint64_t v420 = swift_allocObject();
    *(void *)(v420 + 16) = sub_24D4FFF78;
    *(void *)(v420 + 24) = v414;
    __darwin_ino64_t v421 = swift_allocObject();
    *(void *)(v421 + 16) = sub_24D4B7DA8;
    *(void *)(v421 + 24) = v420;
    __darwin_ino64_t v422 = swift_allocObject();
    *(unsigned char *)(v422 + 16) = 34;
    __darwin_ino64_t v423 = swift_allocObject();
    *(unsigned char *)(v423 + 16) = 8;
    uint64_t v424 = swift_allocObject();
    *(void *)(v424 + 16) = sub_24D501598;
    *(void *)(v424 + 24) = v415;
    __darwin_ino64_t v232 = swift_allocObject();
    *(void *)(v232 + 16) = sub_24D4B7DA8;
    *(void *)(v232 + 24) = v424;
    uint64_t v425 = (uint8_t *)swift_allocObject();
    v425[16] = 34;
    BOOL v233 = (unsigned char *)swift_allocObject();
    v233[16] = 8;
    uint64_t v426 = swift_allocObject();
    *(void *)(v426 + 16) = sub_24D50159C;
    *(void *)(v426 + 24) = v416;
    uint64_t v427 = swift_allocObject();
    v427[2].os_log_t isa = (Class)sub_24D4B7DA8;
    v427[3].os_log_t isa = (Class)v426;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
    uint64_t v428 = swift_allocObject();
    sub_24D719BBC(v428, 9);
    uint64_t v429 = v671;
    void *v430 = sub_24D4B7DCC;
    v430[1] = v429;
    v430[2] = sub_24D4B7DCC;
    v430[3] = v419;
    v430[4] = sub_24D4B7DC8;
    v430[5] = v421;
    v430[6] = sub_24D4B7DCC;
    v430[7] = v422;
    v430[8] = sub_24D4B7DCC;
    v430[9] = v423;
    v430[10] = sub_24D4B7DC8;
    v430[11] = v232;
    v430[12] = sub_24D4B7DCC;
    v430[13] = v425;
    v430[14] = sub_24D4B7DCC;
    v430[15] = v233;
    v430[16] = sub_24D4B7DC8;
    v430[17] = v427;
    swift_retain();
    __darwin_ino64_t v431 = v419;
    swift_retain();
    swift_retain();
    swift_retain();
    id v121 = (char **)v423;
    swift_retain();
    swift_retain();
    unsigned int v667 = v425;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    uint64_t v432 = isa;
    if (os_log_type_enabled(isa, (os_log_type_t)v668))
    {
      id v657 = (uint8_t *)v232;
      v664 = v427;
      uint64_t v433 = sub_24DA8985C();
      uint64_t v434 = swift_slowAlloc();
      v676[0] = 0;
      __darwin_ino64_t v661 = v434;
      v678[0] = v434;
      unint64_t v662 = (uint8_t *)v433;
      *(_WORD *)uint64_t v433 = 770;
      uint64_t v672 = v433 + 2;
      *(void *)&v675.st_dev = sub_24D4B7DCC;
      v675.st_ino = (__darwin_ino64_t)v671;
      unsigned int v243 = v669;
      sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
      __darwin_ino64_t v242 = (__darwin_ino64_t)v243;
      if (!v243)
      {
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v431;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DC8;
        v675.st_ino = v421;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v422;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v423;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DC8;
        v675.st_ino = (__darwin_ino64_t)v657;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = (__darwin_ino64_t)v667;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = (__darwin_ino64_t)v233;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DC8;
        v675.st_ino = (__darwin_ino64_t)v664;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        _os_log_impl(&dword_24D3D0000, v432, (os_log_type_t)v668, "attempting create a domain root at %{public}s, but that path already exists and is owned by a different provider %{public}s, expected %{public}s", v662, 0x20u);
        __darwin_ino64_t v435 = v661;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v435, -1, -1);
        sub_24DA89864();
      }
      goto LABEL_206;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(NSObject *, uint64_t))(v646 + 8))(v630, v655);
    uint64_t v130 = (uint64_t)v614;
    unint64_t v436 = v663;
    unint64_t v437 = v631;
    v675.st_dev = 17;
    sub_24D5EFC98();
    sub_24D501368((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    uint64_t v438 = v632;
    sub_24DCC8808();
    char v439 = (void *)sub_24DCC83E8();
    ((void (*)(char *, uint64_t))v633[1].isa)(v437, v438);
    sub_24D4F3530(0xD000000000000020, 0x800000024DCFC870, 0xD00000000000001ELL, 0x800000024DCFC8A0);

    sub_24DCC8178();
    sub_24D5EFC98();
    sub_24D501368((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
    unint64_t v440 = v660;
    sub_24DCC8808();
    sub_24DCC8128();
    (*((void (**)(uint8_t *, NSObject *))v658 + 1))(v436, v440);
    swift_willThrow();
    uint64_t v441 = v666;

LABEL_38:
    sub_24D415F74(v130, (uint64_t *)&unk_26B199050);
    return;
  }

  LODWORD(v631) = 0;
  uint64_t v123 = (uint8_t *)v668;
LABEL_132:
  uint64_t v128 = v666;
LABEL_133:

LABEL_29:
  id v129 = [v656 provider];
  uint64_t v130 = (uint64_t)v614;
  if (v129)
  {
    unint64_t v131 = v129;
    id v132 = objc_msgSend(v129, sel_descriptor);

    id v133 = objc_msgSend(v132, sel_localizedName);
    uint64_t v632 = sub_24DCC97E8();
    os_log_t v633 = v134;
  }
  else
  {
    uint64_t v632 = 0;
    os_log_t v633 = (os_log_t)0xE000000000000000;
  }
  uint64_t v136 = (uint64_t)v613;
  sub_24D4FFDB8((uint64_t)v128, (uint64_t)v613);
  if (v617((uint8_t *)v136, 1, v95) == 1)
  {
    sub_24D415F74(v136, (uint64_t *)&unk_26B199050);
    unsigned int v137 = v669;
    goto LABEL_42;
  }
  unsigned __int8 v138 = v650;
  unint64_t v662 = (uint8_t *)v92[4].isa;
  ((void (*)(uint8_t *, uint64_t, NSObject *))v662)(v650, v136, v95);
  id v139 = objc_msgSend(v616, sel_defaultManager);
  sub_24DCC8A18();
  char v140 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  unsigned int v141 = objc_msgSend(v139, sel_fileExistsAtPath_, v140);

  if (v141)
  {
    uint64_t v142 = v669;
    unsigned __int8 v143 = (uint8_t *)sub_24D4FF88C((uint64_t)v138, 1);
    unsigned int v137 = v142;
    uint64_t v123 = (uint8_t *)v668;
    if (v142)
    {
      ((void (*)(uint8_t *, NSObject *))v92[1].isa)(v138, v95);
      swift_bridgeObjectRelease();
      goto LABEL_38;
    }
    long long v192 = v143;
    if (!v143)
    {
      ((void (*)(uint8_t *, NSObject *))v92[1].isa)(v650, v95);
      goto LABEL_41;
    }
    id v193 = [v656 providerDomainID];
    char v194 = sub_24D5EFCB0(v192, v193);

    uint64_t v195 = v650;
    if ((v194 & 1) == 0)
    {
      unsigned int v669 = 0;
      swift_bridgeObjectRelease();
      uint64_t v668 = (uint64_t)v192;
      sub_24D5FC728();
      uint64_t v388 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v389 = objc_msgSend(v388, sel_fp_obfuscatedProviderDomainID);

      uint64_t v390 = sub_24DCC97E8();
      uint64_t v392 = v391;

      sub_24DA18988();
      uint64_t v393 = v654;
      unint64_t v666 = (uint8_t *)v92[2].isa;
      ((void (*)(char *, uint8_t *, NSObject *))v666)(v654, v195, v95);
      unsigned int v667 = (uint8_t *)&v92[2];
      unint64_t v394 = (LOBYTE(v92[10].isa) + 16) & ~(unint64_t)LOBYTE(v92[10].isa);
      uint64_t v395 = swift_allocObject();
      ((void (*)(unint64_t, char *, NSObject *))v662)(v395 + v394, v393, v95);
      uint64_t v396 = swift_allocObject();
      *(void *)(v396 + 16) = v390;
      *(void *)(v396 + 24) = v392;
      v664 = sub_24DCC9068();
      LODWORD(v670) = sub_24DCCA138();
      uint64_t v397 = swift_allocObject();
      *(unsigned char *)(v397 + 16) = 34;
      uint64_t v398 = swift_allocObject();
      *(unsigned char *)(v398 + 16) = 8;
      uint64_t v399 = swift_allocObject();
      *(void *)(v399 + 16) = sub_24D4FFF78;
      *(void *)(v399 + 24) = v395;
      BOOL v233 = (unsigned char *)swift_allocObject();
      *((void *)v233 + 2) = sub_24D4B7DA8;
      *((void *)v233 + 3) = v399;
      uint64_t v400 = swift_allocObject();
      *(unsigned char *)(v400 + 16) = 34;
      __darwin_ino64_t v242 = swift_allocObject();
      *(unsigned char *)(v242 + 16) = 8;
      unsigned int v401 = v664;
      uint64_t v402 = swift_allocObject();
      *(void *)(v402 + 16) = sub_24D50107C;
      *(void *)(v402 + 24) = v396;
      uint64_t v403 = swift_allocObject();
      *(void *)(v403 + 16) = sub_24D4B7DA8;
      *(void *)(v403 + 24) = v402;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
      uint64_t v404 = swift_allocObject();
      sub_24D719BBC(v404, 6);
      *unsigned int v405 = sub_24D4B7DCC;
      v405[1] = v397;
      v405[2] = sub_24D4B7DCC;
      v405[3] = v398;
      v405[4] = sub_24D4B7DC8;
      v405[5] = v233;
      v405[6] = sub_24D4B7DCC;
      v405[7] = v400;
      v405[8] = sub_24D4B7DCC;
      v405[9] = v242;
      v405[10] = sub_24D4B7DC8;
      v405[11] = v403;
      unsigned int v236 = v397;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRelease();
      unint64_t v406 = v401;
      if (!os_log_type_enabled(v401, (os_log_type_t)v670))
      {

        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        swift_release();
        (*(void (**)(char *, uint64_t))(v646 + 8))(v628, v655);
        id v450 = v619;
        uint64_t v451 = v663;
        sub_24DCC8198();
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
        uint64_t v452 = swift_allocObject();
        uint64_t v453 = sub_24D719BBC(v452, 1);
        uint64_t v455 = v454;
        uint64_t v456 = v454 + 2;
        *uint64_t v454 = sub_24DCC97E8();
        v455[1] = v457;
        uint64_t v458 = v671;
        v455[5] = (uint64_t)v671;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v456);
        uint64_t v460 = v650;
        ((void (*)(uint64_t *, uint8_t *, NSObject *))v666)(boxed_opaque_existential_0, v650, v458);
        uint64_t v461 = nullsub_1(v453);
        sub_24D428D08(v461);
        sub_24D501368((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
        uint64_t v462 = v660;
        sub_24DCC8808();
        sub_24DCC8128();
        (*((void (**)(uint8_t *, NSObject *))v658 + 1))(v451, v462);
        swift_willThrow();

        ((void (*)(uint8_t *, NSObject *))v92[1].isa)(v460, v458);
        goto LABEL_103;
      }
      unint64_t v662 = (uint8_t *)v403;
      __darwin_ino64_t v407 = v398;
      __darwin_ino64_t v661 = v400;
      __darwin_ino64_t v232 = sub_24DA8985C();
      id v121 = (char **)swift_slowAlloc();
      v676[0] = 0;
      v678[0] = v121;
      *(_WORD *)__darwin_ino64_t v232 = 514;
      uint64_t v672 = v232 + 2;
      *(void *)&v675.st_dev = sub_24D4B7DCC;
      v675.st_ino = (__darwin_ino64_t)v236;
      unsigned int v243 = v669;
      sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
      unsigned int v238 = v243;
      if (!v243)
      {
        unsigned int v669 = (uint8_t *)v232;
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v407;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DC8;
        v675.st_ino = (__darwin_ino64_t)v233;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v661;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v242;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DC8;
        v675.st_ino = (__darwin_ino64_t)v662;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        _os_log_impl(&dword_24D3D0000, v406, (os_log_type_t)v670, "Attempting to import existing domain at %{public}s into new domain %{public}s", v669, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v121, -1, -1);
        sub_24DA89864();
      }
      goto LABEL_205;
    }
    ((void (*)(uint8_t *, NSObject *))v92[1].isa)(v650, v95);
  }
  else
  {
    ((void (*)(uint8_t *, NSObject *))v92[1].isa)(v138, v95);
    unsigned int v137 = v669;
  }
  uint64_t v123 = (uint8_t *)v668;
LABEL_41:
  char v127 = v667;
LABEL_42:
  unint64_t v144 = swift_bridgeObjectRetain();
  unint64_t v662 = (uint8_t *)sub_24D4FF708(v144);
  if (v662)
  {
    BOOL v145 = sub_24DA22A30((uint64_t)v123);
    int v146 = (void (**)(os_log_t, NSObject *))&v92[1];
    uint64_t v147 = 4;
    os_log_t v148 = v664;
    while (1)
    {
      int v150 = (v147 - 4);
      id v151 = v145 ? *(id *)&v123[8 * v147] : (id)MEMORY[0x253328820](v147 - 4, v123);
      uint64_t v152 = v151;
      unsigned int v153 = (uint8_t *)(v147 - 3);
      if (__OFADD__(v150, 1)) {
        break;
      }
      id v154 = objc_msgSend(v151, sel_knownFolder);
      sub_24DCC89E8();

      int v155 = v137;
      uint64_t v156 = sub_24D4FF88C((uint64_t)v148, 2);
      if (v137)
      {
        swift_bridgeObjectRelease();

        (*v146)(v148, v671);
        goto LABEL_56;
      }
      uint64_t v157 = v156;
      (*v146)(v148, v671);
      if (v157)
      {
        id v158 = [v656 providerDomainID];
        char v159 = sub_24D5EFCB0(v157, v158);

        if ((v159 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24D5FC728();
          unsigned int v168 = (void *)sub_24DCC97B8();
          swift_bridgeObjectRelease();
          id v169 = objc_msgSend(v168, sel_fp_obfuscatedProviderDomainID);

          uint64_t v170 = sub_24DCC97E8();
          uint64_t v172 = v171;

          sub_24DA18988();
          uint64_t v173 = swift_allocObject();
          *(void *)(v173 + 16) = v152;
          uint64_t v174 = swift_allocObject();
          *(void *)(v174 + 16) = v170;
          *(void *)(v174 + 24) = v172;
          unsigned int v669 = v152;
          uint64_t v175 = sub_24DCC9068();
          LODWORD(v670) = sub_24DCCA138();
          uint64_t v176 = swift_allocObject();
          *(unsigned char *)(v176 + 16) = 34;
          uint64_t v668 = swift_allocObject();
          *(unsigned char *)(v668 + 16) = 8;
          uint64_t v177 = swift_allocObject();
          *(void *)(v177 + 16) = sub_24D501014;
          *(void *)(v177 + 24) = v173;
          __darwin_ino64_t v178 = swift_allocObject();
          *(void *)(v178 + 16) = sub_24D4B7DA8;
          *(void *)(v178 + 24) = v177;
          int v179 = (uint8_t *)swift_allocObject();
          v179[16] = 34;
          uint64_t v180 = (uint8_t *)v175;
          uint64_t v181 = swift_allocObject();
          *(unsigned char *)(v181 + 16) = 8;
          uint64_t v182 = swift_allocObject();
          *(void *)(v182 + 16) = sub_24D5015A0;
          *(void *)(v182 + 24) = v174;
          __darwin_ino64_t v183 = v176;
          __darwin_ino64_t v184 = swift_allocObject();
          *(void *)(v184 + 16) = sub_24D4B7DA8;
          *(void *)(v184 + 24) = v182;
          unsigned int v185 = (uint8_t *)v668;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
          uint64_t v186 = swift_allocObject();
          sub_24D719BBC(v186, 6);
          *uint64_t v187 = sub_24D4B7DCC;
          v187[1] = v183;
          v187[2] = sub_24D4B7DCC;
          v187[3] = v185;
          v187[4] = sub_24D4B7DC8;
          v187[5] = v178;
          v187[6] = sub_24D4B7DCC;
          v187[7] = v179;
          v187[8] = sub_24D4B7DCC;
          v187[9] = v181;
          v187[10] = sub_24D4B7DC8;
          v187[11] = v184;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled((os_log_t)v180, (os_log_type_t)v670))
          {
            v664 = v181;
            unsigned int v667 = v179;
            uint64_t v188 = sub_24DA8985C();
            uint64_t v189 = (uint8_t *)swift_slowAlloc();
            v676[0] = 0;
            unint64_t v662 = v189;
            v678[0] = v189;
            *(_WORD *)uint64_t v188 = 514;
            uint64_t v672 = v188 + 2;
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = v183;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = (__darwin_ino64_t)v185;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            unint64_t v666 = (uint8_t *)v188;
            os_log_t v190 = v664;
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DC8;
            v675.st_ino = v178;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            uint64_t v668 = (uint64_t)v180;
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = (__darwin_ino64_t)v667;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = (__darwin_ino64_t)v190;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DC8;
            v675.st_ino = v184;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            _os_log_impl(&dword_24D3D0000, (os_log_t)v668, (os_log_type_t)v670, "Attempting to import detached folder at %{public}s into new domain %{public}s", v666, 0x16u);
            unint64_t v191 = v662;
            swift_arrayDestroy();
            MEMORY[0x25332B030](v191, -1, -1);
            sub_24DA89864();
          }

          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v646 + 8))(v644, v655);
          long long v324 = v654;
          uint64_t v325 = v663;
          sub_24DCC8198();
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
          uint64_t v326 = swift_allocObject();
          uint64_t v327 = sub_24D719BBC(v326, 1);
          long long v329 = v328;
          unsigned int v330 = v328 + 2;
          uint64_t *v328 = sub_24DCC97E8();
          v329[1] = v331;
          __int16 v332 = v669;
          id v333 = [(uint8_t *)v669 knownFolder];
          sub_24DCC89E8();

          char v334 = v671;
          v329[5] = (uint64_t)v671;
          unsigned int v335 = __swift_allocate_boxed_opaque_existential_0(v330);
          ((void (*)(uint64_t *, char *, NSObject *))isa[4].isa)(v335, v324, v334);
          uint64_t v336 = nullsub_1(v327);
          sub_24D428D08(v336);
          sub_24D501368((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
          unsigned int v337 = v660;
          sub_24DCC8808();
          sub_24DCC8128();
          (*((void (**)(uint8_t *, NSObject *))v658 + 1))(v325, v337);
          swift_willThrow();

LABEL_102:
LABEL_103:
          sub_24D415F74((uint64_t)v614, (uint64_t *)&unk_26B199050);
          return;
        }

        unsigned int v137 = v155;
        uint64_t v123 = (uint8_t *)v668;
        os_log_t v148 = v664;
      }

      ++v147;
      BOOL v149 = v153 == v662;
      char v127 = v667;
      if (v149) {
        goto LABEL_53;
      }
    }
    __break(1u);
LABEL_176:

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v646 + 8))(v621, v655);
    unsigned int v137 = v669;
    __darwin_ino64_t v163 = v661;
    char v127 = v667;
    uint64_t v210 = (uint64_t)v625;
    unsigned int v543 = v666;
    unsigned int v544 = v654;
    sub_24DCC8978();
    uint64_t v545 = v671;
    ((void (*)(uint64_t, NSObject *))isa[1].isa)(v210, v671);
    ((void (*)(uint64_t, char *, NSObject *))v543)(v210, v544, v545);
    BOOL v214 = 0;
    goto LABEL_177;
  }
LABEL_53:
  swift_bridgeObjectRelease();
  sub_24D4F1368(v656);
  if (v137)
  {

LABEL_56:
    swift_bridgeObjectRelease();
    goto LABEL_103;
  }
  uint64_t v160 = v641;
  sub_24D4FFDB8((uint64_t)v614, v641);
  int v161 = v671;
  if (v617((uint8_t *)v160, 1, v671) == 1)
  {
    sub_24D415F74(v160, (uint64_t *)&unk_26B199050);
    os_log_t v162 = isa;
LABEL_59:
    __darwin_ino64_t v163 = v661;
    goto LABEL_70;
  }
  os_log_t v162 = isa;
  int v196 = v635;
  ((void (*)(char *, uint64_t, NSObject *))isa[4].isa)(v635, v160, v161);
  uint64_t v197 = (void *)sub_24DCC8948();
  __darwin_ino64_t v163 = v661;
  uint64_t v198 = (void *)sub_24DCC8948();
  id v199 = objc_msgSend(v197, sel_fp_relationshipToItemAtURL_, v198);

  if (!sub_24D5EFCA4((uint64_t)v199, 1))
  {
    unsigned int v372 = (void *)sub_24DCC8948();
    long long v373 = (void *)sub_24DCC8948();
    *(void *)&v675.st_dev = 0;
    unsigned int v374 = objc_msgSend(v619, sel_moveItemAtURL_toURL_error_, v372, v373, &v675);

    if (v374)
    {
      long long v375 = (void (*)(char *, NSObject *))v162[1].isa;
      id v376 = *(id *)&v675.st_dev;
      int v161 = v671;
      v375(v196, v671);
    }
    else
    {
      id v408 = *(id *)&v675.st_dev;
      unint64_t v409 = (void *)sub_24DCC8828();

      swift_willThrow();
      int v161 = v671;
      ((void (*)(char *, NSObject *))v162[1].isa)(v196, v671);
      unsigned int v137 = 0;
    }
    goto LABEL_59;
  }
  ((void (*)(char *, NSObject *))v162[1].isa)(v196, v161);
LABEL_70:
  uint64_t v200 = v642;
  sub_24D4FFDB8((uint64_t)v666, v642);
  if (v617((uint8_t *)v200, 1, v161) == 1)
  {
    sub_24D415F74(v200, (uint64_t *)&unk_26B199050);
    *uint64_t v640 = 0;
    unsigned int v201 = *(void **)(v670 + OBJC_IVAR____TtC9libfssync20InternalPathsManager_volume);
    if (v201)
    {
      *(void *)&v675.st_dev = 0;
      id v202 = objc_msgSend(v201, sel_rootURLForLocation_error_, 1, &v675);
      int v203 = *(void **)&v675.st_dev;
      uint64_t v204 = (uint64_t)v636;
      if (!v202)
      {
        id v410 = *(id *)&v675.st_dev;
        uint64_t v411 = (void *)sub_24DCC8828();

        swift_willThrow();
LABEL_179:
        id v549 = v411;
        v675.st_dev = sub_24DCC8328();
        sub_24D4C5C60();
        char v550 = sub_24DCC86A8();

        unint64_t v551 = v654;
        Class v552 = v612;
        if ((v550 & 1) == 0)
        {

          swift_bridgeObjectRelease();
          sub_24D415F74((uint64_t)v614, (uint64_t *)&unk_26B199050);
          return;
        }
        unsigned int v669 = 0;

        if ((v631 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          uint64_t v563 = v622;
          sub_24DA18988();
          uint64_t v564 = v671;
          ((void (*)(char *, __darwin_ino64_t, NSObject *))v162[2].isa)(v551, v163, v671);
          unint64_t v565 = (LOBYTE(v162[10].isa) + 16) & ~(unint64_t)LOBYTE(v162[10].isa);
          uint64_t v566 = swift_allocObject();
          ((void (*)(unint64_t, char *, NSObject *))v162[4].isa)(v566 + v565, v551, v564);
          uint64_t v567 = sub_24DCC9068();
          os_log_type_t v568 = sub_24DCCA128();
          __darwin_ino64_t v569 = swift_allocObject();
          *(unsigned char *)(v569 + 16) = 34;
          __darwin_ino64_t v570 = swift_allocObject();
          *(unsigned char *)(v570 + 16) = 8;
          uint64_t v571 = swift_allocObject();
          *(void *)(v571 + 16) = sub_24D4FFF78;
          *(void *)(v571 + 24) = v566;
          __darwin_ino64_t v572 = swift_allocObject();
          *(void *)(v572 + 16) = sub_24D4A46C4;
          *(void *)(v572 + 24) = v571;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
          uint64_t v573 = swift_allocObject();
          sub_24D719BBC(v573, 3);
          *uint64_t v574 = sub_24D4A46AC;
          v574[1] = v569;
          v574[2] = sub_24D4B7DCC;
          v574[3] = v570;
          v574[4] = sub_24D4A46CC;
          v574[5] = v572;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v567, v568))
          {
            uint64_t v575 = sub_24DA8985C();
            uint64_t v576 = swift_slowAlloc();
            v676[0] = 0;
            v678[0] = v576;
            *(_WORD *)uint64_t v575 = 258;
            uint64_t v672 = v575 + 2;
            *(void *)&v675.st_dev = sub_24D4A46AC;
            v675.st_ino = v569;
            unsigned int v243 = v669;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            BOOL v233 = v243;
            __darwin_ino64_t v232 = (__darwin_ino64_t)v663;
            if (!v243)
            {
              swift_release();
              *(void *)&v675.st_dev = sub_24D4B7DCC;
              v675.st_ino = v570;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              swift_release();
              *(void *)&v675.st_dev = sub_24D4A46CC;
              v675.st_ino = v572;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              swift_release();
              _os_log_impl(&dword_24D3D0000, v567, v568, "can't create dataless root at %{public}s: file already exists", (uint8_t *)v575, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x25332B030](v576, -1, -1);
              sub_24DA89864();
            }
            goto LABEL_207;
          }

          swift_release();
          swift_release();
          swift_release();
          (*(void (**)(char *, uint64_t))(v646 + 8))(v563, v655);
          id v588 = v619;
          id v589 = v658;
          size_t v590 = v660;
          uint64_t v591 = v663;
          sub_24DCC8178();
          sub_24D5EFC98();
          sub_24D501368((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
          sub_24DCC8808();
          sub_24DCC8128();
          (*((void (**)(uint8_t *, NSObject *))v589 + 1))(v591, v590);
          swift_willThrow();

          goto LABEL_103;
        }
        sub_24DA18988();
        size_t v553 = v162[2].isa;
        unsigned int v554 = v671;
        unint64_t v666 = (uint8_t *)&v162[2];
        v664 = v553;
        ((void (*)(char *, __darwin_ino64_t, NSObject *))v553)(v551, v163, v671);
        uint64_t isa_low = LOBYTE(v162[10].isa);
        uint64_t v556 = (isa_low + 16) & ~isa_low;
        unint64_t v662 = (uint8_t *)v552 + v556;
        v660 = (isa_low | 7);
        uint64_t v557 = swift_allocObject();
        unint64_t v663 = (uint8_t *)v556;
        uint64_t v558 = (char *)v162[4].isa;
        os_log_t isa = v162 + 4;
        unint64_t v659 = v558;
        ((void (*)(uint64_t, char *, NSObject *))v558)(v557 + v556, v551, v554);
        __darwin_ino64_t v242 = sub_24DCC9068();
        unsigned int v236 = sub_24DCCA108();
        os_log_t v92 = v127;
        BOOL v233 = (unsigned char *)swift_allocObject();
        v233[16] = 34;
        id v121 = (char **)swift_allocObject();
        *((unsigned char *)v121 + 16) = 8;
        uint64_t v559 = swift_allocObject();
        *(void *)(v559 + 16) = sub_24D4FFF78;
        *(void *)(v559 + 24) = v557;
        __darwin_ino64_t v560 = swift_allocObject();
        *(void *)(v560 + 16) = sub_24D4B7DA8;
        *(void *)(v560 + 24) = v559;
        uint64_t v668 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
        uint64_t v561 = swift_allocObject();
        sub_24D719BBC(v561, 3);
        void *v562 = sub_24D4B7DCC;
        v562[1] = v233;
        v562[2] = sub_24D4B7DCC;
        v562[3] = v121;
        v562[4] = sub_24D4B7DC8;
        v562[5] = v560;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRelease();
        if (os_log_type_enabled((os_log_t)v242, (os_log_type_t)v236))
        {
          __darwin_ino64_t v232 = sub_24DA8985C();
          unsigned int v238 = (void *)swift_slowAlloc();
          v676[0] = 0;
          v678[0] = v238;
          *(_WORD *)__darwin_ino64_t v232 = 258;
          uint64_t v672 = v232 + 2;
          *(void *)&v675.st_dev = sub_24D4B7DCC;
          v675.st_ino = (__darwin_ino64_t)v233;
          unsigned int v243 = v669;
          sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
          uint64_t v244 = v243;
          if (!v243)
          {
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = (__darwin_ino64_t)v121;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            swift_release();
            *(void *)&v675.st_dev = sub_24D4B7DC8;
            v675.st_ino = v560;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            unsigned int v669 = 0;
            swift_release();
            _os_log_impl(&dword_24D3D0000, (os_log_t)v242, (os_log_type_t)v236, "taking over %{public}s", (uint8_t *)v232, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25332B030](v238, -1, -1);
            sub_24DA89864();
          }
          goto LABEL_204;
        }

        swift_release();
        swift_release();
        swift_release();
        id v121 = *(char ***)(v646 + 8);
        ((void (*)(os_log_t, uint64_t))v121)(v92, v655);
        memset(&v675, 0, 28);
        memset(&v675.st_atimespec, 0, 112);
        sub_24DCC8A18();
        uint64_t v579 = sub_24DCC9898();
        swift_bridgeObjectRelease();
        int v580 = lstat((const char *)(v579 + 32), &v675);
        swift_release();
        if (v580 < 0
          || (v675.st_flags & 0x40000000) == 0
          || (int v674 = 0,
              sub_24DCC8A18(),
              sub_24DCC9898(),
              swift_bridgeObjectRelease(),
              int v581 = fpfs_num_entries(),
              swift_release(),
              v581 < 0)
          || !v674)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          __darwin_ino64_t v242 = swift_allocObject();
          *(void *)(v242 + 16) = 0;
          uint64_t v582 = (void *)sub_24DCC8948();
          uint64_t v583 = (void *)sub_24DCC97B8();
          swift_bridgeObjectRelease();
          uint64_t v672 = *(void *)(v242 + 16);
          uint64_t v584 = (void *)v672;
          char v585 = FPWriteImportCookieForDomainURL();

          uint64_t v586 = (void *)v672;
          *(void *)(v242 + 16) = v672;
          id v587 = v586;

          if (v585)
          {
            swift_release();
          }
          else
          {
            sub_24DA18988();
            int v592 = v654;
            int v593 = v671;
            ((void (*)(char *, __darwin_ino64_t, NSObject *))v664)(v654, v163, v671);
            uint64_t v594 = swift_allocObject();
            ((void (*)(uint8_t *, char *, NSObject *))v659)(&v663[v594], v592, v593);
            swift_retain();
            uint64_t v671 = sub_24DCC9068();
            LODWORD(v667) = sub_24DCCA128();
            uint64_t v595 = swift_allocObject();
            *(unsigned char *)(v595 + 16) = 34;
            BOOL v233 = (unsigned char *)swift_allocObject();
            v233[16] = 8;
            uint64_t v596 = swift_allocObject();
            *(void *)(v596 + 16) = sub_24D4FFF78;
            *(void *)(v596 + 24) = v594;
            __darwin_ino64_t v232 = swift_allocObject();
            *(void *)(v232 + 16) = sub_24D4B7DA8;
            *(void *)(v232 + 24) = v596;
            uint64_t v597 = swift_allocObject();
            *(unsigned char *)(v597 + 16) = 32;
            uint64_t v598 = swift_allocObject();
            *(unsigned char *)(v598 + 16) = 8;
            uint64_t v599 = swift_allocObject();
            *(void *)(v599 + 16) = sub_24D500018;
            *(void *)(v599 + 24) = v242;
            os_log_t v92 = (os_log_t)swift_allocObject();
            v92[2].os_log_t isa = (Class)sub_24D4B7DA8;
            v92[3].os_log_t isa = (Class)v599;
            uint64_t v600 = swift_allocObject();
            sub_24D719BBC(v600, 6);
            *uint64_t v601 = sub_24D4B7DCC;
            v601[1] = v595;
            v601[2] = sub_24D4B7DCC;
            v601[3] = v233;
            v601[4] = sub_24D4B7DC8;
            v601[5] = v232;
            v601[6] = sub_24D4B7DCC;
            v601[7] = v597;
            v601[8] = sub_24D4B7DCC;
            v601[9] = v598;
            v601[10] = sub_24D4B7DC8;
            v601[11] = v92;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            unsigned int v236 = v598;
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v671, (os_log_type_t)v667))
            {
              int v602 = (uint8_t *)sub_24DA8985C();
              int v603 = (uint8_t *)swift_slowAlloc();
              uint64_t v677 = v603;
              v678[0] = 0;
              uint64_t v668 = (uint64_t)v602;
              *(_WORD *)int v602 = 514;
              unint64_t v666 = v603;
              v676[0] = v602 + 2;
              uint64_t v672 = (uint64_t)sub_24D4B7DCC;
              unint64_t v673 = v595;
              unsigned int v243 = v669;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v672, (uint64_t)v676, (uint64_t)v678, (uint64_t)&v677);
              unsigned int v238 = v243;
              if (!v243)
              {
                swift_release();
                uint64_t v672 = (uint64_t)sub_24D4B7DCC;
                unint64_t v673 = (unint64_t)v233;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v672, (uint64_t)v676, (uint64_t)v678, (uint64_t)&v677);
                swift_release();
                uint64_t v672 = (uint64_t)sub_24D4B7DC8;
                unint64_t v673 = v232;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v672, (uint64_t)v676, (uint64_t)v678, (uint64_t)&v677);
                swift_release();
                uint64_t v672 = (uint64_t)sub_24D4B7DCC;
                unint64_t v673 = v597;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v672, (uint64_t)v676, (uint64_t)v678, (uint64_t)&v677);
                swift_release();
                uint64_t v672 = (uint64_t)sub_24D4B7DCC;
                unint64_t v673 = (unint64_t)v236;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v672, (uint64_t)v676, (uint64_t)v678, (uint64_t)&v677);
                swift_release();
                uint64_t v672 = (uint64_t)sub_24D4B7DC8;
                unint64_t v673 = (unint64_t)v92;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v672, (uint64_t)v676, (uint64_t)v678, (uint64_t)&v677);
                unsigned int v669 = 0;
                swift_release();
                _os_log_impl(&dword_24D3D0000, v671, (os_log_type_t)v667, "failed to write import cookie for domain %{public}s: %s", (uint8_t *)v668, 0x16u);
                v604 = v666;
                swift_arrayDestroy();
                MEMORY[0x25332B030](v604, -1, -1);
                sub_24DA89864();
              }
              goto LABEL_205;
            }

            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            swift_release();
            ((void (*)(char *, uint64_t))v121)(v620, v655);
            swift_release();
          }
        }
        *uint64_t v640 = 1;
        id v377 = v619;
        unsigned int v137 = v669;
LABEL_163:
        sub_24DCC8A18();
        fpfs_openflags(0x100000);
        sub_24DCC9898();
        uint64_t v526 = fpfs_lp_openat();
        uint64_t v527 = swift_release();
        if ((v526 & 0x80000000) == 0)
        {
          swift_bridgeObjectRelease();
          sub_24D90BE40(0x10u);
          uint64_t v528 = (uint64_t)v614;
          if (v137)
          {

            sub_24D415F74(v528, (uint64_t *)&unk_26B199050);
            sub_24D40CB10(v526);
          }
          else
          {
            sub_24D5FC728();
            sub_24DC88B3C(v526);
            swift_bridgeObjectRelease();
            sub_24D90BE40(0x400u);
            sub_24D40CB10(v526);

            sub_24D415F74(v528, (uint64_t *)&unk_26B199050);
          }
          return;
        }
        int v529 = MEMORY[0x253327160](v527);
        sub_24D90CF14(v529, 1, 0, 0xAu);
        swift_willThrow();

        goto LABEL_56;
      }
      uint64_t v205 = v202;
      unsigned int v206 = v654;
      sub_24DCC89E8();
      id v207 = v203;

      uint64_t v208 = (uint8_t *)v162[4].isa;
      unsigned int v209 = v671;
      ((void (*)(uint64_t, char *, NSObject *))v208)(v204, v206, v671);
      ((void (*)(uint64_t, void, uint64_t, NSObject *))v162[7].isa)(v204, 0, 1, v209);
      if (v617((uint8_t *)v204, 1, v209) != 1)
      {
        ((void (*)(char *, uint64_t, NSObject *))v208)(v626, v204, v209);
        uint64_t v210 = (uint64_t)v625;
        uint64_t v668 = (uint64_t)v162[2].isa;
        ((void (*)(NSObject *, __darwin_ino64_t, NSObject *))v668)(v625, v163, v209);
        BOOL v211 = (void *)sub_24DCC8948();
        uint64_t v212 = (void *)sub_24DCC8948();
        id v213 = objc_msgSend(v211, sel_fp_relationshipToItemAtURL_, v212);

        BOOL v214 = sub_24D5EFCA4((uint64_t)v213, 0);
        id v215 = [v656 provider];
        if (v215)
        {
          unsigned int v216 = v215;
          unint64_t v666 = v208;
          unsigned int v669 = 0;
          id v217 = objc_msgSend(v215, sel_identifier);

          uint64_t v218 = sub_24D3F0F0C();
          uint64_t v220 = v219;

          unsigned int v221 = (void *)sub_24DCC97B8();
          unsigned int v222 = objc_msgSend(v221, sel_fp_isiCloudDriveOrCloudDocsIdentifier);

          if (v222)
          {
            id v223 = objc_msgSend(v616, sel_defaultManager);
            __darwin_ino64_t v224 = v661;
            sub_24DCC8A18();
            BOOL v225 = (void *)sub_24DCC97B8();
            swift_bridgeObjectRelease();
            objc_msgSend(v223, sel_fp_createPathIfNeeded_, v225);

            sub_24DA18988();
            uint64_t v226 = v654;
            __darwin_ino64_t v227 = v224;
            unsigned int v228 = v671;
            ((void (*)(char *, __darwin_ino64_t, NSObject *))v668)(v654, v227, v671);
            unint64_t v229 = (LOBYTE(isa[10].isa) + 16) & ~(unint64_t)LOBYTE(isa[10].isa);
            uint64_t v230 = swift_allocObject();
            ((void (*)(unint64_t, char *, NSObject *))v666)(v230 + v229, v226, v228);
            uint64_t v231 = swift_allocObject();
            *(void *)(v231 + 16) = v218;
            *(void *)(v231 + 24) = v220;
            v664 = sub_24DCC9068();
            LODWORD(v668) = sub_24DCCA108();
            __darwin_ino64_t v232 = swift_allocObject();
            *(unsigned char *)(v232 + 16) = 34;
            BOOL v233 = (unsigned char *)swift_allocObject();
            v233[16] = 8;
            uint64_t v234 = swift_allocObject();
            *(void *)(v234 + 16) = sub_24D4FFF78;
            *(void *)(v234 + 24) = v230;
            id v121 = (char **)swift_allocObject();
            v121[2] = (char *)sub_24D4B7DA8;
            v121[3] = (char *)v234;
            unsigned int v235 = (uint8_t *)swift_allocObject();
            v235[16] = 34;
            unsigned int v236 = swift_allocObject();
            LOBYTE(v236[2].isa) = 8;
            uint64_t v237 = swift_allocObject();
            *(void *)(v237 + 16) = sub_24D5015A0;
            *(void *)(v237 + 24) = v231;
            unsigned int v238 = (void *)swift_allocObject();
            v238[2] = sub_24D4B7DA8;
            v238[3] = v237;
            int v150 = v664;
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
            uint64_t v239 = swift_allocObject();
            sub_24D719BBC(v239, 6);
            *BOOL v240 = sub_24D4B7DCC;
            v240[1] = v232;
            v240[2] = sub_24D4B7DCC;
            v240[3] = v233;
            v240[4] = sub_24D4B7DC8;
            v240[5] = v121;
            v240[6] = sub_24D4B7DCC;
            v240[7] = v235;
            v240[8] = sub_24D4B7DCC;
            v240[9] = v236;
            v240[10] = sub_24D4B7DC8;
            v240[11] = v238;
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            swift_bridgeObjectRelease();
            if (os_log_type_enabled(v150, (os_log_type_t)v668))
            {
              unint64_t v662 = v235;
              uint64_t v241 = sub_24DA8985C();
              __darwin_ino64_t v242 = swift_slowAlloc();
              v676[0] = 0;
              v678[0] = v242;
              id v657 = (uint8_t *)v241;
              *(_WORD *)uint64_t v241 = 514;
              uint64_t v672 = v241 + 2;
              *(void *)&v675.st_dev = sub_24D4B7DCC;
              v675.st_ino = v232;
              unsigned int v243 = v669;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              uint64_t v244 = v243;
              os_log_t v92 = v625;
              if (!v243)
              {
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DCC;
                v675.st_ino = (__darwin_ino64_t)v233;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DC8;
                v675.st_ino = (__darwin_ino64_t)v121;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DCC;
                v675.st_ino = (__darwin_ino64_t)v662;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DCC;
                v675.st_ino = (__darwin_ino64_t)v236;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                *(void *)&v675.st_dev = sub_24D4B7DC8;
                v675.st_ino = (__darwin_ino64_t)v238;
                sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
                swift_release();
                _os_log_impl(&dword_24D3D0000, v664, (os_log_type_t)v668, "creating %{public}s on disk for %{public}s", v657, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x25332B030](v242, -1, -1);
                sub_24DA89864();
              }
LABEL_204:

              __break(1u);
LABEL_205:

              __break(1u);
              __break(1u);

              __break(1u);
LABEL_206:

              __break(1u);
              __break(1u);
              goto LABEL_207;
            }
            goto LABEL_176;
          }
          swift_bridgeObjectRelease();
          unsigned int v137 = v669;
          __darwin_ino64_t v163 = v661;
        }
        char v127 = v667;
LABEL_177:
        sub_24D500074(v210, v214);
        os_log_t v162 = isa;
        os_log_t v546 = isa + 1;
        if (v137)
        {
          v547 = (void (*)(char *, NSObject *))v546->isa;
          v548 = v671;
          ((void (*)(uint64_t, NSObject *))v546->isa)(v210, v671);
          v547(v626, v548);
          uint64_t v411 = v137;
          goto LABEL_179;
        }
        swift_bridgeObjectRelease();
        uint64_t v577 = (void (*)(char *, NSObject *))v546->isa;
        uint64_t v578 = v671;
        ((void (*)(uint64_t, NSObject *))v546->isa)(v210, v671);
        v577(v626, v578);
        *uint64_t v640 = 1;
LABEL_116:
        id v377 = v619;
        goto LABEL_163;
      }
    }
    else
    {
      uint64_t v204 = (uint64_t)v636;
      ((void (*)(NSObject *, uint64_t, uint64_t, NSObject *))v162[7].isa)(v636, 1, 1, v671);
    }
    swift_bridgeObjectRelease();
    sub_24D415F74(v204, (uint64_t *)&unk_26B199050);
    goto LABEL_116;
  }
  unsigned int v245 = (char *)v162[4].isa;
  unint64_t v636 = v162 + 4;
  unint64_t v635 = v245;
  ((void (*)(char *, uint64_t, NSObject *))v245)(v645, v200, v161);
  uint64_t v246 = sub_24DCC8CE8();
  BOOL v247 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v246 - 8) + 56);
  uint64_t v248 = (uint64_t)v637;
  v247(v637, 1, 1, v246);
  uint64_t v249 = (uint64_t)v638;
  v247(v638, 1, 1, v246);
  uint64_t v250 = (uint64_t)v639;
  v247((char *)v639, 1, 1, v246);
  LODWORD(v246) = sub_24D601890();
  LOBYTE(v247) = sub_24D3F0D64();
  unsigned __int8 v251 = sub_24D3F0D64();
  LOBYTE(v675.st_dev) = 1;
  sub_24D4E6B44(0x100000000uLL, v246, v248, v249, v247 & 1, 0, 0, v250, v651, 0, 0, 1, 0, 0, 0xF000000000000000, 0, 0, 0, 0,
    0,
    0,
    0,
    v251);
  sub_24D415F74(v250, (uint64_t *)&unk_26B196B10);
  sub_24D415F74(v249, (uint64_t *)&unk_26B196B10);
  sub_24D415F74(v248, (uint64_t *)&unk_26B196B10);
  sub_24D4E5EFC(1);
  if (!v662)
  {
    __darwin_ino64_t v254 = v661;
LABEL_139:
    sub_24DCC8A18();
    fpfs_openflags(0x100000);
    sub_24DCC9898();
    uint64_t v463 = fpfs_lp_openat();
    uint64_t v464 = swift_release();
    if ((v463 & 0x80000000) != 0)
    {
      int v465 = MEMORY[0x253327160](v464);
      __darwin_ino64_t v242 = sub_24D90CF14(v465, 1, 0, 0xAu);
      swift_willThrow();
      swift_bridgeObjectRelease();
      unsigned int v669 = 0;
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_24D90BDC8(v651, v463);
      if (!v137)
      {
        unsigned int v669 = 0;
        sub_24D40CB10(v463);
        uint64_t v473 = v645;
LABEL_148:
        if ((v657 & 1) == 0)
        {
          uint64_t v474 = (void *)sub_24DCC8948();
          unint64_t v475 = (void *)sub_24DCC8948();
          *(void *)&v675.st_dev = 0;
          id v476 = v619;
          unsigned int v477 = objc_msgSend(v619, sel_moveItemAtURL_toURL_error_, v474, v475, &v675);

          unint64_t v478 = v473;
          uint64_t v479 = (uint64_t)v614;
          if (!v477)
          {
            id v500 = *(id *)&v675.st_dev;
            swift_bridgeObjectRelease();
            sub_24DCC8828();

            swift_willThrow();
            ((void (*)(char *, NSObject *))v162[1].isa)(v478, v671);
            uint64_t v449 = v479;
LABEL_157:
            sub_24D415F74(v449, (uint64_t *)&unk_26B199050);
            sub_24D409FE4(v651);
            return;
          }
          id v480 = *(id *)&v675.st_dev;
        }
        *uint64_t v640 = 1;
        __darwin_ino64_t v242 = swift_allocObject();
        *(void *)(v242 + 16) = 0;
        uint64_t v481 = (void *)sub_24DCC8948();
        uint64_t v482 = (void *)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        *(void *)&v675.st_dev = *(void *)(v242 + 16);
        int v483 = *(void **)&v675.st_dev;
        char v484 = FPWriteImportCookieForDomainURL();

        uint64_t v485 = *(void **)&v675.st_dev;
        *(void *)(v242 + 16) = *(void *)&v675.st_dev;
        id v486 = v485;

        if (v484)
        {
          ((void (*)(char *, NSObject *))v162[1].isa)(v645, v671);
          swift_release();
          id v377 = v619;
          unsigned int v137 = v669;
        }
        else
        {
          sub_24DA18988();
          unint64_t v487 = v654;
          unint64_t v488 = v671;
          ((void (*)(char *, __darwin_ino64_t, NSObject *))v162[2].isa)(v654, v254, v671);
          unint64_t v489 = (LOBYTE(v162[10].isa) + 16) & ~(unint64_t)LOBYTE(v162[10].isa);
          uint64_t v490 = swift_allocObject();
          ((void (*)(unint64_t, char *, NSObject *))v635)(v490 + v489, v487, v488);
          swift_retain();
          uint64_t v668 = sub_24DCC9068();
          LODWORD(v667) = sub_24DCCA128();
          __darwin_ino64_t v232 = swift_allocObject();
          *(unsigned char *)(v232 + 16) = 34;
          BOOL v233 = (unsigned char *)swift_allocObject();
          v233[16] = 8;
          uint64_t v491 = swift_allocObject();
          *(void *)(v491 + 16) = sub_24D4FFF78;
          *(void *)(v491 + 24) = v490;
          os_log_t v492 = v162;
          __darwin_ino64_t v493 = swift_allocObject();
          *(void *)(v493 + 16) = sub_24D4B7DA8;
          *(void *)(v493 + 24) = v491;
          id v121 = (char **)swift_allocObject();
          *((unsigned char *)v121 + 16) = 32;
          os_log_t v92 = (os_log_t)swift_allocObject();
          LOBYTE(v92[2].isa) = 8;
          uint64_t v494 = swift_allocObject();
          *(void *)(v494 + 16) = sub_24D500018;
          *(void *)(v494 + 24) = v242;
          __darwin_ino64_t v495 = swift_allocObject();
          *(void *)(v495 + 16) = sub_24D4B7DA8;
          *(void *)(v495 + 24) = v494;
          unint64_t v496 = v668;
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
          uint64_t v497 = swift_allocObject();
          sub_24D719BBC(v497, 6);
          void *v498 = sub_24D4B7DCC;
          v498[1] = v232;
          v498[2] = sub_24D4B7DCC;
          v498[3] = v233;
          v498[4] = sub_24D4B7DC8;
          v498[5] = v493;
          v498[6] = sub_24D4B7DCC;
          v498[7] = v121;
          v498[8] = sub_24D4B7DCC;
          v498[9] = v92;
          v498[10] = sub_24D4B7DC8;
          v498[11] = v495;
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_bridgeObjectRelease();
          if (os_log_type_enabled(v496, (os_log_type_t)v667))
          {
            uint64_t v499 = sub_24DA8985C();
            unsigned int v236 = swift_slowAlloc();
            v676[0] = 0;
            v678[0] = v236;
            unint64_t v666 = (uint8_t *)v499;
            *(_WORD *)uint64_t v499 = 514;
            uint64_t v672 = v499 + 2;
            *(void *)&v675.st_dev = sub_24D4B7DCC;
            v675.st_ino = v232;
            unsigned int v243 = v669;
            sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
            unsigned int v238 = v243;
            if (!v243)
            {
              swift_release();
              *(void *)&v675.st_dev = sub_24D4B7DCC;
              v675.st_ino = (__darwin_ino64_t)v233;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              swift_release();
              *(void *)&v675.st_dev = sub_24D4B7DC8;
              v675.st_ino = v493;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              swift_release();
              *(void *)&v675.st_dev = sub_24D4B7DCC;
              v675.st_ino = (__darwin_ino64_t)v121;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              swift_release();
              *(void *)&v675.st_dev = sub_24D4B7DCC;
              v675.st_ino = (__darwin_ino64_t)v92;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              swift_release();
              *(void *)&v675.st_dev = sub_24D4B7DC8;
              v675.st_ino = v495;
              sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
              swift_release();
              _os_log_impl(&dword_24D3D0000, (os_log_t)v668, (os_log_type_t)v667, "failed to write import cookie for domain %{public}s: %s", v666, 0x16u);
              swift_arrayDestroy();
              MEMORY[0x25332B030](v236, -1, -1);
              sub_24DA89864();
            }
            goto LABEL_205;
          }
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          (*(void (**)(char *, uint64_t))(v646 + 8))(v649, v655);
          ((void (*)(char *, NSObject *))v492[1].isa)(v645, v671);
          swift_release();
          id v377 = v619;
          unsigned int v137 = v669;
        }
        sub_24D409FE4(v651);
        goto LABEL_163;
      }
      sub_24D40CB10(v463);
      __darwin_ino64_t v242 = (__darwin_ino64_t)v137;
      unsigned int v669 = 0;
    }
    sub_24DA18988();
    uint64_t v466 = swift_allocObject();
    *(void *)(v466 + 16) = v242;
    id v467 = (id)v242;
    unsigned int v236 = sub_24DCC9068();
    os_log_t v92 = (os_log_t)sub_24DCCA128();
    __darwin_ino64_t v468 = swift_allocObject();
    *(unsigned char *)(v468 + 16) = 64;
    __darwin_ino64_t v469 = swift_allocObject();
    *(unsigned char *)(v469 + 16) = 8;
    uint64_t v470 = swift_allocObject();
    *(void *)(v470 + 16) = sub_24D500F58;
    *(void *)(v470 + 24) = v466;
    id v121 = (char **)swift_allocObject();
    v121[2] = (char *)sub_24D500F80;
    v121[3] = (char *)v470;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
    uint64_t v471 = swift_allocObject();
    sub_24D719BBC(v471, 3);
    void *v472 = sub_24D4B7DCC;
    v472[1] = v468;
    v472[2] = sub_24D4B7DCC;
    v472[3] = v469;
    v472[4] = sub_24D500F88;
    v472[5] = v121;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    LODWORD(v668) = v92;
    if (os_log_type_enabled(v236, (os_log_type_t)v92))
    {
      BOOL v233 = (unsigned char *)sub_24DA8985C();
      __darwin_ino64_t v232 = swift_slowAlloc();
      v676[0] = v232;
      v678[0] = 0;
      *(_WORD *)BOOL v233 = 258;
      uint64_t v672 = (uint64_t)(v233 + 2);
      *(void *)&v675.st_dev = sub_24D4B7DCC;
      v675.st_ino = v468;
      unsigned int v243 = v669;
      sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
      unsigned int v238 = v243;
      if (!v243)
      {
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v469;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D500F88;
        v675.st_ino = (__darwin_ino64_t)v121;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        unsigned int v669 = 0;
        swift_release();
        _os_log_impl(&dword_24D3D0000, v236, (os_log_type_t)v668, "can't mark the root dataless: %@", v233, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v232, -1, -1);
        sub_24DA89864();
      }
      goto LABEL_205;
    }

    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v646 + 8))(v634, v655);
    os_log_t v162 = isa;
    uint64_t v473 = v645;
    goto LABEL_148;
  }
  uint64_t v642 = OBJC_IVAR____TtC9libfssync20InternalPathsManager_providerDomainID;
  uint64_t v252 = v668;
  LODWORD(v644) = sub_24DA22A30(v668);
  unint64_t v659 = (char *)(v646 + 8);
  swift_bridgeObjectRetain();
  uint64_t v253 = 4;
  unint64_t v638 = (char *)(MEMORY[0x263F8EE58] + 8);
  v660 = v162 + 1;
  while (1)
  {
    uint64_t v255 = v253 - 4;
    v664 = v253;
    if (v644) {
      id v256 = *(id *)(v252 + 8 * v253);
    }
    else {
      id v256 = (id)MEMORY[0x253328820](v253 - 4, v252);
    }
    unsigned int v257 = v256;
    unsigned int v669 = v137;
    unint64_t v663 = (uint8_t *)(v255 + 1);
    if (__OFADD__(v255, 1)) {
      __break(1u);
    }
    sub_24DA18988();
    uint64_t v258 = swift_allocObject();
    *(void *)(v258 + 16) = v257;
    uint64_t v259 = swift_allocObject();
    *(void *)(v259 + 16) = v257;
    unint64_t v666 = v257;
    int v260 = sub_24DCC9068();
    LODWORD(v667) = sub_24DCCA108();
    __darwin_ino64_t v261 = swift_allocObject();
    *(unsigned char *)(v261 + 16) = 34;
    id v121 = (char **)swift_allocObject();
    *((unsigned char *)v121 + 16) = 8;
    uint64_t v262 = swift_allocObject();
    *(void *)(v262 + 16) = sub_24D501594;
    *(void *)(v262 + 24) = v258;
    BOOL v233 = (unsigned char *)swift_allocObject();
    *((void *)v233 + 2) = sub_24D4B7DA8;
    *((void *)v233 + 3) = v262;
    unsigned int v238 = (void *)swift_allocObject();
    *((unsigned char *)v238 + 16) = 34;
    __darwin_ino64_t v232 = swift_allocObject();
    *(unsigned char *)(v232 + 16) = 8;
    uint64_t v263 = swift_allocObject();
    *(void *)(v263 + 16) = sub_24D500E9C;
    *(void *)(v263 + 24) = v259;
    __darwin_ino64_t v242 = swift_allocObject();
    *(void *)(v242 + 16) = sub_24D4B7DA8;
    *(void *)(v242 + 24) = v263;
    os_log_t v92 = (os_log_t)__swift_instantiateConcreteTypeFromMangledName(&qword_26B199EE8);
    uint64_t v264 = swift_allocObject();
    sub_24D719BBC(v264, 6);
    *unsigned int v265 = sub_24D4B7DCC;
    v265[1] = v261;
    v265[2] = sub_24D4B7DCC;
    v265[3] = v121;
    v265[4] = sub_24D4B7DC8;
    v265[5] = v233;
    v265[6] = sub_24D4B7DCC;
    v265[7] = v238;
    v265[8] = sub_24D4B7DCC;
    v265[9] = v232;
    v265[10] = sub_24D4B7DC8;
    v265[11] = v242;
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRelease();
    BOOL v266 = os_log_type_enabled(v260, (os_log_type_t)v667);
    unint64_t v658 = (uint8_t *)v92;
    if (v266)
    {
      v656 = v260;
      uint64_t v267 = sub_24DA8985C();
      unsigned int v236 = swift_slowAlloc();
      v676[0] = 0;
      v678[0] = v236;
      uint64_t v650 = (uint8_t *)v267;
      *(_WORD *)uint64_t v267 = 514;
      uint64_t v672 = v267 + 2;
      *(void *)&v675.st_dev = sub_24D4B7DCC;
      v675.st_ino = v261;
      unsigned int v243 = v669;
      sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
      uint64_t v244 = v243;
      if (!v243)
      {
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = (__darwin_ino64_t)v121;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DC8;
        v675.st_ino = (__darwin_ino64_t)v233;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = (__darwin_ino64_t)v238;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DCC;
        v675.st_ino = v232;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        *(void *)&v675.st_dev = sub_24D4B7DC8;
        v675.st_ino = v242;
        sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
        swift_release();
        _os_log_impl(&dword_24D3D0000, v656, (os_log_type_t)v667, "marking folder %{public}s as detached from %{public}s", v650, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v236, -1, -1);
        sub_24DA89864();
      }
      goto LABEL_204;
    }

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    unsigned int v268 = *(uint8_t **)v659;
    (*(void (**)(char *, uint64_t))v659)(v653, v655);
    unsigned int v269 = v669;
    uint64_t v270 = v648;
    int v271 = v666;
    id v272 = [(uint8_t *)v666 knownFolder];
    sub_24DCC89E8();

    sub_24DCC8A18();
    fpfs_openflags(1048832);
    sub_24DCC9898();
    uint64_t v273 = fpfs_lp_openat();
    uint64_t v274 = swift_release();
    if ((v273 & 0x80000000) != 0)
    {
      int v446 = MEMORY[0x253327160](v274);
      sub_24D90CF14(v446, 1, 0, 0xAu);
      swift_willThrow();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      uint64_t v447 = (uint8_t *)v660->isa;
      unint64_t v448 = v671;
      ((void (*)(char *, NSObject *))v660->isa)(v270, v671);
      swift_bridgeObjectRelease();
      ((void (*)(char *, NSObject *))v447)(v645, v448);
      uint64_t v449 = (uint64_t)v614;
      goto LABEL_157;
    }
    swift_bridgeObjectRelease();
    uint64_t v275 = (uint8_t *)v660->isa;
    uint64_t v276 = ((uint64_t (*)(char *, NSObject *))v660->isa)(v270, v671);
    MEMORY[0x270FA5388](v276);
    uint64_t v277 = v651;
    sub_24DA6F7F4((void *(*)(void *__return_ptr, uint64_t))sub_24D500F00);
    unsigned int v137 = v269;
    if (v269)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      ((void (*)(char *, NSObject *))v275)(v645, v671);
      sub_24D415F74((uint64_t)v614, (uint64_t *)&unk_26B199050);
      sub_24D40CB10(v273);
      sub_24D409FE4(v277);
      return;
    }
    unsigned int v667 = v268;
    LODWORD(v669) = v273;
    id v278 = [(uint8_t *)v271 logicalLocation];
    uint64_t v279 = v654;
    sub_24DCC89E8();

    sub_24DCC89A8();
    unsigned int v280 = v671;
    ((void (*)(char *, NSObject *))v275)(v279, v671);
    id v281 = [(uint8_t *)v271 logicalLocation];
    sub_24DCC89E8();

    uint64_t v282 = sub_24DCC8918();
    __darwin_ino64_t v284 = v283;
    ((void (*)(char *, NSObject *))v275)(v279, v280);
    *(void *)&v675.st_dev = v282;
    v675.st_ino = v284;
    uint64_t v672 = 58;
    unint64_t v673 = 0xE100000000000000;
    v676[0] = 47;
    v676[1] = 0xE100000000000000;
    sub_24D3F0EB8();
    uint64_t v285 = sub_24DCCA478();
    uint64_t v287 = v286;
    swift_bridgeObjectRelease();
    uint64_t v288 = *(void *)(v670 + v642);
    uint64_t v289 = sub_24D5FC728();
    uint64_t v290 = v652;
    sub_24DC892F0(v669, v652, v285, v287, v661, v289, v291);
    unint64_t v666 = v275;
    ((void (*)(uint64_t, NSObject *))v275)(v290, v671);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D40CB10(v669);
    if (sub_24D3F0C10(1, (uint64_t)[(uint8_t *)v271 detachOptions])) {
      break;
    }

    os_log_t v162 = isa;
    __darwin_ino64_t v254 = v661;
LABEL_82:
    uint64_t v252 = v668;
    uint64_t v253 = (uint64_t)&v664->isa + 1;
    if (v663 == v662)
    {
      swift_bridgeObjectRelease();
      goto LABEL_139;
    }
  }
  uint64_t v641 = v288;
  unsigned int v669 = 0;
  sub_24DA18988();
  uint64_t v292 = swift_allocObject();
  *(void *)(v292 + 16) = v271;
  uint64_t v293 = swift_allocObject();
  *(void *)(v293 + 16) = v271;
  v639 = v271;
  v656 = sub_24DCC9068();
  LODWORD(v650) = sub_24DCCA108();
  __darwin_ino64_t v294 = swift_allocObject();
  *(unsigned char *)(v294 + 16) = 34;
  __darwin_ino64_t v295 = swift_allocObject();
  *(unsigned char *)(v295 + 16) = 8;
  uint64_t v296 = swift_allocObject();
  *(void *)(v296 + 16) = sub_24D501590;
  *(void *)(v296 + 24) = v292;
  __darwin_ino64_t v297 = swift_allocObject();
  *(void *)(v297 + 16) = sub_24D4B7DA8;
  *(void *)(v297 + 24) = v296;
  __darwin_ino64_t v232 = swift_allocObject();
  *(unsigned char *)(v232 + 16) = 34;
  __darwin_ino64_t v298 = swift_allocObject();
  *(unsigned char *)(v298 + 16) = 8;
  uint64_t v299 = swift_allocObject();
  *(void *)(v299 + 16) = sub_24D501594;
  *(void *)(v299 + 24) = v293;
  __darwin_ino64_t v300 = swift_allocObject();
  *(void *)(v300 + 16) = sub_24D4B7DA8;
  *(void *)(v300 + 24) = v299;
  uint64_t v301 = v656;
  uint64_t v302 = swift_allocObject();
  sub_24D719BBC(v302, 6);
  *long long v303 = sub_24D4B7DCC;
  v303[1] = v294;
  v303[2] = sub_24D4B7DCC;
  v303[3] = v295;
  v303[4] = sub_24D4B7DC8;
  v303[5] = v297;
  v303[6] = sub_24D4B7DCC;
  v303[7] = v232;
  v303[8] = sub_24D4B7DCC;
  v303[9] = v298;
  v303[10] = sub_24D4B7DC8;
  v303[11] = v300;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  if (!os_log_type_enabled(v301, (os_log_type_t)v650))
  {

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    ((void (*)(char *, uint64_t))v667)(v647, v655);
    unsigned int v137 = v669;
    os_log_t v162 = isa;
    __darwin_ino64_t v254 = v661;
    type metadata accessor for InternalPathsManager();
    uint64_t v306 = v639;
    id v307 = [(uint8_t *)v639 knownFolder];
    uint64_t v308 = (uint64_t)v654;
    sub_24DCC89E8();

    id v309 = [(uint8_t *)v306 logicalLocation];
    uint64_t v310 = (uint64_t)v643;
    sub_24DCC89E8();

    sub_24D4F4B58(v308, v310, v641);
    uint64_t v311 = v671;
    unsigned int v312 = v666;
    ((void (*)(uint64_t, NSObject *))v666)(v310, v671);
    ((void (*)(uint64_t, NSObject *))v312)(v308, v311);
    goto LABEL_82;
  }
  uint64_t v304 = sub_24DA8985C();
  uint64_t v305 = swift_slowAlloc();
  v676[0] = 0;
  v678[0] = v305;
  unint64_t v658 = (uint8_t *)v304;
  *(_WORD *)uint64_t v304 = 514;
  uint64_t v672 = v304 + 2;
  *(void *)&v675.st_dev = sub_24D4B7DCC;
  v675.st_ino = v294;
  unsigned int v243 = v669;
  sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
  BOOL v233 = v243;
  if (!v243)
  {
    swift_release();
    *(void *)&v675.st_dev = sub_24D4B7DCC;
    v675.st_ino = v295;
    sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
    swift_release();
    *(void *)&v675.st_dev = sub_24D4B7DC8;
    v675.st_ino = v297;
    sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
    swift_release();
    *(void *)&v675.st_dev = sub_24D4B7DCC;
    v675.st_ino = v232;
    sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
    swift_release();
    *(void *)&v675.st_dev = sub_24D4B7DCC;
    v675.st_ino = v298;
    sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
    swift_release();
    *(void *)&v675.st_dev = sub_24D4B7DC8;
    v675.st_ino = v300;
    sub_24DA89880((uint64_t (**)(uint64_t, uint64_t, uint64_t))&v675, (uint64_t)&v672, (uint64_t)v676, (uint64_t)v678);
    swift_release();
    _os_log_impl(&dword_24D3D0000, v656, (os_log_type_t)v650, "creating symlink from  %{public}s to detached root %{public}s", v658, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v305, -1, -1);
    sub_24DA89864();
  }
LABEL_207:

  __break(1u);
  __break(1u);

  __break(1u);
LABEL_208:

  __break(1u);
}

uint64_t sub_24D4FEDD8()
{
  sub_24DCC97E8();
  uint64_t v0 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v1 = objc_msgSend(v0, sel_fp_obfuscatedProviderDomainID);

  uint64_t v2 = sub_24DCC97E8();
  return v2;
}

uint64_t sub_24D4FEE50(void *a1)
{
  id v1 = objc_msgSend(a1, sel_providerDomainID);
  sub_24DCC97E8();

  uint64_t v2 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v3 = objc_msgSend(v2, sel_fp_obfuscatedProviderDomainID);

  uint64_t v4 = sub_24DCC97E8();
  return v4;
}

uint64_t sub_24D4FEEF0@<X0>(uint64_t a1@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D409F80(a1, (uint64_t)v8);
  sub_24D414684((uint64_t)v12);
  sub_24D5013B0((uint64_t)v12, (uint64_t)v11);
  void v10[4] = a2;
  *a3 = sub_24DCA263C((uint64_t)v11, (unint64_t)sub_24D501418, (unint64_t)v10);
  return sub_24D409FE4((uint64_t)v8);
}

uint64_t sub_24D4FEFE4(void *a1, SEL *a2)
{
  uint64_t v4 = sub_24DCC8A58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 *a2];
  sub_24DCC89E8();

  uint64_t v9 = (void *)sub_24DCC8948();
  id v10 = objc_msgSend(v9, sel_fp_shortDescription);

  uint64_t v11 = sub_24DCC97E8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v11;
}

id sub_24D4FF110()
{
  swift_getErrorValue();
  return sub_24DBA2828(v1);
}

uint64_t sub_24D4FF14C()
{
  uint64_t v0 = (void *)sub_24DCC8948();
  id v1 = objc_msgSend(v0, sel_fp_shortDescription);

  uint64_t v2 = sub_24DCC97E8();
  return v2;
}

uint64_t sub_24D4FF1B4(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v2 = *(void **)(a1 + 16);
  if (!v2) {
    return 0x3E6C696E3CLL;
  }
  uint64_t v12 = v2;
  sub_24D501328();
  sub_24D501368(&qword_26986BD10, (void (*)(uint64_t))sub_24D501328);
  id v3 = v2;
  uint64_t v4 = sub_24DCCAD98();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
  }
  else
  {
    uint64_t v5 = (void *)swift_allocError();
    *uint64_t v7 = v12;
  }
  id v8 = (void *)sub_24DCC8818();

  id v9 = objc_msgSend(v8, sel_fp_prettyDescription);
  id v10 = objc_msgSend(v9, sel_description);

  uint64_t v6 = sub_24DCC97E8();
  return v6;
}

uint64_t sub_24D4FF31C()
{
  sub_24DCC8A18();
  fpfs_openflags(0);
  sub_24DCC9898();
  uint64_t v0 = fpfs_lp_openat();
  uint64_t v1 = swift_release();
  if ((v0 & 0x80000000) != 0)
  {
    int v3 = MEMORY[0x253327160](v1);
    sub_24D90CF14(v3, 1, 0, 0xAu);
    swift_willThrow();
    return swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_24DCC97E8();
    sub_24DC88B3C(v0);
    swift_bridgeObjectRelease();
    return sub_24D40CB10(v0);
  }
}

uint64_t sub_24D4FF418@<X0>(_DWORD *a1@<X8>)
{
  sub_24DCC8A18();
  v5[4] = sub_24DA6F80C;
  v5[5] = 0;
  v5[0] = MEMORY[0x263EF8330];
  v5[1] = 1107296256;
  v5[2] = sub_24D90BE98;
  v5[3] = &block_descriptor_2;
  uint64_t v2 = _Block_copy(v5);
  swift_release();
  sub_24DCC9898();
  swift_bridgeObjectRelease();
  int dataless_fault_at = fpfs_create_dataless_fault_at();
  swift_release();
  _Block_release(v2);
  *a1 = dataless_fault_at;
  uint64_t result = swift_isEscapingClosureAtFileLocation();
  if (result) {
    __break(1u);
  }
  return result;
}

id sub_24D4FF548()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void sub_24D4FF57C()
{
}

id sub_24D4FF5DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InternalPathsManager();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24D4FF708(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_24DCCA9C8();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_24D4FF768()
{
  return type metadata accessor for InternalPathsManager();
}

void sub_24D4FF770()
{
  sub_24D4FF82C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_24D4FF82C()
{
  if (!qword_26B199060)
  {
    sub_24DCC8A58();
    unint64_t v0 = sub_24DCCA3F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B199060);
    }
  }
}

uint64_t sub_24D4FF884(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

void *sub_24D4FF88C(uint64_t a1, uint64_t a2)
{
  v12[1] = *MEMORY[0x263EF8340];
  int v3 = self;
  uint64_t v4 = (void *)sub_24DCC8948();
  id v11 = 0;
  v12[0] = 0;
  LODWORD(v3) = objc_msgSend(v3, sel_getProviderDomainID_location_foundDomainID_error_, v4, a2, v12, &v11);

  uint64_t v5 = (void *)v12[0];
  if (v3)
  {
    id v6 = v11;
    id v7 = v5;
  }
  else
  {
    id v8 = v11;
    id v9 = v5;
    sub_24DCC8828();

    swift_willThrow();
  }
  return v5;
}

uint64_t sub_24D4FF984(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
  objc_msgSend(v8, sel_setDateStyle_, 1);
  objc_msgSend(v8, sel_setTimeStyle_, 1);
  sub_24DCC8CD8();
  id v9 = (void *)sub_24DCC8C38();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v10 = objc_msgSend(v8, sel_stringFromDate_, v9);

  uint64_t v11 = sub_24DCC97E8();
  unint64_t v13 = v12;

  uint64_t v23 = v11;
  unint64_t v24 = v13;
  uint64_t v21 = 47;
  unint64_t v22 = 0xE100000000000000;
  uint64_t v19 = 45;
  unint64_t v20 = 0xE100000000000000;
  sub_24D3F0EB8();
  uint64_t v14 = sub_24DCCA478();
  unint64_t v16 = v15;
  swift_bridgeObjectRelease();
  uint64_t v23 = v14;
  unint64_t v24 = v16;
  uint64_t v21 = 44;
  unint64_t v22 = 0xE100000000000000;
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_24DCCA478();
  swift_bridgeObjectRelease();
  uint64_t v23 = 10272;
  unint64_t v24 = 0xE200000000000000;
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v21 = a1;
  unint64_t v22 = a2;
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_24DCC9A68();
  unint64_t v22 = v17;
  sub_24DCC9958();
  swift_bridgeObjectRelease();

  return v21;
}

uint64_t sub_24D4FFC3C(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_24D4FF88C(a1, 1);
  if (!v2)
  {
    uint64_t v6 = v4;
    id v7 = objc_msgSend(a2, sel_providerDomainID);
    id v8 = v7;
    if (v6)
    {
      uint64_t v9 = sub_24DCC97E8();
      uint64_t v11 = v10;
      if (v9 == sub_24DCC97E8() && v11 == v12)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v14 = sub_24DCCAE28();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v5 = 0;
        if ((v14 & 1) == 0) {
          return v5 & 1;
        }
      }
      char v5 = 1;
    }
    else
    {

      char v5 = 0;
    }
  }
  return v5 & 1;
}

void sub_24D4FFD34()
{
  sub_24D4F1450(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_24D4FFD50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D4FFDB8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D4FFE20@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_24D4F49A0(a1, a2);
}

uint64_t sub_24D4FFE40(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24D4FFE54@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return sub_24D4F53E4(a1, *(char **)(v2 + 16), *(void *)(v2 + 24), *(NSObject **)(v2 + 32), a2);
}

BOOL sub_24D4FFE74(int a1)
{
  uint64_t v7 = *MEMORY[0x263EF8340];
  memset(&v6, 0, 28);
  memset(&v6.st_atimespec, 0, 112);
  int v2 = fstat(a1, &v6);
  BOOL result = 0;
  if (!v2)
  {
    int st_mode = v6.st_mode;
    int v5 = sub_24DCC9118() & st_mode;
    return v5 == (unsigned __int16)sub_24DCC9118()
        && fgetxattr(a1, "com.apple.fileprovider.detached-link#P", 0, 0, 0, 0) >= 0;
  }
  return result;
}

void sub_24D4FFF50()
{
  sub_24D4F6298(*(void *)(v0 + 16), *(NSObject **)(v0 + 24), *(uint8_t **)(v0 + 32), *(uint8_t **)(v0 + 40), *(void *)(v0 + 48), *(unsigned char **)(v0 + 56));
}

uint64_t sub_24D4FFF7C()
{
  return swift_deallocObject();
}

uint64_t sub_24D4FFF8C()
{
  return swift_deallocObject();
}

uint64_t sub_24D4FFFA0()
{
  return sub_24D4FF14C();
}

uint64_t sub_24D4FFFF4()
{
  return swift_deallocObject();
}

uint64_t sub_24D500004()
{
  return swift_deallocObject();
}

uint64_t sub_24D500018()
{
  return sub_24D4FF1B4(v0);
}

uint64_t sub_24D500034()
{
  return swift_deallocObject();
}

uint64_t sub_24D500044()
{
  return swift_deallocObject();
}

uint64_t sub_24D500054()
{
  return swift_deallocObject();
}

uint64_t sub_24D500064()
{
  return swift_deallocObject();
}

uint64_t sub_24D500074(uint64_t a1, int a2)
{
  uint64_t v146 = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_24DCC9078();
  uint64_t v121 = *(void *)(v4 - 8);
  uint64_t v122 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  id v119 = (uint8_t *)&v106 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v115 = ((char *)&v106 - v8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = ((char *)&v106 - v9);
  uint64_t v11 = sub_24DCC8CE8();
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v13 = (char *)&v106 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC8A58();
  uint64_t v124 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  int v113 = (char *)&v106 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  unint64_t v22 = (void (*)(char *, uint64_t))((char *)&v106 - v21);
  MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v106 - v23;
  uint64_t v123 = a1;
  sub_24DCC89A8();
  int v114 = a2;
  id v118 = v17;
  if ((a2 & 1) == 0) {
    goto LABEL_5;
  }
  uint64_t v120 = v22;
  os_log_t v116 = v10;
  id v25 = objc_msgSend(self, sel_defaultManager);
  sub_24DCC8A18();
  uint64_t v26 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  objc_msgSend(v25, sel_fp_createPathIfNeeded_, v26);

  sub_24DCC8A18();
  fpfs_openflags(0x100000);
  sub_24DCC9898();
  uint64_t v27 = fpfs_lp_openat();
  uint64_t v28 = swift_release();
  if ((v27 & 0x80000000) != 0)
  {
    int v82 = MEMORY[0x253327160](v28);
    id v58 = (id)sub_24D90CF14(v82, 1, 0, 0xAu);
    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v30 = v124;
    uint64_t v37 = v14;
    uint64_t v120 = *(void (**)(char *, uint64_t))(v124 + 8);
    v120(v24, v14);
LABEL_19:
    uint64_t v59 = v118;
    uint64_t v46 = v119;
    goto LABEL_20;
  }
  swift_bridgeObjectRelease();
  int v29 = fpfs_fset_acl();
  uint64_t v30 = v124;
  if (v29 < 0)
  {
    int v83 = MEMORY[0x253327160]();
    id v58 = (id)sub_24D90CF14(v83, 16, 0, 2u);
    swift_willThrow();
    uint64_t v37 = v14;
    uint64_t v120 = *(void (**)(char *, uint64_t))(v30 + 8);
    v120(v24, v14);
    sub_24D40CB10(v27);
    goto LABEL_19;
  }
  close(v27);
  uint64_t v10 = v116;
  unint64_t v22 = v120;
LABEL_5:
  char v117 = v24;
  BYTE6(v129) = 0;
  WORD2(v129) = 0;
  long long v131 = 0u;
  long long v132 = 0u;
  long long v133 = 0u;
  long long v134 = 0u;
  long long v135 = 0u;
  char v136 = 0;
  int v137 = 0;
  long long v138 = 0u;
  long long v139 = 0u;
  long long v140 = 0u;
  memset(v141, 0, sizeof(v141));
  uint64_t v143 = 0;
  uint64_t v144 = 0;
  uint64_t v142 = 0;
  int v145 = 0;
  LODWORD(v129) = 2;
  __int16 v130 = 448;
  sub_24D501450((uint64_t)&v129);
  sub_24DCC8CD8();
  *((void *)&v131 + 1) = sub_24D769534((uint64_t)v13);
  *(void *)&long long v132 = v31;
  sub_24DCC8CD8();
  *((void *)&v132 + 1) = sub_24D769534((uint64_t)v13);
  *(void *)&long long v133 = v32;
  id v33 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v34 = v124;
  uint64_t v111 = *(void (**)(char *, uint64_t, uint64_t))(v124 + 16);
  uint64_t v112 = v124 + 16;
  v111((char *)v22, v123, v14);
  uint64_t v35 = sub_24DCC9068();
  os_log_type_t v36 = sub_24DCCA108();
  uint64_t v37 = v14;
  if (os_log_type_enabled(v35, v36))
  {
    os_log_t v109 = v35;
    uint64_t v38 = (uint8_t *)swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    uint64_t v128 = v108;
    uint64_t v107 = v38;
    *(_DWORD *)uint64_t v38 = 136315138;
    uint64_t v120 = (void (*)(char *, uint64_t))(v38 + 4);
    uint64_t v39 = (void *)sub_24DCC8948();
    id v40 = objc_msgSend(v39, sel_fp_shortDescription);
    os_log_t v116 = v10;
    uint64_t v41 = (char *)v22;
    id v42 = v40;

    uint64_t v43 = sub_24DCC97E8();
    uint64_t v110 = v37;
    unint64_t v45 = v44;

    uint64_t v46 = v119;
    os_log_type_t v47 = v36;
    uint64_t v48 = v117;
    uint64_t v49 = v123;
    uint64_t v126 = sub_24D418FB4(v43, v45, &v128);
    uint64_t v30 = v124;
    sub_24DCCA428();
    uint64_t v37 = v110;
    swift_bridgeObjectRelease();
    uint64_t v50 = v41;
    uint64_t v51 = v48;
    uint64_t v120 = *(void (**)(char *, uint64_t))(v30 + 8);
    v120(v50, v37);
    os_log_t v52 = v109;
    uint64_t v53 = v107;
    _os_log_impl(&dword_24D3D0000, v109, v47, "Marking root dataless %s", v107, 0xCu);
    uint64_t v54 = v108;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v54, -1, -1);
    MEMORY[0x25332B030](v53, -1, -1);

    uint64_t v55 = *(uint64_t (**)(os_log_t, uint64_t))(v121 + 8);
    uint64_t v56 = v55(v116, v122);
  }
  else
  {
    uint64_t v120 = *(void (**)(char *, uint64_t))(v34 + 8);
    v120((char *)v22, v14);

    uint64_t v55 = *(uint64_t (**)(os_log_t, uint64_t))(v121 + 8);
    uint64_t v56 = v55(v10, v122);
    uint64_t v30 = v34;
    uint64_t v46 = v119;
    uint64_t v51 = v117;
    uint64_t v49 = v123;
  }
  MEMORY[0x270FA5388](v56);
  *(&v106 - 2) = v49;
  *(&v106 - 1) = (uint64_t)&v129;
  id v57 = v125;
  sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D501460);
  id v125 = v57;
  if (v57)
  {
    v120(v51, v37);
    id v58 = v125;
LABEL_10:
    uint64_t v59 = v118;
LABEL_21:
    id v84 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 16))(v59, v49, v37);
    id v85 = v58;
    id v86 = v58;
    uint64_t v87 = sub_24DCC9068();
    os_log_type_t v88 = sub_24DCCA128();
    if (os_log_type_enabled(v87, v88))
    {
      uint64_t v89 = swift_slowAlloc();
      id v125 = v58;
      uint64_t v90 = v89;
      char v117 = (char *)swift_slowAlloc();
      uint64_t v123 = swift_slowAlloc();
      uint64_t v129 = v123;
      *(_DWORD *)uint64_t v90 = 136315394;
      uint64_t v115 = (v90 + 4);
      os_log_t v116 = v87;
      unint64_t v91 = (void *)sub_24DCC8948();
      os_log_t v92 = v59;
      id v93 = objc_msgSend(v91, sel_fp_shortDescription);

      uint64_t v94 = sub_24DCC97E8();
      unint64_t v96 = v95;

      uint64_t v128 = sub_24D418FB4(v94, v96, &v129);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      v120(v92, v37);
      *(_WORD *)(v90 + 12) = 2112;
      swift_getErrorValue();
      id v97 = sub_24DBA2828(v127);
      uint64_t v128 = (uint64_t)v97;
      sub_24DCCA428();
      os_log_t v98 = v117;
      *(void *)char v117 = v97;

      os_log_t v99 = v116;
      _os_log_impl(&dword_24D3D0000, v116, v88, "Error while creating root %s: %@", (uint8_t *)v90, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030]((char *)v98, -1, -1);
      uint64_t v100 = v123;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v100, -1, -1);
      MEMORY[0x25332B030](v90, -1, -1);

      (*(void (**)(uint8_t *, uint64_t))(v121 + 8))(v119, v122);
    }
    else
    {
      v120(v59, v37);

      (*(void (**)(uint8_t *, uint64_t))(v121 + 8))(v46, v122);
    }
    return swift_willThrow();
  }
  if (v114)
  {
    sub_24DCC8A18();
    fpfs_openflags(0x100000);
    sub_24DCC9898();
    uint64_t v60 = fpfs_lp_openat();
    uint64_t v61 = swift_release();
    if ((v60 & 0x80000000) != 0)
    {
      int v104 = MEMORY[0x253327160](v61);
      id v58 = (id)sub_24D90CF14(v104, 1, 0, 0xAu);
      swift_willThrow();
      swift_bridgeObjectRelease();
      uint64_t v30 = v124;
      v120(v51, v37);
      uint64_t v46 = v119;
      uint64_t v49 = v123;
      goto LABEL_10;
    }
    swift_bridgeObjectRelease();
    int v62 = fpfs_fset_acl();
    uint64_t v30 = v124;
    uint64_t v59 = v118;
    if ((v62 & 0x80000000) == 0)
    {
      close(v60);
      uint64_t v49 = v123;
      goto LABEL_15;
    }
    int v105 = MEMORY[0x253327160]();
    id v58 = (id)sub_24D90CF14(v105, 1024, 0, 2u);
    swift_willThrow();
    v120(v51, v37);
    sub_24D40CB10(v60);
    uint64_t v46 = v119;
LABEL_20:
    uint64_t v49 = v123;
    goto LABEL_21;
  }
LABEL_15:
  id v63 = (id)fpfs_current_or_default_log();
  uint64_t v64 = v115;
  sub_24DCC9088();
  uint64_t v65 = v113;
  v111(v113, v49, v37);
  uint64_t v66 = v37;
  uint64_t v67 = sub_24DCC9068();
  os_log_type_t v68 = sub_24DCCA108();
  int v69 = v68;
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v70 = swift_slowAlloc();
    uint64_t v123 = swift_slowAlloc();
    uint64_t v128 = v123;
    LODWORD(v118) = v69;
    id v119 = (uint8_t *)v70;
    *(_DWORD *)uint64_t v70 = 136315138;
    os_log_t v116 = (os_log_t)(v70 + 4);
    uint64_t v71 = (void *)sub_24DCC8948();
    id v72 = objc_msgSend(v71, sel_fp_shortDescription);

    uint64_t v73 = sub_24DCC97E8();
    uint64_t v74 = v66;
    unint64_t v76 = v75;

    uint64_t v126 = sub_24D418FB4(v73, v76, &v128);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    uint64_t v77 = v120;
    v120(v65, v74);
    int v78 = v119;
    _os_log_impl(&dword_24D3D0000, v67, (os_log_type_t)v118, "Created dataless root %s", v119, 0xCu);
    uint64_t v79 = v123;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v79, -1, -1);
    MEMORY[0x25332B030](v78, -1, -1);

    v55(v115, v122);
    uint64_t v80 = v117;
    uint64_t v81 = v74;
  }
  else
  {

    uint64_t v102 = v66;
    uint64_t v103 = v66;
    uint64_t v77 = v120;
    v120(v65, v102);
    v55(v64, v122);
    uint64_t v80 = v51;
    uint64_t v81 = v103;
  }
  return ((uint64_t (*)(char *, uint64_t))v77)(v80, v81);
}

uint64_t sub_24D500DB4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D500DEC()
{
  return swift_deallocObject();
}

uint64_t sub_24D500DFC()
{
  return swift_deallocObject();
}

uint64_t sub_24D500E0C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D500E44()
{
  return swift_deallocObject();
}

uint64_t sub_24D500E54()
{
  return swift_deallocObject();
}

uint64_t sub_24D500E64()
{
  return swift_deallocObject();
}

uint64_t sub_24D500E9C()
{
  return sub_24D4FEFE4(*(void **)(v0 + 16), (SEL *)&selRef_logicalLocation);
}

uint64_t sub_24D500EC0()
{
  return swift_deallocObject();
}

uint64_t sub_24D500ED0()
{
  return swift_deallocObject();
}

uint64_t sub_24D500EE0()
{
  return swift_deallocObject();
}

uint64_t sub_24D500EF0()
{
  return swift_deallocObject();
}

uint64_t sub_24D500F00@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D4FEEF0(*(void *)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_24D500F20()
{
  return swift_deallocObject();
}

id sub_24D500F58()
{
  return sub_24D4FF110();
}

uint64_t sub_24D500F60()
{
  return swift_deallocObject();
}

uint64_t sub_24D500F70()
{
  return swift_deallocObject();
}

uint64_t sub_24D500F80()
{
  return sub_24D7C6E48(*(uint64_t (**)(void))(v0 + 16));
}

void sub_24D500F88(uint64_t *a1, void **a2, uint64_t a3)
{
  sub_24D7C6D90(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_24D500F94()
{
  return swift_deallocObject();
}

uint64_t sub_24D500FA4()
{
  return swift_deallocObject();
}

uint64_t sub_24D500FB4()
{
  return swift_deallocObject();
}

uint64_t sub_24D500FC4()
{
  return swift_deallocObject();
}

uint64_t sub_24D500FD4()
{
  return swift_deallocObject();
}

uint64_t sub_24D500FE4()
{
  return swift_deallocObject();
}

uint64_t sub_24D500FF4()
{
  return swift_deallocObject();
}

uint64_t sub_24D501004()
{
  return swift_deallocObject();
}

uint64_t sub_24D501014()
{
  return sub_24D4FEFE4(*(void **)(v0 + 16), (SEL *)&selRef_knownFolder);
}

uint64_t sub_24D501038()
{
  return swift_deallocObject();
}

uint64_t sub_24D501048()
{
  return swift_deallocObject();
}

uint64_t sub_24D501058()
{
  return swift_deallocObject();
}

uint64_t sub_24D501068()
{
  return swift_deallocObject();
}

uint64_t sub_24D50107C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24D5010AC()
{
  return swift_deallocObject();
}

uint64_t sub_24D5010BC()
{
  return swift_deallocObject();
}

uint64_t sub_24D5010CC()
{
  return swift_deallocObject();
}

uint64_t sub_24D5010DC()
{
  return swift_deallocObject();
}

uint64_t sub_24D5010F0()
{
  return swift_deallocObject();
}

uint64_t sub_24D501100()
{
  return swift_deallocObject();
}

uint64_t sub_24D501114()
{
  return swift_deallocObject();
}

uint64_t sub_24D501124()
{
  return swift_deallocObject();
}

uint64_t sub_24D501138()
{
  return swift_deallocObject();
}

uint64_t sub_24D501148()
{
  return swift_deallocObject();
}

uint64_t sub_24D501158()
{
  return swift_deallocObject();
}

uint64_t sub_24D501168()
{
  return swift_deallocObject();
}

uint64_t sub_24D501178()
{
  return swift_deallocObject();
}

uint64_t sub_24D501188()
{
  return swift_deallocObject();
}

uint64_t sub_24D50119C()
{
  return sub_24D4FEDD8();
}

uint64_t sub_24D5011B8()
{
  return sub_24D4FEE50(*(void **)(v0 + 16));
}

uint64_t sub_24D5011D4()
{
  return swift_deallocObject();
}

uint64_t sub_24D5011E4()
{
  return swift_deallocObject();
}

uint64_t sub_24D5011F4()
{
  return swift_deallocObject();
}

uint64_t sub_24D501204()
{
  return swift_deallocObject();
}

uint64_t sub_24D501214()
{
  return swift_deallocObject();
}

uint64_t sub_24D501224()
{
  return swift_deallocObject();
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = sub_24DCC8A58();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_24D5012C8()
{
  return swift_deallocObject();
}

uint64_t sub_24D5012D8()
{
  return swift_deallocObject();
}

uint64_t sub_24D5012E8()
{
  return swift_deallocObject();
}

uint64_t sub_24D5012F8()
{
  return swift_deallocObject();
}

uint64_t sub_24D501308()
{
  return swift_deallocObject();
}

uint64_t sub_24D501318()
{
  return swift_deallocObject();
}

unint64_t sub_24D501328()
{
  unint64_t result = qword_26B1940A0;
  if (!qword_26B1940A0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B1940A0);
  }
  return result;
}

uint64_t sub_24D501368(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D5013B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D501418@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_set_dataless_cmpfs_attrs();
  *a1 = result;
  return result;
}

uint64_t sub_24D501450(uint64_t result)
{
  *(_DWORD *)(result + 4) |= 1u;
  return result;
}

uint64_t sub_24D501460@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D4FF418(a1);
}

unint64_t sub_24D5015A4()
{
  unint64_t result = 0x7461447472617473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x426E656553736168;
      break;
    case 3:
      unint64_t result = 0x66666F6B636162;
      break;
    case 4:
      unint64_t result = 0x656C6174537369;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D501660@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D502814(a1, a2);
  *a3 = result;
  return result;
}

void sub_24D501688(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_24D501694(uint64_t a1)
{
  unint64_t v2 = sub_24D502AB8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D5016D0(uint64_t a1)
{
  unint64_t v2 = sub_24D502AB8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D50170C(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24D50175C(a1);
  return v2;
}

uint64_t sub_24D50175C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v30 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v33 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986BD30);
  uint64_t v31 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = v7;
  uint64_t v11 = *(void (**)(void))(v7 + 56);
  uint64_t v36 = v2 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_deletionDetectionDate;
  v11();
  uint64_t v12 = OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_isStale;
  *(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_isStale) = 2;
  uint64_t v13 = OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff;
  *(void *)(v2 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff) = 100000000;
  uint64_t v14 = a1[3];
  uint64_t v35 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  sub_24D502AB8();
  swift_retain();
  uint64_t v15 = v38;
  sub_24DCCB0B8();
  if (v15)
  {
    swift_release();
    uint64_t v18 = v36;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
    sub_24D419088(v18);
    type metadata accessor for VFSLookupItemContinuation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v38 = v13;
    uint64_t v29 = v12;
    uint64_t v16 = v32;
    v37[0] = 0;
    sub_24D502BCC(&qword_26986BCA0);
    unint64_t v17 = v33;
    sub_24DCCAB98();
    (*(void (**)(uint64_t, char *, uint64_t))(v16 + 32))(v2 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_startDate, v17, v6);
    v37[0] = 1;
    uint64_t v20 = v30;
    sub_24DCCAB08();
    uint64_t v21 = (uint64_t)v20;
    uint64_t v22 = v36;
    swift_beginAccess();
    sub_24D4190E8(v21, v22);
    swift_endAccess();
    v37[0] = 2;
    char v23 = sub_24DCCAB68();
    uint64_t v24 = v31;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_hasSeenBusy) = v23 & 1;
    v37[0] = 3;
    uint64_t v25 = sub_24DCCAAE8();
    uint64_t v27 = 100000000;
    if ((v26 & 1) == 0) {
      uint64_t v27 = v25;
    }
    *(void *)(v2 + v38) = v27;
    v37[0] = 4;
    *(unsigned char *)(v2 + v29) = sub_24DCCAAD8();
    swift_release();
    sub_24DCCAAB8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  }
  return v2;
}

uint64_t sub_24D501C80(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194920);
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v17 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986BD18);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D502AB8();
  sub_24DCCB0D8();
  LOBYTE(v21[0]) = 0;
  sub_24DCC8CE8();
  sub_24D502BCC(&qword_26986BC68);
  uint64_t v13 = v20;
  sub_24DCCACF8();
  if (!v13)
  {
    uint64_t v20 = v10;
    uint64_t v15 = v2 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_deletionDetectionDate;
    swift_beginAccess();
    sub_24D502A50(v15, (uint64_t)v8);
    LOBYTE(v21[0]) = 1;
    sub_24DCCAC58();
    sub_24D419088((uint64_t)v8);
    LOBYTE(v21[0]) = 2;
    sub_24DCCACB8();
    LOBYTE(v21[0]) = 3;
    sub_24DCCACD8();
    LOBYTE(v21[0]) = *(unsigned char *)(v2 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_isStale);
    char v22 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DF0);
    sub_24D502B0C();
    sub_24DCCACF8();
    uint64_t v10 = v20;
    sub_24DCCAC28();
    __swift_project_boxed_opaque_existential_1(v21, v21[3]);
    sub_24D502B78();
    uint64_t v16 = v17;
    sub_24DCCB0D8();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v16, v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

uint64_t sub_24D502084()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_deletionDetectionDate;
  swift_beginAccess();
  sub_24D502A50(v4, (uint64_t)v3);
  uint64_t v5 = sub_24DCC8CE8();
  LODWORD(v4) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5);
  sub_24D419088((uint64_t)v3);
  if v4 != 1 && (*(unsigned char *)(v0 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_hasSeenBusy)) {
    return 2200000000;
  }
  if (*(uint64_t *)(v0 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff) >= 10000000000) {
    return 10000000000;
  }
  return *(void *)(v0 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff);
}

uint64_t sub_24D5021B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t v33 = 0x3A7472617473;
  unint64_t v34 = 0xE600000000000000;
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v26 - v10, v0 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_startDate, v5);
  sub_24DCC8C88();
  double v14 = v13;
  uint64_t v28 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t result = v28(v11, v5);
  double v16 = v14 * 1000000000.0;
  if ((~COERCE__INT64(v14 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (v16 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v16 >= 9.22337204e18)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char v26 = (void (*)(char *, char *, uint64_t))v12;
  uint64_t v27 = v9;
  uint64_t v35 = (uint64_t)v16 / 1000000000;
  sub_24D4E3A40();
  sub_24DCCA518();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v35 = v33;
  unint64_t v36 = v34;
  uint64_t v17 = v0 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_deletionDetectionDate;
  swift_beginAccess();
  sub_24D502A50(v17, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
  {
    uint64_t v18 = v27;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v27, v4, v5);
    uint64_t v31 = 0x3A746E656F6E6520;
    unint64_t v32 = 0xE800000000000000;
    v26(v11, v18, v5);
    sub_24DCC8C88();
    double v20 = v19;
    uint64_t v21 = (void (*)(char *, uint64_t))v28;
    uint64_t result = v28(v11, v5);
    double v22 = v20 * 1000000000.0;
    if ((~COERCE__INT64(v20 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v22 > -9.22337204e18)
      {
        if (v22 < 9.22337204e18)
        {
          uint64_t v29 = (uint64_t)v22 / 1000000000;
          sub_24DCCA518();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          v21(v18, v5);
          goto LABEL_10;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_24D419088((uint64_t)v4);
LABEL_10:
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_hasSeenBusy) == 1) {
    sub_24DCC9968();
  }
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_isStale)) {
    sub_24DCC9968();
  }
  uint64_t v31 = 0x66666F6B63616220;
  unint64_t v32 = 0xE90000000000003ALL;
  uint64_t result = *(void *)(v1 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_backoff);
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v23 = 0;
    unint64_t v24 = 0xE000000000000000;
LABEL_18:
    sub_24D9AC74C(result);
    uint64_t v29 = v23;
    unint64_t v30 = v24;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v35;
  }
  BOOL v25 = __OFSUB__(0, result);
  uint64_t result = -result;
  if (!v25)
  {
    unint64_t v24 = 0xE100000000000000;
    uint64_t v23 = 45;
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_24D502680()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_startDate;
  uint64_t v2 = sub_24DCC8CE8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC9libfssync25VFSLookupItemContinuation_deletionDetectionDate;

  return sub_24D419088(v3);
}

uint64_t sub_24D5026FC()
{
  return type metadata accessor for VFSLookupItemContinuation();
}

void sub_24D502704()
{
  sub_24DCC8CE8();
  if (v0 <= 0x3F)
  {
    sub_24D4EED00();
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_24D5027F0()
{
  return sub_24D5021B8();
}

uint64_t sub_24D502814(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7461447472617473 && a2 == 0xE900000000000065;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024DCFC980 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x426E656553736168 && a2 == 0xEB00000000797375 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x66666F6B636162 && a2 == 0xE700000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656C6174537369 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_24D502A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24D502AB8()
{
  unint64_t result = qword_26986BD20;
  if (!qword_26986BD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BD20);
  }
  return result;
}

unint64_t sub_24D502B0C()
{
  unint64_t result = qword_26986BD28;
  if (!qword_26986BD28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BD28);
  }
  return result;
}

unint64_t sub_24D502B78()
{
  unint64_t result = qword_26B194570;
  if (!qword_26B194570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194570);
  }
  return result;
}

uint64_t sub_24D502BCC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24DCC8CE8();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContentStatus(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for VFSLookupItemContinuation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D502D6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSLookupItemContinuation.CodingKeys()
{
  return &type metadata for VFSLookupItemContinuation.CodingKeys;
}

unint64_t sub_24D502DA8()
{
  unint64_t result = qword_26986BD38;
  if (!qword_26986BD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BD38);
  }
  return result;
}

unint64_t sub_24D502E00()
{
  unint64_t result = qword_26986BD40;
  if (!qword_26986BD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BD40);
  }
  return result;
}

unint64_t sub_24D502E58()
{
  unint64_t result = qword_26986BD48;
  if (!qword_26986BD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BD48);
  }
  return result;
}

uint64_t sub_24D502EAC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D502F44()
{
  return sub_24DCC9888();
}

uint64_t sub_24D502F7C()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 16);
  if (v1 <= 0xFB) {
    return 0;
  }
  else {
    return 4 - (v1 + 4);
  }
}

unint64_t sub_24D502F98()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  *(void *)(inited + 32) = sub_24DCC97E8();
  *(void *)(inited + 40) = v5;
  sub_24D512B94(v1, v2, v3);
  uint64_t v6 = sub_24DCC9868();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v7;
  return sub_24D428D08(inited);
}

uint64_t sub_24D50304C(uint64_t a1)
{
  unint64_t v2 = sub_24D51396C();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24D503088(uint64_t a1)
{
  unint64_t v2 = sub_24D51396C();

  return MEMORY[0x270EF2668](a1, v2);
}

BOOL sub_24D5030C8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  unsigned int v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v5, a1);
  uint64_t v6 = sub_24DCCAD98();
  if (v6)
  {
    uint64_t v7 = (void *)v6;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  }
  else
  {
    uint64_t v7 = (void *)swift_allocError();
    (*(void (**)(uint64_t, char *, uint64_t))(v2 + 32))(v8, v4, a1);
  }
  sub_24D5129BC();
  uint64_t v9 = (void *)swift_allocError();
  *(void *)uint64_t v10 = 0;
  *(void *)(v10 + 8) = 0;
  *(unsigned char *)(v10 + 16) = 3;
  id v11 = v7;
  uint64_t v12 = (void *)sub_24DCC8818();

  double v13 = (void *)sub_24DCC8818();
  id v14 = objc_msgSend(v12, sel_domain);
  uint64_t v15 = sub_24DCC97E8();
  uint64_t v17 = v16;

  id v18 = objc_msgSend(v13, sel_domain);
  uint64_t v19 = sub_24DCC97E8();
  uint64_t v21 = v20;

  if (v15 == v19 && v17 == v21)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_11;
  }
  char v23 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_11:
    id v25 = objc_msgSend(v12, sel_code);
    id v26 = objc_msgSend(v13, sel_code);

    BOOL v24 = v25 == v26;
    goto LABEL_12;
  }

  BOOL v24 = 0;
LABEL_12:

  return v24;
}

void sub_24D50334C()
{
  sub_24D50336C();
  qword_26B1A24C0 = v0;
}

void sub_24D50336C()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], *MEMORY[0x263EF8210]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A0], 0);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 0);
  if (*MEMORY[0x263EF82C8])
  {
    xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82C8], 1);
    xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8280], (const char *)*MEMORY[0x263EF8290]);
    id v1 = objc_allocWithZone(MEMORY[0x263F3C6F0]);
    uint64_t v2 = (void *)sub_24DCC97B8();
    objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24D5034A4()
{
  sub_24D5034C4();
  qword_26B1A24B0 = v0;
}

void sub_24D5034C4()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 7200);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], *MEMORY[0x263EF81F0]);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A0], 1);
  xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF8180], 1);
  if (*MEMORY[0x263EF82C8])
  {
    xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82C8], 1);
    xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8280], (const char *)*MEMORY[0x263EF8290]);
    id v1 = objc_allocWithZone(MEMORY[0x263F3C6F0]);
    uint64_t v2 = (void *)sub_24DCC97B8();
    objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

void sub_24D5035FC()
{
  sub_24D50361C();
  qword_26B1A2498 = v0;
}

void sub_24D50361C()
{
  xpc_object_t v0 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81A0], 0);
  xpc_dictionary_set_int64(v0, (const char *)*MEMORY[0x263EF81C0], 0);
  if (*MEMORY[0x263EF82A8])
  {
    xpc_dictionary_set_BOOL(v0, (const char *)*MEMORY[0x263EF82A8], 1);
    xpc_dictionary_set_string(v0, (const char *)*MEMORY[0x263EF8280], (const char *)*MEMORY[0x263EF8290]);
    id v1 = objc_allocWithZone(MEMORY[0x263F3C6F0]);
    uint64_t v2 = (void *)sub_24DCC97B8();
    objc_msgSend(v1, sel_initWithLabel_criteria_, v2, v0);

    swift_unknownObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24D50371C()
{
  unint64_t v0 = sub_24DCCAA88();
  swift_bridgeObjectRelease();
  if (v0 >= 3) {
    return 3;
  }
  else {
    return v0;
  }
}

uint64_t sub_24D503768()
{
  _s9SQLFieldsOMa();
  sub_24DCCAD88();
  swift_allocObject();
  uint64_t v0 = sub_24DCC9C58();
  *(_WORD *)uint64_t v1 = 256;
  *(unsigned char *)(v1 + 2) = 2;
  return sub_24D785484(v0);
}

uint64_t sub_24D5037DC(char a1)
{
  if (!a1) {
    return 1684957547;
  }
  if (a1 == 1) {
    return 0x64695F6D657469;
  }
  return 0x657079745F626F6ALL;
}

uint64_t sub_24D50382C()
{
  swift_getWitnessTable();

  return sub_24DCCAE98();
}

uint64_t sub_24D5038A0(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_24D50390C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24D50397C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24D5039EC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D50371C();
  *a1 = result;
  return result;
}

uint64_t sub_24D503A1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D5037DC(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24D503A48@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D503768();
  *a1 = result;
  return result;
}

uint64_t sub_24D503A7C()
{
  swift_getWitnessTable();
  swift_getWitnessTable();

  return sub_24DA6D088();
}

uint64_t sub_24D503AFC(char a1, void *a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v19 - v9;
  if (!a1)
  {
    sub_24DA7BB80(a3);
    char v20 = 0;
    uint64_t v12 = *(void *)(a3 + 40);
    *(void *)&v19[0] = v6;
    *(_OWORD *)((char *)v19 + 8) = *(_OWORD *)(a3 + 24);
    *((void *)&v19[1] + 1) = v12;
    uint64_t v13 = type metadata accessor for ThrottlingKey.Kind();
    swift_getWitnessTable();
    return sub_24D733A90((uint64_t)&v20, v13);
  }
  if (a1 == 1)
  {
    sub_24DA7BC74(a3, (uint64_t)v10);
    uint64_t v11 = sub_24DA6D0B0(a2, v7, *(void *)(*(void *)(a3 + 32) + 40));
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return v11;
  }
  char v14 = sub_24DA7BE30(a3);
  if (v14 == 70)
  {
    memset(v19, 0, sizeof(v19));
  }
  else
  {
    uint64_t v15 = qword_24DCD4CA0[v14];
    *((void *)&v19[1] + 1) = MEMORY[0x263F8D6C8];
    *(void *)&v19[0] = v15;
  }
  uint64_t v11 = sub_24D3E3EB4((uint64_t)v19);
  uint64_t v17 = v16;
  sub_24D3E3E54((uint64_t)v19);
  if (v17) {
    return v11;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24D503D50@<X0>(char a1@<W0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v35 = a8;
  uint64_t v15 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v34 - v17;
  if (a1)
  {
    if (a1 == 1)
    {
      uint64_t v19 = v16;
      uint64_t v20 = *(void *)(a6 + 40);
      id v21 = a2;
      uint64_t v22 = v40;
      uint64_t result = sub_24DA6D2AC(v21, a3, a4, v20, (uint64_t)v18);
      if (!v22)
      {
        uint64_t v24 = *(void *)(a4 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v18, 1, a4) == 1)
        {
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v18, v15);
          id v25 = v35;
          *(_OWORD *)uint64_t v35 = 0u;
          *((_OWORD *)v25 + 1) = 0u;
        }
        else
        {
          unint64_t v32 = v35;
          v35[3] = a4;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v32);
          return (*(uint64_t (**)(uint64_t *, char *, uint64_t))(v24 + 32))(boxed_opaque_existential_0, v18, a4);
        }
      }
    }
    else
    {
      uint64_t result = (uint64_t)objc_msgSend(a2, sel_isNullAtIndex_, a3);
      if (result)
      {
        uint64_t v29 = v35;
        *(_OWORD *)uint64_t v35 = 0u;
        *((_OWORD *)v29 + 1) = 0u;
      }
      else
      {
        uint64_t result = sub_24DB1B818((uint64_t)objc_msgSend(a2, sel_longAtIndex_, a3));
        unint64_t v30 = v35;
        if (result == 70)
        {
          sub_24D511F64();
          swift_allocError();
          *uint64_t v31 = 0;
          return swift_willThrow();
        }
        else
        {
          v35[3] = (uint64_t)&type metadata for JobCode;
          *(unsigned char *)unint64_t v30 = result;
        }
      }
    }
  }
  else
  {
    uint64_t v36 = a4;
    uint64_t v37 = a5;
    uint64_t v38 = a6;
    uint64_t v39 = a7;
    uint64_t v26 = type metadata accessor for ThrottlingKey.Kind();
    uint64_t v27 = (uint64_t)v35;
    v35[3] = v26;
    swift_getWitnessTable();
    uint64_t v28 = v40;
    uint64_t result = sub_24D733CB8(a3, v26, v27);
    if (v28) {
      return __swift_deallocate_boxed_opaque_existential_0(v27);
    }
  }
  return result;
}

uint64_t sub_24D504030@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v35 = a5;
  uint64_t v36 = a7;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  uint64_t v44 = a4;
  uint64_t v45 = a5;
  type metadata accessor for ThrottlingKey.Kind();
  uint64_t v11 = sub_24DCCA3F8();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B190350);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v38 = *(void *)(TupleTypeMetadata3 - 8);
  uint64_t v39 = TupleTypeMetadata3;
  uint64_t v15 = MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v40 = (char *)&v32 - v16;
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v37 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  LOBYTE(v42) = 0;
  uint64_t result = sub_24DA6D460((uint64_t)&v42, v11, a3, v11, a6);
  if (!v7)
  {
    char v20 = v47;
    LOBYTE(v42) = 1;
    sub_24DA6D460((uint64_t)&v42, v12, a3, v12, a6);
    LOBYTE(v42) = 2;
    sub_24DA6D460((uint64_t)&v42, v13, a3, v13, a6);
    int v21 = v46;
    uint64_t v23 = v39;
    uint64_t v22 = v40;
    uint64_t v24 = &v40[*(int *)(v39 + 48)];
    uint64_t v25 = *(int *)(v39 + 64);
    *uint64_t v40 = v20;
    uint64_t v26 = *(void (**)(void))(v41 + 32);
    unint64_t v32 = v24;
    v26();
    v22[v25] = v21;
    if ((v20 & 1) == 0)
    {
      uint64_t v27 = *(void *)(a1 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v27 + 48))(v32, 1, a1) != 1)
      {
        uint64_t v28 = v41;
        uint64_t v29 = v37;
        (*(void (**)(char *, unsigned char *, uint64_t))(v41 + 16))(v37, v32, v12);
        if (v21 != 70)
        {
          uint64_t v42 = a1;
          uint64_t v43 = v33;
          uint64_t v44 = v34;
          uint64_t v45 = v35;
          type metadata accessor for ReconciliationID();
          uint64_t v40 = (unsigned char *)*(int *)(swift_getTupleTypeMetadata2() + 48);
          uint64_t v31 = v36;
          (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v36, v29, a1);
          swift_storeEnumTagMultiPayload();
          v40[v31] = v21;
          return (*(uint64_t (**)(unsigned char *, uint64_t))(v28 + 8))(v32, v12);
        }
        (*(void (**)(char *, uint64_t))(v27 + 8))(v29, a1);
      }
    }
    sub_24D511F64();
    swift_allocError();
    unsigned char *v30 = 0;
    swift_willThrow();
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v38 + 8))(v40, v23);
  }
  return result;
}

uint64_t sub_24D50446C(char *a1, void *a2, uint64_t a3)
{
  return sub_24D503AFC(*a1, a2, a3);
}

uint64_t sub_24D504488@<X0>(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t *a5@<X8>)
{
  return sub_24D503D50(*a1, a2, a3, a4[2], a4[3], a4[4], a4[5], a5);
}

uint64_t sub_24D5044B0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X3>, uint64_t a4@<X8>)
{
  return sub_24D504030(a3[2], a3[3], a1, a3[4], a3[5], a2, a4);
}

id sub_24D5044DC()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_24D504530(uint64_t a1)
{
  *(void *)(a1 + 88) = sub_24DCC97E8();
  *(void *)(a1 + 96) = v2;
  swift_retain();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D504580()
{
  if ((*(unsigned char *)(v0 + 120) & 1) == 0) {
    dispatch_group_leave(*(dispatch_group_t *)(v0 + 160));
  }
  if (*(void *)(v0 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24DCCA2B8();
    swift_unknownObjectRelease();
    if (*(void *)(v0 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_24DCCA288();
      swift_unknownObjectRelease();
    }
  }
  *(void *)(v0 + 16) = 0;
  uint64_t result = swift_unknownObjectRelease();
  *(void *)(v0 + 112) = 0;
  *(unsigned char *)(v0 + 120) = 1;
  return result;
}

id sub_24D504630(void *a1)
{
  uint64_t v2 = v1;
  id v4 = objc_msgSend(a1, sel_label);
  uint64_t v5 = sub_24DCC97E8();
  uint64_t v7 = v6;

  if (qword_26B197988 != -1) {
    swift_once();
  }
  id v8 = objc_msgSend((id)qword_26B1A24B0, sel_label);
  uint64_t v9 = sub_24DCC97E8();
  uint64_t v11 = v10;

  if (v9 == v5 && v11 == v7)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      if (v5 == 0xD000000000000025 && v7 == 0x800000024DCFD040)
      {
        id result = (id)swift_bridgeObjectRelease();
      }
      else
      {
        char v16 = sub_24DCCAE28();
        id result = (id)swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          sub_24DA85058((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLThrottler.swift", 131, 2, 246, a1);
        }
      }
      uint64_t v17 = *(uint64_t (**)(uint64_t))(v2 + 144);
      if (v17)
      {
        uint64_t v18 = swift_retain();
        uint64_t v19 = v17(v18);
        id result = (id)sub_24D43DD74((uint64_t)v17);
        if (v19)
        {
          char v20 = *(void (**)(const char *, uint64_t, uint64_t, void, uint64_t (*)(), void, uint64_t (*)(void), void, uint64_t (*)(), uint64_t))(*(void *)v19 + 408);
          swift_retain();
          v20("sharedSchedulerCanRun(_:)", 25, 2, 0, sub_24D3F0D64, 0, nullsub_1, 0, sub_24D513568, v2);
          swift_release();
          return (id)swift_release();
        }
      }
      return result;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v15 = (void *)qword_26B1A24B0;
  return objc_msgSend(v15, sel_markWatcherDone_, v2);
}

uint64_t sub_24D5048F4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_24DCCA3F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v8 - v5;
  *(unsigned char *)(a1 + 170) = 0;
  if (qword_26B199810 != -1) {
    swift_once();
  }
  objc_msgSend((id)qword_26B1A2498, sel_removeWatcher_, a1);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v6, 1, 1, AssociatedTypeWitness);
  sub_24D504AA8(9, 0, 0, (uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24D504AA8(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = *v4;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1941A0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_24DCCECE0;
  *(unsigned char *)(v10 + 32) = a1;
  uint64_t v19 = v10;
  if (a1 == 11)
  {
    uint64_t v10 = (uint64_t)sub_24DA13B68((char *)1, 2, 1, (char *)v10);
    *(void *)(v10 + 16) = 2;
    char v11 = 12;
    goto LABEL_5;
  }
  if (a1 == 5)
  {
    uint64_t v10 = (uint64_t)sub_24DA13B68((char *)1, 2, 1, (char *)v10);
    *(void *)(v10 + 16) = 2;
    char v11 = 10;
LABEL_5:
    *(unsigned char *)(v10 + 33) = v11;
    uint64_t v19 = v10;
  }
  MEMORY[0x270FA5388](v10);
  long long v12 = *(_OWORD *)(v9 + 96);
  v14[1] = *(_OWORD *)(v9 + 80);
  id v14[2] = v12;
  uint64_t v15 = &v19;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_24D506A68((uint64_t)sub_24D51278C, (unint64_t)v14);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D504C08(uint64_t a1, uint64_t a2, void *a3)
{
  id v3 = a3;
  swift_retain();
  sub_24D504630(v3);

  return swift_release();
}

void sub_24D504C5C()
{
  if (*(unsigned char *)(v0 + 169) == 1 && *(unsigned char *)(v0 + 120) == 1)
  {
    *(unsigned char *)(v0 + 169) = 0;
    if (qword_26B197988 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_26B1A24B0;
    objc_msgSend(v1, sel_removeWatcher_, v0);
  }
}

void sub_24D504CE8()
{
  uint64_t v2 = v0;
  uint64_t v126 = *MEMORY[0x263EF8340];
  uint64_t v107 = *v0;
  uint64_t v3 = sub_24DCC9398();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v108 = (char *)&v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_24DCCA248();
  uint64_t v110 = *(void *)(v6 - 8);
  uint64_t v111 = v6;
  MEMORY[0x270FA5388](v6);
  os_log_t v109 = (char *)&v99 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24DCC8CE8();
  uint64_t v112 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  ObjectType = ((char *)&v99 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = sub_24DCC9078();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v114 = v11;
  uint64_t v115 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v99 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  int v21 = (char *)&v99 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v26 = (char *)&v99 - v25;
  if (*((unsigned char *)v2 + 105) == 1)
  {
    id v27 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_retain();
    uint64_t v28 = sub_24DCC9068();
    os_log_type_t v29 = sub_24DCCA118();
    if (os_log_type_enabled(v28, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      id aBlock = v31;
      *(_DWORD *)unint64_t v30 = 136446210;
      if (*((unsigned char *)v2 + 32)) {
        uint64_t v32 = 20550;
      }
      else {
        uint64_t v32 = 21318;
      }
      uint64_t v117 = sub_24D418FB4(v32, 0xE200000000000000, (uint64_t *)&aBlock);
      sub_24DCCA428();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v28, v29, "⏳  %{public}s: retries are disabled", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v31, -1, -1);
      MEMORY[0x25332B030](v30, -1, -1);
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v115 + 8))(v26, v114);
    return;
  }
  uint64_t v101 = v24;
  uint64_t v102 = v23;
  uint64_t v103 = v4;
  uint64_t v104 = v3;
  uint64_t v105 = v22;
  uint64_t v106 = v1;
  uint64_t v33 = (void *)v2[3];
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_24D512BC0;
  *(void *)(v34 + 24) = v2;
  uint64_t v124 = sub_24D3E397C;
  uint64_t v125 = v34;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v121 = 1107296256;
  uint64_t v122 = sub_24D3E38DC;
  uint64_t v123 = &block_descriptor_126;
  uint64_t v35 = _Block_copy(&aBlock);
  uint64_t v113 = (uint64_t)v2;
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  uint64_t v36 = objc_msgSend(v33, sel_fetchSwift_error_, v35, &aBlock);
  _Block_release(v35);
  id v37 = aBlock;
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_82;
  }
  if (!v36)
  {
    sub_24DCC8828();

    swift_willThrow();
LABEL_19:
    swift_release();
    return;
  }
  unsigned int v39 = [v36 next];
  uint64_t isEscapingClosureAtFileLocation = v113;
  if (v39 && ([v36 isNullAtIndex:0] & 1) == 0)
  {
    uint64_t v100 = v36;
    id v116 = [v36 longAtIndex:0];
    if (v116 == (id)0x7FFFFFFFFFFFFFFFLL)
    {
      id v47 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      swift_retain();
      uint64_t v48 = sub_24DCC9068();
      os_log_type_t v49 = sub_24DCCA118();
      if (os_log_type_enabled(v48, v49))
      {
        uint64_t v50 = (uint8_t *)swift_slowAlloc();
        uint64_t v51 = (void *)swift_slowAlloc();
        id aBlock = v51;
        *(_DWORD *)uint64_t v50 = 136446210;
        if (*(unsigned char *)(v113 + 32)) {
          uint64_t v52 = 20550;
        }
        else {
          uint64_t v52 = 21318;
        }
        uint64_t v117 = sub_24D418FB4(v52, 0xE200000000000000, (uint64_t *)&aBlock);
        sub_24DCCA428();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D3D0000, v48, v49, "⏳  %{public}s: only infinite throttles", v50, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v51, -1, -1);
        MEMORY[0x25332B030](v50, -1, -1);
      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v115 + 8))(v21, v114);
      sub_24D504580();
      goto LABEL_75;
    }
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v54 = v53;
    (*(void (**)(NSObject *, uint64_t))(v112 + 8))(ObjectType, v8);
    double v55 = v54 * 1000000000.0;
    if ((~COERCE__INT64(v54 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v55 > -9.22337204e18)
      {
        if (v55 < 9.22337204e18)
        {
          uint64_t v56 = (uint64_t)v55;
          id v57 = v116;
          if ((*(unsigned char *)(isEscapingClosureAtFileLocation + 120) & 1) == 0
            && v116 == *(id *)(isEscapingClosureAtFileLocation + 112))
          {
            id v58 = (id)fpfs_current_or_default_log();
            uint64_t v59 = v102;
            sub_24DCC9088();
            swift_retain();
            uint64_t v60 = sub_24DCC9068();
            os_log_type_t v61 = sub_24DCCA118();
            if (!os_log_type_enabled(v60, v61))
            {

              swift_release();
              (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v59, v114);
              swift_release();
              return;
            }
            uint64_t v62 = swift_slowAlloc();
            uint64_t v63 = swift_slowAlloc();
            uint64_t v119 = v63;
            *(_DWORD *)uint64_t v62 = 136446466;
            if (*(unsigned char *)(isEscapingClosureAtFileLocation + 32)) {
              uint64_t v64 = 20550;
            }
            else {
              uint64_t v64 = 21318;
            }
            id aBlock = (id)sub_24D418FB4(v64, 0xE200000000000000, &v119);
            sub_24DCCA428();
            swift_release();
            swift_bridgeObjectRelease();
            *(_WORD *)(v62 + 12) = 2082;
            swift_beginAccess();
            uint64_t v65 = (uint64_t)v116 - v56;
            if (!__OFSUB__(v116, v56))
            {
              if ((v65 & 0x8000000000000000) == 0)
              {
                uint64_t v66 = 0;
                unint64_t v67 = 0xE000000000000000;
LABEL_80:
                sub_24D9AC74C(v65);
                uint64_t v117 = v66;
                unint64_t v118 = v67;
                sub_24DCC9968();
                swift_bridgeObjectRelease();
                uint64_t v117 = sub_24D418FB4(v117, v118, &v119);
                sub_24DCCA428();
                swift_bridgeObjectRelease();
                _os_log_impl(&dword_24D3D0000, v60, v61, "⏳  %{public}s: schedule throttling unchanged in %{public}s", (uint8_t *)v62, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x25332B030](v63, -1, -1);
                MEMORY[0x25332B030](v62, -1, -1);

                (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v102, v114);
                goto LABEL_19;
              }
              BOOL v96 = __OFSUB__(0, v65);
              uint64_t v65 = v56 - (void)v116;
              if (!v96)
              {
                unint64_t v67 = 0xE100000000000000;
                uint64_t v66 = 45;
                goto LABEL_80;
              }
              __break(1u);
LABEL_92:
              __break(1u);
              return;
            }
LABEL_90:
            __break(1u);
          }
          if ((*(unsigned char *)(isEscapingClosureAtFileLocation + 136) & 1) == 0
            && *(void *)(isEscapingClosureAtFileLocation + 128) >= (uint64_t)v116)
          {
            id v68 = (id)fpfs_current_or_default_log();
            uint64_t v69 = v101;
            sub_24DCC9088();
            swift_retain();
            uint64_t v70 = sub_24DCC9068();
            os_log_type_t v71 = sub_24DCCA118();
            if (os_log_type_enabled(v70, v71))
            {
              id v72 = (uint8_t *)swift_slowAlloc();
              uint64_t v73 = (void *)swift_slowAlloc();
              id aBlock = v73;
              *(_DWORD *)id v72 = 136446210;
              if (*(unsigned char *)(v113 + 32)) {
                uint64_t v74 = 20550;
              }
              else {
                uint64_t v74 = 21318;
              }
              uint64_t v117 = sub_24D418FB4(v74, 0xE200000000000000, (uint64_t *)&aBlock);
              uint64_t isEscapingClosureAtFileLocation = v113;
              sub_24DCCA428();
              swift_release();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_24D3D0000, v70, v71, "⏳  %{public}s: asking to reschedule throttling at the same time as before, adding 1s of leeway", v72, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x25332B030](v73, -1, -1);
              MEMORY[0x25332B030](v72, -1, -1);
            }
            else
            {

              swift_release();
            }
            (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v69, v114);
            id v57 = (id)(v56 + 1000000000);
            if (__OFADD__(v56, 1000000000))
            {
              __break(1u);
              goto LABEL_89;
            }
            id v116 = (id)(v56 + 1000000000);
          }
          dispatch_group_enter(*(dispatch_group_t *)(isEscapingClosureAtFileLocation + 160));
          sub_24D504580();
          *(void *)(isEscapingClosureAtFileLocation + 112) = v57;
          *(unsigned char *)(isEscapingClosureAtFileLocation + 120) = 0;
          unint64_t v75 = *(uint64_t (**)(uint64_t))(isEscapingClosureAtFileLocation + 144);
          if (!v75) {
            goto LABEL_92;
          }
          uint64_t v76 = swift_retain();
          uint64_t v77 = v75(v76);
          uint64_t v78 = sub_24D43DD74((uint64_t)v75);
          if (v77)
          {
            uint64_t v79 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v77 + 168))(v78);
            swift_release();
          }
          else
          {
            uint64_t v79 = 0;
          }
          sub_24D41820C();
          id aBlock = (id)MEMORY[0x263F8EE78];
          sub_24D512BD8();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193FA0);
          sub_24D3E4A9C((unint64_t *)&qword_26B193FB0, (uint64_t *)&unk_26B193FA0);
          uint64_t v80 = v109;
          uint64_t v81 = v111;
          sub_24DCCA5B8();
          uint64_t v82 = sub_24DCCA258();

          (*(void (**)(char *, uint64_t))(v110 + 8))(v80, v81);
          uint64_t isEscapingClosureAtFileLocation = v113;
          *(void *)(v113 + 16) = v82;
          swift_unknownObjectRelease();
          if (*(void *)(isEscapingClosureAtFileLocation + 16))
          {
            swift_getObjectType();
            uint64_t v83 = swift_allocObject();
            swift_weakInit();
            uint64_t v84 = swift_allocObject();
            uint64_t v85 = v107;
            *(void *)(v84 + 16) = *(void *)(v107 + 80);
            *(_OWORD *)(v84 + 24) = *(_OWORD *)(v85 + 88);
            *(void *)(v84 + 40) = *(void *)(v85 + 104);
            *(void *)(v84 + 48) = v83;
            swift_unknownObjectRetain();
            swift_retain();
            uint64_t v86 = (uint64_t)v108;
            sub_24D82F614();
            uint64_t isEscapingClosureAtFileLocation = v113;
            sub_24D3D6620(0, v86, (uint64_t)sub_24D512CA0, v84);
            swift_unknownObjectRelease();
            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v86, v104);
            swift_release();
          }
          id v87 = (id)fpfs_current_or_default_log();
          uint64_t v88 = v105;
          sub_24DCC9088();
          swift_retain();
          ObjectType = sub_24DCC9068();
          os_log_type_t v89 = sub_24DCCA108();
          if (!os_log_type_enabled(ObjectType, v89))
          {

            swift_release();
            (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v88, v114);
LABEL_70:
            if (!*(void *)(isEscapingClosureAtFileLocation + 16)) {
              goto LABEL_74;
            }
            ObjectType = swift_getObjectType();
            swift_unknownObjectRetain();
            dispatch_time_t v97 = dispatch_time(0x8000000000000000, 0);
            swift_beginAccess();
            if (!__OFSUB__(v116, v56))
            {
              dispatch_time_t v98 = dispatch_time(v97, (int64_t)v116 - v56);
              sub_24DA289F8(v98);
              swift_unknownObjectRelease();
              if (*(void *)(isEscapingClosureAtFileLocation + 16))
              {
                swift_getObjectType();
                swift_unknownObjectRetain();
                sub_24DCCA298();
                swift_unknownObjectRelease();
              }
LABEL_74:
              if (*(unsigned char *)(isEscapingClosureAtFileLocation + 169))
              {
LABEL_75:
                swift_release();

                return;
              }
              *(unsigned char *)(isEscapingClosureAtFileLocation + 169) = 1;
              ObjectType = v100;
              if (qword_26B197988 == -1)
              {
LABEL_77:
                objc_msgSend((id)qword_26B1A24B0, sel_addWatcher_, isEscapingClosureAtFileLocation);
                swift_release();

                return;
              }
LABEL_87:
              swift_once();
              goto LABEL_77;
            }
            goto LABEL_85;
          }
          uint64_t v90 = swift_slowAlloc();
          uint64_t v91 = swift_slowAlloc();
          uint64_t v119 = v91;
          *(_DWORD *)uint64_t v90 = 136446466;
          if (*(unsigned char *)(isEscapingClosureAtFileLocation + 32)) {
            uint64_t v92 = 20550;
          }
          else {
            uint64_t v92 = 21318;
          }
          id aBlock = (id)sub_24D418FB4(v92, 0xE200000000000000, &v119);
          sub_24DCCA428();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v90 + 12) = 2082;
          swift_beginAccess();
          uint64_t v93 = (uint64_t)v116 - v56;
          if (__OFSUB__(v116, v56)) {
            goto LABEL_86;
          }
          if ((v93 & 0x8000000000000000) == 0)
          {
            uint64_t v94 = 0;
            unint64_t v95 = 0xE000000000000000;
LABEL_69:
            sub_24D9AC74C(v93);
            id aBlock = (id)v94;
            unint64_t v121 = v95;
            sub_24DCC9968();
            swift_bridgeObjectRelease();
            id aBlock = (id)sub_24D418FB4((uint64_t)aBlock, v121, &v119);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_24D3D0000, ObjectType, v89, "⏳ %{public}s: schedule throttling handling in %{public}s", (uint8_t *)v90, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x25332B030](v91, -1, -1);
            MEMORY[0x25332B030](v90, -1, -1);

            (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v105, v114);
            uint64_t isEscapingClosureAtFileLocation = v113;
            goto LABEL_70;
          }
          BOOL v96 = __OFSUB__(0, v93);
          uint64_t v93 = v56 - (void)v116;
          if (!v96)
          {
            unint64_t v95 = 0xE100000000000000;
            uint64_t v94 = 45;
            goto LABEL_69;
          }
LABEL_89:
          __break(1u);
          goto LABEL_90;
        }
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
        goto LABEL_87;
      }
LABEL_83:
      __break(1u);
      goto LABEL_84;
    }
LABEL_82:
    __break(1u);
    goto LABEL_83;
  }
  uint64_t v40 = v36;
  id v41 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  swift_retain();
  uint64_t v42 = sub_24DCC9068();
  os_log_type_t v43 = sub_24DCCA118();
  if (os_log_type_enabled(v42, v43))
  {
    uint64_t v44 = (uint8_t *)swift_slowAlloc();
    uint64_t v45 = (void *)swift_slowAlloc();
    id aBlock = v45;
    *(_DWORD *)uint64_t v44 = 136446210;
    if (*(unsigned char *)(v113 + 32)) {
      uint64_t v46 = 20550;
    }
    else {
      uint64_t v46 = 21318;
    }
    uint64_t v117 = sub_24D418FB4(v46, 0xE200000000000000, (uint64_t *)&aBlock);
    sub_24DCCA428();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v42, v43, "⏳  %{public}s: no pending throttles", v44, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v45, -1, -1);
    MEMORY[0x25332B030](v44, -1, -1);
  }
  else
  {

    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v115 + 8))(v15, v114);
  sub_24D504580();
  swift_release();
}

void sub_24D505FF0()
{
  if ((*(unsigned char *)(v0 + 170) & 1) == 0)
  {
    *(unsigned char *)(v0 + 170) = 1;
    if (qword_26B199810 != -1) {
      swift_once();
    }
    uint64_t v1 = (void *)qword_26B1A2498;
    objc_msgSend(v1, sel_addWatcher_, v0);
  }
}

uint64_t sub_24D506070()
{
  return 0;
}

uint64_t sub_24D50615C()
{
  uint64_t v0 = sub_24DCC8CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v5 = v4;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v5 * 1000000000.0;
  if ((~COERCE__INT64(v5 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  uint64_t v8 = (uint64_t)v7;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = *(void *)(Strong + 112);
    char v11 = *(unsigned char *)(Strong + 120);
    swift_release();
    uint64_t v12 = v10 <= v8 ? v8 : v10;
    if ((v11 & 1) == 0) {
      uint64_t v8 = v12;
    }
  }
  swift_beginAccess();
  uint64_t v13 = swift_weakLoadStrong();
  if (v13)
  {
    *(void *)(v13 + 128) = v8;
    *(unsigned char *)(v13 + 136) = 0;
    swift_release();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24D506328(v8);
    return swift_release();
  }
  return result;
}

uint64_t sub_24D506328(uint64_t a1)
{
  uint64_t v3 = sub_24DCC9078();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t result = MEMORY[0x270FA5388](v4);
  uint64_t v6 = *(uint64_t (**)(uint64_t))(v1 + 144);
  if (v6)
  {
    uint64_t v7 = swift_retain();
    uint64_t v8 = v6(v7);
    uint64_t result = sub_24D43DD74((uint64_t)v6);
    if (v8)
    {
      MEMORY[0x270FA5388](result);
      *(&v10 - 2) = v1;
      *(&v10 - 1) = a1;
      uint64_t v9 = (*(uint64_t (**)(const char *, uint64_t, uint64_t, uint64_t (*)()))(*(void *)v8 + 416))("trigger(now:)", 13, 2, sub_24D512CB0);
      sub_24D504CE8(v9);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_24D506A58()
{
  return (*(unsigned char *)(v0 + 120) & 1) == 0;
}

uint64_t sub_24D506A68(uint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  unint64_t v160 = a2;
  uint64_t v162 = a1;
  uint64_t v181 = *MEMORY[0x263EF8340];
  uint64_t v5 = *(void *)(*(void *)v2 + 88);
  uint64_t v6 = *(id (**)(uint64_t, void *))(*(void *)v2 + 96);
  uint64_t v7 = *(void **)(*(void *)v2 + 104);
  id aBlock = *(id *)(*(void *)v2 + 80);
  id v4 = aBlock;
  uint64_t v167 = v5;
  unsigned int v168 = v6;
  id v169 = v7;
  uint64_t v150 = type metadata accessor for PersistenceTrigger();
  uint64_t v142 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  BOOL v149 = (char *)v125 - v8;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v156 = v6;
  id v158 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v157 = v5;
  uint64_t v12 = swift_getAssociatedConformanceWitness();
  id aBlock = AssociatedTypeWitness;
  uint64_t v167 = v10;
  unsigned int v168 = (id (*)(uint64_t, void *))AssociatedConformanceWitness;
  id v169 = (void *)v12;
  uint64_t v13 = type metadata accessor for ThrottlingKey();
  uint64_t v143 = *(void (***)(char *, void *))(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  long long v132 = (char *)v125 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  int v145 = (char *)v125 - v17;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)v125 - v18;
  int v155 = v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v151 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v126 = *(void *)(v151 + 64);
  MEMORY[0x270FA5388](TupleTypeMetadata2);
  int v161 = (char *)v125 - v22;
  uint64_t v147 = sub_24DCC9078();
  uint64_t v144 = *(void *)(v147 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v147);
  unsigned int v153 = (char *)v125 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v146 = (char *)v125 - v25;
  uint64_t v26 = *(uint64_t (**)(uint64_t))(v3 + 144);
  if (!v26) {
    goto LABEL_49;
  }
  uint64_t v27 = v162;
  uint64_t v28 = swift_retain();
  uint64_t v29 = v26(v28);
  sub_24D43DD74((uint64_t)v26);
  if (!v29) {
    goto LABEL_50;
  }
  uint64_t v30 = v3;
  uint64_t v152 = TupleTypeMetadata2;
  v164[0] = sub_24DCC9C98();
  if (qword_26B199A70 != -1) {
    swift_once();
  }
  uint64_t v31 = sub_24D3E6F1C((uint64_t)sub_24D4367FC, 0);
  char v32 = v31 & 1;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  unint64_t v34 = v160;
  v125[-4] = v27;
  v125[-3] = v34;
  LOBYTE(v125[-2]) = v32;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = v157;
  v125[-6] = v158;
  v125[-5] = v35;
  v125[-4] = v156;
  v125[-3] = v7;
  v125[-2] = v164;
  uint64_t v36 = v30;
  uint64_t v37 = v159;
  sub_24D3F67A4((uint64_t)sub_24D512954, v38, (void (*)(void, _OWORD *))sub_24D512960, (uint64_t)&v125[-8]);
  if (v37)
  {
LABEL_6:
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v148 = v29;
  uint64_t v40 = *(void **)(v30 + 24);
  uint64_t v41 = swift_allocObject();
  *(void *)(v41 + 16) = v30;
  *(void *)(v41 + 24) = v27;
  *(void *)(v41 + 32) = v34;
  *(unsigned char *)(v41 + 40) = v32;
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = sub_24D51299C;
  *(void *)(v42 + 24) = v41;
  v125[1] = v41;
  uint64_t v170 = sub_24D3E397C;
  uint64_t v171 = v42;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v167 = 1107296256;
  unsigned int v168 = sub_24D3E38DC;
  id v169 = &block_descriptor_108;
  os_log_type_t v43 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v44 = objc_msgSend(v40, sel_executeSwift_error_, v43, &aBlock);
  _Block_release(v43);
  id v45 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
  }
  if (!v44)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    swift_release();
    return swift_bridgeObjectRelease();
  }
  uint64_t v47 = v30;
  uint64_t v130 = 0;
  id v48 = (id)fpfs_current_or_default_log();
  os_log_type_t v49 = v146;
  sub_24DCC9088();
  swift_retain();
  uint64_t v50 = sub_24DCC9068();
  os_log_type_t v51 = sub_24DCCA108();
  BOOL v52 = os_log_type_enabled(v50, v51);
  uint64_t v159 = v36;
  id v154 = v19;
  if (v52)
  {
    uint64_t v53 = swift_slowAlloc();
    double v54 = (void *)swift_slowAlloc();
    id aBlock = v54;
    *(_DWORD *)uint64_t v53 = 136446466;
    if (*(unsigned char *)(v47 + 32)) {
      uint64_t v55 = 20550;
    }
    else {
      uint64_t v55 = 21318;
    }
    v164[1] = sub_24D418FB4(v55, 0xE200000000000000, (uint64_t *)&aBlock);
    sub_24DCCA428();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2048;
    swift_beginAccess();
    uint64_t v56 = swift_bridgeObjectRetain();
    uint64_t v57 = v152;
    uint64_t v58 = MEMORY[0x253327D80](v56, v152);
    uint64_t v19 = v154;
    swift_bridgeObjectRelease();
    uint64_t v165 = v58;
    sub_24DCCA428();
    _os_log_impl(&dword_24D3D0000, v50, v51, "⌛️  %{public}s: %ld throttles expired", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v54, -1, -1);
    MEMORY[0x25332B030](v53, -1, -1);

    uint64_t v59 = v144;
    int v137 = *(void (**)(char *, uint64_t))(v144 + 8);
    v137(v49, v147);
    uint64_t v60 = v148;
  }
  else
  {

    swift_release();
    uint64_t v59 = v144;
    int v137 = *(void (**)(char *, uint64_t))(v144 + 8);
    v137(v49, v147);
    uint64_t v60 = v148;
    uint64_t v57 = v152;
  }
  swift_beginAccess();
  uint64_t v61 = v164[0];
  uint64_t v62 = swift_bridgeObjectRetain();
  if (!MEMORY[0x253327DC0](v62, v57))
  {
    uint64_t v124 = swift_bridgeObjectRelease();
LABEL_46:
    (*(void (**)(uint64_t))(*(void *)v60 + 304))(v124);
    swift_release();
    goto LABEL_6;
  }
  uint64_t v64 = 0;
  unsigned int v141 = &v161[*(int *)(v57 + 48)];
  uint64_t v144 = v151 + 16;
  long long v140 = (void (**)(char *, char *, void *))(v143 + 4);
  long long v139 = (void (**)(void, void))(v143 + 2);
  uint64_t v136 = v59 + 8;
  uint64_t v129 = v164;
  long long v138 = (void (**)(char *, uint64_t))(v142 + 8);
  *(void *)&long long v63 = 136446722;
  long long v128 = v63;
  uint64_t v127 = MEMORY[0x263F8EE58] + 8;
  long long v131 = xmmword_24DCD4920;
  uint64_t v65 = v155;
  uint64_t v142 = v61;
  ++v143;
  while (1)
  {
    char v71 = sub_24DCC9CB8();
    sub_24DCC9C68();
    if (v71)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v151 + 16))(v161, v61+ ((*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80))+ *(void *)(v151 + 72) * v64, v57);
      id v72 = (id (*)(uint64_t, void *))(v64 + 1);
      if (__OFADD__(v64, 1)) {
        goto LABEL_43;
      }
      goto LABEL_22;
    }
    uint64_t result = sub_24DCCA778();
    if (v126 != 8) {
      break;
    }
    uint64_t v165 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))v144)(v161, &v165, v57);
    swift_unknownObjectRelease();
    id v72 = (id (*)(uint64_t, void *))(v64 + 1);
    if (__OFADD__(v64, 1))
    {
LABEL_43:
      __break(1u);
LABEL_44:
      uint64_t v60 = v148;
      uint64_t v124 = swift_bridgeObjectRelease();
      goto LABEL_46;
    }
LABEL_22:
    uint64_t v156 = v72;
    uint64_t v157 = v64;
    uint64_t v73 = *((void *)v141 + 1);
    unint64_t v160 = *((void *)v141 + 2);
    uint64_t v75 = *((void *)v141 + 3);
    uint64_t v74 = *((void *)v141 + 4);
    uint64_t v76 = (void *)*((void *)v141 + 5);
    id v158 = (id)*((void *)v141 + 8);
    (*v140)(v19, v161, v65);
    id v77 = v76;
    unsigned __int8 v78 = sub_24DA7F34C(v76);
    if (v78 <= 0xBu && ((1 << v78) & 0x860) != 0) {
      uint64_t v75 = 0x7FFFFFFFFFFFFFFFLL;
    }
    unint64_t v81 = (unint64_t)v139;
    char v172 = 2;
    uint64_t v173 = v73;
    unint64_t v174 = v160;
    uint64_t v175 = v75;
    uint64_t v176 = v74;
    uint64_t v177 = v76;
    unsigned __int8 v178 = v78;
    uint64_t v179 = v79;
    uint64_t v180 = v80;
    uint64_t v162 = v80;
    if (!v76) {
      goto LABEL_35;
    }
    sub_24D5129BC();
    uint64_t v82 = (void *)swift_allocError();
    *(_OWORD *)uint64_t v83 = v131;
    *(unsigned char *)(v83 + 16) = 3;
    id v84 = v76;
    uint64_t v85 = (void *)sub_24DCC8818();

    uint64_t v86 = (void *)sub_24DCC8818();
    id v87 = objc_msgSend(v85, sel_domain);
    uint64_t v88 = sub_24DCC97E8();
    uint64_t v90 = v89;

    id v91 = objc_msgSend(v86, sel_domain);
    uint64_t v92 = sub_24DCC97E8();
    uint64_t v94 = v93;

    if (v88 == v92 && v90 == v94)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v95 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v95 & 1) == 0)
      {

        uint64_t v65 = v155;
        uint64_t v19 = v154;
LABEL_35:
        id v99 = (id)fpfs_current_or_default_log();
        uint64_t v100 = v153;
        sub_24DCC9088();
        uint64_t v101 = *(void (**)(char *, char *, void *))v81;
        unint64_t v160 = v81 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
        uint64_t v102 = v145;
        uint64_t v103 = v19;
        uint64_t v104 = v101;
        v101(v145, v103, v65);
        swift_retain();
        id v105 = v76;
        swift_bridgeObjectRetain();
        swift_retain();
        id v106 = v76;
        swift_bridgeObjectRetain();
        uint64_t v107 = sub_24DCC9068();
        os_log_type_t v108 = sub_24DCCA118();
        LODWORD(v146) = v108;
        if (os_log_type_enabled(v107, v108))
        {
          uint64_t v109 = swift_slowAlloc();
          uint64_t v135 = swift_slowAlloc();
          uint64_t v165 = v135;
          *(_DWORD *)uint64_t v109 = v128;
          os_log_t v134 = v107;
          int v110 = *(unsigned __int8 *)(v159 + 32);
          swift_release();
          if (v110) {
            uint64_t v111 = 20550;
          }
          else {
            uint64_t v111 = 21318;
          }
          uint64_t v163 = sub_24D418FB4(v111, 0xE200000000000000, &v165);
          sub_24DCCA428();
          swift_release();
          swift_bridgeObjectRelease();
          *(_WORD *)(v109 + 12) = 2080;
          uint64_t v112 = v132;
          long long v133 = v104;
          v104(v132, v102, v65);
          uint64_t v113 = v102;
          uint64_t v66 = v143;
          uint64_t v114 = *v143;
          (*v143)(v113, v65);
          uint64_t v115 = sub_24DA7E3D8(v65);
          unint64_t v117 = v116;
          v114(v112, v155);
          uint64_t v163 = sub_24D418FB4(v115, v117, &v165);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          *(_WORD *)(v109 + 22) = 2080;
          id v118 = v76;
          swift_bridgeObjectRetain();
          uint64_t v119 = sub_24DA7DABC();
          unint64_t v121 = v120;

          swift_bridgeObjectRelease();
          uint64_t v163 = sub_24D418FB4(v119, v121, &v165);
          sub_24DCCA428();
          uint64_t v65 = v155;
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          os_log_t v122 = v134;
          _os_log_impl(&dword_24D3D0000, v134, (os_log_type_t)v146, "✍️  %{public}s: throttle %s: %s", (uint8_t *)v109, 0x20u);
          uint64_t v123 = v135;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v123, -1, -1);
          MEMORY[0x25332B030](v109, -1, -1);

          v137(v153, v147);
          uint64_t v19 = v154;
          unint64_t v67 = v133;
        }
        else
        {
          uint64_t v66 = v143;
          (*v143)(v102, v65);
          swift_release_n();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v137(v100, v147);
          unint64_t v67 = v104;
          uint64_t v19 = v154;
        }
        goto LABEL_19;
      }
    }
    id v96 = objc_msgSend(v85, sel_code);
    id v97 = objc_msgSend(v86, sel_code);

    uint64_t v65 = v155;
    uint64_t v19 = v154;
    if (v96 != v97 || v160) {
      goto LABEL_35;
    }
    uint64_t v98 = v130;
    sub_24D508938((uint64_t)v154);
    uint64_t v130 = v98;
    if (v98)
    {
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*v143)(v19, v65);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    unint64_t v67 = *(void (**)(char *, char *, void *))v81;
    uint64_t v66 = v143;
LABEL_19:
    id v68 = v149;
    v67(v149, v19, v65);
    uint64_t v69 = v150;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))(*(void *)v148 + 312))(v68);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*v138)(v68, v69);
    (*v66)(v19, v65);
    uint64_t v61 = v142;
    uint64_t v57 = v152;
    uint64_t v70 = MEMORY[0x253327DC0](v142, v152);
    uint64_t v64 = v157 + 1;
    if (v156 == (id (*)(uint64_t, void *))v70) {
      goto LABEL_44;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24D507E60(uint64_t a1, void (*a2)(uint64_t, uint64_t), uint64_t a3, uint64_t a4)
{
  return 0x203D206574617473;
}

void sub_24D507F50(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(void **)(a3 + 24);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a1;
  v9[4] = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_24D513584;
  *(void *)(v10 + 24) = v9;
  os_log_type_t v43 = sub_24D3E397C;
  unsigned int v44 = (void *)v10;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v40 = 1107296256;
  uint64_t v41 = sub_24D3E38DC;
  uint64_t v42 = &block_descriptor_196;
  char v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v12 = objc_msgSend(v8, sel_fetchSwift_error_, v11, &aBlock);
  _Block_release(v11);
  id v13 = aBlock;
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v8) {
LABEL_18:
  }
    __break(1u);
  if (v12)
  {
    if (objc_msgSend(v12, sel_next))
    {
      id v30 = v12;
      while (1)
      {
        uint64_t v14 = (void *)MEMORY[0x253329610]();
        uint64_t v15 = sub_24D787830();
        uint64_t v16 = sub_24D8C59A8(v15, v12, 0);
        if (v4) {
          break;
        }
        uint64_t v18 = v16;
        uint64_t v19 = v17;
        swift_bridgeObjectRelease();
        unint64_t v20 = *((void *)sub_24D787830() + 2);
        swift_bridgeObjectRelease();
        if (v20 >> 31)
        {
          __break(1u);
          goto LABEL_18;
        }
        int v21 = sub_24D7870C8();
        sub_24D8C03BC(v12, (uint64_t)v21, v20, (uint64_t)&aBlock);
        swift_bridgeObjectRelease();
        char v38 = (char)aBlock;
        uint64_t v36 = v41;
        uint64_t v37 = v40;
        uint64_t v22 = v44;
        unint64_t v34 = v43;
        uint64_t v35 = v42;
        char v33 = v45;
        uint64_t v23 = v47;
        uint64_t v32 = v46;
        uint64_t v24 = *a4;
        sub_24D4E4B98(v18, v19, BYTE1(v19) & 1);
        id v25 = v22;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v24 = sub_24DA14F14(0, v24[2] + 1, 1, v24);
          *a4 = v24;
        }
        unint64_t v28 = v24[2];
        unint64_t v27 = v24[3];
        if (v28 >= v27 >> 1)
        {
          uint64_t v24 = sub_24DA14F14((void *)(v27 > 1), v28 + 1, 1, v24);
          *a4 = v24;
        }
        void v24[2] = v28 + 1;
        uint64_t v29 = &v24[11 * v28];
        v29[4] = v18;
        *((unsigned char *)v29 + 40) = v19;
        *((unsigned char *)v29 + 41) = BYTE1(v19) & 1;
        *((unsigned char *)v29 + 42) = BYTE2(v19);
        *((unsigned char *)v29 + 48) = v38;
        v29[7] = v37;
        v29[8] = v36;
        v29[9] = v35;
        v29[10] = v34;
        v29[11] = v22;
        *((unsigned char *)v29 + 96) = v33;
        v29[13] = v32;
        v29[14] = v23;

        swift_bridgeObjectRelease();
        sub_24D5135B0(v18, v19, BYTE1(v19) & 1);
        id v12 = v30;
        if ((objc_msgSend(v30, sel_next) & 1) == 0) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
    }
LABEL_16:
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
}

void sub_24D508378(uint64_t a1, uint64_t a2, uint64_t a3, void **a4)
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v8 = *(void **)(a3 + 24);
  uint64_t v9 = (void *)swift_allocObject();
  void v9[2] = a3;
  v9[3] = a1;
  v9[4] = a2;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_24D513584;
  *(void *)(v10 + 24) = v9;
  os_log_type_t v43 = sub_24D3E397C;
  unsigned int v44 = (void *)v10;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v40 = 1107296256;
  uint64_t v41 = sub_24D3E38DC;
  uint64_t v42 = &block_descriptor_186;
  char v11 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v12 = objc_msgSend(v8, sel_fetchSwift_error_, v11, &aBlock);
  _Block_release(v11);
  id v13 = aBlock;
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v8) {
LABEL_18:
  }
    __break(1u);
  if (v12)
  {
    if (objc_msgSend(v12, sel_next))
    {
      id v30 = v12;
      while (1)
      {
        uint64_t v14 = (void *)MEMORY[0x253329610]();
        uint64_t v15 = sub_24D787A28();
        uint64_t v16 = sub_24D8C5DBC((uint64_t)v15, v12, 0);
        if (v4) {
          break;
        }
        uint64_t v18 = (void *)v16;
        uint64_t v19 = v17;
        swift_bridgeObjectRelease();
        unint64_t v20 = *((void *)sub_24D787A28() + 2);
        swift_bridgeObjectRelease();
        if (v20 >> 31)
        {
          __break(1u);
          goto LABEL_18;
        }
        int v21 = sub_24D7870C8();
        sub_24D8C03BC(v12, (uint64_t)v21, v20, (uint64_t)&aBlock);
        swift_bridgeObjectRelease();
        char v38 = (char)aBlock;
        uint64_t v36 = v41;
        uint64_t v37 = v40;
        uint64_t v22 = v44;
        unint64_t v34 = v43;
        uint64_t v35 = v42;
        char v33 = v45;
        uint64_t v23 = v47;
        uint64_t v32 = v46;
        uint64_t v24 = *a4;
        sub_24D4018B8(v18, v19, BYTE1(v19) & 1);
        id v25 = v22;
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *a4 = v24;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          uint64_t v24 = sub_24DA14F28(0, v24[2] + 1, 1, v24);
          *a4 = v24;
        }
        unint64_t v28 = v24[2];
        unint64_t v27 = v24[3];
        if (v28 >= v27 >> 1)
        {
          uint64_t v24 = sub_24DA14F28((void *)(v27 > 1), v28 + 1, 1, v24);
          *a4 = v24;
        }
        void v24[2] = v28 + 1;
        uint64_t v29 = &v24[11 * v28];
        v29[4] = v18;
        *((unsigned char *)v29 + 40) = v19;
        *((unsigned char *)v29 + 41) = BYTE1(v19) & 1;
        *((unsigned char *)v29 + 42) = BYTE2(v19);
        *((unsigned char *)v29 + 48) = v38;
        v29[7] = v37;
        v29[8] = v36;
        v29[9] = v35;
        v29[10] = v34;
        v29[11] = v22;
        *((unsigned char *)v29 + 96) = v33;
        v29[13] = v32;
        v29[14] = v23;

        swift_bridgeObjectRelease();
        sub_24D40160C(v18, v19, BYTE1(v19) & 1);
        id v12 = v30;
        if ((objc_msgSend(v30, sel_next) & 1) == 0) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
    }
LABEL_16:
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_24D5087A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5)
{
  return 0;
}

BOOL sub_24D508938(uint64_t a1)
{
  uint64_t v93 = a1;
  uint64_t v105 = *MEMORY[0x263EF8340];
  uint64_t v2 = *v1;
  uint64_t v3 = *(char **)(*v1 + 96);
  uint64_t v4 = *(char **)(*v1 + 80);
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v82 = sub_24DCCA3F8();
  uint64_t v85 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v83 = (char *)v70 - v6;
  uint64_t v84 = sub_24DCC9078();
  uint64_t v89 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v88 = (char *)v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v2 + 104);
  uint64_t v9 = *(void *)(v2 + 88);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  id v87 = v3;
  uint64_t v86 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v12 = swift_getAssociatedConformanceWitness();
  id aBlock = AssociatedTypeWitness;
  uint64_t v96 = v10;
  id v97 = (id (*)(uint64_t, void *))AssociatedConformanceWitness;
  uint64_t v98 = (void *)v12;
  os_log_t v90 = (os_log_t)type metadata accessor for ThrottlingKey();
  Class isa = v90[-1].isa;
  uint64_t v14 = *((void *)isa + 8);
  uint64_t v15 = MEMORY[0x270FA5388](v90);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v70 - v16;
  id v18 = v92;
  uint64_t v19 = v93;
  id v91 = v1;
  int v20 = sub_24D50ABE4(v93);
  if (!v18)
  {
    uint64_t v75 = (char *)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    int v79 = v20;
    unint64_t v81 = AssociatedTypeWitness;
    uint64_t v80 = 0;
    int v22 = *((unsigned __int8 *)v91 + 104);
    id v92 = (id)v91[3];
    Class v76 = isa;
    uint64_t v23 = (char *)isa + 16;
    id v77 = (void (*)(char *, uint64_t, os_log_t))*((void *)isa + 2);
    v77(v17, v19, v90);
    unint64_t v24 = (*((unsigned __int8 *)isa + 80) + 56) & ~(unint64_t)*((unsigned __int8 *)isa + 80);
    id v25 = (void (**)(char *, char *, os_log_t))((char *)isa + 32);
    uint64_t v74 = v17;
    unsigned __int8 v78 = v23;
    if (v22 == 1)
    {
      uint64_t v26 = (char *)swift_allocObject();
      *((void *)v26 + 2) = v86;
      *((void *)v26 + 3) = v9;
      *((void *)v26 + 4) = v87;
      *((void *)v26 + 5) = v8;
      unint64_t v27 = v91;
      *((void *)v26 + 6) = v91;
      unint64_t v28 = v17;
      os_log_t v29 = v90;
      (*v25)(&v26[v24], v28, v90);
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = sub_24D512224;
      *(void *)(v30 + 24) = v26;
      uint64_t v86 = v26;
      id v99 = sub_24D3E397C;
      uint64_t v100 = v30;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v96 = 1107296256;
      id v97 = sub_24D3E38DC;
      uint64_t v98 = &block_descriptor_82;
      uint64_t v31 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v32 = objc_msgSend(v92, sel_executeSwift_error_, v31, &aBlock);
      _Block_release(v31);
      char v33 = aBlock;
      LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      uint64_t v34 = v89;
      if ((v31 & 1) == 0)
      {
        uint64_t v35 = v27;
        uint64_t v36 = v88;
        uint64_t v37 = v93;
        if (v32)
        {
          uint64_t v73 = 0;
          id v87 = 0;
          char v38 = sub_24D512224;
          unsigned int v39 = (char *)&v102 + 8;
          goto LABEL_9;
        }
LABEL_16:
        sub_24DCC8828();

        swift_willThrow();
        swift_release();
        return v21;
      }
      __break(1u);
    }
    else
    {
      uint64_t v40 = (char *)swift_allocObject();
      *((void *)v40 + 2) = v86;
      *((void *)v40 + 3) = v9;
      *((void *)v40 + 4) = v87;
      *((void *)v40 + 5) = v8;
      uint64_t v41 = v91;
      *((void *)v40 + 6) = v91;
      uint64_t v42 = v17;
      os_log_t v29 = v90;
      (*v25)(&v40[v24], v42, v90);
      uint64_t v43 = swift_allocObject();
      *(void *)(v43 + 16) = sub_24D512188;
      *(void *)(v43 + 24) = v40;
      id v87 = v40;
      id v99 = sub_24D3E397C;
      uint64_t v100 = v43;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v96 = 1107296256;
      id v97 = sub_24D3E38DC;
      uint64_t v98 = &block_descriptor_72;
      unsigned int v44 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v45 = objc_msgSend(v92, sel_executeSwift_error_, v44, &aBlock);
      _Block_release(v44);
      char v33 = aBlock;
      LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      uint64_t v34 = v89;
      if ((v44 & 1) == 0)
      {
        uint64_t v35 = v41;
        uint64_t v36 = v88;
        uint64_t v37 = v93;
        if (v45)
        {
          uint64_t v72 = 0;
          uint64_t v86 = 0;
          char v38 = sub_24D512188;
          unsigned int v39 = (char *)v103;
LABEL_9:
          *((void *)v39 - 32) = v38;
          id v46 = objc_msgSend(v92, sel_changes);
          uint64_t v47 = v85;
          uint64_t v48 = v81;
          uint64_t v49 = v84;
          if (!v46) {
            goto LABEL_18;
          }
          id v50 = (id)fpfs_current_or_default_log();
          sub_24DCC9088();
          os_log_type_t v51 = v75;
          v77(v75, v37, v29);
          swift_retain();
          BOOL v52 = sub_24DCC9068();
          LODWORD(v93) = sub_24DCCA118();
          if (!os_log_type_enabled(v52, (os_log_type_t)v93))
          {
            (*((void (**)(char *, os_log_t))v76 + 1))(v51, v29);

            swift_release();
            (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v49);
LABEL_18:
            if (v79 == 1)
            {
              uint64_t v64 = v83;
              (*(void (**)(char *, uint64_t, uint64_t, void *))(*(v48 - 1) + 56))(v83, 1, 1, v48);
              uint64_t v65 = v80;
              sub_24D504AA8(1, 0, 0, v64);
              if (v65)
              {
                (*(void (**)(char *, uint64_t))(v47 + 8))(v64, v82);
                sub_24D43DD74(v72);
                sub_24D43DD74(v73);
                return v21;
              }
              (*(void (**)(char *, uint64_t))(v47 + 8))(v64, v82);
            }
            uint64_t v66 = v73;
            uint64_t v67 = v72;
            id v68 = objc_msgSend(v92, sel_changes);
            sub_24D43DD74(v67);
            sub_24D43DD74(v66);
            return v68 != 0;
          }
          os_log_t v90 = v52;
          char v33 = (_WORD *)swift_slowAlloc();
          char v71 = (void *)swift_slowAlloc();
          id aBlock = v71;
          *(_DWORD *)char v33 = 136446722;
          if (*((unsigned char *)v35 + 32)) {
            uint64_t v53 = 20550;
          }
          else {
            uint64_t v53 = 21318;
          }
          uint64_t v94 = sub_24D418FB4(v53, 0xE200000000000000, (uint64_t *)&aBlock);
          sub_24DCCA428();
          swift_release();
          swift_bridgeObjectRelease();
          v33[6] = 2080;
          v70[1] = v33 + 7;
          double v54 = v74;
          v77(v74, (uint64_t)v51, v29);
          uint64_t v55 = (void (*)(char *, os_log_t))*((void *)v76 + 1);
          v55(v51, v29);
          uint64_t v56 = sub_24DA7E3D8(v29);
          unint64_t v58 = v57;
          v55(v54, v29);
          uint64_t v94 = sub_24D418FB4(v56, v58, (uint64_t *)&aBlock);
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          v33[11] = 2080;
          if (qword_26B1926B0 == -1)
          {
LABEL_15:
            v103[0] = xmmword_26B1A2240;
            v103[1] = *(_OWORD *)&byte_26B1A2250;
            uint64_t v104 = qword_26B1A2260;
            long long v101 = xmmword_26B1A2220;
            long long v102 = unk_26B1A2230;
            sub_24D5121B0((uint64_t)&v101);
            uint64_t v59 = sub_24DA7DABC();
            unint64_t v61 = v60;
            sub_24D5121E8((uint64_t)&v101);
            uint64_t v94 = sub_24D418FB4(v59, v61, (uint64_t *)&aBlock);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            os_log_t v62 = v90;
            _os_log_impl(&dword_24D3D0000, v90, (os_log_type_t)v93, "✍️  %{public}s: throttle %s: %s", (uint8_t *)v33, 0x20u);
            long long v63 = v71;
            swift_arrayDestroy();
            MEMORY[0x25332B030](v63, -1, -1);
            MEMORY[0x25332B030](v33, -1, -1);

            (*(void (**)(char *, uint64_t))(v89 + 8))(v88, v84);
            uint64_t v47 = v85;
            uint64_t v48 = v81;
            goto LABEL_18;
          }
LABEL_27:
          swift_once();
          goto LABEL_15;
        }
        goto LABEL_16;
      }
    }
    __break(1u);
    goto LABEL_27;
  }
  return v21;
}

unint64_t sub_24D50957C(void *a1, uint64_t a2, unint64_t *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v24 = a8;
  uint64_t v25 = a6;
  uint64_t v23 = a10;
  unint64_t v26 = 0;
  unint64_t v27 = (unsigned __int8 *(*)@<X0>(unsigned __int8 *@<X0>, void *@<X8>))0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  unint64_t v33 = 0xD000000000000015;
  unint64_t v34 = 0x800000024DCFCF30;
  unint64_t v14 = *a3;
  uint64_t v31 = 40;
  unint64_t v32 = 0xE100000000000000;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  unint64_t v26 = v14;
  unint64_t v27 = sub_24D511FE8;
  uint64_t v28 = 0;
  os_log_t v29 = sub_24D5127F8;
  uint64_t v30 = v15;
  swift_bridgeObjectRetain_n();
  id v16 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190890);
  sub_24D3E4A9C((unint64_t *)&unk_26B190880, (uint64_t *)&unk_26B190890);
  sub_24D3F0EB8();
  sub_24DCC9B28();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (a5)
  {
    swift_bridgeObjectRetain();
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    unint64_t v26 = 0xD000000000000021;
    unint64_t v27 = (unsigned __int8 *(*)@<X0>(unsigned __int8 *@<X0>, void *@<X8>))0x800000024DCFCF50;
    uint64_t v17 = (void *)sub_24DCC97B8();
    id v18 = objc_msgSend(v16, sel_bindStringParameter_, v17);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v19 = sub_24DCC9968();
  MEMORY[0x270FA5388](v19);
  v22[2] = a7;
  _OWORD v22[3] = v24;
  v22[4] = a9;
  v22[5] = v23;
  v22[6] = v16;
  swift_getAssociatedTypeWitness();
  sub_24DCCA3F8();
  sub_24DB86C94((void (*)(char *, char *))sub_24D512800, (uint64_t)v22, MEMORY[0x263F8E628], MEMORY[0x263F8D310], v20, (uint64_t)&v26);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_24D509900@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v9, "AND item_id = ");
  HIBYTE(v9[1]) = -18;
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  sub_24DCC9968();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v8 = v9[1];
  *a2 = v9[0];
  a2[1] = v8;
  return result;
}

uint64_t sub_24D509A34(uint64_t a1)
{
  uint64_t v23 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v22 = swift_getAssociatedConformanceWitness();
  uint64_t v3 = type metadata accessor for ThrottlingKey();
  sub_24DCC9D48();
  swift_getWitnessTable();
  uint64_t result = sub_24DCC9FE8();
  if ((result & 1) == 0)
  {
    uint64_t result = MEMORY[0x253327D80](a1, v3);
    if (result >= 1)
    {
      uint64_t v5 = result;
      uint64_t v6 = a1;
      uint64_t result = 0;
      while (1)
      {
        uint64_t v7 = result + 100;
        if (__OFADD__(result, 100)) {
          break;
        }
        if (v5 >= v7) {
          uint64_t v8 = result + 100;
        }
        else {
          uint64_t v8 = v5;
        }
        if (v8 < result) {
          goto LABEL_15;
        }
        uint64_t v9 = v6;
        uint64_t v10 = v3;
        uint64_t v11 = sub_24DCC9D88();
        uint64_t v12 = MEMORY[0x270FA5388](v11);
        void v17[2] = v1;
        v17[3] = v12;
        v17[4] = v13;
        v17[5] = v14;
        v17[6] = v15;
        uint64_t v16 = v18;
        sub_24D506A68((uint64_t)sub_24D512A70, (unint64_t)v17);
        uint64_t v18 = v16;
        if (v16) {
          return swift_unknownObjectRelease();
        }
        swift_unknownObjectRelease();
        uint64_t result = v8;
        uint64_t v6 = v9;
        uint64_t v3 = v10;
        if (v5 <= v7) {
          return result;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
    }
  }
  return result;
}

unint64_t sub_24D509C9C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  unint64_t v29 = 0xD000000000000015;
  unint64_t v30 = 0x800000024DCFD070;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D51224C(a2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v25 = a4;
  uint64_t v26 = a5;
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v19 = a3;
  uint64_t v20 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v22 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v24 = swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
  uint64_t v12 = sub_24DCCA578();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = sub_24D7854B0((void (*)(char *, char *))sub_24D512A80, (uint64_t)v18, v12, MEMORY[0x263F8D310], MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D3E4A9C((unint64_t *)&qword_26B199DD0, &qword_26B197E00);
  sub_24DCC9708();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v29;
}

uint64_t sub_24D509FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, void *a3@<X8>)
{
  sub_24D5122F0(a1, a2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t result = sub_24DCC9968();
  *a3 = 40;
  a3[1] = 0xE100000000000000;
  return result;
}

uint64_t sub_24D50A080()
{
  uint64_t v0 = sub_24DCC8CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B199A70 != -1) {
    swift_once();
  }
  uint64_t result = sub_24D3E6F1C((uint64_t)sub_24D4367FC, 0);
  if (result)
  {
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v6 = v5;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    double v7 = v6 * 1000000000.0;
    if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v7 > -9.22337204e18)
      {
        if (v7 < 9.22337204e18)
        {
          MEMORY[0x270FA5388](result);
          v9[-2] = v8;
          return sub_24D506A68((uint64_t)sub_24D51337C, (unint64_t)&v9[-4]);
        }
LABEL_11:
        __break(1u);
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

uint64_t sub_24D50A264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v7[1] = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  unint64_t v8 = 0xD000000000000013;
  unint64_t v9 = 0x800000024DCFD110;
  void v7[3] = MEMORY[0x263F8D6C8];
  v7[0] = a3;
  sub_24D3E3EB4((uint64_t)v7);
  uint64_t v5 = v4;
  sub_24D3E3E54((uint64_t)v7);
  if (v5)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    v7[0] = 7;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D50A3BC(uint64_t a1, uint64_t a2)
{
  v8[2] = a2;
  v8[3] = a1;
  uint64_t result = sub_24D506A68((uint64_t)sub_24D512CCC, (unint64_t)v8);
  if (!v2)
  {
    uint64_t result = sub_24D50A604();
    if (result)
    {
      uint64_t v5 = *(uint64_t (**)(uint64_t))(a1 + 144);
      if (v5)
      {
        uint64_t v6 = swift_retain();
        uint64_t v7 = v5(v6);
        uint64_t result = sub_24D43DD74((uint64_t)v5);
        if (v7)
        {
          (*(void (**)(uint64_t))(*(void *)v7 + 344))(result);
          return swift_release();
        }
      }
    }
  }
  return result;
}

uint64_t sub_24D50A494(uint64_t a1, char a2, uint64_t a3)
{
  v8[1] = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  unint64_t v9 = 0xD000000000000013;
  unint64_t v10 = 0x800000024DCFD110;
  v8[3] = MEMORY[0x263F8D6C8];
  v8[0] = a3;
  sub_24D3E3EB4((uint64_t)v8);
  uint64_t v6 = v5;
  sub_24D3E3E54((uint64_t)v8);
  if (v6)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24D51224C(a2 & 1);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D50A604()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + 24);
  uint64_t v2 = (void *)swift_allocObject();
  unsigned __int8 v3 = v2;
  v2[2] = sub_24D512CD4;
  v2[3] = v0;
  aBlock[4] = sub_24D3E397C;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_139;
  uint64_t v4 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v5 = objc_msgSend(v1, sel_fetchSwift_error_, v4, aBlock);
  _Block_release(v4);
  id v6 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v5)
  {
    unsigned __int8 v3 = objc_msgSend(v5, sel_next);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return v3 & 1;
}

void sub_24D50A7D0()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  sub_24D504CE8();
  if (!v1)
  {
    uint64_t v2 = *(void **)(v0 + 24);
    unsigned __int8 v3 = (void *)swift_allocObject();
    v3[2] = sub_24D513338;
    v3[3] = v0;
    aBlock[4] = sub_24D3E397C;
    aBlock[5] = v3;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_166;
    uint64_t v4 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    id v5 = objc_msgSend(v2, sel_fetchSwift_error_, v4, aBlock);
    _Block_release(v4);
    id v6 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (v5)
    {
      if (objc_msgSend(v5, sel_next)) {
        sub_24D505FF0();
      }
      swift_release();
    }
    else
    {
      sub_24DCC8828();

      swift_willThrow();
      swift_release();
    }
  }
}

uint64_t sub_24D50A9A4()
{
  return 0;
}

void sub_24D50AB00()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 144);
  if (!v1)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v2 = v0;
  uint64_t v3 = swift_retain();
  uint64_t v4 = v1(v3);
  uint64_t v5 = sub_24D43DD74((uint64_t)v1);
  if (!v4)
  {
LABEL_7:
    __break(1u);
    return;
  }
  id v6 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)v4 + 168))(v5);
  sub_24D6050CC(0, 0, (uint64_t)"invalidate()", 12, 2, (uint64_t)sub_24D512AA0, v2);

  swift_release();
}

uint64_t sub_24D50ABE4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v31 = *MEMORY[0x263EF8340];
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v22 = *(void *)(*v1 + 96);
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v3 + 104);
  uint64_t v7 = *(void *)(v3 + 88);
  id aBlock = AssociatedTypeWitness;
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v28 = (void *)swift_getAssociatedConformanceWitness();
  uint64_t v8 = type metadata accessor for ThrottlingKey();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v21 - v10;
  id v24 = (id)v2[3];
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v21 - v10, v23, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = v4;
  *((void *)v13 + 3) = v7;
  *((void *)v13 + 4) = v22;
  *((void *)v13 + 5) = v6;
  *((void *)v13 + 6) = v2;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, v8);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D51292C;
  *(void *)(v14 + 24) = v13;
  unint64_t v29 = sub_24D3E397C;
  uint64_t v30 = v14;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v26 = 1107296256;
  uint64_t AssociatedConformanceWitness = (uint64_t)sub_24D3E38DC;
  uint64_t v28 = &block_descriptor_98;
  uint64_t v15 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v16 = objc_msgSend(v24, sel_fetchSwift_error_, v15, &aBlock);
  _Block_release(v15);
  id v17 = aBlock;
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v15) {
    __break(1u);
  }
  if (v16)
  {
    if (objc_msgSend(v16, sel_next))
    {
      id v18 = objc_msgSend(v16, sel_longAtIndex_, 0);

      unsigned int v19 = sub_24DA7EB28((unint64_t)v18);
      swift_release();
      if (v19 == 13) {
        return 0;
      }
      else {
        return v19;
      }
    }
    else
    {
      swift_release();

      return 0;
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
}

unint64_t sub_24D50AFE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 0xD000000000000020;
}

uint64_t sub_24D50B118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v6, "DELETE FROM ");
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D5122F0(a3, a1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v6[0];
}

uint64_t sub_24D50B25C(void *a1, uint64_t a2, uint64_t a3)
{
  *(void *)&v11[0] = 0;
  *((void *)&v11[0] + 1) = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (qword_26B1926B0 != -1) {
    swift_once();
  }
  v11[2] = xmmword_26B1A2240;
  v11[3] = *(_OWORD *)&byte_26B1A2250;
  uint64_t v12 = qword_26B1A2260;
  v11[0] = xmmword_26B1A2220;
  v11[1] = unk_26B1A2230;
  sub_24D5121B0((uint64_t)v11);
  uint64_t v5 = sub_24D7870C8();
  uint64_t v6 = v5[2];
  if (v6)
  {
    for (uint64_t i = 0; i != v6; ++i)
    {
      char v8 = *((unsigned char *)v5 + i + 32);
      sub_24D5121B0((uint64_t)v11);
      sub_24DA6C3E4(v8, a1);
      swift_bridgeObjectRelease();
      sub_24D5121E8((uint64_t)v11);
    }
  }
  swift_bridgeObjectRelease();
  sub_24D7870C8();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = 0;
  *(void *)(v9 + 24) = 0xE000000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986BDB0);
  sub_24D512890();
  sub_24DCC9708();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24D5121E8((uint64_t)v11);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D5122F0(a3, (uint64_t)a1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0x20455441445055;
}

uint64_t sub_24D50B57C(uint64_t a1, uint64_t a2, void (*a3)(long long *__return_ptr, char *), void *a4)
{
  void (*v83)(long long *__return_ptr, char *);
  void *v84;
  uint64_t (*v85)(uint64_t);
  id v86;
  uint64_t v87;
  uint64_t v88;
  void *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *);
  id v94;
  id v95;
  uint64_t v96;
  int v97;
  os_log_t v98;
  int v99;
  id v100;
  uint64_t v101;
  long long v102;
  uint64_t v103;
  void *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  long long v109;
  void *v110;
  void (*v111)(long long *__return_ptr, char *);
  char *v112;
  id v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(void, void, void);
  void *v127;
  uint64_t v128;
  id v129;
  void *v130;
  uint64_t v131;
  uint64_t v132;
  id aBlock;
  long long v134;
  long long v135;
  void *v136;
  char v137;
  uint64_t v138;
  uint64_t v139;
  long long v140;
  long long v141;
  long long v142;
  long long v143;
  uint64_t v144;
  char v145[8];
  long long v146;
  long long v147;
  void *v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;

  uint64_t v5 = v4;
  int v110 = a4;
  uint64_t v111 = a3;
  os_log_type_t v108 = a2;
  long long v131 = a1;
  uint64_t v152 = *MEMORY[0x263EF8340];
  uint64_t v7 = *(void *)(*v4 + 88);
  uint64_t v8 = *(void *)(*v4 + 96);
  uint64_t v9 = *(void *)(*v4 + 104);
  id aBlock = *(id *)(*v4 + 80);
  id v6 = aBlock;
  *(void *)&os_log_t v134 = v7;
  uint64_t v10 = v7;
  *((void *)&v134 + 1) = v8;
  *(void *)&uint64_t v135 = v9;
  uint64_t v107 = type metadata accessor for PersistenceTrigger();
  id v106 = *(void *)(v107 - 8);
  MEMORY[0x270FA5388](v107);
  uint64_t v105 = (char *)&v96 - v11;
  os_log_t v122 = sub_24DCC9078();
  unint64_t v121 = *(void *)(v122 - 8);
  MEMORY[0x270FA5388](v122);
  uint64_t v123 = (char *)&v96 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = v6;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  long long v128 = v10;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v16 = swift_getAssociatedConformanceWitness();
  id aBlock = AssociatedTypeWitness;
  *(void *)&os_log_t v134 = v14;
  *((void *)&v134 + 1) = AssociatedConformanceWitness;
  *(void *)&uint64_t v135 = v16;
  id v17 = (void *)type metadata accessor for ThrottlingKey();
  uint64_t v18 = *(v17 - 1);
  uint64_t v19 = *(void *)(v18 + 64);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v112 = (char *)&v96 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v96 - v21;
  uint64_t v23 = (void *)v5[3];
  id v24 = *(void (**)(void, void, void))(v18 + 16);
  uint64_t v124 = v18 + 16;
  uint64_t v126 = v24;
  v24((char *)&v96 - v21, v131, v17);
  uint64_t v25 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v26 = (v25 + 56) & ~v25;
  uint64_t v114 = v26 + v19;
  uint64_t v115 = v25 | 7;
  uint64_t v27 = (void *)swift_allocObject();
  uint64_t v28 = v128;
  v27[2] = v129;
  v27[3] = v28;
  id v118 = v8;
  v27[4] = v8;
  v27[5] = v9;
  unint64_t v117 = v9;
  unint64_t v29 = v27;
  v27[6] = v5;
  unint64_t v116 = v26;
  uint64_t v30 = (char *)v27 + v26;
  uint64_t v119 = v18;
  unint64_t v33 = *(char **)(v18 + 32);
  uint64_t v31 = v18 + 32;
  unint64_t v32 = v33;
  unint64_t v120 = v22;
  uint64_t v130 = v17;
  ((void (*)(char *, char *, void *))v33)(v30, v22, v17);
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_24D512E94;
  *(void *)(v34 + 24) = v29;
  *((void *)&v135 + 1) = sub_24D3E397C;
  uint64_t v136 = (void *)v34;
  id aBlock = (id)MEMORY[0x263EF8330];
  *(void *)&os_log_t v134 = 1107296256;
  *((void *)&v134 + 1) = sub_24D3E38DC;
  *(void *)&uint64_t v135 = &block_descriptor_149;
  uint64_t v35 = _Block_copy(&aBlock);
  uint64_t v127 = v5;
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  uint64_t v113 = v23;
  id v36 = objc_msgSend(v23, sel_fetchSwift_error_, v35, &aBlock);
  _Block_release(v35);
  id v37 = aBlock;
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v36)
  {
    uint64_t isEscapingClosureAtFileLocation = (uint64_t)v36;
    if (!objc_msgSend(v36, sel_next))
    {
      uint64_t v104 = v29;
      uint64_t v103 = v31;
      uint64_t v5 = v130;
      id v36 = v126;
      if (qword_26B1926B0 != -1) {
        goto LABEL_39;
      }
      goto LABEL_8;
    }
    unsigned int v39 = sub_24D7870C8();
    uint64_t v40 = v125;
    sub_24D8C03BC(v36, (uint64_t)v39, 0, (uint64_t)&aBlock);
    uint64_t v125 = v40;
    uint64_t v5 = v130;
    id v36 = v126;
    if (v40)
    {
      swift_release();

      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = v29;
    uint64_t v103 = v31;
    swift_bridgeObjectRelease();
    int v42 = aBlock;
    long long v48 = v134;
    long long v49 = v135;
    uint64_t v43 = v136;
    char v44 = v137;
    uint64_t v45 = v138;
    uint64_t v46 = v139;
    while (1)
    {
      *(void *)&long long v102 = v32;
      id v99 = v42;
      v145[0] = v42;
      uint64_t v146 = v48;
      uint64_t v109 = v49;
      uint64_t v147 = v49;
      uint64_t v148 = v43;
      BOOL v149 = v44;
      uint64_t v150 = v45;
      uint64_t v151 = v46;
      long long v101 = v46;
      v111(&v140, v145);
      id v50 = (id)fpfs_current_or_default_log();
      os_log_type_t v51 = v123;
      sub_24DCC9088();
      BOOL v52 = v112;
      ((void (*)(char *, uint64_t, void *))v36)(v112, v131, v5);
      swift_retain();
      sub_24D5121B0((uint64_t)&v140);
      swift_retain();
      sub_24D5121B0((uint64_t)&v140);
      uint64_t v53 = sub_24DCC9068();
      os_log_type_t v54 = sub_24DCCA118();
      int v55 = v54;
      BOOL v56 = os_log_type_enabled(v53, v54);
      uint64_t v111 = (void (*)(long long *__return_ptr, char *))isEscapingClosureAtFileLocation;
      uint64_t v100 = v43;
      if (v56)
      {
        uint64_t v57 = swift_slowAlloc();
        int v110 = (void *)swift_slowAlloc();
        id aBlock = v110;
        *(_DWORD *)uint64_t v57 = 136446722;
        uint64_t v98 = v53;
        int v58 = *((unsigned __int8 *)v127 + 32);
        swift_release();
        uint64_t v59 = v58 ? 20550 : 21318;
        long long v132 = sub_24D418FB4(v59, 0xE200000000000000, (uint64_t *)&aBlock);
        sub_24DCCA428();
        swift_release();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 12) = 2080;
        uint64_t v96 = v57 + 14;
        id v97 = v55;
        unint64_t v32 = v120;
        v126(v120, v52, v5);
        unint64_t v60 = *(void (**)(char *, void *))(v119 + 8);
        v60(v52, v130);
        uint64_t v61 = sub_24DA7E3D8(v130);
        unint64_t v63 = v62;
        v60(v32, v130);
        uint64_t v5 = v130;
        long long v132 = sub_24D418FB4(v61, v63, (uint64_t *)&aBlock);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        *(_WORD *)(v57 + 22) = 2080;
        sub_24D5121B0((uint64_t)&v140);
        uint64_t v64 = sub_24DA7DABC();
        unint64_t v66 = v65;
        sub_24D5121E8((uint64_t)&v140);
        long long v132 = sub_24D418FB4(v64, v66, (uint64_t *)&aBlock);
        id v36 = v126;
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        sub_24D5121E8((uint64_t)&v140);
        sub_24D5121E8((uint64_t)&v140);
        os_log_t v67 = v98;
        _os_log_impl(&dword_24D3D0000, v98, (os_log_type_t)v97, "✍️  %{public}s: throttle %s: %s", (uint8_t *)v57, 0x20u);
        id v68 = v110;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v68, -1, -1);
        MEMORY[0x25332B030](v57, -1, -1);

        (*(void (**)(char *, uint64_t))(v121 + 8))(v123, v122);
      }
      else
      {
        (*(void (**)(char *, void *))(v119 + 8))(v52, v5);
        swift_release_n();
        sub_24D5121E8((uint64_t)&v140);
        sub_24D5121E8((uint64_t)&v140);

        (*(void (**)(char *, uint64_t))(v121 + 8))(v51, v122);
        unint64_t v32 = v120;
      }
      ((void (*)(char *, uint64_t, void *))v36)(v32, v131, v5);
      unint64_t v69 = (v114 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v70 = (void *)swift_allocObject();
      uint64_t v71 = v128;
      void v70[2] = v129;
      v70[3] = v71;
      uint64_t v72 = v117;
      void v70[4] = v118;
      v70[5] = v72;
      uint64_t v73 = (char *)v70 + v116;
      v70[6] = v127;
      ((void (*)(char *, char *, void *))v102)(v73, v32, v5);
      uint64_t v74 = (char *)v70 + v69;
      long long v75 = v143;
      *((_OWORD *)v74 + 2) = v142;
      *((_OWORD *)v74 + 3) = v75;
      *((void *)v74 + 8) = v144;
      long long v76 = v141;
      *(_OWORD *)uint64_t v74 = v140;
      *((_OWORD *)v74 + 1) = v76;
      uint64_t v77 = swift_allocObject();
      *(void *)(v77 + 16) = sub_24D5131C8;
      *(void *)(v77 + 24) = v70;
      *((void *)&v135 + 1) = sub_24D3E397C;
      uint64_t v136 = (void *)v77;
      id aBlock = (id)MEMORY[0x263EF8330];
      *(void *)&os_log_t v134 = 1107296256;
      *((void *)&v134 + 1) = sub_24D3E38DC;
      *(void *)&uint64_t v135 = &block_descriptor_159;
      unsigned __int8 v78 = _Block_copy(&aBlock);
      swift_retain();
      sub_24D5121B0((uint64_t)&v140);
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v79 = objc_msgSend(v113, sel_executeSwift_error_, v78, &aBlock);
      _Block_release(v78);
      uint64_t isEscapingClosureAtFileLocation = (uint64_t)aBlock;
      id v80 = aBlock;
      char v81 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v81 & 1) == 0) {
        break;
      }
LABEL_38:
      __break(1u);
LABEL_39:
      swift_once();
LABEL_8:
      int v42 = xmmword_26B1A2220;
      long long v102 = *(long long *)((char *)&xmmword_26B1A2220 + 8);
      uint64_t v109 = *(_OWORD *)&qword_26B1A2238;
      uint64_t v43 = (void *)*((void *)&xmmword_26B1A2240 + 1);
      char v44 = byte_26B1A2250;
      uint64_t v45 = qword_26B1A2258;
      uint64_t v46 = qword_26B1A2260;
      id v47 = *((id *)&xmmword_26B1A2240 + 1);
      swift_bridgeObjectRetain();
      long long v48 = v102;
      long long v49 = v109;
    }
    if (v79)
    {
      if (v140 == 1)
      {
        uint64_t v82 = v108;
        if (*((uint64_t *)&v141 + 1) > v108 && v143 == 9) {
          sub_24D505FF0();
        }
        uint64_t v83 = v111;
        if ((v99 != 1 || (uint64_t)v109 <= v82) && *((uint64_t *)&v141 + 1) > v82)
        {
          uint64_t v84 = (void *)*((void *)&v142 + 1);
          if (*((void *)&v142 + 1))
          {
            uint64_t v85 = (uint64_t (*)(uint64_t))v127[18];
            if (v85)
            {
              uint64_t v86 = *((id *)&v142 + 1);
              id v87 = sub_24D3EBEF0((uint64_t)v85);
              uint64_t v88 = v85(v87);
              sub_24D43DD74((uint64_t)v85);
              if (v88)
              {
                __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
                uint64_t v89 = v130;
                os_log_t v90 = *(int *)(swift_getTupleTypeMetadata2() + 48);
                id v91 = v105;
                v126(v105, v131, v89);
                *(void *)&v91[v90] = v84;
                id v92 = v107;
                swift_storeEnumTagMultiPayload();
                uint64_t v93 = *(void (**)(char *))(*(void *)v88 + 312);
                uint64_t v94 = v84;
                v93(v91);
                swift_release();
                (*(void (**)(char *, uint64_t))(v106 + 8))(v91, v92);
              }
            }
            else
            {
              char v95 = *((id *)&v142 + 1);
            }
            swift_bridgeObjectRelease();

            goto LABEL_33;
          }
        }
      }
      else
      {
        uint64_t v83 = v111;
      }

      swift_bridgeObjectRelease();
LABEL_33:
      sub_24D5121E8((uint64_t)&v140);
      swift_release();
      return swift_release();
    }
    sub_24DCC8828();

    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_24D5121E8((uint64_t)&v140);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_24D50C5A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 0x205443454C4553;
}

uint64_t sub_24D50C71C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  uint64_t v25 = a1;
  v28[0] = swift_getAssociatedTypeWitness();
  v28[1] = swift_getAssociatedTypeWitness();
  v28[2] = swift_getAssociatedConformanceWitness();
  v28[3] = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ThrottlingKey();
  uint64_t v6 = sub_24DCCA3F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - v8;
  v28[0] = 0;
  v28[1] = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v28, "REPLACE INTO ");
  HIWORD(v28[1]) = -4864;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v10 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, v24, v5);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v9, 0, 1, v5);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v12 = v5;
  uint64_t v13 = v25;
  sub_24D734148((uint64_t)v9, v12, WitnessTable);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D5121B0(a4);
  uint64_t v14 = sub_24D7870C8();
  uint64_t v15 = v14[2];
  if (v15)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v15; ++i)
    {
      char v17 = *((unsigned char *)v14 + i + 32);
      sub_24D5121B0(a4);
      sub_24DA6C3E4(v17, v13);
      swift_bridgeObjectRelease();
      sub_24D5121E8(a4);
    }
    swift_bridgeObjectRelease();
    uint64_t v18 = v14[2];
  }
  else
  {
    uint64_t v18 = 0;
  }
  uint64_t v19 = MEMORY[0x253327AD0](2108479, 0xE300000000000000, v18);
  uint64_t v26 = v19;
  unint64_t v27 = v20;
  uint64_t v21 = HIBYTE(v20) & 0xF;
  if ((v20 & 0x2000000000000000) == 0) {
    uint64_t v21 = v19 & 0xFFFFFFFFFFFFLL;
  }
  if (v21) {
    sub_24D856218(2);
  }
  swift_bridgeObjectRelease();
  sub_24D5121E8(a4);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v28[0];
}

double sub_24D50CC04@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedConformanceWitness();
  *(void *)&long long v28 = AssociatedTypeWitness;
  *((void *)&v28 + 1) = v5;
  *(void *)&long long v29 = AssociatedConformanceWitness;
  *((void *)&v29 + 1) = v7;
  uint64_t v8 = type metadata accessor for ThrottlingKey();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v22 - v9;
  (*(void (**)(char *, uint64_t))(v11 + 16))((char *)&v22 - v9, v23);
  long long v12 = v2[16];
  long long v32 = v2[15];
  long long v33 = v12;
  long long v13 = v2[18];
  long long v34 = v2[17];
  long long v35 = v13;
  long long v14 = v2[12];
  long long v28 = v2[11];
  long long v29 = v14;
  long long v15 = v2[14];
  long long v30 = v2[13];
  long long v31 = v15;
  sub_24D512B04((uint64_t)&v28);
  uint64_t v24 = AssociatedTypeWitness;
  uint64_t v25 = v5;
  uint64_t v26 = AssociatedConformanceWitness;
  uint64_t v27 = v7;
  uint64_t v16 = type metadata accessor for ReconciliationID();
  (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v10, v16);
  long long v17 = v33;
  a2[4] = v32;
  a2[5] = v17;
  long long v18 = v35;
  a2[6] = v34;
  a2[7] = v18;
  long long v19 = v29;
  *a2 = v28;
  a2[1] = v19;
  double result = *(double *)&v30;
  long long v21 = v31;
  a2[2] = v30;
  a2[3] = v21;
  return result;
}

uint64_t sub_24D50CE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v45 = a2;
  uint64_t v46 = a3;
  uint64_t v40 = a1;
  uint64_t v4 = *v3;
  uint64_t v5 = *(void (***)(char *, void *, uint64_t))(*v3 + 96);
  uint64_t v6 = *(void (***)(char *, uint64_t))(*v3 + 80);
  uint64_t AssociatedTypeWitness = (uint64_t (**)(char *, char *, uint64_t))swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v4 + 104);
  uint64_t v9 = *(void *)(v4 + 88);
  uint64_t v41 = AssociatedTypeWitness;
  id v47 = (uint64_t (**)(void, void, void))AssociatedTypeWitness;
  uint64_t v48 = swift_getAssociatedTypeWitness();
  uint64_t v39 = v48;
  uint64_t v10 = v8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v50 = swift_getAssociatedConformanceWitness();
  uint64_t v11 = v40;
  uint64_t v12 = type metadata accessor for ThrottlingKey();
  uint64_t v44 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  long long v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = v14;
  MEMORY[0x270FA5388](v13);
  long long v17 = (char *)&v35 - v16;
  int v42 = v6;
  uint64_t v18 = v46;
  uint64_t v38 = v9;
  uint64_t v43 = v5;
  uint64_t v19 = v45;
  uint64_t v37 = v10;
  uint64_t result = sub_24D987CD0(v11);
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    uint64_t v21 = result;
    sub_24D5129BC();
    uint64_t v22 = (void *)swift_allocError();
    *(void *)uint64_t v23 = v19;
    *(void *)(v23 + 8) = 0;
    *(unsigned char *)(v23 + 16) = 0;
    sub_24DA7F4E0(1, v21, 0, v18 + v19, v18, v22, v18, 0, (uint64_t)v51, 0, 0, 1);
    uint64_t v24 = sub_24DA7C684(v11, (uint64_t)v41, v39);
    if (MEMORY[0x253327DC0](v24, v12))
    {
      uint64_t v25 = 0;
      uint64_t v41 = (uint64_t (**)(char *, char *, uint64_t))(v44 + 32);
      int v42 = (void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v43 = (void (**)(char *, void *, uint64_t))(v44 + 16);
      while (1)
      {
        char v26 = sub_24DCC9CB8();
        sub_24DCC9C68();
        if (v26)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v44 + 16))(v17, v24+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(void *)(v44 + 72) * v25, v12);
          uint64_t v27 = v25 + 1;
          if (__OFADD__(v25, 1)) {
            goto LABEL_12;
          }
        }
        else
        {
          uint64_t result = sub_24DCCA778();
          if (v36 != 8) {
            goto LABEL_17;
          }
          id v47 = (uint64_t (**)(void, void, void))result;
          (*v43)(v17, &v47, v12);
          swift_unknownObjectRelease();
          uint64_t v27 = v25 + 1;
          if (__OFADD__(v25, 1))
          {
LABEL_12:
            __break(1u);
            goto LABEL_13;
          }
        }
        uint64_t v28 = (*v41)(v15, v17, v12);
        MEMORY[0x270FA5388](v28);
        *(&v35 - 8) = (uint64_t)v15;
        *(&v35 - 7) = (uint64_t)v3;
        *(&v35 - 6) = (uint64_t)v51;
        uint64_t v29 = v46;
        *(&v35 - 5) = v45;
        uint64_t v31 = 0;
        LOBYTE(v32) = 0;
        uint64_t v33 = v11;
        uint64_t v34 = v29;
        uint64_t v30 = v52;
        sub_24D50B57C((uint64_t)v15, v29, (void (*)(long long *__return_ptr, char *))sub_24D512B5C, &v35 - 10);
        uint64_t v52 = v30;
        if (v30) {
          break;
        }
        (*v42)(v15, v12);
        ++v25;
        if (v27 == MEMORY[0x253327DC0](v24, v12)) {
          goto LABEL_13;
        }
      }
      swift_bridgeObjectRelease();
      sub_24D5121E8((uint64_t)v51);
      return ((uint64_t (*)(char *, uint64_t))*v42)(v15, v12);
    }
    else
    {
LABEL_13:
      swift_bridgeObjectRelease();
      sub_24D504CE8();
      return sub_24D5121E8((uint64_t)v51);
    }
  }
  return result;
}

void sub_24D50D31C(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X7>, char *a9@<X8>, uint64_t a10)
{
  *(void *)&long long v64 = a8;
  int v61 = a7;
  uint64_t v59 = a5;
  uint64_t v60 = a6;
  uint64_t v65 = a4;
  unint64_t v66 = a9;
  *(void *)&long long v67 = a2;
  uint64_t v12 = *(void *)(*(void *)a3 + 96);
  uint64_t v13 = *(void *)(*(void *)a3 + 80);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v62 = v13;
  *(void *)&long long v63 = v12;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v17 = swift_getAssociatedConformanceWitness();
  uint64_t v68 = AssociatedTypeWitness;
  *(void *)&long long v69 = v15;
  *((void *)&v69 + 1) = AssociatedConformanceWitness;
  *(void *)&long long v70 = v17;
  uint64_t v18 = type metadata accessor for ThrottlingKey();
  MEMORY[0x270FA5388](v18);
  unint64_t v20 = (char *)&v59 - v19;
  (*(void (**)(char *, void))(v21 + 16))((char *)&v59 - v19, v67);
  uint64_t v68 = AssociatedTypeWitness;
  *(void *)&long long v69 = v15;
  *((void *)&v69 + 1) = AssociatedConformanceWitness;
  *(void *)&long long v70 = v17;
  uint64_t v22 = type metadata accessor for ReconciliationID();
  LODWORD(v13) = v20[*(int *)(swift_getTupleTypeMetadata2() + 48)];
  (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v20, v22);
  if (v13 == 2) {
    a3[168] = 1;
  }
  uint64_t v23 = a1;
  if (*(unsigned char *)a1 == 1)
  {
    uint64_t v25 = *(void **)(a1 + 40);
    if (v25)
    {
      sub_24D5129BC();
      uint64_t v31 = (void *)swift_allocError();
      uint64_t v33 = v59;
      uint64_t v32 = v60;
      *(void *)uint64_t v34 = v59;
      *(void *)(v34 + 8) = v32;
      char v35 = v61;
      *(unsigned char *)(v34 + 16) = v61;
      id v36 = v25;
      sub_24D512B94(v33, v32, v35);
      uint64_t v37 = (void *)sub_24DCC8818();

      uint64_t v38 = (void *)sub_24DCC8818();
      *(void *)&long long v67 = v37;
      id v39 = objc_msgSend(v37, sel_domain);
      uint64_t v40 = sub_24DCC97E8();
      uint64_t v42 = v41;

      id v43 = objc_msgSend(v38, sel_domain);
      uint64_t v44 = sub_24DCC97E8();
      uint64_t v46 = v45;

      if (v40 == v44 && v42 == v46)
      {
        swift_bridgeObjectRelease_n();
        id v47 = (void *)v67;
      }
      else
      {
        char v48 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v47 = (void *)v67;
        if ((v48 & 1) == 0)
        {

          goto LABEL_14;
        }
      }
      id v49 = objc_msgSend(v47, sel_code, v59, v60);
      id v50 = objc_msgSend(v38, sel_code);

      if (v49 == v50)
      {
        long long v67 = *(_OWORD *)(v23 + 56);
        char v24 = *(unsigned char *)(v23 + 48);
        long long v51 = *(_OWORD *)(v23 + 24);
        long long v63 = *(_OWORD *)(v23 + 8);
        long long v64 = v51;
        sub_24D5121B0(v23);
        long long v29 = v63;
        long long v28 = v64;
        long long v30 = v67;
        char v27 = 1;
        goto LABEL_15;
      }
    }
LABEL_14:
    uint64_t v52 = sub_24D987CD0(v64);
    uint64_t v53 = *(void *)(v23 + 16);
    uint64_t v54 = *(void *)(v65 + 24);
    uint64_t v55 = *(void *)(v65 + 32);
    BOOL v56 = *(void **)(v65 + 40);
    id v57 = v56;
    sub_24DA7F4E0(1, v52, v53, v54, v55, v56, a10, 0, (uint64_t)&v68, 0, 0, 1);
    long long v30 = v73;
    char v24 = v72;
    uint64_t v25 = v71;
    long long v28 = v70;
    long long v29 = v69;
    char v27 = v68;
    goto LABEL_15;
  }
  if (*(unsigned char *)a1) {
    goto LABEL_14;
  }
  long long v67 = *(_OWORD *)(v65 + 56);
  char v24 = *(unsigned char *)(v65 + 48);
  uint64_t v25 = *(void **)(v65 + 40);
  long long v26 = *(_OWORD *)(v65 + 24);
  long long v63 = *(_OWORD *)(v65 + 8);
  long long v64 = v26;
  char v27 = *(unsigned char *)v65;
  sub_24D5121B0(v65);
  long long v29 = v63;
  long long v28 = v64;
  long long v30 = v67;
LABEL_15:
  int v58 = v66;
  *unint64_t v66 = v27;
  *(_OWORD *)(v58 + 8) = v29;
  *(_OWORD *)(v58 + 24) = v28;
  *((void *)v58 + 5) = v25;
  v58[48] = v24;
  *(_OWORD *)(v58 + 56) = v30;
}

void sub_24D50D7F4(uint64_t a1, void (**a2)(char *, uint64_t))
{
  uint64_t v126 = a2;
  uint64_t v137 = a1;
  uint64_t v3 = *(void *)v2;
  uint64_t v4 = *(void *)(*(void *)v2 + 88);
  uint64_t v5 = *(void *)(*(void *)v2 + 104);
  uint64_t v124 = (void *)type metadata accessor for FileTreeError();
  uint64_t v111 = *(v124 - 1);
  uint64_t v6 = MEMORY[0x270FA5388](v124);
  uint64_t v113 = (char *)&v104 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  os_log_t v122 = (void **)((char *)&v104 - v8);
  uint64_t v9 = *(void **)(v3 + 80);
  uint64_t v130 = v2;
  uint64_t v10 = *(void *)(v3 + 96);
  uint64_t v123 = (void (**)(void, void, void))type metadata accessor for FileTreeError();
  uint64_t v112 = (uint64_t)*(v123 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v123);
  uint64_t v114 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v117 = (void **)((char *)&v104 - v13);
  id v132 = v9;
  uint64_t v133 = v4;
  uint64_t v134 = v10;
  uint64_t v135 = v5;
  uint64_t v110 = type metadata accessor for PersistenceTrigger();
  uint64_t v109 = *(void *)(v110 - 8);
  MEMORY[0x270FA5388](v110);
  os_log_type_t v108 = (char *)&v104 - v14;
  uint64_t AssociatedTypeWitness = (void *)swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  unint64_t v116 = AssociatedTypeWitness;
  id v132 = AssociatedTypeWitness;
  uint64_t v133 = v16;
  uint64_t v115 = v16;
  uint64_t v107 = AssociatedConformanceWitness;
  uint64_t v134 = AssociatedConformanceWitness;
  uint64_t v135 = v18;
  uint64_t v106 = v18;
  uint64_t v19 = type metadata accessor for ThrottlingKey();
  uint64_t v129 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v125 = (void (**)(char *, char *, uint64_t))((char *)&v104 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  long long v128 = (void (**)(char *, id *, uint64_t))((char *)&v104 - v23);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  long long v26 = (char *)&v104 - v25;
  uint64_t v105 = v27;
  MEMORY[0x270FA5388](v24);
  long long v29 = (char *)&v104 - v28;
  id v118 = v9;
  uint64_t v120 = v4;
  uint64_t v119 = v10;
  uint64_t v121 = v5;
  long long v30 = (void *)sub_24D9882BC(v137);
  uint64_t v33 = v30;
  uint64_t v34 = v31;
  char v35 = v32;
  uint64_t v36 = v127;
  switch(v32)
  {
    case 0:
      uint64_t v37 = v31;
      if (!v31) {
        return;
      }
      goto LABEL_5;
    case 1:
      uint64_t v37 = (char *)v30;
      if (v30)
      {
LABEL_5:
        uint64_t v38 = v31;
        id v39 = *(uint64_t (**)(id))(*(void *)v37 + 88);
        id v40 = sub_24D3F1C98(v30, v31, v32);
        uint64_t v41 = (uint64_t (*)(_OWORD *))v39(v40);
        uint64_t v43 = v42;
        sub_24D3E380C(v33, v38, v35);
        switch(v44)
        {
          case 1:
          case 3:
            return;
          case 2:
            long long v62 = v130[16];
            uint64_t v136[4] = v130[15];
            v136[5] = v62;
            long long v63 = v130[18];
            v136[6] = v130[17];
            v136[7] = v63;
            long long v64 = v130[12];
            v136[0] = v130[11];
            v136[1] = v64;
            long long v65 = v130[14];
            v136[2] = v130[13];
            v136[3] = v65;
            sub_24D512B04((uint64_t)v136);
            uint64_t v66 = v41(v136);
            sub_24D512B30((uint64_t)v136);
            sub_24D50CE58(v137, v66, (uint64_t)v126);
            sub_24D512AEC((uint64_t)v41, v43, 2);
            break;
          default:
            sub_24D50CE58(v137, (uint64_t)v41, (uint64_t)v126);
            break;
        }
      }
      return;
    case 3:
      id v131 = v30;
      sub_24D3F1C98(v30, v31, 3);
      id v45 = v33;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      if (swift_dynamicCast())
      {
        uint64_t v46 = v124;
        id v47 = v123;
        char v48 = v122;
        if (!(_BYTE)v134)
        {
          sub_24D50CE58(v137, (uint64_t)v132, (uint64_t)v126);
          sub_24D3E380C(v33, v34, 3);

          return;
        }
        sub_24D512AD8((uint64_t)v132, v133, v134);
      }
      else
      {
        uint64_t v46 = v124;
        id v47 = v123;
        char v48 = v122;
      }

      id v132 = v33;
      id v59 = v33;
      uint64_t v60 = v117;
      if (swift_dynamicCast())
      {
        if (swift_getEnumCaseMultiPayload() == 8)
        {
          sub_24D3E380C(v33, v34, 3);
          int v61 = *v60;
LABEL_32:

LABEL_41:
          return;
        }
        (*(void (**)(void **, void (**)(void, void, void)))(v112 + 8))(v60, v47);
      }

      id v132 = v33;
      id v67 = v33;
      if (swift_dynamicCast())
      {
        if (swift_getEnumCaseMultiPayload() == 8)
        {
          sub_24D3E380C(v33, v34, 3);
          int v61 = *v48;
          goto LABEL_32;
        }
        (*(void (**)(void **, void *))(v111 + 8))(v48, v46);
      }

      id v132 = v33;
      id v68 = v33;
      long long v69 = v114;
      if (swift_dynamicCast())
      {
        if (swift_getEnumCaseMultiPayload() == 17)
        {
LABEL_40:
          sub_24D3E380C(v33, v34, 3);
          goto LABEL_41;
        }
        (*(void (**)(char *, void (**)(void, void, void)))(v112 + 8))(v69, v47);
      }

      id v132 = v33;
      id v70 = v33;
      uint64_t v71 = v113;
      int v72 = swift_dynamicCast();
      uint64_t v73 = v137;
      if (v72)
      {
        if (swift_getEnumCaseMultiPayload() == 17) {
          goto LABEL_40;
        }
        (*(void (**)(char *, void *))(v111 + 8))(v71, v46);
      }
      os_log_t v122 = (void **)v34;

      uint64_t v124 = v33;
      id v75 = v33;
      uint64_t v76 = sub_24DA7C684(v73, (uint64_t)v116, v115);
      if (MEMORY[0x253327DC0](v76, v19))
      {
        uint64_t v77 = 0;
        uint64_t v123 = (void (**)(void, void, void))(v129 + 16);
        unsigned __int8 v78 = (uint64_t (**)(uint64_t, char *, uint64_t))(v129 + 32);
        unsigned int v79 = (void (**)(uint64_t, uint64_t))(v129 + 8);
        uint64_t v80 = (uint64_t)v125;
        while (1)
        {
          char v81 = sub_24DCC9CB8();
          sub_24DCC9C68();
          if (v81)
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v129 + 16))((char *)v128, v76+ ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(void *)(v129 + 72) * v77, v19);
            uint64_t v82 = v77 + 1;
            if (__OFADD__(v77, 1)) {
              goto LABEL_56;
            }
          }
          else
          {
            id v87 = (void *)sub_24DCCA778();
            if (v105 != 8) {
              goto LABEL_73;
            }
            id v132 = v87;
            (*v123)(v128, &v132, v19);
            swift_unknownObjectRelease();
            uint64_t v82 = v77 + 1;
            if (__OFADD__(v77, 1))
            {
LABEL_56:
              __break(1u);
              goto LABEL_57;
            }
          }
          uint64_t v83 = (*v78)(v80, (char *)v128, v19);
          MEMORY[0x270FA5388](v83);
          uint64_t v84 = v137;
          *(&v104 - 6) = (uint64_t)v124;
          *(&v104 - 5) = v84;
          uint64_t v85 = v126;
          uint64_t v86 = v130;
          *(&v104 - 4) = (uint64_t)v126;
          *(&v104 - 3) = (uint64_t)v86;
          *(&v104 - 2) = v80;
          sub_24D50B57C(v80, (uint64_t)v85, (void (*)(long long *__return_ptr, char *))sub_24D512AC8, &v104 - 8);
          if (v36) {
            break;
          }
          (*v79)(v80, v19);
          ++v77;
          uint64_t v36 = 0;
          if (v82 == MEMORY[0x253327DC0](v76, v19)) {
            goto LABEL_57;
          }
        }
        uint64_t v93 = v124;
        uint64_t v94 = v122;
        sub_24D3E380C(v124, v122, 3);
        swift_bridgeObjectRelease();
        sub_24D3E380C(v93, v94, 3);
        (*v79)(v80, v19);
      }
      else
      {
LABEL_57:
        swift_bridgeObjectRelease();
        sub_24D504CE8();
        uint64_t v88 = v124;
        uint64_t v89 = v122;
        sub_24D3E380C(v124, v122, 3);
        uint64_t v90 = (uint64_t)v88;
        id v91 = v89;
        char v92 = 3;
LABEL_70:
        sub_24D3E380C((void *)v90, v91, v92);
      }
      return;
    case 4:
      if (v30 != (void *)1 || v31) {
        return;
      }
      sub_24D3F1C98((id)1, 0, 4);
      uint64_t v49 = v137;
      uint64_t v50 = sub_24DA7CA48(v137, v116, v115, v118, v120, v119, v121);
      if (MEMORY[0x253327DC0](v50, v19))
      {
        uint64_t v51 = v36;
        uint64_t v52 = 0;
        char v53 = 0;
        long long v128 = (void (**)(char *, id *, uint64_t))(v129 + 16);
        uint64_t v125 = (void (**)(char *, char *, uint64_t))(v129 + 32);
        uint64_t v126 = (void (**)(char *, uint64_t))(v129 + 8);
        do
        {
          char v54 = sub_24DCC9CB8();
          sub_24DCC9C68();
          if (v54)
          {
            (*(void (**)(char *, unint64_t, uint64_t))(v129 + 16))(v29, v50+ ((*(unsigned __int8 *)(v129 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80))+ *(void *)(v129 + 72) * v52, v19);
            uint64_t v55 = v52 + 1;
            if (__OFADD__(v52, 1)) {
              goto LABEL_22;
            }
          }
          else
          {
            int v58 = (void *)sub_24DCCA778();
            if (v105 != 8)
            {
              __break(1u);
LABEL_73:
              __break(1u);
              JUMPOUT(0x24D50E868);
            }
            id v132 = v58;
            (*v128)(v29, &v132, v19);
            swift_unknownObjectRelease();
            uint64_t v55 = v52 + 1;
            if (__OFADD__(v52, 1))
            {
LABEL_22:
              __break(1u);
              return;
            }
          }
          (*v125)(v26, v29, v19);
          BOOL v56 = sub_24D508938((uint64_t)v26);
          if (v51)
          {
            sub_24D3E380C((void *)1, 0, 4);
            (*v126)(v26, v19);
            swift_bridgeObjectRelease();
            return;
          }
          BOOL v57 = v56;
          (*v126)(v26, v19);
          v53 |= v57;
          ++v52;
        }
        while (v55 != MEMORY[0x253327DC0](v50, v19));
        swift_bridgeObjectRelease();
        if (v53)
        {
          uint64_t v74 = v130;
          sub_24D504CE8();
          uint64_t v49 = v137;
          goto LABEL_62;
        }
        uint64_t v49 = v137;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      uint64_t v74 = v130;
LABEL_62:
      if (v49 < 0) {
        goto LABEL_69;
      }
      id v132 = v118;
      uint64_t v133 = v120;
      uint64_t v134 = v119;
      uint64_t v135 = v121;
      type metadata accessor for Ingestion.FetchItemMetadata();
      uint64_t v95 = swift_dynamicCastClass();
      if (!v95) {
        goto LABEL_69;
      }
      uint64_t v96 = v95;
      if ((*(_WORD *)(v95 + 136) & 0x2140) == 0) {
        goto LABEL_69;
      }
      id v97 = (uint64_t (*)(uint64_t))*((void *)v74 + 18);
      if (!v97) {
        goto LABEL_69;
      }
      sub_24D3EBEF0(*((void *)v74 + 18));
      uint64_t v98 = swift_retain();
      uint64_t v99 = v97(v98);
      sub_24D43DD74((uint64_t)v97);
      if (v99)
      {
        uint64_t v100 = v116;
        id v132 = v116;
        uint64_t v133 = v115;
        uint64_t v134 = v107;
        uint64_t v135 = v106;
        type metadata accessor for ReconciliationID();
        uint64_t v101 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        long long v102 = v108;
        (*(void (**)(char *, uint64_t, void *))(*(v100 - 1) + 16))(v108, v96 + *(void *)(*(void *)v96 + 576), v100);
        swift_storeEnumTagMultiPayload();
        v102[v101] = 3;
        uint64_t v103 = v110;
        swift_storeEnumTagMultiPayload();
        (*(void (**)(char *))(*(void *)v99 + 312))(v102);
        swift_release();
        sub_24D3E380C((void *)1, 0, 4);
        swift_release();
        (*(void (**)(char *, uint64_t))(v109 + 8))(v102, v103);
        return;
      }
      swift_release();
LABEL_69:
      uint64_t v90 = 1;
      id v91 = 0;
      char v92 = 4;
      goto LABEL_70;
    default:
      return;
  }
}

__n128 sub_24D50E88C@<Q0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9 = sub_24D987CD0(a2);
  sub_24D50CC04(a4, v12);
  sub_24DA7CA4C(a1, v9, a3, (uint64_t)v12, (uint64_t)v13);
  sub_24D512B30((uint64_t)v12);
  long long v10 = v13[3];
  *(_OWORD *)(a5 + 32) = v13[2];
  *(_OWORD *)(a5 + 48) = v10;
  *(void *)(a5 + 64) = v14;
  __n128 result = (__n128)v13[1];
  *(_OWORD *)a5 = v13[0];
  *(__n128 *)(a5 + 16) = result;
  return result;
}

uint64_t sub_24D50E994(void *a1, void (*a2)(void, _OWORD *), uint64_t a3)
{
  v21[1] = a3;
  uint64_t v22 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedConformanceWitness();
  uint64_t v24 = AssociatedTypeWitness;
  *(void *)&long long v29 = AssociatedTypeWitness;
  *((void *)&v29 + 1) = v5;
  uint64_t v23 = AssociatedConformanceWitness;
  *(void *)&long long v30 = AssociatedConformanceWitness;
  *((void *)&v30 + 1) = v7;
  uint64_t v8 = type metadata accessor for ThrottlingKey();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v21 - v10;
  uint64_t WitnessTable = swift_getWitnessTable();
  id v13 = v36;
  uint64_t result = sub_24DA6D518(a1, 0, v8, WitnessTable, (uint64_t)v11);
  if (!v13)
  {
    v21[0] = v11;
    id v36 = a1;
    uint64_t v15 = swift_getWitnessTable();
    uint64_t v16 = sub_24DA6D5A0(v8, v15);
    uint64_t v25 = v24;
    uint64_t v26 = v5;
    uint64_t v27 = v23;
    uint64_t v28 = v7;
    uint64_t v17 = _s9SQLFieldsOMa();
    uint64_t v18 = MEMORY[0x253327D80](v16, v17);
    uint64_t result = swift_bridgeObjectRelease();
    if (v18 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v18 <= 0x7FFFFFFF)
    {
      uint64_t v19 = sub_24D7870C8();
      sub_24D8C03BC(v36, (uint64_t)v19, v18, (uint64_t)&v29);
      swift_bridgeObjectRelease();
      v34[2] = v31;
      v34[3] = v32;
      uint64_t v35 = v33;
      v34[0] = v29;
      v34[1] = v30;
      uint64_t v20 = v21[0];
      v22(v21[0], v34);
      sub_24D5121E8((uint64_t)v34);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v20, v8);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24D50ECC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v13[1] = a3;
  void v13[2] = swift_getAssociatedTypeWitness();
  v13[3] = swift_getAssociatedTypeWitness();
  _OWORD v13[4] = swift_getAssociatedConformanceWitness();
  v13[5] = swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for ThrottlingKey();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v7 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v9 = (char *)v13 + *(int *)(v7 + 48) - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))((char *)v13 - v8, a1, v5);
  long long v10 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)v9 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)v9 + 3) = v10;
  *((void *)v9 + 8) = *(void *)(a2 + 64);
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v9 = *(_OWORD *)a2;
  *((_OWORD *)v9 + 1) = v11;
  sub_24D5121B0(a2);
  sub_24DCC9D48();
  return sub_24DCC9D08();
}

uint64_t sub_24D50EE90(int a1, uint64_t a2, unint64_t a3, int a4)
{
  unint64_t v27 = a3;
  uint64_t v5 = v4;
  int v29 = a1;
  int v30 = a4;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = *(void **)v4;
  uint64_t v28 = *(void *)(*(void *)v4 + 96);
  uint64_t v8 = v7[10];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v13 = (char *)&v27 - v12;
  id v31 = *(id *)(v5 + 24);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v27 - v12, a2, AssociatedTypeWitness);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = v8;
  *((void *)v15 + 3) = v7[11];
  *((void *)v15 + 4) = v28;
  *((void *)v15 + 5) = v7[13];
  *((void *)v15 + 6) = v5;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v15[v14], v13, AssociatedTypeWitness);
  uint64_t v16 = &v15[v14 + v11];
  char *v16 = v29;
  v16[1] = v30;
  uint64_t v17 = (void *)swift_allocObject();
  void v17[2] = sub_24D5134A0;
  v17[3] = v15;
  aBlock[4] = sub_24D3E397C;
  aBlock[5] = v17;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_176;
  uint64_t v18 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v19 = objc_msgSend(v31, sel_fetchSwift_error_, v18, aBlock);
  _Block_release(v18);
  id v20 = aBlock[0];
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v18) {
    __break(1u);
  }
  if (v19)
  {
    if (objc_msgSend(v19, sel_next))
    {
      unint64_t v21 = (unint64_t)objc_msgSend(v19, sel_unsignedLongAtIndex_, 0);

      unint64_t v22 = v27;
      unsigned int v23 = sub_24D7BFFE8(v27);
      swift_release();
      if (v23 <= 1) {
        BOOL v24 = v21 >= v22;
      }
      else {
        BOOL v24 = (v21 & 0x1FFFFFFFFFFFFFFFLL) >= (v22 & 0x1FFFFFFFFFFFFFFFLL);
      }
      char v25 = v24;
    }
    else
    {
      swift_release();

      char v25 = 0;
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return v25 & 1;
}

uint64_t sub_24D50F24C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  unint64_t v17 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  unint64_t v16 = 0;
  uint64_t v7 = MEMORY[0x263F8D6C8];
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = swift_checkMetadataState();
  v9(a1, v10, v8);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  unint64_t v11 = qword_24DCD4CA0[a4];
  uint64_t v18 = v7;
  unint64_t v16 = v11;
  sub_24D3E3EB4((uint64_t)&v16);
  uint64_t v13 = v12;
  sub_24D3E3E54((uint64_t)&v16);
  if (v13)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    unint64_t v16 = 1;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    if (a5)
    {
      unint64_t v16 = 0;
      unint64_t v17 = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      unint64_t v16 = 0xD000000000000017;
      unint64_t v17 = 0x800000024DCFD310;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
    }
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D50F5F0()
{
  uint64_t v0 = sub_24DCC8CE8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v14 = v11;
  unint64_t v15 = v12;
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v11 = 1;
  uint64_t v4 = MEMORY[0x263F8D6C8];
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v11 = 7;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  double v7 = v6 * 1000000000.0;
  if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (v7 <= -9.22337204e18)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (v7 >= 9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v13 = v4;
  uint64_t v11 = (uint64_t)v7;
  sub_24D3E3EB4((uint64_t)&v11);
  uint64_t v9 = v8;
  sub_24D3E3E54((uint64_t)&v11);
  if (v9)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    return v14;
  }
LABEL_9:
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24D50F908(uint64_t a1)
{
  v2[3] = a1;
  return sub_24D506A68((uint64_t)sub_24D513384, (unint64_t)v2);
}

unint64_t sub_24D50F944(uint64_t a1, char a2)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D51224C(a2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  double v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t sub_24D50FB3C(uint64_t a1)
{
  v2[3] = a1;
  return sub_24D506A68((uint64_t)sub_24D51338C, (unint64_t)v2);
}

unint64_t sub_24D50FB78(uint64_t a1, char a2)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D51224C(a2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  double v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0xD000000000000015;
}

uint64_t sub_24D50FD70(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  double v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + 120))
  {
    uint64_t v8 = a1[3];
    uint64_t v9 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v8);
    sub_24D90FFEC(0xD000000000000025, 0x800000024DCFD1E0, v8, v9);
LABEL_12:
    uint64_t v21 = a1[3];
    uint64_t v22 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v21);
    return sub_24D9100BC(8224, 0xE200000000000000, sub_24D513350, v2, v21, MEMORY[0x263F8EE60] + 8, v22);
  }
  uint64_t v10 = *(void *)(v2 + 112);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v12 = v11;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  double v14 = v12 * 1000000000.0;
  if ((~COERCE__INT64(v12 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v15 = (uint64_t)v14;
  uint64_t v16 = a1[3];
  uint64_t v17 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v16);
  uint64_t v24 = 0;
  uint64_t v25 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v24 = 0xD000000000000021;
  uint64_t v25 = 0x800000024DCFD210;
  uint64_t result = v10 - v15;
  if (__OFSUB__(v10, v15))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if ((result & 0x8000000000000000) == 0)
  {
    uint64_t v18 = 0;
    unint64_t v19 = 0xE000000000000000;
LABEL_11:
    sub_24D9AC74C(result);
    v23[1] = v18;
    void v23[2] = v19;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24D90FFEC(v24, v25, v16, v17);
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  BOOL v20 = __OFSUB__(0, result);
  uint64_t result = v15 - v10;
  if (!v20)
  {
    unint64_t v19 = 0xE100000000000000;
    uint64_t v18 = 45;
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
  return result;
}

void sub_24D510024(void *a1, uint64_t *a2)
{
  uint64_t v3 = a1;
  uint64_t v4 = *a2;
  if (*((unsigned char *)a2 + 170) == 1)
  {
    uint64_t v5 = a1[3];
    uint64_t v15 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v5);
    if (qword_26B199810 != -1) {
      swift_once();
    }
    id v6 = objc_msgSend((id)qword_26B1A2498, sel_description);
    uint64_t v7 = sub_24DCC97E8();
    uint64_t v9 = v8;

    sub_24D90FFEC(v7, v9, v5, v15);
    a1 = (void *)swift_bridgeObjectRelease();
  }
  MEMORY[0x270FA5388](a1);
  long long v10 = *(_OWORD *)(v4 + 96);
  v13[1] = *(_OWORD *)(v4 + 80);
  void v13[2] = v10;
  double v14 = v3;
  sub_24D3F67A4((uint64_t)sub_24D51028C, 0, (void (*)(void, _OWORD *))sub_24D51336C, (uint64_t)v13);
  if (v2)
  {
    uint64_t v11 = v3[3];
    uint64_t v12 = v3[4];
    __swift_project_boxed_opaque_existential_1(v3, v11);
    uint64_t v16 = 0;
    uint64_t v17 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v18 = v2;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    sub_24DCCA948();
    sub_24D90FFEC(v16, v17, v11, v12);
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_24D51028C()
{
  return 0xD000000000000022;
}

uint64_t sub_24D5102A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = a3[3];
  uint64_t v5 = a3[4];
  __swift_project_boxed_opaque_existential_1(a3, v3);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ThrottlingKey();
  swift_getWitnessTable();
  sub_24DCCADC8();
  sub_24DCC9968();
  sub_24DA7DABC();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D90FFEC(0, 0xE000000000000000, v3, v5);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D510438()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D43DD74(*(void *)(v0 + 144));

  long long v1 = *(_OWORD *)(v0 + 256);
  v6[4] = *(_OWORD *)(v0 + 240);
  v6[5] = v1;
  long long v2 = *(_OWORD *)(v0 + 288);
  v6[6] = *(_OWORD *)(v0 + 272);
  v6[7] = v2;
  long long v3 = *(_OWORD *)(v0 + 192);
  v6[0] = *(_OWORD *)(v0 + 176);
  v6[1] = v3;
  long long v4 = *(_OWORD *)(v0 + 224);
  void v6[2] = *(_OWORD *)(v0 + 208);
  v6[3] = v4;
  sub_24D512B30((uint64_t)v6);
  return v0;
}

uint64_t sub_24D5104C0()
{
  sub_24D510438();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLThrottler()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D51050C()
{
  uint64_t v33 = *MEMORY[0x263EF8340];
  long long v1 = *(void **)(v0 + 24);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24D5120BC;
  *(void *)(v2 + 24) = v0;
  id v31 = sub_24D3E397C;
  uint64_t v32 = v2;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v28 = 1107296256;
  int v29 = sub_24D3E38DC;
  int v30 = &block_descriptor_24;
  long long v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_20;
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D5120D4;
  *(void *)(v7 + 24) = v0;
  id v31 = sub_24D3E397C;
  uint64_t v32 = v7;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v28 = 1107296256;
  int v29 = sub_24D3E38DC;
  int v30 = &block_descriptor_31;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v9)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_24D5120EC;
    *(void *)(v12 + 24) = v0;
    id v31 = sub_24D3E397C;
    uint64_t v32 = v12;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v28 = 1107296256;
    int v29 = sub_24D3E38DC;
    int v30 = &block_descriptor_38;
    uint64_t v13 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v14 = objc_msgSend(v1, sel_executeSwift_error_, v13, &aBlock);
    _Block_release(v13);
    id v15 = aBlock;
    char v16 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v16 & 1) == 0)
    {
      if (!v14) {
        goto LABEL_14;
      }
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_24D512104;
      *(void *)(v17 + 24) = v0;
      id v31 = sub_24D3E397C;
      uint64_t v32 = v17;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v28 = 1107296256;
      int v29 = sub_24D3E38DC;
      int v30 = &block_descriptor_45;
      uint64_t v18 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v19 = objc_msgSend(v1, sel_executeSwift_error_, v18, &aBlock);
      _Block_release(v18);
      id v15 = aBlock;
      char v20 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v20 & 1) == 0)
      {
        if (v19)
        {
          uint64_t v21 = swift_allocObject();
          *(void *)(v21 + 16) = sub_24D51211C;
          *(void *)(v21 + 24) = v0;
          id v31 = sub_24D3E397C;
          uint64_t v32 = v21;
          id aBlock = (id)MEMORY[0x263EF8330];
          uint64_t v28 = 1107296256;
          int v29 = sub_24D3E38DC;
          int v30 = &block_descriptor_52;
          uint64_t v22 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          id aBlock = 0;
          unsigned __int8 v23 = objc_msgSend(v1, sel_executeSwift_error_, v22, &aBlock);
          _Block_release(v22);
          id v24 = aBlock;
          char v25 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v25 & 1) == 0)
          {
            if (v23) {
              return swift_release_n();
            }
            sub_24DCC8828();

            swift_willThrow();
            goto LABEL_17;
          }
LABEL_23:
          __break(1u);
        }
LABEL_14:
        sub_24DCC8828();

        swift_willThrow();
LABEL_17:
        swift_release_n();
        return swift_release();
      }
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_24DCC8828();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_24D510B94()
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 8))(AssociatedTypeWitness);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D510D20()
{
  return 0;
}

uint64_t sub_24D510E18()
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "CREATE INDEX ");
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v1[0];
}

uint64_t sub_24D510F0C()
{
  return 0;
}

uint64_t sub_24D51100C()
{
  return 0;
}

uint64_t sub_24D51110C()
{
  uint64_t v24 = *MEMORY[0x263EF8340];
  long long v1 = *(void **)(v0 + 24);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24D512074;
  *(void *)(v2 + 24) = v0;
  uint64_t v22 = sub_24D3E394C;
  uint64_t v23 = v2;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v19 = 1107296256;
  char v20 = sub_24D3E38DC;
  uint64_t v21 = &block_descriptor_3;
  long long v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D51208C;
  *(void *)(v7 + 24) = v0;
  uint64_t v22 = sub_24D3E397C;
  uint64_t v23 = v7;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v19 = 1107296256;
  char v20 = sub_24D3E38DC;
  uint64_t v21 = &block_descriptor_10;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
    goto LABEL_13;
  }
  if (!v9)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    return swift_release();
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D5120A4;
  *(void *)(v12 + 24) = v0;
  uint64_t v22 = sub_24D3E397C;
  uint64_t v23 = v12;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v19 = 1107296256;
  char v20 = sub_24D3E38DC;
  uint64_t v21 = &block_descriptor_17;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned __int8 v14 = objc_msgSend(v1, sel_executeSwift_error_, v13, &aBlock);
  _Block_release(v13);
  id v15 = aBlock;
  char v16 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16) {
LABEL_14:
  }
    __break(1u);
  if (v14) {
    return swift_release_n();
  }
  sub_24DCC8828();

  swift_willThrow();
  swift_release_n();
  return swift_release();
}

uint64_t sub_24D511534()
{
  return 0;
}

unint64_t sub_24D5115EC()
{
  return 0xD000000000000015;
}

uint64_t sub_24D511698()
{
  return 0;
}

uint64_t sub_24D511798()
{
  uint64_t v2 = v0;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_24DCC9078();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v12 = v11;
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  double v13 = v12 * 1000000000.0;
  if ((~COERCE__INT64(v12 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v13 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v13 >= 9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v14 = v2[24];
  uint64_t v15 = (uint64_t)v13 - v14;
  if (__OFSUB__((uint64_t)v13, v14))
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  uint64_t v32 = v4;
  uint64_t v33 = v3;
  uint64_t v34 = v1;
  char v16 = (void *)v2[3];
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v2;
  *(void *)(v17 + 24) = v15;
  uint64_t v18 = (void *)swift_allocObject();
  id v18[2] = sub_24D51216C;
  v18[3] = v17;
  aBlock[4] = sub_24D3E397C;
  aBlock[5] = v18;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_62;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v20 = objc_msgSend(v16, sel_executeSwift_error_, v19, aBlock);
  _Block_release(v19);
  id v21 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_18;
  }
  if (v20)
  {
    if ((uint64_t)objc_msgSend(v16, sel_changes) >= 1)
    {
      id v23 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      swift_retain();
      uint64_t v24 = sub_24DCC9068();
      os_log_type_t v25 = sub_24DCCA108();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = swift_slowAlloc();
        id v31 = (void *)swift_slowAlloc();
        aBlock[0] = v31;
        *(_DWORD *)uint64_t v26 = 134218242;
        id v35 = objc_msgSend(v16, sel_changes);
        sub_24DCCA428();
        *(_WORD *)(v26 + 12) = 2080;
        uint64_t v27 = v2[5];
        unint64_t v28 = v2[6];
        swift_bridgeObjectRetain();
        id v35 = (id)sub_24D418FB4(v27, v28, (uint64_t *)aBlock);
        sub_24DCCA428();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D3D0000, v24, v25, "🧹  purged %lld outdated entries from %s", (uint8_t *)v26, 0x16u);
        int v29 = v31;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v29, -1, -1);
        MEMORY[0x25332B030](v26, -1, -1);
      }
      else
      {

        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v6, v33);
    }
    return swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
}

uint64_t sub_24D511C9C()
{
  return 0;
}

uint64_t sub_24D511E08()
{
  return sub_24D511798();
}

uint64_t sub_24D511E2C()
{
  return sub_24D51050C();
}

uint64_t sub_24D511E50()
{
  return sub_24D51110C();
}

uint64_t sub_24D511E74()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D511E90()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D511EAC(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_24D511F0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D511F28(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24D511F64()
{
  unint64_t result = qword_26986C780;
  if (!qword_26986C780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C780);
  }
  return result;
}

uint64_t sub_24D511FB8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

unsigned __int8 *sub_24D511FE8@<X0>(unsigned __int8 *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24D511FF4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_24D8562C8(*a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_0(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    JUMPOUT(0x25332B030);
  }
  return result;
}

uint64_t sub_24D512074()
{
  return sub_24D511534();
}

uint64_t sub_24D51207C()
{
  return swift_deallocObject();
}

unint64_t sub_24D51208C()
{
  return sub_24D5115EC();
}

uint64_t sub_24D512094()
{
  return swift_deallocObject();
}

uint64_t sub_24D5120A4()
{
  return sub_24D511698();
}

uint64_t sub_24D5120AC()
{
  return swift_deallocObject();
}

uint64_t sub_24D5120BC()
{
  return sub_24D510B94();
}

uint64_t sub_24D5120C4()
{
  return swift_deallocObject();
}

uint64_t sub_24D5120D4()
{
  return sub_24D510D20();
}

uint64_t sub_24D5120DC()
{
  return swift_deallocObject();
}

uint64_t sub_24D5120EC()
{
  return sub_24D510E18();
}

uint64_t sub_24D5120F4()
{
  return swift_deallocObject();
}

uint64_t sub_24D512104()
{
  return sub_24D510F0C();
}

uint64_t sub_24D51210C()
{
  return swift_deallocObject();
}

uint64_t sub_24D51211C()
{
  return sub_24D51100C();
}

uint64_t sub_24D512124()
{
  return swift_deallocObject();
}

uint64_t sub_24D512134()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D51216C()
{
  return sub_24D511C9C();
}

uint64_t sub_24D512174()
{
  return swift_deallocObject();
}

uint64_t sub_24D512188(uint64_t a1)
{
  return sub_24D512EAC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D50B25C);
}

uint64_t sub_24D5121A0()
{
  return swift_deallocObject();
}

uint64_t sub_24D5121B0(uint64_t a1)
{
  id v2 = *(id *)(a1 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_24D5121E8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24D512224(uint64_t a1)
{
  return sub_24D512EAC(a1, sub_24D50B118);
}

uint64_t sub_24D51223C()
{
  return swift_deallocObject();
}

unint64_t sub_24D51224C(char a1)
{
  if (a1) {
    return 0;
  }
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0xD00000000000001BLL;
}

uint64_t sub_24D5122F0(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a1;
  uint64_t v29 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = sub_24DCCA3F8();
  uint64_t v25 = *(void *)(v3 - 8);
  uint64_t v26 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v24 - v5;
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v27 = (char *)&v24 - v8;
  uint64_t v35 = 0x203D20646E696BLL;
  unint64_t v36 = 0xE700000000000000;
  uint64_t v9 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v11 = v29;
  uint64_t v12 = swift_getAssociatedConformanceWitness();
  uint64_t v31 = AssociatedTypeWitness;
  unint64_t v32 = v9;
  uint64_t v33 = AssociatedConformanceWitness;
  uint64_t v34 = v12;
  uint64_t v13 = type metadata accessor for ThrottlingKey();
  sub_24DA7BB80(v13);
  LOBYTE(v30[0]) = 0;
  uint64_t v31 = AssociatedTypeWitness;
  unint64_t v32 = v9;
  uint64_t v14 = v7;
  uint64_t v33 = AssociatedConformanceWitness;
  uint64_t v34 = v12;
  uint64_t v15 = type metadata accessor for ThrottlingKey.Kind();
  swift_getWitnessTable();
  sub_24D733A90((uint64_t)v30, v15);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DA7BC74(v13, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v6, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  }
  else
  {
    char v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v17 = v27;
    v16(v27, v6, AssociatedTypeWitness);
    uint64_t v31 = 0;
    unint64_t v32 = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    uint64_t v31 = 0x65746920444E4120;
    unint64_t v32 = 0xEF203D2064695F6DLL;
    (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 32))(v11, AssociatedTypeWitness);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, AssociatedTypeWitness);
  }
  char v18 = sub_24DA7BE30(v13);
  if (v18 == 70) {
    return v35;
  }
  char v19 = v18;
  uint64_t v31 = 0;
  unint64_t v32 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  v30[0] = 0xD000000000000010;
  v30[1] = 0x800000024DCFCF10;
  uint64_t v20 = qword_24DCD4CA0[v19];
  uint64_t v34 = MEMORY[0x263F8D6C8];
  uint64_t v31 = v20;
  sub_24D3E3EB4((uint64_t)&v31);
  uint64_t v22 = v21;
  sub_24D3E3E54((uint64_t)&v31);
  if (v22)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v35;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

unint64_t sub_24D51278C(void *a1, uint64_t a2)
{
  return sub_24D50957C(a1, a2, *(unint64_t **)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_24D5127C0()
{
  return swift_deallocObject();
}

void sub_24D5127F8(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24D7364B8(*(id *)(v2 + 16), a1, a2);
}

uint64_t sub_24D512800@<X0>(void *a1@<X8>)
{
  return sub_24D509900(*(void *)(v1 + 48), a1);
}

uint64_t sub_24D512828()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D512860@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_24D8562C8(*a1, *(void *)(v2 + 16));
  *a2 = result;
  a2[1] = v5;
  return result;
}

unint64_t sub_24D512890()
{
  unint64_t result = qword_26986BDB8;
  if (!qword_26986BDB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26986BDB0);
    sub_24D3E4A9C(&qword_26986BDC0, &qword_26B197DB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986BDB8);
  }
  return result;
}

uint64_t sub_24D51292C(uint64_t a1)
{
  return sub_24D512EAC(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D50AFE0);
}

uint64_t sub_24D512944()
{
  return swift_deallocObject();
}

uint64_t sub_24D512954(uint64_t a1)
{
  return sub_24D507E60(a1, *(void (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32));
}

uint64_t sub_24D512964()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D51299C(uint64_t a1)
{
  return sub_24D5087A0(a1, *(void *)(v1 + 16), *(void (**)(uint64_t, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_24D5129AC()
{
  return swift_deallocObject();
}

unint64_t sub_24D5129BC()
{
  unint64_t result = qword_26B192ED0[0];
  if (!qword_26B192ED0[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B192ED0);
  }
  return result;
}

uint64_t sub_24D512A10()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D512A48()
{
  return swift_deallocObject();
}

uint64_t _s9SQLFieldsOMa()
{
  return swift_getGenericMetadata();
}

unint64_t sub_24D512A70(uint64_t a1, char a2)
{
  return sub_24D509C9C(a1, a2, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_24D512A80@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_24D509FB0(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_24D512AA0()
{
  return sub_24D504580();
}

double sub_24D512AC8@<D0>(uint64_t a1@<X8>)
{
  *(void *)&double result = sub_24D50E88C((void *)v1[2], v1[3], v1[4], v1[6], a1).n128_u64[0];
  return result;
}

uint64_t sub_24D512AD8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFBu) {
    return sub_24D512AEC(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_24D512AEC(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24D512B04(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D512B30(uint64_t a1)
{
  return a1;
}

void sub_24D512B5C(uint64_t a1@<X0>, char *a2@<X8>)
{
  sub_24D50D31C(a1, *(void *)(v2 + 16), *(unsigned char **)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(unsigned __int8 *)(v2 + 56), *(void *)(v2 + 64), a2, *(void *)(v2 + 72));
}

uint64_t sub_24D512B94(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 <= 0xFBu) {
    return sub_24D512BA8(a1, a2, a3);
  }
  return a1;
}

uint64_t sub_24D512BA8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 2) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_24D512BC0()
{
  return sub_24D506070();
}

uint64_t sub_24D512BC8()
{
  return swift_deallocObject();
}

unint64_t sub_24D512BD8()
{
  unint64_t result = qword_26B194030;
  if (!qword_26B194030)
  {
    sub_24DCCA248();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194030);
  }
  return result;
}

uint64_t sub_24D512C30()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_24D512C68()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D512CA0()
{
  return sub_24D50615C();
}

uint64_t sub_24D512CB0()
{
  return sub_24D50A3BC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D512CCC(uint64_t a1, char a2)
{
  return sub_24D50A494(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D512CD4()
{
  return sub_24D50F5F0();
}

uint64_t sub_24D512CDC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_64Tm()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for ThrottlingKey() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  swift_release();
  type metadata accessor for ReconciliationID();
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v5 = v2;
  }
  else {
    uint64_t v5 = AssociatedTypeWitness;
  }
  (*(void (**)(unint64_t))(*(void *)(v5 - 8) + 8))(v0 + v4);
  return swift_deallocObject();
}

uint64_t sub_24D512E94(uint64_t a1)
{
  return sub_24D512EAC(a1, sub_24D50C5A8);
}

uint64_t sub_24D512EAC(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = *(void *)(type metadata accessor for ThrottlingKey() - 8);
  uint64_t v5 = *(void *)(v2 + 48);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_24D512FEC()
{
  return swift_deallocObject();
}

uint64_t sub_24D512FFC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for ThrottlingKey() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  swift_release();
  type metadata accessor for ReconciliationID();
  if (swift_getEnumCaseMultiPayload() == 1) {
    uint64_t v6 = v2;
  }
  else {
    uint64_t v6 = AssociatedTypeWitness;
  }
  (*(void (**)(unint64_t))(*(void *)(v6 - 8) + 8))(v0 + v4);

  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24D5131C8(void *a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v3 = *(void *)(type metadata accessor for ThrottlingKey() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);

  return sub_24D50C71C(a1, v5, v1 + v4, v6);
}

uint64_t sub_24D513328()
{
  return swift_deallocObject();
}

uint64_t sub_24D513338()
{
  return sub_24D50A9A4();
}

uint64_t sub_24D513340()
{
  return swift_deallocObject();
}

void sub_24D513350(void *a1)
{
  sub_24D510024(a1, v1);
}

uint64_t sub_24D51336C(uint64_t a1, uint64_t a2)
{
  return sub_24D5102A8(a1, a2, *(void **)(v2 + 48));
}

uint64_t sub_24D51337C(uint64_t a1, uint64_t a2)
{
  return sub_24D50A264(a1, a2, *(void *)(v2 + 16));
}

unint64_t sub_24D513384(uint64_t a1, char a2)
{
  return sub_24D50F944(a1, a2);
}

unint64_t sub_24D51338C(uint64_t a1, char a2)
{
  return sub_24D50FB78(a1, a2);
}

uint64_t sub_24D513394(uint64_t a1, uint64_t a2)
{
  return sub_24D50ECC0(a1, a2, *(void *)(v2 + 48));
}

uint64_t sub_24D5133B8()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D5134A0(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = (char *)(v1 + *(void *)(v3 + 64) + v4);
  char v8 = v7[1];
  char v9 = *v7;

  return sub_24D50F24C(a1, v5, v6, v9, v8);
}

uint64_t sub_24D513558()
{
  return swift_deallocObject();
}

uint64_t sub_24D513568()
{
  return sub_24D5048F4(v0);
}

uint64_t sub_24D513584(uint64_t a1)
{
  return sub_24D83402C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24D513590()
{
  return swift_deallocObject();
}

uint64_t sub_24D5135A0()
{
  return swift_deallocObject();
}

void sub_24D5135B0(id a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
}
  }

uint64_t destroy for ThrottlingError(uint64_t result)
{
  unsigned int v1 = *(unsigned __int8 *)(result + 16);
  if (v1 <= 3) {
    return sub_24D512AEC(*(void *)result, *(void *)(result + 8), v1);
  }
  return result;
}

uint64_t _s9libfssync15ThrottlingErrorOwCP_0(uint64_t a1, uint64_t *a2)
{
  unsigned int v3 = *((unsigned __int8 *)a2 + 16);
  if (v3 > 3)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  }
  else
  {
    uint64_t v4 = *a2;
    uint64_t v5 = a2[1];
    sub_24D512BA8(*a2, v5, v3);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = v3;
  }
  return a1;
}

uint64_t assignWithCopy for ThrottlingError(uint64_t a1, long long *a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  unsigned int v5 = *((unsigned __int8 *)a2 + 16);
  if (v4 > 3)
  {
    if (v5 <= 3)
    {
      uint64_t v12 = *(void *)a2;
      uint64_t v11 = *((void *)a2 + 1);
      sub_24D512BA8(*(void *)a2, v11, v5);
      *(void *)a1 = v12;
      *(void *)(a1 + 8) = v11;
      *(unsigned char *)(a1 + 16) = v5;
      return a1;
    }
LABEL_7:
    long long v13 = *a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    *(_OWORD *)a1 = v13;
    return a1;
  }
  if (v5 > 3)
  {
    sub_24D512AEC(*(void *)a1, *(void *)(a1 + 8), v4);
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)a2;
  uint64_t v6 = *((void *)a2 + 1);
  sub_24D512BA8(*(void *)a2, v6, v5);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v6;
  char v10 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24D512AEC(v8, v9, v10);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ThrottlingError(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 > 3) {
    goto LABEL_5;
  }
  unsigned int v5 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  if (v5 > 3)
  {
    sub_24D512AEC(v6, v7, v4);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
    return a1;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v5;
  sub_24D512AEC(v6, v7, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for ThrottlingError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 > 3) {
    unsigned int v4 = (v3 ^ 0xFF) + 1;
  }
  else {
    unsigned int v4 = 0;
  }
  if (v4 >= 5) {
    return v4 - 4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ThrottlingError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 16) = 0;
    *(_DWORD *)__n128 result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -4 - a2;
    }
  }
  return result;
}

uint64_t sub_24D51380C(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 16);
  if (v1 > 3) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_24D513820(uint64_t result, unsigned int a2)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
  }
  else if (a2)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ThrottlingError()
{
  return &type metadata for ThrottlingError;
}

unsigned char *sub_24D513858(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D513924);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_24D513950()
{
  return swift_getWitnessTable();
}

unint64_t sub_24D51396C()
{
  unint64_t result = qword_26B192EC8;
  if (!qword_26B192EC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B192EC8);
  }
  return result;
}

uint64_t sub_24D513A68(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (v5 <= 0x3F)
  {
    unsigned int v6 = (void *)a1[5];
    uint64_t v7 = a1[3];
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v9 = v8;
    if (v10 > 0x3F)
    {
      return v8;
    }
    else
    {
      swift_getTupleTypeLayout2();
      uint64_t v52 = &v51;
      uint64_t v31 = v3;
      unint64_t v32 = v2;
      uint64_t v47 = AssociatedTypeWitness;
      uint64_t v48 = v9;
      uint64_t AssociatedConformanceWitness = (void *)swift_getAssociatedConformanceWitness();
      uint64_t v50 = (void *)swift_getAssociatedConformanceWitness();
      uint64_t v11 = type metadata accessor for ReconciliationID();
      uint64_t AssociatedTypeWitness = v11;
      if (v12 <= 0x3F)
      {
        uint64_t v13 = *(void *)(v11 - 8) + 64;
        uint64_t v53 = v13;
        uint64_t v54 = v13;
        uint64_t v55 = v13;
        swift_getTupleTypeLayout2();
        BOOL v56 = &v46;
        uint64_t v14 = type metadata accessor for SnapshotItem();
        unint64_t v16 = v15;
        uint64_t v17 = sub_24DCCA3F8();
        if (v18 > 0x3F) {
          return v17;
        }
        swift_getTupleTypeLayout3();
        BOOL v57 = &v45;
        uint64_t v19 = type metadata accessor for SnapshotItem();
        unint64_t v21 = v20;
        uint64_t v17 = sub_24DCCA3F8();
        if (v22 > 0x3F)
        {
          return v17;
        }
        else
        {
          swift_getTupleTypeLayout3();
          int v58 = &v44;
          if (v16 > 0x3F)
          {
            return v14;
          }
          else
          {
            uint64_t v59 = *(void *)(v14 - 8) + 64;
            if (v21 > 0x3F)
            {
              return v19;
            }
            else
            {
              uint64_t v60 = *(void *)(v19 - 8) + 64;
              uint64_t v61 = v13;
              uint64_t v47 = v13;
              uint64_t v23 = sub_24DCCA3F8();
              uint64_t AssociatedTypeWitness = v23;
              if (v24 <= 0x3F)
              {
                uint64_t v48 = *(void *)(v23 - 8) + 64;
                uint64_t v25 = v48;
                uint64_t AssociatedConformanceWitness = &unk_24DCD4F08;
                uint64_t v50 = &unk_24DCD4F08;
                swift_getTupleTypeLayout();
                long long v62 = &v43;
                uint64_t v47 = v13;
                uint64_t v48 = v25;
                uint64_t AssociatedConformanceWitness = &unk_24DCD4F20;
                uint64_t v50 = &unk_24DCD4F20;
                swift_getTupleTypeLayout();
                long long v63 = &v42;
                swift_getTupleTypeLayout2();
                swift_getTupleTypeLayout2();
                long long v64 = &v41;
                swift_getTupleTypeLayout2();
                long long v65 = &v40;
                swift_getTupleTypeLayout2();
                uint64_t v66 = &v39;
                swift_getTupleTypeLayout2();
                id v67 = &v38;
                id v68 = &unk_24DCD4F68;
                uint64_t v69 = v13;
                swift_getTupleTypeLayout2();
                id v70 = &v37;
                swift_getTupleTypeLayout2();
                uint64_t v71 = &v36;
                int v72 = &unk_24DCD4F80;
                uint64_t v73 = &unk_24DCD4F80;
                uint64_t v74 = &unk_24DCD4F98;
                id v75 = &unk_24DCD4F98;
                uint64_t v76 = v13;
                uint64_t v77 = v13;
                uint64_t v78 = v13;
                uint64_t v47 = v31;
                uint64_t v48 = v7;
                uint64_t AssociatedConformanceWitness = v32;
                uint64_t v50 = v6;
                uint64_t v26 = type metadata accessor for TestingOperation();
                uint64_t AssociatedTypeWitness = v26;
                if (v27 <= 0x3F)
                {
                  uint64_t v79 = *(void *)(v26 - 8) + 64;
                  swift_getTupleTypeLayout2();
                  uint64_t v80 = &v35;
                  uint64_t v81 = v13;
                  uint64_t v82 = v13;
                  swift_getTupleTypeLayout2();
                  uint64_t v83 = &v34;
                  uint64_t v84 = v13;
                  uint64_t v85 = v13;
                  uint64_t v86 = v13;
                  uint64_t v87 = v13;
                  uint64_t v47 = v31;
                  uint64_t v48 = v7;
                  uint64_t AssociatedConformanceWitness = v32;
                  uint64_t v50 = v6;
                  uint64_t v28 = type metadata accessor for ItemReconciliation();
                  uint64_t AssociatedTypeWitness = v28;
                  if (v29 <= 0x3F)
                  {
                    uint64_t v88 = *(void *)(v28 - 8) + 64;
                    swift_getTupleTypeLayout2();
                    uint64_t v89 = &v33;
                    uint64_t v90 = v13;
                    uint64_t v91 = v13;
                    uint64_t v92 = v13;
                    swift_initEnumMetadataMultiPayload();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return AssociatedTypeWitness;
}

unsigned char *sub_24D5140BC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v2031 = *(void *)(a3 + 24);
  uint64_t v1988 = swift_getAssociatedTypeWitness();
  uint64_t v2048 = *(void *)(v1988 - 8);
  int v2013 = *(_DWORD *)(v2048 + 80);
  unint64_t v2097 = v6;
  unint64_t v1953 = v6 + v2013;
  uint64_t v2066 = v2013;
  unint64_t v2033 = v1953 & ~(unint64_t)v2013;
  unint64_t v7 = *(void *)(v2048 + 64);
  unint64_t v2040 = v7;
  unint64_t v8 = v2033 + v7;
  unint64_t v2037 = v2033 + v7;
  if (v7 <= v6) {
    unint64_t v7 = v6;
  }
  unint64_t v2029 = v7;
  unint64_t v9 = v7 + 1;
  size_t v2047 = v7 + 1;
  if (v7 + 1 > v8) {
    unint64_t v8 = v7 + 1;
  }
  unsigned int v10 = *(_DWORD *)(v5 + 84);
  uint64_t v1987 = v5;
  int v2011 = *(_DWORD *)(v5 + 80);
  unint64_t v11 = v2011 | (unint64_t)*(_DWORD *)(v2048 + 80);
  unint64_t v2030 = v11;
  unint64_t v1982 = v11 + v9;
  unint64_t v2038 = ((v11 + v9) & ~v11) + v9;
  if (v2038 > v8) {
    unint64_t v8 = ((v11 + v9) & ~v11) + v9;
  }
  unint64_t v2036 = v8;
  uint64_t v2032 = v4;
  uint64_t v1967 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v1967 - 8);
  unsigned int v13 = *(_DWORD *)(v12 + 84);
  uint64_t v1964 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v1964 - 8);
  unsigned int v15 = *(_DWORD *)(v14 + 84);
  unsigned int v1931 = v15;
  unsigned int v1946 = v13;
  if (v13 > v15) {
    unsigned int v15 = v13;
  }
  unsigned int v1936 = v15;
  if (v15 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  unsigned int v2039 = v10;
  unsigned int v1957 = v15;
  if (v15 > v10) {
    unsigned int v10 = v15;
  }
  uint64_t v1984 = sub_24DCC8CE8();
  uint64_t v16 = *(void *)(v1984 - 8);
  unsigned int v17 = *(_DWORD *)(v16 + 84);
  if (v17 <= 0x7FFFFFFE) {
    unsigned int v18 = 2147483646;
  }
  else {
    unsigned int v18 = *(_DWORD *)(v16 + 84);
  }
  unsigned int v2015 = v18;
  if (v10 > v18) {
    unsigned int v18 = v10;
  }
  unsigned int v1933 = v18;
  if (v18 <= 0x7FFFFFFF) {
    unsigned int v18 = 0x7FFFFFFF;
  }
  unsigned int v1955 = v18;
  unsigned int v1962 = *(_DWORD *)(v16 + 84);
  unint64_t v1977 = v6 + v2011;
  uint64_t v2073 = v2011;
  uint64_t v1968 = v12;
  int v2004 = *(_DWORD *)(v12 + 80);
  uint64_t v1965 = v14;
  int v2002 = *(_DWORD *)(v14 + 80);
  uint64_t v19 = v2004 & 0xF8 | v2002 | 7u;
  uint64_t v1944 = v6 + v19;
  uint64_t v2035 = v19;
  uint64_t v1975 = *(void *)(v12 + 64) + 7;
  uint64_t v1963 = v2002 + 8;
  uint64_t v1990 = v2002;
  uint64_t v1959 = *(void *)(v14 + 64) + 7;
  size_t v2043 = ((((v1959 + ((v1963 + (v1975 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v2002)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  uint64_t v1981 = *(void *)(v1984 - 8);
  int v1998 = *(_DWORD *)(v16 + 80);
  uint64_t v2051 = v1998 | 7;
  uint64_t v2045 = v2051 + 16;
  uint64_t v1983 = v1998 + 12;
  size_t v20 = *(void *)(v16 + 64);
  size_t v1980 = v20 + v1998;
  size_t v1930 = v20 + 12;
  uint64_t v1978 = v1998 + 10;
  size_t v1985 = v20;
  if (v17) {
    size_t v21 = *(void *)(v16 + 64);
  }
  else {
    size_t v21 = v20 + 1;
  }
  size_t __n = v21;
  unint64_t v1961 = (v1998
         + 10
         + ((((((v20
               + 12
               + ((v20
                 + v1998
                 + ((v1998 + 12) & ~(unint64_t)v1998)) & ~(unint64_t)v1998)) & 0xFFFFFFFFFFFFFFF8)
             + 47) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v1998;
  size_t v1979 = v21 + 7;
  unint64_t v22 = ((((((((((v21 + 7 + v1961) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v1956 = (v2051
         + 16
         + ((v6 + v19 + ((v6 + v2011) & ~(unint64_t)v2011)) & ~v19)
         + v2043) & ~v2051;
  unint64_t v23 = (((v1956 + v22 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v2042 = v23 + 16;
  uint64_t v2027 = v19 | v2011;
  uint64_t v2085 = v2027 | v1998;
  unint64_t v1952 = v23 + 23;
  unint64_t v2025 = ((v23 + 23 + ((v23 + 16 + v2085) & ~v2085)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v24 = *(_DWORD *)(v2048 + 84);
  uint64_t v1969 = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(v1969 - 8);
  unsigned int v26 = *(_DWORD *)(v25 + 84);
  uint64_t v27 = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(v27 - 8);
  int v29 = *(_DWORD *)(v28 + 80);
  uint64_t v1971 = v27;
  uint64_t v1972 = v28;
  unsigned int v1947 = v26;
  if (v26 <= *(_DWORD *)(v28 + 84)) {
    unsigned int v26 = *(_DWORD *)(v28 + 84);
  }
  if (v26 <= 0x7FFFFFFE) {
    unsigned int v30 = 2147483646;
  }
  else {
    unsigned int v30 = v26;
  }
  unsigned int v1958 = v30;
  if (v30 <= v24) {
    unsigned int v30 = v24;
  }
  if (v30 <= v2015) {
    unsigned int v30 = v2015;
  }
  unsigned int v1932 = v30;
  if (v30 <= 0x7FFFFFFF) {
    unsigned int v30 = 0x7FFFFFFF;
  }
  unsigned int v1954 = v30;
  unint64_t v1976 = v2040 + v2013;
  uint64_t v1970 = v25;
  int v31 = *(_DWORD *)(v25 + 80);
  uint64_t v32 = *(_DWORD *)(v28 + 80);
  uint64_t v33 = v31 & 0xF8 | *(_DWORD *)(v28 + 80) | 7u;
  uint64_t v1943 = v2040 + v33;
  uint64_t v1974 = *(void *)(v25 + 64) + 7;
  uint64_t v1966 = v32 + 8;
  uint64_t v1960 = *(void *)(*(void *)(v27 - 8) + 64) + 7;
  unint64_t v34 = ((((v1960 + ((v32 + 8 + (v1974 & 0xFFFFFFFFFFFFFFF8)) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v2016 = v22;
  unint64_t v1941 = (v2045 + ((v2040 + v33 + (v1976 & ~(unint64_t)v2013)) & ~v33) + v34) & ~v2051;
  unint64_t v35 = (((v1941 + v22 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  size_t v36 = v35 + 16;
  uint64_t v37 = v33 | v2013;
  uint64_t v38 = v37 | v1998;
  unint64_t v39 = v35 + ((v35 + 16 + v38) & ~v38);
  unsigned int v1948 = v24;
  if (v24) {
    size_t v40 = v2040;
  }
  else {
    size_t v40 = v2040 + 1;
  }
  uint64_t v41 = *(void *)(v4 - 8);
  int v42 = *(_DWORD *)(v41 + 80);
  uint64_t v1926 = v41;
  unint64_t v1929 = v2085 + v6;
  size_t v43 = v2042 + ((v2085 + v6) & ~v2085);
  unint64_t v44 = (v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = v40 + v33;
  unint64_t v46 = ((((((v40 + v33 + ((v43 + v2013) & ~(unint64_t)v2013)) & ~v33)
          + v34
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (*(_DWORD *)(v41 + 84)) {
    uint64_t v47 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  else {
    uint64_t v47 = *(void *)(*(void *)(v4 - 8) + 64) + 1;
  }
  if (v6 <= ((v44 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) {
    unint64_t v48 = ((v44 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v48 = v6;
  }
  if (v46 <= v34 + ((v40 + v33 + v2033) & ~v33) + 16) {
    unint64_t v49 = v34 + ((v40 + v33 + v2033) & ~v33) + 16;
  }
  else {
    unint64_t v49 = v46;
  }
  unint64_t v50 = ((v44 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v51 = v42;
  unint64_t v1925 = v6 + v42;
  size_t v1921 = v47;
  if (v50 <= (v1925 & ~(unint64_t)v42) + v47) {
    unint64_t v50 = (v1925 & ~(unint64_t)v42) + v47;
  }
  if (v48 <= v49) {
    unint64_t v48 = v49;
  }
  if (v48 <= v50) {
    unint64_t v52 = v50;
  }
  else {
    unint64_t v52 = v48;
  }
  if (v2039) {
    size_t v53 = v6;
  }
  else {
    size_t v53 = v6 + 1;
  }
  uint64_t v54 = *(void *)(v2031 - 8);
  int v55 = *(_DWORD *)(v54 + 80);
  uint64_t v1922 = v54;
  BOOL v56 = *(_DWORD *)(v54 + 84) == 0;
  uint64_t v2034 = v33 | v2013 | v1998;
  unint64_t v1928 = v38 + v2040;
  size_t v57 = v36 + ((v38 + v2040) & ~v38);
  unint64_t v58 = (v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v59 = ((v58 + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v60 = ((((((v53 + v2035 + ((v57 + v2011) & ~(unint64_t)v2011)) & ~v2035)
          + v2043
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  unint64_t v1924 = v2040 + v2011;
  size_t v1927 = v53 + v2035;
  if (v56) {
    uint64_t v61 = *(void *)(*(void *)(v2031 - 8) + 64) + 1;
  }
  else {
    uint64_t v61 = *(void *)(*(void *)(v2031 - 8) + 64);
  }
  if (v2040 > v59) {
    unint64_t v59 = v2040;
  }
  if (v60 <= v2043
            + ((v53 + v2035 + ((v2040 + v2011) & ~(unint64_t)v2011)) & ~v2035)
            + 16)
    unint64_t v60 = v2043
        + ((v53 + v2035 + ((v2040 + v2011) & ~(unint64_t)v2011)) & ~v2035)
        + 16;
  unint64_t v62 = ((v58 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v63 = v55;
  unint64_t v1923 = v2040 + v55;
  size_t v1920 = v61;
  if (v62 <= (v1923 & ~(unint64_t)v55) + v61) {
    unint64_t v62 = (v1923 & ~(unint64_t)v55) + v61;
  }
  if (v59 > v60) {
    unint64_t v60 = v59;
  }
  if (v60 > v62) {
    unint64_t v62 = v60;
  }
  unint64_t v1935 = v62;
  unint64_t v64 = v62 + 1;
  unint64_t v1942 = v52;
  if (v64 <= v52 + 1) {
    unint64_t v65 = v52 + 1;
  }
  else {
    unint64_t v65 = v64;
  }
  unint64_t v66 = v2029 + 2;
  unint64_t v1973 = v2029 + 2;
  if (v2047 > v2029 + 2) {
    unint64_t v66 = v2029 + 1;
  }
  if (v66 <= v2025) {
    unint64_t v66 = v2025;
  }
  size_t v1940 = v53;
  unint64_t v67 = ((((((((v2035 + ((((v53 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v2035) + v2043 + 34) & 0xFFFFFFFFFFFFFFF8)
          + 63) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + v37
      + 8;
  size_t v1934 = v40;
  size_t v1939 = v40 + 7;
  unint64_t v1937 = v67;
  unint64_t v1938 = ((((((((v33 + 9 + ((((v40 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v33) + v34 + 34) & 0xFFFFFFFFFFFFFFF8)
            + 63) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 8;
  unint64_t v68 = ((((v1938 + (v67 & ~v37) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v1950 = ((v39 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v66 <= v1950) {
    unint64_t v69 = ((v39 + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  else {
    unint64_t v69 = v66;
  }
  if (v69 <= v2042) {
    unint64_t v69 = v2042;
  }
  if (v69 <= v36) {
    unint64_t v69 = v36;
  }
  unint64_t v1949 = v2038 + 2;
  if (v69 <= v2038 + 2) {
    unint64_t v69 = v2038 + 2;
  }
  unint64_t v1951 = ((v2029 + 9) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v69 <= v1951) {
    unint64_t v69 = ((v2029 + 9) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  unint64_t v2026 = (v2029 & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v69 <= v2026) {
    unint64_t v69 = (v2029 & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v69 <= v2037) {
    unint64_t v69 = v2037;
  }
  if (v69 <= ((v2030 + 1) & ~v2030) + v2047) {
    unint64_t v69 = ((v2030 + 1) & ~v2030) + v2047;
  }
  unint64_t v70 = v65 + 1;
  unint64_t v1945 = v65;
  if (v69 <= v65 + 1) {
    unint64_t v69 = v65 + 1;
  }
  if (v69 <= v2038) {
    unint64_t v69 = v2038;
  }
  if (v69 <= v68) {
    unint64_t v69 = ((((v1938 + (v67 & ~v37) + 23) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  }
  if (v69 <= v2036) {
    unint64_t v69 = v2036;
  }
  if (v69 <= 0x38) {
    uint64_t v71 = 56;
  }
  else {
    uint64_t v71 = v69;
  }
  if (v71 > 3) {
    goto LABEL_109;
  }
  unsigned int v72 = ((1 << (8 * v71)) + 5) >> (8 * v71);
  uint64_t v73 = 2;
  if (v72 > 0xFFD6) {
    uint64_t v73 = 4;
  }
  if (v72 <= 0xD6)
  {
LABEL_109:
    uint64_t v74 = v33 + 9;
    uint64_t v73 = 1;
  }
  else
  {
    uint64_t v74 = v33 + 9;
  }
  unint64_t v75 = v2027 | v2034 | v42 | (unint64_t)v55;
  if (v75 != 7
    || ((v2011 | v2013 | v2004 | v2002 | v1998 | v31 | v29 | v42 | v55) & 0x100000) != 0
    || (unint64_t)(v73 + v71) > 0x18)
  {
    uint64_t v77 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v78 = (unsigned char *)(v77 + ((v75 + 16) & ~v75));
    swift_retain();
    return v78;
  }
  if (v71 > 3) {
    goto LABEL_114;
  }
  unsigned int v80 = ((1 << (8 * v71)) + 5) >> (8 * v71);
  if (v80 > 0xFFD6)
  {
    unsigned int v76 = *(_DWORD *)&a2[v71];
  }
  else
  {
    if (v80 <= 0xD6)
    {
LABEL_114:
      unsigned int v76 = a2[v71];
      goto LABEL_121;
    }
    unsigned int v76 = *(unsigned __int16 *)&a2[v71];
  }
LABEL_121:
  unsigned int v81 = v76 - 41;
  if (v76 >= 0x29)
  {
    if (v71 <= 3) {
      uint64_t v82 = v71;
    }
    else {
      uint64_t v82 = 4;
    }
    switch(v82)
    {
      case 1:
        int v83 = *a2;
        if (v71 < 4) {
          goto LABEL_133;
        }
        goto LABEL_134;
      case 2:
        int v83 = *(unsigned __int16 *)a2;
        if (v71 >= 4) {
          goto LABEL_134;
        }
        goto LABEL_133;
      case 3:
        int v83 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v71 >= 4) {
          goto LABEL_134;
        }
        goto LABEL_133;
      case 4:
        int v83 = *(_DWORD *)a2;
        if (v71 < 4) {
LABEL_133:
        }
          v83 |= v81 << (8 * v71);
LABEL_134:
        unsigned int v76 = v83 + 41;
        break;
      default:
        break;
    }
  }
  uint64_t v1919 = v71;
  uint64_t v2012 = v45;
  unsigned int v2014 = v26;
  unint64_t v2028 = v70;
  unint64_t v84 = ~v2066;
  unint64_t v85 = ~v2030;
  uint64_t v86 = v2085;
  uint64_t v87 = ~v2073;
  uint64_t v88 = ~v2035;
  unint64_t v89 = ~(unint64_t)v2002;
  unint64_t v90 = ~(unint64_t)v1998;
  uint64_t v91 = ~v33;
  uint64_t v92 = ~v32;
  switch(v76)
  {
    case 0u:
      uint64_t v78 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v1987 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v2048 + 16))(((unint64_t)a1 + v1953) & ~v2066, (unint64_t)&a2[v1953] & ~v2066, v1988);
      if (v1919 > 3) {
        goto LABEL_137;
      }
      unsigned int v407 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v407 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v1919) = 0;
      }
      else if (v407 <= 0xD6)
      {
LABEL_137:
        *((unsigned char *)a1 + v1919) = 0;
      }
      else
      {
        *(_WORD *)((char *)a1 + v1919) = 0;
      }
      return v78;
    case 1u:
      unsigned int v95 = a2[v2029];
      unsigned int v96 = v95 - 2;
      if (v95 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v99 = v2048;
        uint64_t v100 = v1987;
        uint64_t v98 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v97 = v2029;
        }
        else {
          uint64_t v97 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v98 = v1919;
        uint64_t v99 = v2048;
        uint64_t v100 = v1987;
        switch(v97)
        {
          case 1:
            int v101 = *a2;
            goto LABEL_505;
          case 2:
            int v101 = *(unsigned __int16 *)a2;
            goto LABEL_505;
          case 3:
            int v101 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_505;
          case 4:
            int v101 = *(_DWORD *)a2;
LABEL_505:
            if (v2029 < 4) {
              unsigned int v95 = (v101 | (v96 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v95 = v101 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v640 = v95 == 1;
      if (v95 == 1) {
        uint64_t v641 = v99;
      }
      else {
        uint64_t v641 = v100;
      }
      (*(void (**)(unsigned char *))(v641 + 16))(v78);
      v78[v2029] = v640;
      if (v98 > 3) {
        goto LABEL_512;
      }
      unsigned int v642 = ((1 << (8 * v98)) + 5) >> (8 * v98);
      if (v642 > 0xFFD6)
      {
        *(_DWORD *)&v78[v98] = 1;
      }
      else if (v642 <= 0xD6)
      {
LABEL_512:
        v78[v98] = 1;
      }
      else
      {
        *(_WORD *)&v78[v98] = 1;
      }
      return v78;
    case 2u:
      unsigned int v102 = a2[v2029];
      unsigned int v103 = v102 - 2;
      if (v102 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v106 = v2048;
        uint64_t v107 = v1987;
        uint64_t v105 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v104 = v2029;
        }
        else {
          uint64_t v104 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v105 = v1919;
        uint64_t v106 = v2048;
        uint64_t v107 = v1987;
        switch(v104)
        {
          case 1:
            int v108 = *a2;
            goto LABEL_520;
          case 2:
            int v108 = *(unsigned __int16 *)a2;
            goto LABEL_520;
          case 3:
            int v108 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_520;
          case 4:
            int v108 = *(_DWORD *)a2;
LABEL_520:
            if (v2029 < 4) {
              unsigned int v102 = (v108 | (v103 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v102 = v108 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v643 = v102 == 1;
      if (v102 == 1) {
        uint64_t v644 = v106;
      }
      else {
        uint64_t v644 = v107;
      }
      (*(void (**)(unsigned char *))(v644 + 16))(v78);
      v78[v2029] = v643;
      if (v105 > 3) {
        goto LABEL_527;
      }
      unsigned int v645 = ((1 << (8 * v105)) + 5) >> (8 * v105);
      if (v645 > 0xFFD6)
      {
        *(_DWORD *)&v78[v105] = 2;
      }
      else if (v645 <= 0xD6)
      {
LABEL_527:
        v78[v105] = 2;
      }
      else
      {
        *(_WORD *)&v78[v105] = 2;
      }
      return v78;
    case 3u:
      unsigned int v109 = a2[v2029];
      unsigned int v110 = v109 - 2;
      if (v109 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v113 = v2048;
        uint64_t v114 = v1987;
        uint64_t v112 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v111 = v2029;
        }
        else {
          uint64_t v111 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v112 = v1919;
        uint64_t v113 = v2048;
        uint64_t v114 = v1987;
        switch(v111)
        {
          case 1:
            int v115 = *a2;
            goto LABEL_535;
          case 2:
            int v115 = *(unsigned __int16 *)a2;
            goto LABEL_535;
          case 3:
            int v115 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_535;
          case 4:
            int v115 = *(_DWORD *)a2;
LABEL_535:
            if (v2029 < 4) {
              unsigned int v109 = (v115 | (v110 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v109 = v115 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v646 = v109 == 1;
      if (v109 == 1) {
        uint64_t v647 = v113;
      }
      else {
        uint64_t v647 = v114;
      }
      (*(void (**)(unsigned char *))(v647 + 16))(v78);
      v78[v2029] = v646;
      if (v112 > 3) {
        goto LABEL_542;
      }
      unsigned int v648 = ((1 << (8 * v112)) + 5) >> (8 * v112);
      if (v648 > 0xFFD6)
      {
        *(_DWORD *)&v78[v112] = 3;
      }
      else if (v648 <= 0xD6)
      {
LABEL_542:
        v78[v112] = 3;
      }
      else
      {
        *(_WORD *)&v78[v112] = 3;
      }
      return v78;
    case 4u:
      unsigned int v116 = a2[v2029];
      unsigned int v117 = v116 - 2;
      if (v116 < 2)
      {
        unint64_t v120 = ~v2030;
        uint64_t v118 = v1919;
        uint64_t v78 = a1;
        uint64_t v121 = v1988;
        uint64_t v122 = AssociatedTypeWitness;
        uint64_t v123 = v2048;
        uint64_t v124 = v1987;
      }
      else
      {
        uint64_t v118 = v1919;
        if (v2029 <= 3) {
          uint64_t v119 = v2029;
        }
        else {
          uint64_t v119 = 4;
        }
        uint64_t v78 = a1;
        unint64_t v120 = ~v2030;
        uint64_t v121 = v1988;
        uint64_t v122 = AssociatedTypeWitness;
        uint64_t v123 = v2048;
        uint64_t v124 = v1987;
        switch(v119)
        {
          case 1:
            int v125 = *a2;
            goto LABEL_550;
          case 2:
            int v125 = *(unsigned __int16 *)a2;
            goto LABEL_550;
          case 3:
            int v125 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_550;
          case 4:
            int v125 = *(_DWORD *)a2;
LABEL_550:
            if (v2029 < 4) {
              unsigned int v116 = (v125 | (v117 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v116 = v125 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v649 = v116 == 1;
      if (v116 == 1) {
        uint64_t v650 = v123;
      }
      else {
        uint64_t v650 = v124;
      }
      if (v116 == 1) {
        uint64_t v651 = v121;
      }
      else {
        uint64_t v651 = v122;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v650 + 16))(v78, a2, v651);
      v78[v2029] = v649;
      unint64_t v652 = v120;
      unint64_t v653 = (unint64_t)&v78[v1982] & v120;
      v654 = (unsigned __int8 *)((unint64_t)&a2[v1982] & v652);
      unsigned int v655 = v654[v2029];
      unsigned int v656 = v655 - 2;
      if (v655 >= 2)
      {
        if (v2029 <= 3) {
          uint64_t v657 = v2029;
        }
        else {
          uint64_t v657 = 4;
        }
        switch(v657)
        {
          case 1:
            int v658 = *v654;
            goto LABEL_986;
          case 2:
            int v658 = *(unsigned __int16 *)v654;
            goto LABEL_986;
          case 3:
            int v658 = *(unsigned __int16 *)((unint64_t)&a2[v1982] & v652) | (*(unsigned __int8 *)(((unint64_t)&a2[v1982] & v652) + 2) << 16);
            goto LABEL_986;
          case 4:
            int v658 = *(_DWORD *)v654;
LABEL_986:
            if (v2029 < 4) {
              unsigned int v655 = (v658 | (v656 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v655 = v658 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v773 = v655 == 1;
      if (v655 == 1) {
        uint64_t v774 = v123;
      }
      else {
        uint64_t v774 = v124;
      }
      (*(void (**)(unint64_t))(v774 + 16))(v653);
      *(unsigned char *)(v653 + v2029) = v773;
      if (v118 > 3) {
        goto LABEL_993;
      }
      unsigned int v775 = ((1 << (8 * v118)) + 5) >> (8 * v118);
      if (v775 > 0xFFD6)
      {
        *(_DWORD *)&v78[v118] = 4;
      }
      else if (v775 <= 0xD6)
      {
LABEL_993:
        v78[v118] = 4;
      }
      else
      {
        *(_WORD *)&v78[v118] = 4;
      }
      return v78;
    case 5u:
      unint64_t v2067 = v36;
      unint64_t v1999 = ~(unint64_t)v1998;
      uint64_t v2052 = ~v2051;
      unint64_t v1917 = v68;
      uint64_t v2003 = ~v2085;
      uint64_t v1991 = ~v1990;
      uint64_t v1913 = ~v2073;
      if (v2039 == v1955)
      {
        int v126 = (*(uint64_t (**)(unsigned __int8 *))(v1987 + 48))(a2);
        uint64_t v87 = ~v2073;
        size_t v127 = v2043;
        uint64_t v78 = a1;
        size_t v128 = __n;
LABEL_1019:
        if (v126)
        {
LABEL_1020:
          size_t v782 = v2042;
          memcpy(v78, a2, v2042);
          unsigned int v783 = v1962;
LABEL_1021:
          size_t v784 = v128;
          goto LABEL_1056;
        }
        unint64_t v408 = (unint64_t)&a2[v1977] & v87;
        unint64_t v409 = (v408 + v2097 + v2035) & v88;
LABEL_1023:
        size_t v785 = v127;
        v786 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16);
        uint64_t v787 = v87;
        v786(v78, a2, AssociatedTypeWitness);
        v786((unsigned char *)((unint64_t)&v78[v1977] & v787), (unsigned __int8 *)v408, AssociatedTypeWitness);
        unint64_t v788 = (((unint64_t)&v78[v1977] & v787) + v2097 + v2035) & v88;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1968 + 16))(v788, v409, v1967);
        v789 = (void *)((v1975 + v788) & 0xFFFFFFFFFFFFFFF8);
        v790 = (void *)((v1975 + v409) & 0xFFFFFFFFFFFFFFF8);
        void *v789 = *v790;
        unint64_t v791 = ((unint64_t)v789 + v1963) & v1991;
        unint64_t v792 = ((unint64_t)v790 + v1963) & v1991;
        v793 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
        swift_bridgeObjectRetain();
        v793(v791, v792, v1964);
        v794 = (void *)((v1959 + v792) & 0xFFFFFFFFFFFFFFF8);
        v795 = (void *)((v1959 + v791) & 0xFFFFFFFFFFFFFFF8);
        void *v795 = *v794;
        v796 = (void *)(((unint64_t)v795 + 15) & 0xFFFFFFFFFFFFFFF8);
        v797 = (void *)(((unint64_t)v794 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v796 = *v797;
        v796[1] = v797[1];
        v798 = (void *)(v785 + v788);
        void *v798 = *(void *)(v785 + v409);
        v798[1] = *(void *)(v785 + v409 + 8);
        unint64_t v799 = (v2045 + v785 + v788) & v2052;
        uint64_t v800 = (v2045 + v785 + v409) & v2052;
        *(unsigned char *)unint64_t v799 = *(unsigned char *)v800;
        uint64_t v801 = v799 | 4;
        int v802 = *(_DWORD *)(v800 | 4);
        *(unsigned char *)(v801 + 4) = *(unsigned char *)((v800 | 4) + 4);
        *(_DWORD *)uint64_t v801 = v802;
        *(_WORD *)(v799 + 10) = *(_WORD *)(v800 + 0xA);
        unint64_t v2105 = v799;
        unint64_t v803 = (v1983 + v799) & v1999;
        uint64_t v2074 = v800;
        unint64_t v804 = (v1983 + v800) & v1999;
        v805 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v805(v803, v804, v1984);
        unint64_t v806 = (v1980 + v803) & v1999;
        unint64_t v807 = (v1980 + v804) & v1999;
        v805(v806, v807, v1984);
        v808 = (unsigned char *)(v806 + v1985);
        unsigned char *v808 = *(unsigned char *)(v807 + v1985);
        v808[1] = *(unsigned char *)(v807 + v1985 + 1);
        v808[2] = *(unsigned char *)(v807 + v1985 + 2);
        v808[3] = *(unsigned char *)(v807 + v1985 + 3);
        v808[4] = *(unsigned char *)(v807 + v1985 + 4);
        unint64_t v809 = (v806 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v810 = (v807 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v809 = *(void *)v810;
        *(void *)(v809 + 8) = *(void *)(v810 + 8);
        *(unsigned char *)(v809 + 16) = *(unsigned char *)(v810 + 16);
        *(unsigned char *)(v809 + 17) = *(unsigned char *)(v810 + 17);
        *(unsigned char *)(v809 + 18) = *(unsigned char *)(v810 + 18);
        *(unsigned char *)(v809 + 19) = *(unsigned char *)(v810 + 19);
        unint64_t v811 = (v809 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v812 = (v810 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v811 = *(void *)v812;
        *(unsigned char *)(v811 + 8) = *(unsigned char *)(v812 + 8);
        *(unsigned char *)(v811 + 9) = *(unsigned char *)(v812 + 9);
        *(unsigned char *)(v811 + 10) = *(unsigned char *)(v812 + 10);
        *(unsigned char *)(v811 + 11) = *(unsigned char *)(v812 + 11);
        *(unsigned char *)(v811 + 12) = *(unsigned char *)(v812 + 12);
        v813 = (void *)((v810 + 47) & 0xFFFFFFFFFFFFFFF8);
        v814 = (void *)((v809 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v814 = *v813;
        unint64_t v815 = ((unint64_t)v814 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v816 = ((unint64_t)v813 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v815 = *(void *)v816;
        *(unsigned char *)(v815 + 8) = *(unsigned char *)(v816 + 8);
        *(unsigned char *)(v815 + 9) = *(unsigned char *)(v816 + 9);
        v817 = (void *)((v1978 + v815) & v1999);
        v818 = (const void *)((v1978 + v816) & v1999);
        v819 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
        swift_bridgeObjectRetain();
        if (v819(v818, 1, v1984))
        {
          memcpy(v817, v818, __n);
        }
        else
        {
          v805((unint64_t)v817, (unint64_t)v818, v1984);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v817, 0, 1, v1984);
        }
        v820 = (void *)(((unint64_t)v817 + v1979) & 0xFFFFFFFFFFFFFFF8);
        v821 = (void *)(((unint64_t)v818 + v1979) & 0xFFFFFFFFFFFFFFF8);
        void *v820 = *v821;
        unint64_t v822 = ((unint64_t)v820 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v823 = ((unint64_t)v821 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v824 = *(void *)v823;
        *(unsigned char *)(v822 + 8) = *(unsigned char *)(v823 + 8);
        *(void *)unint64_t v822 = v824;
        v825 = (void *)(((unint64_t)v820 + 31) & 0xFFFFFFFFFFFFFFF8);
        v826 = (void *)(((unint64_t)v821 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v825 = *v826;
        unint64_t v827 = ((unint64_t)v825 + 15) & 0xFFFFFFFFFFFFFFF8;
        v828 = (uint64_t *)(((unint64_t)v826 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v829 = v828[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v829 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v827 = *(_OWORD *)v828;
        }
        else
        {
          uint64_t v830 = *v828;
          sub_24D3F9C18(*v828, v829);
          *(void *)unint64_t v827 = v830;
          *(void *)(v827 + 8) = v829;
        }
        size_t v128 = __n;
        unint64_t v831 = (v827 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v832 = ((unint64_t)v828 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v833 = *(void *)v832;
        *(unsigned char *)(v831 + 8) = *(unsigned char *)(v832 + 8);
        *(void *)unint64_t v831 = v833;
        *(unsigned char *)(v831 + 9) = *(unsigned char *)(v832 + 9);
        unint64_t v834 = (v831 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v835 = (v832 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v836 = *(_DWORD *)v835;
        *(unsigned char *)(v834 + 4) = *(unsigned char *)(v835 + 4);
        *(_DWORD *)unint64_t v834 = v836;
        v837 = (void *)((v831 + 25) & 0xFFFFFFFFFFFFFFF8);
        v838 = (void *)((v832 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v837 = *v838;
        v837[1] = v838[1];
        unint64_t v839 = v2016 + v2105;
        v840 = (long long *)(v2016 + v2074);
        unint64_t v841 = *(void *)(v2016 + v2074 + 16);
        if (v841 >= 0xFFFFFFFF) {
          LODWORD(v841) = -1;
        }
        int v842 = v841 - 1;
        swift_bridgeObjectRetain();
        if (v842 < 0)
        {
          *(void *)unint64_t v839 = *(void *)v840;
          *(unsigned char *)(v839 + 8) = *((unsigned char *)v840 + 8);
          *(unsigned char *)(v839 + 9) = *((unsigned char *)v840 + 9);
          v855 = (void *)*((void *)v840 + 2);
          id v856 = v855;
          *(void *)(v839 + 16) = v855;
          v857 = (void *)*((void *)v840 + 3);
          id v858 = v857;
          *(void *)(v839 + 24) = v857;
          *(unsigned char *)(v839 + 32) = *((unsigned char *)v840 + 32);
          *(unsigned char *)(v839 + 33) = *((unsigned char *)v840 + 33);
          *(unsigned char *)(v839 + 34) = *((unsigned char *)v840 + 34);
          *(void *)(v839 + 40) = *((void *)v840 + 5);
          *(void *)(v839 + 48) = *((void *)v840 + 6);
          *(void *)(v839 + 56) = *((void *)v840 + 7);
          *(void *)(v839 + 64) = *((void *)v840 + 8);
          *(unsigned char *)(v839 + 72) = *((unsigned char *)v840 + 72);
          *(void *)(v839 + 80) = *((void *)v840 + 10);
          *(void *)(v839 + 88) = *((void *)v840 + 11);
          v2106 = (void *)*((void *)v840 + 12);
          *(void *)(v839 + 96) = v2106;
          *(unsigned char *)(v839 + 104) = *((unsigned char *)v840 + 104);
          *(unsigned char *)(v839 + 105) = *((unsigned char *)v840 + 105);
          *(void *)(v839 + 112) = *((void *)v840 + 14);
          *(void *)(v839 + 120) = *((void *)v840 + 15);
          *(void *)(v839 + 128) = *((void *)v840 + 16);
          *(void *)(v839 + 136) = *((void *)v840 + 17);
          *(void *)(v839 + 144) = *((void *)v840 + 18);
          *(void *)(v839 + 152) = *((void *)v840 + 19);
          *(void *)(v839 + 160) = *((void *)v840 + 20);
          *(void *)(v839 + 168) = *((void *)v840 + 21);
          *(unsigned char *)(v839 + 176) = *((unsigned char *)v840 + 176);
          *(void *)(v839 + 184) = *((void *)v840 + 23);
          uint64_t v859 = *((void *)v840 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v860 = v2106;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v859)
          {
            *(void *)(v839 + 192) = v859;
            *(void *)(v839 + 200) = *((void *)v840 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v839 + 192) = v840[12];
          }
          uint64_t v78 = a1;
          size_t v128 = __n;
          uint64_t v86 = v2085;
          uint64_t v88 = ~v2035;
          *(void *)(v839 + 208) = *((void *)v840 + 26);
          *(void *)(v839 + 216) = *((void *)v840 + 27);
          *(void *)(v839 + 224) = *((void *)v840 + 28);
          *(void *)(v839 + 232) = *((void *)v840 + 29);
          *(void *)(v839 + 240) = *((void *)v840 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v843 = *v840;
          long long v844 = v840[1];
          long long v845 = v840[3];
          *(_OWORD *)(v839 + 32) = v840[2];
          *(_OWORD *)(v839 + 48) = v845;
          *(_OWORD *)unint64_t v839 = v843;
          *(_OWORD *)(v839 + 16) = v844;
          long long v846 = v840[4];
          long long v847 = v840[5];
          long long v848 = v840[7];
          *(_OWORD *)(v839 + 96) = v840[6];
          *(_OWORD *)(v839 + 112) = v848;
          *(_OWORD *)(v839 + 64) = v846;
          *(_OWORD *)(v839 + 80) = v847;
          long long v849 = v840[8];
          long long v850 = v840[9];
          long long v851 = v840[11];
          *(_OWORD *)(v839 + 160) = v840[10];
          *(_OWORD *)(v839 + 176) = v851;
          *(_OWORD *)(v839 + 128) = v849;
          *(_OWORD *)(v839 + 144) = v850;
          long long v852 = v840[12];
          long long v853 = v840[13];
          long long v854 = v840[14];
          *(void *)(v839 + 240) = *((void *)v840 + 30);
          *(_OWORD *)(v839 + 208) = v853;
          *(_OWORD *)(v839 + 224) = v854;
          *(_OWORD *)(v839 + 192) = v852;
          uint64_t v86 = v2085;
          uint64_t v88 = ~v2035;
        }
        v940 = (_OWORD *)((v839 + 255) & 0xFFFFFFFFFFFFFFF8);
        v941 = (long long *)(((unint64_t)v840 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v942 = *v941;
        *(_OWORD *)((char *)v940 + 9) = *(long long *)((char *)v941 + 9);
        _OWORD *v940 = v942;
        unint64_t v943 = (v839 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v944 = ((unint64_t)v840 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v945 = *(_OWORD *)v944;
        *(unsigned char *)(v943 + 16) = *(unsigned char *)(v944 + 16);
        *(_OWORD *)unint64_t v943 = v945;
        v946 = (void *)((v839 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v947 = ((unint64_t)v840 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v948 = *(void *)v947;
        v947 += 15;
        void *v946 = v948;
        v949 = (void *)(((unint64_t)v946 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v950 = *(void *)(v947 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v951 = *(void *)((v947 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v950, v951);
        void *v949 = v950;
        v949[1] = v951;
        size_t v784 = v1985;
        unsigned int v783 = v1962;
        size_t v782 = v2042;
        size_t v127 = v2043;
        if (!v1962) {
          goto LABEL_1021;
        }
LABEL_1056:
        uint64_t v952 = v88;
        unint64_t v953 = v1961 + 7;
        unint64_t v954 = ((((v1956
                 + 327
                 + ((((((((((v1961 + 7 + v784) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        v2107 = (void *)((unint64_t)&v78[v86 + v954] & v2003);
        v955 = (const void *)((unint64_t)&a2[v86 + v954] & v2003);
        unint64_t v2077 = v1956 + 327;
        if (v2039 == v1955)
        {
          int v956 = (*(uint64_t (**)(const void *, void, uint64_t))(v1987 + 48))(v955, v2039, AssociatedTypeWitness);
          uint64_t v957 = v1913;
LABEL_1071:
          if (v956)
          {
LABEL_1072:
            v966 = v2107;
            memcpy(v2107, v955, v782);
            unint64_t v967 = v2029 + 2;
            unint64_t v968 = ((v2030 + 1) & ~v2030) + v2047;
LABEL_1073:
            size_t v969 = v128;
LABEL_1124:
            unint64_t v1168 = ((((v2077
                      + ((((((((((v953 + v969) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 19) & 0xFFFFFFFFFFFFFFF8)
                        + 25) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 16;
            *(void *)(((unint64_t)v966 + v1168) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v955
                                                                                              + v1168) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v1169 = ((v1952
                    + ((v86
                      + ((((v2077
                          + ((((((((((v953 + v128) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 19) & 0xFFFFFFFFFFFFFFF8)
                            + 25) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 16) & v2003)) & 0xFFFFFFFFFFFFFFF8)
                  + 8;
            if (v1169 <= v2036) {
              unint64_t v1169 = v2036;
            }
            if (v1950 > v1169) {
              unint64_t v1169 = v1950;
            }
            if (v782 > v1169) {
              unint64_t v1169 = v782;
            }
            if (v2067 > v1169) {
              unint64_t v1169 = v2067;
            }
            if (v2047 > v1169) {
              unint64_t v1169 = v2047;
            }
            if (v1949 > v1169) {
              unint64_t v1169 = v2038 + 2;
            }
            if (v1951 > v1169) {
              unint64_t v1169 = ((v2029 + 9) & 0xFFFFFFFFFFFFFFF8) + 8;
            }
            if (v967 > v1169) {
              unint64_t v1169 = v967;
            }
            if (v2026 > v1169) {
              unint64_t v1169 = (v2029 & 0xFFFFFFFFFFFFFFF8) + 16;
            }
            if (v1169 <= v2047) {
              unint64_t v1169 = v2047;
            }
            if (v1169 <= v2037) {
              unint64_t v1169 = v2037;
            }
            if (v1169 <= v968) {
              unint64_t v1169 = v968;
            }
            if (v1169 <= v2047) {
              unint64_t v1169 = v2047;
            }
            if (v1169 <= v2028) {
              unint64_t v1169 = v2028;
            }
            if (v1169 <= v967) {
              unint64_t v1169 = v967;
            }
            if (v1169 <= v2047) {
              unint64_t v1169 = v2047;
            }
            if (v1169 <= v2038) {
              unint64_t v1169 = v2038;
            }
            if (v1169 <= v2047) {
              unint64_t v1169 = v2047;
            }
            if (v1169 <= v1917) {
              unint64_t v1169 = v1917;
            }
            if (v1169 <= v967) {
              unint64_t v1169 = v967;
            }
            if (v1169 <= v2047) {
              unint64_t v1169 = v2047;
            }
            if (v1169 <= 0x38) {
              unint64_t v1169 = 56;
            }
            if (v1169 > 3) {
              goto LABEL_1169;
            }
            unsigned int v1170 = ((1 << (8 * v1169)) + 5) >> (8 * v1169);
            if (v1170 > 0xFFD6)
            {
              *(_DWORD *)&v78[v1169] = 5;
              return v78;
            }
            if (v1170 <= 0xD6) {
LABEL_1169:
            }
              v78[v1169] = 5;
            else {
              *(_WORD *)&v78[v1169] = 5;
            }
            return v78;
          }
          unint64_t v958 = ((unint64_t)v955 + v1977) & v957;
          unint64_t v959 = (v1944 + v958) & v952;
LABEL_1075:
          v970 = *(void (**)(void *))(v1987 + 16);
          v2049 = v955;
          uint64_t v971 = v957;
          v970(v2107);
          unint64_t v972 = ((unint64_t)v2107 + v1977) & v971;
          ((void (*)(unint64_t, unint64_t, uint64_t))v970)(v972, v958, AssociatedTypeWitness);
          unint64_t v973 = (v1944 + v972) & v952;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1968 + 16))(v973, v959, v1967);
          v974 = (void *)((v1975 + v973) & 0xFFFFFFFFFFFFFFF8);
          v975 = (void *)((v1975 + v959) & 0xFFFFFFFFFFFFFFF8);
          void *v974 = *v975;
          unint64_t v976 = ((unint64_t)v974 + v1963) & v1991;
          unint64_t v977 = ((unint64_t)v975 + v1963) & v1991;
          v978 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
          swift_bridgeObjectRetain();
          v978(v976, v977, v1964);
          v979 = (void *)((v1959 + v977) & 0xFFFFFFFFFFFFFFF8);
          v980 = (void *)((v1959 + v976) & 0xFFFFFFFFFFFFFFF8);
          void *v980 = *v979;
          v981 = (void *)(((unint64_t)v980 + 15) & 0xFFFFFFFFFFFFFFF8);
          v982 = (void *)(((unint64_t)v979 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v981 = *v982;
          v981[1] = v982[1];
          v983 = (void *)(v973 + v127);
          void *v983 = *(void *)(v959 + v127);
          v983[1] = *(void *)(v959 + v127 + 8);
          size_t v984 = (v2045 + v973 + v127) & v2052;
          size_t v985 = (v2045 + v959 + v127) & v2052;
          *(unsigned char *)size_t v984 = *(unsigned char *)v985;
          uint64_t v986 = v984 | 4;
          int v987 = *(_DWORD *)(v985 | 4);
          *(unsigned char *)(v986 + 4) = *(unsigned char *)((v985 | 4) + 4);
          *(_DWORD *)uint64_t v986 = v987;
          *(_WORD *)(v984 + 10) = *(_WORD *)(v985 + 0xA);
          size_t v2056 = v984;
          unint64_t v988 = (v1983 + v984) & v1999;
          size_t v2046 = v985;
          unint64_t v989 = (v1983 + v985) & v1999;
          v990 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v990(v988, v989, v1984);
          unint64_t v991 = (v1980 + v988) & v1999;
          unint64_t v992 = (v1980 + v989) & v1999;
          v990(v991, v992, v1984);
          v993 = (unsigned char *)(v991 + v1985);
          unsigned char *v993 = *(unsigned char *)(v992 + v1985);
          v993[1] = *(unsigned char *)(v992 + v1985 + 1);
          v993[2] = *(unsigned char *)(v992 + v1985 + 2);
          v993[3] = *(unsigned char *)(v992 + v1985 + 3);
          v993[4] = *(unsigned char *)(v992 + v1985 + 4);
          unint64_t v994 = (v991 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v995 = (v992 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v994 = *(void *)v995;
          *(void *)(v994 + 8) = *(void *)(v995 + 8);
          *(unsigned char *)(v994 + 16) = *(unsigned char *)(v995 + 16);
          *(unsigned char *)(v994 + 17) = *(unsigned char *)(v995 + 17);
          *(unsigned char *)(v994 + 18) = *(unsigned char *)(v995 + 18);
          *(unsigned char *)(v994 + 19) = *(unsigned char *)(v995 + 19);
          unint64_t v996 = (v994 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v997 = (v995 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v996 = *(void *)v997;
          *(unsigned char *)(v996 + 8) = *(unsigned char *)(v997 + 8);
          *(unsigned char *)(v996 + 9) = *(unsigned char *)(v997 + 9);
          *(unsigned char *)(v996 + 10) = *(unsigned char *)(v997 + 10);
          *(unsigned char *)(v996 + 11) = *(unsigned char *)(v997 + 11);
          *(unsigned char *)(v996 + 12) = *(unsigned char *)(v997 + 12);
          v998 = (void *)((v995 + 47) & 0xFFFFFFFFFFFFFFF8);
          v999 = (void *)((v994 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v999 = *v998;
          unint64_t v1000 = ((unint64_t)v999 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1001 = ((unint64_t)v998 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v1000 = *(void *)v1001;
          *(unsigned char *)(v1000 + 8) = *(unsigned char *)(v1001 + 8);
          *(unsigned char *)(v1000 + 9) = *(unsigned char *)(v1001 + 9);
          v1002 = (void *)((v1978 + v1000) & v1999);
          v1003 = (const void *)((v1978 + v1001) & v1999);
          v1004 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
          swift_bridgeObjectRetain();
          if (v1004(v1003, 1, v1984))
          {
            memcpy(v1002, v1003, __n);
          }
          else
          {
            v990((unint64_t)v1002, (unint64_t)v1003, v1984);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v1002, 0, 1, v1984);
          }
          v1005 = (void *)(((unint64_t)v1002 + v1979) & 0xFFFFFFFFFFFFFFF8);
          v1006 = (void *)(((unint64_t)v1003 + v1979) & 0xFFFFFFFFFFFFFFF8);
          void *v1005 = *v1006;
          unint64_t v1007 = ((unint64_t)v1005 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1008 = ((unint64_t)v1006 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v1009 = *(void *)v1008;
          *(unsigned char *)(v1007 + 8) = *(unsigned char *)(v1008 + 8);
          *(void *)unint64_t v1007 = v1009;
          v1010 = (void *)(((unint64_t)v1005 + 31) & 0xFFFFFFFFFFFFFFF8);
          v1011 = (void *)(((unint64_t)v1006 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v1010 = *v1011;
          unint64_t v1012 = ((unint64_t)v1010 + 15) & 0xFFFFFFFFFFFFFFF8;
          v1013 = (uint64_t *)(((unint64_t)v1011 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v1014 = v1013[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v1014 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v1012 = *(_OWORD *)v1013;
          }
          else
          {
            uint64_t v1015 = *v1013;
            sub_24D3F9C18(*v1013, v1014);
            *(void *)unint64_t v1012 = v1015;
            *(void *)(v1012 + 8) = v1014;
          }
          unint64_t v1016 = (v1012 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1017 = ((unint64_t)v1013 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v1018 = *(void *)v1017;
          *(unsigned char *)(v1016 + 8) = *(unsigned char *)(v1017 + 8);
          *(void *)unint64_t v1016 = v1018;
          *(unsigned char *)(v1016 + 9) = *(unsigned char *)(v1017 + 9);
          unint64_t v1019 = (v1016 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v1020 = (v1017 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v1021 = *(_DWORD *)v1020;
          *(unsigned char *)(v1019 + 4) = *(unsigned char *)(v1020 + 4);
          *(_DWORD *)unint64_t v1019 = v1021;
          v1022 = (void *)((v1016 + 25) & 0xFFFFFFFFFFFFFFF8);
          v1023 = (void *)((v1017 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v1022 = *v1023;
          v1022[1] = v1023[1];
          size_t v1024 = v2056 + v2016;
          v1025 = (long long *)(v2046 + v2016);
          unint64_t v1026 = *(void *)(v2046 + v2016 + 16);
          if (v1026 >= 0xFFFFFFFF) {
            LODWORD(v1026) = -1;
          }
          int v1027 = v1026 - 1;
          swift_bridgeObjectRetain();
          uint64_t v86 = v2085;
          if (v1027 < 0)
          {
            *(void *)size_t v1024 = *(void *)v1025;
            *(unsigned char *)(v1024 + 8) = *((unsigned char *)v1025 + 8);
            *(unsigned char *)(v1024 + 9) = *((unsigned char *)v1025 + 9);
            v1040 = (void *)*((void *)v1025 + 2);
            id v1041 = v1040;
            *(void *)(v1024 + 16) = v1040;
            v1042 = (void *)*((void *)v1025 + 3);
            id v1043 = v1042;
            *(void *)(v1024 + 24) = v1042;
            *(unsigned char *)(v1024 + 32) = *((unsigned char *)v1025 + 32);
            *(unsigned char *)(v1024 + 33) = *((unsigned char *)v1025 + 33);
            *(unsigned char *)(v1024 + 34) = *((unsigned char *)v1025 + 34);
            *(void *)(v1024 + 40) = *((void *)v1025 + 5);
            *(void *)(v1024 + 48) = *((void *)v1025 + 6);
            *(void *)(v1024 + 56) = *((void *)v1025 + 7);
            *(void *)(v1024 + 64) = *((void *)v1025 + 8);
            *(unsigned char *)(v1024 + 72) = *((unsigned char *)v1025 + 72);
            *(void *)(v1024 + 80) = *((void *)v1025 + 10);
            *(void *)(v1024 + 88) = *((void *)v1025 + 11);
            v2057 = (void *)*((void *)v1025 + 12);
            *(void *)(v1024 + 96) = v2057;
            *(unsigned char *)(v1024 + 104) = *((unsigned char *)v1025 + 104);
            *(unsigned char *)(v1024 + 105) = *((unsigned char *)v1025 + 105);
            *(void *)(v1024 + 112) = *((void *)v1025 + 14);
            *(void *)(v1024 + 120) = *((void *)v1025 + 15);
            *(void *)(v1024 + 128) = *((void *)v1025 + 16);
            *(void *)(v1024 + 136) = *((void *)v1025 + 17);
            *(void *)(v1024 + 144) = *((void *)v1025 + 18);
            *(void *)(v1024 + 152) = *((void *)v1025 + 19);
            *(void *)(v1024 + 160) = *((void *)v1025 + 20);
            *(void *)(v1024 + 168) = *((void *)v1025 + 21);
            *(unsigned char *)(v1024 + 176) = *((unsigned char *)v1025 + 176);
            *(void *)(v1024 + 184) = *((void *)v1025 + 23);
            uint64_t v1044 = *((void *)v1025 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v1045 = v2057;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v1044)
            {
              *(void *)(v1024 + 192) = v1044;
              *(void *)(v1024 + 200) = *((void *)v1025 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v1024 + 192) = v1025[12];
            }
            uint64_t v78 = a1;
            uint64_t v86 = v2085;
            unint64_t v953 = v1961 + 7;
            unint64_t v967 = v2029 + 2;
            unint64_t v968 = ((v2030 + 1) & ~v2030) + v2047;
            *(void *)(v1024 + 208) = *((void *)v1025 + 26);
            *(void *)(v1024 + 216) = *((void *)v1025 + 27);
            *(void *)(v1024 + 224) = *((void *)v1025 + 28);
            *(void *)(v1024 + 232) = *((void *)v1025 + 29);
            *(void *)(v1024 + 240) = *((void *)v1025 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v1028 = *v1025;
            long long v1029 = v1025[1];
            long long v1030 = v1025[3];
            *(_OWORD *)(v1024 + 32) = v1025[2];
            *(_OWORD *)(v1024 + 48) = v1030;
            *(_OWORD *)size_t v1024 = v1028;
            *(_OWORD *)(v1024 + 16) = v1029;
            long long v1031 = v1025[4];
            long long v1032 = v1025[5];
            long long v1033 = v1025[7];
            *(_OWORD *)(v1024 + 96) = v1025[6];
            *(_OWORD *)(v1024 + 112) = v1033;
            *(_OWORD *)(v1024 + 64) = v1031;
            *(_OWORD *)(v1024 + 80) = v1032;
            long long v1034 = v1025[8];
            long long v1035 = v1025[9];
            long long v1036 = v1025[11];
            *(_OWORD *)(v1024 + 160) = v1025[10];
            *(_OWORD *)(v1024 + 176) = v1036;
            *(_OWORD *)(v1024 + 128) = v1034;
            *(_OWORD *)(v1024 + 144) = v1035;
            long long v1037 = v1025[12];
            long long v1038 = v1025[13];
            long long v1039 = v1025[14];
            *(void *)(v1024 + 240) = *((void *)v1025 + 30);
            *(_OWORD *)(v1024 + 208) = v1038;
            *(_OWORD *)(v1024 + 224) = v1039;
            *(_OWORD *)(v1024 + 192) = v1037;
            unint64_t v967 = v2029 + 2;
            unint64_t v968 = ((v2030 + 1) & ~v2030) + v2047;
          }
          v1156 = (_OWORD *)((v1024 + 255) & 0xFFFFFFFFFFFFFFF8);
          v1157 = (long long *)(((unint64_t)v1025 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v1158 = *v1157;
          *(_OWORD *)((char *)v1156 + 9) = *(long long *)((char *)v1157 + 9);
          _OWORD *v1156 = v1158;
          unint64_t v1159 = (v1024 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1160 = ((unint64_t)v1025 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v1161 = *(_OWORD *)v1160;
          *(unsigned char *)(v1159 + 16) = *(unsigned char *)(v1160 + 16);
          *(_OWORD *)unint64_t v1159 = v1161;
          v1162 = (void *)((v1024 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v1163 = ((unint64_t)v1025 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v1164 = *(void *)v1163;
          v1163 += 15;
          void *v1162 = v1164;
          v1165 = (void *)(((unint64_t)v1162 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v1166 = *(void *)(v1163 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v1167 = *(void *)((v1163 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v1166, v1167);
          void *v1165 = v1166;
          v1165[1] = v1167;
          size_t v969 = v1985;
          size_t v782 = v2042;
          size_t v128 = __n;
          v966 = v2107;
          v955 = v2049;
          if (v1962) {
            goto LABEL_1124;
          }
          goto LABEL_1073;
        }
        uint64_t v957 = v1913;
        unint64_t v958 = ((unint64_t)v955 + v1977) & v1913;
        unint64_t v959 = (v1944 + v958) & v952;
        if (v1957 == v1955)
        {
          if (v1946 == v1957)
          {
            v960 = *(uint64_t (**)(unint64_t))(v1968 + 48);
            unint64_t v961 = (v1944 + v958) & v952;
LABEL_1070:
            int v956 = v960(v961);
            uint64_t v957 = v1913;
            goto LABEL_1071;
          }
          v964 = (unint64_t *)((v1975 + v959) & 0xFFFFFFFFFFFFFFF8);
          if (v1936 > 0x7FFFFFFE)
          {
            unint64_t v961 = ((unint64_t)v964 + v1963) & v1991;
            v960 = *(uint64_t (**)(unint64_t))(v1965 + 48);
            goto LABEL_1070;
          }
          unint64_t v965 = *v964;
        }
        else
        {
          unint64_t v962 = v959 + v127;
          if ((v1933 & 0x80000000) == 0)
          {
            unint64_t v963 = *(void *)(v962 + 8);
            if (v963 >= 0xFFFFFFFF) {
              LODWORD(v963) = -1;
            }
            int v956 = v963 + 1;
            goto LABEL_1071;
          }
          unint64_t v961 = (v1983 + ((v2045 + v962) & v2052)) & v1999;
          if (v783 > 0x7FFFFFFD)
          {
            v960 = *(uint64_t (**)(unint64_t))(v1981 + 48);
            goto LABEL_1070;
          }
          unint64_t v965 = *(void *)(((v1930 + ((v1980 + v961) & v1999)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v965 >= 0xFFFFFFFF) {
          LODWORD(v965) = -1;
        }
        if ((v965 + 1) >= 2) {
          goto LABEL_1072;
        }
        goto LABEL_1075;
      }
      unint64_t v408 = (unint64_t)&a2[v1977] & v87;
      unint64_t v409 = (v408 + v2097 + v2035) & v88;
      size_t v127 = v2043;
      if (v1957 == v1955)
      {
        uint64_t v78 = a1;
        if (v1946 == v1957)
        {
          int v126 = (*(uint64_t (**)(unint64_t))(v1968 + 48))((v408 + v2097 + v2035) & v88);
          uint64_t v87 = ~v2073;
          size_t v128 = __n;
          goto LABEL_1019;
        }
        unint64_t v636 = (unint64_t *)((v1975 + v409) & 0xFFFFFFFFFFFFFFF8);
        size_t v128 = __n;
        if (v1936 <= 0x7FFFFFFE)
        {
          unint64_t v637 = *v636;
          goto LABEL_1269;
        }
        unint64_t v779 = ((unint64_t)v636 + v1963) & v89;
        v780 = *(uint64_t (**)(unint64_t))(v1965 + 48);
      }
      else
      {
        size_t v514 = v2043 + v409;
        uint64_t v78 = a1;
        if ((v1933 & 0x80000000) == 0)
        {
          unint64_t v515 = *(void *)(v514 + 8);
          if (v515 >= 0xFFFFFFFF) {
            LODWORD(v515) = -1;
          }
          int v126 = v515 + 1;
          size_t v128 = __n;
          goto LABEL_1019;
        }
        unint64_t v779 = (v1983 + ((v2045 + v514) & v2052)) & v1999;
        size_t v128 = __n;
        if (v1962 <= 0x7FFFFFFD)
        {
          unint64_t v637 = *(void *)(((v1930 + ((v1980 + v779) & v1999)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_1269:
          if (v637 >= 0xFFFFFFFF) {
            LODWORD(v637) = -1;
          }
          if ((v637 + 1) >= 2) {
            goto LABEL_1020;
          }
          goto LABEL_1023;
        }
        v780 = *(uint64_t (**)(unint64_t))(v1981 + 48);
      }
      int v126 = v780(v779);
      uint64_t v87 = ~v2073;
      goto LABEL_1019;
    case 6u:
      uint64_t v2053 = ~v2051;
      size_t v2068 = v36;
      unint64_t v2098 = ((((v1960 + ((v32 + 8 + (v1974 & 0xFFFFFFFFFFFFFFF8)) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16;
      uint64_t v129 = v1948;
      unint64_t v2000 = ~(unint64_t)v1998;
      uint64_t v2017 = ~v32;
      unint64_t v1915 = v84;
      unint64_t v1918 = v68;
      uint64_t v2005 = ~v33;
      uint64_t v1912 = ~v2034;
      if (v1948 == v1954)
      {
        uint64_t v130 = v2048;
        unint64_t v131 = v84;
        uint64_t v132 = v1988;
        int v133 = (*(uint64_t (**)(unsigned __int8 *, void, uint64_t))(v2048 + 48))(a2, v1948, v1988);
        unint64_t v84 = v131;
LABEL_1037:
        if (v133)
        {
LABEL_1038:
          uint64_t v78 = a1;
          memcpy(a1, a2, v2068);
LABEL_1039:
          size_t v861 = __n;
          goto LABEL_1090;
        }
        unint64_t v410 = (unint64_t)&a2[v1976] & v84;
        unint64_t v411 = (v410 + v2040 + v33) & v2005;
LABEL_1041:
        uint64_t v862 = v130;
        uint64_t v863 = v132;
        v864 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v862 + 16);
        unint64_t v865 = v84;
        v864(a1, a2, v863);
        unint64_t v866 = ((unint64_t)a1 + v1976) & v865;
        v864((void *)v866, (unsigned __int8 *)v410, v863);
        unint64_t v867 = (v866 + v2040 + v33) & v2005;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v1970 + 16))(v867, v411, v1969);
        v868 = (void *)((v1974 + v867) & 0xFFFFFFFFFFFFFFF8);
        v869 = (void *)((v1974 + v411) & 0xFFFFFFFFFFFFFFF8);
        void *v868 = *v869;
        unint64_t v870 = ((unint64_t)v868 + v1966) & v2017;
        unint64_t v871 = ((unint64_t)v869 + v1966) & v2017;
        v872 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
        swift_bridgeObjectRetain();
        v872(v870, v871, v1971);
        v873 = (void *)((v1960 + v871) & 0xFFFFFFFFFFFFFFF8);
        v874 = (void *)((v1960 + v870) & 0xFFFFFFFFFFFFFFF8);
        void *v874 = *v873;
        v875 = (void *)(((unint64_t)v874 + 15) & 0xFFFFFFFFFFFFFFF8);
        v876 = (void *)(((unint64_t)v873 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v875 = *v876;
        v875[1] = v876[1];
        v877 = (void *)(v2098 + v867);
        void *v877 = *(void *)(v2098 + v411);
        v877[1] = *(void *)(v2098 + v411 + 8);
        unint64_t v878 = (v2045 + v2098 + v867) & v2053;
        unint64_t v879 = (v2045 + v2098 + v411) & v2053;
        *(unsigned char *)unint64_t v878 = *(unsigned char *)v879;
        uint64_t v880 = v878 | 4;
        int v881 = *(_DWORD *)(v879 | 4);
        *(unsigned char *)(v880 + 4) = *(unsigned char *)((v879 | 4) + 4);
        *(_DWORD *)uint64_t v880 = v881;
        *(_WORD *)(v878 + 10) = *(_WORD *)(v879 + 0xA);
        unint64_t v882 = (v1983 + v878) & v90;
        unint64_t v2075 = v879;
        unint64_t v883 = (v1983 + v879) & v90;
        v884 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v884(v882, v883, v1984);
        unint64_t v885 = (v1980 + v882) & v90;
        unint64_t v886 = (v1980 + v883) & v90;
        v884(v885, v886, v1984);
        v887 = (unsigned char *)(v885 + v1985);
        unsigned char *v887 = *(unsigned char *)(v886 + v1985);
        v887[1] = *(unsigned char *)(v886 + v1985 + 1);
        v887[2] = *(unsigned char *)(v886 + v1985 + 2);
        v887[3] = *(unsigned char *)(v886 + v1985 + 3);
        v887[4] = *(unsigned char *)(v886 + v1985 + 4);
        unint64_t v888 = (v885 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v889 = (v886 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v888 = *(void *)v889;
        *(void *)(v888 + 8) = *(void *)(v889 + 8);
        *(unsigned char *)(v888 + 16) = *(unsigned char *)(v889 + 16);
        *(unsigned char *)(v888 + 17) = *(unsigned char *)(v889 + 17);
        *(unsigned char *)(v888 + 18) = *(unsigned char *)(v889 + 18);
        *(unsigned char *)(v888 + 19) = *(unsigned char *)(v889 + 19);
        unint64_t v890 = (v888 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v891 = (v889 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v890 = *(void *)v891;
        *(unsigned char *)(v890 + 8) = *(unsigned char *)(v891 + 8);
        *(unsigned char *)(v890 + 9) = *(unsigned char *)(v891 + 9);
        *(unsigned char *)(v890 + 10) = *(unsigned char *)(v891 + 10);
        *(unsigned char *)(v890 + 11) = *(unsigned char *)(v891 + 11);
        *(unsigned char *)(v890 + 12) = *(unsigned char *)(v891 + 12);
        v892 = (void *)((v889 + 47) & 0xFFFFFFFFFFFFFFF8);
        v893 = (void *)((v888 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v893 = *v892;
        unint64_t v894 = ((unint64_t)v893 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v895 = ((unint64_t)v892 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v894 = *(void *)v895;
        *(unsigned char *)(v894 + 8) = *(unsigned char *)(v895 + 8);
        *(unsigned char *)(v894 + 9) = *(unsigned char *)(v895 + 9);
        v896 = (void *)((v1978 + v894) & v90);
        v897 = (const void *)((v1978 + v895) & v90);
        v898 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
        swift_bridgeObjectRetain();
        if (v898(v897, 1, v1984))
        {
          memcpy(v896, v897, __n);
        }
        else
        {
          v884((unint64_t)v896, (unint64_t)v897, v1984);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v896, 0, 1, v1984);
        }
        v899 = (void *)(((unint64_t)v896 + v1979) & 0xFFFFFFFFFFFFFFF8);
        v900 = (void *)(((unint64_t)v897 + v1979) & 0xFFFFFFFFFFFFFFF8);
        void *v899 = *v900;
        unint64_t v901 = ((unint64_t)v899 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v902 = ((unint64_t)v900 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v903 = *(void *)v902;
        *(unsigned char *)(v901 + 8) = *(unsigned char *)(v902 + 8);
        *(void *)unint64_t v901 = v903;
        v904 = (void *)(((unint64_t)v899 + 31) & 0xFFFFFFFFFFFFFFF8);
        v905 = (void *)(((unint64_t)v900 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v904 = *v905;
        unint64_t v906 = ((unint64_t)v904 + 15) & 0xFFFFFFFFFFFFFFF8;
        v907 = (uint64_t *)(((unint64_t)v905 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v908 = v907[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v78 = a1;
        uint64_t v130 = v2048;
        if ((v908 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v906 = *(_OWORD *)v907;
        }
        else
        {
          uint64_t v909 = *v907;
          sub_24D3F9C18(*v907, v908);
          *(void *)unint64_t v906 = v909;
          *(void *)(v906 + 8) = v908;
        }
        unint64_t v910 = (v906 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v911 = ((unint64_t)v907 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v912 = *(void *)v911;
        *(unsigned char *)(v910 + 8) = *(unsigned char *)(v911 + 8);
        *(void *)unint64_t v910 = v912;
        *(unsigned char *)(v910 + 9) = *(unsigned char *)(v911 + 9);
        unint64_t v913 = (v910 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v914 = (v911 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v915 = *(_DWORD *)v914;
        *(unsigned char *)(v913 + 4) = *(unsigned char *)(v914 + 4);
        *(_DWORD *)unint64_t v913 = v915;
        v916 = (void *)((v910 + 25) & 0xFFFFFFFFFFFFFFF8);
        v917 = (void *)((v911 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v916 = *v917;
        v916[1] = v917[1];
        unint64_t v918 = v878 + v2016;
        v919 = (long long *)(v2075 + v2016);
        unint64_t v920 = *(void *)(v2075 + v2016 + 16);
        if (v920 >= 0xFFFFFFFF) {
          LODWORD(v920) = -1;
        }
        int v921 = v920 - 1;
        swift_bridgeObjectRetain();
        if (v921 < 0)
        {
          *(void *)unint64_t v918 = *(void *)v919;
          *(unsigned char *)(v918 + 8) = *((unsigned char *)v919 + 8);
          *(unsigned char *)(v918 + 9) = *((unsigned char *)v919 + 9);
          v934 = (void *)*((void *)v919 + 2);
          id v935 = v934;
          *(void *)(v918 + 16) = v934;
          v936 = (void *)*((void *)v919 + 3);
          id v937 = v936;
          *(void *)(v918 + 24) = v936;
          *(unsigned char *)(v918 + 32) = *((unsigned char *)v919 + 32);
          *(unsigned char *)(v918 + 33) = *((unsigned char *)v919 + 33);
          *(unsigned char *)(v918 + 34) = *((unsigned char *)v919 + 34);
          *(void *)(v918 + 40) = *((void *)v919 + 5);
          *(void *)(v918 + 48) = *((void *)v919 + 6);
          *(void *)(v918 + 56) = *((void *)v919 + 7);
          *(void *)(v918 + 64) = *((void *)v919 + 8);
          *(unsigned char *)(v918 + 72) = *((unsigned char *)v919 + 72);
          *(void *)(v918 + 80) = *((void *)v919 + 10);
          *(void *)(v918 + 88) = *((void *)v919 + 11);
          v2076 = (void *)*((void *)v919 + 12);
          *(void *)(v918 + 96) = v2076;
          *(unsigned char *)(v918 + 104) = *((unsigned char *)v919 + 104);
          *(unsigned char *)(v918 + 105) = *((unsigned char *)v919 + 105);
          *(void *)(v918 + 112) = *((void *)v919 + 14);
          *(void *)(v918 + 120) = *((void *)v919 + 15);
          *(void *)(v918 + 128) = *((void *)v919 + 16);
          *(void *)(v918 + 136) = *((void *)v919 + 17);
          *(void *)(v918 + 144) = *((void *)v919 + 18);
          *(void *)(v918 + 152) = *((void *)v919 + 19);
          *(void *)(v918 + 160) = *((void *)v919 + 20);
          *(void *)(v918 + 168) = *((void *)v919 + 21);
          *(unsigned char *)(v918 + 176) = *((unsigned char *)v919 + 176);
          *(void *)(v918 + 184) = *((void *)v919 + 23);
          uint64_t v938 = *((void *)v919 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v939 = v2076;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v938)
          {
            *(void *)(v918 + 192) = v938;
            *(void *)(v918 + 200) = *((void *)v919 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v918 + 192) = v919[12];
          }
          uint64_t v78 = a1;
          uint64_t v132 = v1988;
          uint64_t v130 = v2048;
          uint64_t v129 = v1948;
          *(void *)(v918 + 208) = *((void *)v919 + 26);
          *(void *)(v918 + 216) = *((void *)v919 + 27);
          *(void *)(v918 + 224) = *((void *)v919 + 28);
          *(void *)(v918 + 232) = *((void *)v919 + 29);
          *(void *)(v918 + 240) = *((void *)v919 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v922 = *v919;
          long long v923 = v919[1];
          long long v924 = v919[3];
          *(_OWORD *)(v918 + 32) = v919[2];
          *(_OWORD *)(v918 + 48) = v924;
          *(_OWORD *)unint64_t v918 = v922;
          *(_OWORD *)(v918 + 16) = v923;
          long long v925 = v919[4];
          long long v926 = v919[5];
          long long v927 = v919[7];
          *(_OWORD *)(v918 + 96) = v919[6];
          *(_OWORD *)(v918 + 112) = v927;
          *(_OWORD *)(v918 + 64) = v925;
          *(_OWORD *)(v918 + 80) = v926;
          long long v928 = v919[8];
          long long v929 = v919[9];
          long long v930 = v919[11];
          *(_OWORD *)(v918 + 160) = v919[10];
          *(_OWORD *)(v918 + 176) = v930;
          *(_OWORD *)(v918 + 128) = v928;
          *(_OWORD *)(v918 + 144) = v929;
          long long v931 = v919[12];
          long long v932 = v919[13];
          long long v933 = v919[14];
          *(void *)(v918 + 240) = *((void *)v919 + 30);
          *(_OWORD *)(v918 + 208) = v932;
          *(_OWORD *)(v918 + 224) = v933;
          *(_OWORD *)(v918 + 192) = v931;
          uint64_t v132 = v1988;
          uint64_t v129 = v1948;
        }
        v1046 = (_OWORD *)((v918 + 255) & 0xFFFFFFFFFFFFFFF8);
        v1047 = (long long *)(((unint64_t)v919 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v1048 = *v1047;
        *(_OWORD *)((char *)v1046 + 9) = *(long long *)((char *)v1047 + 9);
        _OWORD *v1046 = v1048;
        unint64_t v1049 = (v918 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v1050 = ((unint64_t)v919 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v1051 = *(_OWORD *)v1050;
        *(unsigned char *)(v1049 + 16) = *(unsigned char *)(v1050 + 16);
        *(_OWORD *)unint64_t v1049 = v1051;
        v1052 = (void *)((v918 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v1053 = ((unint64_t)v919 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v1054 = *(void *)v1053;
        v1053 += 15;
        void *v1052 = v1054;
        v1055 = (void *)(((unint64_t)v1052 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v1056 = *(void *)(v1053 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v1057 = *(void *)((v1053 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v1056, v1057);
        void *v1055 = v1056;
        v1055[1] = v1057;
        size_t v861 = v1985;
        if (!v1962) {
          goto LABEL_1039;
        }
LABEL_1090:
        unint64_t v1058 = v1961 + 7;
        unint64_t v1059 = ((((v1941
                  + 327
                  + ((((((((((v1961 + 7 + v861) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 19) & 0xFFFFFFFFFFFFFFF8)
                    + 25) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 16;
        v2078 = (void *)((unint64_t)&v78[v2034 + v1059] & v1912);
        v1060 = (const void *)((unint64_t)&a2[v2034 + v1059] & v1912);
        if (v129 == v1954)
        {
          int v1061 = (*(uint64_t (**)(const void *, uint64_t, uint64_t))(v130 + 48))(v1060, v129, v132);
          uint64_t v1062 = v1984;
          unint64_t v1063 = v1915;
          unint64_t v1064 = v2029 + 2;
LABEL_1105:
          if (v1061)
          {
LABEL_1106:
            size_t v1074 = v2068;
            v1075 = v2078;
            memcpy(v2078, v1060, v2068);
            uint64_t v1076 = v2085;
            size_t v1077 = __n;
LABEL_1107:
            size_t v1078 = v1077;
LABEL_1177:
            unint64_t v1183 = ((((v1941
                      + 327
                      + ((((((((((v1058 + v1078) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                          + 19) & 0xFFFFFFFFFFFFFFF8)
                        + 25) & 0xFFFFFFFFFFFFFFF8)) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 16;
            *(void *)(((unint64_t)v1075 + v1183) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v1060
                                                                                               + v1183) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v1184 = ((v1952
                    + ((v1076
                      + ((((v1956
                          + ((((((((((v1058 + v1077) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 19) & 0xFFFFFFFFFFFFFFF8)
                            + 25) & 0xFFFFFFFFFFFFFFF8)
                          + 327) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 16) & ~v2085)) & 0xFFFFFFFFFFFFFFF8)
                  + 8;
            if (v1184 <= v2036) {
              unint64_t v1184 = v2036;
            }
            if (v1950 > v1184) {
              unint64_t v1184 = v1950;
            }
            if (v2042 > v1184) {
              unint64_t v1184 = v2042;
            }
            if (v1074 > v1184) {
              unint64_t v1184 = v1074;
            }
            if (v2047 > v1184) {
              unint64_t v1184 = v2047;
            }
            if (v1949 > v1184) {
              unint64_t v1184 = v2038 + 2;
            }
            if (v1951 > v1184) {
              unint64_t v1184 = ((v2029 + 9) & 0xFFFFFFFFFFFFFFF8) + 8;
            }
            if (v1064 > v1184) {
              unint64_t v1184 = v1064;
            }
            if (v2026 > v1184) {
              unint64_t v1184 = (v2029 & 0xFFFFFFFFFFFFFFF8) + 16;
            }
            if (v1184 <= v2047) {
              unint64_t v1184 = v2047;
            }
            if (v1184 <= v2037) {
              unint64_t v1184 = v2037;
            }
            if (v1184 <= ((v2030 + 1) & ~v2030) + v2047) {
              unint64_t v1184 = ((v2030 + 1) & ~v2030) + v2047;
            }
            if (v1184 <= v2047) {
              unint64_t v1184 = v2047;
            }
            if (v1184 <= v2028) {
              unint64_t v1184 = v2028;
            }
            if (v1184 <= v1064) {
              unint64_t v1184 = v1064;
            }
            if (v1184 <= v2047) {
              unint64_t v1184 = v2047;
            }
            if (v1184 <= v2038) {
              unint64_t v1184 = v2038;
            }
            if (v1184 <= v2047) {
              unint64_t v1184 = v2047;
            }
            if (v1184 <= v1918) {
              unint64_t v1184 = v1918;
            }
            if (v1184 <= v1064) {
              unint64_t v1184 = v1064;
            }
            if (v1184 <= v2047) {
              unint64_t v1184 = v2047;
            }
            if (v1184 <= 0x38) {
              unint64_t v1184 = 56;
            }
            if (v1184 > 3) {
              goto LABEL_1222;
            }
            unsigned int v1185 = ((1 << (8 * v1184)) + 5) >> (8 * v1184);
            if (v1185 > 0xFFD6)
            {
              *(_DWORD *)&v78[v1184] = 6;
              return v78;
            }
            if (v1185 <= 0xD6) {
LABEL_1222:
            }
              v78[v1184] = 6;
            else {
              *(_WORD *)&v78[v1184] = 6;
            }
            return v78;
          }
          unint64_t v1065 = ((unint64_t)v1060 + v1976) & v1063;
          unint64_t v1066 = (v1943 + v1065) & v2005;
LABEL_1109:
          v1079 = v1060;
          v1080 = *(void (**)(void *))(v2048 + 16);
          unint64_t v1081 = v1063;
          v2050 = v1079;
          v1080(v2078);
          unint64_t v1082 = ((unint64_t)v2078 + v1976) & v1081;
          ((void (*)(unint64_t, unint64_t, uint64_t))v1080)(v1082, v1065, v132);
          unint64_t v1083 = (v1943 + v1082) & v2005;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1970 + 16))(v1083, v1066, v1969);
          v1084 = (void *)((v1974 + v1083) & 0xFFFFFFFFFFFFFFF8);
          v1085 = (void *)((v1974 + v1066) & 0xFFFFFFFFFFFFFFF8);
          void *v1084 = *v1085;
          unint64_t v1086 = ((unint64_t)v1084 + v1966) & v2017;
          unint64_t v1087 = ((unint64_t)v1085 + v1966) & v2017;
          v1088 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
          swift_bridgeObjectRetain();
          v1088(v1086, v1087, v1971);
          v1089 = (void *)((v1960 + v1087) & 0xFFFFFFFFFFFFFFF8);
          v1090 = (void *)((v1960 + v1086) & 0xFFFFFFFFFFFFFFF8);
          void *v1090 = *v1089;
          v1091 = (void *)(((unint64_t)v1090 + 15) & 0xFFFFFFFFFFFFFFF8);
          v1092 = (void *)(((unint64_t)v1089 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v1091 = *v1092;
          v1091[1] = v1092[1];
          v1093 = (void *)(v1083 + v2098);
          void *v1093 = *(void *)(v1066 + v2098);
          v1093[1] = *(void *)(v1066 + v2098 + 8);
          unint64_t v1094 = (v2045 + v1083 + v2098) & v2053;
          unint64_t v1095 = (v2045 + v1066 + v2098) & v2053;
          *(unsigned char *)unint64_t v1094 = *(unsigned char *)v1095;
          uint64_t v1096 = v1094 | 4;
          int v1097 = *(_DWORD *)(v1095 | 4);
          *(unsigned char *)(v1096 + 4) = *(unsigned char *)((v1095 | 4) + 4);
          *(_DWORD *)uint64_t v1096 = v1097;
          *(_WORD *)(v1094 + 10) = *(_WORD *)(v1095 + 0xA);
          unint64_t v2108 = v1094;
          unint64_t v1098 = (v1983 + v1094) & v2000;
          unint64_t v2058 = v1095;
          unint64_t v1099 = (v1983 + v1095) & v2000;
          v1100 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v1100(v1098, v1099, v1062);
          unint64_t v1101 = (v1980 + v1098) & v2000;
          unint64_t v1102 = (v1980 + v1099) & v2000;
          v1100(v1101, v1102, v1062);
          v1103 = (unsigned char *)(v1101 + v1985);
          unsigned char *v1103 = *(unsigned char *)(v1102 + v1985);
          v1103[1] = *(unsigned char *)(v1102 + v1985 + 1);
          v1103[2] = *(unsigned char *)(v1102 + v1985 + 2);
          v1103[3] = *(unsigned char *)(v1102 + v1985 + 3);
          v1103[4] = *(unsigned char *)(v1102 + v1985 + 4);
          unint64_t v1104 = (v1101 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1105 = (v1102 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v1104 = *(void *)v1105;
          *(void *)(v1104 + 8) = *(void *)(v1105 + 8);
          *(unsigned char *)(v1104 + 16) = *(unsigned char *)(v1105 + 16);
          *(unsigned char *)(v1104 + 17) = *(unsigned char *)(v1105 + 17);
          *(unsigned char *)(v1104 + 18) = *(unsigned char *)(v1105 + 18);
          *(unsigned char *)(v1104 + 19) = *(unsigned char *)(v1105 + 19);
          unint64_t v1106 = (v1104 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1107 = (v1105 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v1106 = *(void *)v1107;
          *(unsigned char *)(v1106 + 8) = *(unsigned char *)(v1107 + 8);
          *(unsigned char *)(v1106 + 9) = *(unsigned char *)(v1107 + 9);
          *(unsigned char *)(v1106 + 10) = *(unsigned char *)(v1107 + 10);
          *(unsigned char *)(v1106 + 11) = *(unsigned char *)(v1107 + 11);
          *(unsigned char *)(v1106 + 12) = *(unsigned char *)(v1107 + 12);
          v1108 = (void *)((v1105 + 47) & 0xFFFFFFFFFFFFFFF8);
          v1109 = (void *)((v1104 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v1109 = *v1108;
          unint64_t v1110 = ((unint64_t)v1109 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1111 = ((unint64_t)v1108 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v1110 = *(void *)v1111;
          *(unsigned char *)(v1110 + 8) = *(unsigned char *)(v1111 + 8);
          *(unsigned char *)(v1110 + 9) = *(unsigned char *)(v1111 + 9);
          v1112 = (void *)((v1978 + v1110) & v2000);
          v1113 = (const void *)((v1978 + v1111) & v2000);
          v1114 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
          swift_bridgeObjectRetain();
          if (v1114(v1113, 1, v1062))
          {
            size_t v1077 = __n;
            memcpy(v1112, v1113, __n);
          }
          else
          {
            v1100((unint64_t)v1112, (unint64_t)v1113, v1062);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v1112, 0, 1, v1062);
            size_t v1077 = __n;
          }
          v1115 = (void *)(((unint64_t)v1112 + v1979) & 0xFFFFFFFFFFFFFFF8);
          v1116 = (void *)(((unint64_t)v1113 + v1979) & 0xFFFFFFFFFFFFFFF8);
          void *v1115 = *v1116;
          unint64_t v1117 = ((unint64_t)v1115 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1118 = ((unint64_t)v1116 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v1119 = *(void *)v1118;
          *(unsigned char *)(v1117 + 8) = *(unsigned char *)(v1118 + 8);
          *(void *)unint64_t v1117 = v1119;
          v1120 = (void *)(((unint64_t)v1115 + 31) & 0xFFFFFFFFFFFFFFF8);
          v1121 = (void *)(((unint64_t)v1116 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v1120 = *v1121;
          unint64_t v1122 = ((unint64_t)v1120 + 15) & 0xFFFFFFFFFFFFFFF8;
          v1123 = (uint64_t *)(((unint64_t)v1121 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v1124 = v1123[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v1124 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v1122 = *(_OWORD *)v1123;
          }
          else
          {
            uint64_t v1125 = *v1123;
            sub_24D3F9C18(*v1123, v1124);
            *(void *)unint64_t v1122 = v1125;
            *(void *)(v1122 + 8) = v1124;
          }
          unint64_t v1126 = (v1122 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1127 = ((unint64_t)v1123 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v1128 = *(void *)v1127;
          *(unsigned char *)(v1126 + 8) = *(unsigned char *)(v1127 + 8);
          *(void *)unint64_t v1126 = v1128;
          *(unsigned char *)(v1126 + 9) = *(unsigned char *)(v1127 + 9);
          unint64_t v1129 = (v1126 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v1130 = (v1127 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v1131 = *(_DWORD *)v1130;
          *(unsigned char *)(v1129 + 4) = *(unsigned char *)(v1130 + 4);
          *(_DWORD *)unint64_t v1129 = v1131;
          v1132 = (void *)((v1126 + 25) & 0xFFFFFFFFFFFFFFF8);
          v1133 = (void *)((v1127 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v1132 = *v1133;
          v1132[1] = v1133[1];
          unint64_t v1134 = v2108 + v2016;
          v1135 = (long long *)(v2058 + v2016);
          unint64_t v1136 = *(void *)(v2058 + v2016 + 16);
          if (v1136 >= 0xFFFFFFFF) {
            LODWORD(v1136) = -1;
          }
          int v1137 = v1136 - 1;
          swift_bridgeObjectRetain();
          uint64_t v1076 = v2085;
          if (v1137 < 0)
          {
            *(void *)unint64_t v1134 = *(void *)v1135;
            *(unsigned char *)(v1134 + 8) = *((unsigned char *)v1135 + 8);
            *(unsigned char *)(v1134 + 9) = *((unsigned char *)v1135 + 9);
            v1150 = (void *)*((void *)v1135 + 2);
            id v1151 = v1150;
            *(void *)(v1134 + 16) = v1150;
            v1152 = (void *)*((void *)v1135 + 3);
            id v1153 = v1152;
            *(void *)(v1134 + 24) = v1152;
            *(unsigned char *)(v1134 + 32) = *((unsigned char *)v1135 + 32);
            *(unsigned char *)(v1134 + 33) = *((unsigned char *)v1135 + 33);
            *(unsigned char *)(v1134 + 34) = *((unsigned char *)v1135 + 34);
            *(void *)(v1134 + 40) = *((void *)v1135 + 5);
            *(void *)(v1134 + 48) = *((void *)v1135 + 6);
            *(void *)(v1134 + 56) = *((void *)v1135 + 7);
            *(void *)(v1134 + 64) = *((void *)v1135 + 8);
            *(unsigned char *)(v1134 + 72) = *((unsigned char *)v1135 + 72);
            *(void *)(v1134 + 80) = *((void *)v1135 + 10);
            *(void *)(v1134 + 88) = *((void *)v1135 + 11);
            v2109 = (void *)*((void *)v1135 + 12);
            *(void *)(v1134 + 96) = v2109;
            *(unsigned char *)(v1134 + 104) = *((unsigned char *)v1135 + 104);
            *(unsigned char *)(v1134 + 105) = *((unsigned char *)v1135 + 105);
            *(void *)(v1134 + 112) = *((void *)v1135 + 14);
            *(void *)(v1134 + 120) = *((void *)v1135 + 15);
            *(void *)(v1134 + 128) = *((void *)v1135 + 16);
            *(void *)(v1134 + 136) = *((void *)v1135 + 17);
            *(void *)(v1134 + 144) = *((void *)v1135 + 18);
            *(void *)(v1134 + 152) = *((void *)v1135 + 19);
            *(void *)(v1134 + 160) = *((void *)v1135 + 20);
            *(void *)(v1134 + 168) = *((void *)v1135 + 21);
            *(unsigned char *)(v1134 + 176) = *((unsigned char *)v1135 + 176);
            *(void *)(v1134 + 184) = *((void *)v1135 + 23);
            uint64_t v1154 = *((void *)v1135 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v1155 = v2109;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v1154)
            {
              *(void *)(v1134 + 192) = v1154;
              *(void *)(v1134 + 200) = *((void *)v1135 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v1134 + 192) = v1135[12];
            }
            uint64_t v78 = a1;
            size_t v1077 = __n;
            uint64_t v1076 = v2085;
            unint64_t v1058 = v1961 + 7;
            unint64_t v1064 = v2029 + 2;
            *(void *)(v1134 + 208) = *((void *)v1135 + 26);
            *(void *)(v1134 + 216) = *((void *)v1135 + 27);
            *(void *)(v1134 + 224) = *((void *)v1135 + 28);
            *(void *)(v1134 + 232) = *((void *)v1135 + 29);
            *(void *)(v1134 + 240) = *((void *)v1135 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v1138 = *v1135;
            long long v1139 = v1135[1];
            long long v1140 = v1135[3];
            *(_OWORD *)(v1134 + 32) = v1135[2];
            *(_OWORD *)(v1134 + 48) = v1140;
            *(_OWORD *)unint64_t v1134 = v1138;
            *(_OWORD *)(v1134 + 16) = v1139;
            long long v1141 = v1135[4];
            long long v1142 = v1135[5];
            long long v1143 = v1135[7];
            *(_OWORD *)(v1134 + 96) = v1135[6];
            *(_OWORD *)(v1134 + 112) = v1143;
            *(_OWORD *)(v1134 + 64) = v1141;
            *(_OWORD *)(v1134 + 80) = v1142;
            long long v1144 = v1135[8];
            long long v1145 = v1135[9];
            long long v1146 = v1135[11];
            *(_OWORD *)(v1134 + 160) = v1135[10];
            *(_OWORD *)(v1134 + 176) = v1146;
            *(_OWORD *)(v1134 + 128) = v1144;
            *(_OWORD *)(v1134 + 144) = v1145;
            long long v1147 = v1135[12];
            long long v1148 = v1135[13];
            long long v1149 = v1135[14];
            *(void *)(v1134 + 240) = *((void *)v1135 + 30);
            *(_OWORD *)(v1134 + 208) = v1148;
            *(_OWORD *)(v1134 + 224) = v1149;
            *(_OWORD *)(v1134 + 192) = v1147;
            unint64_t v1064 = v2029 + 2;
          }
          v1171 = (_OWORD *)((v1134 + 255) & 0xFFFFFFFFFFFFFFF8);
          v1172 = (long long *)(((unint64_t)v1135 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v1173 = *v1172;
          *(_OWORD *)((char *)v1171 + 9) = *(long long *)((char *)v1172 + 9);
          _OWORD *v1171 = v1173;
          unint64_t v1174 = (v1134 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1175 = ((unint64_t)v1135 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v1176 = *(_OWORD *)v1175;
          *(unsigned char *)(v1174 + 16) = *(unsigned char *)(v1175 + 16);
          *(_OWORD *)unint64_t v1174 = v1176;
          v1177 = (void *)((v1134 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v1178 = ((unint64_t)v1135 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v1179 = *(void *)v1178;
          v1178 += 15;
          void *v1177 = v1179;
          v1180 = (void *)(((unint64_t)v1177 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v1181 = *(void *)(v1178 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v1182 = *(void *)((v1178 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v1181, v1182);
          void *v1180 = v1181;
          v1180[1] = v1182;
          size_t v1078 = v1985;
          size_t v1074 = v2068;
          v1075 = v2078;
          v1060 = v2050;
          if (v1962) {
            goto LABEL_1177;
          }
          goto LABEL_1107;
        }
        unint64_t v1063 = v1915;
        unint64_t v1065 = ((unint64_t)v1060 + v1976) & v1915;
        unint64_t v1066 = (v1943 + v1065) & v2005;
        if (v1958 == v1954)
        {
          v1067 = (const void *)((unint64_t)&a2[v2034 + v1059] & v1912);
          unint64_t v1068 = v1915;
          uint64_t v1062 = v1984;
          unint64_t v1064 = v2029 + 2;
          if (v1947 == v1958)
          {
            int v1061 = (*(uint64_t (**)(unint64_t))(v1970 + 48))((v1943 + v1065) & v2005);
LABEL_1104:
            unint64_t v1063 = v1068;
            v1060 = v1067;
            goto LABEL_1105;
          }
          v1071 = (unint64_t *)((v1974 + v1066) & 0xFFFFFFFFFFFFFFF8);
          if (v2014 > 0x7FFFFFFE)
          {
            int v1061 = (*(uint64_t (**)(unint64_t))(v1972 + 48))(((unint64_t)v1071 + v1966) & v2017);
            goto LABEL_1104;
          }
          unint64_t v1072 = *v1071;
        }
        else
        {
          unint64_t v1069 = v1066 + v2098;
          uint64_t v1062 = v1984;
          unint64_t v1064 = v2029 + 2;
          if ((v1932 & 0x80000000) == 0)
          {
            unint64_t v1070 = *(void *)(v1069 + 8);
            if (v1070 >= 0xFFFFFFFF) {
              LODWORD(v1070) = -1;
            }
            int v1061 = v1070 + 1;
            goto LABEL_1105;
          }
          v1067 = v1060;
          unint64_t v1068 = v1915;
          unint64_t v1073 = (v1983 + ((v2045 + v1069) & v2053)) & v2000;
          if (v1962 > 0x7FFFFFFD)
          {
            int v1061 = (*(uint64_t (**)(unint64_t))(v1981 + 48))(v1073);
            goto LABEL_1104;
          }
          unint64_t v1072 = *(void *)(((v1930 + ((v1980 + v1073) & v2000)) & 0xFFFFFFFFFFFFFFF8) + 8);
        }
        if (v1072 >= 0xFFFFFFFF) {
          LODWORD(v1072) = -1;
        }
        unint64_t v1063 = v1068;
        v1060 = v1067;
        if ((v1072 + 1) >= 2) {
          goto LABEL_1106;
        }
        goto LABEL_1109;
      }
      unint64_t v410 = (unint64_t)&a2[v1976] & v84;
      unint64_t v411 = (v410 + v2040 + v33) & v91;
      uint64_t v132 = v1988;
      uint64_t v130 = v2048;
      if (v1958 == v1954)
      {
        unint64_t v412 = v84;
        if (v1947 == v1958)
        {
          int v133 = (*(uint64_t (**)(unint64_t))(v1970 + 48))((v410 + v2040 + v33) & v91);
LABEL_1036:
          unint64_t v84 = v412;
          uint64_t v129 = v1948;
          goto LABEL_1037;
        }
        unint64_t v638 = (unint64_t *)((v1974 + v411) & 0xFFFFFFFFFFFFFFF8);
        if (v2014 > 0x7FFFFFFE)
        {
          int v133 = (*(uint64_t (**)(unint64_t))(v1972 + 48))(((unint64_t)v638 + v1966) & v92);
          goto LABEL_1036;
        }
        unint64_t v639 = *v638;
      }
      else
      {
        unint64_t v516 = v34 + v411;
        if ((v1932 & 0x80000000) == 0)
        {
          unint64_t v517 = *(void *)(v516 + 8);
          if (v517 >= 0xFFFFFFFF) {
            LODWORD(v517) = -1;
          }
          int v133 = v517 + 1;
          goto LABEL_1037;
        }
        unint64_t v412 = v84;
        unint64_t v781 = (v1983 + ((v2045 + v516) & v2053)) & v90;
        if (v1962 > 0x7FFFFFFD)
        {
          int v133 = (*(uint64_t (**)(unint64_t))(v1981 + 48))(v781);
          goto LABEL_1036;
        }
        unint64_t v639 = *(void *)(((v1930 + ((v1980 + v781) & v90)) & 0xFFFFFFFFFFFFFFF8) + 8);
      }
      if (v639 >= 0xFFFFFFFF) {
        LODWORD(v639) = -1;
      }
      unint64_t v84 = v412;
      uint64_t v129 = v1948;
      if ((v639 + 1) >= 2) {
        goto LABEL_1038;
      }
      goto LABEL_1041;
    case 7u:
      uint64_t v134 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v1987 + 16);
      uint64_t v2054 = ~v2051;
      v134(a1, a2, AssociatedTypeWitness);
      unint64_t v135 = ((unint64_t)a1 + v1977) & ~v2073;
      unint64_t v136 = (unint64_t)&a2[v1977] & ~v2073;
      v134((void *)v135, (unsigned __int8 *)v136, AssociatedTypeWitness);
      unint64_t v137 = (v135 + v2097 + v2035) & ~v2035;
      unint64_t v138 = (v136 + v2097 + v2035) & ~v2035;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1968 + 16))(v137, v138, v1967);
      long long v139 = (void *)((v1975 + v137) & 0xFFFFFFFFFFFFFFF8);
      long long v140 = (void *)((v1975 + v138) & 0xFFFFFFFFFFFFFFF8);
      *long long v139 = *v140;
      unint64_t v141 = ((unint64_t)v139 + v1963) & ~(unint64_t)v2002;
      unint64_t v142 = ((unint64_t)v140 + v1963) & ~(unint64_t)v2002;
      uint64_t v143 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
      swift_bridgeObjectRetain();
      v143(v141, v142, v1964);
      uint64_t v144 = (void *)((v1959 + v142) & 0xFFFFFFFFFFFFFFF8);
      int v145 = (void *)((v1959 + v141) & 0xFFFFFFFFFFFFFFF8);
      *int v145 = *v144;
      uint64_t v146 = (void *)(((unint64_t)v145 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v147 = (void *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v146 = *v147;
      v146[1] = v147[1];
      uint64_t v148 = (void *)(v2043 + v137);
      void *v148 = *(void *)(v2043 + v138);
      v148[1] = *(void *)(v2043 + v138 + 8);
      size_t v149 = (v2045 + v2043 + v137) & v2054;
      size_t v150 = (v2045 + v2043 + v138) & v2054;
      *(unsigned char *)size_t v149 = *(unsigned char *)v150;
      uint64_t v151 = v149 | 4;
      int v152 = *(_DWORD *)(v150 | 4);
      *(unsigned char *)(v151 + 4) = *(unsigned char *)((v150 | 4) + 4);
      *(_DWORD *)uint64_t v151 = v152;
      *(_WORD *)(v149 + 10) = *(_WORD *)(v150 + 0xA);
      size_t v2099 = v149;
      unint64_t v153 = (v1983 + v149) & v90;
      unint64_t v154 = (v1983 + v150) & v90;
      int v155 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v155(v153, v154, v1984);
      unint64_t v156 = (v1980 + v153) & v90;
      unint64_t v157 = (v1980 + v154) & v90;
      v155(v156, v157, v1984);
      id v158 = (unsigned char *)(v156 + v1985);
      *id v158 = *(unsigned char *)(v157 + v1985);
      v158[1] = *(unsigned char *)(v157 + v1985 + 1);
      v158[2] = *(unsigned char *)(v157 + v1985 + 2);
      v158[3] = *(unsigned char *)(v157 + v1985 + 3);
      v158[4] = *(unsigned char *)(v157 + v1985 + 4);
      unint64_t v159 = (v156 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v160 = (v157 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v159 = *(void *)v160;
      *(void *)(v159 + 8) = *(void *)(v160 + 8);
      *(unsigned char *)(v159 + 16) = *(unsigned char *)(v160 + 16);
      *(unsigned char *)(v159 + 17) = *(unsigned char *)(v160 + 17);
      *(unsigned char *)(v159 + 18) = *(unsigned char *)(v160 + 18);
      *(unsigned char *)(v159 + 19) = *(unsigned char *)(v160 + 19);
      unint64_t v161 = (v159 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v162 = (v160 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v161 = *(void *)v162;
      *(unsigned char *)(v161 + 8) = *(unsigned char *)(v162 + 8);
      *(unsigned char *)(v161 + 9) = *(unsigned char *)(v162 + 9);
      *(unsigned char *)(v161 + 10) = *(unsigned char *)(v162 + 10);
      *(unsigned char *)(v161 + 11) = *(unsigned char *)(v162 + 11);
      *(unsigned char *)(v161 + 12) = *(unsigned char *)(v162 + 12);
      uint64_t v163 = (void *)((v160 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v164 = (void *)((v159 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v164 = *v163;
      unint64_t v165 = ((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v166 = ((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v165 = *(void *)v166;
      *(unsigned char *)(v165 + 8) = *(unsigned char *)(v166 + 8);
      *(unsigned char *)(v165 + 9) = *(unsigned char *)(v166 + 9);
      uint64_t v167 = (void *)((v1978 + v165) & v90);
      unsigned int v168 = (const void *)((v1978 + v166) & v90);
      id v169 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
      swift_bridgeObjectRetain();
      if (v169(v168, 1, v1984))
      {
        memcpy(v167, v168, __n);
      }
      else
      {
        v155((unint64_t)v167, (unint64_t)v168, v1984);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v167, 0, 1, v1984);
      }
      uint64_t v430 = (void *)(((unint64_t)v167 + v1979) & 0xFFFFFFFFFFFFFFF8);
      __darwin_ino64_t v431 = (void *)(((unint64_t)v168 + v1979) & 0xFFFFFFFFFFFFFFF8);
      void *v430 = *v431;
      unint64_t v432 = ((unint64_t)v430 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v433 = ((unint64_t)v431 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v434 = *(void *)v433;
      *(unsigned char *)(v432 + 8) = *(unsigned char *)(v433 + 8);
      *(void *)unint64_t v432 = v434;
      __darwin_ino64_t v435 = (void *)(((unint64_t)v430 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v436 = (void *)(((unint64_t)v431 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v435 = *v436;
      unint64_t v437 = ((unint64_t)v435 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v438 = (uint64_t *)(((unint64_t)v436 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v439 = v438[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v439 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v437 = *(_OWORD *)v438;
      }
      else
      {
        uint64_t v450 = *v438;
        sub_24D3F9C18(*v438, v439);
        *(void *)unint64_t v437 = v450;
        *(void *)(v437 + 8) = v439;
      }
      unint64_t v451 = (v437 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v452 = ((unint64_t)v438 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v453 = *(void *)v452;
      *(unsigned char *)(v451 + 8) = *(unsigned char *)(v452 + 8);
      *(void *)unint64_t v451 = v453;
      *(unsigned char *)(v451 + 9) = *(unsigned char *)(v452 + 9);
      unint64_t v454 = (v451 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v455 = (v452 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v456 = *(_DWORD *)v455;
      *(unsigned char *)(v454 + 4) = *(unsigned char *)(v455 + 4);
      *(_DWORD *)unint64_t v454 = v456;
      uint64_t v457 = (void *)((v451 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v458 = (void *)((v452 + 25) & 0xFFFFFFFFFFFFFFF8);
      void *v457 = *v458;
      v457[1] = v458[1];
      unint64_t v459 = v2016 + v2099;
      unint64_t v460 = v2016 + v150;
      unint64_t v461 = *(void *)(v2016 + v150 + 16);
      if (v461 >= 0xFFFFFFFF) {
        LODWORD(v461) = -1;
      }
      int v462 = v461 - 1;
      swift_bridgeObjectRetain();
      uint64_t v463 = v1919;
      if (v462 < 0)
      {
        *(void *)unint64_t v459 = *(void *)v460;
        *(unsigned char *)(v459 + 8) = *(unsigned char *)(v460 + 8);
        *(unsigned char *)(v459 + 9) = *(unsigned char *)(v460 + 9);
        unint64_t v502 = *(void **)(v460 + 16);
        id v503 = v502;
        *(void *)(v459 + 16) = v502;
        uint64_t v504 = *(void **)(v460 + 24);
        id v505 = v504;
        *(void *)(v459 + 24) = v504;
        *(unsigned char *)(v459 + 32) = *(unsigned char *)(v460 + 32);
        *(unsigned char *)(v459 + 33) = *(unsigned char *)(v460 + 33);
        *(unsigned char *)(v459 + 34) = *(unsigned char *)(v460 + 34);
        *(void *)(v459 + 40) = *(void *)(v460 + 40);
        *(void *)(v459 + 48) = *(void *)(v460 + 48);
        *(void *)(v459 + 56) = *(void *)(v460 + 56);
        *(void *)(v459 + 64) = *(void *)(v460 + 64);
        *(unsigned char *)(v459 + 72) = *(unsigned char *)(v460 + 72);
        *(void *)(v459 + 80) = *(void *)(v460 + 80);
        *(void *)(v459 + 88) = *(void *)(v460 + 88);
        v2103 = *(void **)(v460 + 96);
        *(void *)(v459 + 96) = v2103;
        *(unsigned char *)(v459 + 104) = *(unsigned char *)(v460 + 104);
        *(unsigned char *)(v459 + 105) = *(unsigned char *)(v460 + 105);
        *(void *)(v459 + 112) = *(void *)(v460 + 112);
        *(void *)(v459 + 120) = *(void *)(v460 + 120);
        *(void *)(v459 + 128) = *(void *)(v460 + 128);
        *(void *)(v459 + 136) = *(void *)(v460 + 136);
        *(void *)(v459 + 144) = *(void *)(v460 + 144);
        *(void *)(v459 + 152) = *(void *)(v460 + 152);
        *(void *)(v459 + 160) = *(void *)(v460 + 160);
        *(void *)(v459 + 168) = *(void *)(v460 + 168);
        *(unsigned char *)(v459 + 176) = *(unsigned char *)(v460 + 176);
        *(void *)(v459 + 184) = *(void *)(v460 + 184);
        uint64_t v506 = *(void *)(v460 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v507 = v2103;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v506)
        {
          *(void *)(v459 + 192) = v506;
          *(void *)(v459 + 200) = *(void *)(v460 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v459 + 192) = *(_OWORD *)(v460 + 192);
        }
        uint64_t v463 = v1919;
        *(void *)(v459 + 208) = *(void *)(v460 + 208);
        *(void *)(v459 + 216) = *(void *)(v460 + 216);
        *(void *)(v459 + 224) = *(void *)(v460 + 224);
        *(void *)(v459 + 232) = *(void *)(v460 + 232);
        *(void *)(v459 + 240) = *(void *)(v460 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v464 = *(_OWORD *)v460;
        long long v465 = *(_OWORD *)(v460 + 16);
        long long v466 = *(_OWORD *)(v460 + 48);
        *(_OWORD *)(v459 + 32) = *(_OWORD *)(v460 + 32);
        *(_OWORD *)(v459 + 48) = v466;
        *(_OWORD *)unint64_t v459 = v464;
        *(_OWORD *)(v459 + 16) = v465;
        long long v467 = *(_OWORD *)(v460 + 64);
        long long v468 = *(_OWORD *)(v460 + 80);
        long long v469 = *(_OWORD *)(v460 + 112);
        *(_OWORD *)(v459 + 96) = *(_OWORD *)(v460 + 96);
        *(_OWORD *)(v459 + 112) = v469;
        *(_OWORD *)(v459 + 64) = v467;
        *(_OWORD *)(v459 + 80) = v468;
        long long v470 = *(_OWORD *)(v460 + 128);
        long long v471 = *(_OWORD *)(v460 + 144);
        long long v472 = *(_OWORD *)(v460 + 176);
        *(_OWORD *)(v459 + 160) = *(_OWORD *)(v460 + 160);
        *(_OWORD *)(v459 + 176) = v472;
        *(_OWORD *)(v459 + 128) = v470;
        *(_OWORD *)(v459 + 144) = v471;
        long long v473 = *(_OWORD *)(v460 + 192);
        long long v474 = *(_OWORD *)(v460 + 208);
        long long v475 = *(_OWORD *)(v460 + 224);
        *(void *)(v459 + 240) = *(void *)(v460 + 240);
        *(_OWORD *)(v459 + 208) = v474;
        *(_OWORD *)(v459 + 224) = v475;
        *(_OWORD *)(v459 + 192) = v473;
      }
      uint64_t v610 = (_OWORD *)((v459 + 255) & 0xFFFFFFFFFFFFFFF8);
      __darwin_ino64_t v611 = (long long *)((v460 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v612 = *v611;
      *(_OWORD *)((char *)v610 + 9) = *(long long *)((char *)v611 + 9);
      *uint64_t v610 = v612;
      unint64_t v613 = (v459 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v614 = (v460 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v615 = *(_OWORD *)v614;
      *(unsigned char *)(v613 + 16) = *(unsigned char *)(v614 + 16);
      *(_OWORD *)unint64_t v613 = v615;
      id v616 = (void *)((v459 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v617 = (v460 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v618 = *(void *)v617;
      v617 += 15;
      void *v616 = v618;
      id v619 = (void *)(((unint64_t)v616 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v620 = *(void *)(v617 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v621 = *(void *)((v617 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v620, v621);
      *id v619 = v620;
      v619[1] = v621;
      uint64_t v78 = a1;
      if (v463 > 3) {
        goto LABEL_485;
      }
      unsigned int v622 = ((1 << (8 * v463)) + 5) >> (8 * v463);
      if (v622 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v463) = 7;
      }
      else if (v622 <= 0xD6)
      {
LABEL_485:
        *((unsigned char *)a1 + v463) = 7;
      }
      else
      {
        *(_WORD *)((char *)a1 + v463) = 7;
      }
      return v78;
    case 8u:
      uint64_t v170 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v2048 + 16);
      unint64_t v2100 = ((((v1960 + ((v32 + 8 + (v1974 & 0xFFFFFFFFFFFFFFF8)) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16;
      uint64_t v2055 = ~v2051;
      uint64_t v2018 = ~v32;
      v170(a1, a2, v1988);
      unint64_t v171 = ((unint64_t)a1 + v1976) & ~v2066;
      unint64_t v172 = (unint64_t)&a2[v1976] & ~v2066;
      v170((void *)v171, (unsigned __int8 *)v172, v1988);
      unint64_t v173 = (v171 + v2040 + v33) & ~v33;
      unint64_t v174 = (v172 + v2040 + v33) & ~v33;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v1970 + 16))(v173, v174, v1969);
      uint64_t v175 = (void *)((v1974 + v173) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v176 = (void *)((v1974 + v174) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v175 = *v176;
      unint64_t v177 = ((unint64_t)v175 + v1966) & v2018;
      unint64_t v178 = ((unint64_t)v176 + v1966) & v2018;
      uint64_t v179 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
      swift_bridgeObjectRetain();
      v179(v177, v178, v1971);
      uint64_t v180 = (void *)((v1960 + v178) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v181 = (void *)((v1960 + v177) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v181 = *v180;
      uint64_t v182 = (void *)(((unint64_t)v181 + 15) & 0xFFFFFFFFFFFFFFF8);
      __darwin_ino64_t v183 = (void *)(((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v182 = *v183;
      v182[1] = v183[1];
      __darwin_ino64_t v184 = (void *)(v2100 + v173);
      *__darwin_ino64_t v184 = *(void *)(v2100 + v174);
      v184[1] = *(void *)(v2100 + v174 + 8);
      unint64_t v185 = (v2045 + v2100 + v173) & v2055;
      unint64_t v186 = (v2045 + v2100 + v174) & v2055;
      *(unsigned char *)unint64_t v185 = *(unsigned char *)v186;
      uint64_t v187 = v185 | 4;
      int v188 = *(_DWORD *)(v186 | 4);
      *(unsigned char *)(v187 + 4) = *(unsigned char *)((v186 | 4) + 4);
      *(_DWORD *)uint64_t v187 = v188;
      *(_WORD *)(v185 + 10) = *(_WORD *)(v186 + 0xA);
      unint64_t v2101 = v185;
      unint64_t v189 = (v1983 + v185) & v90;
      unint64_t v190 = (v1983 + v186) & v90;
      unint64_t v191 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v191(v189, v190, v1984);
      unint64_t v192 = (v1980 + v189) & v90;
      unint64_t v193 = (v1980 + v190) & v90;
      v191(v192, v193, v1984);
      char v194 = (unsigned char *)(v192 + v1985);
      *char v194 = *(unsigned char *)(v193 + v1985);
      v194[1] = *(unsigned char *)(v193 + v1985 + 1);
      v194[2] = *(unsigned char *)(v193 + v1985 + 2);
      v194[3] = *(unsigned char *)(v193 + v1985 + 3);
      v194[4] = *(unsigned char *)(v193 + v1985 + 4);
      unint64_t v195 = (v192 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v196 = (v193 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v195 = *(void *)v196;
      *(void *)(v195 + 8) = *(void *)(v196 + 8);
      *(unsigned char *)(v195 + 16) = *(unsigned char *)(v196 + 16);
      *(unsigned char *)(v195 + 17) = *(unsigned char *)(v196 + 17);
      *(unsigned char *)(v195 + 18) = *(unsigned char *)(v196 + 18);
      *(unsigned char *)(v195 + 19) = *(unsigned char *)(v196 + 19);
      unint64_t v197 = (v195 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v198 = (v196 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v197 = *(void *)v198;
      *(unsigned char *)(v197 + 8) = *(unsigned char *)(v198 + 8);
      *(unsigned char *)(v197 + 9) = *(unsigned char *)(v198 + 9);
      *(unsigned char *)(v197 + 10) = *(unsigned char *)(v198 + 10);
      *(unsigned char *)(v197 + 11) = *(unsigned char *)(v198 + 11);
      *(unsigned char *)(v197 + 12) = *(unsigned char *)(v198 + 12);
      id v199 = (void *)((v196 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v200 = (void *)((v195 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v200 = *v199;
      unint64_t v201 = ((unint64_t)v200 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v202 = ((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v201 = *(void *)v202;
      *(unsigned char *)(v201 + 8) = *(unsigned char *)(v202 + 8);
      *(unsigned char *)(v201 + 9) = *(unsigned char *)(v202 + 9);
      int v203 = (void *)((v1978 + v201) & v90);
      uint64_t v204 = (const void *)((v1978 + v202) & v90);
      uint64_t v205 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
      swift_bridgeObjectRetain();
      if (v205(v204, 1, v1984))
      {
        memcpy(v203, v204, __n);
      }
      else
      {
        v191((unint64_t)v203, (unint64_t)v204, v1984);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v203, 0, 1, v1984);
      }
      unint64_t v440 = (void *)(((unint64_t)v203 + v1979) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v441 = (void *)(((unint64_t)v204 + v1979) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v440 = *v441;
      unint64_t v442 = ((unint64_t)v440 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v443 = ((unint64_t)v441 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v444 = *(void *)v443;
      *(unsigned char *)(v442 + 8) = *(unsigned char *)(v443 + 8);
      *(void *)unint64_t v442 = v444;
      uint64_t v445 = (void *)(((unint64_t)v440 + 31) & 0xFFFFFFFFFFFFFFF8);
      int v446 = (void *)(((unint64_t)v441 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v445 = *v446;
      unint64_t v447 = ((unint64_t)v445 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v448 = (uint64_t *)(((unint64_t)v446 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v449 = v448[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v449 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v447 = *(_OWORD *)v448;
      }
      else
      {
        uint64_t v476 = *v448;
        sub_24D3F9C18(*v448, v449);
        *(void *)unint64_t v447 = v476;
        *(void *)(v447 + 8) = v449;
      }
      unint64_t v477 = (v447 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v478 = ((unint64_t)v448 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v479 = *(void *)v478;
      *(unsigned char *)(v477 + 8) = *(unsigned char *)(v478 + 8);
      *(void *)unint64_t v477 = v479;
      *(unsigned char *)(v477 + 9) = *(unsigned char *)(v478 + 9);
      unint64_t v480 = (v477 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v481 = (v478 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v482 = *(_DWORD *)v481;
      *(unsigned char *)(v480 + 4) = *(unsigned char *)(v481 + 4);
      *(_DWORD *)unint64_t v480 = v482;
      int v483 = (void *)((v477 + 25) & 0xFFFFFFFFFFFFFFF8);
      char v484 = (void *)((v478 + 25) & 0xFFFFFFFFFFFFFFF8);
      void *v483 = *v484;
      v483[1] = v484[1];
      unint64_t v485 = v2101 + v2016;
      unint64_t v486 = v186 + v2016;
      unint64_t v487 = *(void *)(v186 + v2016 + 16);
      if (v487 >= 0xFFFFFFFF) {
        LODWORD(v487) = -1;
      }
      int v488 = v487 - 1;
      swift_bridgeObjectRetain();
      uint64_t v489 = v1919;
      if (v488 < 0)
      {
        *(void *)unint64_t v485 = *(void *)v486;
        *(unsigned char *)(v485 + 8) = *(unsigned char *)(v486 + 8);
        *(unsigned char *)(v485 + 9) = *(unsigned char *)(v486 + 9);
        uint64_t v508 = *(void **)(v486 + 16);
        id v509 = v508;
        *(void *)(v485 + 16) = v508;
        uint64_t v510 = *(void **)(v486 + 24);
        id v511 = v510;
        *(void *)(v485 + 24) = v510;
        *(unsigned char *)(v485 + 32) = *(unsigned char *)(v486 + 32);
        *(unsigned char *)(v485 + 33) = *(unsigned char *)(v486 + 33);
        *(unsigned char *)(v485 + 34) = *(unsigned char *)(v486 + 34);
        *(void *)(v485 + 40) = *(void *)(v486 + 40);
        *(void *)(v485 + 48) = *(void *)(v486 + 48);
        *(void *)(v485 + 56) = *(void *)(v486 + 56);
        *(void *)(v485 + 64) = *(void *)(v486 + 64);
        *(unsigned char *)(v485 + 72) = *(unsigned char *)(v486 + 72);
        *(void *)(v485 + 80) = *(void *)(v486 + 80);
        *(void *)(v485 + 88) = *(void *)(v486 + 88);
        v2104 = *(void **)(v486 + 96);
        *(void *)(v485 + 96) = v2104;
        *(unsigned char *)(v485 + 104) = *(unsigned char *)(v486 + 104);
        *(unsigned char *)(v485 + 105) = *(unsigned char *)(v486 + 105);
        *(void *)(v485 + 112) = *(void *)(v486 + 112);
        *(void *)(v485 + 120) = *(void *)(v486 + 120);
        *(void *)(v485 + 128) = *(void *)(v486 + 128);
        *(void *)(v485 + 136) = *(void *)(v486 + 136);
        *(void *)(v485 + 144) = *(void *)(v486 + 144);
        *(void *)(v485 + 152) = *(void *)(v486 + 152);
        *(void *)(v485 + 160) = *(void *)(v486 + 160);
        *(void *)(v485 + 168) = *(void *)(v486 + 168);
        *(unsigned char *)(v485 + 176) = *(unsigned char *)(v486 + 176);
        *(void *)(v485 + 184) = *(void *)(v486 + 184);
        uint64_t v512 = *(void *)(v486 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v513 = v2104;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v512)
        {
          *(void *)(v485 + 192) = v512;
          *(void *)(v485 + 200) = *(void *)(v486 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v485 + 192) = *(_OWORD *)(v486 + 192);
        }
        uint64_t v489 = v1919;
        *(void *)(v485 + 208) = *(void *)(v486 + 208);
        *(void *)(v485 + 216) = *(void *)(v486 + 216);
        *(void *)(v485 + 224) = *(void *)(v486 + 224);
        *(void *)(v485 + 232) = *(void *)(v486 + 232);
        *(void *)(v485 + 240) = *(void *)(v486 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v490 = *(_OWORD *)v486;
        long long v491 = *(_OWORD *)(v486 + 16);
        long long v492 = *(_OWORD *)(v486 + 48);
        *(_OWORD *)(v485 + 32) = *(_OWORD *)(v486 + 32);
        *(_OWORD *)(v485 + 48) = v492;
        *(_OWORD *)unint64_t v485 = v490;
        *(_OWORD *)(v485 + 16) = v491;
        long long v493 = *(_OWORD *)(v486 + 64);
        long long v494 = *(_OWORD *)(v486 + 80);
        long long v495 = *(_OWORD *)(v486 + 112);
        *(_OWORD *)(v485 + 96) = *(_OWORD *)(v486 + 96);
        *(_OWORD *)(v485 + 112) = v495;
        *(_OWORD *)(v485 + 64) = v493;
        *(_OWORD *)(v485 + 80) = v494;
        long long v496 = *(_OWORD *)(v486 + 128);
        long long v497 = *(_OWORD *)(v486 + 144);
        long long v498 = *(_OWORD *)(v486 + 176);
        *(_OWORD *)(v485 + 160) = *(_OWORD *)(v486 + 160);
        *(_OWORD *)(v485 + 176) = v498;
        *(_OWORD *)(v485 + 128) = v496;
        *(_OWORD *)(v485 + 144) = v497;
        long long v499 = *(_OWORD *)(v486 + 192);
        long long v500 = *(_OWORD *)(v486 + 208);
        long long v501 = *(_OWORD *)(v486 + 224);
        *(void *)(v485 + 240) = *(void *)(v486 + 240);
        *(_OWORD *)(v485 + 208) = v500;
        *(_OWORD *)(v485 + 224) = v501;
        *(_OWORD *)(v485 + 192) = v499;
      }
      uint64_t v623 = (_OWORD *)((v485 + 255) & 0xFFFFFFFFFFFFFFF8);
      v624 = (long long *)((v486 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v625 = *v624;
      *(_OWORD *)((char *)v623 + 9) = *(long long *)((char *)v624 + 9);
      *uint64_t v623 = v625;
      unint64_t v626 = (v485 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v627 = (v486 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v628 = *(_OWORD *)v627;
      *(unsigned char *)(v626 + 16) = *(unsigned char *)(v627 + 16);
      *(_OWORD *)unint64_t v626 = v628;
      v629 = (void *)((v485 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v630 = (v486 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v631 = *(void *)v630;
      v630 += 15;
      void *v629 = v631;
      uint64_t v632 = (void *)(((unint64_t)v629 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v633 = *(void *)(v630 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v634 = *(void *)((v630 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v633, v634);
      void *v632 = v633;
      v632[1] = v634;
      uint64_t v78 = a1;
      if (v489 > 3) {
        goto LABEL_493;
      }
      unsigned int v635 = ((1 << (8 * v489)) + 5) >> (8 * v489);
      if (v635 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v489) = 8;
      }
      else if (v635 <= 0xD6)
      {
LABEL_493:
        *((unsigned char *)a1 + v489) = 8;
      }
      else
      {
        *(_WORD *)((char *)a1 + v489) = 8;
      }
      return v78;
    case 9u:
      unsigned int v206 = a2[v2029];
      unsigned int v207 = v206 - 2;
      if (v206 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v210 = v2048;
        uint64_t v211 = v1987;
        uint64_t v209 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v208 = v2029;
        }
        else {
          uint64_t v208 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v209 = v1919;
        uint64_t v210 = v2048;
        uint64_t v211 = v1987;
        switch(v208)
        {
          case 1:
            int v212 = *a2;
            goto LABEL_568;
          case 2:
            int v212 = *(unsigned __int16 *)a2;
            goto LABEL_568;
          case 3:
            int v212 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_568;
          case 4:
            int v212 = *(_DWORD *)a2;
LABEL_568:
            if (v2029 < 4) {
              unsigned int v206 = (v212 | (v207 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v206 = v212 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v659 = v206 == 1;
      if (v206 == 1) {
        uint64_t v660 = v210;
      }
      else {
        uint64_t v660 = v211;
      }
      (*(void (**)(unsigned char *))(v660 + 16))(v78);
      v78[v2029] = v659;
      if (v209 > 3) {
        goto LABEL_575;
      }
      unsigned int v661 = ((1 << (8 * v209)) + 5) >> (8 * v209);
      if (v661 > 0xFFD6)
      {
        *(_DWORD *)&v78[v209] = 9;
      }
      else if (v661 <= 0xD6)
      {
LABEL_575:
        v78[v209] = 9;
      }
      else
      {
        *(_WORD *)&v78[v209] = 9;
      }
      return v78;
    case 0xAu:
      unsigned int v213 = a2[v2029];
      unsigned int v214 = v213 - 2;
      if (v213 < 2)
      {
        unint64_t v217 = ~v2030;
        uint64_t v215 = v1919;
        uint64_t v78 = a1;
        uint64_t v218 = v1988;
        uint64_t v219 = AssociatedTypeWitness;
        uint64_t v220 = v2048;
        uint64_t v221 = v1987;
      }
      else
      {
        uint64_t v215 = v1919;
        if (v2029 <= 3) {
          uint64_t v216 = v2029;
        }
        else {
          uint64_t v216 = 4;
        }
        uint64_t v78 = a1;
        unint64_t v217 = ~v2030;
        uint64_t v218 = v1988;
        uint64_t v219 = AssociatedTypeWitness;
        uint64_t v220 = v2048;
        uint64_t v221 = v1987;
        switch(v216)
        {
          case 1:
            int v222 = *a2;
            goto LABEL_583;
          case 2:
            int v222 = *(unsigned __int16 *)a2;
            goto LABEL_583;
          case 3:
            int v222 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_583;
          case 4:
            int v222 = *(_DWORD *)a2;
LABEL_583:
            if (v2029 < 4) {
              unsigned int v213 = (v222 | (v214 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v213 = v222 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v662 = v213 == 1;
      if (v213 == 1) {
        uint64_t v663 = v220;
      }
      else {
        uint64_t v663 = v221;
      }
      if (v213 == 1) {
        uint64_t v664 = v218;
      }
      else {
        uint64_t v664 = v219;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v663 + 16))(v78, a2, v664);
      v78[v2029] = v662;
      unint64_t v665 = v217;
      unint64_t v666 = (char *)((unint64_t)&v78[v1982] & v217);
      unsigned int v667 = (unsigned __int8 *)((unint64_t)&a2[v1982] & v665);
      unsigned int v668 = v667[v2029];
      if (v668 > 1)
      {
        size_t v669 = v2047;
        memcpy(v666, v667, v2047);
      }
      else
      {
        if (v668 == 1)
        {
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v220 + 16))(v666, v667, v218);
          v666[v2029] = 1;
        }
        else
        {
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v221 + 16))(v666, v667, v219);
          v666[v2029] = 0;
        }
        size_t v669 = v2047;
      }
      uint64_t v670 = &v666[v669];
      *uint64_t v670 = v667[v669];
      v670[1] = v667[v669 + 1];
      if (v215 > 3) {
        goto LABEL_599;
      }
      unsigned int v671 = ((1 << (8 * v215)) + 5) >> (8 * v215);
      if (v671 > 0xFFD6)
      {
        *(_DWORD *)&v78[v215] = 10;
      }
      else if (v671 <= 0xD6)
      {
LABEL_599:
        v78[v215] = 10;
      }
      else
      {
        *(_WORD *)&v78[v215] = 10;
      }
      return v78;
    case 0xBu:
      unsigned int v223 = a2[v2029];
      unsigned int v224 = v223 - 2;
      if (v223 < 2)
      {
        unint64_t v227 = ~v2030;
        uint64_t v225 = v1919;
        uint64_t v78 = a1;
        uint64_t v228 = v1988;
        uint64_t v229 = AssociatedTypeWitness;
        uint64_t v230 = v2048;
        uint64_t v231 = v1987;
      }
      else
      {
        uint64_t v225 = v1919;
        if (v2029 <= 3) {
          uint64_t v226 = v2029;
        }
        else {
          uint64_t v226 = 4;
        }
        uint64_t v78 = a1;
        unint64_t v227 = ~v2030;
        uint64_t v228 = v1988;
        uint64_t v229 = AssociatedTypeWitness;
        uint64_t v230 = v2048;
        uint64_t v231 = v1987;
        switch(v226)
        {
          case 1:
            int v232 = *a2;
            goto LABEL_607;
          case 2:
            int v232 = *(unsigned __int16 *)a2;
            goto LABEL_607;
          case 3:
            int v232 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_607;
          case 4:
            int v232 = *(_DWORD *)a2;
LABEL_607:
            if (v2029 < 4) {
              unsigned int v223 = (v232 | (v224 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v223 = v232 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v672 = v223 == 1;
      if (v223 == 1) {
        uint64_t v673 = v230;
      }
      else {
        uint64_t v673 = v231;
      }
      if (v223 == 1) {
        uint64_t v674 = v228;
      }
      else {
        uint64_t v674 = v229;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v673 + 16))(v78, a2, v674);
      v78[v2029] = v672;
      unint64_t v675 = v227;
      unint64_t v676 = (char *)((unint64_t)&v78[v1982] & v227);
      uint64_t v677 = (unsigned __int8 *)((unint64_t)&a2[v1982] & v675);
      unsigned int v678 = v677[v2029];
      if (v678 > 1)
      {
        size_t v679 = v2047;
        memcpy(v676, v677, v2047);
      }
      else
      {
        if (v678 == 1)
        {
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v230 + 16))(v676, v677, v228);
          v676[v2029] = 1;
        }
        else
        {
          (*(void (**)(char *, unsigned __int8 *, uint64_t))(v231 + 16))(v676, v677, v229);
          v676[v2029] = 0;
        }
        size_t v679 = v2047;
      }
      unsigned int v680 = &v676[v679];
      *unsigned int v680 = v677[v679];
      v680[1] = v677[v679 + 1];
      if (v225 > 3) {
        goto LABEL_623;
      }
      unsigned int v681 = ((1 << (8 * v225)) + 5) >> (8 * v225);
      if (v681 > 0xFFD6)
      {
        *(_DWORD *)&v78[v225] = 11;
      }
      else if (v681 <= 0xD6)
      {
LABEL_623:
        v78[v225] = 11;
      }
      else
      {
        *(_WORD *)&v78[v225] = 11;
      }
      return v78;
    case 0xCu:
      unsigned int v233 = a2[v2029];
      unsigned int v234 = v233 - 2;
      if (v233 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v238 = v1988;
        uint64_t v239 = AssociatedTypeWitness;
        size_t v237 = v2047;
        uint64_t v236 = v2048;
        uint64_t v240 = v1987;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v235 = v2029;
        }
        else {
          uint64_t v235 = 4;
        }
        uint64_t v78 = a1;
        size_t v237 = v2047;
        uint64_t v236 = v2048;
        uint64_t v238 = v1988;
        uint64_t v239 = AssociatedTypeWitness;
        uint64_t v240 = v1987;
        switch(v235)
        {
          case 1:
            int v241 = *a2;
            goto LABEL_631;
          case 2:
            int v241 = *(unsigned __int16 *)a2;
            goto LABEL_631;
          case 3:
            int v241 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_631;
          case 4:
            int v241 = *(_DWORD *)a2;
LABEL_631:
            if (v2029 < 4) {
              unsigned int v233 = (v241 | (v234 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v233 = v241 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v682 = v233 == 1;
      if (v233 == 1) {
        uint64_t v683 = v236;
      }
      else {
        uint64_t v683 = v240;
      }
      if (v233 == 1) {
        uint64_t v684 = v238;
      }
      else {
        uint64_t v684 = v239;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v683 + 16))(v78, a2, v684);
      v78[v2029] = v682;
      v78[v237] = a2[v237];
      uint64_t v685 = *(void **)((unint64_t)&a2[v1973 + 7] & 0xFFFFFFFFFFFFFFF8);
      id v686 = v685;
      *(void *)((unint64_t)&v78[v1973 + 7] & 0xFFFFFFFFFFFFFFF8) = v685;
      if (v1919 > 3) {
        goto LABEL_641;
      }
      unsigned int v687 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v687 > 0xFFD6)
      {
        *(_DWORD *)&v78[v1919] = 12;
      }
      else if (v687 <= 0xD6)
      {
LABEL_641:
        v78[v1919] = 12;
      }
      else
      {
        *(_WORD *)&v78[v1919] = 12;
      }
      return v78;
    case 0xDu:
      unsigned int v242 = a2[v2029];
      unsigned int v243 = v242 - 2;
      if (v242 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v247 = v1988;
        uint64_t v248 = AssociatedTypeWitness;
        size_t v246 = v2047;
        uint64_t v245 = v2048;
        uint64_t v249 = v1987;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v244 = v2029;
        }
        else {
          uint64_t v244 = 4;
        }
        uint64_t v78 = a1;
        size_t v246 = v2047;
        uint64_t v245 = v2048;
        uint64_t v247 = v1988;
        uint64_t v248 = AssociatedTypeWitness;
        uint64_t v249 = v1987;
        switch(v244)
        {
          case 1:
            int v250 = *a2;
            goto LABEL_649;
          case 2:
            int v250 = *(unsigned __int16 *)a2;
            goto LABEL_649;
          case 3:
            int v250 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_649;
          case 4:
            int v250 = *(_DWORD *)a2;
LABEL_649:
            if (v2029 < 4) {
              unsigned int v242 = (v250 | (v243 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v242 = v250 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v688 = v242 == 1;
      if (v242 == 1) {
        uint64_t v689 = v245;
      }
      else {
        uint64_t v689 = v249;
      }
      if (v242 == 1) {
        uint64_t v690 = v247;
      }
      else {
        uint64_t v690 = v248;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v689 + 16))(v78, a2, v690);
      v78[v2029] = v688;
      v78[v246] = a2[v246];
      if (v1919 > 3) {
        goto LABEL_659;
      }
      unsigned int v691 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v691 > 0xFFD6)
      {
        *(_DWORD *)&v78[v1919] = 13;
      }
      else if (v691 <= 0xD6)
      {
LABEL_659:
        v78[v1919] = 13;
      }
      else
      {
        *(_WORD *)&v78[v1919] = 13;
      }
      return v78;
    case 0xEu:
      unsigned int v251 = a2[v2029];
      unsigned int v252 = v251 - 2;
      if (v251 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v256 = v1988;
        uint64_t v257 = AssociatedTypeWitness;
        size_t v255 = v2047;
        uint64_t v254 = v2048;
        uint64_t v258 = v1987;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v253 = v2029;
        }
        else {
          uint64_t v253 = 4;
        }
        uint64_t v78 = a1;
        size_t v255 = v2047;
        uint64_t v254 = v2048;
        uint64_t v256 = v1988;
        uint64_t v257 = AssociatedTypeWitness;
        uint64_t v258 = v1987;
        switch(v253)
        {
          case 1:
            int v259 = *a2;
            goto LABEL_667;
          case 2:
            int v259 = *(unsigned __int16 *)a2;
            goto LABEL_667;
          case 3:
            int v259 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_667;
          case 4:
            int v259 = *(_DWORD *)a2;
LABEL_667:
            if (v2029 < 4) {
              unsigned int v251 = (v259 | (v252 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v251 = v259 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v692 = v251 == 1;
      if (v251 == 1) {
        uint64_t v693 = v254;
      }
      else {
        uint64_t v693 = v258;
      }
      if (v251 == 1) {
        uint64_t v694 = v256;
      }
      else {
        uint64_t v694 = v257;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v693 + 16))(v78, a2, v694);
      v78[v2029] = v692;
      uint64_t v695 = *(void **)((unint64_t)&a2[v255 + 7] & 0xFFFFFFFFFFFFFFF8);
      id v696 = v695;
      *(void *)((unint64_t)&v78[v255 + 7] & 0xFFFFFFFFFFFFFFF8) = v695;
      if (v1919 > 3) {
        goto LABEL_677;
      }
      unsigned int v697 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v697 > 0xFFD6)
      {
        *(_DWORD *)&v78[v1919] = 14;
      }
      else if (v697 <= 0xD6)
      {
LABEL_677:
        v78[v1919] = 14;
      }
      else
      {
        *(_WORD *)&v78[v1919] = 14;
      }
      return v78;
    case 0xFu:
      unsigned int v260 = a2[v2029];
      unsigned int v261 = v260 - 2;
      if (v260 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v265 = v1988;
        uint64_t v266 = AssociatedTypeWitness;
        size_t v264 = v2047;
        uint64_t v263 = v2048;
        uint64_t v267 = v1987;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v262 = v2029;
        }
        else {
          uint64_t v262 = 4;
        }
        uint64_t v78 = a1;
        size_t v264 = v2047;
        uint64_t v263 = v2048;
        uint64_t v265 = v1988;
        uint64_t v266 = AssociatedTypeWitness;
        uint64_t v267 = v1987;
        switch(v262)
        {
          case 1:
            int v268 = *a2;
            goto LABEL_685;
          case 2:
            int v268 = *(unsigned __int16 *)a2;
            goto LABEL_685;
          case 3:
            int v268 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_685;
          case 4:
            int v268 = *(_DWORD *)a2;
LABEL_685:
            if (v2029 < 4) {
              unsigned int v260 = (v268 | (v261 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v260 = v268 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v698 = v260 == 1;
      if (v260 == 1) {
        uint64_t v699 = v263;
      }
      else {
        uint64_t v699 = v267;
      }
      if (v260 == 1) {
        uint64_t v700 = v265;
      }
      else {
        uint64_t v700 = v266;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v699 + 16))(v78, a2, v700);
      v78[v2029] = v698;
      uint64_t v701 = *(void **)((unint64_t)&a2[v264 + 7] & 0xFFFFFFFFFFFFFFF8);
      id v702 = v701;
      *(void *)((unint64_t)&v78[v264 + 7] & 0xFFFFFFFFFFFFFFF8) = v701;
      if (v1919 > 3) {
        goto LABEL_695;
      }
      unsigned int v703 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v703 > 0xFFD6)
      {
        *(_DWORD *)&v78[v1919] = 15;
      }
      else if (v703 <= 0xD6)
      {
LABEL_695:
        v78[v1919] = 15;
      }
      else
      {
        *(_WORD *)&v78[v1919] = 15;
      }
      return v78;
    case 0x10u:
      uint64_t v78 = a1;
      *a1 = *(void *)a2;
      unsigned int v269 = (uint64_t *)(a2 + 8);
      unint64_t v270 = *((void *)a2 + 2);
      if (v270 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 1) = *(_OWORD *)v269;
      }
      else
      {
        uint64_t v413 = *v269;
        sub_24D3F9C18(*v269, *((void *)a2 + 2));
        a1[1] = v413;
        a1[2] = v270;
      }
      *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 24);
      *((unsigned char *)a1 + 40) = a2[40];
      a1[6] = *((void *)a2 + 6);
      if (v1919 > 3) {
        goto LABEL_362;
      }
      unsigned int v419 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v419 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v1919) = 16;
      }
      else if (v419 <= 0xD6)
      {
LABEL_362:
        *((unsigned char *)a1 + v1919) = 16;
      }
      else
      {
        *(_WORD *)((char *)a1 + v1919) = 16;
      }
      return v78;
    case 0x11u:
      unsigned int v271 = a2[v2029];
      unsigned int v272 = v271 - 2;
      if (v271 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v275 = v2048;
        uint64_t v276 = v1987;
        uint64_t v274 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v273 = v2029;
        }
        else {
          uint64_t v273 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v274 = v1919;
        uint64_t v275 = v2048;
        uint64_t v276 = v1987;
        switch(v273)
        {
          case 1:
            int v277 = *a2;
            goto LABEL_703;
          case 2:
            int v277 = *(unsigned __int16 *)a2;
            goto LABEL_703;
          case 3:
            int v277 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_703;
          case 4:
            int v277 = *(_DWORD *)a2;
LABEL_703:
            if (v2029 < 4) {
              unsigned int v271 = (v277 | (v272 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v271 = v277 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v704 = v271 == 1;
      if (v271 == 1) {
        uint64_t v705 = v275;
      }
      else {
        uint64_t v705 = v276;
      }
      (*(void (**)(unsigned char *))(v705 + 16))(v78);
      v78[v2029] = v704;
      if (v274 > 3) {
        goto LABEL_710;
      }
      unsigned int v706 = ((1 << (8 * v274)) + 5) >> (8 * v274);
      if (v706 > 0xFFD6)
      {
        *(_DWORD *)&v78[v274] = 17;
      }
      else if (v706 <= 0xD6)
      {
LABEL_710:
        v78[v274] = 17;
      }
      else
      {
        *(_WORD *)&v78[v274] = 17;
      }
      return v78;
    case 0x12u:
      uint64_t v78 = a1;
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v1987 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v2048 + 16))(((unint64_t)a1 + v1953) & ~v2066, (unint64_t)&a2[v1953] & ~v2066, v1988);
      if (v1919 > 3) {
        goto LABEL_227;
      }
      unsigned int v414 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v414 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v1919) = 18;
      }
      else if (v414 <= 0xD6)
      {
LABEL_227:
        *((unsigned char *)a1 + v1919) = 18;
      }
      else
      {
        *(_WORD *)((char *)a1 + v1919) = 18;
      }
      return v78;
    case 0x13u:
      uint64_t v78 = a1;
      *(unsigned char *)a1 = *a2;
      uint64_t v278 = ((unint64_t)a1 + v2030 + 1) & v85;
      uint64_t v279 = (unsigned __int8 *)((unint64_t)&a2[v2030 + 1] & v85);
      unsigned int v280 = v279[v2029];
      unsigned int v281 = v280 - 2;
      if (v280 < 2)
      {
        uint64_t v284 = v2048;
        uint64_t v285 = v1987;
        uint64_t v283 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v282 = v2029;
        }
        else {
          uint64_t v282 = 4;
        }
        uint64_t v283 = v1919;
        uint64_t v284 = v2048;
        uint64_t v285 = v1987;
        switch(v282)
        {
          case 1:
            int v286 = *v279;
            goto LABEL_718;
          case 2:
            int v286 = *(unsigned __int16 *)v279;
            goto LABEL_718;
          case 3:
            int v286 = *(unsigned __int16 *)v279 | (v279[2] << 16);
            goto LABEL_718;
          case 4:
            int v286 = *(_DWORD *)v279;
LABEL_718:
            if (v2029 < 4) {
              unsigned int v280 = (v286 | (v281 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v280 = v286 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v707 = v280 == 1;
      if (v280 == 1) {
        uint64_t v708 = v284;
      }
      else {
        uint64_t v708 = v285;
      }
      (*(void (**)(uint64_t))(v708 + 16))(v278);
      *(unsigned char *)(v278 + v2029) = v707;
      if (v283 > 3) {
        goto LABEL_725;
      }
      unsigned int v709 = ((1 << (8 * v283)) + 5) >> (8 * v283);
      if (v709 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v283) = 19;
      }
      else if (v709 <= 0xD6)
      {
LABEL_725:
        *((unsigned char *)a1 + v283) = 19;
      }
      else
      {
        *(_WORD *)((char *)a1 + v283) = 19;
      }
      return v78;
    case 0x14u:
      uint64_t v78 = a1;
      *a1 = *(void *)a2;
      swift_retain();
      if (v1919 > 3) {
        goto LABEL_235;
      }
      unsigned int v415 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v415 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v1919) = 20;
      }
      else if (v415 <= 0xD6)
      {
LABEL_235:
        *((unsigned char *)a1 + v1919) = 20;
      }
      else
      {
        *(_WORD *)((char *)a1 + v1919) = 20;
      }
      return v78;
    case 0x15u:
      uint64_t v78 = a1;
      *a1 = *(void *)a2;
      swift_retain();
      if (v1919 > 3) {
        goto LABEL_237;
      }
      unsigned int v416 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v416 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v1919) = 21;
      }
      else if (v416 <= 0xD6)
      {
LABEL_237:
        *((unsigned char *)a1 + v1919) = 21;
      }
      else
      {
        *(_WORD *)((char *)a1 + v1919) = 21;
      }
      return v78;
    case 0x16u:
      uint64_t v78 = a1;
      *(unsigned char *)a1 = *a2;
      if (v1919 > 3) {
        goto LABEL_239;
      }
      unsigned int v417 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v417 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v1919) = 22;
      }
      else if (v417 <= 0xD6)
      {
LABEL_239:
        *((unsigned char *)a1 + v1919) = 22;
      }
      else
      {
        *(_WORD *)((char *)a1 + v1919) = 22;
      }
      return v78;
    case 0x17u:
      uint64_t v78 = a1;
      *(unsigned char *)a1 = *a2;
      if (v1919 > 3) {
        goto LABEL_241;
      }
      unsigned int v418 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v418 > 0xFFD6)
      {
        *(_DWORD *)((char *)a1 + v1919) = 23;
      }
      else if (v418 <= 0xD6)
      {
LABEL_241:
        *((unsigned char *)a1 + v1919) = 23;
      }
      else
      {
        *(_WORD *)((char *)a1 + v1919) = 23;
      }
      return v78;
    case 0x18u:
      unsigned int v287 = a2[v2029];
      unsigned int v288 = v287 - 2;
      if (v287 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v291 = v2048;
        uint64_t v292 = v1987;
        uint64_t v290 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v289 = v2029;
        }
        else {
          uint64_t v289 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v290 = v1919;
        uint64_t v291 = v2048;
        uint64_t v292 = v1987;
        switch(v289)
        {
          case 1:
            int v293 = *a2;
            goto LABEL_733;
          case 2:
            int v293 = *(unsigned __int16 *)a2;
            goto LABEL_733;
          case 3:
            int v293 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_733;
          case 4:
            int v293 = *(_DWORD *)a2;
LABEL_733:
            if (v2029 < 4) {
              unsigned int v287 = (v293 | (v288 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v287 = v293 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v710 = v287 == 1;
      if (v287 == 1) {
        uint64_t v711 = v291;
      }
      else {
        uint64_t v711 = v292;
      }
      (*(void (**)(unsigned char *))(v711 + 16))(v78);
      v78[v2029] = v710;
      if (v290 > 3) {
        goto LABEL_740;
      }
      unsigned int v712 = ((1 << (8 * v290)) + 5) >> (8 * v290);
      if (v712 > 0xFFD6)
      {
        *(_DWORD *)&v78[v290] = 24;
      }
      else if (v712 <= 0xD6)
      {
LABEL_740:
        v78[v290] = 24;
      }
      else
      {
        *(_WORD *)&v78[v290] = 24;
      }
      return v78;
    case 0x19u:
      unsigned int v294 = a2[v2029];
      unsigned int v295 = v294 - 2;
      if (v294 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v298 = v2048;
        uint64_t v299 = v1987;
        uint64_t v297 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v296 = v2029;
        }
        else {
          uint64_t v296 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v297 = v1919;
        uint64_t v298 = v2048;
        uint64_t v299 = v1987;
        switch(v296)
        {
          case 1:
            int v300 = *a2;
            goto LABEL_748;
          case 2:
            int v300 = *(unsigned __int16 *)a2;
            goto LABEL_748;
          case 3:
            int v300 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_748;
          case 4:
            int v300 = *(_DWORD *)a2;
LABEL_748:
            if (v2029 < 4) {
              unsigned int v294 = (v300 | (v295 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v294 = v300 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v713 = v294 == 1;
      if (v294 == 1) {
        uint64_t v714 = v298;
      }
      else {
        uint64_t v714 = v299;
      }
      (*(void (**)(unsigned char *))(v714 + 16))(v78);
      v78[v2029] = v713;
      if (v297 > 3) {
        goto LABEL_755;
      }
      unsigned int v715 = ((1 << (8 * v297)) + 5) >> (8 * v297);
      if (v715 > 0xFFD6)
      {
        *(_DWORD *)&v78[v297] = 25;
      }
      else if (v715 <= 0xD6)
      {
LABEL_755:
        v78[v297] = 25;
      }
      else
      {
        *(_WORD *)&v78[v297] = 25;
      }
      return v78;
    case 0x1Au:
      unsigned int v301 = a2[v2029];
      unsigned int v302 = v301 - 2;
      if (v301 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v305 = v2048;
        uint64_t v306 = v1987;
        uint64_t v304 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v303 = v2029;
        }
        else {
          uint64_t v303 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v304 = v1919;
        uint64_t v305 = v2048;
        uint64_t v306 = v1987;
        switch(v303)
        {
          case 1:
            int v307 = *a2;
            goto LABEL_763;
          case 2:
            int v307 = *(unsigned __int16 *)a2;
            goto LABEL_763;
          case 3:
            int v307 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_763;
          case 4:
            int v307 = *(_DWORD *)a2;
LABEL_763:
            if (v2029 < 4) {
              unsigned int v301 = (v307 | (v302 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v301 = v307 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v716 = v301 == 1;
      if (v301 == 1) {
        uint64_t v717 = v305;
      }
      else {
        uint64_t v717 = v306;
      }
      (*(void (**)(unsigned char *))(v717 + 16))(v78);
      v78[v2029] = v716;
      if (v304 > 3) {
        goto LABEL_770;
      }
      unsigned int v718 = ((1 << (8 * v304)) + 5) >> (8 * v304);
      if (v718 > 0xFFD6)
      {
        *(_DWORD *)&v78[v304] = 26;
      }
      else if (v718 <= 0xD6)
      {
LABEL_770:
        v78[v304] = 26;
      }
      else
      {
        *(_WORD *)&v78[v304] = 26;
      }
      return v78;
    case 0x1Bu:
      uint64_t v308 = ~v2034;
      unint64_t v2001 = ~(unint64_t)v1998;
      unint64_t v309 = v1945;
      unsigned int v310 = a2[v1945];
      unsigned int v311 = v310 - 2;
      if (v310 < 2)
      {
        uint64_t v78 = a1;
        unint64_t v313 = v52;
      }
      else
      {
        if (v1945 <= 3) {
          uint64_t v312 = v1945;
        }
        else {
          uint64_t v312 = 4;
        }
        uint64_t v78 = a1;
        unint64_t v313 = v52;
        uint64_t v87 = ~v2073;
        switch(v312)
        {
          case 1:
            int v314 = *a2;
            goto LABEL_778;
          case 2:
            int v314 = *(unsigned __int16 *)a2;
            goto LABEL_778;
          case 3:
            int v314 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            uint64_t v87 = ~v2073;
            goto LABEL_778;
          case 4:
            int v314 = *(_DWORD *)a2;
LABEL_778:
            if (v1945 < 4)
            {
              uint64_t v87 = ~v2073;
              unsigned int v310 = (v314 | (v311 << (8 * v1945))) + 2;
            }
            else
            {
              unsigned int v310 = v314 + 2;
            }
            break;
          default:
            break;
        }
      }
      if (v310 == 1)
      {
        unsigned int v719 = a2[v1935];
        unsigned int v720 = v719 - 8;
        if (v719 >= 8)
        {
          if (v1935 <= 3) {
            uint64_t v721 = v1935;
          }
          else {
            uint64_t v721 = 4;
          }
          switch(v721)
          {
            case 1:
              int v722 = *a2;
              goto LABEL_1230;
            case 2:
              int v722 = *(unsigned __int16 *)a2;
              goto LABEL_1230;
            case 3:
              int v722 = *(unsigned __int16 *)a2 | (a2[2] << 16);
              goto LABEL_1230;
            case 4:
              int v722 = *(_DWORD *)a2;
LABEL_1230:
              if (v1935 < 4) {
                unsigned int v719 = (v722 | (v720 << (8 * v1935))) + 8;
              }
              else {
                unsigned int v719 = v722 + 8;
              }
              break;
            default:
              break;
          }
        }
        uint64_t v1186 = ~v63;
        switch(v719)
        {
          case 1u:
            uint64_t v1914 = v87;
            uint64_t v1192 = ~v2066;
            uint64_t v2008 = ~v33;
            unint64_t v1993 = ~(unint64_t)v2002;
            uint64_t v2021 = v92;
            uint64_t v2060 = ~v2051;
            size_t v2070 = v36;
            unint64_t v2111 = v34;
            v1193 = *(void (**)(void))(v2048 + 16);
            ((void (*)(unsigned char *, unsigned __int8 *, uint64_t))v1193)(v78, a2, v1988);
            v1194 = (void *)((unint64_t)&v78[v1928] & v308);
            v1195 = (const void *)((unint64_t)&a2[v1928] & v308);
            v2086 = v1194;
            if (v1948 == v1954)
            {
              int v1196 = (*(uint64_t (**)(const void *))(v2048 + 48))(v1195);
LABEL_1406:
              uint64_t v1261 = v1919;
              uint64_t v1262 = ~v2035;
              uint64_t v1259 = v1192;
LABEL_1407:
              if (v1196)
              {
LABEL_1408:
                memcpy(v1194, v1195, v2070);
                unint64_t v1396 = v1935;
                uint64_t v1397 = v2073;
LABEL_1409:
                size_t v1398 = __n;
                goto LABEL_1502;
              }
              unint64_t v1234 = ((unint64_t)v1195 + v1976) & v1259;
              unint64_t v1235 = (v1943 + v1234) & v2008;
LABEL_1411:
              v1399 = v1195;
              uint64_t v1400 = v1259;
              v2095 = v1399;
              v1193(v1194);
              ((void (*)(unint64_t, unint64_t, uint64_t))v1193)(((unint64_t)v1194 + v1976) & v1400, v1234, v1988);
              unint64_t v1401 = (v1943 + (((unint64_t)v1194 + v1976) & v1400)) & v2008;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1970 + 16))(v1401, v1235, v1969);
              v1402 = (void *)((v1974 + v1401) & 0xFFFFFFFFFFFFFFF8);
              v1403 = (void *)((v1974 + v1235) & 0xFFFFFFFFFFFFFFF8);
              void *v1402 = *v1403;
              unint64_t v1404 = ((unint64_t)v1402 + v1966) & v2021;
              unint64_t v1405 = ((unint64_t)v1403 + v1966) & v2021;
              v1406 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
              swift_bridgeObjectRetain();
              v1406(v1404, v1405, v1971);
              v1407 = (void *)((v1960 + v1405) & 0xFFFFFFFFFFFFFFF8);
              v1408 = (void *)((v1960 + v1404) & 0xFFFFFFFFFFFFFFF8);
              void *v1408 = *v1407;
              v1409 = (void *)(((unint64_t)v1408 + 15) & 0xFFFFFFFFFFFFFFF8);
              v1410 = (void *)(((unint64_t)v1407 + 15) & 0xFFFFFFFFFFFFFFF8);
              void *v1409 = *v1410;
              v1409[1] = v1410[1];
              v1411 = (void *)(v1401 + v2111);
              void *v1411 = *(void *)(v1235 + v2111);
              v1411[1] = *(void *)(v1235 + v2111 + 8);
              unint64_t v1412 = (v2045 + v1401 + v2111) & v2060;
              unint64_t v1413 = (v2045 + v1235 + v2111) & v2060;
              *(unsigned char *)unint64_t v1412 = *(unsigned char *)v1413;
              uint64_t v1414 = v1412 | 4;
              int v1415 = *(_DWORD *)(v1413 | 4);
              *(unsigned char *)(v1414 + 4) = *(unsigned char *)((v1413 | 4) + 4);
              *(_DWORD *)uint64_t v1414 = v1415;
              *(_WORD *)(v1412 + 10) = *(_WORD *)(v1413 + 0xA);
              unint64_t v2119 = v1412;
              unint64_t v1416 = (v1983 + v1412) & v2001;
              unint64_t v2072 = v1413;
              unint64_t v1417 = (v1983 + v1413) & v2001;
              v1418 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1418(v1416, v1417, v1984);
              unint64_t v1419 = (v1980 + v1416) & v2001;
              unint64_t v1420 = (v1980 + v1417) & v2001;
              v1418(v1419, v1420, v1984);
              v1421 = (unsigned char *)(v1419 + v1985);
              unsigned char *v1421 = *(unsigned char *)(v1420 + v1985);
              v1421[1] = *(unsigned char *)(v1420 + v1985 + 1);
              v1421[2] = *(unsigned char *)(v1420 + v1985 + 2);
              v1421[3] = *(unsigned char *)(v1420 + v1985 + 3);
              v1421[4] = *(unsigned char *)(v1420 + v1985 + 4);
              unint64_t v1422 = (v1419 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1423 = (v1420 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1422 = *(void *)v1423;
              *(void *)(v1422 + 8) = *(void *)(v1423 + 8);
              *(unsigned char *)(v1422 + 16) = *(unsigned char *)(v1423 + 16);
              *(unsigned char *)(v1422 + 17) = *(unsigned char *)(v1423 + 17);
              *(unsigned char *)(v1422 + 18) = *(unsigned char *)(v1423 + 18);
              *(unsigned char *)(v1422 + 19) = *(unsigned char *)(v1423 + 19);
              unint64_t v1424 = (v1422 + 27) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1425 = (v1423 + 27) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1424 = *(void *)v1425;
              *(unsigned char *)(v1424 + 8) = *(unsigned char *)(v1425 + 8);
              *(unsigned char *)(v1424 + 9) = *(unsigned char *)(v1425 + 9);
              *(unsigned char *)(v1424 + 10) = *(unsigned char *)(v1425 + 10);
              *(unsigned char *)(v1424 + 11) = *(unsigned char *)(v1425 + 11);
              *(unsigned char *)(v1424 + 12) = *(unsigned char *)(v1425 + 12);
              v1426 = (void *)((v1423 + 47) & 0xFFFFFFFFFFFFFFF8);
              v1427 = (void *)((v1422 + 47) & 0xFFFFFFFFFFFFFFF8);
              void *v1427 = *v1426;
              unint64_t v1428 = ((unint64_t)v1427 + 15) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1429 = ((unint64_t)v1426 + 15) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1428 = *(void *)v1429;
              *(unsigned char *)(v1428 + 8) = *(unsigned char *)(v1429 + 8);
              *(unsigned char *)(v1428 + 9) = *(unsigned char *)(v1429 + 9);
              v1430 = (void *)((v1978 + v1428) & v2001);
              v1431 = (const void *)((v1978 + v1429) & v2001);
              v1432 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
              swift_bridgeObjectRetain();
              if (v1432(v1431, 1, v1984))
              {
                memcpy(v1430, v1431, __n);
              }
              else
              {
                v1418((unint64_t)v1430, (unint64_t)v1431, v1984);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v1430, 0, 1, v1984);
              }
              unint64_t v1396 = v1935;
              v1433 = (void *)(((unint64_t)v1430 + v1979) & 0xFFFFFFFFFFFFFFF8);
              v1434 = (void *)(((unint64_t)v1431 + v1979) & 0xFFFFFFFFFFFFFFF8);
              void *v1433 = *v1434;
              unint64_t v1435 = ((unint64_t)v1433 + 15) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1436 = ((unint64_t)v1434 + 15) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v1437 = *(void *)v1436;
              *(unsigned char *)(v1435 + 8) = *(unsigned char *)(v1436 + 8);
              *(void *)unint64_t v1435 = v1437;
              v1438 = (void *)(((unint64_t)v1433 + 31) & 0xFFFFFFFFFFFFFFF8);
              v1439 = (void *)(((unint64_t)v1434 + 31) & 0xFFFFFFFFFFFFFFF8);
              void *v1438 = *v1439;
              unint64_t v1440 = ((unint64_t)v1438 + 15) & 0xFFFFFFFFFFFFFFF8;
              v1441 = (uint64_t *)(((unint64_t)v1439 + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v1442 = v1441[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((v1442 & 0x3000000000000000) != 0)
              {
                *(_OWORD *)unint64_t v1440 = *(_OWORD *)v1441;
              }
              else
              {
                uint64_t v1443 = *v1441;
                sub_24D3F9C18(*v1441, v1442);
                *(void *)unint64_t v1440 = v1443;
                *(void *)(v1440 + 8) = v1442;
              }
              uint64_t v1397 = v2073;
              unint64_t v1444 = (v1440 + 19) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1445 = ((unint64_t)v1441 + 19) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v1446 = *(void *)v1445;
              *(unsigned char *)(v1444 + 8) = *(unsigned char *)(v1445 + 8);
              *(void *)unint64_t v1444 = v1446;
              *(unsigned char *)(v1444 + 9) = *(unsigned char *)(v1445 + 9);
              unint64_t v1447 = (v1444 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              unint64_t v1448 = (v1445 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              int v1449 = *(_DWORD *)v1448;
              *(unsigned char *)(v1447 + 4) = *(unsigned char *)(v1448 + 4);
              *(_DWORD *)unint64_t v1447 = v1449;
              v1450 = (void *)((v1444 + 25) & 0xFFFFFFFFFFFFFFF8);
              v1451 = (void *)((v1445 + 25) & 0xFFFFFFFFFFFFFFF8);
              void *v1450 = *v1451;
              v1450[1] = v1451[1];
              unint64_t v1452 = v2119 + v2016;
              v1453 = (long long *)(v2072 + v2016);
              unint64_t v1454 = *(void *)(v2072 + v2016 + 16);
              if (v1454 >= 0xFFFFFFFF) {
                LODWORD(v1454) = -1;
              }
              int v1455 = v1454 - 1;
              swift_bridgeObjectRetain();
              if (v1455 < 0)
              {
                *(void *)unint64_t v1452 = *(void *)v1453;
                *(unsigned char *)(v1452 + 8) = *((unsigned char *)v1453 + 8);
                *(unsigned char *)(v1452 + 9) = *((unsigned char *)v1453 + 9);
                v1468 = (void *)*((void *)v1453 + 2);
                id v1469 = v1468;
                *(void *)(v1452 + 16) = v1468;
                v1470 = (void *)*((void *)v1453 + 3);
                id v1471 = v1470;
                *(void *)(v1452 + 24) = v1470;
                *(unsigned char *)(v1452 + 32) = *((unsigned char *)v1453 + 32);
                *(unsigned char *)(v1452 + 33) = *((unsigned char *)v1453 + 33);
                *(unsigned char *)(v1452 + 34) = *((unsigned char *)v1453 + 34);
                *(void *)(v1452 + 40) = *((void *)v1453 + 5);
                *(void *)(v1452 + 48) = *((void *)v1453 + 6);
                *(void *)(v1452 + 56) = *((void *)v1453 + 7);
                *(void *)(v1452 + 64) = *((void *)v1453 + 8);
                *(unsigned char *)(v1452 + 72) = *((unsigned char *)v1453 + 72);
                *(void *)(v1452 + 80) = *((void *)v1453 + 10);
                *(void *)(v1452 + 88) = *((void *)v1453 + 11);
                v2120 = (void *)*((void *)v1453 + 12);
                *(void *)(v1452 + 96) = v2120;
                *(unsigned char *)(v1452 + 104) = *((unsigned char *)v1453 + 104);
                *(unsigned char *)(v1452 + 105) = *((unsigned char *)v1453 + 105);
                *(void *)(v1452 + 112) = *((void *)v1453 + 14);
                *(void *)(v1452 + 120) = *((void *)v1453 + 15);
                *(void *)(v1452 + 128) = *((void *)v1453 + 16);
                *(void *)(v1452 + 136) = *((void *)v1453 + 17);
                *(void *)(v1452 + 144) = *((void *)v1453 + 18);
                *(void *)(v1452 + 152) = *((void *)v1453 + 19);
                *(void *)(v1452 + 160) = *((void *)v1453 + 20);
                *(void *)(v1452 + 168) = *((void *)v1453 + 21);
                *(unsigned char *)(v1452 + 176) = *((unsigned char *)v1453 + 176);
                *(void *)(v1452 + 184) = *((void *)v1453 + 23);
                uint64_t v1472 = *((void *)v1453 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v1473 = v2120;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v1472)
                {
                  *(void *)(v1452 + 192) = v1472;
                  *(void *)(v1452 + 200) = *((void *)v1453 + 25);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v1452 + 192) = v1453[12];
                }
                *(void *)(v1452 + 208) = *((void *)v1453 + 26);
                *(void *)(v1452 + 216) = *((void *)v1453 + 27);
                *(void *)(v1452 + 224) = *((void *)v1453 + 28);
                *(void *)(v1452 + 232) = *((void *)v1453 + 29);
                *(void *)(v1452 + 240) = *((void *)v1453 + 30);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v78 = a1;
                uint64_t v1261 = v1919;
                unint64_t v1396 = v1935;
                uint64_t v1397 = v2073;
              }
              else
              {
                long long v1456 = *v1453;
                long long v1457 = v1453[1];
                long long v1458 = v1453[3];
                *(_OWORD *)(v1452 + 32) = v1453[2];
                *(_OWORD *)(v1452 + 48) = v1458;
                *(_OWORD *)unint64_t v1452 = v1456;
                *(_OWORD *)(v1452 + 16) = v1457;
                long long v1459 = v1453[4];
                long long v1460 = v1453[5];
                long long v1461 = v1453[7];
                *(_OWORD *)(v1452 + 96) = v1453[6];
                *(_OWORD *)(v1452 + 112) = v1461;
                *(_OWORD *)(v1452 + 64) = v1459;
                *(_OWORD *)(v1452 + 80) = v1460;
                long long v1462 = v1453[8];
                long long v1463 = v1453[9];
                long long v1464 = v1453[11];
                *(_OWORD *)(v1452 + 160) = v1453[10];
                *(_OWORD *)(v1452 + 176) = v1464;
                *(_OWORD *)(v1452 + 128) = v1462;
                *(_OWORD *)(v1452 + 144) = v1463;
                long long v1465 = v1453[12];
                long long v1466 = v1453[13];
                long long v1467 = v1453[14];
                *(void *)(v1452 + 240) = *((void *)v1453 + 30);
                *(_OWORD *)(v1452 + 208) = v1466;
                *(_OWORD *)(v1452 + 224) = v1467;
                *(_OWORD *)(v1452 + 192) = v1465;
                uint64_t v1261 = v1919;
              }
              v1799 = (_OWORD *)((v1452 + 255) & 0xFFFFFFFFFFFFFFF8);
              v1800 = (long long *)(((unint64_t)v1453 + 255) & 0xFFFFFFFFFFFFFFF8);
              long long v1801 = *v1800;
              *(_OWORD *)((char *)v1799 + 9) = *(long long *)((char *)v1800 + 9);
              _OWORD *v1799 = v1801;
              unint64_t v1802 = (v1452 + 287) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1803 = ((unint64_t)v1453 + 287) & 0xFFFFFFFFFFFFFFF8;
              long long v1804 = *(_OWORD *)v1803;
              *(unsigned char *)(v1802 + 16) = *(unsigned char *)(v1803 + 16);
              *(_OWORD *)unint64_t v1802 = v1804;
              v1805 = (void *)((v1452 + 311) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v1806 = ((unint64_t)v1453 + 311) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v1807 = *(void *)v1806;
              v1806 += 15;
              void *v1805 = v1807;
              v1808 = (void *)(((unint64_t)v1805 + 15) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v1810 = *(void *)(v1806 & 0xFFFFFFFFFFFFFFF8);
              unint64_t v1809 = *(void *)((v1806 & 0xFFFFFFFFFFFFFFF8) + 8);
              sub_24D5203A8(v1810, v1809);
              void *v1808 = v1810;
              v1808[1] = v1809;
              size_t v1398 = v1985;
              uint64_t v1262 = ~v2035;
              v1195 = v2095;
              if (!v1962) {
                goto LABEL_1409;
              }
LABEL_1502:
              unint64_t v1811 = ((((v1941
                        + ((((((((((v1961 + v1398 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 19) & 0xFFFFFFFFFFFFFFF8)
                          + 25) & 0xFFFFFFFFFFFFFFF8)
                        + 327) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 16;
              v1812 = (void *)(((unint64_t)v2086 + v1397 + v1811) & v1914);
              v1813 = (const void *)(((unint64_t)v1195 + v1397 + v1811) & v1914);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1987 + 48))(v1813, 1, AssociatedTypeWitness))
              {
                memcpy(v1812, v1813, v1940);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v1987 + 16))(v1812, v1813, AssociatedTypeWitness);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v1987 + 56))(v1812, 0, 1, AssociatedTypeWitness);
              }
              v1814 = (char *)(((unint64_t)v1812 + v1927) & v1262);
              v1815 = (char *)(((unint64_t)v1813 + v1927) & v1262);
              if (v1946 == v1957)
              {
                int v1816 = (*(uint64_t (**)(unint64_t))(v1968 + 48))(((unint64_t)v1813 + v1927) & v1262);
              }
              else
              {
                v1817 = (uint64_t *)((unint64_t)&v1815[v1975] & 0xFFFFFFFFFFFFFFF8);
                if (v1936 <= 0x7FFFFFFE)
                {
                  uint64_t v1818 = *v1817;
                  if ((unint64_t)*v1817 >= 0xFFFFFFFF) {
                    LODWORD(v1818) = -1;
                  }
                  if ((v1818 + 1) >= 2) {
                    goto LABEL_1514;
                  }
                  goto LABEL_1516;
                }
                int v1816 = (*(uint64_t (**)(unint64_t))(v1965 + 48))(((unint64_t)v1817 + v1963) & v1993);
              }
              if (v1816)
              {
LABEL_1514:
                unint64_t v1819 = ((((v1959
                          + ((v2002 + 8 + (v1975 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v2002)) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 16;
                memcpy(v1814, v1815, v2043);
                uint64_t v1254 = v1261;
LABEL_1517:
                *(void *)&v1814[v1819] = *(void *)&v1815[v1819];
                v1828 = (void *)((unint64_t)&v1814[v1819 + 15] & 0xFFFFFFFFFFFFFFF8);
                v1829 = (void *)((unint64_t)&v1815[v1819 + 15] & 0xFFFFFFFFFFFFFFF8);
                void *v1828 = *v1829;
                v1830 = *(void **)(((unint64_t)v1829 + 15) & 0xFFFFFFFFFFFFFFF8);
                *(void *)(((unint64_t)v1828 + 15) & 0xFFFFFFFFFFFFFFF8) = v1830;
                char v1208 = 1;
                v78[v1396] = 1;
                id v1831 = v1830;
                unint64_t v309 = v1945;
                goto LABEL_1551;
              }
              v1817 = (uint64_t *)((unint64_t)&v1815[v1975] & 0xFFFFFFFFFFFFFFF8);
LABEL_1516:
              (*(void (**)(char *, char *, uint64_t))(v1968 + 16))(v1814, v1815, v1967);
              v1820 = (void *)((unint64_t)&v1814[v1975] & 0xFFFFFFFFFFFFFFF8);
              void *v1820 = *v1817;
              unint64_t v1821 = ((unint64_t)v1820 + v1963) & v1993;
              unint64_t v1822 = ((unint64_t)v1817 + v1963) & v1993;
              v1823 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
              swift_bridgeObjectRetain();
              v1823(v1821, v1822, v1964);
              v1824 = (void *)((v1959 + v1821) & 0xFFFFFFFFFFFFFFF8);
              v1825 = (void *)((v1959 + v1822) & 0xFFFFFFFFFFFFFFF8);
              void *v1824 = *v1825;
              v1826 = (void *)(((unint64_t)v1824 + 15) & 0xFFFFFFFFFFFFFFF8);
              v1827 = (void *)(((unint64_t)v1825 + 15) & 0xFFFFFFFFFFFFFFF8);
              void *v1826 = *v1827;
              v1826[1] = v1827[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v1254 = v1261;
              unint64_t v1819 = ((((v1959
                        + ((v2002 + 8 + (v1975 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v2002)) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 16;
              goto LABEL_1517;
            }
            unint64_t v1234 = ((unint64_t)v1195 + v1976) & v1192;
            unint64_t v1235 = (v1943 + v1234) & v2008;
            if (v1958 == v1954)
            {
              if (v1947 == v1958)
              {
                int v1196 = (*(uint64_t (**)(unint64_t))(v1970 + 48))((v1943 + v1234) & v2008);
                goto LABEL_1406;
              }
              v1301 = (unint64_t *)((v1974 + v1235) & 0xFFFFFFFFFFFFFFF8);
              if (v2014 > 0x7FFFFFFE)
              {
                int v1196 = (*(uint64_t (**)(unint64_t))(v1972 + 48))(((unint64_t)v1301 + v1966) & v2021);
                goto LABEL_1406;
              }
              unint64_t v1302 = *v1301;
            }
            else
            {
              unint64_t v1258 = v1235 + v2111;
              if ((v1932 & 0x80000000) == 0)
              {
                uint64_t v1259 = v1192;
                unint64_t v1260 = *(void *)(v1258 + 8);
                if (v1260 >= 0xFFFFFFFF) {
                  LODWORD(v1260) = -1;
                }
                int v1196 = v1260 + 1;
                uint64_t v1261 = v1919;
                uint64_t v1262 = ~v2035;
                goto LABEL_1407;
              }
              unint64_t v1312 = (v1983 + ((v2045 + v1258) & v2060)) & v2001;
              if (v1962 > 0x7FFFFFFD)
              {
                int v1196 = (*(uint64_t (**)(unint64_t))(v1981 + 48))(v1312);
                goto LABEL_1406;
              }
              unint64_t v1302 = *(void *)(((v1930 + ((v1980 + v1312) & v2001)) & 0xFFFFFFFFFFFFFFF8) + 8);
            }
            if (v1302 >= 0xFFFFFFFF) {
              LODWORD(v1302) = -1;
            }
            uint64_t v1261 = v1919;
            uint64_t v1262 = ~v2035;
            uint64_t v1259 = v1192;
            if ((v1302 + 1) >= 2) {
              goto LABEL_1408;
            }
            goto LABEL_1411;
          case 2u:
            unint64_t v1994 = ~(unint64_t)v2002;
            uint64_t v1197 = v87;
            (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v2048 + 16))(v78, a2, v1988);
            v1198 = (void *)((unint64_t)&v78[v1924] & v1197);
            v1199 = (const void *)((unint64_t)&a2[v1924] & v1197);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1987 + 48))(v1199, 1, AssociatedTypeWitness))
            {
              memcpy(v1198, v1199, v53);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v1987 + 16))(v1198, v1199, AssociatedTypeWitness);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v1987 + 56))(v1198, 0, 1, AssociatedTypeWitness);
            }
            v1244 = (char *)(((unint64_t)v1198 + v1927) & v88);
            v1245 = (char *)(((unint64_t)v1199 + v1927) & v88);
            if (v1946 == v1957)
            {
              int v1246 = (*(uint64_t (**)(char *))(v1968 + 48))(v1245);
            }
            else
            {
              v1247 = (uint64_t *)((unint64_t)&v1245[v1975] & 0xFFFFFFFFFFFFFFF8);
              if (v1936 <= 0x7FFFFFFE)
              {
                uint64_t v1248 = *v1247;
                if ((unint64_t)*v1247 >= 0xFFFFFFFF) {
                  LODWORD(v1248) = -1;
                }
                if ((v1248 + 1) >= 2) {
                  goto LABEL_1353;
                }
                goto LABEL_1355;
              }
              int v1246 = (*(uint64_t (**)(unint64_t))(v1965 + 48))(((unint64_t)v1247 + v1963) & v1994);
            }
            if (v1246)
            {
LABEL_1353:
              unint64_t v1275 = ((((v1959
                        + ((v2002 + 8 + (v1975 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v2002)) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 16;
              memcpy(v1244, v1245, v2043);
              uint64_t v1254 = v1919;
              goto LABEL_1356;
            }
            v1247 = (uint64_t *)((unint64_t)&v1245[v1975] & 0xFFFFFFFFFFFFFFF8);
LABEL_1355:
            (*(void (**)(char *, char *, uint64_t))(v1968 + 16))(v1244, v1245, v1967);
            v1276 = (void *)((unint64_t)&v1244[v1975] & 0xFFFFFFFFFFFFFFF8);
            void *v1276 = *v1247;
            unint64_t v1277 = ((unint64_t)v1276 + v1963) & v1994;
            unint64_t v1278 = ((unint64_t)v1247 + v1963) & v1994;
            v1279 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
            swift_bridgeObjectRetain();
            v1279(v1277, v1278, v1964);
            unint64_t v309 = v1945;
            v1280 = (void *)((v1959 + v1277) & 0xFFFFFFFFFFFFFFF8);
            v1281 = (void *)((v1959 + v1278) & 0xFFFFFFFFFFFFFFF8);
            void *v1280 = *v1281;
            v1282 = (void *)(((unint64_t)v1280 + 15) & 0xFFFFFFFFFFFFFFF8);
            v1283 = (void *)(((unint64_t)v1281 + 15) & 0xFFFFFFFFFFFFFFF8);
            void *v1282 = *v1283;
            v1282[1] = v1283[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v1254 = v1919;
            unint64_t v1275 = ((((v1959
                      + ((v2002 + 8 + (v1975 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v2002)) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 16;
LABEL_1356:
            v1284 = &v1244[v1275];
            char *v1284 = v1245[v1275];
            v1285 = *(void **)&v1245[v1275 + 8];
            *((void *)v1284 + 1) = v1285;
            v78[v1935] = 2;
            id v1286 = v1285;
            char v1208 = 1;
            goto LABEL_1551;
          case 3u:
            uint64_t v1200 = ~v2066;
            uint64_t v2009 = ~v33;
            uint64_t v2022 = v92;
            uint64_t v2061 = ~v2051;
            size_t v2071 = v36;
            unint64_t v2112 = v34;
            v1201 = *(void (**)(void))(v2048 + 16);
            ((void (*)(unsigned char *, unsigned __int8 *, uint64_t))v1201)(v78, a2, v1988);
            v1202 = (void *)((unint64_t)&v78[v1928] & v308);
            v1203 = (const void *)((unint64_t)&a2[v1928] & v308);
            if (v1948 == v1954)
            {
              int v1204 = (*(uint64_t (**)(const void *))(v2048 + 48))(v1203);
LABEL_1424:
              uint64_t v1254 = v1919;
              uint64_t v1264 = v1200;
LABEL_1425:
              uint64_t v1474 = v1943;
              if (v1204)
              {
LABEL_1426:
                memcpy(v1202, v1203, v2071);
                unint64_t v1475 = v1935;
                goto LABEL_1427;
              }
              unint64_t v1236 = ((unint64_t)v1203 + v1976) & v1264;
              unint64_t v1237 = (v1943 + v1236) & v2009;
LABEL_1429:
              v1477 = v1203;
              uint64_t v1478 = v1264;
              v2087 = v1477;
              v1201(v1202);
              unint64_t v1479 = ((unint64_t)v1202 + v1976) & v1478;
              ((void (*)(unint64_t, unint64_t, uint64_t))v1201)(v1479, v1236, v1988);
              unint64_t v1480 = (v1474 + v1479) & v2009;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1970 + 16))(v1480, v1237, v1969);
              v1481 = (void *)((v1974 + v1480) & 0xFFFFFFFFFFFFFFF8);
              v1482 = (void *)((v1974 + v1237) & 0xFFFFFFFFFFFFFFF8);
              void *v1481 = *v1482;
              unint64_t v1483 = ((unint64_t)v1481 + v1966) & v2022;
              unint64_t v1484 = ((unint64_t)v1482 + v1966) & v2022;
              v1485 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
              swift_bridgeObjectRetain();
              v1485(v1483, v1484, v1971);
              v1486 = (void *)((v1960 + v1484) & 0xFFFFFFFFFFFFFFF8);
              v1487 = (void *)((v1960 + v1483) & 0xFFFFFFFFFFFFFFF8);
              void *v1487 = *v1486;
              v1488 = (void *)(((unint64_t)v1487 + 15) & 0xFFFFFFFFFFFFFFF8);
              v1489 = (void *)(((unint64_t)v1486 + 15) & 0xFFFFFFFFFFFFFFF8);
              void *v1488 = *v1489;
              v1488[1] = v1489[1];
              v1490 = (void *)(v1480 + v2112);
              void *v1490 = *(void *)(v1237 + v2112);
              v1490[1] = *(void *)(v1237 + v2112 + 8);
              unint64_t v1491 = (v2045 + v1480 + v2112) & v2061;
              unint64_t v1492 = (v2045 + v1237 + v2112) & v2061;
              *(unsigned char *)unint64_t v1491 = *(unsigned char *)v1492;
              uint64_t v1493 = v1491 | 4;
              int v1494 = *(_DWORD *)(v1492 | 4);
              *(unsigned char *)(v1493 + 4) = *(unsigned char *)((v1492 | 4) + 4);
              *(_DWORD *)uint64_t v1493 = v1494;
              *(_WORD *)(v1491 + 10) = *(_WORD *)(v1492 + 0xA);
              unint64_t v2121 = v1491;
              unint64_t v1495 = (v1983 + v1491) & v2001;
              unint64_t v2080 = v1492;
              unint64_t v1496 = (v1983 + v1492) & v2001;
              v1497 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1497(v1495, v1496, v1984);
              unint64_t v1498 = (v1980 + v1495) & v2001;
              unint64_t v1499 = (v1980 + v1496) & v2001;
              v1497(v1498, v1499, v1984);
              v1500 = (unsigned char *)(v1498 + v1985);
              unsigned char *v1500 = *(unsigned char *)(v1499 + v1985);
              v1500[1] = *(unsigned char *)(v1499 + v1985 + 1);
              v1500[2] = *(unsigned char *)(v1499 + v1985 + 2);
              v1500[3] = *(unsigned char *)(v1499 + v1985 + 3);
              v1500[4] = *(unsigned char *)(v1499 + v1985 + 4);
              unint64_t v1501 = (v1498 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1502 = (v1499 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1501 = *(void *)v1502;
              *(void *)(v1501 + 8) = *(void *)(v1502 + 8);
              *(unsigned char *)(v1501 + 16) = *(unsigned char *)(v1502 + 16);
              *(unsigned char *)(v1501 + 17) = *(unsigned char *)(v1502 + 17);
              *(unsigned char *)(v1501 + 18) = *(unsigned char *)(v1502 + 18);
              *(unsigned char *)(v1501 + 19) = *(unsigned char *)(v1502 + 19);
              unint64_t v1503 = (v1501 + 27) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1504 = (v1502 + 27) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1503 = *(void *)v1504;
              *(unsigned char *)(v1503 + 8) = *(unsigned char *)(v1504 + 8);
              *(unsigned char *)(v1503 + 9) = *(unsigned char *)(v1504 + 9);
              *(unsigned char *)(v1503 + 10) = *(unsigned char *)(v1504 + 10);
              *(unsigned char *)(v1503 + 11) = *(unsigned char *)(v1504 + 11);
              *(unsigned char *)(v1503 + 12) = *(unsigned char *)(v1504 + 12);
              v1505 = (void *)((v1502 + 47) & 0xFFFFFFFFFFFFFFF8);
              v1506 = (void *)((v1501 + 47) & 0xFFFFFFFFFFFFFFF8);
              void *v1506 = *v1505;
              unint64_t v1507 = ((unint64_t)v1506 + 15) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1508 = ((unint64_t)v1505 + 15) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1507 = *(void *)v1508;
              *(unsigned char *)(v1507 + 8) = *(unsigned char *)(v1508 + 8);
              *(unsigned char *)(v1507 + 9) = *(unsigned char *)(v1508 + 9);
              v1509 = (void *)((v1978 + v1507) & v2001);
              v1510 = (const void *)((v1978 + v1508) & v2001);
              v1511 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
              swift_bridgeObjectRetain();
              if (v1511(v1510, 1, v1984))
              {
                memcpy(v1509, v1510, __n);
              }
              else
              {
                v1497((unint64_t)v1509, (unint64_t)v1510, v1984);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v1509, 0, 1, v1984);
              }
              unint64_t v1475 = v1935;
              v1512 = (void *)(((unint64_t)v1509 + v1979) & 0xFFFFFFFFFFFFFFF8);
              v1513 = (void *)(((unint64_t)v1510 + v1979) & 0xFFFFFFFFFFFFFFF8);
              void *v1512 = *v1513;
              unint64_t v1514 = ((unint64_t)v1512 + 15) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1515 = ((unint64_t)v1513 + 15) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v1516 = *(void *)v1515;
              *(unsigned char *)(v1514 + 8) = *(unsigned char *)(v1515 + 8);
              *(void *)unint64_t v1514 = v1516;
              v1517 = (void *)(((unint64_t)v1512 + 31) & 0xFFFFFFFFFFFFFFF8);
              v1518 = (void *)(((unint64_t)v1513 + 31) & 0xFFFFFFFFFFFFFFF8);
              void *v1517 = *v1518;
              unint64_t v1519 = ((unint64_t)v1517 + 15) & 0xFFFFFFFFFFFFFFF8;
              v1520 = (uint64_t *)(((unint64_t)v1518 + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v1521 = v1520[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((v1521 & 0x3000000000000000) != 0)
              {
                *(_OWORD *)unint64_t v1519 = *(_OWORD *)v1520;
              }
              else
              {
                uint64_t v1522 = *v1520;
                sub_24D3F9C18(*v1520, v1521);
                *(void *)unint64_t v1519 = v1522;
                *(void *)(v1519 + 8) = v1521;
              }
              unint64_t v1523 = (v1519 + 19) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1524 = ((unint64_t)v1520 + 19) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v1525 = *(void *)v1524;
              *(unsigned char *)(v1523 + 8) = *(unsigned char *)(v1524 + 8);
              *(void *)unint64_t v1523 = v1525;
              *(unsigned char *)(v1523 + 9) = *(unsigned char *)(v1524 + 9);
              unint64_t v1526 = (v1523 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              unint64_t v1527 = (v1524 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              int v1528 = *(_DWORD *)v1527;
              *(unsigned char *)(v1526 + 4) = *(unsigned char *)(v1527 + 4);
              *(_DWORD *)unint64_t v1526 = v1528;
              v1529 = (void *)((v1523 + 25) & 0xFFFFFFFFFFFFFFF8);
              v1530 = (void *)((v1524 + 25) & 0xFFFFFFFFFFFFFFF8);
              void *v1529 = *v1530;
              v1529[1] = v1530[1];
              unint64_t v1531 = v2121 + v2016;
              v1532 = (long long *)(v2080 + v2016);
              unint64_t v1533 = *(void *)(v2080 + v2016 + 16);
              if (v1533 >= 0xFFFFFFFF) {
                LODWORD(v1533) = -1;
              }
              int v1534 = v1533 - 1;
              swift_bridgeObjectRetain();
              if (v1534 < 0)
              {
                *(void *)unint64_t v1531 = *(void *)v1532;
                *(unsigned char *)(v1531 + 8) = *((unsigned char *)v1532 + 8);
                *(unsigned char *)(v1531 + 9) = *((unsigned char *)v1532 + 9);
                v1547 = (void *)*((void *)v1532 + 2);
                id v1548 = v1547;
                *(void *)(v1531 + 16) = v1547;
                v1549 = (void *)*((void *)v1532 + 3);
                id v1550 = v1549;
                *(void *)(v1531 + 24) = v1549;
                *(unsigned char *)(v1531 + 32) = *((unsigned char *)v1532 + 32);
                *(unsigned char *)(v1531 + 33) = *((unsigned char *)v1532 + 33);
                *(unsigned char *)(v1531 + 34) = *((unsigned char *)v1532 + 34);
                *(void *)(v1531 + 40) = *((void *)v1532 + 5);
                *(void *)(v1531 + 48) = *((void *)v1532 + 6);
                *(void *)(v1531 + 56) = *((void *)v1532 + 7);
                *(void *)(v1531 + 64) = *((void *)v1532 + 8);
                *(unsigned char *)(v1531 + 72) = *((unsigned char *)v1532 + 72);
                *(void *)(v1531 + 80) = *((void *)v1532 + 10);
                *(void *)(v1531 + 88) = *((void *)v1532 + 11);
                v2122 = (void *)*((void *)v1532 + 12);
                *(void *)(v1531 + 96) = v2122;
                *(unsigned char *)(v1531 + 104) = *((unsigned char *)v1532 + 104);
                *(unsigned char *)(v1531 + 105) = *((unsigned char *)v1532 + 105);
                *(void *)(v1531 + 112) = *((void *)v1532 + 14);
                *(void *)(v1531 + 120) = *((void *)v1532 + 15);
                *(void *)(v1531 + 128) = *((void *)v1532 + 16);
                *(void *)(v1531 + 136) = *((void *)v1532 + 17);
                *(void *)(v1531 + 144) = *((void *)v1532 + 18);
                *(void *)(v1531 + 152) = *((void *)v1532 + 19);
                *(void *)(v1531 + 160) = *((void *)v1532 + 20);
                *(void *)(v1531 + 168) = *((void *)v1532 + 21);
                *(unsigned char *)(v1531 + 176) = *((unsigned char *)v1532 + 176);
                *(void *)(v1531 + 184) = *((void *)v1532 + 23);
                uint64_t v1551 = *((void *)v1532 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v1552 = v2122;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v1551)
                {
                  *(void *)(v1531 + 192) = v1551;
                  *(void *)(v1531 + 200) = *((void *)v1532 + 25);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v1531 + 192) = v1532[12];
                }
                *(void *)(v1531 + 208) = *((void *)v1532 + 26);
                *(void *)(v1531 + 216) = *((void *)v1532 + 27);
                *(void *)(v1531 + 224) = *((void *)v1532 + 28);
                *(void *)(v1531 + 232) = *((void *)v1532 + 29);
                *(void *)(v1531 + 240) = *((void *)v1532 + 30);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v78 = a1;
                unint64_t v1475 = v1935;
              }
              else
              {
                long long v1535 = *v1532;
                long long v1536 = v1532[1];
                long long v1537 = v1532[3];
                *(_OWORD *)(v1531 + 32) = v1532[2];
                *(_OWORD *)(v1531 + 48) = v1537;
                *(_OWORD *)unint64_t v1531 = v1535;
                *(_OWORD *)(v1531 + 16) = v1536;
                long long v1538 = v1532[4];
                long long v1539 = v1532[5];
                long long v1540 = v1532[7];
                *(_OWORD *)(v1531 + 96) = v1532[6];
                *(_OWORD *)(v1531 + 112) = v1540;
                *(_OWORD *)(v1531 + 64) = v1538;
                *(_OWORD *)(v1531 + 80) = v1539;
                long long v1541 = v1532[8];
                long long v1542 = v1532[9];
                long long v1543 = v1532[11];
                *(_OWORD *)(v1531 + 160) = v1532[10];
                *(_OWORD *)(v1531 + 176) = v1543;
                *(_OWORD *)(v1531 + 128) = v1541;
                *(_OWORD *)(v1531 + 144) = v1542;
                long long v1544 = v1532[12];
                long long v1545 = v1532[13];
                long long v1546 = v1532[14];
                *(void *)(v1531 + 240) = *((void *)v1532 + 30);
                *(_OWORD *)(v1531 + 208) = v1545;
                *(_OWORD *)(v1531 + 224) = v1546;
                *(_OWORD *)(v1531 + 192) = v1544;
              }
              v1203 = v2087;
              v1832 = (_OWORD *)((v1531 + 255) & 0xFFFFFFFFFFFFFFF8);
              v1833 = (long long *)(((unint64_t)v1532 + 255) & 0xFFFFFFFFFFFFFFF8);
              long long v1834 = *v1833;
              *(_OWORD *)((char *)v1832 + 9) = *(long long *)((char *)v1833 + 9);
              _OWORD *v1832 = v1834;
              unint64_t v1835 = (v1531 + 287) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1836 = ((unint64_t)v1532 + 287) & 0xFFFFFFFFFFFFFFF8;
              long long v1837 = *(_OWORD *)v1836;
              *(unsigned char *)(v1835 + 16) = *(unsigned char *)(v1836 + 16);
              *(_OWORD *)unint64_t v1835 = v1837;
              v1838 = (void *)((v1531 + 311) & 0xFFFFFFFFFFFFFFF8);
              v1839 = (void *)(((unint64_t)v1532 + 311) & 0xFFFFFFFFFFFFFFF8);
              void *v1838 = *v1839;
              v1840 = (void *)(((unint64_t)v1838 + 15) & 0xFFFFFFFFFFFFFFF8);
              v1841 = (uint64_t *)(((unint64_t)v1839 + 15) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v1842 = *v1841;
              unint64_t v1843 = v1841[1];
              sub_24D5203A8(*v1841, v1843);
              void *v1840 = v1842;
              v1840[1] = v1843;
              uint64_t v1254 = v1919;
              size_t v1476 = v1985;
              if (v1962)
              {
LABEL_1521:
                unint64_t v1844 = ((((v1941
                          + ((((((((((v1961 + v1476 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 19) & 0xFFFFFFFFFFFFFFF8)
                            + 25) & 0xFFFFFFFFFFFFFFF8)
                          + 327) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 16;
                v1845 = (void *)(((unint64_t)v1202 + v1844) & 0xFFFFFFFFFFFFFFF8);
                v1846 = (void *)(((unint64_t)v1203 + v1844) & 0xFFFFFFFFFFFFFFF8);
                void *v1845 = *v1846;
                v1845[1] = v1846[1];
                *(void *)(((unint64_t)v1845 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v1846
                                                                                                + 23) & 0xFFFFFFFFFFFFFFF8);
                v78[v1475] = 3;
                swift_bridgeObjectRetain();
                char v1208 = 1;
                unint64_t v309 = v1945;
                goto LABEL_1551;
              }
LABEL_1427:
              size_t v1476 = __n;
              goto LABEL_1521;
            }
            unint64_t v1236 = ((unint64_t)v1203 + v1976) & v1200;
            unint64_t v1237 = (v1943 + v1236) & v2009;
            if (v1958 == v1954)
            {
              if (v1947 == v1958)
              {
                int v1204 = (*(uint64_t (**)(unint64_t))(v1970 + 48))((v1943 + v1236) & v2009);
                goto LABEL_1424;
              }
              v1303 = (unint64_t *)((v1974 + v1237) & 0xFFFFFFFFFFFFFFF8);
              if (v2014 > 0x7FFFFFFE)
              {
                int v1204 = (*(uint64_t (**)(unint64_t))(v1972 + 48))(((unint64_t)v1303 + v1966) & v2022);
                goto LABEL_1424;
              }
              unint64_t v1304 = *v1303;
            }
            else
            {
              unint64_t v1263 = v1237 + v2112;
              if ((v1932 & 0x80000000) == 0)
              {
                uint64_t v1264 = v1200;
                unint64_t v1265 = *(void *)(v1263 + 8);
                if (v1265 >= 0xFFFFFFFF) {
                  LODWORD(v1265) = -1;
                }
                int v1204 = v1265 + 1;
                uint64_t v1254 = v1919;
                goto LABEL_1425;
              }
              unint64_t v1313 = (v1983 + ((v2045 + v1263) & v2061)) & v2001;
              if (v1962 > 0x7FFFFFFD)
              {
                int v1204 = (*(uint64_t (**)(unint64_t))(v1981 + 48))(v1313);
                goto LABEL_1424;
              }
              unint64_t v1304 = *(void *)(((v1930 + ((v1980 + v1313) & v2001)) & 0xFFFFFFFFFFFFFFF8) + 8);
            }
            if (v1304 >= 0xFFFFFFFF) {
              LODWORD(v1304) = -1;
            }
            uint64_t v1254 = v1919;
            uint64_t v1264 = v1200;
            uint64_t v1474 = v1943;
            if ((v1304 + 1) >= 2) {
              goto LABEL_1426;
            }
            goto LABEL_1429;
          case 4u:
            (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v2048 + 16))(v78, a2, v1988);
            char v1205 = 4;
            goto LABEL_1247;
          case 5u:
            (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v2048 + 16))(v78, a2, v1988);
            char v1205 = 5;
            goto LABEL_1247;
          case 6u:
            (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v2048 + 16))(v78, a2, v1988);
            v1206 = (void *)((unint64_t)&v78[v1923] & v1186);
            v1207 = (const void *)((unint64_t)&a2[v1923] & v1186);
            if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1922 + 48))(v1207, 1, v2031))
            {
              memcpy(v1206, v1207, v1920);
            }
            else
            {
              (*(void (**)(void *, const void *, uint64_t))(v1922 + 16))(v1206, v1207, v2031);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v1922 + 56))(v1206, 0, 1, v2031);
            }
            uint64_t v1254 = v1919;
            v78[v1935] = 6;
            char v1208 = 1;
            goto LABEL_1551;
          case 7u:
            (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v2048 + 16))(v78, a2, v1988);
            char v1205 = 7;
LABEL_1247:
            v78[v1935] = v1205;
            char v1208 = 1;
            goto LABEL_1326;
          default:
            uint64_t v1187 = ~v2066;
            uint64_t v2007 = ~v33;
            uint64_t v2020 = v92;
            uint64_t v2059 = ~v2051;
            size_t v2069 = v36;
            unint64_t v2110 = v34;
            v1188 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v2048 + 16);
            v1188(v78, a2, v1988);
            v1189 = (unsigned char *)((unint64_t)&v78[v1928] & v308);
            v1190 = (void *)((unint64_t)&a2[v1928] & v308);
            v2094 = v1190;
            if (v1948 == v1954)
            {
              int v1191 = (*(uint64_t (**)(void *))(v2048 + 48))(v1190);
LABEL_1388:
              uint64_t v1254 = v1919;
              uint64_t v1256 = v1187;
LABEL_1389:
              uint64_t v1317 = v1943;
              if (v1191)
              {
LABEL_1390:
                memcpy(v1189, v1190, v2069);
                unint64_t v1318 = v1935;
                unint64_t v309 = v1945;
                goto LABEL_1391;
              }
              unint64_t v1232 = ((unint64_t)v1190 + v1976) & v1256;
              unint64_t v1233 = (v1943 + v1232) & v2007;
LABEL_1393:
              v1320 = (unsigned __int8 *)v1190;
              uint64_t v1321 = v1256;
              v1188(v1189, v1320, v1988);
              unint64_t v1322 = (unint64_t)&v1189[v1976] & v1321;
              v1188((unsigned char *)v1322, (unsigned __int8 *)v1232, v1988);
              unint64_t v1323 = (v1317 + v1322) & v2007;
              (*(void (**)(unint64_t, unint64_t, uint64_t))(v1970 + 16))(v1323, v1233, v1969);
              v1324 = (void *)((v1974 + v1323) & 0xFFFFFFFFFFFFFFF8);
              v1325 = (void *)((v1974 + v1233) & 0xFFFFFFFFFFFFFFF8);
              void *v1324 = *v1325;
              unint64_t v1326 = ((unint64_t)v1324 + v1966) & v2020;
              unint64_t v1327 = ((unint64_t)v1325 + v1966) & v2020;
              v1328 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
              swift_bridgeObjectRetain();
              v1328(v1326, v1327, v1971);
              v1329 = (void *)((v1960 + v1327) & 0xFFFFFFFFFFFFFFF8);
              v1330 = (void *)((v1960 + v1326) & 0xFFFFFFFFFFFFFFF8);
              void *v1330 = *v1329;
              v1331 = (void *)(((unint64_t)v1330 + 15) & 0xFFFFFFFFFFFFFFF8);
              v1332 = (void *)(((unint64_t)v1329 + 15) & 0xFFFFFFFFFFFFFFF8);
              void *v1331 = *v1332;
              v1331[1] = v1332[1];
              v1333 = (void *)(v1323 + v2110);
              void *v1333 = *(void *)(v1233 + v2110);
              v1333[1] = *(void *)(v1233 + v2110 + 8);
              unint64_t v1334 = (v2045 + v1323 + v2110) & v2059;
              unint64_t v1335 = (v2045 + v1233 + v2110) & v2059;
              *(unsigned char *)unint64_t v1334 = *(unsigned char *)v1335;
              uint64_t v1336 = v1334 | 4;
              int v1337 = *(_DWORD *)(v1335 | 4);
              *(unsigned char *)(v1336 + 4) = *(unsigned char *)((v1335 | 4) + 4);
              *(_DWORD *)uint64_t v1336 = v1337;
              *(_WORD *)(v1334 + 10) = *(_WORD *)(v1335 + 0xA);
              unint64_t v2117 = v1334;
              unint64_t v1338 = (v1983 + v1334) & v2001;
              unint64_t v2079 = v1335;
              unint64_t v1339 = (v1983 + v1335) & v2001;
              v1340 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v1340(v1338, v1339, v1984);
              unint64_t v1341 = (v1980 + v1338) & v2001;
              unint64_t v1342 = (v1980 + v1339) & v2001;
              v1340(v1341, v1342, v1984);
              v1343 = (unsigned char *)(v1341 + v1985);
              unsigned char *v1343 = *(unsigned char *)(v1342 + v1985);
              v1343[1] = *(unsigned char *)(v1342 + v1985 + 1);
              v1343[2] = *(unsigned char *)(v1342 + v1985 + 2);
              v1343[3] = *(unsigned char *)(v1342 + v1985 + 3);
              v1343[4] = *(unsigned char *)(v1342 + v1985 + 4);
              unint64_t v1344 = (v1341 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1345 = (v1342 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1344 = *(void *)v1345;
              *(void *)(v1344 + 8) = *(void *)(v1345 + 8);
              *(unsigned char *)(v1344 + 16) = *(unsigned char *)(v1345 + 16);
              *(unsigned char *)(v1344 + 17) = *(unsigned char *)(v1345 + 17);
              *(unsigned char *)(v1344 + 18) = *(unsigned char *)(v1345 + 18);
              *(unsigned char *)(v1344 + 19) = *(unsigned char *)(v1345 + 19);
              unint64_t v1346 = (v1344 + 27) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1347 = (v1345 + 27) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1346 = *(void *)v1347;
              *(unsigned char *)(v1346 + 8) = *(unsigned char *)(v1347 + 8);
              *(unsigned char *)(v1346 + 9) = *(unsigned char *)(v1347 + 9);
              *(unsigned char *)(v1346 + 10) = *(unsigned char *)(v1347 + 10);
              *(unsigned char *)(v1346 + 11) = *(unsigned char *)(v1347 + 11);
              *(unsigned char *)(v1346 + 12) = *(unsigned char *)(v1347 + 12);
              v1348 = (void *)((v1345 + 47) & 0xFFFFFFFFFFFFFFF8);
              v1349 = (void *)((v1344 + 47) & 0xFFFFFFFFFFFFFFF8);
              void *v1349 = *v1348;
              unint64_t v1350 = ((unint64_t)v1349 + 15) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1351 = ((unint64_t)v1348 + 15) & 0xFFFFFFFFFFFFFFF8;
              *(void *)unint64_t v1350 = *(void *)v1351;
              *(unsigned char *)(v1350 + 8) = *(unsigned char *)(v1351 + 8);
              *(unsigned char *)(v1350 + 9) = *(unsigned char *)(v1351 + 9);
              v1352 = (void *)((v1978 + v1350) & v2001);
              v1353 = (const void *)((v1978 + v1351) & v2001);
              v1354 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
              swift_bridgeObjectRetain();
              if (v1354(v1353, 1, v1984))
              {
                memcpy(v1352, v1353, __n);
              }
              else
              {
                v1340((unint64_t)v1352, (unint64_t)v1353, v1984);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v1352, 0, 1, v1984);
              }
              v1355 = (void *)(((unint64_t)v1352 + v1979) & 0xFFFFFFFFFFFFFFF8);
              v1356 = (void *)(((unint64_t)v1353 + v1979) & 0xFFFFFFFFFFFFFFF8);
              void *v1355 = *v1356;
              unint64_t v1357 = ((unint64_t)v1355 + 15) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1358 = ((unint64_t)v1356 + 15) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v1359 = *(void *)v1358;
              *(unsigned char *)(v1357 + 8) = *(unsigned char *)(v1358 + 8);
              *(void *)unint64_t v1357 = v1359;
              v1360 = (void *)(((unint64_t)v1355 + 31) & 0xFFFFFFFFFFFFFFF8);
              v1361 = (void *)(((unint64_t)v1356 + 31) & 0xFFFFFFFFFFFFFFF8);
              void *v1360 = *v1361;
              unint64_t v1362 = ((unint64_t)v1360 + 15) & 0xFFFFFFFFFFFFFFF8;
              v1363 = (uint64_t *)(((unint64_t)v1361 + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v1364 = v1363[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((v1364 & 0x3000000000000000) != 0)
              {
                *(_OWORD *)unint64_t v1362 = *(_OWORD *)v1363;
              }
              else
              {
                uint64_t v1365 = *v1363;
                sub_24D3F9C18(*v1363, v1364);
                *(void *)unint64_t v1362 = v1365;
                *(void *)(v1362 + 8) = v1364;
              }
              unint64_t v1366 = (v1362 + 19) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1367 = ((unint64_t)v1363 + 19) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v1368 = *(void *)v1367;
              *(unsigned char *)(v1366 + 8) = *(unsigned char *)(v1367 + 8);
              *(void *)unint64_t v1366 = v1368;
              *(unsigned char *)(v1366 + 9) = *(unsigned char *)(v1367 + 9);
              unint64_t v1369 = (v1366 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              unint64_t v1370 = (v1367 + 13) & 0xFFFFFFFFFFFFFFFCLL;
              int v1371 = *(_DWORD *)v1370;
              *(unsigned char *)(v1369 + 4) = *(unsigned char *)(v1370 + 4);
              *(_DWORD *)unint64_t v1369 = v1371;
              v1372 = (void *)((v1366 + 25) & 0xFFFFFFFFFFFFFFF8);
              v1373 = (void *)((v1367 + 25) & 0xFFFFFFFFFFFFFFF8);
              void *v1372 = *v1373;
              v1372[1] = v1373[1];
              unint64_t v1374 = v2117 + v2016;
              v1375 = (long long *)(v2079 + v2016);
              unint64_t v1376 = *(void *)(v2079 + v2016 + 16);
              if (v1376 >= 0xFFFFFFFF) {
                LODWORD(v1376) = -1;
              }
              int v1377 = v1376 - 1;
              swift_bridgeObjectRetain();
              if (v1377 < 0)
              {
                *(void *)unint64_t v1374 = *(void *)v1375;
                *(unsigned char *)(v1374 + 8) = *((unsigned char *)v1375 + 8);
                *(unsigned char *)(v1374 + 9) = *((unsigned char *)v1375 + 9);
                v1390 = (void *)*((void *)v1375 + 2);
                id v1391 = v1390;
                *(void *)(v1374 + 16) = v1390;
                v1392 = (void *)*((void *)v1375 + 3);
                id v1393 = v1392;
                *(void *)(v1374 + 24) = v1392;
                *(unsigned char *)(v1374 + 32) = *((unsigned char *)v1375 + 32);
                *(unsigned char *)(v1374 + 33) = *((unsigned char *)v1375 + 33);
                *(unsigned char *)(v1374 + 34) = *((unsigned char *)v1375 + 34);
                *(void *)(v1374 + 40) = *((void *)v1375 + 5);
                *(void *)(v1374 + 48) = *((void *)v1375 + 6);
                *(void *)(v1374 + 56) = *((void *)v1375 + 7);
                *(void *)(v1374 + 64) = *((void *)v1375 + 8);
                *(unsigned char *)(v1374 + 72) = *((unsigned char *)v1375 + 72);
                *(void *)(v1374 + 80) = *((void *)v1375 + 10);
                *(void *)(v1374 + 88) = *((void *)v1375 + 11);
                v2118 = (void *)*((void *)v1375 + 12);
                *(void *)(v1374 + 96) = v2118;
                *(unsigned char *)(v1374 + 104) = *((unsigned char *)v1375 + 104);
                *(unsigned char *)(v1374 + 105) = *((unsigned char *)v1375 + 105);
                *(void *)(v1374 + 112) = *((void *)v1375 + 14);
                *(void *)(v1374 + 120) = *((void *)v1375 + 15);
                *(void *)(v1374 + 128) = *((void *)v1375 + 16);
                *(void *)(v1374 + 136) = *((void *)v1375 + 17);
                *(void *)(v1374 + 144) = *((void *)v1375 + 18);
                *(void *)(v1374 + 152) = *((void *)v1375 + 19);
                *(void *)(v1374 + 160) = *((void *)v1375 + 20);
                *(void *)(v1374 + 168) = *((void *)v1375 + 21);
                *(unsigned char *)(v1374 + 176) = *((unsigned char *)v1375 + 176);
                *(void *)(v1374 + 184) = *((void *)v1375 + 23);
                uint64_t v1394 = *((void *)v1375 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                id v1395 = v2118;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v1394)
                {
                  *(void *)(v1374 + 192) = v1394;
                  *(void *)(v1374 + 200) = *((void *)v1375 + 25);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  *(_OWORD *)(v1374 + 192) = v1375[12];
                }
                *(void *)(v1374 + 208) = *((void *)v1375 + 26);
                *(void *)(v1374 + 216) = *((void *)v1375 + 27);
                *(void *)(v1374 + 224) = *((void *)v1375 + 28);
                *(void *)(v1374 + 232) = *((void *)v1375 + 29);
                *(void *)(v1374 + 240) = *((void *)v1375 + 30);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                uint64_t v78 = a1;
                unint64_t v1318 = v1935;
              }
              else
              {
                long long v1378 = *v1375;
                long long v1379 = v1375[1];
                long long v1380 = v1375[3];
                *(_OWORD *)(v1374 + 32) = v1375[2];
                *(_OWORD *)(v1374 + 48) = v1380;
                *(_OWORD *)unint64_t v1374 = v1378;
                *(_OWORD *)(v1374 + 16) = v1379;
                long long v1381 = v1375[4];
                long long v1382 = v1375[5];
                long long v1383 = v1375[7];
                *(_OWORD *)(v1374 + 96) = v1375[6];
                *(_OWORD *)(v1374 + 112) = v1383;
                *(_OWORD *)(v1374 + 64) = v1381;
                *(_OWORD *)(v1374 + 80) = v1382;
                long long v1384 = v1375[8];
                long long v1385 = v1375[9];
                long long v1386 = v1375[11];
                *(_OWORD *)(v1374 + 160) = v1375[10];
                *(_OWORD *)(v1374 + 176) = v1386;
                *(_OWORD *)(v1374 + 128) = v1384;
                *(_OWORD *)(v1374 + 144) = v1385;
                long long v1387 = v1375[12];
                long long v1388 = v1375[13];
                long long v1389 = v1375[14];
                *(void *)(v1374 + 240) = *((void *)v1375 + 30);
                *(_OWORD *)(v1374 + 208) = v1388;
                *(_OWORD *)(v1374 + 224) = v1389;
                *(_OWORD *)(v1374 + 192) = v1387;
                unint64_t v1318 = v1935;
              }
              v1782 = (_OWORD *)((v1374 + 255) & 0xFFFFFFFFFFFFFFF8);
              v1783 = (long long *)(((unint64_t)v1375 + 255) & 0xFFFFFFFFFFFFFFF8);
              long long v1784 = *v1783;
              *(_OWORD *)((char *)v1782 + 9) = *(long long *)((char *)v1783 + 9);
              _OWORD *v1782 = v1784;
              unint64_t v1785 = (v1374 + 287) & 0xFFFFFFFFFFFFFFF8;
              unint64_t v1786 = ((unint64_t)v1375 + 287) & 0xFFFFFFFFFFFFFFF8;
              long long v1787 = *(_OWORD *)v1786;
              *(unsigned char *)(v1785 + 16) = *(unsigned char *)(v1786 + 16);
              *(_OWORD *)unint64_t v1785 = v1787;
              v1788 = (void *)((v1374 + 311) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v1789 = ((unint64_t)v1375 + 311) & 0xFFFFFFFFFFFFFFF8;
              uint64_t v1790 = *(void *)v1789;
              v1789 += 15;
              void *v1788 = v1790;
              v1791 = (void *)(((unint64_t)v1788 + 15) & 0xFFFFFFFFFFFFFFF8);
              uint64_t v1792 = *(void *)(v1789 & 0xFFFFFFFFFFFFFFF8);
              unint64_t v1793 = *(void *)((v1789 & 0xFFFFFFFFFFFFFFF8) + 8);
              sub_24D5203A8(v1792, v1793);
              void *v1791 = v1792;
              v1791[1] = v1793;
              uint64_t v1254 = v1919;
              size_t v1319 = v1985;
              unint64_t v309 = v1945;
              if (v1962)
              {
LABEL_1498:
                unint64_t v1794 = ((((v1941
                          + ((((((((((v1961 + v1319 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                              + 19) & 0xFFFFFFFFFFFFFFF8)
                            + 25) & 0xFFFFFFFFFFFFFFF8)
                          + 327) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)
                      + 16;
                v1795 = (void *)((unint64_t)&v1189[v1794] & 0xFFFFFFFFFFFFFFF8);
                v1796 = (void *)(((unint64_t)v2094 + v1794) & 0xFFFFFFFFFFFFFFF8);
                void *v1795 = *v1796;
                v1797 = *(void **)(((unint64_t)v1796 + 15) & 0xFFFFFFFFFFFFFFF8);
                *(void *)(((unint64_t)v1795 + 15) & 0xFFFFFFFFFFFFFFF8) = v1797;
                v78[v1318] = 0;
                id v1798 = v1797;
                char v1208 = 1;
LABEL_1551:
                v78[v309] = v1208;
                if (v1254 > 3) {
                  goto LABEL_1552;
                }
                unsigned int v1911 = ((1 << (8 * v1254)) + 5) >> (8 * v1254);
                if (v1911 > 0xFFD6)
                {
                  *(_DWORD *)&v78[v1254] = 27;
                  return v78;
                }
                if (v1911 <= 0xD6) {
LABEL_1552:
                }
                  v78[v1254] = 27;
                else {
                  *(_WORD *)&v78[v1254] = 27;
                }
                return v78;
              }
LABEL_1391:
              size_t v1319 = __n;
              goto LABEL_1498;
            }
            unint64_t v1232 = ((unint64_t)v1190 + v1976) & v1187;
            unint64_t v1233 = (v1943 + v1232) & v2007;
            if (v1958 == v1954)
            {
              if (v1947 == v1958)
              {
                int v1191 = (*(uint64_t (**)(unint64_t))(v1970 + 48))((v1943 + v1232) & v2007);
                goto LABEL_1388;
              }
              v1299 = (unint64_t *)((v1974 + v1233) & 0xFFFFFFFFFFFFFFF8);
              if (v2014 > 0x7FFFFFFE)
              {
                int v1191 = (*(uint64_t (**)(unint64_t))(v1972 + 48))(((unint64_t)v1299 + v1966) & v2020);
                goto LABEL_1388;
              }
              unint64_t v1300 = *v1299;
            }
            else
            {
              unint64_t v1255 = v1233 + v2110;
              if ((v1932 & 0x80000000) == 0)
              {
                uint64_t v1256 = v1187;
                unint64_t v1257 = *(void *)(v1255 + 8);
                if (v1257 >= 0xFFFFFFFF) {
                  LODWORD(v1257) = -1;
                }
                int v1191 = v1257 + 1;
                uint64_t v1254 = v1919;
                goto LABEL_1389;
              }
              unint64_t v1311 = (v1983 + ((v2045 + v1255) & v2059)) & v2001;
              if (v1962 > 0x7FFFFFFD)
              {
                int v1191 = (*(uint64_t (**)(unint64_t))(v1981 + 48))(v1311);
                goto LABEL_1388;
              }
              unint64_t v1300 = *(void *)(((v1930 + ((v1980 + v1311) & v2001)) & 0xFFFFFFFFFFFFFFF8) + 8);
            }
            if (v1300 >= 0xFFFFFFFF) {
              LODWORD(v1300) = -1;
            }
            uint64_t v1254 = v1919;
            uint64_t v1256 = v1187;
            uint64_t v1317 = v1943;
            if ((v1300 + 1) >= 2) {
              goto LABEL_1390;
            }
            goto LABEL_1393;
        }
      }
      uint64_t v2041 = ~v2035;
      unsigned int v723 = a2[v313];
      unsigned int v724 = v723 - 8;
      uint64_t v725 = v1988;
      if (v723 >= 8)
      {
        if (v313 <= 3) {
          uint64_t v726 = v313;
        }
        else {
          uint64_t v726 = 4;
        }
        switch(v726)
        {
          case 1:
            int v727 = *a2;
            goto LABEL_1251;
          case 2:
            int v727 = *(unsigned __int16 *)a2;
            goto LABEL_1251;
          case 3:
            int v727 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_1251;
          case 4:
            int v727 = *(_DWORD *)a2;
LABEL_1251:
            if (v313 < 4) {
              unsigned int v723 = (v727 | (v724 << (8 * v313))) + 8;
            }
            else {
              unsigned int v723 = v727 + 8;
            }
            break;
          default:
            break;
        }
      }
      uint64_t v1209 = ~v51;
      switch(v723)
      {
        case 1u:
          uint64_t v2063 = ~v2051;
          uint64_t v1214 = v87;
          uint64_t v1916 = ~v2066;
          uint64_t v2010 = v91;
          unint64_t v1996 = ~(unint64_t)v2002;
          uint64_t v2023 = v92;
          size_t v2114 = v34;
          v1215 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16);
          v1215(v78, a2, AssociatedTypeWitness);
          v1216 = (unsigned char *)((unint64_t)&v78[v1929] & ~v2085);
          v1217 = (void *)((unint64_t)&a2[v1929] & ~v2085);
          if (v2039 == v1955)
          {
            int v1218 = (*(uint64_t (**)(void *))(v1987 + 48))(v1217);
LABEL_1460:
            uint64_t v1270 = v1214;
LABEL_1461:
            if (v1218)
            {
LABEL_1462:
              memcpy(v1216, v1217, v2042);
              uint64_t v1629 = v1919;
              uint64_t v1630 = v2066;
              goto LABEL_1463;
            }
            unint64_t v1240 = ((unint64_t)v1217 + v1977) & v1270;
            unint64_t v1241 = (v1944 + v1240) & v2041;
LABEL_1465:
            v2096 = (void *)((unint64_t)&a2[v1929] & ~v2085);
            uint64_t v1632 = v1270;
            v1215(v1216, (unsigned __int8 *)v1217, AssociatedTypeWitness);
            v2090 = (unsigned char *)((unint64_t)&v78[v1929] & ~v2085);
            v1215((unsigned char *)((unint64_t)&v1216[v1977] & v1632), (unsigned __int8 *)v1240, AssociatedTypeWitness);
            unint64_t v1633 = (v1944 + ((unint64_t)&v1216[v1977] & v1632)) & v2041;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1968 + 16))(v1633, v1241, v1967);
            v1634 = (void *)((v1975 + v1633) & 0xFFFFFFFFFFFFFFF8);
            v1635 = (void *)((v1975 + v1241) & 0xFFFFFFFFFFFFFFF8);
            void *v1634 = *v1635;
            unint64_t v1636 = ((unint64_t)v1634 + v1963) & v1996;
            unint64_t v1637 = ((unint64_t)v1635 + v1963) & v1996;
            v1638 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
            swift_bridgeObjectRetain();
            v1638(v1636, v1637, v1964);
            v1639 = (void *)((v1959 + v1637) & 0xFFFFFFFFFFFFFFF8);
            v1640 = (void *)((v1959 + v1636) & 0xFFFFFFFFFFFFFFF8);
            void *v1640 = *v1639;
            v1641 = (void *)(((unint64_t)v1640 + 15) & 0xFFFFFFFFFFFFFFF8);
            v1642 = (void *)(((unint64_t)v1639 + 15) & 0xFFFFFFFFFFFFFFF8);
            void *v1641 = *v1642;
            v1641[1] = v1642[1];
            v1643 = (void *)(v1633 + v2043);
            void *v1643 = *(void *)(v1241 + v2043);
            v1643[1] = *(void *)(v1241 + v2043 + 8);
            size_t v1644 = (v2045 + v1633 + v2043) & v2063;
            size_t v1645 = (v2045 + v1241 + v2043) & v2063;
            *(unsigned char *)size_t v1644 = *(unsigned char *)v1645;
            uint64_t v1646 = v1644 | 4;
            int v1647 = *(_DWORD *)(v1645 | 4);
            *(unsigned char *)(v1646 + 4) = *(unsigned char *)((v1645 | 4) + 4);
            *(_DWORD *)uint64_t v1646 = v1647;
            *(_WORD *)(v1644 + 10) = *(_WORD *)(v1645 + 0xA);
            size_t v2082 = v1644;
            unint64_t v1648 = (v1983 + v1644) & v2001;
            size_t v2065 = v1645;
            unint64_t v1649 = (v1983 + v1645) & v2001;
            v1650 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1650(v1648, v1649, v1984);
            unint64_t v1651 = (v1980 + v1648) & v2001;
            unint64_t v1652 = (v1980 + v1649) & v2001;
            v1650(v1651, v1652, v1984);
            v1653 = (unsigned char *)(v1651 + v1985);
            unsigned char *v1653 = *(unsigned char *)(v1652 + v1985);
            v1653[1] = *(unsigned char *)(v1652 + v1985 + 1);
            v1653[2] = *(unsigned char *)(v1652 + v1985 + 2);
            v1653[3] = *(unsigned char *)(v1652 + v1985 + 3);
            v1653[4] = *(unsigned char *)(v1652 + v1985 + 4);
            unint64_t v1654 = (v1651 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1655 = (v1652 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v1654 = *(void *)v1655;
            *(void *)(v1654 + 8) = *(void *)(v1655 + 8);
            *(unsigned char *)(v1654 + 16) = *(unsigned char *)(v1655 + 16);
            *(unsigned char *)(v1654 + 17) = *(unsigned char *)(v1655 + 17);
            *(unsigned char *)(v1654 + 18) = *(unsigned char *)(v1655 + 18);
            *(unsigned char *)(v1654 + 19) = *(unsigned char *)(v1655 + 19);
            unint64_t v1656 = (v1654 + 27) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1657 = (v1655 + 27) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v1656 = *(void *)v1657;
            *(unsigned char *)(v1656 + 8) = *(unsigned char *)(v1657 + 8);
            *(unsigned char *)(v1656 + 9) = *(unsigned char *)(v1657 + 9);
            *(unsigned char *)(v1656 + 10) = *(unsigned char *)(v1657 + 10);
            *(unsigned char *)(v1656 + 11) = *(unsigned char *)(v1657 + 11);
            *(unsigned char *)(v1656 + 12) = *(unsigned char *)(v1657 + 12);
            v1658 = (void *)((v1655 + 47) & 0xFFFFFFFFFFFFFFF8);
            v1659 = (void *)((v1654 + 47) & 0xFFFFFFFFFFFFFFF8);
            void *v1659 = *v1658;
            unint64_t v1660 = ((unint64_t)v1659 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1661 = ((unint64_t)v1658 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v1660 = *(void *)v1661;
            *(unsigned char *)(v1660 + 8) = *(unsigned char *)(v1661 + 8);
            *(unsigned char *)(v1660 + 9) = *(unsigned char *)(v1661 + 9);
            v1662 = (void *)((v1978 + v1660) & v2001);
            v1663 = (const void *)((v1978 + v1661) & v2001);
            v1664 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
            swift_bridgeObjectRetain();
            if (v1664(v1663, 1, v1984))
            {
              memcpy(v1662, v1663, __n);
            }
            else
            {
              v1650((unint64_t)v1662, (unint64_t)v1663, v1984);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v1662, 0, 1, v1984);
            }
            v1665 = (void *)(((unint64_t)v1662 + v1979) & 0xFFFFFFFFFFFFFFF8);
            v1666 = (void *)(((unint64_t)v1663 + v1979) & 0xFFFFFFFFFFFFFFF8);
            void *v1665 = *v1666;
            unint64_t v1667 = ((unint64_t)v1665 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1668 = ((unint64_t)v1666 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v1669 = *(void *)v1668;
            *(unsigned char *)(v1667 + 8) = *(unsigned char *)(v1668 + 8);
            *(void *)unint64_t v1667 = v1669;
            v1670 = (void *)(((unint64_t)v1665 + 31) & 0xFFFFFFFFFFFFFFF8);
            v1671 = (void *)(((unint64_t)v1666 + 31) & 0xFFFFFFFFFFFFFFF8);
            void *v1670 = *v1671;
            unint64_t v1672 = ((unint64_t)v1670 + 15) & 0xFFFFFFFFFFFFFFF8;
            v1673 = (uint64_t *)(((unint64_t)v1671 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v1674 = v1673[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v1674 & 0x3000000000000000) != 0)
            {
              *(_OWORD *)unint64_t v1672 = *(_OWORD *)v1673;
            }
            else
            {
              uint64_t v1675 = *v1673;
              sub_24D3F9C18(*v1673, v1674);
              *(void *)unint64_t v1672 = v1675;
              *(void *)(v1672 + 8) = v1674;
            }
            unint64_t v1676 = (v1672 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1677 = ((unint64_t)v1673 + 19) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v1678 = *(void *)v1677;
            *(unsigned char *)(v1676 + 8) = *(unsigned char *)(v1677 + 8);
            *(void *)unint64_t v1676 = v1678;
            *(unsigned char *)(v1676 + 9) = *(unsigned char *)(v1677 + 9);
            unint64_t v1679 = (v1676 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            unint64_t v1680 = (v1677 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            int v1681 = *(_DWORD *)v1680;
            *(unsigned char *)(v1679 + 4) = *(unsigned char *)(v1680 + 4);
            *(_DWORD *)unint64_t v1679 = v1681;
            v1682 = (void *)((v1676 + 25) & 0xFFFFFFFFFFFFFFF8);
            v1683 = (void *)((v1677 + 25) & 0xFFFFFFFFFFFFFFF8);
            void *v1682 = *v1683;
            v1682[1] = v1683[1];
            unint64_t v1684 = v2016 + v2082;
            v1685 = (long long *)(v2016 + v2065);
            unint64_t v1686 = *(void *)(v2016 + v2065 + 16);
            if (v1686 >= 0xFFFFFFFF) {
              LODWORD(v1686) = -1;
            }
            int v1687 = v1686 - 1;
            swift_bridgeObjectRetain();
            if (v1687 < 0)
            {
              *(void *)unint64_t v1684 = *(void *)v1685;
              *(unsigned char *)(v1684 + 8) = *((unsigned char *)v1685 + 8);
              *(unsigned char *)(v1684 + 9) = *((unsigned char *)v1685 + 9);
              v1700 = (void *)*((void *)v1685 + 2);
              id v1701 = v1700;
              *(void *)(v1684 + 16) = v1700;
              v1702 = (void *)*((void *)v1685 + 3);
              id v1703 = v1702;
              *(void *)(v1684 + 24) = v1702;
              *(unsigned char *)(v1684 + 32) = *((unsigned char *)v1685 + 32);
              *(unsigned char *)(v1684 + 33) = *((unsigned char *)v1685 + 33);
              *(unsigned char *)(v1684 + 34) = *((unsigned char *)v1685 + 34);
              *(void *)(v1684 + 40) = *((void *)v1685 + 5);
              *(void *)(v1684 + 48) = *((void *)v1685 + 6);
              *(void *)(v1684 + 56) = *((void *)v1685 + 7);
              *(void *)(v1684 + 64) = *((void *)v1685 + 8);
              *(unsigned char *)(v1684 + 72) = *((unsigned char *)v1685 + 72);
              *(void *)(v1684 + 80) = *((void *)v1685 + 10);
              *(void *)(v1684 + 88) = *((void *)v1685 + 11);
              v2083 = (void *)*((void *)v1685 + 12);
              *(void *)(v1684 + 96) = v2083;
              *(unsigned char *)(v1684 + 104) = *((unsigned char *)v1685 + 104);
              *(unsigned char *)(v1684 + 105) = *((unsigned char *)v1685 + 105);
              *(void *)(v1684 + 112) = *((void *)v1685 + 14);
              *(void *)(v1684 + 120) = *((void *)v1685 + 15);
              *(void *)(v1684 + 128) = *((void *)v1685 + 16);
              *(void *)(v1684 + 136) = *((void *)v1685 + 17);
              *(void *)(v1684 + 144) = *((void *)v1685 + 18);
              *(void *)(v1684 + 152) = *((void *)v1685 + 19);
              *(void *)(v1684 + 160) = *((void *)v1685 + 20);
              *(void *)(v1684 + 168) = *((void *)v1685 + 21);
              *(unsigned char *)(v1684 + 176) = *((unsigned char *)v1685 + 176);
              *(void *)(v1684 + 184) = *((void *)v1685 + 23);
              uint64_t v1704 = *((void *)v1685 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v1705 = v2083;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v1704)
              {
                *(void *)(v1684 + 192) = v1704;
                *(void *)(v1684 + 200) = *((void *)v1685 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v1684 + 192) = v1685[12];
              }
              *(void *)(v1684 + 208) = *((void *)v1685 + 26);
              *(void *)(v1684 + 216) = *((void *)v1685 + 27);
              *(void *)(v1684 + 224) = *((void *)v1685 + 28);
              *(void *)(v1684 + 232) = *((void *)v1685 + 29);
              *(void *)(v1684 + 240) = *((void *)v1685 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v78 = a1;
            }
            else
            {
              long long v1688 = *v1685;
              long long v1689 = v1685[1];
              long long v1690 = v1685[3];
              *(_OWORD *)(v1684 + 32) = v1685[2];
              *(_OWORD *)(v1684 + 48) = v1690;
              *(_OWORD *)unint64_t v1684 = v1688;
              *(_OWORD *)(v1684 + 16) = v1689;
              long long v1691 = v1685[4];
              long long v1692 = v1685[5];
              long long v1693 = v1685[7];
              *(_OWORD *)(v1684 + 96) = v1685[6];
              *(_OWORD *)(v1684 + 112) = v1693;
              *(_OWORD *)(v1684 + 64) = v1691;
              *(_OWORD *)(v1684 + 80) = v1692;
              long long v1694 = v1685[8];
              long long v1695 = v1685[9];
              long long v1696 = v1685[11];
              *(_OWORD *)(v1684 + 160) = v1685[10];
              *(_OWORD *)(v1684 + 176) = v1696;
              *(_OWORD *)(v1684 + 128) = v1694;
              *(_OWORD *)(v1684 + 144) = v1695;
              long long v1697 = v1685[12];
              long long v1698 = v1685[13];
              long long v1699 = v1685[14];
              *(void *)(v1684 + 240) = *((void *)v1685 + 30);
              *(_OWORD *)(v1684 + 208) = v1698;
              *(_OWORD *)(v1684 + 224) = v1699;
              *(_OWORD *)(v1684 + 192) = v1697;
            }
            v1864 = (_OWORD *)((v1684 + 255) & 0xFFFFFFFFFFFFFFF8);
            v1865 = (long long *)(((unint64_t)v1685 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v1866 = *v1865;
            *(_OWORD *)((char *)v1864 + 9) = *(long long *)((char *)v1865 + 9);
            _OWORD *v1864 = v1866;
            unint64_t v1867 = (v1684 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1868 = ((unint64_t)v1685 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v1869 = *(_OWORD *)v1868;
            *(unsigned char *)(v1867 + 16) = *(unsigned char *)(v1868 + 16);
            *(_OWORD *)unint64_t v1867 = v1869;
            v1870 = (void *)((v1684 + 311) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v1871 = ((unint64_t)v1685 + 311) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v1872 = *(void *)v1871;
            v1871 += 15;
            void *v1870 = v1872;
            v1873 = (void *)(((unint64_t)v1870 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v1874 = *(void *)(v1871 & 0xFFFFFFFFFFFFFFF8);
            unint64_t v1875 = *(void *)((v1871 & 0xFFFFFFFFFFFFFFF8) + 8);
            sub_24D5203A8(v1874, v1875);
            void *v1873 = v1874;
            v1873[1] = v1875;
            uint64_t v1629 = v1919;
            size_t v1631 = v1985;
            uint64_t v725 = v1988;
            uint64_t v1630 = v2066;
            v1216 = v2090;
            v1217 = v2096;
            if (v1962)
            {
LABEL_1529:
              unint64_t v1876 = ((((v1956
                        + ((((((((((v1961 + v1631 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 19) & 0xFFFFFFFFFFFFFFF8)
                          + 25) & 0xFFFFFFFFFFFFFFF8)
                        + 327) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 16;
              v1877 = (void *)((unint64_t)&v1216[v1630 + v1876] & v1916);
              v1878 = (const void *)(((unint64_t)v1217 + v1630 + v1876) & v1916);
              if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v2048 + 48))(v1878, 1, v725))
              {
                memcpy(v1877, v1878, v1934);
              }
              else
              {
                (*(void (**)(void *, const void *, uint64_t))(v2048 + 16))(v1877, v1878, v725);
                (*(void (**)(void *, void, uint64_t, uint64_t))(v2048 + 56))(v1877, 0, 1, v725);
              }
              v1879 = (char *)(((unint64_t)v1877 + v2012) & v2010);
              v1880 = (char *)(((unint64_t)v1878 + v2012) & v2010);
              if (v1947 == v1958)
              {
                int v1881 = (*(uint64_t (**)(char *))(v1970 + 48))(v1880);
              }
              else
              {
                v1882 = (uint64_t *)((unint64_t)&v1880[v1974] & 0xFFFFFFFFFFFFFFF8);
                if (v2014 <= 0x7FFFFFFE)
                {
                  uint64_t v1883 = *v1882;
                  if ((unint64_t)*v1882 >= 0xFFFFFFFF) {
                    LODWORD(v1883) = -1;
                  }
                  if ((v1883 + 1) >= 2) {
                    goto LABEL_1541;
                  }
                  goto LABEL_1543;
                }
                int v1881 = (*(uint64_t (**)(unint64_t))(v1972 + 48))(((unint64_t)v1882 + v1966) & v2023);
              }
              if (v1881)
              {
LABEL_1541:
                size_t v1884 = v2114;
                memcpy(v1879, v1880, v2114);
                uint64_t v1254 = v1629;
LABEL_1544:
                *(void *)&v1879[v1884] = *(void *)&v1880[v1884];
                v1893 = (void *)((unint64_t)&v1879[v1884 + 15] & 0xFFFFFFFFFFFFFFF8);
                v1894 = (void *)((unint64_t)&v1880[v1884 + 15] & 0xFFFFFFFFFFFFFFF8);
                void *v1893 = *v1894;
                v1297 = *(void **)(((unint64_t)v1894 + 15) & 0xFFFFFFFFFFFFFFF8);
                *(void *)(((unint64_t)v1893 + 15) & 0xFFFFFFFFFFFFFFF8) = v1297;
                char v1298 = 1;
                goto LABEL_1545;
              }
              v1882 = (uint64_t *)((unint64_t)&v1880[v1974] & 0xFFFFFFFFFFFFFFF8);
LABEL_1543:
              (*(void (**)(char *, char *, uint64_t))(v1970 + 16))(v1879, v1880, v1969);
              v1885 = (void *)((unint64_t)&v1879[v1974] & 0xFFFFFFFFFFFFFFF8);
              void *v1885 = *v1882;
              unint64_t v1886 = ((unint64_t)v1885 + v1966) & v2023;
              unint64_t v1887 = ((unint64_t)v1882 + v1966) & v2023;
              v1888 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
              swift_bridgeObjectRetain();
              v1888(v1886, v1887, v1971);
              v1889 = (void *)((v1960 + v1886) & 0xFFFFFFFFFFFFFFF8);
              v1890 = (void *)((v1960 + v1887) & 0xFFFFFFFFFFFFFFF8);
              void *v1889 = *v1890;
              v1891 = (void *)(((unint64_t)v1889 + 15) & 0xFFFFFFFFFFFFFFF8);
              v1892 = (void *)(((unint64_t)v1890 + 15) & 0xFFFFFFFFFFFFFFF8);
              void *v1891 = *v1892;
              v1891[1] = v1892[1];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v1254 = v1629;
              size_t v1884 = v2114;
              goto LABEL_1544;
            }
LABEL_1463:
            size_t v1631 = __n;
            goto LABEL_1529;
          }
          unint64_t v1240 = ((unint64_t)v1217 + v1977) & v1214;
          unint64_t v1241 = (v1944 + v1240) & v2041;
          if (v1957 == v1955)
          {
            if (v1946 == v1957)
            {
              int v1218 = (*(uint64_t (**)(unint64_t))(v1968 + 48))((v1944 + v1240) & v2041);
              goto LABEL_1460;
            }
            v1307 = (unint64_t *)((v1975 + v1241) & 0xFFFFFFFFFFFFFFF8);
            if (v1936 > 0x7FFFFFFE)
            {
              int v1218 = (*(uint64_t (**)(unint64_t))(v1965 + 48))(((unint64_t)v1307 + v1963) & v1996);
              goto LABEL_1460;
            }
            unint64_t v1308 = *v1307;
          }
          else
          {
            size_t v1269 = v1241 + v2043;
            if ((v1933 & 0x80000000) == 0)
            {
              uint64_t v1270 = v1214;
              unint64_t v1271 = *(void *)(v1269 + 8);
              if (v1271 >= 0xFFFFFFFF) {
                LODWORD(v1271) = -1;
              }
              int v1218 = v1271 + 1;
              goto LABEL_1461;
            }
            unint64_t v1315 = (v1983 + ((v2045 + v1269) & v2063)) & v2001;
            if (v1962 > 0x7FFFFFFD)
            {
              int v1218 = (*(uint64_t (**)(unint64_t))(v1981 + 48))(v1315);
              goto LABEL_1460;
            }
            unint64_t v1308 = *(void *)(((v1930 + ((v1980 + v1315) & v2001)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v1308 >= 0xFFFFFFFF) {
            LODWORD(v1308) = -1;
          }
          uint64_t v1270 = v1214;
          if ((v1308 + 1) >= 2) {
            goto LABEL_1462;
          }
          goto LABEL_1465;
        case 2u:
          uint64_t v1219 = v91;
          uint64_t v2024 = v92;
          size_t v2115 = v34;
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16))(v78, a2, AssociatedTypeWitness);
          v1220 = (void *)((unint64_t)&v78[v1953] & ~v2066);
          v1221 = (const void *)((unint64_t)&a2[v1953] & ~v2066);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v2048 + 48))(v1221, 1, v1988))
          {
            memcpy(v1220, v1221, v1934);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v2048 + 16))(v1220, v1221, v1988);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v2048 + 56))(v1220, 0, 1, v1988);
          }
          v1249 = (char *)(((unint64_t)v1220 + v2012) & v1219);
          v1250 = (char *)(((unint64_t)v1221 + v2012) & v1219);
          if (v1947 == v1958)
          {
            int v1251 = (*(uint64_t (**)(char *))(v1970 + 48))(v1250);
          }
          else
          {
            v1252 = (uint64_t *)((unint64_t)&v1250[v1974] & 0xFFFFFFFFFFFFFFF8);
            if (v2014 <= 0x7FFFFFFE)
            {
              uint64_t v1253 = *v1252;
              if ((unint64_t)*v1252 >= 0xFFFFFFFF) {
                LODWORD(v1253) = -1;
              }
              if ((v1253 + 1) >= 2) {
                goto LABEL_1359;
              }
              goto LABEL_1361;
            }
            int v1251 = (*(uint64_t (**)(unint64_t))(v1972 + 48))(((unint64_t)v1252 + v1966) & v2024);
          }
          if (v1251)
          {
LABEL_1359:
            size_t v1287 = v2115;
            memcpy(v1249, v1250, v2115);
            uint64_t v1254 = v1919;
            goto LABEL_1362;
          }
          v1252 = (uint64_t *)((unint64_t)&v1250[v1974] & 0xFFFFFFFFFFFFFFF8);
LABEL_1361:
          (*(void (**)(char *, char *, uint64_t))(v1970 + 16))(v1249, v1250, v1969);
          v1288 = (void *)((unint64_t)&v1249[v1974] & 0xFFFFFFFFFFFFFFF8);
          void *v1288 = *v1252;
          unint64_t v1289 = ((unint64_t)v1288 + v1966) & v2024;
          unint64_t v1290 = ((unint64_t)v1252 + v1966) & v2024;
          v1291 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
          swift_bridgeObjectRetain();
          v1291(v1289, v1290, v1971);
          v1292 = (void *)((v1960 + v1289) & 0xFFFFFFFFFFFFFFF8);
          v1293 = (void *)((v1960 + v1290) & 0xFFFFFFFFFFFFFFF8);
          void *v1292 = *v1293;
          v1294 = (void *)(((unint64_t)v1292 + 15) & 0xFFFFFFFFFFFFFFF8);
          v1295 = (void *)(((unint64_t)v1293 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v1294 = *v1295;
          v1294[1] = v1295[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v1254 = v1919;
          size_t v1287 = v2115;
LABEL_1362:
          v1296 = &v1249[v1287];
          char *v1296 = v1250[v1287];
          v1297 = *(void **)&v1250[v1287 + 8];
          *((void *)v1296 + 1) = v1297;
          char v1298 = 2;
LABEL_1545:
          v78[v1942] = v1298;
          id v1895 = v1297;
          char v1208 = 0;
          unint64_t v309 = v1945;
          goto LABEL_1551;
        case 3u:
          uint64_t v2064 = ~v2051;
          uint64_t v1222 = v87;
          unint64_t v1997 = ~(unint64_t)v2002;
          v1223 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16);
          v1223(v78, a2, AssociatedTypeWitness);
          v1224 = (unsigned char *)((unint64_t)&v78[v1929] & ~v2085);
          v2116 = (void *)((unint64_t)&a2[v1929] & ~v2085);
          if (v2039 == v1955)
          {
            int v1225 = (*(uint64_t (**)(void))(v1987 + 48))();
LABEL_1478:
            uint64_t v1254 = v1919;
            uint64_t v1273 = v1222;
LABEL_1479:
            unint64_t v309 = v1945;
            if (v1225)
            {
LABEL_1480:
              unint64_t v1706 = (unint64_t)&a2[v1929] & ~v2085;
              memcpy(v1224, v2116, v2042);
LABEL_1481:
              size_t v1707 = __n;
              goto LABEL_1549;
            }
            unint64_t v1242 = ((unint64_t)v2116 + v1977) & v1273;
            unint64_t v1243 = (v1944 + v1242) & v2041;
            goto LABEL_1483;
          }
          unint64_t v1242 = (v1977 + ((unint64_t)&a2[v1929] & ~v2085)) & v1222;
          unint64_t v1243 = (v1944 + v1242) & v2041;
          if (v1957 == v1955)
          {
            if (v1946 == v1957)
            {
              int v1225 = (*(uint64_t (**)(unint64_t))(v1968 + 48))((v1944 + v1242) & v2041);
              goto LABEL_1478;
            }
            v1309 = (unint64_t *)((v1975 + v1243) & 0xFFFFFFFFFFFFFFF8);
            if (v1936 > 0x7FFFFFFE)
            {
              int v1225 = (*(uint64_t (**)(unint64_t))(v1965 + 48))(((unint64_t)v1309 + v1963) & v1997);
              goto LABEL_1478;
            }
            unint64_t v1310 = *v1309;
          }
          else
          {
            size_t v1272 = v1243 + v2043;
            if ((v1933 & 0x80000000) == 0)
            {
              uint64_t v1273 = v1222;
              unint64_t v1274 = *(void *)(v1272 + 8);
              if (v1274 >= 0xFFFFFFFF) {
                LODWORD(v1274) = -1;
              }
              int v1225 = v1274 + 1;
              uint64_t v1254 = v1919;
              goto LABEL_1479;
            }
            unint64_t v1316 = (v1983 + ((v2045 + v1272) & v2064)) & v2001;
            if (v1962 > 0x7FFFFFFD)
            {
              int v1225 = (*(uint64_t (**)(unint64_t))(v1981 + 48))(v1316);
              goto LABEL_1478;
            }
            unint64_t v1310 = *(void *)(((v1930 + ((v1980 + v1316) & v2001)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v1310 >= 0xFFFFFFFF) {
            LODWORD(v1310) = -1;
          }
          uint64_t v1254 = v1919;
          unint64_t v309 = v1945;
          uint64_t v1273 = v1222;
          if ((v1310 + 1) >= 2) {
            goto LABEL_1480;
          }
LABEL_1483:
          uint64_t v1708 = v1273;
          v1223(v1224, (unsigned __int8 *)v2116, AssociatedTypeWitness);
          v1223((unsigned char *)((unint64_t)&v1224[v1977] & v1708), (unsigned __int8 *)v1242, AssociatedTypeWitness);
          unint64_t v1709 = (v1944 + ((unint64_t)&v1224[v1977] & v1708)) & v2041;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v1968 + 16))(v1709, v1243, v1967);
          v1710 = (void *)((v1975 + v1709) & 0xFFFFFFFFFFFFFFF8);
          v1711 = (void *)((v1975 + v1243) & 0xFFFFFFFFFFFFFFF8);
          void *v1710 = *v1711;
          unint64_t v1712 = ((unint64_t)v1710 + v1963) & v1997;
          unint64_t v1713 = ((unint64_t)v1711 + v1963) & v1997;
          v1714 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
          swift_bridgeObjectRetain();
          v1714(v1712, v1713, v1964);
          v1715 = (void *)((v1959 + v1713) & 0xFFFFFFFFFFFFFFF8);
          v1716 = (void *)((v1959 + v1712) & 0xFFFFFFFFFFFFFFF8);
          void *v1716 = *v1715;
          v1717 = (void *)(((unint64_t)v1716 + 15) & 0xFFFFFFFFFFFFFFF8);
          v1718 = (void *)(((unint64_t)v1715 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v1717 = *v1718;
          v1717[1] = v1718[1];
          v1719 = (void *)(v1709 + v2043);
          void *v1719 = *(void *)(v1243 + v2043);
          v1719[1] = *(void *)(v1243 + v2043 + 8);
          size_t v1720 = (v2045 + v1709 + v2043) & v2064;
          size_t v1721 = (v2045 + v1243 + v2043) & v2064;
          *(unsigned char *)size_t v1720 = *(unsigned char *)v1721;
          uint64_t v1722 = v1720 | 4;
          int v1723 = *(_DWORD *)(v1721 | 4);
          *(unsigned char *)(v1722 + 4) = *(unsigned char *)((v1721 | 4) + 4);
          *(_DWORD *)uint64_t v1722 = v1723;
          *(_WORD *)(v1720 + 10) = *(_WORD *)(v1721 + 0xA);
          size_t v2091 = v1720;
          unint64_t v1724 = (v1983 + v1720) & v2001;
          size_t v2084 = v1721;
          unint64_t v1725 = (v1983 + v1721) & v2001;
          v1726 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v1726(v1724, v1725, v1984);
          unint64_t v1727 = (v1980 + v1724) & v2001;
          unint64_t v1728 = (v1980 + v1725) & v2001;
          v1726(v1727, v1728, v1984);
          v1729 = (unsigned char *)(v1727 + v1985);
          unsigned char *v1729 = *(unsigned char *)(v1728 + v1985);
          v1729[1] = *(unsigned char *)(v1728 + v1985 + 1);
          v1729[2] = *(unsigned char *)(v1728 + v1985 + 2);
          v1729[3] = *(unsigned char *)(v1728 + v1985 + 3);
          v1729[4] = *(unsigned char *)(v1728 + v1985 + 4);
          unint64_t v1730 = (v1727 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1731 = (v1728 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v1730 = *(void *)v1731;
          *(void *)(v1730 + 8) = *(void *)(v1731 + 8);
          *(unsigned char *)(v1730 + 16) = *(unsigned char *)(v1731 + 16);
          *(unsigned char *)(v1730 + 17) = *(unsigned char *)(v1731 + 17);
          *(unsigned char *)(v1730 + 18) = *(unsigned char *)(v1731 + 18);
          *(unsigned char *)(v1730 + 19) = *(unsigned char *)(v1731 + 19);
          unint64_t v1732 = (v1730 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1733 = (v1731 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v1732 = *(void *)v1733;
          *(unsigned char *)(v1732 + 8) = *(unsigned char *)(v1733 + 8);
          *(unsigned char *)(v1732 + 9) = *(unsigned char *)(v1733 + 9);
          *(unsigned char *)(v1732 + 10) = *(unsigned char *)(v1733 + 10);
          *(unsigned char *)(v1732 + 11) = *(unsigned char *)(v1733 + 11);
          *(unsigned char *)(v1732 + 12) = *(unsigned char *)(v1733 + 12);
          v1734 = (void *)((v1731 + 47) & 0xFFFFFFFFFFFFFFF8);
          v1735 = (void *)((v1730 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v1735 = *v1734;
          unint64_t v1736 = ((unint64_t)v1735 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1737 = ((unint64_t)v1734 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v1736 = *(void *)v1737;
          *(unsigned char *)(v1736 + 8) = *(unsigned char *)(v1737 + 8);
          *(unsigned char *)(v1736 + 9) = *(unsigned char *)(v1737 + 9);
          v1738 = (void *)((v1978 + v1736) & v2001);
          v1739 = (const void *)((v1978 + v1737) & v2001);
          v1740 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
          swift_bridgeObjectRetain();
          if (v1740(v1739, 1, v1984))
          {
            memcpy(v1738, v1739, __n);
          }
          else
          {
            v1726((unint64_t)v1738, (unint64_t)v1739, v1984);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v1738, 0, 1, v1984);
          }
          v1741 = (void *)(((unint64_t)v1738 + v1979) & 0xFFFFFFFFFFFFFFF8);
          v1742 = (void *)(((unint64_t)v1739 + v1979) & 0xFFFFFFFFFFFFFFF8);
          void *v1741 = *v1742;
          unint64_t v1743 = ((unint64_t)v1741 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1744 = ((unint64_t)v1742 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v1745 = *(void *)v1744;
          *(unsigned char *)(v1743 + 8) = *(unsigned char *)(v1744 + 8);
          *(void *)unint64_t v1743 = v1745;
          v1746 = (void *)(((unint64_t)v1741 + 31) & 0xFFFFFFFFFFFFFFF8);
          v1747 = (void *)(((unint64_t)v1742 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v1746 = *v1747;
          unint64_t v1748 = ((unint64_t)v1746 + 15) & 0xFFFFFFFFFFFFFFF8;
          v1749 = (uint64_t *)(((unint64_t)v1747 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v1750 = v1749[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v1750 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v1748 = *(_OWORD *)v1749;
          }
          else
          {
            uint64_t v1751 = *v1749;
            sub_24D3F9C18(*v1749, v1750);
            *(void *)unint64_t v1748 = v1751;
            *(void *)(v1748 + 8) = v1750;
          }
          unint64_t v1752 = (v1748 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1753 = ((unint64_t)v1749 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v1754 = *(void *)v1753;
          *(unsigned char *)(v1752 + 8) = *(unsigned char *)(v1753 + 8);
          *(void *)unint64_t v1752 = v1754;
          *(unsigned char *)(v1752 + 9) = *(unsigned char *)(v1753 + 9);
          unint64_t v1755 = (v1752 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v1756 = (v1753 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v1757 = *(_DWORD *)v1756;
          *(unsigned char *)(v1755 + 4) = *(unsigned char *)(v1756 + 4);
          *(_DWORD *)unint64_t v1755 = v1757;
          v1758 = (void *)((v1752 + 25) & 0xFFFFFFFFFFFFFFF8);
          v1759 = (void *)((v1753 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v1758 = *v1759;
          v1758[1] = v1759[1];
          unint64_t v1760 = v2016 + v2091;
          v1761 = (long long *)(v2016 + v2084);
          unint64_t v1762 = *(void *)(v2016 + v2084 + 16);
          if (v1762 >= 0xFFFFFFFF) {
            LODWORD(v1762) = -1;
          }
          int v1763 = v1762 - 1;
          swift_bridgeObjectRetain();
          if (v1763 < 0)
          {
            *(void *)unint64_t v1760 = *(void *)v1761;
            *(unsigned char *)(v1760 + 8) = *((unsigned char *)v1761 + 8);
            *(unsigned char *)(v1760 + 9) = *((unsigned char *)v1761 + 9);
            v1776 = (void *)*((void *)v1761 + 2);
            id v1777 = v1776;
            *(void *)(v1760 + 16) = v1776;
            v1778 = (void *)*((void *)v1761 + 3);
            id v1779 = v1778;
            *(void *)(v1760 + 24) = v1778;
            *(unsigned char *)(v1760 + 32) = *((unsigned char *)v1761 + 32);
            *(unsigned char *)(v1760 + 33) = *((unsigned char *)v1761 + 33);
            *(unsigned char *)(v1760 + 34) = *((unsigned char *)v1761 + 34);
            *(void *)(v1760 + 40) = *((void *)v1761 + 5);
            *(void *)(v1760 + 48) = *((void *)v1761 + 6);
            *(void *)(v1760 + 56) = *((void *)v1761 + 7);
            *(void *)(v1760 + 64) = *((void *)v1761 + 8);
            *(unsigned char *)(v1760 + 72) = *((unsigned char *)v1761 + 72);
            *(void *)(v1760 + 80) = *((void *)v1761 + 10);
            *(void *)(v1760 + 88) = *((void *)v1761 + 11);
            v2092 = (void *)*((void *)v1761 + 12);
            *(void *)(v1760 + 96) = v2092;
            *(unsigned char *)(v1760 + 104) = *((unsigned char *)v1761 + 104);
            *(unsigned char *)(v1760 + 105) = *((unsigned char *)v1761 + 105);
            *(void *)(v1760 + 112) = *((void *)v1761 + 14);
            *(void *)(v1760 + 120) = *((void *)v1761 + 15);
            *(void *)(v1760 + 128) = *((void *)v1761 + 16);
            *(void *)(v1760 + 136) = *((void *)v1761 + 17);
            *(void *)(v1760 + 144) = *((void *)v1761 + 18);
            *(void *)(v1760 + 152) = *((void *)v1761 + 19);
            *(void *)(v1760 + 160) = *((void *)v1761 + 20);
            *(void *)(v1760 + 168) = *((void *)v1761 + 21);
            *(unsigned char *)(v1760 + 176) = *((unsigned char *)v1761 + 176);
            *(void *)(v1760 + 184) = *((void *)v1761 + 23);
            uint64_t v1780 = *((void *)v1761 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v1781 = v2092;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v1780)
            {
              *(void *)(v1760 + 192) = v1780;
              *(void *)(v1760 + 200) = *((void *)v1761 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v1760 + 192) = v1761[12];
            }
            *(void *)(v1760 + 208) = *((void *)v1761 + 26);
            *(void *)(v1760 + 216) = *((void *)v1761 + 27);
            *(void *)(v1760 + 224) = *((void *)v1761 + 28);
            *(void *)(v1760 + 232) = *((void *)v1761 + 29);
            *(void *)(v1760 + 240) = *((void *)v1761 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v78 = a1;
          }
          else
          {
            long long v1764 = *v1761;
            long long v1765 = v1761[1];
            long long v1766 = v1761[3];
            *(_OWORD *)(v1760 + 32) = v1761[2];
            *(_OWORD *)(v1760 + 48) = v1766;
            *(_OWORD *)unint64_t v1760 = v1764;
            *(_OWORD *)(v1760 + 16) = v1765;
            long long v1767 = v1761[4];
            long long v1768 = v1761[5];
            long long v1769 = v1761[7];
            *(_OWORD *)(v1760 + 96) = v1761[6];
            *(_OWORD *)(v1760 + 112) = v1769;
            *(_OWORD *)(v1760 + 64) = v1767;
            *(_OWORD *)(v1760 + 80) = v1768;
            long long v1770 = v1761[8];
            long long v1771 = v1761[9];
            long long v1772 = v1761[11];
            *(_OWORD *)(v1760 + 160) = v1761[10];
            *(_OWORD *)(v1760 + 176) = v1772;
            *(_OWORD *)(v1760 + 128) = v1770;
            *(_OWORD *)(v1760 + 144) = v1771;
            long long v1773 = v1761[12];
            long long v1774 = v1761[13];
            long long v1775 = v1761[14];
            *(void *)(v1760 + 240) = *((void *)v1761 + 30);
            *(_OWORD *)(v1760 + 208) = v1774;
            *(_OWORD *)(v1760 + 224) = v1775;
            *(_OWORD *)(v1760 + 192) = v1773;
          }
          unint64_t v1706 = (unint64_t)v2116;
          v1896 = (_OWORD *)((v1760 + 255) & 0xFFFFFFFFFFFFFFF8);
          v1897 = (long long *)(((unint64_t)v1761 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v1898 = *v1897;
          *(_OWORD *)((char *)v1896 + 9) = *(long long *)((char *)v1897 + 9);
          _OWORD *v1896 = v1898;
          unint64_t v1899 = (v1760 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v1900 = ((unint64_t)v1761 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v1901 = *(_OWORD *)v1900;
          *(unsigned char *)(v1899 + 16) = *(unsigned char *)(v1900 + 16);
          *(_OWORD *)unint64_t v1899 = v1901;
          v1902 = (void *)((v1760 + 311) & 0xFFFFFFFFFFFFFFF8);
          v1903 = (void *)(((unint64_t)v1761 + 311) & 0xFFFFFFFFFFFFFFF8);
          void *v1902 = *v1903;
          v1904 = (void *)(((unint64_t)v1902 + 15) & 0xFFFFFFFFFFFFFFF8);
          v1905 = (uint64_t *)(((unint64_t)v1903 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v1906 = *v1905;
          unint64_t v1907 = v1905[1];
          sub_24D5203A8(*v1905, v1907);
          void *v1904 = v1906;
          v1904[1] = v1907;
          uint64_t v1254 = v1919;
          size_t v1707 = v1985;
          unint64_t v309 = v1945;
          if (!v1962) {
            goto LABEL_1481;
          }
LABEL_1549:
          unint64_t v1908 = ((((v1956
                    + ((((((((((v1961 + v1707 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                        + 19) & 0xFFFFFFFFFFFFFFF8)
                      + 25) & 0xFFFFFFFFFFFFFFF8)
                    + 327) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 16;
          v1909 = (void *)((unint64_t)&v1224[v1908] & 0xFFFFFFFFFFFFFFF8);
          v1910 = (void *)((v1706 + v1908) & 0xFFFFFFFFFFFFFFF8);
          void *v1909 = *v1910;
          v1909[1] = v1910[1];
          *(void *)(((unint64_t)v1909 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v1910 + 23) & 0xFFFFFFFFFFFFFFF8);
          v78[v1942] = 3;
          swift_bridgeObjectRetain();
LABEL_1550:
          char v1208 = 0;
          goto LABEL_1551;
        case 4u:
          unint64_t v1226 = v313;
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16))(v78, a2, AssociatedTypeWitness);
          char v1208 = 0;
          v78[v1226] = 4;
          goto LABEL_1326;
        case 5u:
          unint64_t v1227 = v313;
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16))(v78, a2, AssociatedTypeWitness);
          char v1208 = 0;
          v78[v1227] = 5;
          goto LABEL_1326;
        case 6u:
          unint64_t v1228 = v313;
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16))(v78, a2, AssociatedTypeWitness);
          v1229 = (void *)((unint64_t)&v78[v1925] & v1209);
          v1230 = (const void *)((unint64_t)&a2[v1925] & v1209);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v1926 + 48))(v1230, 1, v2032))
          {
            memcpy(v1229, v1230, v1921);
          }
          else
          {
            (*(void (**)(void *, const void *, uint64_t))(v1926 + 16))(v1229, v1230, v2032);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v1926 + 56))(v1229, 0, 1, v2032);
          }
          char v1208 = 0;
          v78[v1228] = 6;
          goto LABEL_1326;
        case 7u:
          unint64_t v1231 = v313;
          (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16))(v78, a2, AssociatedTypeWitness);
          char v1208 = 0;
          v78[v1231] = 7;
LABEL_1326:
          uint64_t v1254 = v1919;
          goto LABEL_1551;
        default:
          uint64_t v2062 = ~v2051;
          uint64_t v1210 = v87;
          unint64_t v1995 = ~(unint64_t)v2002;
          v1211 = *(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v1987 + 16);
          v1211(v78, a2, AssociatedTypeWitness);
          v1212 = (unsigned char *)((unint64_t)&v78[v1929] & ~v2085);
          v2113 = (void *)((unint64_t)&a2[v1929] & ~v2085);
          if (v2039 == v1955)
          {
            int v1213 = (*(uint64_t (**)(void))(v1987 + 48))();
LABEL_1442:
            uint64_t v1254 = v1919;
            uint64_t v1267 = v1210;
LABEL_1443:
            unint64_t v309 = v1945;
            if (v1213)
            {
LABEL_1444:
              unint64_t v1553 = (unint64_t)&a2[v1929] & ~v2085;
              memcpy(v1212, v2113, v2042);
              goto LABEL_1445;
            }
            unint64_t v1238 = ((unint64_t)v2113 + v1977) & v1267;
            unint64_t v1239 = (v1944 + v1238) & v2041;
LABEL_1447:
            uint64_t v1555 = v1267;
            v1211(v1212, (unsigned __int8 *)v2113, AssociatedTypeWitness);
            v1211((unsigned char *)((unint64_t)&v1212[v1977] & v1555), (unsigned __int8 *)v1238, AssociatedTypeWitness);
            unint64_t v1556 = (v1944 + ((unint64_t)&v1212[v1977] & v1555)) & v2041;
            (*(void (**)(unint64_t, unint64_t, uint64_t))(v1968 + 16))(v1556, v1239, v1967);
            v1557 = (void *)((v1975 + v1556) & 0xFFFFFFFFFFFFFFF8);
            v1558 = (void *)((v1975 + v1239) & 0xFFFFFFFFFFFFFFF8);
            void *v1557 = *v1558;
            unint64_t v1559 = ((unint64_t)v1557 + v1963) & v1995;
            unint64_t v1560 = ((unint64_t)v1558 + v1963) & v1995;
            v1561 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
            swift_bridgeObjectRetain();
            v1561(v1559, v1560, v1964);
            v1562 = (void *)((v1959 + v1560) & 0xFFFFFFFFFFFFFFF8);
            v1563 = (void *)((v1959 + v1559) & 0xFFFFFFFFFFFFFFF8);
            void *v1563 = *v1562;
            v1564 = (void *)(((unint64_t)v1563 + 15) & 0xFFFFFFFFFFFFFFF8);
            v1565 = (void *)(((unint64_t)v1562 + 15) & 0xFFFFFFFFFFFFFFF8);
            void *v1564 = *v1565;
            v1564[1] = v1565[1];
            v1566 = (void *)(v1556 + v2043);
            void *v1566 = *(void *)(v1239 + v2043);
            v1566[1] = *(void *)(v1239 + v2043 + 8);
            size_t v1567 = (v2045 + v1556 + v2043) & v2062;
            size_t v1568 = (v2045 + v1239 + v2043) & v2062;
            *(unsigned char *)size_t v1567 = *(unsigned char *)v1568;
            uint64_t v1569 = v1567 | 4;
            int v1570 = *(_DWORD *)(v1568 | 4);
            *(unsigned char *)(v1569 + 4) = *(unsigned char *)((v1568 | 4) + 4);
            *(_DWORD *)uint64_t v1569 = v1570;
            *(_WORD *)(v1567 + 10) = *(_WORD *)(v1568 + 0xA);
            size_t v2088 = v1567;
            unint64_t v1571 = (v1983 + v1567) & v2001;
            size_t v2081 = v1568;
            unint64_t v1572 = (v1983 + v1568) & v2001;
            v1573 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1981 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v1573(v1571, v1572, v1984);
            unint64_t v1574 = (v1980 + v1571) & v2001;
            unint64_t v1575 = (v1980 + v1572) & v2001;
            v1573(v1574, v1575, v1984);
            v1576 = (unsigned char *)(v1574 + v1985);
            unsigned char *v1576 = *(unsigned char *)(v1575 + v1985);
            v1576[1] = *(unsigned char *)(v1575 + v1985 + 1);
            v1576[2] = *(unsigned char *)(v1575 + v1985 + 2);
            v1576[3] = *(unsigned char *)(v1575 + v1985 + 3);
            v1576[4] = *(unsigned char *)(v1575 + v1985 + 4);
            unint64_t v1577 = (v1574 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1578 = (v1575 + v1985 + 12) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v1577 = *(void *)v1578;
            *(void *)(v1577 + 8) = *(void *)(v1578 + 8);
            *(unsigned char *)(v1577 + 16) = *(unsigned char *)(v1578 + 16);
            *(unsigned char *)(v1577 + 17) = *(unsigned char *)(v1578 + 17);
            *(unsigned char *)(v1577 + 18) = *(unsigned char *)(v1578 + 18);
            *(unsigned char *)(v1577 + 19) = *(unsigned char *)(v1578 + 19);
            unint64_t v1579 = (v1577 + 27) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1580 = (v1578 + 27) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v1579 = *(void *)v1580;
            *(unsigned char *)(v1579 + 8) = *(unsigned char *)(v1580 + 8);
            *(unsigned char *)(v1579 + 9) = *(unsigned char *)(v1580 + 9);
            *(unsigned char *)(v1579 + 10) = *(unsigned char *)(v1580 + 10);
            *(unsigned char *)(v1579 + 11) = *(unsigned char *)(v1580 + 11);
            *(unsigned char *)(v1579 + 12) = *(unsigned char *)(v1580 + 12);
            v1581 = (void *)((v1578 + 47) & 0xFFFFFFFFFFFFFFF8);
            v1582 = (void *)((v1577 + 47) & 0xFFFFFFFFFFFFFFF8);
            void *v1582 = *v1581;
            unint64_t v1583 = ((unint64_t)v1582 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1584 = ((unint64_t)v1581 + 15) & 0xFFFFFFFFFFFFFFF8;
            *(void *)unint64_t v1583 = *(void *)v1584;
            *(unsigned char *)(v1583 + 8) = *(unsigned char *)(v1584 + 8);
            *(unsigned char *)(v1583 + 9) = *(unsigned char *)(v1584 + 9);
            v1585 = (void *)((v1978 + v1583) & v2001);
            v1586 = (const void *)((v1978 + v1584) & v2001);
            v1587 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v1981 + 48);
            swift_bridgeObjectRetain();
            if (v1587(v1586, 1, v1984))
            {
              memcpy(v1585, v1586, __n);
            }
            else
            {
              v1573((unint64_t)v1585, (unint64_t)v1586, v1984);
              (*(void (**)(void *, void, uint64_t, uint64_t))(v1981 + 56))(v1585, 0, 1, v1984);
            }
            v1588 = (void *)(((unint64_t)v1585 + v1979) & 0xFFFFFFFFFFFFFFF8);
            v1589 = (void *)(((unint64_t)v1586 + v1979) & 0xFFFFFFFFFFFFFFF8);
            void *v1588 = *v1589;
            unint64_t v1590 = ((unint64_t)v1588 + 15) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1591 = ((unint64_t)v1589 + 15) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v1592 = *(void *)v1591;
            *(unsigned char *)(v1590 + 8) = *(unsigned char *)(v1591 + 8);
            *(void *)unint64_t v1590 = v1592;
            v1593 = (void *)(((unint64_t)v1588 + 31) & 0xFFFFFFFFFFFFFFF8);
            v1594 = (void *)(((unint64_t)v1589 + 31) & 0xFFFFFFFFFFFFFFF8);
            void *v1593 = *v1594;
            unint64_t v1595 = ((unint64_t)v1593 + 15) & 0xFFFFFFFFFFFFFFF8;
            v1596 = (uint64_t *)(((unint64_t)v1594 + 15) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v1597 = v1596[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((v1597 & 0x3000000000000000) != 0)
            {
              *(_OWORD *)unint64_t v1595 = *(_OWORD *)v1596;
            }
            else
            {
              uint64_t v1598 = *v1596;
              sub_24D3F9C18(*v1596, v1597);
              *(void *)unint64_t v1595 = v1598;
              *(void *)(v1595 + 8) = v1597;
            }
            unint64_t v1599 = (v1595 + 19) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1600 = ((unint64_t)v1596 + 19) & 0xFFFFFFFFFFFFFFF8;
            uint64_t v1601 = *(void *)v1600;
            *(unsigned char *)(v1599 + 8) = *(unsigned char *)(v1600 + 8);
            *(void *)unint64_t v1599 = v1601;
            *(unsigned char *)(v1599 + 9) = *(unsigned char *)(v1600 + 9);
            unint64_t v1602 = (v1599 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            unint64_t v1603 = (v1600 + 13) & 0xFFFFFFFFFFFFFFFCLL;
            int v1604 = *(_DWORD *)v1603;
            *(unsigned char *)(v1602 + 4) = *(unsigned char *)(v1603 + 4);
            *(_DWORD *)unint64_t v1602 = v1604;
            v1605 = (void *)((v1599 + 25) & 0xFFFFFFFFFFFFFFF8);
            v1606 = (void *)((v1600 + 25) & 0xFFFFFFFFFFFFFFF8);
            void *v1605 = *v1606;
            v1605[1] = v1606[1];
            unint64_t v1607 = v2016 + v2088;
            v1608 = (long long *)(v2016 + v2081);
            unint64_t v1609 = *(void *)(v2016 + v2081 + 16);
            if (v1609 >= 0xFFFFFFFF) {
              LODWORD(v1609) = -1;
            }
            int v1610 = v1609 - 1;
            swift_bridgeObjectRetain();
            if (v1610 < 0)
            {
              *(void *)unint64_t v1607 = *(void *)v1608;
              *(unsigned char *)(v1607 + 8) = *((unsigned char *)v1608 + 8);
              *(unsigned char *)(v1607 + 9) = *((unsigned char *)v1608 + 9);
              v1623 = (void *)*((void *)v1608 + 2);
              id v1624 = v1623;
              *(void *)(v1607 + 16) = v1623;
              v1625 = (void *)*((void *)v1608 + 3);
              id v1626 = v1625;
              *(void *)(v1607 + 24) = v1625;
              *(unsigned char *)(v1607 + 32) = *((unsigned char *)v1608 + 32);
              *(unsigned char *)(v1607 + 33) = *((unsigned char *)v1608 + 33);
              *(unsigned char *)(v1607 + 34) = *((unsigned char *)v1608 + 34);
              *(void *)(v1607 + 40) = *((void *)v1608 + 5);
              *(void *)(v1607 + 48) = *((void *)v1608 + 6);
              *(void *)(v1607 + 56) = *((void *)v1608 + 7);
              *(void *)(v1607 + 64) = *((void *)v1608 + 8);
              *(unsigned char *)(v1607 + 72) = *((unsigned char *)v1608 + 72);
              *(void *)(v1607 + 80) = *((void *)v1608 + 10);
              *(void *)(v1607 + 88) = *((void *)v1608 + 11);
              v2089 = (void *)*((void *)v1608 + 12);
              *(void *)(v1607 + 96) = v2089;
              *(unsigned char *)(v1607 + 104) = *((unsigned char *)v1608 + 104);
              *(unsigned char *)(v1607 + 105) = *((unsigned char *)v1608 + 105);
              *(void *)(v1607 + 112) = *((void *)v1608 + 14);
              *(void *)(v1607 + 120) = *((void *)v1608 + 15);
              *(void *)(v1607 + 128) = *((void *)v1608 + 16);
              *(void *)(v1607 + 136) = *((void *)v1608 + 17);
              *(void *)(v1607 + 144) = *((void *)v1608 + 18);
              *(void *)(v1607 + 152) = *((void *)v1608 + 19);
              *(void *)(v1607 + 160) = *((void *)v1608 + 20);
              *(void *)(v1607 + 168) = *((void *)v1608 + 21);
              *(unsigned char *)(v1607 + 176) = *((unsigned char *)v1608 + 176);
              *(void *)(v1607 + 184) = *((void *)v1608 + 23);
              uint64_t v1627 = *((void *)v1608 + 24);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              id v1628 = v2089;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v1627)
              {
                *(void *)(v1607 + 192) = v1627;
                *(void *)(v1607 + 200) = *((void *)v1608 + 25);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
              }
              else
              {
                *(_OWORD *)(v1607 + 192) = v1608[12];
              }
              *(void *)(v1607 + 208) = *((void *)v1608 + 26);
              *(void *)(v1607 + 216) = *((void *)v1608 + 27);
              *(void *)(v1607 + 224) = *((void *)v1608 + 28);
              *(void *)(v1607 + 232) = *((void *)v1608 + 29);
              *(void *)(v1607 + 240) = *((void *)v1608 + 30);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v78 = a1;
            }
            else
            {
              long long v1611 = *v1608;
              long long v1612 = v1608[1];
              long long v1613 = v1608[3];
              *(_OWORD *)(v1607 + 32) = v1608[2];
              *(_OWORD *)(v1607 + 48) = v1613;
              *(_OWORD *)unint64_t v1607 = v1611;
              *(_OWORD *)(v1607 + 16) = v1612;
              long long v1614 = v1608[4];
              long long v1615 = v1608[5];
              long long v1616 = v1608[7];
              *(_OWORD *)(v1607 + 96) = v1608[6];
              *(_OWORD *)(v1607 + 112) = v1616;
              *(_OWORD *)(v1607 + 64) = v1614;
              *(_OWORD *)(v1607 + 80) = v1615;
              long long v1617 = v1608[8];
              long long v1618 = v1608[9];
              long long v1619 = v1608[11];
              *(_OWORD *)(v1607 + 160) = v1608[10];
              *(_OWORD *)(v1607 + 176) = v1619;
              *(_OWORD *)(v1607 + 128) = v1617;
              *(_OWORD *)(v1607 + 144) = v1618;
              long long v1620 = v1608[12];
              long long v1621 = v1608[13];
              long long v1622 = v1608[14];
              *(void *)(v1607 + 240) = *((void *)v1608 + 30);
              *(_OWORD *)(v1607 + 208) = v1621;
              *(_OWORD *)(v1607 + 224) = v1622;
              *(_OWORD *)(v1607 + 192) = v1620;
            }
            unint64_t v1553 = (unint64_t)v2113;
            v1847 = (_OWORD *)((v1607 + 255) & 0xFFFFFFFFFFFFFFF8);
            v1848 = (long long *)(((unint64_t)v1608 + 255) & 0xFFFFFFFFFFFFFFF8);
            long long v1849 = *v1848;
            *(_OWORD *)((char *)v1847 + 9) = *(long long *)((char *)v1848 + 9);
            _OWORD *v1847 = v1849;
            unint64_t v1850 = (v1607 + 287) & 0xFFFFFFFFFFFFFFF8;
            unint64_t v1851 = ((unint64_t)v1608 + 287) & 0xFFFFFFFFFFFFFFF8;
            long long v1852 = *(_OWORD *)v1851;
            *(unsigned char *)(v1850 + 16) = *(unsigned char *)(v1851 + 16);
            *(_OWORD *)unint64_t v1850 = v1852;
            v1853 = (void *)((v1607 + 311) & 0xFFFFFFFFFFFFFFF8);
            v1854 = (void *)(((unint64_t)v1608 + 311) & 0xFFFFFFFFFFFFFFF8);
            void *v1853 = *v1854;
            v1855 = (void *)(((unint64_t)v1853 + 15) & 0xFFFFFFFFFFFFFFF8);
            v1856 = (uint64_t *)(((unint64_t)v1854 + 15) & 0xFFFFFFFFFFFFFFF8);
            uint64_t v1857 = *v1856;
            unint64_t v1858 = v1856[1];
            sub_24D5203A8(*v1856, v1858);
            void *v1855 = v1857;
            v1855[1] = v1858;
            uint64_t v1254 = v1919;
            size_t v1554 = v1985;
            unint64_t v309 = v1945;
            if (v1962)
            {
LABEL_1525:
              unint64_t v1859 = ((((v1956
                        + ((((((((((v1961 + v1554 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                            + 19) & 0xFFFFFFFFFFFFFFF8)
                          + 25) & 0xFFFFFFFFFFFFFFF8)
                        + 327) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 16;
              v1860 = (void *)((unint64_t)&v1212[v1859] & 0xFFFFFFFFFFFFFFF8);
              v1861 = (void *)((v1553 + v1859) & 0xFFFFFFFFFFFFFFF8);
              void *v1860 = *v1861;
              v1862 = *(void **)(((unint64_t)v1861 + 15) & 0xFFFFFFFFFFFFFFF8);
              *(void *)(((unint64_t)v1860 + 15) & 0xFFFFFFFFFFFFFFF8) = v1862;
              v78[v1942] = 0;
              id v1863 = v1862;
              goto LABEL_1550;
            }
LABEL_1445:
            size_t v1554 = __n;
            goto LABEL_1525;
          }
          unint64_t v1238 = (v1977 + ((unint64_t)&a2[v1929] & ~v2085)) & v1210;
          unint64_t v1239 = (v1944 + v1238) & v2041;
          if (v1957 == v1955)
          {
            if (v1946 == v1957)
            {
              int v1213 = (*(uint64_t (**)(unint64_t))(v1968 + 48))((v1944 + v1238) & v2041);
              goto LABEL_1442;
            }
            v1305 = (unint64_t *)((v1975 + v1239) & 0xFFFFFFFFFFFFFFF8);
            if (v1936 > 0x7FFFFFFE)
            {
              int v1213 = (*(uint64_t (**)(unint64_t))(v1965 + 48))(((unint64_t)v1305 + v1963) & v1995);
              goto LABEL_1442;
            }
            unint64_t v1306 = *v1305;
          }
          else
          {
            size_t v1266 = v1239 + v2043;
            if ((v1933 & 0x80000000) == 0)
            {
              uint64_t v1267 = v1210;
              unint64_t v1268 = *(void *)(v1266 + 8);
              if (v1268 >= 0xFFFFFFFF) {
                LODWORD(v1268) = -1;
              }
              int v1213 = v1268 + 1;
              uint64_t v1254 = v1919;
              goto LABEL_1443;
            }
            unint64_t v1314 = (v1983 + ((v2045 + v1266) & v2062)) & v2001;
            if (v1962 > 0x7FFFFFFD)
            {
              int v1213 = (*(uint64_t (**)(unint64_t))(v1981 + 48))(v1314);
              goto LABEL_1442;
            }
            unint64_t v1306 = *(void *)(((v1930 + ((v1980 + v1314) & v2001)) & 0xFFFFFFFFFFFFFFF8) + 8);
          }
          if (v1306 >= 0xFFFFFFFF) {
            LODWORD(v1306) = -1;
          }
          uint64_t v1254 = v1919;
          unint64_t v309 = v1945;
          uint64_t v1267 = v1210;
          if ((v1306 + 1) >= 2) {
            goto LABEL_1444;
          }
          goto LABEL_1447;
      }
    case 0x1Cu:
      unsigned int v315 = a2[v2029];
      unsigned int v316 = v315 - 2;
      if (v315 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v320 = v1988;
        uint64_t v321 = AssociatedTypeWitness;
        size_t v319 = v2047;
        uint64_t v318 = v2048;
        uint64_t v322 = v1987;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v317 = v2029;
        }
        else {
          uint64_t v317 = 4;
        }
        uint64_t v78 = a1;
        size_t v319 = v2047;
        uint64_t v318 = v2048;
        uint64_t v320 = v1988;
        uint64_t v321 = AssociatedTypeWitness;
        uint64_t v322 = v1987;
        switch(v317)
        {
          case 1:
            int v323 = *a2;
            goto LABEL_797;
          case 2:
            int v323 = *(unsigned __int16 *)a2;
            goto LABEL_797;
          case 3:
            int v323 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_797;
          case 4:
            int v323 = *(_DWORD *)a2;
LABEL_797:
            if (v2029 < 4) {
              unsigned int v315 = (v323 | (v316 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v315 = v323 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v728 = v315 == 1;
      if (v315 == 1) {
        uint64_t v729 = v318;
      }
      else {
        uint64_t v729 = v322;
      }
      if (v315 == 1) {
        uint64_t v730 = v320;
      }
      else {
        uint64_t v730 = v321;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v729 + 16))(v78, a2, v730);
      v78[v2029] = v728;
      v78[v319] = a2[v319];
      if (v1919 > 3) {
        goto LABEL_807;
      }
      unsigned int v731 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v731 > 0xFFD6)
      {
        *(_DWORD *)&v78[v1919] = 28;
      }
      else if (v731 <= 0xD6)
      {
LABEL_807:
        v78[v1919] = 28;
      }
      else
      {
        *(_WORD *)&v78[v1919] = 28;
      }
      return v78;
    case 0x1Du:
      unsigned int v324 = a2[v2029];
      unsigned int v325 = v324 - 2;
      if (v324 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v328 = v2048;
        uint64_t v329 = v1987;
        uint64_t v327 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v326 = v2029;
        }
        else {
          uint64_t v326 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v327 = v1919;
        uint64_t v328 = v2048;
        uint64_t v329 = v1987;
        switch(v326)
        {
          case 1:
            int v330 = *a2;
            goto LABEL_815;
          case 2:
            int v330 = *(unsigned __int16 *)a2;
            goto LABEL_815;
          case 3:
            int v330 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_815;
          case 4:
            int v330 = *(_DWORD *)a2;
LABEL_815:
            if (v2029 < 4) {
              unsigned int v324 = (v330 | (v325 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v324 = v330 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v732 = v324 == 1;
      if (v324 == 1) {
        uint64_t v733 = v328;
      }
      else {
        uint64_t v733 = v329;
      }
      (*(void (**)(unsigned char *))(v733 + 16))(v78);
      v78[v2029] = v732;
      if (v327 > 3) {
        goto LABEL_822;
      }
      unsigned int v734 = ((1 << (8 * v327)) + 5) >> (8 * v327);
      if (v734 > 0xFFD6)
      {
        *(_DWORD *)&v78[v327] = 29;
      }
      else if (v734 <= 0xD6)
      {
LABEL_822:
        v78[v327] = 29;
      }
      else
      {
        *(_WORD *)&v78[v327] = 29;
      }
      return v78;
    case 0x1Eu:
      unsigned int v331 = a2[v2029];
      unsigned int v332 = v331 - 2;
      if (v331 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v335 = v2048;
        uint64_t v336 = v1987;
        uint64_t v334 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v333 = v2029;
        }
        else {
          uint64_t v333 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v334 = v1919;
        uint64_t v335 = v2048;
        uint64_t v336 = v1987;
        switch(v333)
        {
          case 1:
            int v337 = *a2;
            goto LABEL_830;
          case 2:
            int v337 = *(unsigned __int16 *)a2;
            goto LABEL_830;
          case 3:
            int v337 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_830;
          case 4:
            int v337 = *(_DWORD *)a2;
LABEL_830:
            if (v2029 < 4) {
              unsigned int v331 = (v337 | (v332 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v331 = v337 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v735 = v331 == 1;
      if (v331 == 1) {
        uint64_t v736 = v335;
      }
      else {
        uint64_t v736 = v336;
      }
      (*(void (**)(unsigned char *))(v736 + 16))(v78);
      v78[v2029] = v735;
      if (v334 > 3) {
        goto LABEL_837;
      }
      unsigned int v737 = ((1 << (8 * v334)) + 5) >> (8 * v334);
      if (v737 > 0xFFD6)
      {
        *(_DWORD *)&v78[v334] = 30;
      }
      else if (v737 <= 0xD6)
      {
LABEL_837:
        v78[v334] = 30;
      }
      else
      {
        *(_WORD *)&v78[v334] = 30;
      }
      return v78;
    case 0x1Fu:
      unsigned int v338 = a2[v2029];
      unsigned int v339 = v338 - 2;
      if (v338 < 2)
      {
        unint64_t v342 = ~v2030;
        uint64_t v340 = v1919;
        uint64_t v78 = a1;
        uint64_t v343 = v1988;
        uint64_t v344 = AssociatedTypeWitness;
        uint64_t v345 = v2048;
        uint64_t v346 = v1987;
      }
      else
      {
        uint64_t v340 = v1919;
        if (v2029 <= 3) {
          uint64_t v341 = v2029;
        }
        else {
          uint64_t v341 = 4;
        }
        uint64_t v78 = a1;
        unint64_t v342 = ~v2030;
        uint64_t v343 = v1988;
        uint64_t v344 = AssociatedTypeWitness;
        uint64_t v345 = v2048;
        uint64_t v346 = v1987;
        switch(v341)
        {
          case 1:
            int v347 = *a2;
            goto LABEL_845;
          case 2:
            int v347 = *(unsigned __int16 *)a2;
            goto LABEL_845;
          case 3:
            int v347 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_845;
          case 4:
            int v347 = *(_DWORD *)a2;
LABEL_845:
            if (v2029 < 4) {
              unsigned int v338 = (v347 | (v339 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v338 = v347 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v738 = v338 == 1;
      if (v338 == 1) {
        uint64_t v739 = v345;
      }
      else {
        uint64_t v739 = v346;
      }
      if (v338 == 1) {
        uint64_t v740 = v343;
      }
      else {
        uint64_t v740 = v344;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v739 + 16))(v78, a2, v740);
      v78[v2029] = v738;
      unint64_t v741 = v342;
      unint64_t v742 = (unint64_t)&v78[v1982] & v342;
      v743 = (unsigned __int8 *)((unint64_t)&a2[v1982] & v741);
      unsigned int v744 = v743[v2029];
      unsigned int v745 = v744 - 2;
      if (v744 >= 2)
      {
        if (v2029 <= 3) {
          uint64_t v746 = v2029;
        }
        else {
          uint64_t v746 = 4;
        }
        switch(v746)
        {
          case 1:
            int v747 = *v743;
            goto LABEL_1001;
          case 2:
            int v747 = *(unsigned __int16 *)v743;
            goto LABEL_1001;
          case 3:
            int v747 = *(unsigned __int16 *)((unint64_t)&a2[v1982] & v741) | (*(unsigned __int8 *)(((unint64_t)&a2[v1982] & v741) + 2) << 16);
            goto LABEL_1001;
          case 4:
            int v747 = *(_DWORD *)v743;
LABEL_1001:
            if (v2029 < 4) {
              unsigned int v744 = (v747 | (v745 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v744 = v747 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v776 = v744 == 1;
      if (v744 == 1) {
        uint64_t v777 = v345;
      }
      else {
        uint64_t v777 = v346;
      }
      (*(void (**)(unint64_t))(v777 + 16))(v742);
      *(unsigned char *)(v742 + v2029) = v776;
      if (v340 > 3) {
        goto LABEL_1008;
      }
      unsigned int v778 = ((1 << (8 * v340)) + 5) >> (8 * v340);
      if (v778 > 0xFFD6)
      {
        *(_DWORD *)&v78[v340] = 31;
      }
      else if (v778 <= 0xD6)
      {
LABEL_1008:
        v78[v340] = 31;
      }
      else
      {
        *(_WORD *)&v78[v340] = 31;
      }
      return v78;
    case 0x20u:
      unsigned int v348 = a2[v2029];
      unsigned int v349 = v348 - 2;
      if (v348 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v352 = v2048;
        uint64_t v353 = v1987;
        uint64_t v351 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v350 = v2029;
        }
        else {
          uint64_t v350 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v351 = v1919;
        uint64_t v352 = v2048;
        uint64_t v353 = v1987;
        switch(v350)
        {
          case 1:
            int v354 = *a2;
            goto LABEL_863;
          case 2:
            int v354 = *(unsigned __int16 *)a2;
            goto LABEL_863;
          case 3:
            int v354 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_863;
          case 4:
            int v354 = *(_DWORD *)a2;
LABEL_863:
            if (v2029 < 4) {
              unsigned int v348 = (v354 | (v349 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v348 = v354 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v748 = v348 == 1;
      if (v348 == 1) {
        uint64_t v749 = v352;
      }
      else {
        uint64_t v749 = v353;
      }
      (*(void (**)(unsigned char *))(v749 + 16))(v78);
      v78[v2029] = v748;
      if (v351 > 3) {
        goto LABEL_870;
      }
      unsigned int v750 = ((1 << (8 * v351)) + 5) >> (8 * v351);
      if (v750 > 0xFFD6)
      {
        *(_DWORD *)&v78[v351] = 32;
      }
      else if (v750 <= 0xD6)
      {
LABEL_870:
        v78[v351] = 32;
      }
      else
      {
        *(_WORD *)&v78[v351] = 32;
      }
      return v78;
    case 0x21u:
      unsigned int v355 = a2[v2029];
      unsigned int v356 = v355 - 2;
      if (v355 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v359 = v2048;
        uint64_t v360 = v1987;
        uint64_t v358 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v357 = v2029;
        }
        else {
          uint64_t v357 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v358 = v1919;
        uint64_t v359 = v2048;
        uint64_t v360 = v1987;
        switch(v357)
        {
          case 1:
            int v361 = *a2;
            goto LABEL_878;
          case 2:
            int v361 = *(unsigned __int16 *)a2;
            goto LABEL_878;
          case 3:
            int v361 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_878;
          case 4:
            int v361 = *(_DWORD *)a2;
LABEL_878:
            if (v2029 < 4) {
              unsigned int v355 = (v361 | (v356 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v355 = v361 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v751 = v355 == 1;
      if (v355 == 1) {
        uint64_t v752 = v359;
      }
      else {
        uint64_t v752 = v360;
      }
      (*(void (**)(unsigned char *))(v752 + 16))(v78);
      v78[v2029] = v751;
      if (v358 > 3) {
        goto LABEL_885;
      }
      unsigned int v753 = ((1 << (8 * v358)) + 5) >> (8 * v358);
      if (v753 > 0xFFD6)
      {
        *(_DWORD *)&v78[v358] = 33;
      }
      else if (v753 <= 0xD6)
      {
LABEL_885:
        v78[v358] = 33;
      }
      else
      {
        *(_WORD *)&v78[v358] = 33;
      }
      return v78;
    case 0x22u:
      unsigned int v362 = a2[v2029];
      unsigned int v363 = v362 - 2;
      if (v362 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v366 = v2048;
        uint64_t v367 = v1987;
        uint64_t v365 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v364 = v2029;
        }
        else {
          uint64_t v364 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v365 = v1919;
        uint64_t v366 = v2048;
        uint64_t v367 = v1987;
        switch(v364)
        {
          case 1:
            int v368 = *a2;
            goto LABEL_893;
          case 2:
            int v368 = *(unsigned __int16 *)a2;
            goto LABEL_893;
          case 3:
            int v368 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_893;
          case 4:
            int v368 = *(_DWORD *)a2;
LABEL_893:
            if (v2029 < 4) {
              unsigned int v362 = (v368 | (v363 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v362 = v368 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v754 = v362 == 1;
      if (v362 == 1) {
        uint64_t v755 = v366;
      }
      else {
        uint64_t v755 = v367;
      }
      (*(void (**)(unsigned char *))(v755 + 16))(v78);
      v78[v2029] = v754;
      if (v365 > 3) {
        goto LABEL_900;
      }
      unsigned int v756 = ((1 << (8 * v365)) + 5) >> (8 * v365);
      if (v756 > 0xFFD6)
      {
        *(_DWORD *)&v78[v365] = 34;
      }
      else if (v756 <= 0xD6)
      {
LABEL_900:
        v78[v365] = 34;
      }
      else
      {
        *(_WORD *)&v78[v365] = 34;
      }
      return v78;
    case 0x23u:
      unsigned int v369 = a2[v2029];
      unsigned int v370 = v369 - 2;
      if (v369 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v373 = v2048;
        uint64_t v374 = v1987;
        uint64_t v372 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v371 = v2029;
        }
        else {
          uint64_t v371 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v372 = v1919;
        uint64_t v373 = v2048;
        uint64_t v374 = v1987;
        switch(v371)
        {
          case 1:
            int v375 = *a2;
            goto LABEL_908;
          case 2:
            int v375 = *(unsigned __int16 *)a2;
            goto LABEL_908;
          case 3:
            int v375 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_908;
          case 4:
            int v375 = *(_DWORD *)a2;
LABEL_908:
            if (v2029 < 4) {
              unsigned int v369 = (v375 | (v370 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v369 = v375 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v757 = v369 == 1;
      if (v369 == 1) {
        uint64_t v758 = v373;
      }
      else {
        uint64_t v758 = v374;
      }
      (*(void (**)(unsigned char *))(v758 + 16))(v78);
      v78[v2029] = v757;
      if (v372 > 3) {
        goto LABEL_915;
      }
      unsigned int v759 = ((1 << (8 * v372)) + 5) >> (8 * v372);
      if (v759 > 0xFFD6)
      {
        *(_DWORD *)&v78[v372] = 35;
      }
      else if (v759 <= 0xD6)
      {
LABEL_915:
        v78[v372] = 35;
      }
      else
      {
        *(_WORD *)&v78[v372] = 35;
      }
      return v78;
    case 0x24u:
      uint64_t v376 = ~v2035;
      uint64_t v2006 = ~v33;
      unint64_t v1992 = ~(unint64_t)v2002;
      uint64_t v2019 = ~v32;
      size_t v2102 = ((((v1960 + ((v32 + 8 + (v1974 & 0xFFFFFFFFFFFFFFF8)) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v1987 + 48))(a2, 1, AssociatedTypeWitness))
      {
        memcpy(a1, a2, v53);
      }
      else
      {
        (*(void (**)(void *, unsigned __int8 *, uint64_t))(v1987 + 16))(a1, a2, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v1987 + 56))(a1, 0, 1, AssociatedTypeWitness);
      }
      uint64_t v420 = (void *)(((unint64_t)a1 + v53 + 7) & 0xFFFFFFFFFFFFFFF8);
      __darwin_ino64_t v421 = (void *)((unint64_t)&a2[v53 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v420 = *v421;
      unint64_t v422 = ((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v423 = ((unint64_t)v421 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v422 = *(void *)v423;
      *(unsigned char *)(v422 + 8) = *(unsigned char *)(v423 + 8);
      uint64_t v424 = (void *)((v422 + v2035 + 9) & v376);
      uint64_t v425 = (const void *)((v423 + v2035 + 9) & v376);
      if (v1946 == v1957)
      {
        int v426 = (*(uint64_t (**)(const void *))(v1968 + 48))(v425);
        uint64_t v427 = v2048;
      }
      else
      {
        uint64_t v428 = (uint64_t *)(((unint64_t)v425 + v1975) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v427 = v2048;
        if (v1936 <= 0x7FFFFFFE)
        {
          uint64_t v429 = *v428;
          if ((unint64_t)*v428 >= 0xFFFFFFFF) {
            LODWORD(v429) = -1;
          }
          if ((v429 + 1) >= 2) {
            goto LABEL_444;
          }
          goto LABEL_446;
        }
        int v426 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v1965 + 48))(((unint64_t)v428 + v1963) & v1992, v1931, v1964);
      }
      if (v426)
      {
LABEL_444:
        unint64_t v518 = ((((v1959
                 + ((v2002 + 8 + (v1975 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v2002)) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        memcpy(v424, v425, v2043);
        goto LABEL_447;
      }
      uint64_t v428 = (uint64_t *)(((unint64_t)v425 + v1975) & 0xFFFFFFFFFFFFFFF8);
LABEL_446:
      (*(void (**)(void *, const void *, uint64_t))(v1968 + 16))(v424, v425, v1967);
      unsigned int v519 = (void *)(((unint64_t)v424 + v1975) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v519 = *v428;
      unint64_t v520 = ((unint64_t)v519 + v1963) & v1992;
      unint64_t v521 = ((unint64_t)v428 + v1963) & v1992;
      __darwin_ino64_t v522 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1965 + 16);
      swift_bridgeObjectRetain();
      v522(v520, v521, v1964);
      uint64_t v523 = (void *)((v1959 + v520) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v524 = (void *)((v1959 + v521) & 0xFFFFFFFFFFFFFFF8);
      void *v523 = *v524;
      uint64_t v525 = (void *)(((unint64_t)v523 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v526 = (void *)(((unint64_t)v524 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v525 = *v526;
      v525[1] = v526[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v518 = ((((v1959
               + ((v2002 + 8 + (v1975 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v2002)) & 0xFFFFFFFFFFFFFFF8)
             + 15) & 0xFFFFFFFFFFFFFFF8)
           + 16;
LABEL_447:
      uint64_t v527 = (unsigned char *)(((unint64_t)v425 + v518) | 2);
      uint64_t v528 = (uint64_t)v425 + v518 + 10;
      uint64_t v529 = (uint64_t)v425 + v518 + 34;
      os_log_t v530 = (unsigned char *)(((unint64_t)v424 + v518) | 2);
      uint64_t v531 = (uint64_t)v424 + v518 + 10;
      *((unsigned char *)v424 + v518) = *((unsigned char *)v425 + v518);
      uint64_t v532 = (uint64_t)v424 + v518 + 34;
      *(unsigned char *)(((unint64_t)v424 + v518) | 1) = *(unsigned char *)(((unint64_t)v425 + v518) | 1);
      uint64_t v533 = ~v37;
      unsigned char *v530 = *v527;
      unint64_t v534 = v531 & 0xFFFFFFFFFFFFFFF8;
      id v535 = *(void **)(v528 & 0xFFFFFFFFFFFFFFF8);
      uint64_t v536 = *(void **)((v528 & 0xFFFFFFFFFFFFFFF8) + 8);
      char v537 = *(unsigned char *)((v528 & 0xFFFFFFFFFFFFFFF8) + 16);
      sub_24D3F1C98(v535, v536, v537);
      *(void *)unint64_t v534 = v535;
      *(void *)(v534 + 8) = v536;
      *(unsigned char *)(v534 + 16) = v537;
      unint64_t v538 = v532 & 0xFFFFFFFFFFFFFFF8;
      unint64_t v539 = v529 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v540 = *(void *)((v529 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
      if (!(4 * (v540 & 3)) || ((v540 >> 2) & 0xFFFFFFF3 | (4 * (v540 & 3))) == 0xF)
      {
        uint64_t v545 = (uint64_t *)(v539 + 8);
        *(void *)unint64_t v538 = *(void *)v539;
        unint64_t v546 = *(void *)(v539 + 16);
        uint64_t v544 = v1988;
        uint64_t v78 = a1;
        if (v546 >> 60 == 15)
        {
          *(_OWORD *)(v538 + 8) = *(_OWORD *)v545;
        }
        else
        {
          uint64_t v547 = *v545;
          sub_24D3F9C18(*v545, *(void *)(v539 + 16));
          *(void *)(v538 + 8) = v547;
          *(void *)(v538 + 16) = v546;
        }
        long long v548 = *(_OWORD *)(v539 + 24);
        *(unsigned char *)(v538 + 40) = *(unsigned char *)(v539 + 40);
        *(_OWORD *)(v538 + 24) = v548;
        *(void *)(v538 + 48) = *(void *)(v539 + 48);
      }
      else
      {
        long long v541 = *(_OWORD *)v539;
        long long v542 = *(_OWORD *)(v539 + 16);
        long long v543 = *(_OWORD *)(v539 + 32);
        *(void *)(v538 + 48) = *(void *)(v539 + 48);
        *(_OWORD *)(v538 + 16) = v542;
        *(_OWORD *)(v538 + 32) = v543;
        *(_OWORD *)unint64_t v538 = v541;
        uint64_t v544 = v1988;
        uint64_t v78 = a1;
      }
      id v549 = (void *)((v538 + 63) & 0xFFFFFFFFFFFFFFF8);
      char v550 = (void **)((v539 + 63) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v551 = *v550;
      void *v549 = *v550;
      *(void *)(((unint64_t)v549 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v550 + 15) & 0xFFFFFFFFFFFFFFF8);
      Class v552 = (void *)((unint64_t)&v78[v1937] & v533);
      size_t v553 = (const void *)((unint64_t)&a2[v1937] & v533);
      unsigned int v554 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v427 + 48);
      id v555 = v551;
      if (v554(v553, 1, v544))
      {
        memcpy(v552, v553, v1934);
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v427 + 16))(v552, v553, v544);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v427 + 56))(v552, 0, 1, v544);
      }
      uint64_t v556 = (void *)(((unint64_t)v552 + v1939) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v557 = (void *)(((unint64_t)v553 + v1939) & 0xFFFFFFFFFFFFFFF8);
      void *v556 = *v557;
      unint64_t v558 = ((unint64_t)v556 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v559 = ((unint64_t)v557 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v558 = *(void *)v559;
      *(unsigned char *)(v558 + 8) = *(unsigned char *)(v559 + 8);
      __darwin_ino64_t v560 = (char *)((v74 + v558) & v2006);
      uint64_t v561 = (const void *)((v74 + v559) & v2006);
      if (v1947 == v1958)
      {
        int v562 = (*(uint64_t (**)(const void *))(v1970 + 48))(v561);
      }
      else
      {
        uint64_t v563 = (uint64_t *)(((unint64_t)v561 + v1974) & 0xFFFFFFFFFFFFFFF8);
        if (v2014 <= 0x7FFFFFFE)
        {
          uint64_t v564 = *v563;
          if ((unint64_t)*v563 >= 0xFFFFFFFF) {
            LODWORD(v564) = -1;
          }
          if ((v564 + 1) >= 2) {
            goto LABEL_466;
          }
          goto LABEL_468;
        }
        int v562 = (*(uint64_t (**)(unint64_t))(v1972 + 48))(((unint64_t)v563 + v1966) & v2019);
      }
      if (v562)
      {
LABEL_466:
        size_t v565 = v2102;
        memcpy(v560, v561, v2102);
        goto LABEL_469;
      }
      uint64_t v563 = (uint64_t *)(((unint64_t)v561 + v1974) & 0xFFFFFFFFFFFFFFF8);
LABEL_468:
      (*(void (**)(char *, const void *, uint64_t))(v1970 + 16))(v560, v561, v1969);
      uint64_t v566 = (void *)((unint64_t)&v560[v1974] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v566 = *v563;
      unint64_t v567 = ((unint64_t)v566 + v1966) & v2019;
      unint64_t v568 = ((unint64_t)v563 + v1966) & v2019;
      __darwin_ino64_t v569 = *(void (**)(unint64_t, unint64_t, uint64_t))(v1972 + 16);
      swift_bridgeObjectRetain();
      v569(v567, v568, v1971);
      __darwin_ino64_t v570 = (void *)((v1960 + v567) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v571 = (void *)((v1960 + v568) & 0xFFFFFFFFFFFFFFF8);
      *__darwin_ino64_t v570 = *v571;
      __darwin_ino64_t v572 = (void *)(((unint64_t)v570 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v573 = (void *)(((unint64_t)v571 + 15) & 0xFFFFFFFFFFFFFFF8);
      *__darwin_ino64_t v572 = *v573;
      v572[1] = v573[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v565 = v2102;
LABEL_469:
      uint64_t v574 = (unsigned char *)(((unint64_t)v561 + v565) | 1);
      uint64_t v575 = (unsigned char *)(((unint64_t)v561 + v565) | 2);
      uint64_t v576 = (uint64_t)v561 + v565 + 10;
      uint64_t v578 = (uint64_t)v561 + v565 + 34;
      char v577 = *((unsigned char *)v561 + v565);
      uint64_t v579 = (unsigned char *)((unint64_t)&v560[v565] | 1);
      int v580 = (unsigned char *)((unint64_t)&v560[v565] | 2);
      uint64_t v581 = (uint64_t)&v560[v565 + 10];
      uint64_t v582 = &v560[v565];
      *uint64_t v582 = v577;
      unsigned char *v579 = *v574;
      unsigned char *v580 = *v575;
      unint64_t v583 = v581 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v584 = *(void **)(v576 & 0xFFFFFFFFFFFFFFF8);
      char v585 = *(void **)((v576 & 0xFFFFFFFFFFFFFFF8) + 8);
      char v586 = *(unsigned char *)((v576 & 0xFFFFFFFFFFFFFFF8) + 16);
      sub_24D3F1C98(v584, v585, v586);
      *(void *)unint64_t v583 = v584;
      *(void *)(v583 + 8) = v585;
      *(unsigned char *)(v583 + 16) = v586;
      unint64_t v587 = (unint64_t)(v582 + 34) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v588 = v578 & 0xFFFFFFFFFFFFFFF8;
      uint64_t v589 = *(void *)((v578 & 0xFFFFFFFFFFFFFFF8) + 16) >> 60;
      if (!(4 * (v589 & 3)) || ((v589 >> 2) & 0xFFFFFFF3 | (4 * (v589 & 3))) == 0xF)
      {
        uint64_t v595 = (uint64_t *)(v588 + 8);
        *(void *)unint64_t v587 = *(void *)v588;
        unint64_t v596 = *(void *)(v588 + 16);
        uint64_t v593 = v1919;
        if (v596 >> 60 == 15)
        {
          *(_OWORD *)(v587 + 8) = *(_OWORD *)v595;
        }
        else
        {
          uint64_t v597 = *v595;
          sub_24D3F9C18(*v595, *(void *)(v588 + 16));
          *(void *)(v587 + 8) = v597;
          *(void *)(v587 + 16) = v596;
        }
        unint64_t v594 = v1938;
        long long v598 = *(_OWORD *)(v588 + 24);
        *(unsigned char *)(v587 + 40) = *(unsigned char *)(v588 + 40);
        *(_OWORD *)(v587 + 24) = v598;
        *(void *)(v587 + 48) = *(void *)(v588 + 48);
      }
      else
      {
        long long v590 = *(_OWORD *)v588;
        long long v591 = *(_OWORD *)(v588 + 16);
        long long v592 = *(_OWORD *)(v588 + 32);
        *(void *)(v587 + 48) = *(void *)(v588 + 48);
        *(_OWORD *)(v587 + 16) = v591;
        *(_OWORD *)(v587 + 32) = v592;
        *(_OWORD *)unint64_t v587 = v590;
        uint64_t v593 = v1919;
        unint64_t v594 = v1938;
      }
      uint64_t v599 = (void *)((v587 + 63) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v600 = (void **)((v588 + 63) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v601 = *v600;
      *uint64_t v599 = *v600;
      *(void *)(((unint64_t)v599 + 15) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v600 + 15) & 0xFFFFFFFFFFFFFFF8);
      *((unsigned char *)v552 + v594) = *((unsigned char *)v553 + v594);
      unint64_t v602 = ((unint64_t)v552 + v594) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v603 = ((unint64_t)v553 + v594) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v602 + 8) = *(void *)(v603 + 8);
      v604 = (_OWORD *)((v602 + 23) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v605 = (_OWORD *)((v603 + 23) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v604 = *v605;
      unint64_t v606 = ((unint64_t)v604 + 23) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v607 = ((unint64_t)v605 + 23) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v606 = *(void *)v607;
      *(unsigned char *)(v606 + 8) = *(unsigned char *)(v607 + 8);
      *(void *)(((unint64_t)v604 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v605 + 39) & 0xFFFFFFFFFFFFFFF8);
      id v608 = v601;
      swift_bridgeObjectRetain();
      if (v593 > 3) {
        goto LABEL_477;
      }
      unsigned int v609 = ((1 << (8 * v593)) + 5) >> (8 * v593);
      if (v609 > 0xFFD6)
      {
        *(_DWORD *)&v78[v593] = 36;
        return v78;
      }
      if (v609 <= 0xD6) {
LABEL_477:
      }
        v78[v593] = 36;
      else {
        *(_WORD *)&v78[v593] = 36;
      }
      return v78;
    case 0x25u:
      unsigned int v377 = a2[v2029];
      unsigned int v378 = v377 - 2;
      if (v377 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v382 = v1988;
        uint64_t v383 = AssociatedTypeWitness;
        size_t v381 = v2047;
        uint64_t v380 = v2048;
        uint64_t v384 = v1987;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v379 = v2029;
        }
        else {
          uint64_t v379 = 4;
        }
        uint64_t v78 = a1;
        size_t v381 = v2047;
        uint64_t v380 = v2048;
        uint64_t v382 = v1988;
        uint64_t v383 = AssociatedTypeWitness;
        uint64_t v384 = v1987;
        switch(v379)
        {
          case 1:
            int v385 = *a2;
            goto LABEL_923;
          case 2:
            int v385 = *(unsigned __int16 *)a2;
            goto LABEL_923;
          case 3:
            int v385 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_923;
          case 4:
            int v385 = *(_DWORD *)a2;
LABEL_923:
            if (v2029 < 4) {
              unsigned int v377 = (v385 | (v378 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v377 = v385 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v760 = v377 == 1;
      if (v377 == 1) {
        uint64_t v761 = v380;
      }
      else {
        uint64_t v761 = v384;
      }
      if (v377 == 1) {
        uint64_t v762 = v382;
      }
      else {
        uint64_t v762 = v383;
      }
      (*(void (**)(unsigned char *, unsigned __int8 *, uint64_t))(v761 + 16))(v78, a2, v762);
      v78[v2029] = v760;
      v78[v381] = a2[v381];
      if (v1919 > 3) {
        goto LABEL_933;
      }
      unsigned int v763 = ((1 << (8 * v1919)) + 5) >> (8 * v1919);
      if (v763 > 0xFFD6)
      {
        *(_DWORD *)&v78[v1919] = 37;
      }
      else if (v763 <= 0xD6)
      {
LABEL_933:
        v78[v1919] = 37;
      }
      else
      {
        *(_WORD *)&v78[v1919] = 37;
      }
      return v78;
    case 0x26u:
      unsigned int v386 = a2[v2029];
      unsigned int v387 = v386 - 2;
      if (v386 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v390 = v2048;
        uint64_t v391 = v1987;
        uint64_t v389 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v388 = v2029;
        }
        else {
          uint64_t v388 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v389 = v1919;
        uint64_t v390 = v2048;
        uint64_t v391 = v1987;
        switch(v388)
        {
          case 1:
            int v392 = *a2;
            goto LABEL_941;
          case 2:
            int v392 = *(unsigned __int16 *)a2;
            goto LABEL_941;
          case 3:
            int v392 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_941;
          case 4:
            int v392 = *(_DWORD *)a2;
LABEL_941:
            if (v2029 < 4) {
              unsigned int v386 = (v392 | (v387 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v386 = v392 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v764 = v386 == 1;
      if (v386 == 1) {
        uint64_t v765 = v390;
      }
      else {
        uint64_t v765 = v391;
      }
      (*(void (**)(unsigned char *))(v765 + 16))(v78);
      v78[v2029] = v764;
      if (v389 > 3) {
        goto LABEL_948;
      }
      unsigned int v766 = ((1 << (8 * v389)) + 5) >> (8 * v389);
      if (v766 > 0xFFD6)
      {
        *(_DWORD *)&v78[v389] = 38;
      }
      else if (v766 <= 0xD6)
      {
LABEL_948:
        v78[v389] = 38;
      }
      else
      {
        *(_WORD *)&v78[v389] = 38;
      }
      return v78;
    case 0x27u:
      unsigned int v393 = a2[v2029];
      unsigned int v394 = v393 - 2;
      if (v393 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v397 = v2048;
        uint64_t v398 = v1987;
        uint64_t v396 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v395 = v2029;
        }
        else {
          uint64_t v395 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v396 = v1919;
        uint64_t v397 = v2048;
        uint64_t v398 = v1987;
        switch(v395)
        {
          case 1:
            int v399 = *a2;
            goto LABEL_956;
          case 2:
            int v399 = *(unsigned __int16 *)a2;
            goto LABEL_956;
          case 3:
            int v399 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_956;
          case 4:
            int v399 = *(_DWORD *)a2;
LABEL_956:
            if (v2029 < 4) {
              unsigned int v393 = (v399 | (v394 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v393 = v399 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v767 = v393 == 1;
      if (v393 == 1) {
        uint64_t v768 = v397;
      }
      else {
        uint64_t v768 = v398;
      }
      (*(void (**)(unsigned char *))(v768 + 16))(v78);
      v78[v2029] = v767;
      if (v396 > 3) {
        goto LABEL_963;
      }
      unsigned int v769 = ((1 << (8 * v396)) + 5) >> (8 * v396);
      if (v769 > 0xFFD6)
      {
        *(_DWORD *)&v78[v396] = 39;
      }
      else if (v769 <= 0xD6)
      {
LABEL_963:
        v78[v396] = 39;
      }
      else
      {
        *(_WORD *)&v78[v396] = 39;
      }
      return v78;
    case 0x28u:
      unsigned int v400 = a2[v2029];
      unsigned int v401 = v400 - 2;
      if (v400 < 2)
      {
        uint64_t v78 = a1;
        uint64_t v404 = v2048;
        uint64_t v405 = v1987;
        uint64_t v403 = v1919;
      }
      else
      {
        if (v2029 <= 3) {
          uint64_t v402 = v2029;
        }
        else {
          uint64_t v402 = 4;
        }
        uint64_t v78 = a1;
        uint64_t v403 = v1919;
        uint64_t v404 = v2048;
        uint64_t v405 = v1987;
        switch(v402)
        {
          case 1:
            int v406 = *a2;
            goto LABEL_971;
          case 2:
            int v406 = *(unsigned __int16 *)a2;
            goto LABEL_971;
          case 3:
            int v406 = *(unsigned __int16 *)a2 | (a2[2] << 16);
            goto LABEL_971;
          case 4:
            int v406 = *(_DWORD *)a2;
LABEL_971:
            if (v2029 < 4) {
              unsigned int v400 = (v406 | (v401 << (8 * v2029))) + 2;
            }
            else {
              unsigned int v400 = v406 + 2;
            }
            break;
          default:
            break;
        }
      }
      BOOL v770 = v400 == 1;
      if (v400 == 1) {
        uint64_t v771 = v404;
      }
      else {
        uint64_t v771 = v405;
      }
      (*(void (**)(unsigned char *))(v771 + 16))(v78);
      v78[v2029] = v770;
      if (v403 > 3) {
        goto LABEL_978;
      }
      unsigned int v772 = ((1 << (8 * v403)) + 5) >> (8 * v403);
      if (v772 > 0xFFD6)
      {
        *(_DWORD *)&v78[v403] = 40;
      }
      else if (v772 <= 0xD6)
      {
LABEL_978:
        v78[v403] = 40;
      }
      else
      {
        *(_WORD *)&v78[v403] = 40;
      }
      return v78;
    default:
      if (v88 > 3) {
        goto LABEL_142;
      }
      unsigned int v93 = ((1 << (8 * v88)) + 5) >> (8 * v88);
      uint64_t v94 = 2;
      if (v93 > 0xFFD6) {
        uint64_t v94 = 4;
      }
      if (v93 <= 0xD6) {
LABEL_142:
      }
        uint64_t v94 = 1;
      uint64_t v78 = a1;
      memcpy(a1, (const void *)v84, v94 + v88);
      return v78;
  }
}