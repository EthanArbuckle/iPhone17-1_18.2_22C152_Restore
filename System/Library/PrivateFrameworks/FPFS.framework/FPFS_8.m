uint64_t sub_24D902E38()
{
  return sub_24D903220((uint64_t *)&unk_26B196F60);
}

uint64_t sub_24D902E44()
{
  return swift_deallocObject();
}

uint64_t sub_24D902E54()
{
  return swift_deallocObject();
}

uint64_t sub_24D902E68()
{
  return sub_24D902E7C((uint64_t *)&unk_26B196F60, (uint64_t *)&unk_26B196F50);
}

uint64_t sub_24D902E7C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  return sub_24D8EA254(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

uint64_t sub_24D902EEC()
{
  return swift_deallocObject();
}

uint64_t sub_24D902EFC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_645Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F60) - 8);
  uint64_t v2 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  v3 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v3 - 1) + 48))(v2, 1, v3))
  {

    sub_24D400DCC(*(void *)(v2 + 16), *(void *)(v2 + 24));
    swift_bridgeObjectRelease();
    sub_24D400DCC(*(void *)(v2 + 40), *(void *)(v2 + 48));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v2 + v3[12];
    uint64_t v5 = (int *)type metadata accessor for ItemMetadata();
    uint64_t v6 = v4 + v5[7];
    uint64_t v7 = sub_24DCC8CE8();
    uint64_t v8 = *(void *)(v7 - 8);
    v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v9(v6, v7);
    v9(v4 + v5[8], v7);
    swift_bridgeObjectRelease();
    uint64_t v10 = v4 + v5[29];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
      v9(v10, v7);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v11 = (uint64_t *)(v4 + v5[33]);
    unint64_t v12 = v11[1];
    if (v12 >> 60 != 15) {
      sub_24D400DCC(*v11, v12);
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = v2 + v3[13];
    v14 = *(void **)(v13 + 16);
    if (v14 != (void *)1)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v13 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_24D466534(*(void *)(v2 + v3[17]), *(void *)(v2 + v3[17] + 8));
  }

  return swift_deallocObject();
}

uint64_t sub_24D903220(uint64_t *a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(a1) - 8);
  return sub_24D8EA1BC(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_24D903280()
{
  return swift_deallocObject();
}

uint64_t sub_24D903290()
{
  return swift_deallocObject();
}

uint64_t sub_24D9032A0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 120);
  if (v1 > 0xA) {
    return (v1 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void *sub_24D9032B4@<X0>(void *a1@<X8>)
{
  return sub_24D860238(*(void *)(v1 + 16), **(void **)(v1 + 24), *(unsigned char *)(*(void *)(v1 + 24) + 8), a1);
}

void *sub_24D9032D8@<X0>(void *a1@<X8>)
{
  return sub_24D9032F0(a1);
}

void *sub_24D9032F0@<X0>(void *a1@<X8>)
{
  return sub_24D826958(**(void **)(v1 + 24), *(unsigned char *)(*(void *)(v1 + 24) + 8), a1);
}

void sub_24D903320(uint64_t a1@<X8>)
{
  sub_24D8F01A8(*(void *)(v1 + 16), **(void ***)(v1 + 24), a1);
}

void sub_24D903340(uint64_t a1@<X8>)
{
  sub_24D8631DC(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void *sub_24D90335C@<X0>(void *a1@<X8>)
{
  return sub_24D826958(*(void *)(*(void *)(v1 + 24) + 16), *(unsigned char *)(*(void *)(v1 + 24) + 24), a1);
}

uint64_t sub_24D90338C()
{
  return sub_24D85BC0C();
}

uint64_t sub_24D903394(uint64_t a1, void **a2, char a3)
{
  return sub_24D85D0C8(*(void **)a1, *(unsigned char *)(a1 + 8), *a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24)) & 1;
}

uint64_t sub_24D9033C8()
{
  return sub_24D875F00();
}

uint64_t sub_24D9033E4()
{
  return sub_24D875FC0(*(void *)(v0 + 16), *(void ***)(v0 + 24));
}

void sub_24D903400()
{
  sub_24D83EFB0(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_24D903420()
{
  return sub_24D83F390(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_24D903440(void *a1)
{
  return sub_24D83F76C(a1, v1, (uint64_t *)&unk_26B1926A0);
}

uint64_t sub_24D903464(void *a1)
{
  return sub_24D83F76C(a1, v1, &qword_26986BDE8);
}

BOOL sub_24D903488(uint64_t a1)
{
  return sub_24D87EFEC(a1, *(unsigned char **)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_24D903498()
{
  return swift_deallocObject();
}

uint64_t sub_24D9034A8(uint64_t a1)
{
  return sub_24DC1D680(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24D9034B0()
{
  return swift_deallocObject();
}

uint64_t sub_24D9034C0()
{
  return swift_deallocObject();
}

uint64_t sub_24D9034D0()
{
  swift_unownedRelease();

  return swift_deallocObject();
}

void sub_24D903508(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  sub_24D87A1F4(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_24D903510(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  sub_24D87A2D8(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_24D903518(sqlite3_context *a1, uint64_t a2, sqlite3_value **a3)
{
  sub_24D87A9DC(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_24D903520(sqlite3_context *a1)
{
}

uint64_t sub_24D903528()
{
  return swift_deallocObject();
}

uint64_t sub_24D903538()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_24D903560(void *a1)
{
  return sub_24D87B274(a1, *(void *)(v1 + 16), *(_DWORD *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(uint64_t *))(v1 + 40));
}

uint64_t sub_24D903588()
{
  return swift_deallocObject();
}

uint64_t sub_24D903598(uint64_t a1)
{
  return sub_24DC1D608(a1, *(unsigned char **)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24));
}

uint64_t sub_24D9035A8()
{
  return swift_deallocObject();
}

unint64_t sub_24D9035B8(uint64_t a1, char a2)
{
  return sub_24D83404C(a1, a2);
}

uint64_t sub_24D9035D4()
{
  return sub_24D8903E0();
}

uint64_t sub_24D903600()
{
  return swift_deallocObject();
}

uint64_t sub_24D903610()
{
  return sub_24D8903E0();
}

uint64_t sub_24D90363C()
{
  return swift_deallocObject();
}

uint64_t sub_24D90364C()
{
  return swift_deallocObject();
}

uint64_t sub_24D90365C()
{
  return swift_deallocObject();
}

uint64_t sub_24D90366C(uint64_t *a1, uint64_t a2)
{
  return sub_24D8F3B70(a1, a2, *(uint64_t **)(v2 + 16), (void (*)(void, uint64_t, uint64_t))sub_24D4E4B98, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_24DA14F14);
}

uint64_t sub_24D9036B0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9036E8()
{
  return swift_deallocObject();
}

uint64_t sub_24D9036F8()
{
  return objectdestroy_50Tm((void (*)(void, void, void))sub_24D5135B0);
}

uint64_t sub_24D903714(void *a1)
{
  return sub_24D903990(a1, (uint64_t)&unk_26FFC4A78, (uint64_t)sub_24D903804, (void (*)(void, void, void))sub_24D8F5C48);
}

uint64_t sub_24D903748()
{
  return swift_deallocObject();
}

uint64_t sub_24D903758()
{
  return objectdestroy_50Tm((void (*)(void, void, void))sub_24D5135B0);
}

uint64_t sub_24D903774(uint64_t a1)
{
  return sub_24D9037A0(a1, (uint64_t)sub_24D8F5C48, (uint64_t (*)(uint64_t, void, void, void, uint64_t))sub_24D833438);
}

uint64_t sub_24D9037A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, void, void, void, uint64_t))
{
  return a3(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), *(unsigned __int8 *)(v3 + 32) | (*(unsigned __int8 *)(v3 + 34) << 16) | (*(unsigned __int8 *)(v3 + 33) << 8), a2);
}

uint64_t sub_24D9037E4()
{
  return swift_deallocObject();
}

unint64_t sub_24D9037F4(void *a1)
{
  return sub_24D8F66FC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), **(void ***)(v1 + 40));
}

uint64_t sub_24D903804@<X0>(unsigned __int8 *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24D511FF4(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24D90380C()
{
  return objectdestroy_50Tm((void (*)(void, void, void))sub_24D5135B0);
}

uint64_t sub_24D903828(uint64_t a1)
{
  return sub_24D9037A0(a1, (uint64_t)sub_24D8F5C48, (uint64_t (*)(uint64_t, void, void, void, uint64_t))sub_24D833340);
}

uint64_t sub_24D903854()
{
  return swift_deallocObject();
}

unint64_t sub_24D903864()
{
  unint64_t result = qword_26B1926C0;
  if (!qword_26B1926C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1926C0);
  }
  return result;
}

uint64_t sub_24D9038B8()
{
  return swift_deallocObject();
}

uint64_t sub_24D9038C8(uint64_t *a1, uint64_t a2)
{
  return sub_24D8F3B70(a1, a2, *(uint64_t **)(v2 + 16), (void (*)(void, uint64_t, uint64_t))sub_24D4018B8, (uint64_t (*)(BOOL, unint64_t, uint64_t, uint64_t))sub_24DA14F28);
}

uint64_t sub_24D90390C(uint64_t a1)
{
  return sub_24D5087A0(a1, *(void *)(v1 + 16), *(void (**)(uint64_t, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(unsigned __int8 *)(v1 + 40));
}

uint64_t sub_24D903930()
{
  return swift_deallocObject();
}

uint64_t sub_24D903940()
{
  return objectdestroy_50Tm((void (*)(void, void, void))sub_24D40160C);
}

uint64_t sub_24D90395C(void *a1)
{
  return sub_24D903990(a1, (uint64_t)&unk_26FFC4D20, (uint64_t)sub_24D905954, (void (*)(void, void, void))sub_24D8F594C);
}

uint64_t sub_24D903990(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void, void, void))
{
  return sub_24D83353C(a1, *(void *)(v4 + 16), *(void *)(v4 + 24), *(unsigned __int8 *)(v4 + 32) | (*(unsigned __int8 *)(v4 + 34) << 16) | (*(unsigned __int8 *)(v4 + 33) << 8), a2, a3, a4);
}

uint64_t sub_24D9039D4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9039E4()
{
  return objectdestroy_50Tm((void (*)(void, void, void))sub_24D40160C);
}

uint64_t sub_24D903A00(uint64_t a1)
{
  return sub_24D9037A0(a1, (uint64_t)sub_24D8F594C, (uint64_t (*)(uint64_t, void, void, void, uint64_t))sub_24D833438);
}

uint64_t sub_24D903A2C()
{
  return swift_deallocObject();
}

unint64_t sub_24D903A3C(void *a1)
{
  return sub_24D8F69F0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), **(void **)(v1 + 40), *(unsigned char *)(*(void *)(v1 + 40) + 8));
}

uint64_t sub_24D903A50()
{
  return objectdestroy_50Tm((void (*)(void, void, void))sub_24D40160C);
}

uint64_t objectdestroy_50Tm(void (*a1)(void, void, void))
{
  swift_release();
  a1(*(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(unsigned __int8 *)(v1 + 33));

  return swift_deallocObject();
}

uint64_t sub_24D903AD0(uint64_t a1)
{
  return sub_24D9037A0(a1, (uint64_t)sub_24D8F594C, (uint64_t (*)(uint64_t, void, void, void, uint64_t))sub_24D833340);
}

uint64_t sub_24D903AFC()
{
  return swift_deallocObject();
}

uint64_t sub_24D903B0C(uint64_t a1)
{
  return sub_24D3E3990(a1, *(void *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

uint64_t sub_24D903B2C()
{
  return swift_deallocObject();
}

uint64_t sub_24D903B44()
{
  return 32;
}

__n128 sub_24D903B50(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_24D903B5C()
{
  return sub_24D8ACB0C();
}

uint64_t sub_24D903B64()
{
  return sub_24D8AD0B4();
}

void sub_24D903B6C()
{
}

uint64_t sub_24D903B88()
{
  return sub_24D8BA7A0(v0 + 16, *(void *)(v0 + 80));
}

uint64_t sub_24D903BAC()
{
  return sub_24D8BA6A8(v0 + 16, *(void *)(v0 + 80));
}

uint64_t sub_24D903BD0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

id sub_24D903C38(id result, void *a2, uint64_t a3, char a4)
{
  uint64_t v4 = result;
  if (a4 != 3 && a4 != 1)
  {
    if (a4) {
      return result;
    }
    swift_retain();
    id v6 = v4;
    __n128 result = a2;
  }

  return result;
}

uint64_t sub_24D903CB0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 3:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

void sub_24D903D04(void *a1, void *a2, uint64_t a3, char a4)
{
  if (a4 == 3 || a4 == 1)
  {
  }
  else if (!a4)
  {

    swift_release();
  }
}

uint64_t sub_24D903D70(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  switch(a4)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D903DC4()
{
  return sub_24D903EB8((uint64_t (*)(void, void, void, void, void))sub_24D83E4E4);
}

uint64_t sub_24D903DF0()
{
  swift_release();
  sub_24D58F884(*(void **)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), *(unsigned char *)(v0 + 48));
  sub_24D903D04(*(void **)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  return swift_deallocObject();
}

void sub_24D903E48()
{
  sub_24D8ED04C(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_24D903E8C()
{
  return sub_24D903EB8((uint64_t (*)(void, void, void, void, void))sub_24D83EC7C);
}

uint64_t sub_24D903EB8(uint64_t (*a1)(void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), **(void **)(v1 + 24), *(void *)(*(void *)(v1 + 24) + 8), *(void *)(*(void *)(v1 + 24) + 16), *(unsigned __int8 *)(*(void *)(v1 + 24) + 24));
}

uint64_t sub_24D903EE8@<X0>(unsigned char *a1@<X8>)
{
  return sub_24D8F3CF4(*(void *)(v1 + 16), *(long long **)(v1 + 24), a1);
}

uint64_t sub_24D903F04(uint64_t a1)
{
  return sub_24D903F78(a1) & 1;
}

id *sub_24D903F20(id *a1)
{
  id v2 = *a1;
  return a1;
}

id *sub_24D903F4C(id *a1)
{
  return a1;
}

uint64_t sub_24D903F78(uint64_t a1)
{
  return sub_24D83C924(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned char *)(a1 + 24), **(void ***)(v1 + 16), *(void **)(*(void *)(v1 + 16) + 8), *(void **)(*(void *)(v1 + 16) + 16), *(unsigned char *)(*(void *)(v1 + 16) + 24)) & 1;
}

uint64_t sub_24D903FC4(uint64_t a1)
{
  return sub_24D8F3DAC(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t objectdestroy_942Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D904040()
{
  return sub_24D8A7AB8(v0 + 16, *(void *)(v0 + 80));
}

uint64_t sub_24D904060()
{
  return sub_24D904574((uint64_t (*)(uint64_t, unsigned char *))sub_24D83E918);
}

uint64_t sub_24D90408C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26B18FC00) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 66) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  if (!swift_getEnumCaseMultiPayload())
  {
    unint64_t v3 = v0 + v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193EC0) + 48);
    uint64_t v4 = type metadata accessor for VFSItem(0);
    if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
    {
      swift_bridgeObjectRelease();
      uint64_t v22 = v4;
      unint64_t v23 = v3;
      unint64_t v5 = v3 + *(int *)(v4 + 28);
      id v6 = (int *)type metadata accessor for ItemMetadata();
      unint64_t v20 = v5 + v6[7];
      uint64_t v7 = sub_24DCC8CE8();
      uint64_t v8 = *(void *)(v7 - 8);
      v9 = *(void (**)(unint64_t, uint64_t))(v8 + 8);
      v9(v20, v7);
      v21 = v9;
      v9(v5 + v6[8], v7);
      swift_bridgeObjectRelease();
      unint64_t v10 = v5 + v6[29];
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
        v21(v10, v7);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = (uint64_t *)(v5 + v6[33]);
      unint64_t v12 = v11[1];
      if (v12 >> 60 != 15) {
        sub_24D400DCC(*v11, v12);
      }
      swift_bridgeObjectRelease();
      unint64_t v13 = v23 + *(int *)(v22 + 32);
      v14 = *(void **)(v13 + 16);
      if (v14 != (void *)1)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v13 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      unint64_t v15 = v23 + *(int *)(v22 + 48);
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16))
      {
        uint64_t v17 = sub_24DCC8A58();
        uint64_t v18 = *(void *)(v17 - 8);
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v17)) {
          (*(void (**)(unint64_t, uint64_t))(v18 + 8))(v15, v17);
        }
      }
    }
    swift_release();
  }

  return swift_deallocObject();
}

void sub_24D90447C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(qword_26B18FC00) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 66) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + 24;
  uint64_t v5 = v0 + v2;
  uint64_t v6 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_24D3F0BA0(v4, (uint64_t)v7, (uint64_t *)&unk_26B1926A0);
  sub_24D8ED4A0(v3, (uint64_t)v7, v5, v6);
}

uint64_t sub_24D904548()
{
  return sub_24D904574((uint64_t (*)(uint64_t, unsigned char *))sub_24D83EE38);
}

uint64_t sub_24D904574(uint64_t (*a1)(uint64_t, unsigned char *))
{
  uint64_t v3 = *(void *)(v1 + 16);
  sub_24D3F0BA0(*(void *)(v1 + 24), (uint64_t)v5, (uint64_t *)&unk_26B1926A0);
  return a1(v3, v5);
}

uint64_t sub_24D9045D8@<X0>(unsigned char *a1@<X8>)
{
  return sub_24D8F3E7C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24D9045F4(uint64_t a1)
{
  return sub_24D8F3FE8(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_24D904614(uint64_t a1)
{
  return sub_24D8F3F34(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_24D904634@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D8B87E8(2, 0x7FFFFFFFFFFFFFFFLL, 0, 0);
  if (!v1) {
    *a1 = result & 1;
  }
  return result;
}

void *sub_24D904674@<X0>(unsigned char *a1@<X8>)
{
  return sub_24D8F4054(*(void *(**)(uint64_t *__return_ptr))(v1 + 16), a1);
}

uint64_t sub_24D904694(char a1)
{
  sub_24D8F892C(a1);

  return swift_retain();
}

unint64_t sub_24D9046BC()
{
  unint64_t result = qword_26B1948A8;
  if (!qword_26B1948A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B1948B0);
    sub_24D3E4A9C(&qword_26B1947D0, &qword_26B1947D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1948A8);
  }
  return result;
}

unint64_t sub_24D904754()
{
  unint64_t result = qword_26986F978;
  if (!qword_26986F978)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26986F970);
    sub_24D3E4A9C(&qword_26986F980, &qword_26986F988);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986F978);
  }
  return result;
}

uint64_t sub_24D9047EC()
{
  return sub_24D898CA4();
}

uint64_t sub_24D9047F4()
{
  return sub_24D898D10();
}

uint64_t sub_24D9047FC()
{
  return sub_24D845CE4(v0, (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24D90550C, (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24D6E4F88);
}

uint64_t sub_24D904840()
{
  return sub_24D845CE4(v0, (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24D3EBEF0, (void (*)(uint64_t (*)(uint64_t), uint64_t))sub_24D6E4F88);
}

unint64_t sub_24D904884()
{
  unint64_t result = qword_26986F9B0;
  if (!qword_26986F9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986F9B0);
  }
  return result;
}

unint64_t sub_24D9048D8()
{
  unint64_t result = qword_26B199800;
  if (!qword_26B199800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199800);
  }
  return result;
}

uint64_t sub_24D90492C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D904964()
{
  return sub_24D88C6D4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_24D904980@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_24D88CD84(a1, v2, &qword_26B1A27A0, (void (*)(uint64_t))sub_24D9C216C, a2);
}

void sub_24D9049B8(void *a1)
{
}

uint64_t sub_24D9049E4@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  return sub_24D88CD84(a1, v2, &qword_26B1A2648, (void (*)(uint64_t))sub_24D7734D0, a2);
}

uint64_t sub_24D904A1C@<X0>(uint64_t a1@<X8>)
{
  return sub_24D88BDA4(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_24D904A38@<X0>(uint64_t a1@<X8>)
{
  return sub_24D8809B4(*(void *)(v1 + 24), 1, a1);
}

uint64_t sub_24D904A64@<X0>(uint64_t a1@<X8>)
{
  return sub_24D880658(*(void *)(v1 + 24), 0, a1);
}

uint64_t sub_24D904A90@<X0>(uint64_t a1@<X8>)
{
  return sub_24D8809B4(*(void *)(v1 + 24), 0, a1);
}

uint64_t sub_24D904ABC@<X0>(uint64_t a1@<X8>)
{
  return sub_24D88BA0C(*(void *)(v1 + 48), *(void *)(v1 + 56), *(unsigned char *)(v1 + 64), a1);
}

uint64_t sub_24D904AE4()
{
  return objectdestroy_368Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D904B00()
{
  return sub_24D881FB4(*(void **)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40));
}

uint64_t sub_24D904B24()
{
  uint64_t v1 = sub_24DCC8CE8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D904C04()
{
  uint64_t v1 = *(void *)(sub_24DCC8CE8() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  int v3 = *(unsigned __int8 *)(v0 + 48);
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 56);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(uint64_t **)(v0 + 72);
  uint64_t v7 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D882528(v3, v4, v5, v6, v0 + v2, v7);
}

uint64_t sub_24D904C9C()
{
  uint64_t v1 = sub_24DCC8CE8();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D904D64(int a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8CE8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + v4;
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  v11 = *(void (**)(void))v10;
  uint64_t v12 = *(void *)(v10 + 8);

  sub_24D88279C(a1, v8, v7, v9, v11, v12);
}

unint64_t sub_24D904E1C()
{
  unint64_t result = qword_26B194218;
  if (!qword_26B194218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194218);
  }
  return result;
}

unint64_t sub_24D904E70()
{
  unint64_t result = qword_26B193EE0;
  if (!qword_26B193EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193EE0);
  }
  return result;
}

uint64_t sub_24D904EC4()
{
  swift_release();

  return swift_deallocObject();
}

BOOL sub_24D904EFC(uint64_t a1)
{
  return sub_24D87F090(a1, *(void *)(v1 + 24), *(void (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void ***)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16));
}

uint64_t sub_24D904F0C()
{
  return swift_deallocObject();
}

uint64_t sub_24D904F1C()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = sub_24DCC8FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D905050()
{
  uint64_t v1 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D87E4F8(v0 + v2, *(void *)(v0 + v3), *(void (**)(void))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void (**)(uint64_t))(v0 + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D905124()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D90515C()
{
  return sub_24D87E684();
}

uint64_t sub_24D90516C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9051A4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D9051CC()
{
  return objectdestroy_368Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_368Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_24D905244(void *a1, uint64_t a2, __int16 a3)
{
  return sub_24D881950(a1, a2, a3 & 0x1FF, v3[2], v3[3], v3[4]);
}

uint64_t sub_24D90525C()
{
  swift_release();
  sub_24D9052AC(*(id *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned char *)(v0 + 41));
  swift_release();

  return swift_deallocObject();
}

void sub_24D9052AC(id a1, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
}
  }

uint64_t sub_24D9052B8()
{
  return sub_24D881A3C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40) | (*(unsigned __int8 *)(v0 + 41) << 8), *(uint64_t (**)(void))(v0 + 48), *(void *)(v0 + 56));
}

id sub_24D9052F0(id result, uint64_t a2, uint64_t a3, char a4)
{
  if (a4) {
    return result;
  }
  return result;
}

uint64_t sub_24D9052FC()
{
  return (*(uint64_t (**)(uint64_t))(v0 + 16))(1);
}

uint64_t sub_24D905328()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

id sub_24D905368()
{
  return sub_24D88107C(*(unsigned char *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_24D90538C()
{
  return swift_deallocObject();
}

id sub_24D9053C4(uint64_t a1, void *a2)
{
  return sub_24D61F2C8(a1, a2, v2);
}

unint64_t sub_24D9053E0()
{
  unint64_t result = qword_26986FA20;
  if (!qword_26986FA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FA20);
  }
  return result;
}

void sub_24D905434()
{
  sub_24D873788(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48));
}

id sub_24D905458()
{
  return sub_24D87C5D8(v0);
}

ValueMetadata *type metadata accessor for SQLBugfixRevision()
{
  return &type metadata for SQLBugfixRevision;
}

unint64_t sub_24D905488()
{
  unint64_t result = qword_26986FA78;
  if (!qword_26986FA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FA78);
  }
  return result;
}

uint64_t sub_24D9054E0(uint64_t a1)
{
  return sub_24D9045F4(a1) & 1;
}

void *sub_24D905510@<X0>(uint64_t a1@<X8>)
{
  return sub_24D8FA9A4(a1);
}

uint64_t sub_24D90552C()
{
  return sub_24D904040();
}

uint64_t sub_24D905638@<X0>(uint64_t a1@<X8>)
{
  return sub_24D904A90(a1);
}

uint64_t sub_24D905650@<X0>(uint64_t a1@<X8>)
{
  return sub_24D904A64(a1);
}

void *sub_24D9057B4@<X0>(void *a1@<X8>)
{
  return sub_24D9032B4(a1);
}

uint64_t sub_24D9057CC(uint64_t a1)
{
  return sub_24D9005C8(a1) & 1;
}

uint64_t sub_24D905964()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D905A04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)v1;
  unint64_t v4 = (os_unfair_lock_s *)(v1 + *(void *)(*(void *)v1 + 96));
  swift_beginAccess();
  os_unfair_lock_lock(v4);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v3 + 80) - 8) + 16))(a1, v1 + *(void *)(*(void *)v1 + 88));
  return sub_24D905AD4(v1);
}

uint64_t sub_24D905AD4(uint64_t a1)
{
  uint64_t v1 = (os_unfair_lock_s *)(a1 + *(void *)(*(void *)a1 + 96));
  swift_beginAccess();
  os_unfair_lock_unlock(v1);
  return swift_endAccess();
}

uint64_t sub_24D905B34()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));
  return v0;
}

uint64_t sub_24D905BA4()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 88));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Locked()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D905C68@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  v32 = a1;
  uint64_t v42 = *MEMORY[0x263EF8340];
  uint64_t v3 = sub_24DCC9078();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v26 - v8;
  bzero(&v37, 0x878uLL);
  v40 = v2;
  v41 = &v37;
  sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D906264);
  v31 = v7;
  id v10 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  v11 = v2;
  uint64_t v12 = sub_24DCC9068();
  os_log_type_t v13 = sub_24DCCA108();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v30 = v3;
    v14 = (uint8_t *)swift_slowAlloc();
    v27 = (void *)swift_slowAlloc();
    v28 = v14;
    *(_DWORD *)v14 = 138412290;
    v26[1] = v14 + 4;
    *(void *)&long long v33 = v11;
    unint64_t v15 = v11;
    uint64_t v29 = v4;
    uint64_t v16 = v15;
    uint64_t v3 = v30;
    sub_24DCCA428();
    uint64_t v17 = v27;
    void *v27 = v11;

    os_log_type_t v18 = v13;
    v19 = v28;
    uint64_t v4 = v29;
    _os_log_impl(&dword_24D3D0000, v12, v18, "Retrieved statfs() for volume %@", v28, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v17, -1, -1);
    MEMORY[0x25332B030](v19, -1, -1);
  }
  else
  {

    uint64_t v12 = v11;
  }

  uint64_t v20 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  long long v35 = 0u;
  long long v36 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  MEMORY[0x270FA5388](v20);
  v26[-2] = v11;
  v26[-1] = &v33;
  uint64_t result = sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D906318);
  if (!is_mul_ok(v38, v37))
  {
    __break(1u);
LABEL_8:
    __break(1u);
  }
  if (!is_mul_ok(v39, v37)) {
    goto LABEL_8;
  }
  long long v23 = v33;
  uint64_t v24 = v34;
  unint64_t v25 = v39 * v37;
  uint64_t v22 = v32;
  void *v32 = v38 * v37;
  v22[1] = v25;
  *((_OWORD *)v22 + 1) = v23;
  v22[4] = v24;
  *((unsigned char *)v22 + 40) = 0;
  return result;
}

uint64_t sub_24D9061CC@<X0>(void *a1@<X0>, statfs *a2@<X1>, _DWORD *a3@<X8>)
{
  id v5 = objc_msgSend(a1, sel_root);
  sub_24DCC97E8();

  uint64_t v6 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  LODWORD(a2) = statfs((const char *)(v6 + 32), a2);
  uint64_t result = swift_release();
  *a3 = a2;
  return result;
}

uint64_t sub_24D906264@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D9061CC(*(void **)(v1 + 16), *(statfs **)(v1 + 24), a1);
}

uint64_t sub_24D906280@<X0>(void *a1@<X0>, _DWORD *a2@<X8>)
{
  id v3 = objc_msgSend(a1, sel_root);
  sub_24DCC97E8();

  sub_24DCC9898();
  swift_bridgeObjectRelease();
  int purgeable_stats = fpfs_get_purgeable_stats();
  uint64_t result = swift_release();
  *a2 = purgeable_stats;
  return result;
}

uint64_t sub_24D906318@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D906280(*(void **)(v1 + 16), a1);
}

ValueMetadata *type metadata accessor for FPDVolumeStats()
{
  return &type metadata for FPDVolumeStats;
}

uint64_t sub_24D906344()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D906388()
{
  return 60;
}

uint64_t sub_24D906508(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194160);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D907060();
  sub_24DCCB0D8();
  v8[15] = 0;
  sub_24DCC8D88();
  sub_24D907174((unint64_t *)&unk_26B192360);
  sub_24DCCACF8();
  if (!v1)
  {
    type metadata accessor for ChangeEnumeratorAnchor();
    v8[14] = 1;
    sub_24DCCACD8();
    v8[13] = 2;
    sub_24DCCACD8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24D9066D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v19 = a2;
  uint64_t v4 = sub_24DCC8D88();
  uint64_t v21 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  long long v23 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194158);
  uint64_t v20 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ChangeEnumeratorAnchor();
  MEMORY[0x270FA5388](v8);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D907060();
  sub_24DCCB0B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v11 = (uint64_t)v10;
  uint64_t v12 = v21;
  char v26 = 0;
  sub_24D907174(&qword_26B192378);
  uint64_t v13 = v22;
  sub_24DCCAB98();
  v14 = *(void (**)(uint64_t, char *, uint64_t))(v12 + 32);
  unint64_t v15 = v23;
  long long v23 = (char *)v4;
  v14(v11, v15, v4);
  char v25 = 1;
  *(void *)(v11 + *(int *)(v8 + 20)) = sub_24DCCAB88();
  char v24 = 2;
  uint64_t v16 = sub_24DCCAB88();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v13);
  *(void *)(v11 + *(int *)(v8 + 24)) = v16;
  sub_24D9070B4(v11, v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24D907118(v11);
}

uint64_t sub_24D906A38()
{
  unint64_t v1 = 0xD000000000000010;
  if (*v0 != 1) {
    unint64_t v1 = 0x49646574656C6564;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x444955556264;
  }
}

uint64_t sub_24D906AA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D9073C4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D906AC8(uint64_t a1)
{
  unint64_t v2 = sub_24D907060();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D906B04(uint64_t a1)
{
  unint64_t v2 = sub_24D907060();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D906B40@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D9066D8(a1, a2);
}

uint64_t sub_24D906B58(void *a1)
{
  return sub_24D906508(a1);
}

uint64_t type metadata accessor for ChangeEnumerator()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_24D906B8C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24DCC8D88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
  }
  return a1;
}

uint64_t sub_24D906C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_24D906CE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_24D906D6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_24D906DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  return a1;
}

uint64_t sub_24D906E74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D906E88);
}

uint64_t sub_24D906E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC8D88();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_24D906EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D906F08);
}

uint64_t sub_24D906F08(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC8D88();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for ChangeEnumeratorAnchor()
{
  uint64_t result = qword_26B1934A0;
  if (!qword_26B1934A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24D906FC4()
{
  uint64_t result = sub_24DCC8D88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_24D907060()
{
  unint64_t result = qword_26B193468;
  if (!qword_26B193468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193468);
  }
  return result;
}

uint64_t sub_24D9070B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ChangeEnumeratorAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D907118(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ChangeEnumeratorAnchor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D907174(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24DCC8D88();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ChangeEnumeratorAnchor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D907284);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChangeEnumeratorAnchor.CodingKeys()
{
  return &type metadata for ChangeEnumeratorAnchor.CodingKeys;
}

unint64_t sub_24D9072C0()
{
  unint64_t result = qword_26986FA80;
  if (!qword_26986FA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FA80);
  }
  return result;
}

unint64_t sub_24D907318()
{
  unint64_t result = qword_26B193478;
  if (!qword_26B193478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193478);
  }
  return result;
}

unint64_t sub_24D907370()
{
  unint64_t result = qword_26B193470;
  if (!qword_26B193470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193470);
  }
  return result;
}

uint64_t sub_24D9073C4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444955556264 && a2 == 0xE600000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x800000024DD0C360 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x49646574656C6564 && a2 == 0xEE006B6E61527344)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_24D907530()
{
  uint64_t v0 = swift_allocObject();
  sub_24D907F44();
  return v0;
}

uint64_t sub_24D907568(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 136))(a2);
}

uint64_t sub_24D9075B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 120))(a2);
}

uint64_t sub_24D9075F8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 128))(a2);
}

uint64_t sub_24D907640(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 160))(a2);
}

void sub_24D907688()
{
}

void sub_24D9076EC()
{
}

void sub_24D907750()
{
}

void sub_24D9077B4()
{
}

void sub_24D907818()
{
}

void sub_24D90787C()
{
}

void sub_24D9078E0()
{
}

void sub_24D907944()
{
}

uint64_t sub_24D9079A8()
{
  type metadata accessor for FilteringJobResult();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  swift_retain();
  return v1;
}

uint64_t type metadata accessor for JobResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D907A58()
{
  uint64_t v1 = type metadata accessor for FilteringJobResult();
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(**(void **)(v0 + 16) + 184))(v1, v2, v3, v4);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v5;
  return result;
}

uint64_t sub_24D907B04()
{
  return swift_retain();
}

uint64_t type metadata accessor for FilteringJobResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D907B28()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D907B70()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 128))();
}

uint64_t sub_24D907BB4()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 120))();
}

uint64_t sub_24D907BF8()
{
  uint64_t v2 = *(void *)(*v0 + 200);
  uint64_t v3 = *(void *)(*v0 + 224);
  uint64_t v4 = *(void *)(*v0 + 216);
  uint64_t v12 = *(void *)(*v0 + 208);
  uint64_t v1 = v12;
  uint64_t v13 = v2;
  uint64_t v14 = v3;
  uint64_t v15 = v4;
  uint64_t v5 = type metadata accessor for ReconciliationMutation();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - v7;
  uint64_t v9 = v0[2];
  uint64_t v12 = v2;
  uint64_t v13 = v1;
  uint64_t v14 = v4;
  uint64_t v15 = v3;
  id v10 = (void *)type metadata accessor for ReconciliationMutation();
  sub_24D4E26F8(v10, (uint64_t)v8);
  (*(void (**)(char *))(*(void *)v9 + 136))(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24D907D7C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 152))();
}

uint64_t sub_24D907DC0()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 144))();
}

uint64_t sub_24D907E04()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 160))();
}

uint64_t sub_24D907E48()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 168))();
}

uint64_t sub_24D907E8C()
{
  return swift_retain();
}

uint64_t sub_24D907E94()
{
  return swift_release();
}

uint64_t sub_24D907E9C()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SwappedJobResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D907EEC()
{
  return swift_initClassMetadata2();
}

void *sub_24D907F44()
{
  v0[6] = 0;
  v0[2] = MEMORY[0x263F8EE78];
  swift_retain();
  type metadata accessor for Mutation();
  v0[3] = sub_24DCC9C98();
  type metadata accessor for ReconciliationMutation();
  v0[4] = sub_24DCC9C98();
  type metadata accessor for FSOrFPJob();
  uint64_t v1 = sub_24DCC9C98();
  uint64_t v2 = (void *)v0[6];
  v0[5] = v1;
  v0[6] = 0;
  swift_release();

  return v0;
}

uint64_t sub_24D908064(uint64_t a1)
{
  long long v3 = *(_OWORD *)(*(void *)v1 + 216);
  v9[0] = *(_OWORD *)(*(void *)v1 + 200);
  v9[1] = v3;
  v9[2] = v9[0];
  v9[3] = v3;
  uint64_t v4 = type metadata accessor for Mutation();
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v9 - v5;
  uint64_t v7 = type metadata accessor for SnapshotMutation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a1, v7);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_24DCC9D48();
  sub_24DCC9D08();
  return swift_endAccess();
}

uint64_t sub_24D9081AC(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 224);
  uint64_t v12 = *(void *)(v3 + 200);
  long long v11 = *(_OWORD *)(v4 + 208);
  long long v13 = v11;
  uint64_t v14 = v5;
  uint64_t v6 = type metadata accessor for Mutation();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - v7;
  uint64_t v9 = type metadata accessor for SnapshotMutation();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  swift_storeEnumTagMultiPayload();
  swift_beginAccess();
  sub_24DCC9D48();
  sub_24DCC9D08();
  return swift_endAccess();
}

uint64_t sub_24D90832C(uint64_t a1)
{
  long long v3 = *(_OWORD *)(*(void *)v1 + 216);
  v8[0] = *(_OWORD *)(*(void *)v1 + 200);
  v8[1] = v3;
  uint64_t v4 = type metadata accessor for ReconciliationMutation();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v8 - v5, a1, v4);
  swift_beginAccess();
  sub_24DCC9D48();
  sub_24DCC9D08();
  return swift_endAccess();
}

uint64_t sub_24D90845C()
{
  return swift_endAccess();
}

uint64_t sub_24D908514()
{
  return swift_endAccess();
}

void sub_24D9085D0(void *a1)
{
  id v6 = *(id *)(v1 + 48);
  id v3 = a1;
  if (!a1)
  {
    id v4 = v6;
    id v3 = v6;
  }
  *(void *)(v1 + 48) = v3;
  id v5 = a1;
}

uint64_t sub_24D908630(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + 16);
  swift_beginAccess();
  id v6 = *(void **)(v2 + 16);
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(v2 + 16) = v6;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v6 = sub_24DA13838(0, v6[2] + 1, 1, v6);
    *id v5 = v6;
  }
  unint64_t v9 = v6[2];
  unint64_t v8 = v6[3];
  if (v9 >= v8 >> 1)
  {
    id v6 = sub_24DA13838((void *)(v8 > 1), v9 + 1, 1, v6);
    *id v5 = v6;
  }
  v6[2] = v9 + 1;
  id v10 = &v6[2 * v9];
  v10[4] = a1;
  v10[5] = a2;
  return swift_endAccess();
}

uint64_t sub_24D90870C()
{
  type metadata accessor for SwappedJobResult();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  swift_retain();
  return v1;
}

void sub_24D908794()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + 48);
}

uint64_t sub_24D9087DC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_24D90881C()
{
  sub_24D9087DC();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ConcreteJobResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D908870()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D9088E0(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x800000024DD0C550 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024DD0C570 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024DD0C590 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000024DD0C5B0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6F697469736F70 && a2 == 0xEE0074657366664FLL || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x74696D696CLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_24D908B5C(uint64_t result)
{
  return result;
}

uint64_t sub_24D908B68(uint64_t result)
{
  return result;
}

unint64_t sub_24D908B70(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6E6F697469736F70;
      break;
    case 5:
      unint64_t result = 0x74696D696CLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D908C34()
{
  swift_getWitnessTable();

  return sub_24DCCAE98();
}

uint64_t sub_24D908CA8(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_24D908D14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24D908D84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D6D8];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

unint64_t sub_24D908DF4@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24D7846A4(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_24D908E24@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D908B68(*v1);
  *a1 = result;
  return result;
}

unint64_t sub_24D908E54()
{
  return sub_24D908B70(*v0);
}

uint64_t sub_24D908E60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D9088E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D908E8C()
{
  return sub_24D908B5C(*v0);
}

unint64_t sub_24D908EB0@<X0>(unint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_24D7846A4(a1);
  *a2 = result;
  return result;
}

uint64_t sub_24D908EDC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D908F30(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D908F84()
{
  return 980576612;
}

uint64_t sub_24D90915C(uint64_t a1, int a2, uint64_t a3, void *a4)
{
  *(unsigned char *)(v4 + 48) = 0;
  *(void *)(v4 + 64) = 0;
  if (a3)
  {
    swift_beginAccess();
    uint64_t v9 = *(void *)(a3 + 24);
    int v10 = *(_DWORD *)(a3 + 40);
    char v11 = *(unsigned char *)(a3 + 44);
    uint64_t v12 = *(void *)(a3 + 32);
    *(_DWORD *)(v4 + 16) = *(_DWORD *)(a3 + 16);
    *(void *)(v4 + 24) = v9;
    *(void *)(v4 + 32) = v12;
    *(_DWORD *)(v4 + 40) = v10;
    *(unsigned char *)(v4 + 44) = v11;
    swift_beginAccess();
    *(unsigned char *)(v4 + 44) = 1;
  }
  else
  {
    *(_DWORD *)(v4 + 16) = 0;
    *(void *)(v4 + 24) = 0;
    *(void *)(v4 + 32) = 0;
    *(void *)(v4 + 37) = 0;
  }
  int v13 = *(_DWORD *)(a1 + 16);
  swift_beginAccess();
  *(_DWORD *)(v4 + 16) = v13;
  *(_DWORD *)(v4 + 56) = a2;
  swift_retain();
  int v14 = fpfs_openfdbyhandle();
  if (v14 < 0)
  {
    int v18 = MEMORY[0x253327160]();
    sub_24D90CF14(v18, 0, 0, 0xAu);
    swift_willThrow();
    swift_release();

    swift_release();
    uint64_t v19 = *(void **)(v4 + 64);
    swift_release();

    __swift_instantiateConcreteTypeFromMangledName(&qword_26986FA98);
    swift_deallocPartialClassInstance();
  }
  else
  {
    int v15 = v14;
    swift_release();
    swift_beginAccess();
    *(_DWORD *)(v4 + 52) = v15;
    int v16 = *(_DWORD *)(a1 + 64);
    swift_release();
    *(_DWORD *)(v4 + 60) = v16;
    uint64_t v17 = *(void **)(v4 + 64);
    *(void *)(v4 + 64) = a4;
    swift_release();
  }
  return v4;
}

uint64_t sub_24D90935C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24D9096F4(a1);
  return v2;
}

uint64_t sub_24D9093AC(void *a1, uint64_t *a2, uint64_t *a3, unint64_t *a4, uint64_t *a5)
{
  v28 = a5;
  uint64_t v9 = v5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v26 = *(void *)(v11 - 8);
  uint64_t v27 = v11;
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v9 + 48) = 0;
  *(void *)(v9 + 64) = 0;
  uint64_t v14 = a1[3];
  uint64_t v30 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  __swift_instantiateConcreteTypeFromMangledName(a3);
  sub_24D90BBF4(a4, a3);
  swift_retain();
  sub_24DCCB0B8();
  if (v6)
  {
    swift_release();
    int v18 = v28;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);

    __swift_instantiateConcreteTypeFromMangledName(v18);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v16 = v26;
    uint64_t v15 = v27;
    v29[0] = 0;
    uint64_t v17 = sub_24DCCABE8();
    v29[0] = 1;
    int v20 = sub_24DCCABD8();
    v29[0] = 2;
    int v21 = sub_24DCCABA8();
    v29[0] = 3;
    int v22 = sub_24DCCABA8();
    *(_DWORD *)(v9 + 16) = 0;
    *(void *)(v9 + 24) = v17;
    *(_DWORD *)(v9 + 32) = v20;
    *(_DWORD *)(v9 + 36) = v21;
    *(_DWORD *)(v9 + 40) = v22;
    *(unsigned char *)(v9 + 44) = 1;
    v29[0] = 5;
    uint64_t v23 = sub_24DCCAB18();
    if ((v23 & 0x100000000) != 0) {
      int v24 = 0x7FFFFFFF;
    }
    else {
      int v24 = v23;
    }
    *(_DWORD *)(v9 + 56) = v24;
    swift_beginAccess();
    *(_DWORD *)(v9 + 52) = -1;
    *(_DWORD *)(v9 + 60) = 0;
    swift_release();
    sub_24DCCAAB8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v13, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  }
  return v9;
}

uint64_t sub_24D9096F4(uint64_t a1)
{
  v19[1] = *(void *)(*(void *)v1 + 112);
  type metadata accessor for FSDirectoryLister.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_24DCCAC08();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  *(unsigned char *)(v1 + 48) = 0;
  *(void *)(v1 + 64) = 0;
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v21 = a1;
  uint64_t v7 = (void *)a1;
  uint64_t v9 = (char *)v19 - v8;
  __swift_project_boxed_opaque_existential_1(v7, v6);
  swift_retain();
  sub_24DCCB0B8();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v21);

    type metadata accessor for FSDirectoryLister();
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v10 = v5;
    v20[0] = 0;
    uint64_t v11 = v4;
    uint64_t v12 = sub_24DCCABE8();
    v20[0] = 1;
    int v13 = sub_24DCCABD8();
    v20[0] = 2;
    int v14 = sub_24DCCABA8();
    v20[0] = 3;
    int v15 = sub_24DCCABA8();
    *(_DWORD *)(v1 + 16) = 0;
    *(void *)(v1 + 24) = v12;
    *(_DWORD *)(v1 + 32) = v13;
    *(_DWORD *)(v1 + 36) = v14;
    *(_DWORD *)(v1 + 40) = v15;
    *(unsigned char *)(v1 + 44) = 1;
    v20[0] = 5;
    uint64_t v16 = sub_24DCCAB18();
    if ((v16 & 0x100000000) != 0) {
      int v18 = 0x7FFFFFFF;
    }
    else {
      int v18 = v16;
    }
    *(_DWORD *)(v1 + 56) = v18;
    swift_beginAccess();
    *(_DWORD *)(v1 + 52) = -1;
    *(_DWORD *)(v1 + 60) = 0;
    swift_release();
    sub_24DCCAAB8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v9, v11);
    __swift_destroy_boxed_opaque_existential_1(v21);
  }
  return v1;
}

uint64_t sub_24D909A58(void *a1)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194920);
  uint64_t v14 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  int v13 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FSDirectoryLister.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_24DCCAD58();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v11 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  swift_beginAccess();
  LOBYTE(v15[0]) = 0;
  uint64_t v7 = v16;
  sub_24DCCAD48();
  if (!v7)
  {
    uint64_t v9 = v13;
    uint64_t v8 = v14;
    LOBYTE(v15[0]) = 1;
    sub_24DCCAD38();
    LOBYTE(v15[0]) = 2;
    sub_24DCCAD08();
    LOBYTE(v15[0]) = 3;
    sub_24DCCAD08();
    LOBYTE(v15[0]) = 5;
    sub_24DCCAD08();
    sub_24DCCAC28();
    uint64_t v16 = v15[4];
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    sub_24D502B78();
    sub_24DCCB0D8();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v9, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void sub_24D909D7C()
{
}

void sub_24D909DD8()
{
  sub_24D40CB10(*(unsigned int *)(v0 + 52));
  uint64_t v1 = *(void **)(v0 + 64);
}

uint64_t sub_24D909E08()
{
  sub_24D40CB10(*(unsigned int *)(v0 + 52));

  return v0;
}

uint64_t sub_24D909E30()
{
  sub_24D40CB10(*(unsigned int *)(v0 + 52));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FSDirectoryLister()
{
  return __swift_instantiateGenericMetadata();
}

void *sub_24D909E88()
{
  if (MEMORY[0x263F8EEE0]) {
    return &unk_26FFC5CF8;
  }
  else {
    return (void *)(MEMORY[0x263F8EE60] + 8);
  }
}

uint64_t sub_24D909EB0()
{
  return sub_24D908F84();
}

void *sub_24D909ED4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  int v13 = v11;
  uint64_t v57 = a7;
  uint64_t v51 = a6;
  uint64_t v50 = a5;
  int v52 = a2;
  uint64_t v58 = a10;
  uint64_t v59 = a4;
  uint64_t v67 = *MEMORY[0x263EF8340];
  uint64_t v53 = sub_24DCC8A58();
  uint64_t v56 = *(void *)(v53 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v53);
  uint64_t v19 = &v43[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v17);
  v60 = &v43[-v20];
  uint64_t v61 = a1;
  v13[12] = 0;
  v13[13] = 0;
  uint64_t v64 = a1;
  long long v65 = 0u;
  long long v66 = 0u;
  int v21 = *(_DWORD *)(a3 + 16);
  long long v62 = 0u;
  long long v63 = 0u;
  swift_retain();
  uint64_t v22 = fpfs_openfdbyhandle();
  if ((v22 & 0x80000000) != 0)
  {
    int v24 = MEMORY[0x253327160]();
    uint64_t v25 = (void *)sub_24D90CF14(v24, 0, 0, 0xAu);
    swift_willThrow();
    id v26 = v25;
    LODWORD(v61) = sub_24DCC8348();
    sub_24D4C5C60();
    sub_24DCC86A8();

    swift_release();
    swift_release();

    goto LABEL_5;
  }
  uint64_t v23 = v22;
  v54 = a11;
  uint64_t v55 = a8;
  sub_24D7C33B4(v22, &v64, v21, 1, (uint64_t)v60);
  if (v12)
  {
    sub_24D40CB10(v23);
    swift_release();
    swift_release();

LABEL_5:
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for VFSDirectoryLister(0);
    swift_deallocPartialClassInstance();
    return v13;
  }
  uint64_t v49 = a9;
  sub_24D40CB10(v23);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F10);
  uint64_t v28 = swift_allocObject();
  long long v46 = xmmword_24DCCECE0;
  uint64_t v47 = v28;
  *(_OWORD *)(v28 + 16) = xmmword_24DCCECE0;
  *(void *)(v28 + 32) = a1;
  int v48 = *(_DWORD *)(a3 + 16);
  uint64_t v29 = *(const void **)(a3 + 56);
  uint64_t v45 = *(unsigned int *)(a3 + 64);
  int v44 = *(unsigned __int8 *)(a3 + 68);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E90);
  uint64_t v30 = v56;
  unint64_t v31 = (*(unsigned __int8 *)(v56 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v56 + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v46;
  long long v33 = *(void (**)(unint64_t, unsigned char *, uint64_t))(v30 + 16);
  *(void *)&long long v46 = v33;
  uint64_t v34 = v53;
  v33(v32 + v31, v60, v53);
  v33((unint64_t)v19, (unsigned char *)(a3 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL), v34);
  type metadata accessor for VFSLookupScope();
  swift_allocObject();
  _Block_copy(v29);
  uint64_t v35 = 0x100000000;
  if (!v44) {
    uint64_t v35 = 0;
  }
  uint64_t v36 = sub_24DA70E38(v47, v48, 0, 1, (uint64_t)sub_24DA6F80C, 0, (uint64_t)v29, v35 | v45, v32, v19);
  uint64_t v37 = v59;
  v13[9] = a3;
  v13[10] = v37;
  uint64_t v38 = v51;
  v13[11] = v50;
  v13[12] = v38;
  v13[13] = v57;
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v39 = (char *)v13 + qword_26B1A23F0;
  ((void (*)(char *, unsigned char *, uint64_t))v46)((char *)v13 + qword_26B1A23F0, v60, v34);
  uint64_t v40 = v56;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v39, 0, 1, v34);
  v41 = (void *)((char *)v13 + qword_26B1A26B8);
  uint64_t v42 = v58;
  void *v41 = v49;
  v41[1] = v42;
  swift_release();
  int v13 = (void *)sub_24D90915C(v36, v52, v55, v54);
  swift_release();
  swift_unknownObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v60, v34);
  return v13;
}

uint64_t sub_24D90A428(uint64_t a1)
{
  return sub_24D90A474(a1);
}

uint64_t sub_24D90A474(uint64_t a1)
{
  uint64_t v3 = sub_24DCC8A58();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1[12] = 0;
  v1[13] = 0;
  aBlock[4] = sub_24DA6F80C;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D3E122C;
  aBlock[3] = &block_descriptor_52_0;
  uint64_t v7 = _Block_copy(aBlock);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E90);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_24DCCECE0;
  swift_retain();
  _Block_copy(v7);
  sub_24DCC88F8();
  sub_24DCC88F8();
  type metadata accessor for VFSLookupScope();
  swift_allocObject();
  uint64_t v9 = sub_24DA70E38((uint64_t)&unk_26FFA3750, 0, 0, 1, (uint64_t)sub_24DA6F80C, 0, (uint64_t)v7, 0x100000000, v8, v6);
  v1[10] = 0;
  v1[11] = 0;
  v1[9] = v9;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))((uint64_t)v1 + qword_26B1A23F0, 1, 1, v3);
  uint64_t v10 = (void *)((char *)v1 + qword_26B1A26B8);
  *uint64_t v10 = 0;
  v10[1] = 0;
  swift_release();
  sub_24D433858(a1, (uint64_t)aBlock);
  uint64_t v11 = sub_24D9093AC(aBlock, &qword_26986FAC0, &qword_26986FAC8, qword_26986FAD0, &qword_26986FA98);
  __swift_destroy_boxed_opaque_existential_1(a1);
  _Block_release(v7);
  return v11;
}

uint64_t sub_24D90A714@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = *MEMORY[0x263EF8340];
  if (!*(void *)(a1 + 24)) {
    goto LABEL_10;
  }
  sub_24DCC9988();
  swift_beginAccess();
  sub_24DCC9898();
  unsigned int v5 = fpfs_lp_openat();
  uint64_t v6 = swift_release();
  if ((v5 & 0x80000000) != 0)
  {
    int v12 = MEMORY[0x253327160](v6);
    int v13 = (void *)sub_24D90CF14(v12, 1, 0, 0xAu);
    swift_willThrow();
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (!sub_24D90BAD4((uint64_t)v13, (_DWORD *)a1))
    {
      swift_willThrow();
      uint64_t v11 = 0xFFFFFFFFLL;
      return sub_24D40CB10(v11);
    }
    uint64_t v14 = self;
    if ((*(_DWORD *)(a1 + 208) & 0x80000000) == 0)
    {
      objc_msgSend(v14, sel_fp_errorForDataProtectionClass_);
      swift_willThrow();

      uint64_t v11 = 0xFFFFFFFFLL;
      return sub_24D40CB10(v11);
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  swift_endAccess();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_24D40CB10(0xFFFFFFFFLL);
  unsigned int v17 = v5;
  uint64_t v8 = *(const void **)(*(void *)(v2 + 72) + 56);
  MEMORY[0x270FA5388](v7);
  v16[2] = v2;
  v16[3] = &v17;
  uint64_t v18 = v8;
  int v19 = v9;
  char v20 = v10;
  _Block_copy(v8);
  sub_24D90B4E8(a1, (uint64_t)sub_24D90BAB8, (uint64_t)v16, a2);
  _Block_release(v8);
  uint64_t v11 = v17;
  return sub_24D40CB10(v11);
}

uint64_t sub_24D90A944@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, int *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v58 = a5;
  unint64_t v62 = a3;
  uint64_t v63 = a2;
  uint64_t v64 = a1;
  uint64_t v59 = a6;
  uint64_t v7 = sub_24DCC9078();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  v60 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  v54 = (char *)&v52 - v10;
  uint64_t v11 = sub_24DCC8408();
  uint64_t v61 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  int v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24DCC8A58();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v52 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v52 - v22;
  uint64_t v24 = a4;
  sub_24D415FD0(a4 + qword_26B1A23F0, (uint64_t)v16, (uint64_t *)&unk_26B199050);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_24D415F74((uint64_t)v16, (uint64_t *)&unk_26B199050);
    LODWORD(v66) = 5;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D5EFB20();
    sub_24DCC8808();
    sub_24DCC83E8();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v13, v11);
    return swift_willThrow();
  }
  id v26 = v60;
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v23, v16, v17);
  unint64_t v27 = v62;
  sub_24DCC8988();
  if (fpfs_is_busy_date())
  {
    uint64_t v53 = v23;
    uint64_t v28 = (void *)sub_24DCC8948();
    uint64_t v29 = *v58;
    uint64_t v30 = *(void *)(v24 + qword_26B1A26B8 + 8);
    int v52 = v21;
    if (v30) {
      unint64_t v31 = (void *)sub_24DCC97B8();
    }
    else {
      unint64_t v31 = 0;
    }
    unsigned int v35 = objc_msgSend(v28, sel_fp_deleteStaleBusyFileWithFileDescriptor_coordinatorPurposeIdentifier_, v29, v31, v52);

    id v36 = (id)fpfs_current_or_default_log();
    if (v35)
    {
      uint64_t v37 = v54;
      sub_24DCC9088();
      swift_bridgeObjectRetain_n();
      uint64_t v38 = sub_24DCC9068();
      os_log_type_t v39 = sub_24DCCA118();
      BOOL v40 = os_log_type_enabled(v38, v39);
      v41 = v53;
      if (v40)
      {
        uint64_t v64 = v17;
        uint64_t v61 = v18;
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v66 = v43;
        *(_DWORD *)uint64_t v42 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v65 = sub_24D418FB4(v63, v27, &v66);
        sub_24DCCA428();
        swift_bridgeObjectRelease_n();
        int v44 = "🏗 Removed stale busy file %s";
LABEL_14:
        _os_log_impl(&dword_24D3D0000, v38, v39, v44, v42, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v43, -1, -1);
        MEMORY[0x25332B030](v42, -1, -1);

        (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v56);
        long long v46 = *(void (**)(char *, uint64_t))(v61 + 8);
        uint64_t v47 = v64;
        v46(v52, v64);
        v46(v53, v47);
LABEL_16:
        uint64_t v49 = type metadata accessor for VFSItem(0);
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v59, 1, 1, v49);
      }
    }
    else
    {
      sub_24DCC9088();
      uint64_t v37 = v26;
      swift_bridgeObjectRetain_n();
      uint64_t v38 = sub_24DCC9068();
      os_log_type_t v39 = sub_24DCCA118();
      BOOL v45 = os_log_type_enabled(v38, v39);
      v41 = v53;
      if (v45)
      {
        uint64_t v64 = v17;
        uint64_t v61 = v18;
        uint64_t v42 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v66 = v43;
        *(_DWORD *)uint64_t v42 = 136315138;
        swift_bridgeObjectRetain();
        uint64_t v65 = sub_24D418FB4(v63, v27, &v66);
        sub_24DCCA428();
        swift_bridgeObjectRelease_n();
        int v44 = "🏗 Ignoring the busy file %s from enumeration";
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease_n();

    (*(void (**)(char *, uint64_t))(v55 + 8))(v37, v56);
    int v48 = *(void (**)(char *, uint64_t))(v18 + 8);
    v48(v52, v17);
    v48(v41, v17);
    goto LABEL_16;
  }
  type metadata accessor for VFSFileTree(0);
  uint64_t v32 = v59;
  uint64_t v33 = v57;
  sub_24D41333C(*v58, v64, 2, (uint64_t)v21, *(void *)(v24 + 72), v59, 0);
  if (v33)
  {
    uint64_t v34 = *(void (**)(char *, uint64_t))(v18 + 8);
    v34(v21, v17);
    return ((uint64_t (*)(char *, uint64_t))v34)(v23, v17);
  }
  else
  {
    uint64_t v50 = *(void (**)(char *, uint64_t))(v18 + 8);
    v50(v21, v17);
    v50(v23, v17);
    uint64_t v51 = type metadata accessor for VFSItem(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v32, 0, 1, v51);
  }
}

uint64_t sub_24D90B0D4()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D415F74(v0 + qword_26B1A23F0, (uint64_t *)&unk_26B199050);

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D90B138()
{
  sub_24D40CB10(*(unsigned int *)(v0 + 52));

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D415F74(v0 + qword_26B1A23F0, (uint64_t *)&unk_26B199050);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for VFSDirectoryLister(uint64_t a1)
{
  return sub_24D3FC810(a1, qword_26B1997B8);
}

void sub_24D90B200()
{
  sub_24D4FF82C();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

uint64_t sub_24D90B2AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (const char *)fpfs_fileattrs_fullpath();
  if (v2 && (v3 = v2, int64_t v4 = strlen(v2), v4 > 0))
  {
    int64_t v5 = v4;
    id v6 = objc_msgSend(self, sel_defaultManager);
    id v7 = objc_msgSend(v6, sel_stringWithFileSystemRepresentation_length_, v3, v5);

    sub_24DCC97E8();
    sub_24DCC88F8();
    uint64_t v8 = sub_24DCC8A58();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 0, 1, v8);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = sub_24DCC8A58();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a1, 1, 1, v10);
  }
}

uint64_t sub_24D90B3F8(uint64_t a1)
{
  swift_allocObject();
  sub_24D433858(a1, (uint64_t)v4);
  uint64_t v2 = sub_24D9093AC(v4, &qword_26986FAA0, &qword_26986FAA8, &qword_26986FAB0, &qword_26986FAB8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t type metadata accessor for URLDirectoryLister(uint64_t a1)
{
  return sub_24D3FC810(a1, (uint64_t *)&unk_26986FA88);
}

uint64_t sub_24D90B4B0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D90B4E8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v23 = a4;
  aBlock[7] = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194240);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void *)((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (void *)((char *)aBlock - v11);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (void *)((char *)aBlock - v13);
  sub_24D40CFDC();
  uint64_t v15 = swift_allocError();
  *(_OWORD *)uint64_t v16 = xmmword_24DCDEB60;
  *(unsigned char *)(v16 + 16) = 10;
  uint64_t *v14 = v15;
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v14;
  v17[3] = a2;
  v17[4] = a3;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D90BB70;
  *(void *)(v18 + 24) = v17;
  aBlock[4] = sub_24D3E1450;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D3E1424;
  aBlock[3] = &block_descriptor_18;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  int additional_attrs = fpfs_load_additional_attrs();
  _Block_release(v19);
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v19)
  {
    __break(1u);
  }
  else
  {
    if (additional_attrs < 0)
    {
      int v22 = MEMORY[0x253327160](result);
      *uint64_t v12 = sub_24D90CF14(v22, 8, 0, 0xAu);
      swift_storeEnumTagMultiPayload();
      sub_24D90BB8C((uint64_t)v12, (uint64_t)v14);
    }
    sub_24D415FD0((uint64_t)v14, (uint64_t)v9, (uint64_t *)&unk_26B194240);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      aBlock[0] = *v9;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
      swift_willThrowTypedImpl();
      sub_24D415F74((uint64_t)v14, (uint64_t *)&unk_26B194240);
      return swift_release();
    }
    else
    {
      sub_24D3F0BA0((uint64_t)v9, v23, (uint64_t *)&unk_26B199BC0);
      sub_24D415F74((uint64_t)v14, (uint64_t *)&unk_26B194240);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_24D90B808(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194240);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v34 - v11;
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)v34 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (void *)((char *)v34 - v16);
  uint64_t v18 = *(const char **)(a1 + 24);
  if (!v18)
  {
    sub_24D40CFDC();
    uint64_t v26 = swift_allocError();
    *(_OWORD *)uint64_t v27 = xmmword_24DCDEB70;
    *(unsigned char *)(v27 + 16) = 10;
    *uint64_t v17 = v26;
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = (uint64_t)v17;
    uint64_t v29 = a2;
LABEL_6:
    sub_24D90BB8C(v28, v29);
    return 0;
  }
  v34[0] = a2;
  int64_t v19 = strlen(v18);
  if (v19 <= 0)
  {
    sub_24D40CFDC();
    uint64_t v30 = swift_allocError();
    *(_OWORD *)uint64_t v31 = xmmword_24DCDEB70;
    *(unsigned char *)(v31 + 16) = 10;
    *uint64_t v17 = v30;
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = (uint64_t)v17;
    uint64_t v29 = v34[0];
    goto LABEL_6;
  }
  int64_t v20 = v19;
  id v21 = objc_msgSend(self, sel_defaultManager);
  id v22 = objc_msgSend(v21, sel_stringWithFileSystemRepresentation_length_, v18, v20);

  uint64_t v23 = sub_24DCC97E8();
  uint64_t v25 = v24;

  a3(a1, v23, v25);
  swift_storeEnumTagMultiPayload();
  sub_24D3F0BA0((uint64_t)v9, (uint64_t)v12, (uint64_t *)&unk_26B194240);
  uint64_t v32 = v34[0];
  sub_24D3F0BA0((uint64_t)v12, (uint64_t)v15, (uint64_t *)&unk_26B194240);
  sub_24D90BB8C((uint64_t)v15, v32);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D90BAB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_24D90A944(a1, a2, a3, *(void *)(v4 + 16), *(int **)(v4 + 24), a4);
}

BOOL sub_24D90BAD4(uint64_t a1, _DWORD *a2)
{
  sub_24DCC82F8();
  sub_24D4C5C60();
  if ((sub_24DCC86A8() & 1) == 0 || a2[10] != 1 || (a2[52] - 1) > 1) {
    return 0;
  }
  int v3 = a2[53];
  return v3 == geteuid();
}

uint64_t sub_24D90BB60()
{
  return swift_deallocObject();
}

uint64_t sub_24D90BB70(uint64_t a1)
{
  return sub_24D90B808(a1, *(void *)(v1 + 16), *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 24));
}

uint64_t sub_24D90BB7C()
{
  return swift_deallocObject();
}

uint64_t sub_24D90BB8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194240);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D90BBF4(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for FSDirectoryLister.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D90BC5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

unsigned char *sub_24D90BC64(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D90BD30);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

uint64_t sub_24D90BD58()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D90BD74()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D90BD90()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D90BDB8(unsigned int *a1)
{
  uint64_t result = *a1;
  if ((result & 0x80000000) == 0) {
    return close(result);
  }
  return result;
}

uint64_t sub_24D90BDC8(uint64_t a1, int a2)
{
  sub_24D414684((uint64_t)v7);
  sub_24D5013B0((uint64_t)v7, (uint64_t)v6);
  v5[4] = a2;
  return sub_24DCA1E3C((uint64_t)v6, (unint64_t)sub_24D90D174, (unint64_t)v5, v3);
}

uint64_t sub_24D90BE40(unsigned int a1)
{
  uint64_t result = fpfs_fset_acl();
  if ((result & 0x80000000) != 0)
  {
    int v3 = MEMORY[0x253327160]();
    sub_24D90CF14(v3, a1, 0, 2u);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24D90BE98(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a1 + 32))(a2) & 1;
}

uint64_t sub_24D90BEC8()
{
  if ((fpfs_track_document() & 0x80000000) != 0)
  {
    int v1 = MEMORY[0x253327160]();
    sub_24D90CF14(v1, 14, 0, 0xAu);
  }
  else
  {
    sub_24D40CFDC();
    swift_allocError();
    *(_OWORD *)uint64_t v0 = xmmword_24DCDEE50;
    *(unsigned char *)(v0 + 16) = 10;
  }
  return swift_willThrow();
}

uint64_t sub_24D90BF94(uint64_t a1)
{
  unint64_t v2 = sub_24D90C200();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24D90BFD0(uint64_t a1)
{
  unint64_t v2 = sub_24D90C200();

  return MEMORY[0x270EF2668](a1, v2);
}

unint64_t sub_24D90C00C()
{
  return 0xD000000000000016;
}

uint64_t sub_24D90C028()
{
  uint64_t result = 9;
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      uint64_t result = 10;
      break;
    case 2:
      uint64_t result = 11;
      break;
    case 3:
      uint64_t result = 16;
      break;
    case 4:
      uint64_t result = 20;
      break;
    case 5:
      uint64_t result = 22;
      break;
    case 6:
      uint64_t result = 24;
      break;
    case 7:
      uint64_t result = 26;
      break;
    case 8:
      uint64_t result = 32;
      break;
    case 9:
      uint64_t result = 34;
      break;
    case 0xA:
      uint64_t result = qword_24DCDEF18[*(void *)v0];
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24D90C0D8()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  *(void *)(inited + 32) = sub_24DCC97E8();
  *(void *)(inited + 40) = v5;
  sub_24D90CEDC(v1, v2, v3);
  uint64_t v6 = sub_24DCC9868();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v6;
  *(void *)(inited + 56) = v7;
  return sub_24D428D08(inited);
}

_DWORD *__swift_memcpy4_4(_DWORD *result, _DWORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

_DWORD *sub_24D90C198(_DWORD *result, _DWORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_24D90C1A4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 4)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_24D90C1C4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 4) = v3;
  return result;
}

void *sub_24D90C1EC()
{
  return &unk_26FFC5CF8;
}

unint64_t sub_24D90C200()
{
  unint64_t result = qword_26986FB58;
  if (!qword_26986FB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FB58);
  }
  return result;
}

uint64_t sub_24D90C254@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_openfdbyhandle();
  if ((result & 0x80000000) != 0)
  {
    int v8 = MEMORY[0x253327160](result, v3, v4, v5, v6, v7);
    sub_24D90CF14(v8, 0, 0, 0xAu);
    return swift_willThrow();
  }
  else
  {
    *a1 = result;
  }
  return result;
}

uint64_t sub_24D90C308(uint64_t result)
{
  if (result)
  {
    sub_24DCC9898();
    int v1 = fpfs_fsetxattr();
    uint64_t result = swift_release();
    if (v1 < 0)
    {
      int v2 = MEMORY[0x253327160](result);
      uint64_t v3 = (void *)sub_24DCC97B8();
      id v4 = objc_msgSend(v3, sel_fp_obfuscatedExtendedAttributeName);

      uint64_t v5 = sub_24DCC97E8();
      uint64_t v7 = v6;

      sub_24D90CF14(v2, v5, v7, 0);
      swift_bridgeObjectRelease();
      return swift_willThrow();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D90C410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, const void *a5)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a5;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_24D90D110;
  *(void *)(v8 + 24) = v7;
  v14[4] = sub_24D90D148;
  v14[5] = v8;
  v14[0] = MEMORY[0x263EF8330];
  v14[1] = 1107296256;
  v14[2] = sub_24D90BE98;
  v14[3] = &block_descriptor_19;
  uint64_t v9 = _Block_copy(v14);
  _Block_copy(a5);
  swift_retain();
  swift_release();
  int v10 = fpfs_fset_metadata();
  _Block_release(v9);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else if (v10 < 0)
  {
    int v13 = MEMORY[0x253327160](result);
    sub_24D90CF14(v13, a4, 0, 5u);
    swift_willThrow();
    return swift_release();
  }
  else
  {
    return swift_release();
  }
  return result;
}

uint64_t sub_24D90C5C8(uint64_t a1, uint64_t a2, uint64_t a3, const void *a4)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a4;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_24D90D38C;
  *(void *)(v6 + 24) = v5;
  v13[4] = sub_24D90D3CC;
  v13[5] = v6;
  v13[0] = MEMORY[0x263EF8330];
  v13[1] = 1107296256;
  v13[2] = sub_24D90BE98;
  v13[3] = &block_descriptor_28_0;
  uint64_t v7 = _Block_copy(v13);
  _Block_copy(a4);
  swift_retain();
  swift_release();
  int updated = fpfs_update_dataless_fault();
  _Block_release(v7);
  if ((updated & 0x80000000) == 0)
  {
    swift_release();
    int isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (!isEscapingClosureAtFileLocation) {
      return result;
    }
    __break(1u);
  }
  int v11 = MEMORY[0x253327160]();
  sub_24D90CF14(v11, 20, 0, 0xAu);
  swift_willThrow();
  swift_release();
  char v12 = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D90C7A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(void *)(a1 + 240) = qword_24DCDF008[a4];
  sub_24D90D1C0(a1 + 40);
  uint64_t result = fpfs_set_evictable();
  if ((result & 0x80000000) != 0)
  {
    int v5 = MEMORY[0x253327160]();
    sub_24D90CF14(v5, 21, 0, 0xAu);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24D90C828()
{
  uint64_t result = fpfs_set_dataless_cmpfs_attrs();
  if ((result & 0x80000000) != 0)
  {
    int v1 = MEMORY[0x253327160]();
    sub_24D90CF14(v1, 23, 0, 0xAu);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_24D90C880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const void *a6)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a6;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_24D90D38C;
  *(void *)(v8 + 24) = v7;
  aBlock[4] = sub_24D90D3CC;
  aBlock[5] = v8;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D90BE98;
  aBlock[3] = &block_descriptor_39;
  uint64_t v9 = _Block_copy(aBlock);
  _Block_copy(a6);
  swift_retain();
  swift_release();
  int v10 = fpfs_evict();
  _Block_release(v9);
  if ((v10 & 0x80000000) == 0)
  {
    swift_release();
    int isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (!isEscapingClosureAtFileLocation) {
      return result;
    }
    __break(1u);
  }
  int v13 = MEMORY[0x253327160]();
  sub_24D90CF14(v13, v16, v16 == 0, 8u);
  swift_willThrow();
  swift_release();
  char v14 = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v14) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D90CAAC@<X0>(const void *a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v16 = 0;
  long long v14 = 0u;
  long long v15 = 0u;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_24D90D38C;
  *(void *)(v5 + 24) = v4;
  aBlock[4] = sub_24D90D3CC;
  aBlock[5] = v5;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D90BE98;
  aBlock[3] = &block_descriptor_17_0;
  uint64_t v6 = _Block_copy(aBlock);
  _Block_copy(a1);
  swift_retain();
  swift_release();
  int v7 = fpfs_materialize();
  _Block_release(v6);
  if ((v7 & 0x80000000) == 0)
  {
    swift_release();
    uint64_t v9 = *((void *)&v15 + 1);
    *(_OWORD *)a2 = v14;
    *(void *)(a2 + 16) = v15;
    *(void *)(a2 + 24) = v9;
    *(void *)(a2 + 32) = v16;
    int isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    uint64_t result = swift_release();
    if (!isEscapingClosureAtFileLocation) {
      return result;
    }
    __break(1u);
  }
  int v11 = MEMORY[0x253327160](result);
  sub_24D90CF14(v11, 24, 0, 0xAu);
  swift_willThrow();
  swift_release();
  char v12 = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v12) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D90CD04(uint64_t a1, uint64_t a2)
{
  if (a1 != -2)
  {
    uint64_t v5 = fpfs_lp_openat();
    if ((v5 & 0x80000000) == 0)
    {
      uint64_t v6 = v5;
      if ((MEMORY[0x25332A950](0xFFFFFFFFLL) & 0x80000000) != 0)
      {
        close(v6);
        uint64_t v6 = 0xFFFFFFFFLL;
      }
      uint64_t v7 = MEMORY[0x25332A950](a1);
      if ((v7 & 0x80000000) != 0)
      {
        int v10 = MEMORY[0x253327160]();
        sub_24D90CF14(v10, 29, 0, 0xAu);
        swift_willThrow();
        if ((v6 & 0x80000000) != 0) {
          goto LABEL_13;
        }
      }
      else
      {
        MEMORY[0x270FA5388](v7);
        uint64_t v8 = sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D90CEF8);
        if (!v2)
        {
          a2 = v8;
          MEMORY[0x25332A950](v6);
          if ((v6 & 0x80000000) == 0) {
            close(v6);
          }
          goto LABEL_13;
        }
        MEMORY[0x25332A950](v6);
        if ((v6 & 0x80000000) != 0)
        {
LABEL_13:
          swift_bridgeObjectRelease();
          return a2;
        }
      }
      close(v6);
      goto LABEL_13;
    }
    int v9 = MEMORY[0x253327160]();
    sub_24D90CF14(v9, 1, 0, 0xAu);
    swift_willThrow();
    goto LABEL_13;
  }
  MEMORY[0x270FA5388](a1);
  a2 = sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D90D3B4);
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_24D90CEDC(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 <= 3u && a3 != 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_24D90CEF8@<X0>(int *a1@<X8>)
{
  return sub_24DCAE8C8(a1);
}

uint64_t sub_24D90CF14(int a1, uint64_t a2, uint64_t a3, unsigned __int8 a4)
{
  uint64_t v8 = sub_24DCC8408();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  int v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1 || (uint64_t v12 = sub_24DCC9098(), (v12 & 0x100000000) != 0))
  {
    sub_24D40CFDC();
    uint64_t v15 = swift_allocError();
    *(void *)uint64_t v16 = a2;
    *(void *)(v16 + 8) = a3;
    *(unsigned char *)(v16 + 16) = a4;
    sub_24D90CEDC(a2, a3, a4);
  }
  else
  {
    v18[23] = v12;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
    *(void *)(inited + 32) = sub_24DCC97E8();
    *(void *)(inited + 40) = v14;
    *(void *)(inited + 72) = &type metadata for VFSFileError;
    *(void *)(inited + 48) = a2;
    *(void *)(inited + 56) = a3;
    *(unsigned char *)(inited + 64) = a4;
    sub_24D90CEDC(a2, a3, a4);
    sub_24D428D08(inited);
    sub_24D5EFB20();
    sub_24DCC8808();
    uint64_t v15 = sub_24DCC83E8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return v15;
}

uint64_t sub_24D90D0D8()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_24D90D110()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_24D90D138()
{
  return swift_deallocObject();
}

uint64_t sub_24D90D148()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_24D90D174()
{
  return sub_24D90C828();
}

uint64_t sub_24D90D190()
{
  return swift_deallocObject();
}

uint64_t sub_24D90D1A0()
{
  return swift_deallocObject();
}

uint64_t sub_24D90D1B0()
{
  return swift_deallocObject();
}

uint64_t sub_24D90D1C0(uint64_t result)
{
  *(_DWORD *)(result + 4) |= 0x20u;
  return result;
}

uint64_t sub_24D90D1D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24D90CEDC(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for VFSFileError(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a2 + 16);
  sub_24D90CEDC(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  unsigned __int8 v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_24D3D33E8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for VFSFileError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_24D3D33E8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for VFSFileError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF6 && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 246);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0xA) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSFileError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF5)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 246;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF6) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_24D90D34C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 9u) {
    return *(unsigned __int8 *)(a1 + 16);
  }
  else {
    return (*(_DWORD *)a1 + 10);
  }
}

uint64_t sub_24D90D364(uint64_t result, unsigned int a2)
{
  if (a2 >= 0xA)
  {
    *(void *)uint64_t result = a2 - 10;
    *(void *)(result + 8) = 0;
    LOBYTE(a2) = 10;
  }
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for VFSFileError()
{
  return &type metadata for VFSFileError;
}

uint64_t sub_24D90D3B4@<X0>(int *a1@<X8>)
{
  return sub_24D90CEF8(a1);
}

char *sub_24D90D3D0(char *a1, char **a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    unsigned __int8 v8 = *a2;
    *(void *)a1 = *a2;
    a1 = &v8[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v7 = sub_24DCC8D88();
        (*(void (**)(char *, char **, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        uint64_t v10 = sub_24DCC8D88();
        uint64_t v11 = *(void *)(v10 - 8);
        if ((*(unsigned int (**)(char **, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
        {
          uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
          memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char **, uint64_t))(v11 + 16))(a1, a2, v10);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
        }
        swift_storeEnumTagMultiPayload();
        break;
      case 4u:
        int v13 = *a2;
        uint64_t v14 = a2[1];
        *(void *)a1 = v13;
        *((void *)a1 + 1) = v14;
        uint64_t v15 = v13;
        uint64_t v16 = v14;
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        uint64_t v17 = *a2;
        *(void *)a1 = *a2;
        uint64_t v18 = v17;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

void sub_24D90D648(uint64_t a1)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v2 = sub_24DCC8D88();
      unsigned int v3 = *(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);
      uint64_t v4 = v2;
      uint64_t v5 = a1;
      goto LABEL_11;
    case 2u:
      uint64_t v6 = sub_24DCC8D88();
      uint64_t v8 = *(void *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(a1, 1, v6))
      {
        unsigned int v3 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
        uint64_t v5 = a1;
        uint64_t v4 = v6;
LABEL_11:
        v3(v5, v4);
      }
      return;
    case 4u:

      id v7 = *(id *)(a1 + 8);
      goto LABEL_7;
    case 5u:
      id v7 = *(id *)a1;
LABEL_7:

      break;
    default:
      return;
  }
}

void **sub_24D90D7C4(void **a1, void **a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v6 = sub_24DCC8D88();
      (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_9;
    case 2u:
      uint64_t v7 = sub_24DCC8D88();
      uint64_t v8 = *(void *)(v7 - 8);
      if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
        memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(void **, void **, uint64_t))(v8 + 16))(a1, a2, v7);
        (*(void (**)(void **, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
      }
      goto LABEL_9;
    case 4u:
      uint64_t v10 = *a2;
      uint64_t v11 = a2[1];
      *a1 = v10;
      a1[1] = v11;
      id v12 = v10;
      id v13 = v11;
      goto LABEL_9;
    case 5u:
      uint64_t v14 = *a2;
      *a1 = *a2;
      id v15 = v14;
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void **sub_24D90D9EC(void **a1, void **a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24D90DC2C((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v6 = sub_24DCC8D88();
        (*(void (**)(void **, void **, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
        goto LABEL_10;
      case 2u:
        uint64_t v7 = sub_24DCC8D88();
        uint64_t v8 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
        {
          uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
          memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
        }
        else
        {
          (*(void (**)(void **, void **, uint64_t))(v8 + 16))(a1, a2, v7);
          (*(void (**)(void **, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
        }
        goto LABEL_10;
      case 4u:
        uint64_t v10 = *a2;
        *a1 = *a2;
        uint64_t v11 = a2[1];
        a1[1] = v11;
        id v12 = v10;
        id v13 = v11;
        goto LABEL_10;
      case 5u:
        uint64_t v14 = *a2;
        *a1 = *a2;
        id v15 = v14;
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24D90DC2C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SyncState();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for SyncState()
{
  uint64_t result = qword_26B199CF8;
  if (!qword_26B199CF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_24D90DCD4(void *a1, const void *a2, uint64_t a3)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v8 = sub_24DCC8D88();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    goto LABEL_8;
  }
  if (!EnumCaseMultiPayload)
  {
    uint64_t v7 = sub_24DCC8D88();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_8:
    swift_storeEnumTagMultiPayload();
    return a1;
  }
  memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  return a1;
}

void *sub_24D90DE88(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_24D90DC2C((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = sub_24DCC8D88();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(a1, a2, v8);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
      }
      goto LABEL_9;
    }
    if (!EnumCaseMultiPayload)
    {
      uint64_t v7 = sub_24DCC8D88();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
LABEL_9:
      swift_storeEnumTagMultiPayload();
      return a1;
    }
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void sub_24D90E050()
{
  sub_24DCC8D88();
  if (v0 <= 0x3F)
  {
    sub_24D88C5EC();
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

unsigned char *storeEnumTagSinglePayload for SchedulingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D90E218);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SchedulingState()
{
  return &type metadata for SchedulingState;
}

uint64_t sub_24D90E250(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(4, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 4)
    {
      sub_24D90DC2C((uint64_t)v7);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 151);
    }
    return *(void *)v7;
  }
  return result;
}

uint64_t sub_24D90E34C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (unsigned __int8 *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(7, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 7)
    {
      sub_24D90DC2C((uint64_t)v7);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 172);
    }
    return *v7;
  }
  return result;
}

uint64_t sub_24D90E448(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(8, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 8)
    {
      sub_24D90DC2C((uint64_t)v7);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 179);
    }
    return *(void *)v7;
  }
  return result;
}

uint64_t sub_24D90E544(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(6, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 6)
    {
      sub_24D90DC2C((uint64_t)v7);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 165);
    }
    return *(void *)v7;
  }
  return result;
}

uint64_t sub_24D90E640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t))(a2 + 16))(0, a1, a2);
  if (!v3)
  {
    if (swift_getEnumCaseMultiPayload())
    {
      sub_24D90DC2C((uint64_t)v9);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 119);
    }
    uint64_t v11 = sub_24DCC8D88();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a3, v9, v11);
  }
  return result;
}

uint64_t sub_24D90E778(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8D88();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, a1, v9);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *, uint64_t, uint64_t))(a3 + 8))(v8, a2, a3);
  return sub_24D90DC2C((uint64_t)v8);
}

uint64_t sub_24D90E884(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(1, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_24D90DC2C((uint64_t)v7);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 130);
    }
    return *(void *)v7;
  }
  return result;
}

unint64_t sub_24D90E980(uint64_t a1)
{
  unint64_t v1 = 0xD000000000000015;
  uint64_t v2 = 0x61705F7463697665;
  if (a1 != 1) {
    uint64_t v2 = 0;
  }
  if (a1 != 2) {
    unint64_t v1 = v2;
  }
  if (a1 == 4) {
    return 0xD00000000000001ALL;
  }
  else {
    return v1;
  }
}

unint64_t sub_24D90E9FC()
{
  return sub_24D90E980(*v0);
}

unint64_t sub_24D90EA04()
{
  return sub_24D97B4C8(*v0);
}

uint64_t sub_24D90EA0C()
{
  return sub_24DA60528(*v0);
}

unint64_t sub_24D90EA14(char a1)
{
  unint64_t result = 0x444955556264;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
    case 3:
      unint64_t result = 0x6D61657274537366;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x65566E69616D6F64;
      break;
    case 6:
      unint64_t result = 0x4665727574616566;
      break;
    case 7:
      unint64_t result = 0x696C756465686373;
      break;
    case 8:
      unint64_t result = 0x6E6547726F727265;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D90EB6C()
{
  if (*v0) {
    return 0xD000000000000019;
  }
  else {
    return 0x676E696E6E7572;
  }
}

unint64_t sub_24D90EBB0()
{
  unint64_t result = qword_26986FB60;
  if (!qword_26986FB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FB60);
  }
  return result;
}

uint64_t sub_24D90EC04(unsigned __int8 *a1, char *a2)
{
  return sub_24D5F01AC(*a1, *a2);
}

uint64_t sub_24D90EC10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D90FFA0();
  *a1 = result;
  return result;
}

unint64_t sub_24D90EC40@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24D90EA14(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_24D90EC6C()
{
  return sub_24DCCB048();
}

uint64_t sub_24D90ECB4()
{
  return sub_24DA6BBD4();
}

uint64_t sub_24D90ECBC()
{
  return sub_24DCCB048();
}

uint64_t sub_24D90ED00()
{
  uint64_t v1 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D90F50C(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 1;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      return result;
    case 2:
      sub_24D90DC2C((uint64_t)v3);
      uint64_t result = 2;
      break;
    case 3:
      uint64_t result = 3;
      break;
    case 4:
      sub_24D90DC2C((uint64_t)v3);
      uint64_t result = 4;
      break;
    case 5:
      sub_24D90DC2C((uint64_t)v3);
      uint64_t result = 5;
      break;
    case 6:
      uint64_t result = 6;
      break;
    case 7:
      uint64_t result = 7;
      break;
    case 8:
      uint64_t result = 8;
      break;
    default:
      sub_24D90DC2C((uint64_t)v3);
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_24D90EE38()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
  uint64_t v2 = MEMORY[0x270FA5388](v1 - 8);
  unint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)v25 - v5;
  uint64_t v7 = sub_24DCC8D88();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D90F50C(v0, (uint64_t)v13);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v15 = *(void *)v13;
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      uint64_t v26 = 114;
      unint64_t v27 = 0xE100000000000000;
      v25[1] = v15;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    case 2u:
      sub_24D90F878((uint64_t)v13, (uint64_t)v6);
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v28, "fsStreamUUID(");
      HIWORD(v28[1]) = -4864;
      sub_24D90F8E0((uint64_t)v6, (uint64_t)v4);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
      {
        sub_24D90F948((uint64_t)v4);
      }
      else
      {
        sub_24DCC8D18();
        (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
      }
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v14 = v28[0];
      sub_24D90F948((uint64_t)v6);
      return v14;
    case 3u:
      uint64_t v16 = *(void *)v13;
      char v17 = v13[8];
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v28[0] = 0xD000000000000010;
      v28[1] = 0x800000024DD0C650;
      if ((v17 & 1) == 0)
      {
        uint64_t v26 = v16;
        sub_24D822450();
        sub_24DCCA518();
      }
      goto LABEL_17;
    case 4u:
      int64_t v19 = *(void **)v13;
      uint64_t v18 = (void *)*((void *)v13 + 1);
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v28[0] = 0xD000000000000012;
      v28[1] = 0x800000024DD0C630;
      sub_24DA81C78((uint64_t)v19, (uint64_t)v18);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v14 = v28[0];

      return v14;
    case 5u:
      int64_t v20 = *(void **)v13;
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v28, "domainVersion(");
      HIBYTE(v28[1]) = -18;
      if (v20)
      {
        id v21 = objc_msgSend(v20, sel_description);
        sub_24DCC97E8();
      }
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();

      goto LABEL_18;
    case 6u:
      unint64_t v22 = *(void *)v13;
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      strcpy((char *)v28, "featureFlags(");
      HIWORD(v28[1]) = -4864;
      sub_24D97B4C8(v22);
      goto LABEL_17;
    case 7u:
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v28[0] = 0xD000000000000010;
      v28[1] = 0x800000024DD0C610;
      goto LABEL_17;
    case 8u:
      uint64_t v23 = *(void *)v13;
      v28[0] = 0;
      v28[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v28[0] = 0xD000000000000010;
      v28[1] = 0x800000024DD0C5F0;
      uint64_t v26 = v23;
      sub_24DCCAD78();
LABEL_17:
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
LABEL_18:
      uint64_t v14 = v28[0];
      break;
    default:
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
      strcpy((char *)v28, "dbUUID(");
      v28[1] = 0xE700000000000000;
      sub_24D90F9A8();
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v14 = v28[0];
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      break;
  }
  return v14;
}

uint64_t sub_24D90F50C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D90F570@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(2, a1, a2);
  if (!v3)
  {
    if (swift_getEnumCaseMultiPayload() != 2)
    {
      sub_24D90DC2C((uint64_t)v9);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 137);
    }
    return sub_24D90F878((uint64_t)v9, a3);
  }
  return result;
}

uint64_t sub_24D90F67C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(3, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 3)
    {
      sub_24D90DC2C((uint64_t)v7);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 144);
    }
    return *(void *)v7;
  }
  return result;
}

uint64_t sub_24D90F77C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a2 + 16))(5, a1, a2);
  if (!v2)
  {
    if (swift_getEnumCaseMultiPayload() != 5)
    {
      sub_24D90DC2C((uint64_t)v7);
      sub_24DA85640("/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/persistence/SyncStateStore.swift", 116, 2, 158);
    }
    return *(void *)v7;
  }
  return result;
}

uint64_t sub_24D90F878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D90F8E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D90F948(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B20);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24D90F9A8()
{
  unint64_t result = qword_26B18F660;
  if (!qword_26B18F660)
  {
    sub_24DCC8D88();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B18F660);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for JobLimitCategory(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SyncStateKey(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D90FB5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SyncStateKey()
{
  return &type metadata for SyncStateKey;
}

ValueMetadata *type metadata accessor for FeatureFlag()
{
  return &type metadata for FeatureFlag;
}

unint64_t sub_24D90FBA8()
{
  unint64_t result = qword_26986FB68;
  if (!qword_26986FB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FB68);
  }
  return result;
}

unint64_t sub_24D90FC00()
{
  unint64_t result = qword_26986FB70;
  if (!qword_26986FB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FB70);
  }
  return result;
}

unint64_t sub_24D90FC58()
{
  unint64_t result = qword_26986FB78;
  if (!qword_26986FB78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26986FB80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FB78);
  }
  return result;
}

unint64_t sub_24D90FCB8()
{
  unint64_t result = qword_26986FB88;
  if (!qword_26986FB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FB88);
  }
  return result;
}

unint64_t sub_24D90FD10()
{
  unint64_t result = qword_26986FB90;
  if (!qword_26986FB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FB90);
  }
  return result;
}

uint64_t sub_24D90FD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D90FE64(a1, a2, a3, (uint64_t (*)(void))sub_24D90FD90, (uint64_t (*)(void))sub_24D90FDE4);
}

unint64_t sub_24D90FD90()
{
  unint64_t result = qword_26986FB98;
  if (!qword_26986FB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FB98);
  }
  return result;
}

unint64_t sub_24D90FDE4()
{
  unint64_t result = qword_26986FBA0;
  if (!qword_26986FBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FBA0);
  }
  return result;
}

uint64_t sub_24D90FE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D90FE64(a1, a2, a3, (uint64_t (*)(void))sub_24D90FEA0, (uint64_t (*)(void))sub_24D90FEF4);
}

uint64_t sub_24D90FE64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24D90FEA0()
{
  unint64_t result = qword_26986FBA8;
  if (!qword_26986FBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FBA8);
  }
  return result;
}

unint64_t sub_24D90FEF4()
{
  unint64_t result = qword_26986FBB0;
  if (!qword_26986FBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FBB0);
  }
  return result;
}

unint64_t sub_24D90FF4C()
{
  unint64_t result = qword_26B192A28;
  if (!qword_26B192A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B192A28);
  }
  return result;
}

uint64_t sub_24D90FFA0()
{
  unint64_t v0 = sub_24DCCAA88();
  swift_bridgeObjectRelease();
  if (v0 >= 9) {
    return 9;
  }
  else {
    return v0;
  }
}

uint64_t sub_24D90FFEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  uint64_t v9 = v6;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 16))(v8, v9, a3, a4);

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D9100BC(uint64_t a1, uint64_t a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 24))(v9, a1, a2, a5, a7);
  a3(v9);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_24D910148()
{
  return swift_endAccess();
}

uint64_t sub_24D9101B8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, void *a3@<X8>)
{
  uint64_t v7 = *v3;
  uint64_t v9 = v3[1];
  uint64_t v10 = v3[2];
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  a3[3] = a1;
  a3[4] = a2;
  *a3 = v7;
  a3[1] = v9;
  a3[2] = v10;

  return swift_retain();
}

uint64_t sub_24D91024C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StringDumper()
{
  return self;
}

uint64_t sub_24D9102B0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_24D9102E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = *v3;
  a3[1] = a1;
  a3[3] = &type metadata for SubStringDumper;
  a3[4] = &off_26FFC61B0;
  a3[2] = a2;
  swift_retain();

  return swift_bridgeObjectRetain();
}

void sub_24D910340(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24DCC9858();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15[0] = a1;
  v15[1] = a2;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  uint64_t v10 = *(void **)(v3 + 16);
  sub_24DCC9848();
  uint64_t v11 = sub_24DCC97F8();
  unint64_t v13 = v12;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v13 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = (void *)sub_24DCC8B28();
    sub_24D416034(v11, v13);
    objc_msgSend(v10, sel_writeData_, v14);
  }
}

uint64_t sub_24D9104AC()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileDumper()
{
  return self;
}

uint64_t sub_24D910510()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void sub_24D910544(uint64_t a1, uint64_t a2)
{
}

id sub_24D910568@<X0>(uint64_t a1@<X3>, void *a2@<X8>)
{
  uint64_t v8 = *(void **)(*(void *)v2 + 16);
  uint64_t v9 = *(void *)(*(void *)v2 + 24);
  uint64_t v10 = *(void *)(*(void *)v2 + 32);
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  uint64_t v5 = type metadata accessor for FileDumper();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v8;
  v6[3] = v9;
  v6[4] = v10;
  a2[3] = v5;
  a2[4] = a1;
  *a2 = v6;

  return v8;
}

uint64_t destroy for SubStringDumper()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

void *_s9libfssync15SubStringDumperVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SubStringDumper(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for SubStringDumper(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SubStringDumper()
{
  return &type metadata for SubStringDumper;
}

id sub_24D910750(long long *a1)
{
  long long v16 = *a1;
  long long v2 = v16;
  sub_24D5D7D58((uint64_t)&v16);
  uint64_t v3 = sub_24DAC6C1C(v2, *((unint64_t *)&v2 + 1));
  unint64_t v5 = v4;
  uint64_t v6 = (void *)sub_24DCC8B28();
  sub_24D400DCC(v3, v5);
  long long v15 = *(long long *)((char *)a1 + 24);
  long long v7 = v15;
  sub_24D5D7D58((uint64_t)&v15);
  uint64_t v8 = sub_24DAC6C1C(v7, *((unint64_t *)&v7 + 1));
  unint64_t v10 = v9;
  uint64_t v11 = (void *)sub_24DCC8B28();
  sub_24D400DCC(v8, v10);
  if (*((void *)a1 + 7))
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v12 = 0;
  }
  id v13 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v6, v11, v12);
  sub_24D5DA4D8((uint64_t *)a1);

  return v13;
}

uint64_t sub_24D91087C()
{
  return sub_24DCC8BB8();
}

uint64_t sub_24D910894(uint64_t a1)
{
  sub_24D433858(a1, (uint64_t)v4);
  uint64_t v2 = sub_24DCC8B78();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t sub_24D9108FC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v36 = a4;
  uint64_t v7 = sub_24DCC84A8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9858();
  MEMORY[0x270FA5388](v11 - 8);
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v12) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
        JUMPOUT(0x24D910C7CLL);
      }
      uint64_t v12 = (int)v12;
LABEL_6:
      if (v12 > 64) {
        goto LABEL_11;
      }
LABEL_7:
      sub_24DCC9848();
      uint64_t v16 = sub_24DCC9808();
      if (!v17) {
        goto LABEL_11;
      }
      uint64_t v18 = v16;
      unint64_t v19 = v17;
      uint64_t v35 = a3;
      uint64_t v38 = v16;
      unint64_t v39 = v17;
      sub_24DCC8488();
      void v34[2] = sub_24D3F0EB8();
      uint64_t v20 = sub_24DCCA468();
      v34[0] = v21;
      v34[1] = v20;
      char v23 = v22;
      uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 8);
      v24(v10, v7);
      if ((v23 & 1) == 0
        || (uint64_t v38 = v18, v39 = v19, sub_24DCC8498(), sub_24DCCA468(), v26 = v25, v24(v10, v7), (v26 & 1) == 0))
      {
        swift_bridgeObjectRelease();
        a3 = v35;
LABEL_11:
        switch(a2 >> 62)
        {
          case 0uLL:
            uint64_t v27 = BYTE6(a2);
            goto LABEL_16;
          case 1uLL:
            LODWORD(v27) = HIDWORD(a1) - a1;
            if (__OFSUB__(HIDWORD(a1), a1)) {
              goto LABEL_27;
            }
            uint64_t v27 = (int)v27;
LABEL_16:
            if (v27 <= 10)
            {
LABEL_19:
              uint64_t v18 = sub_24DCC8B38();
            }
            else
            {
              uint64_t v38 = 0x626F6C627BLL;
              unint64_t v39 = 0xE500000000000000;
              uint64_t v30 = 0;
              switch(v36 >> 62)
              {
                case 1uLL:
                  LODWORD(v30) = HIDWORD(a3) - a3;
                  if (__OFSUB__(HIDWORD(a3), a3)) {
                    goto LABEL_29;
                  }
                  uint64_t v30 = (int)v30;
LABEL_23:
                  uint64_t v37 = v30;
                  sub_24DCCAD78();
                  sub_24DCC9968();
                  swift_bridgeObjectRelease();
                  sub_24DCC9968();
                  uint64_t v18 = v38;
                  break;
                case 2uLL:
                  uint64_t v32 = *(void *)(a3 + 16);
                  uint64_t v31 = *(void *)(a3 + 24);
                  BOOL v15 = __OFSUB__(v31, v32);
                  uint64_t v30 = v31 - v32;
                  if (!v15) {
                    goto LABEL_23;
                  }
                  goto LABEL_30;
                case 3uLL:
                  goto LABEL_23;
                default:
                  uint64_t v30 = BYTE6(v36);
                  goto LABEL_23;
              }
            }
            break;
          case 2uLL:
            uint64_t v29 = *(void *)(a1 + 16);
            uint64_t v28 = *(void *)(a1 + 24);
            BOOL v15 = __OFSUB__(v28, v29);
            uint64_t v27 = v28 - v29;
            if (!v15) {
              goto LABEL_16;
            }
            goto LABEL_28;
          case 3uLL:
            goto LABEL_19;
          default:
            JUMPOUT(0);
        }
      }
      return v18;
    case 2uLL:
      uint64_t v14 = *(void *)(a1 + 16);
      uint64_t v13 = *(void *)(a1 + 24);
      BOOL v15 = __OFSUB__(v13, v14);
      uint64_t v12 = v13 - v14;
      if (!v15) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_7;
    default:
      uint64_t v12 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_24D910CAC(uint64_t a1, unint64_t a2)
{
  if ((sub_24D910EA4(a1, a2) & 1) == 0) {
    return sub_24D9108FC(a1, a2, a1, a2);
  }
  id v4 = objc_msgSend(self, sel_beforeFirstSyncComponent);
  uint64_t v5 = sub_24DCC8B68();
  unint64_t v7 = v6;

  switch(v7 >> 62)
  {
    case 1uLL:
      sub_24D400DCC(v5, v7);
      if (__OFSUB__(HIDWORD(v5), v5)) {
        goto LABEL_20;
      }
      uint64_t v8 = HIDWORD(v5) - (int)v5;
      break;
    case 2uLL:
      uint64_t v11 = *(void *)(v5 + 16);
      uint64_t v10 = *(void *)(v5 + 24);
      sub_24D400DCC(v5, v7);
      uint64_t v8 = v10 - v11;
      if (!__OFSUB__(v10, v11)) {
        break;
      }
      __break(1u);
LABEL_10:
      sub_24D400DCC(v5, v7);
      uint64_t v8 = 0;
      break;
    case 3uLL:
      goto LABEL_10;
    default:
      sub_24D400DCC(v5, v7);
      uint64_t v8 = BYTE6(v7);
      break;
  }
  uint64_t v12 = 0;
  uint64_t v13 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      uint64_t v13 = (int)a1;
      uint64_t v12 = a1 >> 32;
      break;
    case 2uLL:
      uint64_t v13 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v13 = 0;
      uint64_t v12 = BYTE6(a2);
      break;
  }
  if (v12 < v8 || v12 < v13)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    JUMPOUT(0x24D910E84);
  }
  uint64_t v14 = sub_24DCC8AF8();
  unint64_t v16 = v15;
  sub_24D9108FC(v14, v15, a1, a2);
  sub_24D400DCC(v14, v16);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0x2F6F72657ALL;
}

uint64_t sub_24D910EA4(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        JUMPOUT(0x24D91113CLL);
      }
      uint64_t v2 = HIDWORD(a1) - (int)a1;
LABEL_6:
      uint64_t v5 = self;
      id v6 = objc_msgSend(v5, sel_beforeFirstSyncComponent);
      uint64_t v7 = sub_24DCC8B68();
      unint64_t v9 = v8;

      switch(v9 >> 62)
      {
        case 1uLL:
          sub_24D400DCC(v7, v9);
          LODWORD(v10) = HIDWORD(v7) - v7;
          if (__OFSUB__(HIDWORD(v7), v7)) {
            goto LABEL_24;
          }
          uint64_t v10 = (int)v10;
LABEL_11:
          if (v2 < v10) {
            return 0;
          }
LABEL_14:
          id v14 = objc_msgSend(v5, sel_beforeFirstSyncComponent);
          uint64_t v15 = sub_24DCC8B68();
          unint64_t v17 = v16;

          switch(v17 >> 62)
          {
            case 1uLL:
              sub_24D400DCC(v15, v17);
              if (__OFSUB__(HIDWORD(v15), v15)) {
                goto LABEL_26;
              }
              uint64_t v18 = HIDWORD(v15) - (int)v15;
LABEL_18:
              if (v18 < 0)
              {
                __break(1u);
LABEL_20:
                sub_24D400DCC(v15, v17);
              }
              uint64_t v21 = sub_24DCC8AF8();
              unint64_t v23 = v22;
              id v24 = objc_msgSend(v5, sel_beforeFirstSyncComponent);
              uint64_t v25 = sub_24DCC8B68();
              unint64_t v27 = v26;

              LOBYTE(v24) = sub_24D401DDC(v21, v23, v25, v27);
              sub_24D400DCC(v25, v27);
              sub_24D400DCC(v21, v23);
              uint64_t result = v24 & 1;
              break;
            case 2uLL:
              uint64_t v20 = *(void *)(v15 + 16);
              uint64_t v19 = *(void *)(v15 + 24);
              sub_24D400DCC(v15, v17);
              uint64_t v18 = v19 - v20;
              if (!__OFSUB__(v19, v20)) {
                goto LABEL_18;
              }
              goto LABEL_27;
            default:
              goto LABEL_20;
          }
          return result;
        case 2uLL:
          uint64_t v12 = *(void *)(v7 + 16);
          uint64_t v11 = *(void *)(v7 + 24);
          sub_24D400DCC(v7, v9);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_11;
          }
          goto LABEL_25;
        case 3uLL:
          sub_24D400DCC(v7, v9);
          if ((v2 & 0x8000000000000000) == 0) {
            goto LABEL_14;
          }
          return 0;
        default:
          sub_24D400DCC(v7, v9);
          uint64_t v10 = BYTE6(v9);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v4 = *(void *)(a1 + 16);
      uint64_t v3 = *(void *)(a1 + 24);
      uint64_t v2 = v3 - v4;
      if (!__OFSUB__(v3, v4)) {
        goto LABEL_6;
      }
      goto LABEL_23;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v2 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_24D91116C(uint64_t a1, unint64_t a2)
{
  id v4 = objc_msgSend(self, sel_beforeFirstSyncComponent);
  uint64_t v5 = sub_24DCC8B68();
  unint64_t v7 = v6;

  sub_24D3F9C18(a1, a2);
  sub_24D3F9C18(v5, v7);
  sub_24D9117A0(a1, a2);
  sub_24D400DCC(a1, a2);
  sub_24D400DCC(v5, v7);
  return v5;
}

double sub_24D911224@<D0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  id v5 = objc_msgSend(self, sel_beforeFirstSyncComponent);
  double v6 = COERCE_DOUBLE(sub_24DCC8B68());
  unint64_t v8 = v7;

  *(double *)&long long v10 = v6;
  *((void *)&v10 + 1) = v8;
  sub_24D3F9C18(v3, v4);
  sub_24D3F9C18(*(uint64_t *)&v6, v8);
  sub_24D9117A0(v3, v4);
  sub_24D400DCC(v3, v4);
  sub_24D400DCC(*(uint64_t *)&v6, v8);
  double result = v6;
  *a2 = v10;
  return result;
}

uint64_t sub_24D9112E0()
{
  return sub_24D910EA4(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_24D9112E8()
{
  return sub_24D910CAC(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_24D9112F0(uint64_t a1, uint64_t a2)
{
  return sub_24D401DDC(*(void *)a1, *(void *)(a1 + 8), *(void *)a2, *(void *)(a2 + 8));
}

uint64_t sub_24D911304@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_24D433858(a1, (uint64_t)v10);
  uint64_t v5 = sub_24DCC8B78();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1(a1);
  }
  uint64_t v8 = v5;
  uint64_t v9 = v6;
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  *a2 = v8;
  a2[1] = v9;
  return result;
}

uint64_t sub_24D911384()
{
  return sub_24DCC8BB8();
}

const char *sub_24D9113A0()
{
  return "BLOB";
}

uint64_t sub_24D9113AC(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_dataAtIndex_, a2);
  uint64_t v4 = sub_24DCC8B68();

  return v4;
}

void sub_24D91141C()
{
}

uint64_t sub_24D911478(void *a1)
{
  uint64_t v2 = (void *)sub_24DCC8B28();
  id v3 = objc_msgSend(a1, sel_bindObjectParameter_, v2);

  uint64_t v4 = sub_24DCC97E8();
  return v4;
}

void sub_24D9114F0(void *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  id v5 = objc_msgSend(a1, sel_dataAtIndex_, a2);
  uint64_t v6 = sub_24DCC8B68();
  uint64_t v8 = v7;

  *a3 = v6;
  a3[1] = v8;
}

uint64_t sub_24D911560(void *a1)
{
  uint64_t v2 = (void *)sub_24DCC8B28();
  id v3 = objc_msgSend(a1, sel_bindObjectParameter_, v2);

  uint64_t v4 = sub_24DCC97E8();
  return v4;
}

uint64_t sub_24D9115D4()
{
  uint64_t v1 = 0x746E65746E6F63;
  if (*v0 != 1) {
    uint64_t v1 = 1852073324;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x617461646174656DLL;
  }
}

uint64_t sub_24D911628@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D911B84(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D911650(uint64_t a1)
{
  unint64_t v2 = sub_24D9121E8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D91168C(uint64_t a1)
{
  unint64_t v2 = sub_24D9121E8();

  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_24D9116C8(void *a1)
{
  return sub_24D911CCC(a1);
}

void *sub_24D9116E0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_24D911CCC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24D91170C(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_24DCC84D8();
  if (!result || (uint64_t result = sub_24DCC84F8(), !__OFSUB__(a1, result)))
  {
    if (!__OFSUB__(a2, a1))
    {
      sub_24DCC84E8();
      return sub_24DCC8AE8();
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D9117A0(uint64_t a1, unint64_t a2)
{
  v10[5] = *MEMORY[0x263EF8340];
  v10[3] = MEMORY[0x263F06F78];
  v10[4] = MEMORY[0x263F06F68];
  v10[0] = a1;
  v10[1] = a2;
  uint64_t v4 = __swift_project_boxed_opaque_existential_1(v10, MEMORY[0x263F06F78]);
  uint64_t v5 = *v4;
  unint64_t v6 = v4[1];
  switch(v6 >> 62)
  {
    case 1uLL:
      if (v5 >> 32 < (int)v5) {
        __break(1u);
      }
      sub_24D3F9C18(a1, a2);
      sub_24D3F9C18(v5, v6);
      sub_24D91170C((int)v5, v5 >> 32);
      sub_24D400DCC(v5, v6);
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      sub_24D3F9C18(a1, a2);
      swift_retain();
      swift_retain();
      sub_24D91170C(v7, v8);
      swift_release();
      swift_release();
      break;
    default:
      sub_24D3F9C18(a1, a2);
      sub_24DCC8AE8();
      break;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_24D9119C4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_24D4EC4DC((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_24D911A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t v10 = sub_24DCC84D8();
  if (v10)
  {
    uint64_t v11 = sub_24DCC84F8();
    if (__OFSUB__(a1, v11))
    {
LABEL_9:
      __break(1u);
      JUMPOUT(0x24D911B54);
    }
    v10 += a1 - v11;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_24DCC84E8();
  sub_24D4EC4DC(v10, a4, a5, &v14);
  if (!v5) {
    char v12 = v14;
  }
  return v12 & 1;
}

uint64_t sub_24D911B84(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x617461646174656DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1852073324 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_24D911CCC(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FBB8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9121E8();
  sub_24DCCB0B8();
  if (!v1)
  {
    char v22 = 0;
    sub_24D4EDA58();
    sub_24DCCAB98();
    uint64_t v9 = v20;
    unint64_t v8 = v21;
    char v22 = 1;
    sub_24DCCAB98();
    uint64_t v10 = v20;
    unint64_t v19 = v21;
    LOBYTE(v20) = 2;
    id v15 = (id)sub_24DCCAB58();
    id v16 = objc_allocWithZone(MEMORY[0x263F055A8]);
    uint64_t v17 = v10;
    id v18 = (id)sub_24DCC8B28();
    char v12 = (void *)sub_24DCC8B28();
    char v13 = (void *)sub_24DCC97B8();
    id v15 = v13;
    swift_bridgeObjectRelease();
    char v7 = objc_msgSend(v16, sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v18, v12, v13);
    sub_24D400DCC(v9, v8);
    sub_24D400DCC(v17, v19);

    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

unint64_t sub_24D911FBC(void *a1)
{
  a1[1] = sub_24D911FF4();
  a1[2] = sub_24D912048();
  unint64_t result = sub_24D91209C();
  a1[3] = result;
  return result;
}

unint64_t sub_24D911FF4()
{
  unint64_t result = qword_26B199618;
  if (!qword_26B199618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199618);
  }
  return result;
}

unint64_t sub_24D912048()
{
  unint64_t result = qword_26B199608;
  if (!qword_26B199608)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199608);
  }
  return result;
}

unint64_t sub_24D91209C()
{
  unint64_t result = qword_26B199610;
  if (!qword_26B199610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199610);
  }
  return result;
}

uint64_t *assignWithCopy for FPItemVersionData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24D3F9C18(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_24D400DCC(v5, v6);
  return a1;
}

uint64_t *assignWithTake for FPItemVersionData(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24D400DCC(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FPItemVersionData(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 13);
  }
  unsigned int v3 = (((*(void *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(void *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

ValueMetadata *type metadata accessor for FPItemVersionData()
{
  return &type metadata for FPItemVersionData;
}

ValueMetadata *type metadata accessor for NSFileProviderItemVersionWrapper()
{
  return &type metadata for NSFileProviderItemVersionWrapper;
}

unint64_t sub_24D9121E8()
{
  unint64_t result = qword_26986FBC0;
  if (!qword_26986FBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FBC0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for NSFileProviderItemVersionWrapper.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D912308);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NSFileProviderItemVersionWrapper.CodingKeys()
{
  return &type metadata for NSFileProviderItemVersionWrapper.CodingKeys;
}

unint64_t sub_24D912344()
{
  unint64_t result = qword_26986FBC8;
  if (!qword_26986FBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FBC8);
  }
  return result;
}

unint64_t sub_24D91239C()
{
  unint64_t result = qword_26986FBD0;
  if (!qword_26986FBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FBD0);
  }
  return result;
}

unint64_t sub_24D9123F4()
{
  unint64_t result = qword_26986FBD8;
  if (!qword_26986FBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FBD8);
  }
  return result;
}

uint64_t sub_24D912448(uint64_t a1)
{
  uint64_t v3 = sub_24DCC9078();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  BOOL v7 = !*(unsigned char *)(a1 + 112) || *(unsigned char *)(a1 + 112) == 4 && *(_OWORD *)(a1 + 96) == 0;
  uint64_t result = sub_24D5803A8();
  if (!v1)
  {
    uint64_t result = swift_release();
    if (v7)
    {
      id v9 = (id)fpfs_current_or_default_log();
      uint64_t v10 = sub_24DCC9088();
      os_log_type_t v11 = (*(unsigned __int8 (**)(uint64_t))(*(void *)a1 + 424))(v10);
      swift_retain();
      char v12 = sub_24DCC9068();
      os_log_type_t v13 = v11;
      if (os_log_type_enabled(v12, v11))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = swift_slowAlloc();
        uint64_t v23 = v21;
        uint64_t v20 = v14;
        *(_DWORD *)uint64_t v14 = 136446210;
        unint64_t v19 = v14 + 4;
        uint64_t v15 = sub_24D982AC4();
        uint64_t v22 = sub_24D418FB4(v15, v16, &v23);
        sub_24DCCA428();
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v17 = v20;
        _os_log_impl(&dword_24D3D0000, v12, v13, " ✍️  persist job: %{public}s", v20, 0xCu);
        uint64_t v18 = v21;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v18, -1, -1);
        MEMORY[0x25332B030](v17, -1, -1);
      }
      else
      {

        swift_release();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    }
  }
  return result;
}

uint64_t sub_24D9126EC(void *a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v32 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v32);
  uint64_t v33 = (uint64_t *)((char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_24DCC9078();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  v41 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v11 = *(void *)(a1[2] + 16);
  if (v11)
  {
    uint64_t v35 = a2;
    uint64_t v36 = v3;
    uint64_t v37 = a1;
    uint64_t v38 = v2;
    uint64_t v43 = (void (**)(char *, uint64_t))(v9 + 8);
    uint64_t v34 = swift_bridgeObjectRetain();
    char v12 = (unint64_t *)(v34 + 40);
    *(void *)&long long v13 = 136315138;
    long long v40 = v13;
    uint64_t v39 = MEMORY[0x263F8EE58] + 8;
    uint64_t v14 = v41;
    do
    {
      uint64_t v16 = *(v12 - 1);
      unint64_t v15 = *v12;
      swift_bridgeObjectRetain();
      id v17 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      swift_bridgeObjectRetain();
      uint64_t v18 = sub_24DCC9068();
      os_log_type_t v19 = sub_24DCCA108();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = v8;
        uint64_t v21 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        v42[0] = v22;
        *(_DWORD *)uint64_t v21 = v40;
        swift_bridgeObjectRetain();
        *(void *)(v21 + 4) = sub_24D418FB4(v16, v15, v42);
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_24D3D0000, v18, v19, "%s", (uint8_t *)v21, 0xCu);
        swift_arrayDestroy();
        uint64_t v23 = v22;
        uint64_t v14 = v41;
        MEMORY[0x25332B030](v23, -1, -1);
        uint64_t v24 = v21;
        uint64_t v8 = v20;
        MEMORY[0x25332B030](v24, -1, -1);

        (*v43)(v14, v20);
      }
      else
      {

        swift_bridgeObjectRelease_n();
        (*v43)(v14, v8);
      }
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    a1 = v37;
    BOOL v2 = v38;
    uint64_t v4 = v36;
  }
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_24D917868();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_beginAccess();
    uint64_t v26 = a1[3];
    swift_beginAccess();
    uint64_t v27 = a1[4];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24D6E6464(v26, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v28 = v2[7];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v30 = (*(uint64_t (**)(uint64_t))(*v2 + 272))(ObjectType);
    uint64_t v31 = (uint64_t)v33;
    *uint64_t v33 = v30;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28 + 8))(v31, ObjectType, v28);
    return sub_24D3FBB10(v31, (uint64_t (*)(void))type metadata accessor for SyncState);
  }
  return result;
}

uint64_t sub_24D912B1C(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t v5 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    unsigned int v6 = *(void (**)(uint64_t))(*(void *)v1 + 176);
    uint64_t v7 = swift_retain();
    v6(v7);
    uint64_t v3 = sub_24D914A0C(v5);
    swift_release();
  }
  else
  {
    uint64_t v2 = swift_retain();
    uint64_t v3 = sub_24D914A0C(v2);
  }
  swift_release();
  return v3;
}

void sub_24D912BF0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  v183 = a2;
  v197 = a1;
  uint64_t v4 = (void *)*v2;
  uint64_t v5 = v4[10];
  uint64_t v6 = v4[12];
  uint64_t v177 = type metadata accessor for FileTreeError();
  uint64_t v176 = *(void *)(v177 - 8);
  MEMORY[0x270FA5388](v177);
  v178 = (char *)v174 - v7;
  uint64_t v8 = v4[11];
  uint64_t v9 = v4[13];
  uint64_t v198 = v5;
  uint64_t v199 = v8;
  uint64_t v200 = v6;
  uint64_t v201 = v9;
  uint64_t v181 = type metadata accessor for PersistenceTrigger();
  uint64_t v180 = *(void *)(v181 - 8);
  MEMORY[0x270FA5388](v181);
  v179 = (char *)v174 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v189 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  v182 = (char *)v174 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  v186 = (char *)v174 - v14;
  unint64_t v15 = (void *)swift_getAssociatedTypeWitness();
  uint64_t v187 = *(v15 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  v184 = (void *)((char *)v174 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  v185 = (char *)v174 - v18;
  uint64_t v193 = v6;
  uint64_t v194 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v191 = v8;
  uint64_t v192 = v9;
  uint64_t v20 = swift_getAssociatedConformanceWitness();
  uint64_t v188 = (uint64_t)v15;
  uint64_t v198 = (uint64_t)v15;
  uint64_t v199 = AssociatedTypeWitness;
  uint64_t v190 = AssociatedTypeWitness;
  uint64_t v200 = AssociatedConformanceWitness;
  uint64_t v201 = v20;
  uint64_t v21 = type metadata accessor for ReconciliationID();
  uint64_t v22 = sub_24DCCA3F8();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)v174 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v29 = (char *)v174 - v28;
  uint64_t v196 = v21;
  uint64_t v195 = *(void *)(v21 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v27);
  uint64_t v32 = (char *)v174 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v36 = (char *)v174 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v39 = (char *)v174 - v38;
  uint64_t v40 = v197[17];
  if (v40)
  {
    uint64_t v42 = v202;
    (*(void (**)(void *))(*v197 + 512))(v3);
    if (v42) {
      return;
    }
    v184 = v3;
    uint64_t v44 = v195;
    uint64_t v43 = v196;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v29, 1, v196) == 1)
    {
      (*(void (**)(char *, uint64_t))(v23 + 8))(v29, v22);
      return;
    }
    uint64_t v202 = 0;
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v39, v29, v43);
    uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
    v182 = v39;
    v47(v36, v39, v43);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v175 = v47;
    v174[1] = v44 + 16;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v49 = v186;
      (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v186, v36, v190);
      uint64_t v50 = v184[3];
      uint64_t v51 = v191;
      uint64_t v52 = v192;
      uint64_t v54 = v193;
      uint64_t v53 = v194;
      uint64_t v198 = v191;
      uint64_t v199 = v194;
      uint64_t v200 = v192;
      uint64_t v201 = v193;
      uint64_t v188 = type metadata accessor for ItemJob();
      uint64_t MetatypeMetadata = swift_getMetatypeMetadata();
      sub_24DA604B8(MetatypeMetadata, MetatypeMetadata);
      swift_allocObject();
      uint64_t v56 = sub_24DCC9C58();
      uint64_t v198 = v51;
      uint64_t v199 = v53;
      uint64_t v200 = v52;
      uint64_t v201 = v54;
      *uint64_t v57 = type metadata accessor for Materialization.MaterializeItem();
      uint64_t v58 = sub_24D785484(v56);
      uint64_t v59 = v202;
      uint64_t v60 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v50 + 264))(v49, v58);
      if (v59)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v189 + 8))(v49, v190);
LABEL_18:
        v91 = *(void (**)(char *, uint64_t))(v195 + 8);
        v92 = v182;
LABEL_23:
        v91(v92, v196);
        return;
      }
      uint64_t v104 = v60;
      uint64_t v202 = 0;
      swift_bridgeObjectRelease();
      uint64_t v198 = v104;
      sub_24DCC9D48();
      swift_getWitnessTable();
      uint64_t v105 = sub_24DCC9FE8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v189 + 8))(v49, v190);
      v106 = v182;
      if (v105)
      {
        v107 = *(void (**)(char *, uint64_t))(v195 + 8);
LABEL_32:
        uint64_t v115 = v196;
LABEL_63:
        v107(v106, v115);
        return;
      }
      v116 = v175;
    }
    else
    {
      v79 = v185;
      (*(void (**)(char *, char *, uint64_t))(v187 + 32))(v185, v36, v188);
      uint64_t v80 = v184[3];
      uint64_t v82 = v193;
      uint64_t v81 = v194;
      uint64_t v84 = v191;
      uint64_t v83 = v192;
      uint64_t v198 = v194;
      uint64_t v199 = v191;
      uint64_t v200 = v193;
      uint64_t v201 = v192;
      uint64_t v190 = type metadata accessor for ItemJob();
      uint64_t v85 = swift_getMetatypeMetadata();
      sub_24DA604B8(v85, v85);
      swift_allocObject();
      uint64_t v86 = sub_24DCC9C58();
      uint64_t v198 = v81;
      uint64_t v199 = v84;
      uint64_t v200 = v82;
      uint64_t v201 = v83;
      uint64_t *v87 = type metadata accessor for Materialization.MaterializeItem();
      uint64_t v88 = sub_24D785484(v86);
      uint64_t v89 = v202;
      uint64_t v90 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v80 + 272))(v79, v88);
      if (v89)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v187 + 8))(v79, v188);
        goto LABEL_18;
      }
      uint64_t v108 = v90;
      uint64_t v202 = 0;
      swift_bridgeObjectRelease();
      uint64_t v198 = v108;
      sub_24DCC9D48();
      swift_getWitnessTable();
      uint64_t v109 = sub_24DCC9FE8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v187 + 8))(v79, v188);
      if (v109)
      {
        (*(void (**)(char *, uint64_t))(v195 + 8))(v182, v196);
        return;
      }
      v116 = v175;
    }
    v117 = v183;
    v118 = (void *)sub_24DCC8818();
    id v119 = objc_msgSend(v118, sel_domain);
    uint64_t v120 = sub_24DCC97E8();
    uint64_t v122 = v121;

    if (v120 == sub_24DCC97E8() && v122 == v123)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v124 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v124 & 1) == 0) {
        goto LABEL_41;
      }
    }
    id v125 = objc_msgSend(v118, sel_code);
    if (v125 == (id)*MEMORY[0x263F05398])
    {
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
      uint64_t v126 = v196;
      uint64_t v127 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v128 = v179;
      v129 = v116;
      v130 = v182;
      v129(v179, v182, v126);
LABEL_62:
      *(void *)&v128[v127] = v117;
      v170 = v117;
      uint64_t v171 = v181;
      swift_storeEnumTagMultiPayload();
      v172 = *(void (**)(char *))(*v184 + 312);
      id v173 = v170;
      v172(v128);

      (*(void (**)(char *, uint64_t))(v180 + 8))(v128, v171);
      v107 = *(void (**)(char *, uint64_t))(v195 + 8);
      v106 = v130;
      uint64_t v115 = v126;
      goto LABEL_63;
    }
LABEL_41:
    v131 = v116;
    _s3__C4CodeOMa_1(0);
    uint64_t v198 = -1000;
    sub_24D9182C0();
    if ((sub_24DCC86A8() & 1) == 0)
    {
      uint64_t v198 = -2009;
      if ((sub_24DCC86A8() & 1) == 0)
      {
        uint64_t v198 = (uint64_t)v117;
        id v132 = v117;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
        uint64_t v133 = v177;
        if (!swift_dynamicCast())
        {
LABEL_48:

          uint64_t v135 = v202;
          char v136 = sub_24D580444(v197, 0);
          if (v135 || (v136 & 1) == 0)
          {
            (*(void (**)(char *, uint64_t))(v195 + 8))(v182, v196);
          }
          else
          {
            uint64_t v137 = v196;
            TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
            uint64_t v202 = 0;
            uint64_t v139 = *(int *)(TupleTypeMetadata2 + 48);
            v140 = v179;
            v141 = v182;
            v131(v179, v182, v137);
            *(void *)&v140[v139] = v117;
            uint64_t v142 = v181;
            swift_storeEnumTagMultiPayload();
            v143 = v117;
            uint64_t v144 = v195;
            v145 = *(void (**)(char *))(*v184 + 312);
            id v146 = v143;
            v145(v140);

            (*(void (**)(char *, uint64_t))(v180 + 8))(v140, v142);
            (*(void (**)(char *, uint64_t))(v144 + 8))(v141, v137);
          }
          return;
        }
        int v134 = swift_getEnumCaseMultiPayload();
        if (v134 != 20)
        {
          if (v134 == 7)
          {
            uint64_t v166 = swift_getAssociatedTypeWitness();
            uint64_t v167 = swift_getTupleTypeMetadata2();
            v168 = v178;
            v169 = *(void (**)(char *, uint64_t))(*(void *)(v166 - 8) + 8);
            v169(&v178[*(int *)(v167 + 48)], v166);
            v169(v168, v166);
          }
          else if (v134 != 5)
          {
            (*(void (**)(char *, uint64_t))(v176 + 8))(v178, v133);
            goto LABEL_48;
          }
        }
      }
    }
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
    uint64_t v126 = v196;
    uint64_t v127 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v128 = v179;
    v130 = v182;
    v131(v179, v182, v126);
    goto LABEL_62;
  }
  uint64_t v41 = v202;
  if ((v40 & 2) == 0) {
    return;
  }
  v186 = v37;
  (*(void (**)(void *))(*v197 + 520))(v3);
  if (v41) {
    return;
  }
  uint64_t v46 = v195;
  uint64_t v45 = v196;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v26, 1, v196) == 1)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    return;
  }
  uint64_t v202 = 0;
  uint64_t v61 = v186;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v186, v26, v45);
  unint64_t v62 = *(char **)(v46 + 16);
  v185 = (char *)(v46 + 16);
  v178 = v62;
  ((void (*)(char *, char *, uint64_t))v62)(v32, v61, v45);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v63 = v182;
    (*(void (**)(char *, char *, uint64_t))(v189 + 32))(v182, v32, v190);
    v184 = v3;
    uint64_t v64 = v3[3];
    uint64_t v65 = v191;
    uint64_t v66 = v192;
    uint64_t v68 = v193;
    uint64_t v67 = v194;
    uint64_t v198 = v191;
    uint64_t v199 = v194;
    uint64_t v200 = v192;
    uint64_t v201 = v193;
    uint64_t v188 = type metadata accessor for ItemJob();
    uint64_t v69 = swift_getMetatypeMetadata();
    sub_24DA604B8(v69, v69);
    swift_allocObject();
    uint64_t v70 = sub_24DCC9C58();
    uint64_t v198 = v65;
    uint64_t v199 = v67;
    uint64_t v200 = v66;
    uint64_t v201 = v68;
    uint64_t *v71 = type metadata accessor for Materialization.EvictItem();
    uint64_t v72 = v70;
    v73 = v63;
    uint64_t v74 = sub_24D785484(v72);
    uint64_t v75 = v202;
    uint64_t v76 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v64 + 264))(v63, v74);
    if (v75)
    {
      swift_bridgeObjectRelease();
      uint64_t v78 = v189;
      uint64_t v77 = v190;
LABEL_21:
      (*(void (**)(char *, uint64_t))(v78 + 8))(v73, v77);
LABEL_22:
      v91 = *(void (**)(char *, uint64_t))(v195 + 8);
      v92 = v186;
      goto LABEL_23;
    }
    uint64_t v110 = v76;
    v111 = v184;
    uint64_t v202 = 0;
    swift_bridgeObjectRelease();
    uint64_t v198 = v110;
    sub_24DCC9D48();
    swift_getWitnessTable();
    uint64_t v112 = sub_24DCC9FE8();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v189 + 8))(v73, v190);
    if ((v112 & 1) == 0) {
      goto LABEL_52;
    }
    goto LABEL_31;
  }
  (*(void (**)(void *, char *, uint64_t))(v187 + 32))(v184, v32, v188);
  uint64_t v93 = v3[3];
  uint64_t v95 = v193;
  uint64_t v94 = v194;
  uint64_t v96 = v191;
  uint64_t v97 = v192;
  uint64_t v198 = v194;
  uint64_t v199 = v191;
  uint64_t v200 = v193;
  uint64_t v201 = v192;
  uint64_t v190 = type metadata accessor for ItemJob();
  uint64_t v98 = swift_getMetatypeMetadata();
  sub_24DA604B8(v98, v98);
  swift_allocObject();
  uint64_t v99 = sub_24DCC9C58();
  uint64_t v198 = v94;
  uint64_t v199 = v96;
  uint64_t v200 = v95;
  uint64_t v201 = v97;
  v73 = (char *)v184;
  uint64_t *v100 = type metadata accessor for Materialization.EvictItem();
  uint64_t v101 = sub_24D785484(v99);
  uint64_t v102 = v202;
  uint64_t v103 = (*(uint64_t (**)(char *, uint64_t))(*(void *)v93 + 272))(v73, v101);
  if (v102)
  {
    swift_bridgeObjectRelease();
    uint64_t v78 = v187;
    uint64_t v77 = v188;
    goto LABEL_21;
  }
  uint64_t v113 = v103;
  uint64_t v202 = 0;
  swift_bridgeObjectRelease();
  uint64_t v198 = v113;
  sub_24DCC9D48();
  swift_getWitnessTable();
  uint64_t v114 = sub_24DCC9FE8();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v187 + 8))(v73, v188);
  if (v114)
  {
LABEL_31:
    v107 = *(void (**)(char *, uint64_t))(v195 + 8);
    v106 = v186;
    goto LABEL_32;
  }
  v111 = v3;
LABEL_52:
  _s3__C4CodeOMa_1(0);
  uint64_t v198 = -1000;
  sub_24D9182C0();
  v147 = v183;
  if (sub_24DCC86A8())
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
    uint64_t v148 = v196;
    uint64_t v149 = *(int *)(swift_getTupleTypeMetadata2() + 48);
    v150 = v147;
    v151 = v179;
    v152 = v186;
    ((void (*)(char *, char *, uint64_t))v178)(v179, v186, v148);
    *(void *)&v151[v149] = v147;
    uint64_t v153 = v181;
    swift_storeEnumTagMultiPayload();
    v154 = *(void (**)(char *))(*v111 + 312);
    id v155 = v150;
    v154(v151);
    (*(void (**)(char *, uint64_t))(v180 + 8))(v151, v153);
    (*(void (**)(char *, uint64_t))(v195 + 8))(v152, v148);
  }
  else
  {
    uint64_t v156 = v202;
    char v157 = sub_24D580444(v197, 0);
    if (v156) {
      goto LABEL_22;
    }
    uint64_t v158 = v196;
    if (v157)
    {
      __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
      uint64_t v159 = *(int *)(swift_getTupleTypeMetadata2() + 48);
      v160 = v179;
      v161 = v186;
      ((void (*)(char *, char *, uint64_t))v178)(v179, v186, v158);
      *(void *)&v160[v159] = v147;
      v162 = v147;
      uint64_t v163 = v181;
      swift_storeEnumTagMultiPayload();
      v164 = *(void (**)(char *))(*v111 + 312);
      id v165 = v162;
      v164(v160);
      (*(void (**)(char *, uint64_t))(v180 + 8))(v160, v163);
      (*(void (**)(char *, uint64_t))(v195 + 8))(v161, v158);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v195 + 8))(v186, v196);
    }
  }
}

uint64_t sub_24D9140DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *v3;
  int v7 = (*(uint64_t (**)(void))(*(void *)a1 + 184))();
  if (v7 == 9) {
    return 0;
  }
  int v9 = v7;
  uint64_t v10 = (void *)(*(uint64_t (**)(void))(*v3 + 456))();
  uint64_t v11 = *(uint64_t (**)(uint64_t))(*v3 + 168);
  uint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = (void *)v11(v12);
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = *(void *)(v6 + 80);
  *(_OWORD *)(v15 + 24) = *(_OWORD *)(v6 + 88);
  *(void *)(v15 + 40) = *(void *)(v6 + 104);
  *(void *)(v15 + 48) = v14;
  type metadata accessor for JobLimitSlot();
  swift_allocObject();
  return sub_24D95E6D0(v10, v9, a2, a3, v13, (uint64_t)sub_24D917ABC, v15);
}

void sub_24D914290(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v54 = a3;
  uint64_t v55 = a4;
  uint64_t v52 = a1;
  uint64_t v51 = *(void *)(*v4 + 96);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24DCCA3F8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v50 - v9;
  uint64_t v53 = v4;
  uint64_t v11 = *(uint64_t (**)(uint64_t))(**(void **)(v4[4] + 16) + 408);
  uint64_t v12 = swift_retain();
  uint64_t v13 = (void *)v11(v12);
  uint64_t v14 = swift_release();
  if (v13)
  {
    id v50 = v13;
    (*(void (**)(uint64_t))(*a2 + 320))(v14);
    uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v10, 1, AssociatedTypeWitness) == 1)
    {
      uint64_t v51 = 0;
      unint64_t v16 = 0xE000000000000000;
      uint64_t AssociatedTypeWitness = v7;
    }
    else
    {
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v51 = sub_24D586D60(AssociatedTypeWitness, AssociatedConformanceWitness);
      unint64_t v16 = v18;
      uint64_t v8 = v15;
    }
    uint64_t v19 = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, AssociatedTypeWitness);
    uint64_t v20 = (*(uint64_t (**)(uint64_t))(*a2 + 304))(v19);
    if (v21) {
      uint64_t v22 = 0;
    }
    else {
      uint64_t v22 = v20;
    }
    id v23 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithLongLong_, v22);
    sub_24DBA51F0(2);
    uint64_t v25 = v24;

    if (v25)
    {
      id v26 = objc_msgSend(v25, sel_longLongValue);
    }
    else
    {
      id v26 = 0;
    }
    uint64_t v27 = (*(uint64_t (**)(void))(*a2 + 312))();
    if ((v27 & 0x100000000) != 0) {
      uint64_t v28 = 0;
    }
    else {
      uint64_t v28 = v27;
    }
    id v29 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithUnsignedInt_, v28);
    sub_24DBA51F0(2);
    uint64_t v31 = v30;

    if (v31)
    {
      id v32 = objc_msgSend(v31, sel_longLongValue);
    }
    else
    {
      id v32 = 0;
    }
    if ((*(unsigned __int8 (**)(void))(*a2 + 288))() == 4)
    {
      unint64_t v33 = 0xE300000000000000;
      uint64_t v34 = 4271950;
    }
    else
    {
      char v35 = (*(uint64_t (**)(void))(*a2 + 296))();
      unint64_t v33 = 0xE300000000000000;
      uint64_t v34 = 7498084;
      switch(v36)
      {
        case 1:
          break;
        case 2:
          unint64_t v33 = 0xE700000000000000;
          uint64_t v34 = 0x6B6E696C6D7973;
          break;
        case 3:
          unint64_t v33 = 0xE500000000000000;
          uint64_t v34 = 0x7361696C61;
          break;
        default:
          if (v35) {
            uint64_t v34 = 6777712;
          }
          else {
            uint64_t v34 = 6516580;
          }
          break;
      }
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCDB1D0;
    strcpy((char *)(inited + 32), "operationType");
    *(_WORD *)(inited + 46) = -4864;
    uint64_t v38 = (*(uint64_t (**)(void))(*a2 + 176))();
    uint64_t v39 = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v38;
    *(void *)(inited + 56) = v40;
    *(void *)(inited + 72) = v39;
    *(void *)(inited + 80) = 0x657079546D657469;
    *(void *)(inited + 88) = 0xE800000000000000;
    *(void *)(inited + 96) = v34;
    *(void *)(inited + 104) = v33;
    uint64_t v41 = MEMORY[0x263F8E5C0];
    *(void *)(inited + 120) = v39;
    *(void *)(inited + 128) = 0x657A69536D657469;
    *(void *)(inited + 136) = 0xE800000000000000;
    *(void *)(inited + 144) = v26;
    *(void *)(inited + 168) = v41;
    strcpy((char *)(inited + 176), "childItemCount");
    *(unsigned char *)(inited + 191) = -18;
    *(void *)(inited + 192) = v32;
    *(void *)(inited + 216) = v41;
    strcpy((char *)(inited + 224), "commonFolder");
    *(unsigned char *)(inited + 237) = 0;
    *(_WORD *)(inited + 238) = -5120;
    *(void *)(inited + 240) = v51;
    *(void *)(inited + 248) = v16;
    *(void *)(inited + 264) = v39;
    strcpy((char *)(inited + 272), "connectionType");
    *(unsigned char *)(inited + 287) = -18;
    if (qword_26B1930C8 != -1) {
      swift_once();
    }
    sub_24DCCA208();
    uint64_t v42 = v57;
    *(void *)(inited + 288) = v56;
    *(void *)(inited + 296) = v42;
    *(void *)(inited + 312) = v39;
    *(void *)(inited + 320) = 0xD000000000000011;
    *(void *)(inited + 328) = 0x800000024DD009D0;
    if (__OFSUB__(v55, v54))
    {
      __break(1u);
      JUMPOUT(0x24D9149FCLL);
    }
    uint64_t v43 = MEMORY[0x263F8D6C8];
    *(void *)(inited + 336) = v55 - v54;
    *(void *)(inited + 360) = v43;
    *(void *)(inited + 368) = 0x6E6F73616572;
    *(void *)(inited + 376) = 0xE600000000000000;
    uint64_t v44 = a2[17];
    *(void *)(inited + 408) = MEMORY[0x263F8D9D0];
    *(void *)(inited + 384) = v44;
    unint64_t v45 = sub_24D428D08(inited);
    sub_24DC32710(v45);
    swift_bridgeObjectRelease();
    uint64_t v46 = (void *)sub_24DCC9558();
    swift_bridgeObjectRelease();
    uint64_t v47 = v52;
    int v48 = (void *)sub_24DCC8818();
    id v49 = v50;
    objc_msgSend(v50, sel_postReportWithCategory_type_payload_error_, 1, 1, v46, v48);

    (*(void (**)(void *, uint64_t))(*v53 + 320))(a2, v47);
  }
}

uint64_t sub_24D914A0C(uint64_t a1)
{
  uint64_t v4 = (void *)*v1;
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v161 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8FC8();
  uint64_t v183 = *(void *)(v9 - 8);
  v184 = (void *)v9;
  MEMORY[0x270FA5388](v9);
  v182 = (char *)&v161 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v177 = (uint64_t)&v161 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v181 = (uint64_t)&v161 - v14;
  uint64_t v178 = type metadata accessor for Signpost(0);
  uint64_t v174 = *(void *)(v178 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v178);
  uint64_t v175 = v16;
  uint64_t v176 = (uint64_t)&v161 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v18 = (char *)&v161 - v17;
  uint64_t v19 = sub_24DCC9078();
  uint64_t v20 = *(void *)(v19 - 8);
  unint64_t v185 = v19;
  uint64_t v186 = v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v180 = (char *)&v161 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v179 = (char *)&v161 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v161 - v26;
  uint64_t v28 = (uint64_t (*)(uint64_t))v4[30];
  uint64_t v188 = (uint64_t)v1;
  if (v28(v25)) {
    return 2;
  }
  v168 = v8;
  uint64_t v171 = v18;
  uint64_t v170 = v6;
  uint64_t v169 = v5;
  id v173 = v4;
  if (*(unsigned char *)(a1 + 112) != 1)
  {
LABEL_66:
    sub_24DCCA978();
    __break(1u);
    JUMPOUT(0x24D916144);
  }
  uint64_t v31 = *(void **)(a1 + 96);
  id v30 = *(id *)(a1 + 104);
  swift_retain();
  uint64_t v172 = sub_24D982AC4();
  uint64_t v33 = v32;
  uint64_t v34 = v188;
  uint64_t v35 = (*(uint64_t (**)(void))(*(void *)v188 + 224))();
  uint64_t v36 = (*(uint64_t (**)(void))(*(void *)v34 + 216))();
  uint64_t v37 = v34;
  uint64_t v29 = a1;
  uint64_t v38 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 488))(v36, v37);
  uint64_t v187 = v2;
  if (v2)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    sub_24D3E380C(v31, v30, 1);
    return v29;
  }
  uint64_t v41 = v38;
  uint64_t v167 = v33;
  uint64_t v163 = v35;
  uint64_t v164 = v36;
  uint64_t v166 = v31;
  id v165 = v30;
  if (v39)
  {
    id v77 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    unint64_t v78 = v167;
    swift_bridgeObjectRetain();
    sub_24D917E18(v41, 1);
    v79 = sub_24DCC9068();
    os_log_type_t v80 = sub_24DCCA118();
    if (!os_log_type_enabled(v79, v80))
    {
      uint64_t v29 = 2;
      swift_bridgeObjectRelease_n();
      sub_24D917E24(v41, 1);
      sub_24D917E24(v41, 1);
      swift_release();
      swift_release();
      sub_24D3E380C(v166, v165, 1);

      (*(void (**)(char *, unint64_t))(v186 + 8))(v27, v185);
      return v29;
    }
    uint64_t v81 = swift_slowAlloc();
    v184 = (void *)swift_slowAlloc();
    uint64_t v188 = swift_slowAlloc();
    uint64_t v190 = v188;
    *(_DWORD *)uint64_t v81 = 136446466;
    swift_bridgeObjectRetain();
    uint64_t v189 = sub_24D418FB4(v172, v78, &v190);
    sub_24DCCA428();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v81 + 12) = 2112;
    uint64_t v189 = v41;
    uint64_t v82 = type metadata accessor for JobLock.BlockedRuleError();
    swift_getWitnessTable();
    id v83 = sub_24DBA2828(v82);
    uint64_t v189 = (uint64_t)v83;
    sub_24DCCA428();
    uint64_t v84 = v184;
    void *v184 = v83;
    sub_24D917E24(v41, 1);
    sub_24D917E24(v41, 1);
    _os_log_impl(&dword_24D3D0000, v79, v80, "🔏  job locked out of execution %{public}s by destination rules %@", (uint8_t *)v81, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v84, -1, -1);
    uint64_t v85 = v188;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v85, -1, -1);
    MEMORY[0x25332B030](v81, -1, -1);

    swift_release();
    swift_release();
    sub_24D3E380C(v166, v165, 1);
    (*(void (**)(char *, unint64_t))(v186 + 8))(v27, v185);
    return 2;
  }
  uint64_t v29 = a1;
  *(void *)(a1 + 24) = v38;
  swift_release();
  uint64_t v42 = *(void *)(a1 + 24);
  uint64_t v43 = v163;
  uint64_t v44 = v188;
  if (v42)
  {
    uint64_t v45 = swift_allocObject();
    swift_weakInit();
    uint64_t v46 = swift_allocObject();
    uint64_t v47 = v173;
    *(void *)(v46 + 16) = v173[10];
    *(_OWORD *)(v46 + 24) = *(_OWORD *)(v47 + 11);
    *(void *)(v46 + 40) = v47[13];
    *(void *)(v46 + 48) = v45;
    uint64_t v48 = *(void *)(v42 + 80);
    *(void *)(v42 + 80) = sub_24D917ABC;
    *(void *)(v42 + 88) = v46;
    sub_24D43DD74(v48);
  }
  uint64_t v49 = v187;
  uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 496))(v43, v44);
  uint64_t v187 = v49;
  id v30 = v165;
  uint64_t v31 = v166;
  if (v49) {
    goto LABEL_5;
  }
  uint64_t v52 = v50;
  if (v51)
  {
    id v86 = (id)fpfs_current_or_default_log();
    v87 = v179;
    sub_24DCC9088();
    unint64_t v88 = v167;
    swift_bridgeObjectRetain();
    sub_24D917E18(v52, 1);
    uint64_t v89 = sub_24DCC9068();
    os_log_type_t v90 = sub_24DCCA118();
    uint64_t v91 = a1;
    if (os_log_type_enabled(v89, v90))
    {
      uint64_t v92 = swift_slowAlloc();
      v184 = (void *)swift_slowAlloc();
      uint64_t v188 = swift_slowAlloc();
      uint64_t v190 = v188;
      *(_DWORD *)uint64_t v92 = 136446466;
      swift_bridgeObjectRetain();
      uint64_t v189 = sub_24D418FB4(v172, v88, &v190);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v92 + 12) = 2112;
      uint64_t v189 = v52;
      uint64_t v93 = type metadata accessor for JobLock.BlockedRuleError();
      swift_getWitnessTable();
      id v94 = sub_24DBA2828(v93);
      uint64_t v189 = (uint64_t)v94;
      sub_24DCCA428();
      uint64_t v95 = v184;
      void *v184 = v94;
      sub_24D917E24(v52, 1);
      sub_24D917E24(v52, 1);
      _os_log_impl(&dword_24D3D0000, v89, v90, "🔏  job locked out of execution %{public}s by source rules %@", (uint8_t *)v92, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v95, -1, -1);
      uint64_t v96 = v188;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v96, -1, -1);
      MEMORY[0x25332B030](v92, -1, -1);

      swift_release();
      swift_release();
      sub_24D3E380C(v166, v165, 1);
    }
    else
    {
      swift_release();
      swift_release();
      sub_24D3E380C(v166, v165, 1);
      swift_bridgeObjectRelease_n();
      sub_24D917E24(v52, 1);
      sub_24D917E24(v52, 1);
    }
    (*(void (**)(char *, unint64_t))(v186 + 8))(v87, v185);
    *(void *)(v91 + 24) = 0;
    swift_release();
    return 2;
  }
  uint64_t v53 = a1;
  *(void *)(a1 + 32) = v50;
  swift_release();
  uint64_t v54 = *(void *)(a1 + 32);
  uint64_t v55 = v173;
  uint64_t v56 = v188;
  if (v54)
  {
    uint64_t v57 = swift_allocObject();
    swift_weakInit();
    uint64_t v58 = swift_allocObject();
    *(void *)(v58 + 16) = v55[10];
    *(_OWORD *)(v58 + 24) = *(_OWORD *)(v55 + 11);
    *(void *)(v58 + 40) = v55[13];
    *(void *)(v58 + 48) = v57;
    uint64_t v59 = *(void *)(v54 + 80);
    *(void *)(v54 + 80) = sub_24D917ABC;
    *(void *)(v54 + 88) = v58;
    sub_24D43DD74(v59);
  }
  id v60 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
  id v61 = (id)fpfs_current_or_default_log();
  unint64_t v62 = v180;
  sub_24DCC9088();
  swift_bridgeObjectRetain_n();
  uint64_t v63 = (char *)v60;
  uint64_t v64 = sub_24DCC9068();
  os_log_type_t v65 = sub_24DCCA118();
  BOOL v66 = os_log_type_enabled(v64, v65);
  v179 = v63;
  if (v66)
  {
    uint64_t v67 = swift_slowAlloc();
    os_log_t v161 = v64;
    uint64_t v68 = v67;
    uint64_t v69 = (void *)swift_slowAlloc();
    uint64_t v162 = swift_slowAlloc();
    uint64_t v190 = v162;
    *(_DWORD *)uint64_t v68 = 138412546;
    id v70 = objc_msgSend(v63, sel_fork);
    uint64_t v189 = (uint64_t)v70;
    sub_24DCCA428();
    *uint64_t v69 = v70;

    os_log_type_t v71 = v65;
    unint64_t v72 = v167;
    *(_WORD *)(v68 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v73 = v172;
    uint64_t v189 = sub_24D418FB4(v172, v72, &v190);
    sub_24DCCA428();
    swift_bridgeObjectRelease_n();
    os_log_t v74 = v161;
    _os_log_impl(&dword_24D3D0000, v161, v71, "%@ ▶️  executing %{public}s", (uint8_t *)v68, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v69, -1, -1);
    uint64_t v75 = v162;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v75, -1, -1);
    MEMORY[0x25332B030](v68, -1, -1);

    (*(void (**)(char *, unint64_t))(v186 + 8))(v180, v185);
    uint64_t v76 = v166;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, unint64_t))(v186 + 8))(v62, v185);
    uint64_t v76 = v166;
    uint64_t v73 = v172;
  }
  uint64_t v98 = *(void **)(v53 + 96);
  uint64_t v97 = *(void **)(v53 + 104);
  *(void *)(v53 + 96) = v76;
  *(void *)(v53 + 104) = 0;
  char v99 = *(unsigned char *)(v53 + 112);
  *(unsigned char *)(v53 + 112) = 2;
  swift_retain();
  sub_24D3E380C(v98, v97, v99);
  *(void *)(v53 + 16) = sub_24D9140DC(v53, v73, v167);
  uint64_t v100 = swift_release();
  uint64_t v101 = (*(uint64_t (**)(uint64_t))(*(void *)v56 + 232))(v100);
  dispatch_group_enter(v101);

  uint64_t v102 = (*(uint64_t (**)(uint64_t))(*(void *)v56 + 360))(v53);
  if ((*(uint64_t (**)(uint64_t))(*(void *)v53 + 432))(v102))
  {
    uint64_t v103 = (*(uint64_t (**)(void))(*(void *)v56 + 192))();
    uint64_t v104 = *(void *)(v103 + 24);
    BOOL v105 = __OFADD__(v104, 1);
    uint64_t v106 = v104 + 1;
    if (v105)
    {
LABEL_62:
      __break(1u);
LABEL_63:
      __break(1u);
      goto LABEL_64;
    }
    *(void *)(v103 + 24) = v106;
    swift_release();
  }
  uint64_t v107 = *(void *)(v53 + 16);
  if (v107)
  {
    uint64_t v108 = *(unsigned __int8 *)(v107 + 24);
    BOOL v109 = sub_24D8903D0();
    uint64_t v110 = "Scheduler: Async Job execution (no limit)";
    uint64_t v111 = 41;
    if (v109)
    {
      switch(v108)
      {
        case 1:
          goto LABEL_50;
        case 2:
          goto LABEL_53;
        case 3:
          goto LABEL_52;
        case 4:
          goto LABEL_55;
        case 5:
          goto LABEL_54;
        case 6:
          goto LABEL_57;
        case 7:
          goto LABEL_56;
        case 8:
          goto LABEL_58;
        case 9:
          break;
        default:
          goto LABEL_51;
      }
    }
    else
    {
      switch(v108)
      {
        case 1:
LABEL_51:
          uint64_t v110 = "Scheduler: Async Job execution (FS fetch content)";
          uint64_t v111 = 49;
          break;
        case 2:
LABEL_52:
          uint64_t v110 = "Scheduler: Async Job execution (FP content update)";
          uint64_t v111 = 50;
          break;
        case 3:
LABEL_53:
          uint64_t v110 = "Scheduler: Async Job execution (FS content update)";
          uint64_t v111 = 50;
          break;
        case 4:
LABEL_54:
          uint64_t v110 = "Scheduler: Async Job execution (FP metadata only update)";
          uint64_t v111 = 56;
          break;
        case 5:
LABEL_55:
          uint64_t v110 = "Scheduler: Async Job execution (FS metadata only update)";
          uint64_t v111 = 56;
          break;
        case 6:
LABEL_56:
          uint64_t v110 = "Scheduler: Async Job execution (FP generic jobs)";
          uint64_t v111 = 48;
          break;
        case 7:
LABEL_57:
          uint64_t v110 = "Scheduler: Async Job execution (FS generic jobs)";
          uint64_t v111 = 48;
          break;
        case 8:
LABEL_58:
          uint64_t v110 = "Scheduler: Async Job execution (background downloads)";
          uint64_t v111 = 53;
          break;
        case 9:
          break;
        default:
LABEL_50:
          uint64_t v110 = "Scheduler: Async Job execution (FP fetch content)";
          uint64_t v111 = 49;
          break;
      }
    }
  }
  else
  {
    sub_24D8903D0();
    uint64_t v110 = "Scheduler: Async Job execution (no limit)";
    uint64_t v111 = 41;
  }
  uint64_t v186 = v111;
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v112 = (void *)qword_26B1A23B0;
  uint64_t v114 = v183;
  uint64_t v113 = v184;
  uint64_t v115 = v181;
  (*(void (**)(uint64_t, uint64_t, uint64_t, void *))(v183 + 56))(v181, 1, 1, v184);
  uint64_t v190 = 0x2065747563657865;
  unint64_t v191 = 0xE800000000000000;
  sub_24DCC9968();
  uint64_t v180 = (char *)v190;
  unint64_t v185 = v191;
  uint64_t v116 = v115;
  uint64_t v117 = v177;
  sub_24D409D24(v116, v177);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void *))(v114 + 48))(v117, 1, v113) == 1)
  {
    id v118 = v112;
    id v119 = v182;
    sub_24DCC8FA8();
    sub_24D917AE4(v117);
  }
  else
  {
    id v119 = v182;
    (*(void (**)(char *, uint64_t, void *))(v183 + 32))(v182, v117, v184);
  }
  uint64_t v120 = v183;
  uint64_t v121 = (uint64_t)v171;
  (*(void (**)(char *, char *, void *))(v183 + 16))(v171, v119, v184);
  uint64_t v122 = v178;
  *(void *)(v121 + *(int *)(v178 + 20)) = v112;
  uint64_t v123 = v121 + *(int *)(v122 + 24);
  uint64_t v124 = v186;
  *(void *)uint64_t v123 = v110;
  *(void *)(v123 + 8) = v124;
  *(unsigned char *)(v123 + 16) = 2;
  id v125 = v112;
  unint64_t v126 = v185;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v127 = swift_allocObject();
  *(_OWORD *)(v127 + 16) = xmmword_24DCCECE0;
  *(void *)(v127 + 56) = MEMORY[0x263F8D310];
  *(void *)(v127 + 64) = sub_24D3F7B98();
  *(void *)(v127 + 32) = v180;
  *(void *)(v127 + 40) = v126;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void *))(v120 + 8))(v182, v184);
  swift_bridgeObjectRelease();
  sub_24D917AE4(v181);
  uint64_t v129 = v173[10];
  unint64_t v128 = v173[11];
  v130 = (void *)v173[12];
  uint64_t v131 = v173[13];
  uint64_t v190 = v129;
  unint64_t v191 = v128;
  uint64_t v192 = v130;
  uint64_t v193 = v131;
  type metadata accessor for ConcreteJobResult();
  uint64_t v186 = sub_24D907530();
  id v132 = v168;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v134 = v133;
  uint64_t v135 = v170 + 8;
  char v136 = *(uint64_t (**)(char *, uint64_t))(v170 + 8);
  uint64_t v137 = v136(v132, v169);
  double v138 = v134 * 1000000000.0;
  if ((~COERCE__INT64(v134 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_60;
  }
  uint64_t v139 = v188;
  if (v138 <= -9.22337204e18)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  if (v138 >= 9.22337204e18)
  {
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  uint64_t v183 = v131;
  v184 = v130;
  unint64_t v185 = v128;
  v182 = (char *)v136;
  uint64_t v170 = v135;
  uint64_t v140 = (uint64_t)v138;
  *(void *)(v53 + 40) = (uint64_t)v138;
  *(unsigned char *)(v53 + 48) = 0;
  uint64_t v141 = (*(uint64_t (**)(uint64_t))(*(void *)v139 + 184))(v137);
  if (v141)
  {
    (*(void (**)(uint64_t, uint64_t))(*(void *)v141 + 144))(v139, v53);
    swift_release();
  }
  uint64_t v142 = v176;
  sub_24D917B44((uint64_t)v171, v176);
  unint64_t v143 = (*(unsigned __int8 *)(v174 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80);
  unint64_t v144 = (v175 + v143 + 7) & 0xFFFFFFFFFFFFFFF8;
  v145 = (void *)swift_allocObject();
  unint64_t v146 = v185;
  v145[2] = v129;
  v145[3] = v146;
  uint64_t v147 = v183;
  v145[4] = v184;
  v145[5] = v147;
  uint64_t v148 = v172;
  v145[6] = v53;
  v145[7] = v148;
  uint64_t v149 = v179;
  v145[8] = v167;
  v145[9] = v149;
  v145[10] = v139;
  sub_24D917CD4(v142, (uint64_t)v145 + v143);
  *(void *)((char *)v145 + v144) = v140;
  uint64_t v150 = v186;
  *(void *)((char *)v145 + ((v144 + 15) & 0xFFFFFFFFFFFFFFF8)) = v186;
  v151 = *(void (**)(uint64_t, void *, uint64_t, void (*)(NSObject *, uint64_t, uint64_t, void *), void *))(*(void *)v53 + 504);
  id v152 = v149;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v153 = v166;
  v151(v139, v166, v150, sub_24D917D38, v145);
  uint64_t v154 = swift_release();
  if (*(unsigned char *)(v53 + 112) != 2)
  {
    (*(void (**)(uint64_t))(*(void *)v139 + 304))(v154);
    swift_release();
    swift_release();
    swift_release();
    uint64_t v29 = 1;
    sub_24D3E380C(v153, v165, 1);

    sub_24D3FBB10((uint64_t)v171, type metadata accessor for Signpost);
    return v29;
  }
  id v155 = v168;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v157 = v156;
  ((void (*)(char *, uint64_t))v182)(v155, v169);
  double v158 = v157 * 1000000000.0;
  uint64_t v159 = v187;
  id v160 = v165;
  if ((~COERCE__INT64(v157 * 1000000000.0) & 0x7FF0000000000000) == 0) {
    goto LABEL_63;
  }
  if (v158 <= -9.22337204e18)
  {
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
  if (v158 >= 9.22337204e18)
  {
LABEL_65:
    __break(1u);
    goto LABEL_66;
  }
  uint64_t v29 = v139;
  sub_24D912448(v53);
  sub_24D3FBB10((uint64_t)v171, type metadata accessor for Signpost);
  swift_release();
  swift_release();
  sub_24D3E380C(v153, v160, 1);
  swift_release();

  if (!v159) {
    return 0;
  }
  return v29;
}

uint64_t sub_24D916194()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 304))(result);
    return swift_release();
  }
  return result;
}

void sub_24D916214(NSObject *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, unint64_t a7, void *a8, uint64_t a9, unint64_t a10, uint64_t a11, uint64_t a12)
{
  id v156 = a8;
  v151 = a1;
  uint64_t v152 = a6;
  uint64_t v154 = a3;
  uint64_t v148 = a2;
  uint64_t v146 = sub_24DCC8408();
  uint64_t v144 = *(void *)(v146 - 8);
  MEMORY[0x270FA5388](v146);
  v145 = (char *)&v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v150 = sub_24DCCA7D8();
  uint64_t v147 = *(void *)(v150 - 8);
  MEMORY[0x270FA5388](v150);
  uint64_t v17 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24DCC82A8();
  uint64_t v149 = *(void (***)(void, void))(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_24DCC8CE8();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_24DCC9078();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v157 = v25;
  uint64_t v158 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v153 = (char *)&v140 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v32 = (char *)&v140 - v31;
  uint64_t v155 = a5;
  if (*(unsigned char *)(a5 + 112) != 2)
  {
    id v45 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_bridgeObjectRetain();
    id v46 = a4;
    swift_bridgeObjectRetain();
    id v47 = a4;
    unint64_t v48 = a7;
    uint64_t v49 = sub_24DCC9068();
    os_log_type_t v50 = sub_24DCCA138();
    BOOL v51 = os_log_type_enabled(v49, v50);
    uint64_t v52 = a4;
    unint64_t v143 = v48;
    if (v51)
    {
      uint64_t v53 = swift_slowAlloc();
      uint64_t v54 = swift_slowAlloc();
      uint64_t v159 = v54;
      *(_DWORD *)uint64_t v53 = 136446466;
      swift_bridgeObjectRetain();
      v162[0] = (id)sub_24D418FB4(v152, v48, &v159);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v53 + 12) = 2080;
      if (v52)
      {
        swift_getErrorValue();
        id v55 = sub_24DBA2828(v161);
        id v56 = objc_msgSend(v55, sel_description);

        uint64_t v57 = sub_24DCC97E8();
        unint64_t v59 = v58;
      }
      else
      {
        unint64_t v59 = 0xE300000000000000;
        uint64_t v57 = 7104878;
      }
      v162[0] = (id)sub_24D418FB4(v57, v59, &v159);
      sub_24DCCA428();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_24D3D0000, v49, v50, "%{public}s completion was called twice, second time with %s", (uint8_t *)v53, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v54, -1, -1);
      MEMORY[0x25332B030](v53, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v158 + 8))(v32, v157);
    if (!v52)
    {
LABEL_69:
      uint64_t v139 = v143;
      swift_bridgeObjectRetain();
      sub_24DA86BA8((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/sync-logic/Database+JobExecution.swift", 111, 2, 257, v152, v139);
    }
    uint64_t v159 = (uint64_t)v52;
    id v72 = v52;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    type metadata accessor for PQLSqliteError(0);
    if (swift_dynamicCast())
    {

      return;
    }
LABEL_68:

    goto LABEL_69;
  }
  uint64_t v142 = v30;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v34 = v33;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  double v35 = v34 * 1000000000.0;
  if ((~COERCE__INT64(v34 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_62;
  }
  if (v35 <= -9.22337204e18)
  {
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  if (v35 >= 9.22337204e18)
  {
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
LABEL_65:
    __break(1u);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
  unint64_t v143 = a10;
  uint64_t v36 = (uint64_t)v35;
  uint64_t v37 = v155;
  (*(void (**)(uint64_t))(*(void *)a9 + 368))(v155);
  uint64_t v140 = (void *)a12;
  uint64_t v152 = v36;
  uint64_t v141 = a11;
  if (!a4)
  {
    uint64_t v150 = a9;
    id v60 = v151;
    if (v151)
    {
      id v61 = (uint64_t (*)(uint64_t))*((void *)v151->isa + 11);
      uint64_t v62 = swift_retain();
      uint64_t v63 = v61(v62);
      uint64_t v65 = v152;
      uint64_t v66 = v154;
      char v67 = 0;
      switch(v68)
      {
        case 1:
          break;
        case 2:
          sub_24D512AEC(v63, v64, 2);
          goto LABEL_44;
        case 3:
          if (v63 | v64) {
            goto LABEL_44;
          }
          char v67 = 1;
          uint64_t v63 = (uint64_t)v60;
          id v60 = 0;
          break;
        default:
LABEL_44:
          char v67 = 0;
          uint64_t v63 = 256;
          break;
      }
    }
    else
    {
      char v67 = 4;
      uint64_t v63 = 1;
      uint64_t v65 = v152;
      uint64_t v66 = v154;
    }
    uint64_t v113 = *(void **)(v37 + 96);
    uint64_t v112 = *(void **)(v37 + 104);
    *(void *)(v37 + 96) = v63;
    *(void *)(v37 + 104) = v60;
    char v114 = *(unsigned char *)(v37 + 112);
    *(unsigned char *)(v37 + 112) = v67;
    sub_24D3E380C(v113, v112, v114);
    *(void *)(v37 + 40) = 0;
    *(unsigned char *)(v37 + 48) = 1;
    uint64_t v115 = sub_24D982AC4();
    unint64_t v117 = v116;
    id v118 = (id)fpfs_current_or_default_log();
    uint64_t v119 = sub_24DCC9088();
    int v120 = (*(uint64_t (**)(uint64_t))(*(void *)v37 + 424))(v119);
    swift_bridgeObjectRetain_n();
    id v121 = v156;
    swift_bridgeObjectRetain();
    id v122 = v121;
    uint64_t v123 = sub_24DCC9068();
    if (os_log_type_enabled(v123, (os_log_type_t)v120))
    {
      LODWORD(v154) = v120;
      uint64_t v124 = v66;
      uint64_t v125 = swift_slowAlloc();
      unint64_t v126 = (void *)swift_slowAlloc();
      v151 = swift_slowAlloc();
      v162[0] = v151;
      *(_DWORD *)uint64_t v125 = 138413058;
      id v127 = objc_msgSend(v122, sel_adopt);
      uint64_t v159 = (uint64_t)v127;
      sub_24DCCA428();
      uint64_t v149 = (void (**)(void, void))v126;
      *unint64_t v126 = v127;

      *(_WORD *)(v125 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v159 = sub_24D418FB4(v115, v117, (uint64_t *)v162);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v125 + 22) = 2082;
      if (v124)
      {
        uint64_t v159 = 0x20209286E220;
        unint64_t v160 = 0xA600000000000000;
        swift_bridgeObjectRetain();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v128 = v159;
        unint64_t v129 = v160;
      }
      else
      {
        uint64_t v128 = 0;
        unint64_t v129 = 0xE000000000000000;
      }
      uint64_t v138 = v143;
      uint64_t v130 = v141;
      uint64_t v159 = sub_24D418FB4(v128, v129, (uint64_t *)v162);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v125 + 32) = 2082;
      uint64_t v65 = v152;
      uint64_t v131 = v152 - v130;
      if (__OFSUB__(v152, v130)) {
        goto LABEL_65;
      }
      uint64_t v43 = v150;
      os_log_type_t v132 = v154;
      if (v131 < 0)
      {
        BOOL v99 = __OFSUB__(0, v131);
        uint64_t v131 = -v131;
        if (v99)
        {
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
        unint64_t v134 = 0xE100000000000000;
        uint64_t v133 = 45;
      }
      else
      {
        uint64_t v133 = 0;
        unint64_t v134 = 0xE000000000000000;
      }
      sub_24D9AC74C(v131);
      uint64_t v159 = v133;
      unint64_t v160 = v134;
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v159 = sub_24D418FB4(v159, v160, (uint64_t *)v162);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v123, v132, "%@ ✅  done executing %{public}s%{public}s [duration %{public}s]", (uint8_t *)v125, 0x2Au);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      uint64_t v135 = v149;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v135, -1, -1);
      char v136 = v151;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v136, -1, -1);
      MEMORY[0x25332B030](v125, -1, -1);

      (*(void (**)(char *, uint64_t))(v158 + 8))(v153, v157);
      uint64_t v37 = v155;
      uint64_t v108 = v140;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v158 + 8))(v153, v157);
      uint64_t v138 = v143;
      uint64_t v108 = v140;
      uint64_t v43 = v150;
    }
    sub_24D912448(v37);
    goto LABEL_57;
  }
  id v38 = a4;
  sub_24D914290((uint64_t)a4, (void *)v37, a11, v36);
  uint64_t v159 = (uint64_t)a4;
  id v39 = a4;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  char v41 = swift_dynamicCast();
  uint64_t v42 = a4;
  uint64_t v43 = a9;
  uint64_t v153 = (char *)v40;
  if (v41)
  {
    ((void (**)(char *, uint64_t))v149)[1](v20, v18);

    uint64_t v44 = v154;
LABEL_25:
    id v74 = v42;
    swift_willThrow();
    uint64_t v75 = v42;
    goto LABEL_26;
  }

  uint64_t v159 = (uint64_t)a4;
  id v69 = a4;
  uint64_t v70 = v150;
  int v71 = swift_dynamicCast();
  uint64_t v44 = v154;
  if (v71)
  {
    (*(void (**)(char *, uint64_t))(v147 + 8))(v17, v70);
LABEL_24:

    goto LABEL_25;
  }

  uint64_t v159 = (uint64_t)v42;
  id v73 = v42;
  type metadata accessor for NSFileProviderError(0);
  if (swift_dynamicCast())
  {

    goto LABEL_24;
  }

  uint64_t v159 = (uint64_t)v42;
  id v109 = v42;
  uint64_t v110 = v145;
  uint64_t v111 = v146;
  if (swift_dynamicCast())
  {
    (*(void (**)(char *, uint64_t))(v144 + 8))(v110, v111);
    goto LABEL_24;
  }

  (*(void (**)(void *, void, const char *, uint64_t, uint64_t))(*(void *)a9 + 464))(v42, 0, "execute(_:)", 11, 2);
  uint64_t v75 = 0;
LABEL_26:
  uint64_t v76 = *(void **)(v37 + 96);
  id v77 = *(void **)(v37 + 104);
  *(void *)(v37 + 96) = v75;
  *(void *)(v37 + 104) = 0;
  char v78 = *(unsigned char *)(v37 + 112);
  *(unsigned char *)(v37 + 112) = 3;
  id v79 = v75;
  sub_24D3E380C(v76, v77, v78);
  *(void *)(v37 + 40) = 0;
  *(unsigned char *)(v37 + 48) = 1;
  uint64_t v154 = sub_24D982AC4();
  unint64_t v81 = v80;
  id v82 = (id)fpfs_current_or_default_log();
  uint64_t v83 = v142;
  sub_24DCC9088();
  swift_bridgeObjectRetain_n();
  id v84 = v156;
  swift_bridgeObjectRetain();
  id v85 = v84;
  id v86 = sub_24DCC9068();
  int v87 = sub_24DCCA128();
  if (!os_log_type_enabled(v86, (os_log_type_t)v87))
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v83, v157);
    goto LABEL_38;
  }
  v151 = v86;
  LODWORD(v147) = v87;
  uint64_t v150 = (uint64_t)v42;
  uint64_t v88 = v44;
  uint64_t v89 = swift_slowAlloc();
  os_log_type_t v90 = v85;
  uint64_t v91 = (void *)swift_slowAlloc();
  uint64_t v149 = (void (**)(void, void))swift_slowAlloc();
  v162[0] = v149;
  *(_DWORD *)uint64_t v89 = 138413058;
  id v92 = objc_msgSend(v90, sel_adopt);
  uint64_t v159 = (uint64_t)v92;
  sub_24DCCA428();
  uint64_t v146 = (uint64_t)v91;
  *uint64_t v91 = v92;
  id v85 = v90;

  *(_WORD *)(v89 + 12) = 2082;
  swift_bridgeObjectRetain();
  uint64_t v159 = sub_24D418FB4(v154, v81, (uint64_t *)v162);
  sub_24DCCA428();
  swift_bridgeObjectRelease_n();
  *(_WORD *)(v89 + 22) = 2082;
  if (v88)
  {
    uint64_t v159 = 0x20209286E220;
    unint64_t v160 = 0xA600000000000000;
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t v93 = v159;
    unint64_t v94 = v160;
  }
  else
  {
    uint64_t v93 = 0;
    unint64_t v94 = 0xE000000000000000;
  }
  uint64_t v159 = sub_24D418FB4(v93, v94, (uint64_t *)v162);
  sub_24DCCA428();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v89 + 32) = 2082;
  uint64_t v95 = v151;
  uint64_t v96 = v152 - v141;
  if (__OFSUB__(v152, v141)) {
    goto LABEL_64;
  }
  uint64_t v42 = (void *)v150;
  if (v96 < 0)
  {
    BOOL v99 = __OFSUB__(0, v96);
    uint64_t v96 = v141 - v152;
    if (!v99)
    {
      unint64_t v98 = 0xE100000000000000;
      uint64_t v97 = 45;
      goto LABEL_37;
    }
    goto LABEL_66;
  }
  uint64_t v97 = 0;
  unint64_t v98 = 0xE000000000000000;
LABEL_37:
  sub_24D9AC74C(v96);
  uint64_t v159 = v97;
  unint64_t v160 = v98;
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v159 = sub_24D418FB4(v159, v160, (uint64_t *)v162);
  sub_24DCCA428();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_24D3D0000, v95, (os_log_type_t)v147, "%@ ‼️  done executing %{public}s%{public}s [duration %{public}s]", (uint8_t *)v89, 0x2Au);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
  uint64_t v100 = v146;
  swift_arrayDestroy();
  MEMORY[0x25332B030](v100, -1, -1);
  uint64_t v101 = v149;
  swift_arrayDestroy();
  MEMORY[0x25332B030](v101, -1, -1);
  MEMORY[0x25332B030](v89, -1, -1);

  (*(void (**)(uint64_t, uint64_t))(v158 + 8))(v142, v157);
  uint64_t v37 = v155;
LABEL_38:
  uint64_t v159 = (uint64_t)v75;
  id v102 = v75;
  int v103 = swift_dynamicCast();
  uint64_t v65 = v152;
  if (!v103)
  {
    sub_24D912448(v37);
    sub_24D912BF0((void *)v37, v75);
    uint64_t v108 = v140;
    sub_24D917E30(v37, (uint64_t)v140);

    uint64_t v138 = v143;
LABEL_57:
    uint64_t v137 = sub_24D9126EC(v108, v65);
    (*(void (**)(uint64_t))(*(void *)v43 + 304))(v137);
    uint64_t v104 = (void *)v37;
    id v105 = v156;
    uint64_t v106 = v43;
    uint64_t v107 = v138;
    goto LABEL_58;
  }

  uint64_t v104 = (void *)v37;
  id v105 = v85;
  uint64_t v106 = a9;
  uint64_t v107 = v143;
LABEL_58:
  sub_24D9174F4(v104, v105, v106, v107);
}

uint64_t sub_24D9174F4(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24DCC9078();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (id)fpfs_current_or_default_log();
  uint64_t v13 = sub_24DCC9088();
  os_log_type_t v14 = (*(unsigned __int8 (**)(uint64_t))(*a1 + 424))(v13);
  uint64_t v15 = a2;
  uint64_t v16 = sub_24DCC9068();
  if (os_log_type_enabled(v16, v14))
  {
    uint64_t v35 = a4;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = v8;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v32 = v9;
    uint64_t v20 = (void *)v19;
    *(_DWORD *)uint64_t v18 = 138412290;
    uint64_t v34 = a3;
    id v21 = [v15 leave];
    id v36 = v21;
    a3 = v34;
    sub_24DCCA428();
    *uint64_t v20 = v21;

    _os_log_impl(&dword_24D3D0000, v16, v14, "%@", v18, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    uint64_t v22 = v20;
    uint64_t v9 = v32;
    MEMORY[0x25332B030](v22, -1, -1);
    uint64_t v23 = v18;
    uint64_t v8 = v33;
    MEMORY[0x25332B030](v23, -1, -1);
  }
  else
  {

    uint64_t v16 = v15;
  }

  uint64_t v24 = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)a3 + 232))(v24);
  dispatch_group_leave(v25);

  a1[4] = 0;
  swift_release();
  a1[3] = 0;
  uint64_t v26 = swift_release();
  if (((*(uint64_t (**)(uint64_t))(*a1 + 432))(v26) & 1) == 0) {
    goto LABEL_7;
  }
  uint64_t result = (*(uint64_t (**)(void))(*(void *)a3 + 192))();
  uint64_t v28 = *(void *)(result + 24);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (!v29)
  {
    *(void *)(result + 24) = v30;
    swift_release();
LABEL_7:
    a1[2] = 0;
    swift_release();
    sub_24DCCA2C8();
    type metadata accessor for Signpost(0);
    return sub_24DCC8F98();
  }
  __break(1u);
  return result;
}

uint64_t sub_24D917868()
{
  return sub_24DCC9AF8();
}

void sub_24D917930(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = (void *)MEMORY[0x253329610]();
  sub_24D917998(v3, a2);
}

uint64_t sub_24D917998(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    uint64_t v3 = a1 & 0x7FFFFFFFFFFFFFFFLL;
    uint64_t v4 = *(void (**)(uint64_t))(*(void *)a2 + 176);
    uint64_t v5 = swift_retain();
    v4(v5);
    sub_24D912448(v3);
    swift_release();
  }
  else
  {
    uint64_t v2 = swift_retain();
    sub_24D912448(v2);
  }
  return swift_release();
}

void sub_24D917A68(uint64_t *a1)
{
  sub_24D917930(a1, *(void *)(v1 + 16));
}

uint64_t sub_24D917A84()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_24D917AC0()
{
  return sub_24D916194();
}

uint64_t sub_24D917AE4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D917B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Signpost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D917BA8()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_24DCC8FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D917CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Signpost(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24D917D38(NSObject *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v11 = (*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D916214(a1, a2, a3, a4, *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), *(void **)(v4 + 72), *(void *)(v4 + 80), v4 + v10, *(void *)(v4 + v11), *(void *)(v4 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D917E18(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_24D917E24(uint64_t a1, char a2)
{
  if (a2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_24D917E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = *v4;
  uint64_t v8 = *(void *)(*v4 + 104);
  uint64_t v40 = *(void *)(*v4 + 88);
  uint64_t v41 = v8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v38 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v39 = (char *)&v35 - v10;
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v43 = *(void *)(v11 - 8);
  uint64_t v44 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v42 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v7 + 96);
  uint64_t v14 = *(void *)(v7 + 80);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v35 - v18;
  if ((*(unsigned char *)(a1 + 138) & 3) != 0)
  {
    uint64_t v36 = a2;
    uint64_t result = sub_24D580444((void *)a1, 0);
    if (!v3 && (result & 1) != 0)
    {
      if (sub_24D8903D0())
      {
        uint64_t v21 = v40;
        uint64_t v20 = v41;
        uint64_t v45 = v14;
        uint64_t v46 = v40;
        uint64_t v47 = v13;
        uint64_t v48 = v41;
        id v39 = (char *)type metadata accessor for JobResult();
        uint64_t v45 = v14;
        uint64_t v46 = v21;
        uint64_t v47 = v13;
        uint64_t v48 = v20;
        type metadata accessor for DiskImport.ContinueDiskImport();
        sub_24DBB275C();
        uint64_t v22 = v42;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v24 = v23;
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v22, v44);
        double v25 = v24 * 1000000000.0;
        if ((~COERCE__INT64(v24 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v25 > -9.22337204e18)
          {
            if (v25 < 9.22337204e18)
            {
              uint64_t v26 = sub_24D732E04(v19, 0x2000000000000000, (uint64_t)v25, 0x10000);
              (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
              sub_24D85246C(v36, v26);
              return swift_release();
            }
            goto LABEL_20;
          }
        }
        else
        {
          __break(1u);
        }
        __break(1u);
      }
      else
      {
        uint64_t v28 = v40;
        uint64_t v27 = v41;
        uint64_t v45 = v14;
        uint64_t v46 = v40;
        uint64_t v47 = v13;
        uint64_t v48 = v41;
        type metadata accessor for JobResult();
        uint64_t v45 = v28;
        uint64_t v46 = v14;
        uint64_t v47 = v27;
        uint64_t v48 = v13;
        type metadata accessor for DiskImport.ContinueDiskImport();
        BOOL v29 = v39;
        sub_24DBB275C();
        uint64_t v30 = v42;
        sub_24DCC8CD8();
        sub_24DCC8C88();
        double v32 = v31;
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v30, v44);
        double v33 = v32 * 1000000000.0;
        if ((~COERCE__INT64(v32 * 1000000000.0) & 0x7FF0000000000000) != 0)
        {
          if (v33 > -9.22337204e18)
          {
            if (v33 < 9.22337204e18)
            {
              uint64_t v34 = sub_24D732E04(v29, 0x2000000000000000, (uint64_t)v33, 0x10000);
              (*(void (**)(char *, uint64_t))(v37 + 8))(v29, v38);
              sub_24D855694(v36, v34);
              return swift_release();
            }
LABEL_21:
            __break(1u);
            return result;
          }
          goto LABEL_19;
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
  }
  return result;
}

unint64_t sub_24D9182C0()
{
  unint64_t result = qword_26B194040;
  if (!qword_26B194040)
  {
    _s3__C4CodeOMa_1(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B194040);
  }
  return result;
}

uint64_t sub_24D918318()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D918358(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v58 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v57 = (char *)&v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  BOOL v51 = (void **)((char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v10);
  id v56 = (void **)((char *)&v51 - v12);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC93F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (void **)((char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v53 = a2;
  uint64_t v55 = *(void *)(a2 + 16);
  uint64_t v20 = *(void **)(v55 + 64);
  void *v19 = v20;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F0E0], v16);
  id v21 = v20;
  LOBYTE(v20) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v20)
  {
    uint64_t v54 = a4;
    uint64_t v23 = *(void *)(a1 + 16);
    char v24 = *(unsigned char *)(a1 + 24);
    uint64_t v26 = *(void *)(a1 + 128);
    uint64_t v25 = *(void *)(a1 + 136);
    sub_24D3FCF3C(a1 + *(int *)(v9 + 48), (uint64_t)&v15[*(int *)(v13 + 40)], (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    *(void *)uint64_t v15 = v23;
    v15[8] = v24;
    *((void *)v15 + 2) = v26;
    *((void *)v15 + 3) = v25;
    swift_bridgeObjectRetain_n();
    sub_24D415F74((uint64_t)v15, &qword_26B193EB0);
    sub_24DCC97E8();
    uint64_t v27 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    unsigned int v28 = objc_msgSend(v27, sel_fp_isiCloudDriveIdentifier);

    if (v28)
    {
      if (v26 == 0x746E656D75636F44 && v25 == 0xE900000000000073)
      {
        swift_bridgeObjectRelease();
LABEL_9:
        double v31 = v56;
        sub_24D415FD0(a1, (uint64_t)v56, (uint64_t *)&unk_26B199410);
        double v32 = v54;
        if (v54)
        {
          double v33 = (int *)v54;
        }
        else
        {
          uint64_t v34 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
          double v33 = sub_24DAB9E2C(v31, 1, 0, v34);
          swift_bridgeObjectRelease();
        }
        id v35 = v32;
        sub_24D415F74((uint64_t)v31, (uint64_t *)&unk_26B199410);
        uint64_t v36 = *(void *)(v55 + 32);
        char v37 = *(unsigned char *)(a1 + 24);
        uint64_t v59 = *(void *)(a1 + 16);
        char v60 = v37;
        BOOL v29 = *(void (**)(uint64_t *, uint64_t))(*(void *)v36 + 240);
        swift_retain();
        uint64_t v38 = (uint64_t)v57;
        uint64_t v39 = v61;
        v29(&v59, 1);
        if (v39)
        {

          swift_release();
          return (uint64_t)v29;
        }
        swift_release();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48))(v38, 1, v9) == 1)
        {

          sub_24D415F74(v38, (uint64_t *)&unk_26B196F40);
          return 0;
        }
        uint64_t v40 = v51;
        sub_24D91B0A4(v38, (uint64_t)v51);
        uint64_t v41 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
        uint64_t v42 = sub_24DAB9E2C(v40, 1, 0, v41);
        swift_bridgeObjectRelease();
        id v43 = sub_24D7C479C();
        uint64_t v44 = sub_24DCC97E8();
        uint64_t v46 = v45;
        if (v44 == sub_24DCC97E8() && v46 == v47)
        {

          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v48 = sub_24DCCAE28();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v48 & 1) == 0)
          {
            sub_24D415F74((uint64_t)v40, (uint64_t *)&unk_26B199410);

            return 0;
          }
        }
        sub_24D3FF314(v42, 1);
        uint64_t v49 = (void (*)(uint64_t *, uint64_t))objc_msgSend(self, sel_appLibraryFromContainerItem_documentsItem_, v42, v33);
        BOOL v29 = v49;
        if (!v49)
        {
          sub_24D415F74((uint64_t)v40, (uint64_t *)&unk_26B199410);

          return (uint64_t)v29;
        }
        unsigned __int8 v50 = objc_msgSend(v49, sel_isValidAppLibrary);

        sub_24D415F74((uint64_t)v40, (uint64_t *)&unk_26B199410);
        if ((v50 & 1) == 0)
        {

          return 0;
        }
        return (uint64_t)v29;
      }
      char v30 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if (v30) {
        goto LABEL_9;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    return 0;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D9189C8(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  id v56 = a4;
  uint64_t v57 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v55 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  MEMORY[0x270FA5388](v8);
  unsigned __int8 v50 = (void **)((char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for VFSItem(0);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC93F8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (void **)((char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = *(void *)(a2 + 16);
  uint64_t v53 = a2;
  uint64_t v54 = v20;
  id v21 = *(void **)(v20 + 64);
  void *v19 = v21;
  (*(void (**)(void *, void, uint64_t))(v17 + 104))(v19, *MEMORY[0x263F8F0E0], v16);
  id v22 = v21;
  LOBYTE(v21) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v17 + 8))(v19, v16);
  if (v21)
  {
    uint64_t v24 = *(void *)(a1 + 16);
    char v25 = *(unsigned char *)(a1 + 24);
    uint64_t v27 = *(void *)(a1 + 32);
    uint64_t v26 = *(void *)(a1 + 40);
    sub_24D3FCF3C(a1 + *(int *)(v10 + 28), (uint64_t)&v15[*(int *)(v13 + 40)], (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    *(void *)uint64_t v15 = v24;
    v15[8] = v25;
    *((void *)v15 + 2) = v27;
    *((void *)v15 + 3) = v26;
    swift_bridgeObjectRetain_n();
    sub_24D415F74((uint64_t)v15, &qword_26B193EB0);
    sub_24DCC97E8();
    unsigned int v28 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    LODWORD(v24) = objc_msgSend(v28, sel_fp_isiCloudDriveIdentifier);

    if (v24)
    {
      if (v27 == 0x746E656D75636F44 && v26 == 0xE900000000000073)
      {
        swift_bridgeObjectRelease();
        uint64_t v29 = v60;
        char v30 = v56;
      }
      else
      {
        char v32 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        uint64_t v29 = v60;
        char v30 = v56;
        if ((v32 & 1) == 0) {
          return 0;
        }
      }
      sub_24D3FCF3C(a1, (uint64_t)v12, type metadata accessor for VFSItem);
      if (v30)
      {
        double v33 = v30;
      }
      else
      {
        uint64_t v34 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
        double v33 = sub_24D4077D0((uint64_t)v12, 1, 0, v34);
        swift_bridgeObjectRelease();
      }
      id v35 = v30;
      sub_24D3FC750((uint64_t)v12, type metadata accessor for VFSItem);
      uint64_t v36 = *(void *)(v54 + 32);
      char v37 = *(unsigned char *)(a1 + 24);
      uint64_t v58 = *(void *)(a1 + 16);
      char v59 = v37;
      double v31 = *(void (**)(uint64_t *, uint64_t))(*(void *)v36 + 240);
      swift_retain();
      uint64_t v38 = (uint64_t)v55;
      v31(&v58, 1);
      if (v29)
      {

        swift_release();
        return (uint64_t)v31;
      }
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v51 + 48))(v38, 1, v52) == 1)
      {

        sub_24D415F74(v38, (uint64_t *)&unk_26B196F40);
        return 0;
      }
      uint64_t v39 = v50;
      sub_24D91B0A4(v38, (uint64_t)v50);
      uint64_t v40 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
      uint64_t v41 = sub_24DAB9E2C(v39, 1, 0, v40);
      swift_bridgeObjectRelease();
      id v42 = sub_24D7C479C();
      uint64_t v43 = sub_24DCC97E8();
      uint64_t v45 = v44;
      if (v43 == sub_24DCC97E8() && v45 == v46)
      {

        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v47 = sub_24DCCAE28();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v47 & 1) == 0)
        {
          sub_24D415F74((uint64_t)v39, (uint64_t *)&unk_26B199410);

          return 0;
        }
      }
      sub_24D3FF314(v41, 1);
      char v48 = (void (*)(uint64_t *, uint64_t))objc_msgSend(self, sel_appLibraryFromContainerItem_documentsItem_, v41, v33);
      double v31 = v48;
      if (!v48)
      {
        sub_24D415F74((uint64_t)v39, (uint64_t *)&unk_26B199410);

        return (uint64_t)v31;
      }
      unsigned __int8 v49 = objc_msgSend(v48, sel_isValidAppLibrary);

      sub_24D415F74((uint64_t)v39, (uint64_t *)&unk_26B199410);
      if ((v49 & 1) == 0)
      {

        return 0;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    return (uint64_t)v31;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D919068(unint64_t a1)
{
  uint64_t v3 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v3;
  if (!isUniquelyReferenced_nonNull_bridgeObject || v3 < 0 || (v3 & 0x4000000000000000) != 0)
  {
    uint64_t v3 = sub_24DAFAFA0(v3);
    *uint64_t v1 = v3;
  }
  uint64_t v5 = v3 & 0xFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = v6 - 1 - a1;
    if (v8 >= 0)
    {
      uint64_t v9 = v5 + 8 * a1;
      uint64_t v10 = *(void *)(v9 + 32);
      memmove((void *)(v9 + 32), (const void *)(v9 + 40), 8 * v8);
      *(void *)(v5 + 16) = v7;
      sub_24DCC9C48();
      return v10;
    }
  }
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

void sub_24D91914C(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unint64_t v39 = a3;
  uint64_t v40 = a4;
  uint64_t v41 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB0);
  uint64_t v6 = v5 - 8;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v36[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v10 = v9 - 8;
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = &v36[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B195DA0);
  uint64_t v14 = v13 - 8;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v36[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = *(int *)(v14 + 56);
  uint64_t v18 = (uint64_t)&v16[v17];
  uint64_t v19 = a1 + v17;
  int v20 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v38 = *(void *)a1;
  *(void *)uint64_t v16 = v38;
  int v37 = v20;
  v16[8] = v20;
  sub_24D415FD0(a1 + v17, (uint64_t)&v16[v17], (uint64_t *)&unk_26B199410);
  sub_24D415F74(v18, (uint64_t *)&unk_26B199410);
  uint64_t v21 = (uint64_t)&v16[*(int *)(v14 + 56)];
  sub_24D415FD0(v19, v21, (uint64_t *)&unk_26B199410);
  sub_24D91B0A4(v21, (uint64_t)v12);
  uint64_t v22 = *((void *)v12 + 2);
  LOBYTE(v19) = v12[24];
  uint64_t v23 = *((void *)v12 + 16);
  uint64_t v24 = *((void *)v12 + 17);
  sub_24D3FCF3C((uint64_t)&v12[*(int *)(v10 + 56)], (uint64_t)&v8[*(int *)(v6 + 48)], (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  *(void *)uint64_t v8 = v22;
  v8[8] = v19;
  *((void *)v8 + 2) = v23;
  *((void *)v8 + 3) = v24;
  swift_bridgeObjectRetain_n();
  sub_24D415F74((uint64_t)v8, &qword_26B193EB0);
  if (v23 == 0x746E656D75636F44 && v24 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v26 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if ((v26 & 1) == 0)
    {
      uint64_t v27 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
      uint64_t v28 = v41;
      uint64_t v29 = sub_24DAB9E2C(v12, 1, 0, v27);
      swift_bridgeObjectRelease();
      uint64_t v30 = v42;
      uint64_t v31 = sub_24D919BA4(v29, v28, v38, v37, v39);
      goto LABEL_10;
    }
  }
  uint64_t v32 = v41;
  type metadata accessor for FPFileTree();
  swift_dynamicCastClassUnconditional();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  swift_retain();
  id v34 = objc_msgSend(Strong, sel_provider);

  if (!v34)
  {
    sub_24DCCA978();
    __break(1u);
    return;
  }
  swift_release();
  uint64_t v29 = (int *)objc_msgSend(v34, sel_identifier);

  uint64_t v30 = v42;
  uint64_t v31 = sub_24D918358((uint64_t)v12, v32, (uint64_t)v29, 0);
LABEL_10:
  uint64_t v35 = v31;
  sub_24D415F74((uint64_t)v12, (uint64_t *)&unk_26B199410);

  if (!v30) {
    uint64_t *v40 = v35;
  }
}

uint64_t sub_24D919530(void *a1, char a2, void *a3, unint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_24DCC9078();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v50 - v15;
  if (a2)
  {
    id v26 = a1;
    id v27 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    sub_24D4178BC(a1);
    id v28 = a3;
    sub_24D40B3C8(a4);
    sub_24D4178BC(a1);
    id v29 = v28;
    sub_24D40B3C8(a4);
    uint64_t v30 = sub_24DCC9068();
    os_log_type_t v31 = sub_24DCCA128();
    int v32 = v31;
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v54 = a5;
      uint64_t v34 = v33;
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v56 = (uint64_t)v29;
      uint64_t v57 = v52;
      *(_DWORD *)uint64_t v34 = 138412802;
      uint64_t v55 = v11;
      int v51 = v32;
      os_log_t v50 = v30;
      id v36 = v29;
      uint64_t v53 = v10;
      id v37 = v36;
      sub_24DCCA428();
      *uint64_t v35 = v29;

      *(_WORD *)(v34 + 12) = 2112;
      id v38 = a1;
      uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v56 = v39;
      sub_24DCCA428();
      v35[1] = v39;
      sub_24D4178C8(a1);
      sub_24D4178C8(a1);
      *(_WORD *)(v34 + 22) = 2082;
      sub_24D40B3C8(a4);
      unint64_t v40 = sub_24D3D865C(a4);
      unint64_t v42 = v41;
      sub_24D4170B0(a4);
      uint64_t v56 = sub_24D418FB4(v40, v42, &v57);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D4170B0(a4);
      sub_24D4170B0(a4);
      os_log_t v43 = v50;
      _os_log_impl(&dword_24D3D0000, v50, (os_log_type_t)v51, "[patchAppLibrary] Error while trying to find the container for: %@, error: %@ (request: %{public}s)", (uint8_t *)v34, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v35, -1, -1);
      uint64_t v44 = v52;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v44, -1, -1);
      MEMORY[0x25332B030](v34, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v16, v53);
    }
    else
    {

      sub_24D4178C8(a1);
      sub_24D4178C8(a1);
      sub_24D4170B0(a4);
      sub_24D4170B0(a4);

      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    }
    uint64_t v57 = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1907F8);
    return sub_24DCC9DC8();
  }
  else
  {
    uint64_t v55 = v11;
    id v17 = a1;
    id v18 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    sub_24D4178BC(a1);
    sub_24D40B3C8(a4);
    sub_24D4178BC(a1);
    sub_24D40B3C8(a4);
    uint64_t v19 = sub_24DCC9068();
    os_log_type_t v20 = sub_24DCCA118();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v54 = a5;
      uint64_t v21 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v57 = v52;
      *(_DWORD *)uint64_t v21 = 136446466;
      uint64_t v53 = v10;
      if (a1)
      {
        id v22 = objc_msgSend(v17, sel_description);
        uint64_t v23 = sub_24DCC97E8();
        unint64_t v25 = v24;
      }
      else
      {
        unint64_t v25 = 0xE500000000000000;
        uint64_t v23 = 0x3E6C696E3CLL;
      }
      uint64_t v56 = sub_24D418FB4(v23, v25, &v57);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D4178C8(a1);
      sub_24D4178C8(a1);
      *(_WORD *)(v21 + 12) = 2082;
      sub_24D40B3C8(a4);
      unint64_t v46 = sub_24D3D865C(a4);
      unint64_t v48 = v47;
      sub_24D4170B0(a4);
      uint64_t v56 = sub_24D418FB4(v46, v48, &v57);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D4170B0(a4);
      sub_24D4170B0(a4);
      _os_log_impl(&dword_24D3D0000, v19, v20, "[pathAppLibrary] Found possible container %{public}s (request: %{public}s)", (uint8_t *)v21, 0x16u);
      uint64_t v49 = v52;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v49, -1, -1);
      MEMORY[0x25332B030](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v53);
    }
    else
    {
      sub_24D4178C8(a1);
      sub_24D4178C8(a1);
      sub_24D4170B0(a4);
      sub_24D4170B0(a4);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v14, v10);
    }
    uint64_t v57 = (uint64_t)a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1907F8);
    return sub_24DCC9DD8();
  }
}

uint64_t sub_24D919BA4(void *a1, uint64_t a2, uint64_t a3, char a4, unint64_t a5)
{
  unint64_t v60 = a5;
  uint64_t v62 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1923D0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v57 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_24DCC9328();
  uint64_t v61 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v55 = (char *)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9398();
  uint64_t v58 = *(void *)(v11 - 8);
  uint64_t v59 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v56 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v53 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  int v51 = (void **)((char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = sub_24DCC93F8();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (void **)((char *)&v50 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v52 = a2;
  uint64_t v22 = *(void *)(a2 + 16);
  uint64_t v23 = *(void **)(v22 + 64);
  *uint64_t v21 = v23;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F8F0E0], v18);
  id v24 = v23;
  LOBYTE(v23) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v23)
  {
    if ((sub_24D409A60(a1) & 1) == 0) {
      return 0;
    }
    os_log_t v50 = a1;
    id v26 = *(void **)(v22 + 32);
    char v70 = a4;
    uint64_t v67 = 0x746E656D75636F44;
    unint64_t v68 = 0xE900000000000073;
    uint64_t v69 = v62;
    uint64_t v65 = 58;
    unint64_t v66 = 0xE100000000000000;
    uint64_t v63 = 47;
    unint64_t v64 = 0xE100000000000000;
    sub_24D3F0EB8();
    swift_retain();
    uint64_t v27 = sub_24DCCA478();
    uint64_t v67 = 0;
    LOBYTE(v68) = -1;
    id v28 = v26;
    uint64_t v29 = v71;
    uint64_t v31 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t *))(*(void *)v26 + 256))(&v69, v27, v30, &v67);
    if (v29)
    {
      swift_release();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v32 = v31;
      swift_release();
      swift_bridgeObjectRelease();
      if (*(void *)(v32 + 16))
      {
        uint64_t v33 = *(void *)(v32 + 32);
        char v34 = *(unsigned char *)(v32 + 40);
        swift_bridgeObjectRelease();
        uint64_t v35 = *(void *)(v22 + 32);
        uint64_t v67 = v33;
        LOBYTE(v68) = v34;
        id v36 = *(void (**)(uint64_t *, uint64_t))(*(void *)v35 + 240);
        swift_retain();
        v36(&v67, 1);
        swift_release();
        int v37 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v53 + 48))(v15, 1, v16);
        uint64_t v38 = v61;
        if (v37 != 1)
        {
          uint64_t v44 = (uint64_t)v15;
          uint64_t v45 = v51;
          sub_24D91B0A4(v44, (uint64_t)v51);
          unint64_t v46 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
          unint64_t v47 = sub_24DAB9E2C(v45, 0, 0, v46);
          swift_bridgeObjectRelease();
          id v48 = objc_msgSend(self, sel_appLibraryFromContainerItem_documentsItem_, v50, v47);
          id v28 = v48;
          if (v48)
          {
            unsigned __int8 v49 = objc_msgSend(v48, sel_isValidAppLibrary);

            sub_24D415F74((uint64_t)v45, (uint64_t *)&unk_26B199410);
            if ((v49 & 1) == 0)
            {

              return 0;
            }
          }
          else
          {
            sub_24D415F74((uint64_t)v45, (uint64_t *)&unk_26B199410);
          }
          return (uint64_t)v28;
        }
        sub_24D415F74((uint64_t)v15, (uint64_t *)&unk_26B196F40);
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v38 = v61;
      }
      qos_class_self();
      uint64_t v39 = (uint64_t)v57;
      sub_24DCC9308();
      uint64_t v40 = v54;
      int v41 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v39, 1, v54);
      uint64_t v42 = v62;
      if (v41 == 1)
      {
        (*(void (**)(char *, void, uint64_t))(v38 + 104))(v55, *MEMORY[0x263F8F090], v40);
        sub_24D415F74(v39, qword_26B1923D0);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v38 + 32))(v55, v39, v40);
      }
      uint64_t v43 = (uint64_t)v56;
      sub_24DCC9378();

      (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v43, v59);
      return 0;
    }
    return (uint64_t)v28;
  }
  __break(1u);
  return result;
}

id sub_24D91A2AC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v39 = (uint64_t)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (unsigned __int8 *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24DCC93F8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (uint64_t *)((char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v40 = a3;
  uint64_t v17 = *(void **)(*(void *)(a3 + 16) + 64);
  *uint64_t v16 = v17;
  (*(void (**)(void *, void, uint64_t))(v14 + 104))(v16, *MEMORY[0x263F8F0E0], v13);
  id v18 = v17;
  LOBYTE(v17) = sub_24DCC9418();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    id v19 = a1;
    sub_24D3F9CA0((uint64_t)v12);
    int v20 = *v12;
    sub_24D3FC750((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ItemMetadata);

    if (v20 != 1) {
      return v19;
    }
    id v21 = objc_msgSend(v19, sel_containerDisplayName);
    if (v21)
    {
      uint64_t v22 = v21;
      sub_24DCC97E8();
    }
    uint64_t v23 = sub_24DCC9908();
    swift_bridgeObjectRelease();
    if (v23 < 1) {
      return v19;
    }
    id v24 = objc_msgSend(v19, sel_filename);
    uint64_t v25 = sub_24DCC97E8();
    uint64_t v27 = v26;

    uint64_t v47 = v25;
    uint64_t v48 = v27;
    uint64_t v45 = 58;
    unint64_t v46 = 0xE100000000000000;
    uint64_t v43 = 47;
    unint64_t v44 = 0xE100000000000000;
    sub_24D3F0EB8();
    uint64_t v28 = sub_24DCCA478();
    uint64_t v30 = v29;
    swift_bridgeObjectRelease();
    if (v28 == 0x746E656D75636F44 && v30 == 0xE900000000000073)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v31 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if ((v31 & 1) == 0) {
        return v19;
      }
    }
    sub_24D415FD0(v42, (uint64_t)v7, (uint64_t *)&unk_26B196F40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v7, 1, v8) == 1)
    {
      sub_24D415F74((uint64_t)v7, (uint64_t *)&unk_26B196F40);
      return v19;
    }
    uint64_t v34 = v39;
    sub_24D91B0A4((uint64_t)v7, v39);
    type metadata accessor for FPFileTree();
    swift_dynamicCastClassUnconditional();
    Strong = (void *)swift_unknownObjectUnownedLoadStrong();
    swift_retain();
    id v36 = objc_msgSend(Strong, sel_provider);

    if (v36)
    {
      swift_release();
      id v37 = objc_msgSend(v36, sel_identifier);

      uint64_t v38 = v49;
      uint64_t v32 = sub_24D918358(v34, v40, (uint64_t)v37, v19);
      sub_24D415F74(v34, (uint64_t *)&unk_26B199410);

      if (v38 || v32) {
        return (id)v32;
      }
      return v19;
    }
  }
  else
  {
    __break(1u);
  }
  id result = (id)sub_24DCCA978();
  __break(1u);
  return result;
}

unint64_t sub_24D91A820(unint64_t a1)
{
  unint64_t v2 = a1;
  if (!a1) {
    goto LABEL_81;
  }
  unint64_t v3 = a1 >> 62;
  if (!(a1 >> 62))
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v5 = v4 - 3;
    if (v4 >= 3) {
      goto LABEL_4;
    }
LABEL_80:
    swift_bridgeObjectRelease();
LABEL_81:
    swift_bridgeObjectRetain();
    return v2;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_24DCCA9C8();
  unint64_t v5 = v4 - 3;
  if (v4 < 3) {
    goto LABEL_80;
  }
LABEL_4:
  unint64_t v6 = v4 - 1;
  unint64_t v7 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) != 0)
  {
    id v8 = (id)MEMORY[0x253328820](v6, v2);
  }
  else
  {
    if (v6 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_85:
      __break(1u);
      goto LABEL_86;
    }
    id v8 = *(id *)(v2 + 8 * v6 + 32);
  }
  uint64_t v9 = v8;
  uint64_t v10 = (uint64_t)objc_msgSend(v8, sel_providerID);

  sub_24DCC97E8();
  uint64_t v11 = sub_24DCC97B8();
  swift_bridgeObjectRelease();
  LODWORD(v9) = objc_msgSend((id)v11, sel_fp_isiCloudDriveIdentifier);

  if (!v9) {
    goto LABEL_80;
  }
  unint64_t v55 = v2;
  if (v3)
  {
    swift_bridgeObjectRetain();
    unint64_t v12 = sub_24DCCA9C8();
  }
  else
  {
    unint64_t v12 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v6 = v12 - 2;
  if (__OFSUB__(v12, 2)) {
    goto LABEL_85;
  }
  if (v7)
  {
LABEL_86:
    id v13 = (id)MEMORY[0x253328820](v6, v2);
    goto LABEL_16;
  }
  if ((v6 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_88;
  }
  if (v6 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_88:
    __break(1u);
    goto LABEL_89;
  }
  id v13 = *(id *)(v2 + 8 * v6 + 32);
LABEL_16:
  uint64_t v14 = v13;
  uint64_t v1 = &selRef_createIndexerWithExtension_enabled_error_;
  id v15 = objc_msgSend(v13, sel_filename);

  uint64_t v10 = sub_24DCC97E8();
  unint64_t v12 = v16;

  if (v10 == 0xD000000000000013)
  {
    uint64_t v11 = 0x800000024DCFC800;
    if (v12 == 0x800000024DCFC800)
    {
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
  }
  uint64_t v10 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  uint64_t v11 = v2;
  if (v10)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    if (!v3)
    {
      uint64_t v17 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      unint64_t v18 = v17 - 2;
      if (!__OFSUB__(v17, 2)) {
        goto LABEL_22;
      }
      goto LABEL_91;
    }
LABEL_89:
    swift_bridgeObjectRetain();
    uint64_t v51 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    unint64_t v18 = v51 - 2;
    if (!__OFSUB__(v51, 2))
    {
LABEL_22:

      unint64_t v2 = v55;
      uint64_t v4 = v55 >> 62;
      if (!(v55 >> 62))
      {
        unint64_t v5 = *(void *)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
        unint64_t v19 = v5 - 2;
        if (!__OFSUB__(v5, 2)) {
          goto LABEL_24;
        }
        goto LABEL_94;
      }
LABEL_92:
      swift_bridgeObjectRetain();
      unint64_t v5 = sub_24DCCA9C8();
      swift_bridgeObjectRelease();
      unint64_t v19 = v5 - 2;
      if (!__OFSUB__(v5, 2))
      {
LABEL_24:
        unint64_t v12 = v2 & 0xC000000000000001;
        if ((v2 & 0xC000000000000001) == 0)
        {
          if ((v19 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v19 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v20 = *(id *)(v2 + 8 * v19 + 32);
            goto LABEL_28;
          }
          __break(1u);
          goto LABEL_98;
        }
LABEL_95:
        id v20 = (id)MEMORY[0x253328820](v19, v2);
LABEL_28:
        unint64_t v5 = (unint64_t)v20;
        if (!v4)
        {
          uint64_t v4 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
          unint64_t v21 = v4 - 1;
          if (!__OFSUB__(v4, 1)) {
            goto LABEL_30;
          }
          goto LABEL_100;
        }
LABEL_98:
        swift_bridgeObjectRetain();
        uint64_t v4 = sub_24DCCA9C8();
        swift_bridgeObjectRelease();
        unint64_t v21 = v4 - 1;
        if (!__OFSUB__(v4, 1))
        {
LABEL_30:
          if (!v12)
          {
            if ((v21 & 0x8000000000000000) != 0)
            {
              __break(1u);
            }
            else if (v21 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              id v22 = *(id *)(v2 + 8 * v21 + 32);
LABEL_34:
              uint64_t v23 = v22;
              id v24 = objc_msgSend(v22, sel_itemIdentifier);

              objc_msgSend((id)v5, sel_setParentItemIdentifier_, v24);
              return v2;
            }
            __break(1u);
LABEL_104:
            swift_bridgeObjectRetain();
            uint64_t v52 = sub_24DCCA9C8();
            swift_bridgeObjectRelease();
            if (v52 < 4) {
              goto LABEL_105;
            }
            goto LABEL_37;
          }
LABEL_101:
          id v22 = (id)MEMORY[0x253328820](v21, v2);
          goto LABEL_34;
        }
LABEL_100:
        __break(1u);
        goto LABEL_101;
      }
LABEL_94:
      __break(1u);
      goto LABEL_95;
    }
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  if (v3) {
    goto LABEL_104;
  }
  if (*(uint64_t *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10) < 4) {
    goto LABEL_105;
  }
LABEL_37:
  unint64_t v25 = v4 - 2;
  if (v7)
  {
    id v26 = (id)MEMORY[0x253328820](v25, v2);
  }
  else
  {
    if (v25 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
LABEL_108:
      id v29 = (id)MEMORY[0x253328820](v5, v2);
      goto LABEL_44;
    }
    id v26 = *(id *)(v2 + 8 * v25 + 32);
  }
  uint64_t v27 = (uint64_t)v26;
  unsigned int v28 = objc_msgSend(v26, sel_isContainer);

  if (!v28) {
    goto LABEL_105;
  }
  if (v7) {
    goto LABEL_108;
  }
  if (v5 >= *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_110;
  }
  id v29 = *(id *)(v2 + 8 * v5 + 32);
LABEL_44:
  uint64_t v30 = v29;
  uint64_t v10 = 0xE900000000000073;
  uint64_t v11 = 0x746E656D75636F44;
  id v31 = [v29 v1[267]];

  uint64_t v27 = sub_24DCC97E8();
  uint64_t v33 = v32;

  if (v27 == 0x746E656D75636F44 && v33 == 0xE900000000000073)
  {
    swift_bridgeObjectRelease();
    goto LABEL_48;
  }
  uint64_t v27 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  if ((v27 & 1) == 0)
  {
LABEL_105:
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_48:
  if (!v3)
  {
    uint64_t v34 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v35 = v34 - 3;
    if (!__OFSUB__(v34, 3)) {
      goto LABEL_50;
    }
LABEL_112:
    __break(1u);
    goto LABEL_113;
  }
LABEL_110:
  swift_bridgeObjectRetain();
  uint64_t v34 = sub_24DCCA9C8();
  swift_bridgeObjectRelease();
  unint64_t v35 = v34 - 3;
  if (__OFSUB__(v34, 3)) {
    goto LABEL_112;
  }
LABEL_50:
  uint64_t v27 = sub_24D919068(v35);
  uint64_t v34 = v55;
  uint64_t v11 = v55 >> 62;
  if (!(v55 >> 62))
  {
    id v36 = *(char **)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v37 = v36 - 2;
    if (!__OFSUB__(v36, 2)) {
      goto LABEL_52;
    }
LABEL_115:
    __break(1u);
    goto LABEL_116;
  }
LABEL_113:
  swift_bridgeObjectRetain();
  id v36 = (char *)sub_24DCCA9C8();
  swift_bridgeObjectRelease();
  id v37 = v36 - 2;
  if (__OFSUB__(v36, 2)) {
    goto LABEL_115;
  }
LABEL_52:
  if ((v34 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v37 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v37 < *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v38 = (char *)*(id *)(v34 + 8 * (void)v37 + 32);
      goto LABEL_56;
    }
    __break(1u);
    goto LABEL_119;
  }
LABEL_116:
  uint64_t v38 = (char *)MEMORY[0x253328820](v37, v34);
LABEL_56:
  id v36 = v38;
  id v39 = objc_msgSend(self, sel_appLibraryFromContainerItem_documentsItem_, v38, v27);
  if (!v39)
  {
    swift_bridgeObjectRelease();

    return v2;
  }
  uint64_t v10 = (uint64_t)v39;
  swift_bridgeObjectRelease();
  if (v11)
  {
LABEL_119:
    swift_bridgeObjectRetain();
    uint64_t v53 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    BOOL v41 = __OFSUB__(v53, 2);
    unint64_t v2 = v53 - 2;
    if (!v41) {
      goto LABEL_59;
    }
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  uint64_t v40 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  BOOL v41 = __OFSUB__(v40, 2);
  unint64_t v2 = v40 - 2;
  if (v41) {
    goto LABEL_121;
  }
LABEL_59:
  uint64_t v10 = (uint64_t)(id)v10;
  if (!swift_isUniquelyReferenced_nonNull_bridgeObject() || v34 < 0 || (v34 & 0x4000000000000000) != 0)
  {
    uint64_t v34 = sub_24DAFAFA0(v34);
    unint64_t v55 = v34;
  }
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_122;
  }
  if (v2 >= *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_123:
    __break(1u);
    goto LABEL_124;
  }
  uint64_t v42 = *(void **)((v34 & 0xFFFFFFFFFFFFFF8) + 8 * v2 + 0x20);
  *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 8 * v2 + 0x20) = v10;

  sub_24DCC9C48();
  unint64_t v2 = v55;
  uint64_t v11 = v55 >> 62;
  if (!(v55 >> 62))
  {
    uint64_t v43 = *(char **)((v55 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v44 = v43 - 3;
    if (!__OFSUB__(v43, 3)) {
      goto LABEL_67;
    }
LABEL_126:
    __break(1u);
    goto LABEL_127;
  }
LABEL_124:
  swift_bridgeObjectRetain();
  uint64_t v43 = (char *)sub_24DCCA9C8();
  swift_bridgeObjectRelease();
  unint64_t v44 = v43 - 3;
  if (__OFSUB__(v43, 3)) {
    goto LABEL_126;
  }
LABEL_67:
  unint64_t v3 = v2 & 0xC000000000000001;
  if ((v2 & 0xC000000000000001) == 0)
  {
    if (((unint64_t)v44 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if ((unint64_t)v44 < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      uint64_t v45 = (char *)*(id *)(v2 + 8 * (void)v44 + 32);
      goto LABEL_71;
    }
    __break(1u);
    goto LABEL_130;
  }
LABEL_127:
  uint64_t v45 = (char *)MEMORY[0x253328820](v44, v2);
LABEL_71:
  uint64_t v43 = v45;
  if (!v11)
  {
    uint64_t v46 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t result = v46 - 2;
    if (!__OFSUB__(v46, 2)) {
      goto LABEL_73;
    }
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
LABEL_130:
  swift_bridgeObjectRetain();
  uint64_t v54 = sub_24DCCA9C8();
  swift_bridgeObjectRelease();
  unint64_t result = v54 - 2;
  if (__OFSUB__(v54, 2)) {
    goto LABEL_132;
  }
LABEL_73:
  if (v3)
  {
LABEL_133:
    id v48 = (id)MEMORY[0x253328820](result, v2);
    goto LABEL_77;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v48 = *(id *)(v2 + 8 * result + 32);
LABEL_77:
    uint64_t v49 = v48;
    id v50 = objc_msgSend(v48, sel_itemIdentifier);

    objc_msgSend(v43, sel_setParentItemIdentifier_, v50);
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D91B0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D91B10C(uint64_t result, void (*a2)(uint64_t *, uint64_t *), uint64_t a3, unint64_t a4)
{
  uint64_t v12 = result;
  if (a4)
  {
    unint64_t v5 = a4;
    while (1)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      uint64_t v8 = v5 & ~(1 << v7);
      if (((1 << v7) & v5) == 0) {
        uint64_t v8 = v5;
      }
      BOOL v9 = v7 >= 0x40;
      uint64_t v10 = v7 >= 0x40 ? 0 : 1 << v7;
      if (!v9) {
        unint64_t v5 = v8;
      }
      uint64_t v11 = v10;
      a2(&v12, &v11);
      if (v4) {
        break;
      }
      if (!v5) {
        return v12;
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24D91B1B4(void *a1)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194920);
  uint64_t v10 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v4 = (char *)&v11[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FBE8);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v11[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9587EC();
  sub_24DCCB0D8();
  sub_24DCCACD8();
  if (!v1)
  {
    sub_24DCCAC28();
    __swift_project_boxed_opaque_existential_1(v11, v11[3]);
    sub_24D502B78();
    sub_24DCCB0D8();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v4, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_24D91B3D8@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_24D91B3EC()
{
  return 0x6E6F697469736F70;
}

uint64_t sub_24D91B404@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E6F697469736F70 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24D91B49C()
{
  return 0;
}

uint64_t sub_24D91B4A8@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t sub_24D91B4B8(uint64_t a1)
{
  unint64_t v2 = sub_24D9587EC();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D91B4F4(uint64_t a1)
{
  unint64_t v2 = sub_24D9587EC();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D91B530(void *a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24D91B580(a1);
  return v2;
}

uint64_t sub_24D91B580(void *a1)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FBF8);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9587EC();
  swift_retain();
  sub_24DCCB0B8();
  if (v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    type metadata accessor for PaginatedContinuation();
    swift_deallocPartialClassInstance();
  }
  else
  {
    *(void *)(v1 + 16) = sub_24DCCAB88();
    swift_release();
    sub_24DCCAAB8();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v1;
}

uint64_t type metadata accessor for PaginatedContinuation()
{
  return self;
}

uint64_t sub_24D91B7A0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D91B810()
{
  return 979789423;
}

uint64_t sub_24D91B880(uint64_t a1, uint64_t a2)
{
  uint64_t v22 = a1;
  uint64_t v21 = *(void *)(*(void *)v2 + 728);
  uint64_t v4 = type metadata accessor for SnapshotItem();
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  BOOL v9 = (char *)&v21 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v7);
  id v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  id v15 = (char *)&v21 - v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v9, v4);
  uint64_t v17 = *(void **)(v2 + qword_26B1992E8);
  type metadata accessor for SnapshotItemObject();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v4);
  uint64_t v18 = sub_24D97CD54((uint64_t)v13);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemIDObject();
  id v19 = v17;
  id v20 = sub_24D5874D8(v22);
  objc_msgSend(v19, sel_setObject_forKey_, v18, v20, v21);

  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v4);
}

void sub_24D91BB90(uint64_t a1)
{
  uint64_t v3 = *(void **)(v1 + qword_26B1992E8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemIDObject();
  id v4 = v3;
  id v5 = sub_24D5874D8(a1);
  objc_msgSend(v4, sel_removeObjectForKey_, v5);
}

uint64_t sub_24D91BC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = *(void **)(v2 + qword_26B1992E8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemIDObject();
  id v6 = v5;
  id v7 = sub_24D5874D8(a1);
  uint64_t v8 = (char *)objc_msgSend(v6, sel_objectForKey_, v7);

  if (v8)
  {
    BOOL v9 = &v8[*(void *)(*(void *)v8 + 96)];
    uint64_t v10 = type metadata accessor for SnapshotItem();
    uint64_t v17 = *(void *)(v10 - 8);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 16))(a2, v9, v10);
    swift_release();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56);
    uint64_t v12 = a2;
    uint64_t v13 = 0;
    uint64_t v14 = v10;
  }
  else
  {
    uint64_t v15 = type metadata accessor for SnapshotItem();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
    uint64_t v14 = v15;
    uint64_t v12 = a2;
    uint64_t v13 = 1;
  }

  return v11(v12, v13, 1, v14);
}

id sub_24D91BE9C()
{
  return objc_msgSend(*(id *)(v0 + qword_26B1992E8), sel_removeAllObjects);
}

char *sub_24D91BEB4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v56 = a1;
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v4 + 744);
  uint64_t v57 = *(void *)(v4 + 728);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v51 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v52 = (char *)v44 - v6;
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v55 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v44 - v14;
  uint64_t v16 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v54 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v3[4]) {
    return 0;
  }
  uint64_t v50 = v4;
  v44[1] = v2;
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v46 = (char *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v15, 1, 1, v7);
  id aBlock = 0;
  unint64_t v60 = 0xE000000000000000;
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v19 = v60;
  id v47 = aBlock;
  sub_24D409D24((uint64_t)v15, (uint64_t)v13);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  id v48 = v15;
  uint64_t v49 = v5;
  if (v20 == 1)
  {
    uint64_t v21 = v46;
    uint64_t v22 = v46;
    uint64_t v23 = v55;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
    id v24 = v21;
  }
  else
  {
    uint64_t v23 = v55;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v13, v7);
    id v24 = v46;
  }
  unint64_t v25 = v54;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v54, v23, v7);
  uint64_t v45 = *(int *)(v16 + 20);
  *(void *)&v25[v45] = v24;
  id v26 = &v25[*(int *)(v16 + 24)];
  *(void *)id v26 = "SQLDB: Lookup FS recursive properties";
  *((void *)v26 + 1) = 37;
  uint64_t v46 = v26;
  v26[16] = 2;
  uint64_t v27 = v24;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  unint64_t v28 = v19;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_24DCCECE0;
  *(void *)(v29 + 56) = MEMORY[0x263F8D310];
  *(void *)(v29 + 64) = sub_24D3F7B98();
  *(void *)(v29 + 32) = v47;
  *(void *)(v29 + 40) = v28;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v55, v7);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v48, &qword_26B1990B0);
  uint64_t v30 = *(void **)((char *)v3 + qword_26B1A2590);
  uint64_t v32 = v52;
  uint64_t v31 = v53;
  uint64_t v33 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v56, AssociatedTypeWitness);
  unint64_t v34 = (*(unsigned __int8 *)(v31 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v35 = (char *)swift_allocObject();
  *((void *)v35 + 2) = v57;
  uint64_t v36 = v50;
  uint64_t v37 = v49;
  *((void *)v35 + 3) = *(void *)(v50 + 736);
  *((void *)v35 + 4) = v37;
  *((void *)v35 + 5) = *(void *)(v36 + 752);
  *((void *)v35 + 6) = v3;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v35[v34], v32, v33);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_24D9583D0;
  *(void *)(v38 + 24) = v35;
  uint64_t v63 = sub_24D3E3980;
  uint64_t v64 = v38;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v60 = 1107296256;
  uint64_t v61 = sub_24D3E38DC;
  uint64_t v62 = &block_descriptor_1118;
  id v39 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v40 = objc_msgSend(v30, sel_fetchSwift_error_, v39, &aBlock);
  _Block_release(v39);
  id v41 = aBlock;
  LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v39) {
    __break(1u);
  }
  if (v40)
  {
    if (objc_msgSend(v40, sel_next))
    {
      uint64_t v18 = (char *)objc_msgSend(v40, sel_unsignedLongAtIndex_, 0);
      objc_msgSend(v40, sel_unsignedLongAtIndex_, 1);
      objc_msgSend(v40, sel_unsignedLongAtIndex_, 2);
    }
    else
    {
      uint64_t v18 = 0;
    }

    sub_24DCCA2C8();
    uint64_t v42 = (uint64_t)v54;
    sub_24DCC8F98();
    sub_24D3FCA34(v42, type metadata accessor for Signpost);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v18 = v54;
    sub_24DCC8F98();
    sub_24D3FCA34((uint64_t)v18, type metadata accessor for Signpost);
    swift_release();
  }
  return v18;
}

char *sub_24D91C6E4(uint64_t a1)
{
  uint64_t v3 = v1;
  uint64_t v56 = a1;
  uint64_t v65 = *MEMORY[0x263EF8340];
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(v4 + 744);
  uint64_t v57 = *(void *)(v4 + 728);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v51 = *(void *)(v53 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v52 = (char *)v44 - v6;
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v55 = (char *)v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v44 - v14;
  uint64_t v16 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v54 = (char *)v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v3 + 32) != 1) {
    return 0;
  }
  uint64_t v50 = v4;
  v44[1] = v2;
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v46 = (char *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v15, 1, 1, v7);
  id aBlock = 0;
  unint64_t v60 = 0xE000000000000000;
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v18 = v60;
  id v47 = aBlock;
  sub_24D409D24((uint64_t)v15, (uint64_t)v13);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  id v48 = v15;
  uint64_t v49 = v5;
  if (v19 == 1)
  {
    int v20 = v46;
    uint64_t v21 = v46;
    uint64_t v22 = v55;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
    uint64_t v23 = v20;
  }
  else
  {
    uint64_t v22 = v55;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v55, v13, v7);
    uint64_t v23 = v46;
  }
  unint64_t v25 = v54;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v54, v22, v7);
  uint64_t v45 = *(int *)(v16 + 20);
  *(void *)&v25[v45] = v23;
  id v26 = &v25[*(int *)(v16 + 24)];
  *(void *)id v26 = "SQLDB: Lookup FP recursive properties";
  *((void *)v26 + 1) = 37;
  uint64_t v46 = v26;
  v26[16] = 2;
  uint64_t v27 = v23;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  unint64_t v28 = v18;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_24DCCECE0;
  *(void *)(v29 + 56) = MEMORY[0x263F8D310];
  *(void *)(v29 + 64) = sub_24D3F7B98();
  *(void *)(v29 + 32) = v47;
  *(void *)(v29 + 40) = v28;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v55, v7);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v48, &qword_26B1990B0);
  uint64_t v30 = *(void **)((char *)v3 + qword_26B1A2590);
  uint64_t v32 = v52;
  uint64_t v31 = v53;
  uint64_t v33 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v56, AssociatedTypeWitness);
  unint64_t v34 = (*(unsigned __int8 *)(v31 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80);
  unint64_t v35 = (char *)swift_allocObject();
  *((void *)v35 + 2) = v57;
  uint64_t v36 = v50;
  uint64_t v37 = v49;
  *((void *)v35 + 3) = *(void *)(v50 + 736);
  *((void *)v35 + 4) = v37;
  *((void *)v35 + 5) = *(void *)(v36 + 752);
  *((void *)v35 + 6) = v3;
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(&v35[v34], v32, v33);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_24D958388;
  *(void *)(v38 + 24) = v35;
  uint64_t v63 = sub_24D3E3980;
  uint64_t v64 = v38;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v60 = 1107296256;
  uint64_t v61 = sub_24D3E38DC;
  uint64_t v62 = &block_descriptor_1108;
  id v39 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v40 = objc_msgSend(v30, sel_fetchSwift_error_, v39, &aBlock);
  _Block_release(v39);
  id v41 = aBlock;
  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v32) {
    __break(1u);
  }
  if (v40)
  {
    if (objc_msgSend(v40, sel_next))
    {
      id v24 = (char *)objc_msgSend(v40, sel_unsignedLongAtIndex_, 0);
      objc_msgSend(v40, sel_unsignedLongAtIndex_, 1);
    }
    else
    {
      id v24 = 0;
    }

    sub_24DCCA2C8();
    uint64_t v42 = (uint64_t)v54;
    sub_24DCC8F98();
    sub_24D3FCA34(v42, type metadata accessor for Signpost);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    id v24 = v54;
    sub_24DCC8F98();
    sub_24D3FCA34((uint64_t)v24, type metadata accessor for Signpost);
    swift_release();
  }
  return v24;
}

unint64_t sub_24D91CEF8(uint64_t a1)
{
  uint64_t v52 = a1;
  uint64_t v61 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 728);
  uint64_t v54 = *(void *)(*(void *)v1 + 744);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v44 = *(void *)(v4 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v45 = (char *)&v41 - v5;
  uint64_t v6 = sub_24DCC8FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v51 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v50 = (uint64_t)&v41 - v13;
  uint64_t v14 = type metadata accessor for Signpost(0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[32] != 1) {
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLSnapshot.swift", 130, 2, 142);
  }
  uint64_t v43 = v15;
  uint64_t v48 = v2;
  uint64_t v49 = v1;
  uint64_t v46 = v4;
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  unint64_t v18 = (void *)qword_26B1A23B0;
  uint64_t v19 = v50;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v50, 1, 1, v6);
  id aBlock = 0;
  unint64_t v56 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v47 = v3;
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v20 = v56;
  id v42 = aBlock;
  sub_24D409D24(v19, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    id v21 = v18;
    uint64_t v22 = v51;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
  }
  else
  {
    uint64_t v22 = v51;
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v51, v12, v6);
  }
  uint64_t v23 = v43;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v17, v22, v6);
  uint64_t v43 = *(int *)(v23 + 20);
  *(void *)&v17[v43] = v18;
  id v24 = &v17[*(int *)(v23 + 24)];
  *(void *)id v24 = "SQLDB: Lookup Inherited Content Policy";
  *((void *)v24 + 1) = 38;
  v24[16] = 2;
  id v25 = v18;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24DCCECE0;
  *(void *)(v26 + 56) = MEMORY[0x263F8D310];
  *(void *)(v26 + 64) = sub_24D3F7B98();
  *(void *)(v26 + 32) = v42;
  *(void *)(v26 + 40) = v20;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v51, v6);
  swift_bridgeObjectRelease();
  sub_24D415F74(v50, &qword_26B1990B0);
  uint64_t v27 = v49;
  unint64_t v28 = *(void **)&v49[qword_26B1A2590];
  uint64_t v30 = v45;
  uint64_t v29 = v46;
  uint64_t v31 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v52, AssociatedTypeWitness);
  unint64_t v32 = (*(unsigned __int8 *)(v29 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v33 = (char *)swift_allocObject();
  uint64_t v34 = v48;
  *((void *)v33 + 2) = v47;
  uint64_t v35 = v54;
  *((void *)v33 + 3) = *(void *)(v34 + 736);
  *((void *)v33 + 4) = v35;
  *((void *)v33 + 5) = *(void *)(v34 + 752);
  *((void *)v33 + 6) = v27;
  (*(void (**)(char *, char *, uint64_t))(v29 + 32))(&v33[v32], v30, v31);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_24D958340;
  *(void *)(v36 + 24) = v33;
  uint64_t v59 = sub_24D3E3980;
  uint64_t v60 = v36;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v56 = 1107296256;
  uint64_t v57 = sub_24D3E38DC;
  uint64_t v58 = &block_descriptor_1098_0;
  uint64_t v37 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v38 = objc_msgSend(v28, sel_fetchSwift_error_, v37, &aBlock);
  _Block_release(v37);
  unint64_t v39 = (unint64_t)aBlock;
  LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v29) {
    __break(1u);
  }
  if (!v38) {
    goto LABEL_12;
  }
  if (!objc_msgSend(v38, sel_next))
  {

    unint64_t v39 = 0;
    goto LABEL_14;
  }
  unint64_t v39 = (unint64_t)objc_msgSend(v38, sel_unsignedLongAtIndex_, 0);

  if ((v39 & 0x8000000000000000) == 0)
  {
LABEL_14:
    sub_24DCCA2C8();
    sub_24DCC8F98();
    sub_24D3FCA34((uint64_t)v17, type metadata accessor for Signpost);
    swift_release();
    return v39;
  }
  __break(1u);
LABEL_12:
  sub_24DCC8828();

  swift_willThrow();
  sub_24DCCA2C8();
  sub_24DCC8F98();
  sub_24D3FCA34((uint64_t)v17, type metadata accessor for Signpost);
  swift_release();
  return v39;
}

id sub_24D91D6CC(uint64_t a1)
{
  uint64_t v50 = a1;
  uint64_t v60 = *MEMORY[0x263EF8340];
  uint64_t v3 = *(void *)v1;
  uint64_t v4 = *(void *)(*(void *)v1 + 728);
  uint64_t v53 = *(void *)(*(void *)v1 + 744);
  uint64_t v51 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v43 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v44 = (char *)&v40 - v6;
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v48 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v49 = (uint64_t)&v40 - v14;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v40 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v1[32] != 1) {
    sub_24DA8313C((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/implementations/file-system/persistence/SQLSnapshot.swift", 130, 2, 163);
  }
  uint64_t v45 = v5;
  uint64_t v46 = v3;
  uint64_t v47 = v1;
  uint64_t v40 = v2;
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  unint64_t v18 = (void *)qword_26B1A23B0;
  uint64_t v19 = v49;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v49, 1, 1, v7);
  id aBlock = 0;
  unint64_t v55 = 0xE000000000000000;
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v20 = v55;
  id v42 = aBlock;
  sub_24D409D24(v19, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    id v21 = v18;
    uint64_t v22 = v48;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
  }
  else
  {
    uint64_t v22 = v48;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v48, v13, v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v22, v7);
  uint64_t v41 = *(int *)(v15 + 20);
  *(void *)&v17[v41] = v18;
  uint64_t v23 = &v17[*(int *)(v15 + 24)];
  *(void *)uint64_t v23 = "SQLDB: Lookup Effective Content Policy";
  *((void *)v23 + 1) = 38;
  v23[16] = 2;
  id v24 = v18;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_24DCCECE0;
  *(void *)(v25 + 56) = MEMORY[0x263F8D310];
  *(void *)(v25 + 64) = sub_24D3F7B98();
  *(void *)(v25 + 32) = v42;
  *(void *)(v25 + 40) = v20;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v48, v7);
  swift_bridgeObjectRelease();
  sub_24D415F74(v49, &qword_26B1990B0);
  uint64_t v26 = v47;
  uint64_t v27 = *(void **)&v47[qword_26B1A2590];
  uint64_t v29 = v44;
  uint64_t v28 = v45;
  uint64_t v30 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v44, v50, AssociatedTypeWitness);
  unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v32 = (char *)swift_allocObject();
  *((void *)v32 + 2) = v51;
  uint64_t v33 = v46;
  uint64_t v34 = v53;
  *((void *)v32 + 3) = *(void *)(v46 + 736);
  *((void *)v32 + 4) = v34;
  *((void *)v32 + 5) = *(void *)(v33 + 752);
  *((void *)v32 + 6) = v26;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v32[v31], v29, v30);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_24D958314;
  *(void *)(v35 + 24) = v32;
  uint64_t v58 = sub_24D3E3980;
  uint64_t v59 = v35;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v55 = 1107296256;
  unint64_t v56 = sub_24D3E38DC;
  uint64_t v57 = &block_descriptor_1088;
  uint64_t v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v37 = objc_msgSend(v27, sel_fetchSwift_error_, v36, &aBlock);
  _Block_release(v36);
  id v38 = aBlock;
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28) {
    __break(1u);
  }
  if (v37)
  {
    if (objc_msgSend(v37, sel_next)) {
      id v38 = objc_msgSend(v37, sel_longAtIndex_, 0);
    }
    else {
      id v38 = 0;
    }

    sub_24DCCA2C8();
    sub_24DCC8F98();
    sub_24D3FCA34((uint64_t)v17, type metadata accessor for Signpost);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    sub_24DCC8F98();
    sub_24D3FCA34((uint64_t)v17, type metadata accessor for Signpost);
    swift_release();
  }
  return v38;
}

uint64_t sub_24D91DE9C(uint64_t a1)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24D954F48();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0x205443454C4553;
}

id sub_24D91E098(uint64_t a1)
{
  uint64_t v55 = a1;
  uint64_t v63 = *MEMORY[0x263EF8340];
  uint64_t v51 = *v1;
  uint64_t v2 = *(void *)(v51 + 744);
  uint64_t v52 = v1;
  uint64_t v3 = *(void *)(v51 + 728);
  uint64_t v56 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v46 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v47 = &v42[-v5];
  uint64_t v6 = sub_24DCC8FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v42[-v13];
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v53 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_26B1A23B0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v14, 1, 1, v6);
  id aBlock = 0;
  unint64_t v58 = 0xE000000000000000;
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v18 = v58;
  id v44 = aBlock;
  uint64_t v45 = v14;
  sub_24D409D24((uint64_t)v14, (uint64_t)v12);
  int v19 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  uint64_t v49 = AssociatedTypeWitness;
  uint64_t v50 = v3;
  if (v19 == 1)
  {
    id v20 = v17;
    id v21 = v54;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
  }
  else
  {
    id v21 = v54;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v54, v12, v6);
  }
  uint64_t v22 = v53;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v53, v21, v6);
  uint64_t v43 = *(int *)(v15 + 20);
  *(void *)&v22[v43] = v17;
  uint64_t v23 = &v22[*(int *)(v15 + 24)];
  *(void *)uint64_t v23 = "SQLDB: Lookup snapshot version";
  *((void *)v23 + 1) = 30;
  v23[16] = 2;
  id v24 = v17;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_24DCCECE0;
  *(void *)(v25 + 56) = MEMORY[0x263F8D310];
  *(void *)(v25 + 64) = sub_24D3F7B98();
  *(void *)(v25 + 32) = v44;
  *(void *)(v25 + 40) = v18;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v54, v6);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v45, &qword_26B1990B0);
  uint64_t v26 = v52;
  uint64_t v27 = *(void **)((char *)v52 + qword_26B1A2590);
  uint64_t v29 = v47;
  uint64_t v28 = v48;
  uint64_t v30 = v49;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v48 + 16))(v47, v55, v49);
  unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v32 = (char *)swift_allocObject();
  uint64_t v33 = v51;
  *((void *)v32 + 2) = v50;
  uint64_t v34 = v56;
  *((void *)v32 + 3) = *(void *)(v33 + 736);
  *((void *)v32 + 4) = v34;
  *((void *)v32 + 5) = *(void *)(v33 + 752);
  *((void *)v32 + 6) = v26;
  (*(void (**)(char *, unsigned char *, uint64_t))(v28 + 32))(&v32[v31], v29, v30);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_24D9582CC;
  *(void *)(v35 + 24) = v32;
  uint64_t v61 = sub_24D3E3980;
  uint64_t v62 = v35;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v58 = 1107296256;
  uint64_t v59 = sub_24D3E38DC;
  uint64_t v60 = &block_descriptor_1078_0;
  uint64_t v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v37 = objc_msgSend(v27, sel_fetchSwift_error_, v36, &aBlock);
  _Block_release(v36);
  id v38 = aBlock;
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v26) {
    __break(1u);
  }
  if (v37)
  {
    if (objc_msgSend(v37, sel_next)) {
      id v38 = objc_msgSend(v37, sel_unsignedLongAtIndex_, 0);
    }
    else {
      id v38 = 0;
    }

    sub_24DCCA2C8();
    uint64_t v40 = (uint64_t)v53;
    sub_24DCC8F98();
    sub_24D3FCA34(v40, type metadata accessor for Signpost);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v39 = (uint64_t)v53;
    sub_24DCC8F98();
    sub_24D3FCA34(v39, type metadata accessor for Signpost);
    swift_release();
  }
  return v38;
}

uint64_t sub_24D91E84C(uint64_t a1)
{
  uint64_t v55 = a1;
  uint64_t v63 = *MEMORY[0x263EF8340];
  uint64_t v51 = *v1;
  uint64_t v2 = *(void *)(v51 + 744);
  uint64_t v52 = v1;
  uint64_t v3 = *(void *)(v51 + 728);
  uint64_t v56 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v46 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v47 = &v42[-v5];
  uint64_t v6 = sub_24DCC8FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v54 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = &v42[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = &v42[-v13];
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v53 = &v42[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_26B1A23B0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v14, 1, 1, v6);
  id aBlock = 0;
  unint64_t v58 = 0xE000000000000000;
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v18 = v58;
  id v44 = aBlock;
  uint64_t v45 = v14;
  sub_24D409D24((uint64_t)v14, (uint64_t)v12);
  int v19 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6);
  uint64_t v49 = AssociatedTypeWitness;
  uint64_t v50 = v3;
  if (v19 == 1)
  {
    id v20 = v17;
    id v21 = v54;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
  }
  else
  {
    id v21 = v54;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 32))(v54, v12, v6);
  }
  uint64_t v22 = v53;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v7 + 16))(v53, v21, v6);
  uint64_t v43 = *(int *)(v15 + 20);
  *(void *)&v22[v43] = v17;
  uint64_t v23 = &v22[*(int *)(v15 + 24)];
  *(void *)uint64_t v23 = "SQLDB: [Recursive] Lookup is in pinned folder ";
  *((void *)v23 + 1) = 46;
  v23[16] = 2;
  id v24 = v17;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_24DCCECE0;
  *(void *)(v25 + 56) = MEMORY[0x263F8D310];
  *(void *)(v25 + 64) = sub_24D3F7B98();
  *(void *)(v25 + 32) = v44;
  *(void *)(v25 + 40) = v18;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v54, v6);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v45, &qword_26B1990B0);
  uint64_t v26 = v52;
  uint64_t v27 = *(void **)((char *)v52 + qword_26B1A2590);
  uint64_t v29 = v47;
  uint64_t v28 = v48;
  uint64_t v30 = v49;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v48 + 16))(v47, v55, v49);
  unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v32 = (char *)swift_allocObject();
  uint64_t v33 = v51;
  *((void *)v32 + 2) = v50;
  uint64_t v34 = v56;
  *((void *)v32 + 3) = *(void *)(v33 + 736);
  *((void *)v32 + 4) = v34;
  *((void *)v32 + 5) = *(void *)(v33 + 752);
  *((void *)v32 + 6) = v26;
  (*(void (**)(char *, unsigned char *, uint64_t))(v28 + 32))(&v32[v31], v29, v30);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_24D9587C4;
  *(void *)(v35 + 24) = v32;
  uint64_t v61 = sub_24D3E3980;
  uint64_t v62 = v35;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v58 = 1107296256;
  uint64_t v59 = sub_24D3E38DC;
  uint64_t v60 = &block_descriptor_1168;
  uint64_t v36 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v37 = objc_msgSend(v27, sel_fetchSwift_error_, v36, &aBlock);
  _Block_release(v36);
  id v38 = aBlock;
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v26) {
    __break(1u);
  }
  if (v37)
  {
    LOBYTE(v39) = objc_msgSend(v37, sel_next);

    sub_24DCCA2C8();
    uint64_t v40 = (uint64_t)v53;
    sub_24DCC8F98();
    sub_24D3FCA34(v40, type metadata accessor for Signpost);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v39 = (uint64_t)v53;
    sub_24DCC8F98();
    sub_24D3FCA34(v39, type metadata accessor for Signpost);
  }
  swift_release();
  return v39 & 1;
}

uint64_t sub_24D91EFD4(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D91F2CC(uint64_t a1, int a2)
{
  LODWORD(v72) = a2;
  uint64_t v73 = a1;
  uint64_t v80 = *MEMORY[0x263EF8340];
  uint64_t v64 = *(void **)v2;
  uint64_t v3 = v64[93];
  uint64_t v4 = v64[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v61 = *(void *)(v63 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v62 = (char *)&v56 - v5;
  uint64_t v67 = sub_24DCC8FC8();
  uint64_t v60 = *(void *)(v67 - 8);
  MEMORY[0x270FA5388](v67);
  uint64_t v59 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v57 = (uint64_t)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v66 = (uint64_t)&v56 - v10;
  uint64_t v58 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v58);
  uint64_t v65 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = v4;
  uint64_t v70 = v3;
  uint64_t v15 = type metadata accessor for SnapshotItem();
  uint64_t v16 = sub_24DCCA3F8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = (char *)&v56 - v19;
  uint64_t v21 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v56 - v22;
  if (v72)
  {
    uint64_t v72 = v2;
    sub_24D91BC98(v73, (uint64_t)v20);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v15) == 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
      if (qword_26B1990F8 != -1) {
        swift_once();
      }
      id v24 = (void *)qword_26B1A23B0;
      uint64_t v25 = v60;
      uint64_t v27 = v66;
      uint64_t v26 = v67;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v66, 1, 1, v67);
      id aBlock = 0;
      unint64_t v75 = 0xE000000000000000;
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      unint64_t v28 = v75;
      id v56 = aBlock;
      uint64_t v29 = v27;
      uint64_t v30 = v57;
      sub_24D409D24(v29, v57);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v30, 1, v26) == 1)
      {
        id v31 = v24;
        unint64_t v32 = v59;
        sub_24DCC8FA8();
        sub_24D415F74(v30, &qword_26B1990B0);
      }
      else
      {
        unint64_t v32 = v59;
        (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v59, v30, v26);
      }
      uint64_t v35 = v65;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v65, v32, v26);
      uint64_t v36 = v58;
      uint64_t v59 = (char *)*(int *)(v58 + 20);
      *(void *)&v59[(void)v35] = v24;
      id v37 = &v35[*(int *)(v36 + 24)];
      *(void *)id v37 = "SQLDB: Lookup is in pinned folder";
      *((void *)v37 + 1) = 33;
      v37[16] = 2;
      id v38 = v24;
      swift_bridgeObjectRetain();
      sub_24DCCA2D8();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
      uint64_t v39 = swift_allocObject();
      *(_OWORD *)(v39 + 16) = xmmword_24DCCECE0;
      *(void *)(v39 + 56) = MEMORY[0x263F8D310];
      *(void *)(v39 + 64) = sub_24D3F7B98();
      *(void *)(v39 + 32) = v56;
      *(void *)(v39 + 40) = v28;
      sub_24DCC8F88();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v32, v67);
      swift_bridgeObjectRelease();
      sub_24D415F74(v66, &qword_26B1990B0);
      uint64_t v40 = v72;
      uint64_t v41 = *(void **)(v72 + qword_26B1A2590);
      uint64_t v43 = v62;
      uint64_t v42 = v63;
      uint64_t v44 = AssociatedTypeWitness;
      (*(void (**)(char *, uint64_t, uint64_t))(v63 + 16))(v62, v73, AssociatedTypeWitness);
      unint64_t v45 = (*(unsigned __int8 *)(v42 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
      uint64_t v46 = (char *)swift_allocObject();
      *((void *)v46 + 2) = v68;
      uint64_t v47 = v64;
      uint64_t v48 = v70;
      *((void *)v46 + 3) = v64[92];
      *((void *)v46 + 4) = v48;
      *((void *)v46 + 5) = v47[94];
      *((void *)v46 + 6) = v40;
      (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v46[v45], v43, v44);
      uint64_t v49 = swift_allocObject();
      *(void *)(v49 + 16) = sub_24D958284;
      *(void *)(v49 + 24) = v46;
      char v78 = sub_24D3E3980;
      uint64_t v79 = v49;
      id aBlock = (id)MEMORY[0x263EF8330];
      unint64_t v75 = 1107296256;
      uint64_t v76 = sub_24D3E38DC;
      id v77 = &block_descriptor_1068;
      uint64_t v50 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      id v51 = objc_msgSend(v41, sel_fetchSwift_error_, v50, &aBlock);
      _Block_release(v50);
      id v52 = aBlock;
      LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (v42) {
        __break(1u);
      }
      if (v51)
      {
        if (objc_msgSend(v51, sel_next))
        {
          uint64_t v2 = (uint64_t)objc_msgSend(v51, sel_BOOLAtIndex_, 0);

          sub_24DCCA2C8();
          uint64_t v53 = (uint64_t)v65;
          sub_24DCC8F98();
          sub_24D3FCA34(v53, type metadata accessor for Signpost);
          swift_release();
        }
        else
        {

          sub_24DCCA2C8();
          uint64_t v55 = (uint64_t)v65;
          sub_24DCC8F98();
          sub_24D3FCA34(v55, type metadata accessor for Signpost);
          swift_release();
          return 2;
        }
      }
      else
      {
        sub_24DCC8828();

        swift_willThrow();
        sub_24DCCA2C8();
        uint64_t v2 = (uint64_t)v65;
        sub_24DCC8F98();
        sub_24D3FCA34(v2, type metadata accessor for Signpost);
        swift_release();
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v20, v15);
      sub_24D409F80((uint64_t)&v23[*(int *)(v15 + 48)], (uint64_t)v14);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v15);
      uint64_t v2 = v14[*(int *)(v12 + 48)];
      sub_24D3FCA34((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
    }
  }
  else
  {
    uint64_t v33 = v71;
    char v34 = sub_24D91E84C(v73);
    if (!v33) {
      return v34 & 1;
    }
  }
  return v2;
}

uint64_t sub_24D91FD38(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D91FEC8@<X0>(uint64_t a1@<X0>, int a2@<W1>, char *a3@<X8>)
{
  uint64_t v80 = a3;
  uint64_t v4 = v3;
  uint64_t v93 = a1;
  uint64_t v100 = *MEMORY[0x263EF8340];
  id v86 = (void *)*v3;
  uint64_t v6 = v86[93];
  uint64_t v7 = v86[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v85 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v83 = *(void *)(v85 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v84 = (char *)&v70 - v8;
  uint64_t v9 = sub_24DCC8FC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v82 = (char *)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v89 = (uint64_t)&v70 - v16;
  uint64_t v17 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v88 = (char *)&v70 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v90 = v7;
  uint64_t v92 = v6;
  uint64_t v19 = type metadata accessor for SnapshotItem();
  uint64_t v79 = sub_24DCCA3F8();
  uint64_t v78 = *(void *)(v79 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v79);
  id v74 = (char *)&v70 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v70 - v23;
  uint64_t v87 = v19;
  uint64_t v25 = *(void *)(v19 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v22);
  uint64_t v73 = (uint64_t)&v70 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v70 - v28;
  int v72 = a2;
  if (a2)
  {
    sub_24D91BC98(v93, (uint64_t)v24);
    uint64_t v30 = v87;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v24, 1, v87) != 1)
    {
      uint64_t v60 = v25;
      uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      v61(v29, v24, v30);
      uint64_t v62 = v80;
      v61(v80, v29, v30);
      return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v62, 0, 1, v30);
    }
    (*(void (**)(char *, uint64_t))(v78 + 8))(v24, v79);
  }
  uint64_t v71 = v25;
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  id v31 = (void *)qword_26B1A23B0;
  uint64_t v32 = v89;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v89, 1, 1, v9);
  id aBlock = 0;
  unint64_t v95 = 0xE000000000000000;
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v33 = v95;
  id v76 = aBlock;
  sub_24D409D24(v32, (uint64_t)v15);
  int v34 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  id v77 = v4;
  if (v34 == 1)
  {
    id v35 = v31;
    uint64_t v36 = v82;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
  }
  else
  {
    uint64_t v36 = v82;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v82, v15, v9);
  }
  id v37 = v88;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v88, v36, v9);
  uint64_t v75 = *(int *)(v17 + 20);
  *(void *)&v37[v75] = v31;
  id v38 = &v37[*(int *)(v17 + 24)];
  *(void *)id v38 = "SQLDB: Lookup item by ID";
  *((void *)v38 + 1) = 24;
  id v82 = v38;
  v38[16] = 2;
  id v39 = v31;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v40 = swift_allocObject();
  *(_OWORD *)(v40 + 16) = xmmword_24DCCECE0;
  *(void *)(v40 + 56) = MEMORY[0x263F8D310];
  *(void *)(v40 + 64) = sub_24D3F7B98();
  *(void *)(v40 + 32) = v76;
  *(void *)(v40 + 40) = v33;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v36, v9);
  swift_bridgeObjectRelease();
  sub_24D415F74(v89, &qword_26B1990B0);
  uint64_t v41 = v77;
  uint64_t v42 = *(void **)((char *)v77 + qword_26B1A2590);
  uint64_t v44 = v84;
  uint64_t v43 = v85;
  uint64_t v45 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v85 + 16))(v84, v93, AssociatedTypeWitness);
  unint64_t v46 = (*(unsigned __int8 *)(v43 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
  uint64_t v47 = (char *)swift_allocObject();
  *((void *)v47 + 2) = v90;
  uint64_t v48 = v86;
  uint64_t v49 = v92;
  *((void *)v47 + 3) = v86[92];
  *((void *)v47 + 4) = v49;
  *((void *)v47 + 5) = v48[94];
  *((void *)v47 + 6) = v41;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v47[v46], v44, v45);
  uint64_t v50 = swift_allocObject();
  *(void *)(v50 + 16) = sub_24D958264;
  *(void *)(v50 + 24) = v47;
  unint64_t v98 = sub_24D3E3980;
  uint64_t v99 = v50;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v95 = 1107296256;
  uint64_t v96 = sub_24D3E38DC;
  uint64_t v97 = &block_descriptor_1058;
  id v51 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v52 = objc_msgSend(v42, sel_fetchSwift_error_, v51, &aBlock);
  _Block_release(v51);
  id v53 = aBlock;
  LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v44) {
    __break(1u);
  }
  if (!v52)
  {
    sub_24DCC8828();

    swift_willThrow();
    goto LABEL_15;
  }
  if (objc_msgSend(v52, sel_next))
  {
    uint64_t v54 = v87;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v56 = v73;
    uint64_t v57 = v81;
    sub_24DA6D518(v52, 0, v54, WitnessTable, v73);
    if (!v57)
    {
      if (v72)
      {
        uint64_t v67 = v71;
        uint64_t v68 = (uint64_t)v74;
        (*(void (**)(char *, uint64_t, uint64_t))(v71 + 16))(v74, v56, v54);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v67 + 56))(v68, 0, 1, v54);
        sub_24D91B880(v93, v68);

        (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v68, v79);
        uint64_t v69 = v80;
      }
      else
      {

        uint64_t v69 = v80;
        uint64_t v67 = v71;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 32))(v69, v56, v54);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(v69, 0, 1, v54);
      sub_24DCCA2C8();
      uint64_t v58 = (uint64_t)v88;
      goto LABEL_16;
    }

LABEL_15:
    sub_24DCCA2C8();
    uint64_t v58 = (uint64_t)v88;
LABEL_16:
    sub_24DCC8F98();
    sub_24D3FCA34(v58, type metadata accessor for Signpost);
    return swift_release();
  }
  uint64_t v63 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v71 + 56);
  uint64_t v64 = (uint64_t)v74;
  uint64_t v65 = v87;
  v63(v74, 1, 1, v87);
  sub_24D91B880(v93, v64);

  (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v64, v79);
  v63(v80, 1, 1, v65);
  sub_24DCCA2C8();
  uint64_t v66 = (uint64_t)v88;
  sub_24DCC8F98();
  sub_24D3FCA34(v66, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t sub_24D920AA4@<X0>(uint64_t a1@<X0>, void (*a2)(void, void, void, void)@<X1>, uint64_t a3@<X8>)
{
  id v77 = a2;
  uint64_t v78 = a1;
  uint64_t v61 = a3;
  uint64_t v86 = *MEMORY[0x263EF8340];
  uint64_t v74 = *v3;
  uint64_t v4 = *(void *)(v74 + 728);
  uint64_t v75 = v3;
  uint64_t v5 = *(void *)(v74 + 744);
  uint64_t v6 = type metadata accessor for SnapshotItem();
  uint64_t v58 = sub_24DCCA3F8();
  uint64_t v57 = *(void *)(v58 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v58);
  uint64_t v56 = (char *)&v56 - v8;
  uint64_t v62 = v6;
  uint64_t v60 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v59 = (uint64_t)&v56 - v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v70 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v68 = *(void *)(v70 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v69 = (char *)&v56 - v11;
  uint64_t v12 = sub_24DCC8FC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v67 = (char *)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v21);
  id v76 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v65 = qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v20, 1, 1, v12);
  id aBlock = 0;
  unint64_t v80 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t v72 = v5;
  uint64_t v73 = v4;
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  sub_24DCC9968();
  uint64_t v85 = v77;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v23 = v80;
  id v64 = aBlock;
  uint64_t v66 = v20;
  sub_24D409D24((uint64_t)v20, (uint64_t)v18);
  int v24 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
  uint64_t v71 = AssociatedTypeWitness;
  if (v24 == 1)
  {
    uint64_t v25 = v65;
    id v26 = (id)v65;
    uint64_t v27 = v67;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v18, &qword_26B1990B0);
    id v28 = (id)v25;
  }
  else
  {
    uint64_t v27 = v67;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v67, v18, v12);
    id v28 = (id)v65;
  }
  uint64_t v29 = v76;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v76, v27, v12);
  uint64_t v65 = *(int *)(v21 + 20);
  *(void *)&v29[v65] = v28;
  uint64_t v30 = &v29[*(int *)(v21 + 24)];
  *(void *)uint64_t v30 = "SQLDB: Lookup item by ID";
  *((void *)v30 + 1) = 24;
  uint64_t v67 = v30;
  v30[16] = 2;
  id v31 = v28;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_24DCCECE0;
  *(void *)(v32 + 56) = MEMORY[0x263F8D310];
  *(void *)(v32 + 64) = sub_24D3F7B98();
  *(void *)(v32 + 32) = v64;
  *(void *)(v32 + 40) = v23;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v27, v12);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v66, &qword_26B1990B0);
  unint64_t v33 = v75;
  int v34 = *(void **)((char *)v75 + qword_26B1A2590);
  uint64_t v36 = v69;
  uint64_t v35 = v70;
  uint64_t v37 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v69, v78, v71);
  unint64_t v38 = (*(unsigned __int8 *)(v35 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  unint64_t v39 = (v68 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v40 = (char *)swift_allocObject();
  uint64_t v41 = v74;
  *((void *)v40 + 2) = v73;
  uint64_t v42 = v72;
  *((void *)v40 + 3) = *(void *)(v41 + 736);
  *((void *)v40 + 4) = v42;
  *((void *)v40 + 5) = *(void *)(v41 + 752);
  *((void *)v40 + 6) = v33;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v40[v38], v36, v37);
  *(void *)&v40[v39] = v77;
  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = sub_24D95816C;
  *(void *)(v43 + 24) = v40;
  uint64_t v83 = sub_24D3E3980;
  uint64_t v84 = v43;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v80 = 1107296256;
  uint64_t v81 = sub_24D3E38DC;
  id v82 = &block_descriptor_1048;
  uint64_t v44 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v45 = objc_msgSend(v34, sel_fetchSwift_error_, v44, &aBlock);
  _Block_release(v44);
  id v46 = aBlock;
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v35) {
    __break(1u);
  }
  if (v45)
  {
    if (objc_msgSend(v45, sel_next))
    {
      uint64_t v47 = v62;
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v49 = v59;
      uint64_t v50 = v63;
      sub_24DA6D518(v45, 0, v47, WitnessTable, v59);
      if (v50)
      {
      }
      else
      {
        uint64_t v51 = v60;
        uint64_t v52 = (uint64_t)v56;
        (*(void (**)(char *, uint64_t, uint64_t))(v60 + 16))(v56, v49, v47);
        id v77 = *(void (**)(void, void, void, void))(v51 + 56);
        v77(v52, 0, 1, v47);
        sub_24D91B880(v78, v52);

        (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v52, v58);
        uint64_t v53 = v61;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v51 + 32))(v61, v59, v47);
        v77(v53, 0, 1, v47);
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 56))(v61, 1, 1, v62);
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  uint64_t v54 = (uint64_t)v76;
  sub_24DCC8F98();
  sub_24D3FCA34(v54, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t sub_24D921514(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v7 = *(void (**)(void *, uint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = swift_checkMetadataState();
  v7(a1, v8, v6);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v9 = objc_msgSend(a1, sel_bindUnsignedLongParameter_, a4);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_24D921760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v66 = a4;
  uint64_t v73 = a1;
  uint64_t v85 = *MEMORY[0x263EF8340];
  uint64_t v68 = (void *)*v4;
  uint64_t v7 = v68[93];
  id v76 = v4;
  uint64_t v77 = v68[91];
  uint64_t v78 = v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v75 = sub_24DCCA3F8();
  uint64_t v67 = *(void *)(v75 - 8);
  uint64_t v65 = *(void *)(v67 + 64);
  uint64_t v9 = MEMORY[0x270FA5388](v75);
  uint64_t v74 = (char *)v56 - v10;
  uint64_t v62 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v63 = *(void *)(v62 + 64);
  MEMORY[0x270FA5388](v9);
  id v64 = (char *)v56 - v11;
  uint64_t v12 = sub_24DCC8FC8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v60 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)v56 - v19;
  uint64_t v59 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v59);
  uint64_t v72 = (char *)v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v58 = qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v20, 1, 1, v12);
  id aBlock = 0;
  unint64_t v80 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v69 = a2;
  uint64_t v70 = a3;
  uint64_t v22 = (void *)sub_24DCC97B8();
  id v23 = objc_msgSend(v22, sel_fp_obfuscatedFilename);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v24 = v80;
  id v57 = aBlock;
  uint64_t v61 = v20;
  sub_24D409D24((uint64_t)v20, (uint64_t)v18);
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48))(v18, 1, v12);
  uint64_t v71 = AssociatedTypeWitness;
  if (v25 == 1)
  {
    uint64_t v26 = v58;
    id v27 = (id)v58;
    id v28 = v60;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v18, &qword_26B1990B0);
    id v29 = (id)v26;
  }
  else
  {
    id v28 = v60;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v60, v18, v12);
    id v29 = (id)v58;
  }
  uint64_t v30 = v72;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v72, v28, v12);
  uint64_t v31 = v59;
  uint64_t v58 = *(int *)(v59 + 20);
  *(void *)&v30[v58] = v29;
  uint64_t v32 = (uint64_t)&v30[*(int *)(v31 + 24)];
  *(void *)uint64_t v32 = "SQLDB: Lookup item by parent ID and name";
  *(void *)(v32 + 8) = 40;
  uint64_t v59 = v32;
  *(unsigned char *)(v32 + 16) = 2;
  id v33 = v29;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_24DCCECE0;
  *(void *)(v34 + 56) = MEMORY[0x263F8D310];
  *(void *)(v34 + 64) = sub_24D3F7B98();
  *(void *)(v34 + 32) = v57;
  *(void *)(v34 + 40) = v24;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v28, v12);
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_24D415F74((uint64_t)v61, &qword_26B1990B0);
  uint64_t v36 = v76;
  LOBYTE(v60) = (*(uint64_t (**)(uint64_t))(*(void *)v76[2] + 112))(v35) & 1;
  LODWORD(v60) = v60;
  uint64_t v61 = *(char **)((char *)v36 + qword_26B1A2590);
  uint64_t v37 = v62;
  unint64_t v38 = v64;
  uint64_t v39 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v64, v73, v71);
  uint64_t v40 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v74, v66, v75);
  unint64_t v41 = (*(unsigned __int8 *)(v37 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
  unint64_t v42 = (v63 + v41 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v43 = (*(unsigned __int8 *)(v40 + 80) + v42 + 17) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80);
  uint64_t v44 = (char *)swift_allocObject();
  *((void *)v44 + 2) = v77;
  id v45 = v68;
  uint64_t v73 = v68[92];
  uint64_t v46 = v78;
  *((void *)v44 + 3) = v73;
  *((void *)v44 + 4) = v46;
  uint64_t v68 = (void *)v45[94];
  *((void *)v44 + 5) = v68;
  *((void *)v44 + 6) = v36;
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v44[v41], v38, v39);
  uint64_t v47 = &v44[v42];
  uint64_t v48 = v70;
  *(void *)uint64_t v47 = v69;
  *((void *)v47 + 1) = v48;
  v47[16] = (char)v60;
  (*(void (**)(char *, char *, uint64_t))(v40 + 32))(&v44[v43], v74, v75);
  uint64_t v49 = (void *)swift_allocObject();
  v49[2] = sub_24D957F30;
  v49[3] = v44;
  uint64_t v83 = sub_24D3E3980;
  uint64_t v84 = v49;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v80 = 1107296256;
  uint64_t v81 = sub_24D3E38DC;
  id v82 = &block_descriptor_1038;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v51 = objc_msgSend(v61, sel_fetchSwift_error_, v50, &aBlock);
  _Block_release(v50);
  id v52 = aBlock;
  LOBYTE(v50) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v50) {
    __break(1u);
  }
  if (v51)
  {
    uint64_t v49 = (void *)sub_24DCC9C98();
    id aBlock = v49;
    if (objc_msgSend(v51, sel_next))
    {
      uint64_t v53 = v56[1];
      while (1)
      {
        uint64_t v49 = (void *)MEMORY[0x253329610]();
        sub_24D922674((uint64_t)&aBlock, v51);
        if (v53) {
          break;
        }
        if ((objc_msgSend(v51, sel_next) & 1) == 0)
        {

          uint64_t v49 = aBlock;
          goto LABEL_16;
        }
      }

      swift_bridgeObjectRelease();
    }
    else
    {
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
LABEL_16:
  sub_24DCCA2C8();
  uint64_t v54 = (uint64_t)v72;
  sub_24DCC8F98();
  sub_24D3FCA34(v54, type metadata accessor for Signpost);
  swift_release();
  return v49;
}

uint64_t sub_24D9221B8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t a5, int a6, uint64_t a7)
{
  int v23 = a6;
  v21[8] = a3;
  uint64_t v22 = a4;
  unint64_t v24 = (void *)*a2;
  uint64_t v25 = a7;
  uint64_t v26 = 0;
  unint64_t v27 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v29 = 0;
  unint64_t v30 = 0xE000000000000000;
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v9 = v24[93];
  uint64_t v10 = v24[91];
  swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 32);
  uint64_t v13 = swift_checkMetadataState();
  v12(a1, v13, v11);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v28 = MEMORY[0x263F8D310];
  uint64_t v26 = v22;
  unint64_t v27 = a5;
  swift_bridgeObjectRetain();
  sub_24D3E3EB4((uint64_t)&v26);
  uint64_t v15 = v14;
  sub_24D415F74((uint64_t)&v26, qword_26B197F50);
  if (v15)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_24DCC9968();
    MEMORY[0x270FA5388](v16);
    uint64_t v17 = v24[92];
    v21[2] = v10;
    v21[3] = v17;
    uint64_t v18 = v24[94];
    v21[4] = v9;
    v21[5] = v18;
    v21[6] = a1;
    sub_24DCCA3F8();
    sub_24DB86C94((void (*)(char *, char *))sub_24D958050, (uint64_t)v21, MEMORY[0x263F8E628], MEMORY[0x263F8D310], v19, (uint64_t)&v26);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v29;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D922568@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  sub_24DCC9968();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = 0x2120646920444E41;
  a2[1] = v8;
  return result;
}

uint64_t sub_24D922674(uint64_t a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v5 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v5 + 16))(a2, 0, AssociatedTypeWitness, v5);
  if (!v2)
  {
    sub_24DCC9D48();
    return sub_24DCC9D08();
  }
  return result;
}

uint64_t sub_24D922794@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a1;
  uint64_t v53 = a2;
  v73[31] = *MEMORY[0x263EF8340];
  id v52 = *(void **)v2;
  uint64_t v4 = v52[91];
  uint64_t v51 = v52[93];
  uint64_t v49 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v45 = *(void *)(v48 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v46 = (char *)&v41 - v5;
  uint64_t v6 = sub_24DCC8FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v41 - v14;
  uint64_t v16 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v54 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v2 + 32) == 1)
  {
    uint64_t v42 = v3;
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    uint64_t v18 = (void *)qword_26B1A23B0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v15, 1, 1, v6);
    sub_24D409D24((uint64_t)v15, (uint64_t)v13);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6) == 1)
    {
      id v19 = v18;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
    }
    uint64_t v20 = v54;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v54, v9, v6);
    uint64_t v43 = *(int *)(v16 + 20);
    *(void *)&v20[v43] = v18;
    uint64_t v21 = &v20[*(int *)(v16 + 24)];
    *(void *)uint64_t v21 = "SQLDB: Lookup item non syncable attributes";
    *((void *)v21 + 1) = 42;
    uint64_t v44 = v21;
    v21[16] = 2;
    id v22 = v18;
    sub_24DCCA2D8();
    sub_24DCC8F98();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
    int v23 = *(void **)(v2 + qword_26B1A2590);
    uint64_t v24 = v48;
    uint64_t v25 = v46;
    uint64_t v26 = AssociatedTypeWitness;
    (*(void (**)(char *, uint64_t, uint64_t))(v48 + 16))(v46, v47, AssociatedTypeWitness);
    unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
    uint64_t v28 = (char *)swift_allocObject();
    *((void *)v28 + 2) = v49;
    uint64_t v29 = v52;
    uint64_t v30 = v51;
    *((void *)v28 + 3) = v52[92];
    *((void *)v28 + 4) = v30;
    *((void *)v28 + 5) = v29[94];
    *((void *)v28 + 6) = v2;
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v28[v27], v25, v26);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_24D957CD4;
    *(void *)(v31 + 24) = v28;
    *(void *)&long long v59 = sub_24D3E3980;
    *((void *)&v59 + 1) = v31;
    *(void *)&long long v57 = MEMORY[0x263EF8330];
    *((void *)&v57 + 1) = 1107296256;
    *(void *)&long long v58 = sub_24D3E38DC;
    *((void *)&v58 + 1) = &block_descriptor_1028;
    uint64_t v32 = _Block_copy(&v57);
    swift_retain();
    swift_retain();
    swift_release();
    *(void *)&long long v57 = 0;
    id v33 = objc_msgSend(v23, sel_fetchSwift_error_, v32, &v57);
    _Block_release(v32);
    id v34 = (id)v57;
    LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v24) {
      __break(1u);
    }
    if (!v33)
    {
      sub_24DCC8828();

      swift_willThrow();
      goto LABEL_14;
    }
    if (objc_msgSend(v33, sel_next))
    {
      uint64_t v35 = sub_24D403898();
      uint64_t v36 = v42;
      sub_24D4087EC(v33, (uint64_t)v35, 0, (uint64_t)&v57);
      if (v36)
      {

        swift_bridgeObjectRelease();
LABEL_14:
        sub_24DCCA2C8();
        uint64_t v37 = (uint64_t)v54;
        sub_24DCC8F98();
        sub_24D3FCA34(v37, type metadata accessor for Signpost);
        return swift_release();
      }

      swift_bridgeObjectRelease();
      v55[12] = v69;
      v55[13] = v70;
      v55[14] = v71;
      uint64_t v56 = v72;
      v55[8] = v65;
      v55[9] = v66;
      v55[10] = v67;
      v55[11] = v68;
      v55[4] = v61;
      v55[5] = v62;
      v55[6] = v63;
      v55[7] = v64;
      v55[0] = v57;
      v55[1] = v58;
      v55[2] = v59;
      v55[3] = v60;
      nullsub_1(v55);
      sub_24DCCA2C8();
      uint64_t v40 = (uint64_t)v54;
      sub_24DCC8F98();
      sub_24D3FCA34(v40, type metadata accessor for Signpost);
      swift_release();
      sub_24D5013B0((uint64_t)v55, (uint64_t)v73);
    }
    else
    {

      sub_24D414684((uint64_t)&v57);
      sub_24DCCA2C8();
      uint64_t v39 = (uint64_t)v54;
      sub_24DCC8F98();
      sub_24D3FCA34(v39, type metadata accessor for Signpost);
      swift_release();
      sub_24D5013B0((uint64_t)&v57, (uint64_t)v73);
    }
  }
  else
  {
    sub_24D414684((uint64_t)&v57);
    sub_24D5013B0((uint64_t)&v57, (uint64_t)v73);
  }
  return sub_24D5013B0((uint64_t)v73, v53);
}

uint64_t sub_24D922F78(uint64_t a1)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0x205443454C4553;
}

uint64_t sub_24D923154(uint64_t a1, uint64_t a2, void *a3)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v5 = a3;
  id v6 = objc_msgSend(v5, sel_keys);
  uint64_t v7 = sub_24DCC9C28();

  id v8 = objc_msgSend(v5, sel_values);
  uint64_t v9 = sub_24DCC9C28();

  sub_24D5F1DA0(v7, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  uint64_t v12 = swift_checkMetadataState();
  v11(a1, v12, v10);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D9233BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v83 = *MEMORY[0x263EF8340];
  long long v67 = (void *)*v2;
  uint64_t v4 = v67[93];
  uint64_t v5 = v67[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v65 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v66 = (char *)&AssociatedConformanceWitness - v7;
  uint64_t v8 = sub_24DCC8FC8();
  uint64_t v63 = *(void *)(v8 - 8);
  uint64_t v64 = v8;
  MEMORY[0x270FA5388](v8);
  long long v62 = (char *)&AssociatedConformanceWitness - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v60 = (uint64_t)&AssociatedConformanceWitness - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v72 = (uint64_t)&AssociatedConformanceWitness - v13;
  uint64_t v61 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v61);
  long long v71 = (char *)&AssociatedConformanceWitness - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v5;
  uint64_t v75 = v4;
  uint64_t v15 = type metadata accessor for SnapshotItem();
  uint64_t v16 = sub_24DCCA3F8();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&AssociatedConformanceWitness - v19;
  uint64_t v21 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v18);
  int v23 = (char *)&AssociatedConformanceWitness - v22;
  uint64_t v73 = a1;
  long long v68 = v2;
  sub_24D91BC98(a1, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v20, 1, v15) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v23, v20, v15);
    uint64_t v32 = v69;
    uint64_t v33 = AssociatedTypeWitness;
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v69, &v23[*(int *)(v15 + 36)], AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v15);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v32, 0, 1, v33);
  }
  uint64_t v59 = v6;
  (*(void (**)(char *, uint64_t))(v17 + 8))(v20, v16);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v24 = (void *)qword_26B1A23B0;
  uint64_t v26 = v63;
  uint64_t v25 = v64;
  uint64_t v27 = v72;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 56))(v72, 1, 1, v64);
  id aBlock = 0;
  unint64_t v78 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v28 = v78;
  id v58 = aBlock;
  uint64_t v29 = v60;
  sub_24D409D24(v27, v60);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v26 + 48))(v29, 1, v25) == 1)
  {
    id v30 = v24;
    uint64_t v31 = v62;
    sub_24DCC8FA8();
    sub_24D415F74(v29, &qword_26B1990B0);
  }
  else
  {
    uint64_t v31 = v62;
    (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(v62, v29, v25);
  }
  uint64_t v35 = v71;
  (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v71, v31, v25);
  uint64_t v36 = v61;
  uint64_t v60 = *(int *)(v61 + 20);
  *(void *)&v35[v60] = v24;
  uint64_t v37 = &v35[*(int *)(v36 + 24)];
  *(void *)uint64_t v37 = "SQLDB: Lookup parent ID";
  *((void *)v37 + 1) = 23;
  long long v62 = v37;
  v37[16] = 2;
  id v38 = v24;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_24DCCECE0;
  *(void *)(v39 + 56) = MEMORY[0x263F8D310];
  *(void *)(v39 + 64) = sub_24D3F7B98();
  *(void *)(v39 + 32) = v58;
  *(void *)(v39 + 40) = v28;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v31, v25);
  swift_bridgeObjectRelease();
  sub_24D415F74(v72, &qword_26B1990B0);
  uint64_t v40 = v68;
  uint64_t v41 = *(void **)((char *)v68 + qword_26B1A2590);
  uint64_t v42 = v59;
  uint64_t v43 = v66;
  uint64_t v44 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v66, v73, AssociatedTypeWitness);
  unint64_t v45 = (*(unsigned __int8 *)(v42 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  uint64_t v46 = (char *)swift_allocObject();
  *((void *)v46 + 2) = v74;
  uint64_t v47 = v67;
  uint64_t v48 = v75;
  *((void *)v46 + 3) = v67[92];
  *((void *)v46 + 4) = v48;
  *((void *)v46 + 5) = v47[94];
  *((void *)v46 + 6) = v40;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(&v46[v45], v43, v44);
  uint64_t v49 = swift_allocObject();
  *(void *)(v49 + 16) = sub_24D957AF0;
  *(void *)(v49 + 24) = v46;
  uint64_t v81 = sub_24D3E3980;
  uint64_t v82 = v49;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v78 = 1107296256;
  uint64_t v79 = sub_24D3E38DC;
  unint64_t v80 = &block_descriptor_998;
  uint64_t v50 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v51 = objc_msgSend(v41, sel_fetchSwift_error_, v50, &aBlock);
  _Block_release(v50);
  id v52 = aBlock;
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v35) {
    __break(1u);
  }
  if (!v51)
  {
    sub_24DCC8828();

    swift_willThrow();
LABEL_14:
    sub_24DCCA2C8();
    uint64_t v55 = (uint64_t)v71;
    sub_24DCC8F98();
    sub_24D3FCA34(v55, type metadata accessor for Signpost);
    return swift_release();
  }
  if (objc_msgSend(v51, sel_next))
  {
    uint64_t v54 = v69;
    uint64_t v53 = v70;
    (*(void (**)(id, void, uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 16))(v51, 0, v44);
    if (!v53) {
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v42 + 56))(v54, 0, 1, v44);
    }
    goto LABEL_14;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 56))(v69, 1, 1, v44);

  sub_24DCCA2C8();
  uint64_t v56 = (uint64_t)v71;
  sub_24DCC8F98();
  sub_24D3FCA34(v56, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t sub_24D923E28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v70 = *MEMORY[0x263EF8340];
  uint64_t v56 = (void *)*v1;
  uint64_t v4 = v56[93];
  uint64_t v19 = v56[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v55 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v53 = *(void *)(v55 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v54 = (char *)&v49 - v5;
  uint64_t v59 = sub_24DCC8FC8();
  uint64_t v52 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v58 = (uint64_t)&v49 - v12;
  uint64_t v51 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v51);
  long long v57 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v19;
  uint64_t v63 = v4;
  uint64_t v14 = type metadata accessor for SnapshotItem();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v60 = a1;
  sub_24D91BC98(a1, (uint64_t)&v49 - v17);
  LOBYTE(v19) = 1;
  LODWORD(v14) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v18, 1, v14);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  if (v14 == 1)
  {
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    uint64_t v20 = (void *)qword_26B1A23B0;
    uint64_t v21 = v52;
    uint64_t v23 = v58;
    uint64_t v22 = v59;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v58, 1, 1, v59);
    id aBlock = 0;
    unint64_t v65 = 0xE000000000000000;
    sub_24DCCA728();
    sub_24DCC9968();
    swift_getAssociatedConformanceWitness();
    sub_24DCCADC8();
    uint64_t v24 = v22;
    unint64_t v25 = v65;
    id v50 = aBlock;
    sub_24D409D24(v23, (uint64_t)v11);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v11, 1, v22) == 1)
    {
      id v26 = v20;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v11, &qword_26B1990B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v7, v11, v22);
    }
    uint64_t v27 = v7;
    unint64_t v28 = *(void (**)(char *, char *, uint64_t))(v21 + 16);
    uint64_t v29 = v21;
    id v30 = v57;
    v28(v57, v27, v24);
    uint64_t v31 = v51;
    uint64_t v49 = *(int *)(v51 + 20);
    *(void *)&v30[v49] = v20;
    uint64_t v32 = (uint64_t)&v30[*(int *)(v31 + 24)];
    *(void *)uint64_t v32 = "SQLDB: Check item with ID";
    *(void *)(v32 + 8) = 25;
    uint64_t v51 = v32;
    *(unsigned char *)(v32 + 16) = 2;
    id v33 = v20;
    swift_bridgeObjectRetain();
    sub_24DCCA2D8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
    uint64_t v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_24DCCECE0;
    *(void *)(v34 + 56) = MEMORY[0x263F8D310];
    *(void *)(v34 + 64) = sub_24D3F7B98();
    *(void *)(v34 + 32) = v50;
    *(void *)(v34 + 40) = v25;
    sub_24DCC8F88();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v27, v59);
    swift_bridgeObjectRelease();
    sub_24D415F74(v58, &qword_26B1990B0);
    uint64_t v35 = *(void **)((char *)v2 + qword_26B1A2590);
    uint64_t v37 = v54;
    uint64_t v36 = v55;
    uint64_t v38 = AssociatedTypeWitness;
    (*(void (**)(char *, uint64_t, uint64_t))(v55 + 16))(v54, v60, AssociatedTypeWitness);
    unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    uint64_t v40 = (char *)swift_allocObject();
    *((void *)v40 + 2) = v61;
    uint64_t v41 = v56;
    uint64_t v42 = v63;
    *((void *)v40 + 3) = v56[92];
    *((void *)v40 + 4) = v42;
    *((void *)v40 + 5) = v41[94];
    *((void *)v40 + 6) = v2;
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v40[v39], v37, v38);
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_24D957AC4;
    *(void *)(v43 + 24) = v40;
    long long v68 = sub_24D3E3980;
    uint64_t v69 = v43;
    id aBlock = (id)MEMORY[0x263EF8330];
    unint64_t v65 = 1107296256;
    long long v66 = sub_24D3E38DC;
    long long v67 = &block_descriptor_988;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    id v45 = objc_msgSend(v35, sel_fetchSwift_error_, v44, &aBlock);
    _Block_release(v44);
    id v46 = aBlock;
    LOBYTE(v44) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v44) {
      __break(1u);
    }
    if (v45)
    {
      LOBYTE(v19) = objc_msgSend(v45, sel_next);

      sub_24DCCA2C8();
      uint64_t v47 = (uint64_t)v57;
      sub_24DCC8F98();
      sub_24D3FCA34(v47, type metadata accessor for Signpost);
    }
    else
    {
      sub_24DCC8828();

      swift_willThrow();
      sub_24DCCA2C8();
      uint64_t v19 = (uint64_t)v57;
      sub_24DCC8F98();
      sub_24D3FCA34(v19, type metadata accessor for Signpost);
    }
    swift_release();
  }
  return v19 & 1;
}

unint64_t sub_24D9246F4(uint64_t a1)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0xD000000000000011;
}

id sub_24D9248A8(uint64_t a1)
{
  uint64_t v2 = v1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *(void **)v2;
  uint64_t v18 = *(void *)(*(void *)v2 + 744);
  uint64_t v5 = v4[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v17 - v8;
  id v19 = *(id *)(v2 + qword_26B1A2590);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - v8, a1, AssociatedTypeWitness);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = v5;
  *((void *)v11 + 3) = v4[92];
  *((void *)v11 + 4) = v18;
  *((void *)v11 + 5) = v4[94];
  *((void *)v11 + 6) = v2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, AssociatedTypeWitness);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = sub_24D958798;
  v12[3] = v11;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v12;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_1158;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v14 = objc_msgSend(v19, sel_fetchSwift_error_, v13, aBlock);
  _Block_release(v13);
  id v15 = aBlock[0];
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v13) {
    __break(1u);
  }
  if (!v14)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  swift_release();
  return v14;
}

uint64_t sub_24D924BDC(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D924D8C(uint64_t a1, void (*a2)(char *, unint64_t), uint64_t a3)
{
  uint64_t v34 = a2;
  uint64_t v35 = a3;
  uint64_t v43 = a1;
  uint64_t v4 = *v3;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v42 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v38 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v36 = qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  uint64_t v45 = 0;
  unint64_t v46 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v15 = *(void *)(v4 + 744);
  uint64_t v16 = *(void *)(v4 + 728);
  swift_getAssociatedTypeWitness();
  uint64_t v47 = v15;
  uint64_t v44 = v16;
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v17 = v46;
  uint64_t v37 = v45;
  unint64_t v39 = v13;
  sub_24D409D24((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    id v18 = (id)v36;
    id v19 = (id)v36;
    uint64_t v20 = v42;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v11, &qword_26B1990B0);
    uint64_t v21 = (uint64_t)v40;
  }
  else
  {
    uint64_t v20 = v42;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v42, v11, v5);
    uint64_t v21 = (uint64_t)v40;
    id v18 = (id)v36;
  }
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v21, v20, v5);
  uint64_t v22 = v38;
  uint64_t v36 = *(int *)(v38 + 20);
  *(void *)(v21 + v36) = v18;
  uint64_t v23 = *(int *)(v22 + 24);
  uint64_t v40 = (char *)v5;
  uint64_t v24 = v21 + v23;
  *(void *)uint64_t v24 = "SQLDB: Enumerate children IDs and Kind";
  *(void *)(v24 + 8) = 38;
  *(unsigned char *)(v24 + 16) = 2;
  id v25 = v18;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24DCCECE0;
  *(void *)(v26 + 56) = MEMORY[0x263F8D310];
  *(void *)(v26 + 64) = sub_24D3F7B98();
  *(void *)(v26 + 32) = v37;
  *(void *)(v26 + 40) = v17;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(v6 + 8))(v42, v40);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v39, &qword_26B1990B0);
  uint64_t v27 = v41;
  id v28 = sub_24D9248A8(v43);
  if (!v27)
  {
    uint64_t v29 = v28;
    if (objc_msgSend(v28, sel_next))
    {
      uint64_t v31 = v34;
      uint64_t v30 = v35;
      do
      {
        uint64_t v32 = (void *)MEMORY[0x253329610]();
        sub_24D9252B8(v31, v30, v29);
      }
      while ((objc_msgSend(v29, sel_next) & 1) != 0);
    }
  }
  sub_24DCCA2C8();
  sub_24DCC8F98();
  return sub_24D3FCA34(v21, type metadata accessor for Signpost);
}

uint64_t sub_24D9252B8(void (*a1)(char *, unint64_t), uint64_t a2, void *a3)
{
  uint64_t v15 = a2;
  uint64_t v14 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v13 - v6;
  uint64_t v8 = *(uint64_t (**)(void))(*(void *)(swift_getAssociatedConformanceWitness() + 40) + 16);
  a3;
  uint64_t result = v8();
  if (!v3)
  {
    uint64_t v10 = v13;
    uint64_t v11 = v14;
    unint64_t v12 = sub_24D3FB058(1);
    v11(v7, v12);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v7, AssociatedTypeWitness);
  }
  return result;
}

void *sub_24D925458(uint64_t a1, int a2)
{
  int v39 = a2;
  uint64_t v38 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *v2;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v35 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v41 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  v35[1] = v4;
  unint64_t v17 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
  sub_24D409D24((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    id v18 = v17;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  }
  id v19 = v8;
  uint64_t v20 = v41;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v41, v19, v5);
  uint64_t v36 = *(int *)(v15 + 20);
  *(void *)&v20[v36] = v17;
  uint64_t v21 = &v20[*(int *)(v15 + 24)];
  *(void *)uint64_t v21 = "SQLDB: Enumerate non-purgeable packages";
  *((void *)v21 + 1) = 39;
  uint64_t v37 = v21;
  v21[16] = 2;
  id v22 = v17;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
  uint64_t v23 = v40;
  uint64_t v24 = *(void **)(v40 + qword_26B1A2590);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v38;
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = v26;
  *(unsigned char *)(v25 + 32) = v39 & 1;
  *(void *)(v25 + 40) = 100;
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = sub_24D957A90;
  v27[3] = v25;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v27;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_978;
  id v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v29 = objc_msgSend(v24, sel_fetchSwift_error_, v28, aBlock);
  _Block_release(v28);
  id v30 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v29)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v27 = (void *)sub_24DCC9C98();
    uint64_t v42 = 0;
    aBlock[0] = v27;
    if (objc_msgSend(v29, sel_next))
    {
      while (1)
      {
        uint64_t v27 = (void *)MEMORY[0x253329610]();
        sub_24D946D48(&v42, v29);
        if (v3) {
          break;
        }
        if ((objc_msgSend(v29, sel_next) & 1) == 0)
        {
          uint64_t v27 = aBlock[0];
          goto LABEL_12;
        }
      }

      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRetain_n();
      MEMORY[0x253327D80](v27, AssociatedTypeWitness);
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  uint64_t v33 = (uint64_t)v41;
  sub_24DCC8F98();
  sub_24D3FCA34(v33, type metadata accessor for Signpost);
  swift_release();
  return v27;
}

void *sub_24D925AD0(uint64_t a1, int a2)
{
  int v39 = a2;
  uint64_t v38 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *v2;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  unint64_t v12 = (char *)v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v35 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v41 = (char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  v35[1] = v4;
  unint64_t v17 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
  sub_24D409D24((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    id v18 = v17;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  }
  id v19 = v8;
  uint64_t v20 = v41;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v41, v19, v5);
  uint64_t v36 = *(int *)(v15 + 20);
  *(void *)&v20[v36] = v17;
  uint64_t v21 = &v20[*(int *)(v15 + 24)];
  *(void *)uint64_t v21 = "SQLDB: Enumerate non-syncroot packages";
  *((void *)v21 + 1) = 38;
  uint64_t v37 = v21;
  v21[16] = 2;
  id v22 = v17;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v19, v5);
  sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
  uint64_t v23 = v40;
  uint64_t v24 = *(void **)(v40 + qword_26B1A2590);
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v38;
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = v26;
  *(unsigned char *)(v25 + 32) = v39 & 1;
  *(void *)(v25 + 40) = 100;
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = sub_24D957A30;
  v27[3] = v25;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v27;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_968;
  id v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v29 = objc_msgSend(v24, sel_fetchSwift_error_, v28, aBlock);
  _Block_release(v28);
  id v30 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v29)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v27 = (void *)sub_24DCC9C98();
    uint64_t v42 = 0;
    aBlock[0] = v27;
    if (objc_msgSend(v29, sel_next))
    {
      while (1)
      {
        uint64_t v27 = (void *)MEMORY[0x253329610]();
        sub_24D946D48(&v42, v29);
        if (v3) {
          break;
        }
        if ((objc_msgSend(v29, sel_next) & 1) == 0)
        {
          uint64_t v27 = aBlock[0];
          goto LABEL_12;
        }
      }

      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRetain_n();
      MEMORY[0x253327D80](v27, AssociatedTypeWitness);
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  uint64_t v33 = (uint64_t)v41;
  sub_24DCC8F98();
  sub_24D3FCA34(v33, type metadata accessor for Signpost);
  swift_release();
  return v27;
}

uint64_t sub_24D926148(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if ((a4 & 1) == 0)
  {
    id v7 = a1;
    id v8 = objc_msgSend(v7, sel_bindLongParameter_, a3, 0x203E204449776F72, 0xE800000000000000);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D92630C(uint64_t a1, uint64_t a2, int a3)
{
  int v60 = a3;
  uint64_t v59 = a2;
  uint64_t v65 = a1;
  uint64_t v75 = *MEMORY[0x263EF8340];
  uint64_t v58 = *(void **)v3;
  uint64_t v5 = v58[93];
  uint64_t v6 = v58[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v55 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v56 = (char *)v50 - v8;
  uint64_t v9 = sub_24DCC8FC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v64 = (char *)v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v63 = (uint64_t)v50 - v16;
  uint64_t v17 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v17);
  long long v62 = (char *)v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v3 + 32) & 1) == 0)
  {
    uint64_t v54 = v3;
    uint64_t v66 = v6;
    uint64_t v67 = v5;
    uint64_t v61 = AssociatedTypeWitness;
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    uint64_t v20 = (void *)qword_26B1A23B0;
    uint64_t v21 = v63;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56))(v63, 1, 1, v9);
    id aBlock = 0;
    unint64_t v70 = 0xE000000000000000;
    sub_24DCC9968();
    v50[1] = swift_getAssociatedConformanceWitness();
    sub_24DCCADC8();
    unint64_t v22 = v70;
    id v53 = aBlock;
    sub_24D409D24(v21, (uint64_t)v15);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
    {
      id v23 = v20;
      uint64_t v24 = v64;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
    }
    else
    {
      uint64_t v24 = v64;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v64, v15, v9);
    }
    uint64_t v25 = v20;
    uint64_t v26 = v10;
    uint64_t v27 = v62;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v62, v24, v9);
    uint64_t v51 = *(int *)(v17 + 20);
    *(void *)&v27[v51] = v25;
    id v28 = &v27[*(int *)(v17 + 24)];
    *(void *)id v28 = "SQLDB: enumerateChildrenIDAndKind";
    *((void *)v28 + 1) = 33;
    uint64_t v52 = v28;
    v28[16] = 2;
    id v29 = v25;
    swift_bridgeObjectRetain();
    sub_24DCCA2D8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
    unint64_t v30 = v22;
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_24DCCECE0;
    *(void *)(v31 + 56) = MEMORY[0x263F8D310];
    *(void *)(v31 + 64) = sub_24D3F7B98();
    *(void *)(v31 + 32) = v53;
    *(void *)(v31 + 40) = v30;
    sub_24DCC8F88();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v64, v9);
    swift_bridgeObjectRelease();
    sub_24D415F74(v63, &qword_26B1990B0);
    uint64_t v32 = v54;
    uint64_t v64 = *(char **)(v54 + qword_26B1A2590);
    uint64_t v34 = v56;
    uint64_t v33 = v57;
    uint64_t v35 = v61;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v65, v61);
    unint64_t v36 = (*(unsigned __int8 *)(v33 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    unint64_t v37 = (v36 + v55 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = (v36 + v55 + 23) & 0xFFFFFFFFFFFFFFF8;
    int v39 = (char *)swift_allocObject();
    *((void *)v39 + 2) = v66;
    uint64_t v40 = v58;
    uint64_t v65 = v58[92];
    uint64_t v41 = v67;
    *((void *)v39 + 3) = v65;
    *((void *)v39 + 4) = v41;
    uint64_t v63 = v40[94];
    *((void *)v39 + 5) = v63;
    *((void *)v39 + 6) = v32;
    (*(void (**)(char *, char *, uint64_t))(v33 + 32))(&v39[v36], v34, v35);
    uint64_t v42 = &v39[v37];
    *(void *)uint64_t v42 = v59;
    v42[8] = v60 & 1;
    *(void *)&v39[v38] = 200;
    uint64_t v43 = swift_allocObject();
    *(void *)(v43 + 16) = sub_24D957954;
    *(void *)(v43 + 24) = v39;
    uint64_t v73 = sub_24D3E3980;
    uint64_t v74 = v43;
    id aBlock = (id)MEMORY[0x263EF8330];
    unint64_t v70 = 1107296256;
    long long v71 = sub_24D3E38DC;
    uint64_t v72 = &block_descriptor_958;
    uint64_t v44 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    id v45 = objc_msgSend(v64, sel_fetchSwift_error_, v44, &aBlock);
    _Block_release(v44);
    id v46 = aBlock;
    LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v38) {
      __break(1u);
    }
    if (v45)
    {
      swift_getTupleTypeMetadata2();
      sub_24DCC9C98();
      id v19 = (id)sub_24DCC95B8();
      uint64_t v68 = 0;
      id aBlock = v19;
      if (!objc_msgSend(v45, sel_next))
      {
LABEL_14:
        swift_bridgeObjectRetain_n();
        sub_24DCC95D8();
        swift_bridgeObjectRelease_n();

        sub_24DCCA2C8();
        uint64_t v48 = (uint64_t)v62;
        sub_24DCC8F98();
        sub_24D3FCA34(v48, type metadata accessor for Signpost);
        swift_release();
        return (uint64_t)v19;
      }
      while (1)
      {
        uint64_t v47 = (void *)MEMORY[0x253329610]();
        sub_24D926F5C(&v68, v45);
        if (v4) {
          break;
        }
        if ((objc_msgSend(v45, sel_next) & 1) == 0)
        {
          id v19 = aBlock;
          goto LABEL_14;
        }
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    sub_24DCCA2C8();
    id v19 = v62;
    sub_24DCC8F98();
    sub_24D3FCA34((uint64_t)v19, type metadata accessor for Signpost);
    swift_release();
    return (uint64_t)v19;
  }
  swift_getTupleTypeMetadata2();
  sub_24DCC9C98();
  swift_getAssociatedConformanceWitness();
  return sub_24DCC95B8();
}

uint64_t sub_24D926CB4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v9 = *(void (**)(void *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = swift_checkMetadataState();
  v9(a1, v10, v8);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if ((a5 & 1) == 0)
  {
    id v11 = a1;
    id v12 = objc_msgSend(v11, sel_bindLongParameter_, a4);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D926F5C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  *a1 = objc_msgSend(a2, sel_longAtIndex_, 0, v8);
  uint64_t v6 = *(uint64_t (**)(void))(*(void *)(swift_getAssociatedConformanceWitness() + 40) + 16);
  a2;
  uint64_t result = v6();
  if (!v2)
  {
    sub_24D3FB058(2);
    sub_24DCC9638();
    return sub_24DCC9668();
  }
  return result;
}

uint64_t sub_24D92712C(uint64_t a1, int a2)
{
  int v39 = a2;
  uint64_t v38 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *v2;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v40 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*((unsigned char *)v2 + 32) == 1)
  {
    uint64_t v35 = v4;
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_26B1A23B0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
    sub_24D409D24((uint64_t)v14, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
    {
      id v18 = v17;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    }
    uint64_t v20 = v17;
    uint64_t v21 = v40;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v40, v8, v5);
    uint64_t v36 = *(int *)(v15 + 20);
    *(void *)&v21[v36] = v20;
    unint64_t v22 = &v21[*(int *)(v15 + 24)];
    *(void *)unint64_t v22 = "SQLDB: Enumerate non-locked directory that could be locked";
    *((void *)v22 + 1) = 58;
    unint64_t v37 = v22;
    v22[16] = 2;
    id v23 = v20;
    sub_24DCCA2D8();
    sub_24DCC8F98();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
    uint64_t v24 = *(void **)((char *)v2 + qword_26B1A2590);
    uint64_t v25 = swift_allocObject();
    uint64_t v26 = v38;
    *(void *)(v25 + 16) = v2;
    *(void *)(v25 + 24) = v26;
    *(unsigned char *)(v25 + 32) = v39 & 1;
    *(void *)(v25 + 40) = 100;
    id v19 = (void *)swift_allocObject();
    void v19[2] = sub_24D957844;
    v19[3] = v25;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v19;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_948;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    id v28 = objc_msgSend(v24, sel_fetchSwift_error_, v27, aBlock);
    _Block_release(v27);
    id v29 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v28)
    {
      sub_24DCC8828();

      swift_willThrow();
LABEL_17:
      sub_24DCCA2C8();
      uint64_t v33 = (uint64_t)v40;
      sub_24DCC8F98();
      sub_24D3FCA34(v33, type metadata accessor for Signpost);
      swift_release();
      return (uint64_t)v19;
    }
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    id v19 = (void *)sub_24DCC9C98();
    uint64_t v41 = 0;
    aBlock[0] = v19;
    if (objc_msgSend(v28, sel_next))
    {
      while (1)
      {
        id v19 = (void *)MEMORY[0x253329610]();
        sub_24D946D48(&v41, v28);
        if (v3) {
          break;
        }
        if ((objc_msgSend(v28, sel_next) & 1) == 0)
        {
          id v19 = aBlock[0];
          goto LABEL_14;
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
LABEL_14:
    swift_bridgeObjectRetain_n();
    MEMORY[0x253327D80](v19, AssociatedTypeWitness);
    swift_bridgeObjectRelease_n();

    sub_24DCCA2C8();
    uint64_t v32 = (uint64_t)v40;
    sub_24DCC8F98();
    sub_24D3FCA34(v32, type metadata accessor for Signpost);
    swift_release();
  }
  else
  {
    swift_getAssociatedTypeWitness();
    return sub_24DCC9C98();
  }
  return (uint64_t)v19;
}

uint64_t sub_24D9277E8(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if ((a4 & 1) == 0)
  {
    id v7 = a1;
    id v8 = objc_msgSend(v7, sel_bindLongParameter_, a3, 0x203E204449776F72, 0xE800000000000000);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D927A54(uint64_t a1, int a2)
{
  int v58 = a2;
  uint64_t v65 = a1;
  uint64_t v73 = *MEMORY[0x263EF8340];
  long long v62 = (void *)*v2;
  uint64_t v3 = v62[93];
  uint64_t v63 = v2;
  uint64_t v4 = v62[91];
  uint64_t v66 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v56 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v59 = (char *)v52 - v6;
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v54 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v52 - v14;
  uint64_t v16 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v64 = (char *)v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  id v18 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v15, 1, 1, v7);
  id aBlock = 0;
  unint64_t v68 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v60 = v4;
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v19 = v68;
  id v53 = aBlock;
  uint64_t v55 = v15;
  sub_24D409D24((uint64_t)v15, (uint64_t)v13);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  uint64_t v61 = AssociatedTypeWitness;
  if (v20 == 1)
  {
    id v21 = v18;
    unint64_t v22 = v54;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
  }
  else
  {
    unint64_t v22 = v54;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v54, v13, v7);
  }
  id v23 = v64;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v64, v22, v7);
  uint64_t v54 = (char *)*(int *)(v16 + 20);
  *(void *)&v54[(void)v23] = v18;
  uint64_t v24 = &v23[*(int *)(v16 + 24)];
  *(void *)uint64_t v24 = "SQLDB: Contains children";
  *((void *)v24 + 1) = 24;
  v52[1] = v24;
  v24[16] = 2;
  id v25 = v18;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24DCCECE0;
  *(void *)(v26 + 56) = MEMORY[0x263F8D310];
  *(void *)(v26 + 64) = sub_24D3F7B98();
  *(void *)(v26 + 32) = v53;
  *(void *)(v26 + 40) = v19;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v7);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v55, &qword_26B1990B0);
  uint64_t v27 = v63;
  id v28 = *(void **)((char *)v63 + qword_26B1A2590);
  uint64_t v29 = v57 + 16;
  unint64_t v30 = v59;
  uint64_t v31 = v61;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v59, v65, v61);
  unint64_t v32 = (*(unsigned __int8 *)(v29 + 64) + 56) & ~(unint64_t)*(unsigned __int8 *)(v29 + 64);
  uint64_t v33 = (void (**)(char *, char *, uint64_t))(v29 + 16);
  if ((v58 & 1) == 0)
  {
    id v45 = (char *)swift_allocObject();
    *((void *)v45 + 2) = v60;
    id v46 = v62;
    uint64_t v47 = v66;
    *((void *)v45 + 3) = v62[92];
    *((void *)v45 + 4) = v47;
    *((void *)v45 + 5) = v46[94];
    *((void *)v45 + 6) = v27;
    (*v33)(&v45[v32], v30, v31);
    uint64_t v48 = swift_allocObject();
    *(void *)(v48 + 16) = sub_24D9577F0;
    *(void *)(v48 + 24) = v45;
    long long v71 = sub_24D3E3980;
    uint64_t v72 = v48;
    id aBlock = (id)MEMORY[0x263EF8330];
    unint64_t v68 = 1107296256;
    uint64_t v69 = sub_24D3E38DC;
    unint64_t v70 = &block_descriptor_928;
    uint64_t v49 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    id v39 = objc_msgSend(v28, sel_fetchSwift_error_, v49, &aBlock);
    _Block_release(v49);
    unsigned __int8 v40 = aBlock;
    id v41 = aBlock;
    LOBYTE(v49) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v49 & 1) == 0)
    {
      uint64_t v43 = 0;
      uint64_t v42 = sub_24D9577F0;
      if (!v39) {
        goto LABEL_9;
      }
LABEL_12:
      unsigned __int8 v40 = objc_msgSend(v39, sel_next);

      sub_24DCCA2C8();
      uint64_t v50 = (uint64_t)v64;
      sub_24DCC8F98();
      sub_24D3FCA34(v50, type metadata accessor for Signpost);
      sub_24D43DD74((uint64_t)v43);
      sub_24D43DD74((uint64_t)v42);
      return v40 & 1;
    }
LABEL_15:
    __break(1u);
  }
  uint64_t v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = v60;
  uint64_t v35 = v62;
  uint64_t v36 = v66;
  *((void *)v34 + 3) = v62[92];
  *((void *)v34 + 4) = v36;
  *((void *)v34 + 5) = v35[94];
  *((void *)v34 + 6) = v27;
  (*v33)(&v34[v32], v30, v31);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_24D95781C;
  *(void *)(v37 + 24) = v34;
  long long v71 = sub_24D3E3980;
  uint64_t v72 = v37;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v68 = 1107296256;
  uint64_t v69 = sub_24D3E38DC;
  unint64_t v70 = &block_descriptor_938;
  uint64_t v38 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v39 = objc_msgSend(v28, sel_fetchSwift_error_, v38, &aBlock);
  _Block_release(v38);
  unsigned __int8 v40 = aBlock;
  id v41 = aBlock;
  LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v38)
  {
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v42 = 0;
  uint64_t v43 = sub_24D95781C;
  if (v39) {
    goto LABEL_12;
  }
LABEL_9:
  sub_24DCC8828();

  swift_willThrow();
  sub_24DCCA2C8();
  uint64_t v44 = (uint64_t)v64;
  sub_24DCC8F98();
  sub_24D3FCA34(v44, type metadata accessor for Signpost);
  sub_24D43DD74((uint64_t)v43);
  sub_24D43DD74((uint64_t)v42);
  return v40 & 1;
}

uint64_t sub_24D9283D4(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D928664(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D928814@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v56 = a2;
  uint64_t v61 = a1;
  uint64_t v46 = a3;
  uint64_t v69 = *MEMORY[0x263EF8340];
  uint64_t v55 = *v3;
  uint64_t v4 = *(void *)(v55 + 744);
  uint64_t v57 = v3;
  uint64_t v5 = *(void *)(v55 + 728);
  uint64_t v62 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v52 = *(void *)(v58 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v53 = (char *)&AssociatedConformanceWitness - v7;
  uint64_t v8 = sub_24DCC8FC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v50 = (char *)&AssociatedConformanceWitness - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&AssociatedConformanceWitness - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&AssociatedConformanceWitness - v15;
  uint64_t v17 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v60 = (char *)&AssociatedConformanceWitness - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  unint64_t v19 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v16, 1, 1, v8);
  id aBlock = 0;
  unint64_t v64 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v54 = v5;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v20 = v64;
  id v49 = aBlock;
  uint64_t v51 = v16;
  sub_24D409D24((uint64_t)v16, (uint64_t)v14);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v14, 1, v8);
  uint64_t v59 = AssociatedTypeWitness;
  if (v21 == 1)
  {
    id v22 = v19;
    id v23 = v50;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
  }
  else
  {
    id v23 = v50;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v50, v14, v8);
  }
  uint64_t v24 = v60;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v60, v23, v8);
  uint64_t v48 = *(int *)(v17 + 20);
  *(void *)&v24[v48] = v19;
  id v25 = &v24[*(int *)(v17 + 24)];
  *(void *)id v25 = "SQLDB: Contains pending deletion children";
  *((void *)v25 + 1) = 41;
  uint64_t v50 = v25;
  v25[16] = 2;
  id v26 = v19;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_24DCCECE0;
  *(void *)(v27 + 56) = MEMORY[0x263F8D310];
  *(void *)(v27 + 64) = sub_24D3F7B98();
  *(void *)(v27 + 32) = v49;
  *(void *)(v27 + 40) = v20;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v23, v8);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v51, &qword_26B1990B0);
  id v28 = v57;
  uint64_t v29 = v58;
  unint64_t v30 = *(void **)((char *)v57 + qword_26B1A2590);
  uint64_t v31 = v53;
  uint64_t v32 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v53, v61, v59);
  unint64_t v33 = (*(unsigned __int8 *)(v29 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
  uint64_t v34 = swift_allocObject();
  uint64_t v35 = v55;
  *(void *)(v34 + 16) = v54;
  uint64_t v36 = v62;
  *(void *)(v34 + 24) = *(void *)(v35 + 736);
  *(void *)(v34 + 32) = v36;
  *(void *)(v34 + 40) = *(void *)(v35 + 752);
  *(unsigned char *)(v34 + 48) = v56 & 1;
  *(void *)(v34 + 56) = v28;
  (*(void (**)(unint64_t, char *, uint64_t))(v29 + 32))(v34 + v33, v31, v32);
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_24D95774C;
  *(void *)(v37 + 24) = v34;
  uint64_t v67 = sub_24D3E3980;
  uint64_t v68 = v37;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v64 = 1107296256;
  uint64_t v65 = sub_24D3E38DC;
  uint64_t v66 = &block_descriptor_917;
  uint64_t v38 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v39 = objc_msgSend(v30, sel_fetchSwift_error_, v38, &aBlock);
  _Block_release(v38);
  id v40 = aBlock;
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28) {
    __break(1u);
  }
  if (v39)
  {
    if (objc_msgSend(v39, sel_next))
    {
      uint64_t v41 = v46;
      uint64_t v42 = v47;
      (*(void (**)(id, void, uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 16))(v39, 0, v32);
      if (!v42) {
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56))(v41, 0, 1, v32);
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v46, 1, 1, v32);
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  uint64_t v43 = (uint64_t)v60;
  sub_24DCC8F98();
  sub_24D3FCA34(v43, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t sub_24D929028(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_24DCCA728();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v35 = MEMORY[0x263F8EE78];
    sub_24D7C720C(0, 8, 0);
    uint64_t v2 = v35;
    uint64_t v3 = qword_26FFA3798;
    unint64_t v5 = *(void *)(v35 + 16);
    unint64_t v4 = *(void *)(v35 + 24);
    int64_t v6 = v4 >> 1;
    unint64_t v7 = v5 + 1;
    if (v4 >> 1 <= v5)
    {
      sub_24D7C720C(v4 > 1, v5 + 1, 1);
      uint64_t v2 = v35;
      unint64_t v4 = *(void *)(v35 + 24);
      int64_t v6 = v4 >> 1;
    }
    *(void *)(v2 + 16) = v7;
    *(void *)(v2 + 8 * v5 + 32) = v3;
    uint64_t v8 = qword_26FFA37A0;
    if (v6 < (uint64_t)(v5 + 2))
    {
      sub_24D7C720C(v4 > 1, v5 + 2, 1);
      uint64_t v2 = v35;
    }
    *(void *)(v2 + 16) = v5 + 2;
    *(void *)(v2 + 8 * v7 + 32) = v8;
    uint64_t v9 = qword_26FFA37A8;
    unint64_t v11 = *(void *)(v2 + 16);
    unint64_t v10 = *(void *)(v2 + 24);
    unint64_t v12 = v11 + 1;
    if (v11 >= v10 >> 1) {
      sub_24D7C720C(v10 > 1, v11 + 1, 1);
    }
    uint64_t v13 = v35;
    *(void *)(v35 + 16) = v12;
    *(void *)(v35 + 8 * v11 + 32) = v9;
    uint64_t v14 = qword_26FFA37B0;
    unint64_t v15 = *(void *)(v35 + 24);
    if ((uint64_t)(v11 + 2) > (uint64_t)(v15 >> 1))
    {
      sub_24D7C720C(v15 > 1, v11 + 2, 1);
      uint64_t v13 = v35;
    }
    *(void *)(v13 + 16) = v11 + 2;
    *(void *)(v13 + 8 * v12 + 32) = v14;
    uint64_t v16 = qword_26FFA37B8;
    unint64_t v18 = *(void *)(v13 + 16);
    unint64_t v17 = *(void *)(v13 + 24);
    int64_t v19 = v17 >> 1;
    unint64_t v20 = v18 + 1;
    if (v17 >> 1 <= v18)
    {
      sub_24D7C720C(v17 > 1, v18 + 1, 1);
      uint64_t v13 = v35;
      unint64_t v17 = *(void *)(v35 + 24);
      int64_t v19 = v17 >> 1;
    }
    *(void *)(v13 + 16) = v20;
    *(void *)(v13 + 8 * v18 + 32) = v16;
    uint64_t v21 = qword_26FFA37C0;
    if (v19 < (uint64_t)(v18 + 2)) {
      sub_24D7C720C(v17 > 1, v18 + 2, 1);
    }
    uint64_t v22 = v35;
    *(void *)(v35 + 16) = v18 + 2;
    *(void *)(v35 + 8 * v20 + 32) = v21;
    uint64_t v23 = qword_26FFA37C8;
    unint64_t v25 = *(void *)(v35 + 16);
    unint64_t v24 = *(void *)(v35 + 24);
    int64_t v26 = v24 >> 1;
    unint64_t v27 = v25 + 1;
    if (v24 >> 1 <= v25)
    {
      sub_24D7C720C(v24 > 1, v25 + 1, 1);
      uint64_t v22 = v35;
      unint64_t v24 = *(void *)(v35 + 24);
      int64_t v26 = v24 >> 1;
    }
    *(void *)(v22 + 16) = v27;
    *(void *)(v22 + 8 * v25 + 32) = v23;
    uint64_t v28 = qword_26FFA37D0;
    if (v26 < (uint64_t)(v25 + 2))
    {
      sub_24D7C720C(v24 > 1, v25 + 2, 1);
      uint64_t v22 = v35;
    }
    *(void *)(v22 + 16) = v25 + 2;
    *(void *)(v22 + 8 * v27 + 32) = v28;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
    sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
    sub_24D3F0EB8();
    sub_24DCC9B28();
    swift_release();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_release();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v29 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  unint64_t v30 = *(void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  uint64_t v31 = swift_checkMetadataState();
  v30(a1, v31, v29);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if ((a2 & 1) == 0)
  {
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

void sub_24D929930(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = v2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v5 = *v2;
  uint64_t v6 = *(void *)(*v2 + 744);
  uint64_t v7 = *(void *)(*v2 + 728);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v11 = (char *)v21 - v10;
  id v24 = *(id *)((char *)v3 + qword_26B1A2590);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)v21 - v10, a1, AssociatedTypeWitness);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  v21[0] = v7;
  *((void *)v13 + 2) = v7;
  *((void *)v13 + 3) = *(void *)(v5 + 736);
  *((void *)v13 + 4) = v6;
  v21[1] = v6;
  *((void *)v13 + 5) = *(void *)(v5 + 752);
  *((void *)v13 + 6) = v3;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, AssociatedTypeWitness);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = sub_24D957640;
  v14[3] = v13;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v14;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_907;
  unint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v16 = objc_msgSend(v24, sel_fetchSwift_error_, v15, aBlock);
  _Block_release(v15);
  id v17 = aBlock[0];
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v15) {
    __break(1u);
  }
  if (!v16)
  {
    sub_24DCC8828();

    swift_willThrow();
LABEL_7:
    swift_release();
    return;
  }
  if (objc_msgSend(v16, sel_next))
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v20 = v22;
    uint64_t v19 = v23;
    (*(void (**)(id, void, uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 16))(v16, 0, AssociatedTypeWitness);
    if (!v19) {
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56))(v20, 0, 1, AssociatedTypeWitness);
    }
    goto LABEL_7;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v22, 1, 1, AssociatedTypeWitness);
  swift_release();
}

uint64_t sub_24D929D10(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D929FD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v60 = a1;
  uint64_t v46 = a2;
  uint64_t v68 = *MEMORY[0x263EF8340];
  uint64_t v55 = *v2;
  uint64_t v3 = *(void *)(v55 + 744);
  int v56 = v2;
  uint64_t v4 = *(void *)(v55 + 728);
  uint64_t v61 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v57 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v52 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v53 = (char *)&v44 - v6;
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v51 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v59 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  unint64_t v18 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v15, 1, 1, v7);
  id aBlock = 0;
  unint64_t v63 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v19 = v63;
  id v49 = aBlock;
  uint64_t v50 = v15;
  sub_24D409D24((uint64_t)v15, (uint64_t)v13);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  uint64_t v58 = AssociatedTypeWitness;
  uint64_t v54 = v4;
  if (v20 == 1)
  {
    id v21 = v18;
    uint64_t v22 = v51;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
  }
  else
  {
    uint64_t v22 = v51;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v51, v13, v7);
  }
  uint64_t v23 = v59;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v59, v22, v7);
  uint64_t v51 = (char *)*(int *)(v16 + 20);
  *(void *)&v51[(void)v23] = v18;
  id v24 = &v23[*(int *)(v16 + 24)];
  *(void *)id v24 = "SQLDB: Count materialized children";
  *((void *)v24 + 1) = 34;
  uint64_t v48 = v24;
  v24[16] = 2;
  id v25 = v18;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24DCCECE0;
  *(void *)(v26 + 56) = MEMORY[0x263F8D310];
  *(void *)(v26 + 64) = sub_24D3F7B98();
  *(void *)(v26 + 32) = v49;
  *(void *)(v26 + 40) = v19;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v22, v7);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v50, &qword_26B1990B0);
  unint64_t v27 = v56;
  uint64_t v28 = v57;
  uint64_t v29 = *(void **)((char *)v56 + qword_26B1A2590);
  unint64_t v30 = v53;
  uint64_t v31 = v58;
  (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v53, v60, v58);
  unint64_t v32 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  unint64_t v33 = (char *)swift_allocObject();
  uint64_t v34 = v55;
  *((void *)v33 + 2) = v54;
  uint64_t v35 = v61;
  *((void *)v33 + 3) = *(void *)(v34 + 736);
  *((void *)v33 + 4) = v35;
  *((void *)v33 + 5) = *(void *)(v34 + 752);
  *((void *)v33 + 6) = v27;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v33[v32], v30, v31);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_24D957614;
  *(void *)(v36 + 24) = v33;
  uint64_t v66 = sub_24D3E3980;
  uint64_t v67 = v36;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v63 = 1107296256;
  unint64_t v64 = sub_24D3E38DC;
  uint64_t v65 = &block_descriptor_897;
  uint64_t v37 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v38 = objc_msgSend(v29, sel_fetchSwift_error_, v37, &aBlock);
  _Block_release(v37);
  id v39 = aBlock;
  LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v37) {
    __break(1u);
  }
  if (v38)
  {
    if (objc_msgSend(v38, sel_next))
    {
      uint64_t v40 = v46;
      uint64_t v41 = v47;
      (*(void (**)(id, void, uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 16))(v38, 0, v31);
      if (!v41) {
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v28 + 56))(v40, 0, 1, v31);
      }
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 56))(v46, 1, 1, v31);
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  uint64_t v42 = (uint64_t)v59;
  sub_24DCC8F98();
  sub_24D3FCA34(v42, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t sub_24D92A7D0(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v5 = sub_24DA258D4();
  int64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_24D7C720C(0, v6, 0);
    uint64_t v7 = 0;
    unint64_t v8 = *(void *)(v13 + 16);
    do
    {
      uint64_t v9 = *(char *)(v5 + v7 + 32);
      unint64_t v10 = *(void *)(v13 + 24);
      if (v8 >= v10 >> 1) {
        sub_24D7C720C(v10 > 1, v8 + 1, 1);
      }
      ++v7;
      uint64_t v11 = qword_24DCDFB38[v9];
      *(void *)(v13 + 16) = v8 + 1;
      *(void *)(v13 + 8 * v8++ + 32) = v11;
    }
    while (v6 != v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
  sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
  sub_24D3F0EB8();
  sub_24DCC9B28();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D92ACE8(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v46 = (void *)*v1;
  uint64_t v2 = v46[93];
  uint64_t v47 = v1;
  uint64_t v50 = v46[91];
  uint64_t v51 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v42 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v43 = (char *)&v38 - v4;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  id aBlock = 0;
  unint64_t v53 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  uint64_t v45 = AssociatedTypeWitness;
  sub_24DCCADC8();
  unint64_t v18 = v53;
  id v40 = aBlock;
  uint64_t v41 = v13;
  sub_24D409D24((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    id v19 = v17;
    int v20 = v48;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v11, &qword_26B1990B0);
  }
  else
  {
    int v20 = v48;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v48, v11, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v16, v20, v5);
  uint64_t v39 = *(int *)(v14 + 20);
  *(void *)&v16[v39] = v17;
  id v21 = &v16[*(int *)(v14 + 24)];
  *(void *)id v21 = "SQLDB: Count pending rescan children";
  *((void *)v21 + 1) = 36;
  v21[16] = 2;
  id v22 = v17;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24DCCECE0;
  *(void *)(v23 + 56) = MEMORY[0x263F8D310];
  *(void *)(v23 + 64) = sub_24D3F7B98();
  *(void *)(v23 + 32) = v40;
  *(void *)(v23 + 40) = v18;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v48, v5);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v41, &qword_26B1990B0);
  id v24 = v47;
  id v25 = *(void **)((char *)v47 + qword_26B1A2590);
  unint64_t v27 = v43;
  uint64_t v26 = v44;
  uint64_t v28 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v49, v45);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v50;
  uint64_t v31 = v46;
  uint64_t v32 = v51;
  *((void *)v30 + 3) = v46[92];
  *((void *)v30 + 4) = v32;
  *((void *)v30 + 5) = v31[94];
  *((void *)v30 + 6) = v24;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v30[v29], v27, v28);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_24D9575E8;
  *(void *)(v33 + 24) = v30;
  int v56 = sub_24D3E3980;
  uint64_t v57 = v33;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v53 = 1107296256;
  uint64_t v54 = sub_24D3E38DC;
  uint64_t v55 = &block_descriptor_887;
  uint64_t v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v35 = objc_msgSend(v25, sel_fetchSwift_error_, v34, &aBlock);
  _Block_release(v34);
  id v36 = aBlock;
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v24) {
    __break(1u);
  }
  if (v35)
  {
    LOBYTE(v36) = objc_msgSend(v35, sel_next);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  sub_24DCC8F98();
  sub_24D3FCA34((uint64_t)v16, type metadata accessor for Signpost);
  swift_release();
  return v36 & 1;
}

uint64_t sub_24D92B470(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D92B6F8@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  int v66 = a2;
  uint64_t v74 = a1;
  uint64_t v59 = a3;
  uint64_t v81 = *MEMORY[0x263EF8340];
  uint64_t v69 = (void *)*v3;
  uint64_t v4 = v69[93];
  unint64_t v70 = v3;
  uint64_t v73 = v69[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v72 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v65 = *(void *)(v72 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v67 = (char *)&v57 - v6;
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v64 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v57 - v14;
  uint64_t v62 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v62);
  uint64_t v17 = (char *)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  unint64_t v18 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v15, 1, 1, v7);
  id aBlock = 0;
  unint64_t v76 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t v68 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v71 = AssociatedTypeWitness;
  sub_24DCCADC8();
  unint64_t v19 = v76;
  id v61 = aBlock;
  unint64_t v63 = v15;
  sub_24D409D24((uint64_t)v15, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7) == 1)
  {
    id v20 = v18;
    id v21 = v64;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
  }
  else
  {
    id v21 = v64;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v64, v13, v7);
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v17, v21, v7);
  uint64_t v22 = v62;
  unint64_t v64 = (char *)*(int *)(v62 + 20);
  *(void *)&v64[(void)v17] = v18;
  uint64_t v23 = &v17[*(int *)(v22 + 24)];
  *(void *)uint64_t v23 = "SQLDB: Count unbound children";
  *((void *)v23 + 1) = 29;
  id v24 = v17;
  uint64_t v62 = (uint64_t)v23;
  v23[16] = 2;
  id v25 = v18;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_24DCCECE0;
  *(void *)(v26 + 56) = MEMORY[0x263F8D310];
  *(void *)(v26 + 64) = sub_24D3F7B98();
  *(void *)(v26 + 32) = v61;
  *(void *)(v26 + 40) = v19;
  uint64_t v27 = (uint64_t)v24;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v21, v7);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v63, &qword_26B1990B0);
  uint64_t v28 = v70;
  uint64_t v29 = v71;
  unint64_t v30 = *(void **)((char *)v70 + qword_26B1A2590);
  uint64_t v31 = v72 + 16;
  uint64_t v32 = v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v72 + 16))(v67, v74, v71);
  unint64_t v33 = (*(unsigned __int8 *)(v31 + 64) + 56) & ~(unint64_t)*(unsigned __int8 *)(v31 + 64);
  uint64_t v34 = (void (**)(char *, char *, uint64_t))(v31 + 16);
  if ((v66 & 1) == 0)
  {
    uint64_t v44 = (void *)swift_allocObject();
    uint64_t v45 = v32;
    uint64_t v46 = v44;
    void v44[2] = v73;
    uint64_t v47 = v69;
    uint64_t v48 = v68;
    v44[3] = v69[92];
    v44[4] = v48;
    v44[5] = v47[94];
    v44[6] = v28;
    (*v34)((char *)v44 + v33, v45, v29);
    uint64_t v49 = swift_allocObject();
    *(void *)(v49 + 16) = sub_24D957590;
    *(void *)(v49 + 24) = v46;
    uint64_t v79 = sub_24D3E3980;
    uint64_t v80 = v49;
    id aBlock = (id)MEMORY[0x263EF8330];
    unint64_t v76 = 1107296256;
    uint64_t v77 = sub_24D3E38DC;
    unint64_t v78 = &block_descriptor_867;
    uint64_t v50 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    uint64_t v51 = (uint64_t (*)(uint64_t))objc_msgSend(v30, sel_fetchSwift_error_, v50, &aBlock);
    _Block_release(v50);
    id v52 = aBlock;
    LOBYTE(v50) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v50 & 1) == 0)
    {
      if (v51)
      {
        if ((objc_msgSend(v51, sel_next) & 1) == 0)
        {
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v59, 1, 1, v29);

          uint64_t v51 = 0;
          uint64_t v55 = sub_24D957590;
          goto LABEL_24;
        }
        uint64_t v53 = v59;
        uint64_t v54 = v60;
        (*(void (**)(uint64_t (*)(uint64_t), void, uint64_t))(*(void *)(AssociatedConformanceWitness
                                                                                             + 40)
                                                                                 + 16))(v51, 0, v29);
        if (!v54) {
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v53, 0, 1, v29);
        }
        uint64_t v51 = 0;
      }
      else
      {
        sub_24DCC8828();

        swift_willThrow();
      }
      uint64_t v55 = sub_24D957590;
      goto LABEL_24;
    }
LABEL_26:
    __break(1u);
  }
  id v35 = (char *)swift_allocObject();
  *((void *)v35 + 2) = v73;
  id v36 = v69;
  uint64_t v37 = v68;
  *((void *)v35 + 3) = v69[92];
  *((void *)v35 + 4) = v37;
  *((void *)v35 + 5) = v36[94];
  *((void *)v35 + 6) = v28;
  (*v34)(&v35[v33], v32, v29);
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_24D9575BC;
  *(void *)(v38 + 24) = v35;
  uint64_t v79 = sub_24D3E3980;
  uint64_t v80 = v38;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v76 = 1107296256;
  uint64_t v77 = sub_24D3E38DC;
  unint64_t v78 = &block_descriptor_877;
  uint64_t v39 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v40 = objc_msgSend(v30, sel_fetchSwift_error_, v39, &aBlock);
  _Block_release(v39);
  id v41 = aBlock;
  LOBYTE(v39) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v39)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v40)
  {
    if ((objc_msgSend(v40, sel_next) & 1) == 0)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v59, 1, 1, v29);

      uint64_t v55 = 0;
      uint64_t v51 = sub_24D9575BC;
      goto LABEL_24;
    }
    uint64_t v42 = v59;
    uint64_t v43 = v60;
    (*(void (**)(id, void, uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 16))(v40, 0, v29);
    if (!v43) {
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v72 + 56))(v42, 0, 1, v29);
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  uint64_t v55 = 0;
  uint64_t v51 = sub_24D9575BC;
LABEL_24:
  sub_24DCCA2C8();
  sub_24DCC8F98();
  sub_24D3FCA34(v27, type metadata accessor for Signpost);
  sub_24D43DD74((uint64_t)v51);
  return sub_24D43DD74((uint64_t)v55);
}

uint64_t sub_24D92C1CC(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D92C51C(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D92C7E4(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v58 = *MEMORY[0x263EF8340];
  uint64_t v46 = (void *)*v1;
  uint64_t v2 = v46[93];
  uint64_t v47 = v1;
  uint64_t v50 = v46[91];
  uint64_t v51 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v44 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v42 = *(void *)(v44 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v43 = (char *)&v38 - v4;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v48 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  id aBlock = 0;
  unint64_t v53 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  uint64_t v45 = AssociatedTypeWitness;
  sub_24DCCADC8();
  unint64_t v18 = v53;
  id v40 = aBlock;
  id v41 = v13;
  sub_24D409D24((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    id v19 = v17;
    id v20 = v48;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v11, &qword_26B1990B0);
  }
  else
  {
    id v20 = v48;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v48, v11, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v16, v20, v5);
  uint64_t v39 = *(int *)(v14 + 20);
  *(void *)&v16[v39] = v17;
  id v21 = &v16[*(int *)(v14 + 24)];
  *(void *)id v21 = "SQLDB: Count bound children";
  *((void *)v21 + 1) = 27;
  v21[16] = 2;
  id v22 = v17;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24DCCECE0;
  *(void *)(v23 + 56) = MEMORY[0x263F8D310];
  *(void *)(v23 + 64) = sub_24D3F7B98();
  *(void *)(v23 + 32) = v40;
  *(void *)(v23 + 40) = v18;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v48, v5);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v41, &qword_26B1990B0);
  id v24 = v47;
  id v25 = *(void **)((char *)v47 + qword_26B1A2590);
  uint64_t v27 = v43;
  uint64_t v26 = v44;
  uint64_t v28 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v49, v45);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v50;
  uint64_t v31 = v46;
  uint64_t v32 = v51;
  *((void *)v30 + 3) = v46[92];
  *((void *)v30 + 4) = v32;
  *((void *)v30 + 5) = v31[94];
  *((void *)v30 + 6) = v24;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v30[v29], v27, v28);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_24D957564;
  *(void *)(v33 + 24) = v30;
  int v56 = sub_24D3E3980;
  uint64_t v57 = v33;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v53 = 1107296256;
  uint64_t v54 = sub_24D3E38DC;
  uint64_t v55 = &block_descriptor_857;
  uint64_t v34 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v35 = objc_msgSend(v25, sel_fetchSwift_error_, v34, &aBlock);
  _Block_release(v34);
  id v36 = aBlock;
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v24) {
    __break(1u);
  }
  if (v35)
  {
    LOBYTE(v36) = objc_msgSend(v35, sel_next);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  sub_24DCC8F98();
  sub_24D3FCA34((uint64_t)v16, type metadata accessor for Signpost);
  swift_release();
  return v36 & 1;
}

uint64_t sub_24D92CF6C(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D92D240(uint64_t a1)
{
  uint64_t v49 = a1;
  uint64_t v59 = *MEMORY[0x263EF8340];
  uint64_t v44 = (void *)*v1;
  uint64_t v2 = v44[93];
  uint64_t v48 = v1;
  uint64_t v50 = v44[91];
  uint64_t v51 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v40 = *(void *)(v42 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v41 = (char *)&v40 - v4;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v52 = (char *)&v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v40 - v12;
  uint64_t v14 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v17 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v13, 1, 1, v5);
  id aBlock = 0;
  unint64_t v54 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  swift_getAssociatedConformanceWitness();
  uint64_t v43 = AssociatedTypeWitness;
  sub_24DCCADC8();
  unint64_t v18 = v54;
  id v46 = aBlock;
  uint64_t v47 = v13;
  sub_24D409D24((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    id v19 = v17;
    id v20 = v52;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v11, &qword_26B1990B0);
  }
  else
  {
    id v20 = v52;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v52, v11, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v16, v20, v5);
  uint64_t v45 = *(int *)(v14 + 20);
  *(void *)&v16[v45] = v17;
  id v21 = &v16[*(int *)(v14 + 24)];
  *(void *)id v21 = "SQLDB: Count keep downloaded children";
  *((void *)v21 + 1) = 37;
  v21[16] = 2;
  id v22 = v17;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_24DCCECE0;
  *(void *)(v23 + 56) = MEMORY[0x263F8D310];
  *(void *)(v23 + 64) = sub_24D3F7B98();
  *(void *)(v23 + 32) = v46;
  *(void *)(v23 + 40) = v18;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v52, v5);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v47, &qword_26B1990B0);
  id v24 = v48;
  if (*((unsigned char *)v48 + 32) == 1)
  {
    id v25 = *(void **)((char *)v48 + qword_26B1A2590);
    uint64_t v27 = v41;
    uint64_t v26 = v42;
    uint64_t v28 = v43;
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v49, v43);
    unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    unint64_t v30 = (char *)swift_allocObject();
    *((void *)v30 + 2) = v50;
    uint64_t v31 = v44;
    uint64_t v32 = v51;
    *((void *)v30 + 3) = v44[92];
    *((void *)v30 + 4) = v32;
    *((void *)v30 + 5) = v31[94];
    *((void *)v30 + 6) = v24;
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v30[v29], v27, v28);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_24D957538;
    *(void *)(v33 + 24) = v30;
    uint64_t v57 = sub_24D3E3980;
    uint64_t v58 = v33;
    id aBlock = (id)MEMORY[0x263EF8330];
    unint64_t v54 = 1107296256;
    uint64_t v55 = sub_24D3E38DC;
    int v56 = &block_descriptor_847;
    uint64_t v34 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    id v35 = objc_msgSend(v25, sel_fetchSwift_error_, v34, &aBlock, v40);
    _Block_release(v34);
    id v36 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v35)
    {
      sub_24DCC8828();

      swift_willThrow();
      sub_24DCCA2C8();
      sub_24DCC8F98();
      sub_24D3FCA34((uint64_t)v16, type metadata accessor for Signpost);
      swift_release();
      return v36 & 1;
    }
    LOBYTE(v36) = objc_msgSend(v35, sel_next);

    uint64_t v38 = sub_24D957538;
  }
  else
  {
    LOBYTE(v36) = 0;
    uint64_t v38 = 0;
  }
  sub_24DCCA2C8();
  sub_24DCC8F98();
  sub_24D3FCA34((uint64_t)v16, type metadata accessor for Signpost);
  sub_24D43DD74((uint64_t)v38);
  return v36 & 1;
}

uint64_t sub_24D92D9FC(uint64_t a1, void *a2)
{
  uint64_t v3 = (void *)*a2;
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v4 = v3[93];
  uint64_t v5 = v3[91];
  swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = swift_checkMetadataState();
  v7(a1, v8, v6);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v9 = v3[92];
  uint64_t v10 = v3[94];
  sub_24D9551E0(0, 0xE000000000000000);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D9552A4(0, 0xE000000000000000);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D955438(0, 0xE000000000000000, v5, v9, v4, v10, 501);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D92DD2C(uint64_t a1)
{
  uint64_t v41 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  id v46 = (void *)*v1;
  uint64_t v2 = v46[93];
  uint64_t v47 = v1;
  uint64_t v3 = v46[91];
  uint64_t v45 = v2;
  uint64_t v43 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v42 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v39 = *(void *)(v42 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v40 = (char *)&v36 - v4;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  unint64_t v18 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
  sub_24D409D24((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    id v19 = v18;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v17, v8, v5);
  uint64_t v37 = *(int *)(v15 + 20);
  *(void *)&v17[v37] = v18;
  id v20 = &v17[*(int *)(v15 + 24)];
  *(void *)id v20 = "SQLDB: Has reseting parent";
  *((void *)v20 + 1) = 26;
  v20[16] = 2;
  id v21 = v18;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
  id v22 = v47;
  id v38 = *(id *)((char *)v47 + qword_26B1A2590);
  uint64_t v23 = v42;
  id v24 = v40;
  uint64_t v25 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v40, v41, AssociatedTypeWitness);
  unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v27 = (v39 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = v43;
  unint64_t v29 = v46;
  uint64_t v30 = v45;
  *((void *)v28 + 3) = v46[92];
  *((void *)v28 + 4) = v30;
  *((void *)v28 + 5) = v29[94];
  *((void *)v28 + 6) = v22;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v28[v26], v24, v25);
  *(void *)&v28[v27] = 32776;
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = sub_24D95750C;
  v31[3] = v28;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v31;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_837;
  uint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v33 = objc_msgSend(v38, sel_fetchSwift_error_, v32, aBlock);
  _Block_release(v32);
  id v34 = aBlock[0];
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v22) {
    __break(1u);
  }
  if (v33)
  {
    LOBYTE(v34) = objc_msgSend(v33, sel_next);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  sub_24DCC8F98();
  sub_24D3FCA34((uint64_t)v17, type metadata accessor for Signpost);
  swift_release();
  return v34 & 1;
}

uint64_t sub_24D92E3C8(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (qword_26B197990 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
  sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
  sub_24D3F0EB8();
  sub_24DCC9B28();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

id sub_24D92E918(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  unint64_t v54 = (void *)*v2;
  uint64_t v4 = v54[93];
  uint64_t v55 = v2;
  uint64_t v5 = v54[91];
  uint64_t v53 = v4;
  uint64_t v51 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v47 = *(void *)(v50 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v48 = (char *)&v44 - v6;
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v44 - v15;
  uint64_t v17 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v17);
  int v56 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  id v19 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, 1, 1, v7);
  sub_24D409D24((uint64_t)v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
  {
    id v20 = v19;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
  }
  id v21 = v56;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v56, v10, v7);
  uint64_t v45 = *(int *)(v17 + 20);
  *(void *)&v21[v45] = v19;
  id v22 = &v21[*(int *)(v17 + 24)];
  *(void *)id v22 = "SQLDB: Has reuploading or reevaluating purgeability parent";
  *((void *)v22 + 1) = 58;
  id v46 = v22;
  v22[16] = 2;
  id v23 = v19;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_24D415F74((uint64_t)v16, &qword_26B1990B0);
  id v24 = v55;
  uint64_t v25 = *(void **)((char *)v55 + qword_26B1A2590);
  uint64_t v26 = v50;
  unint64_t v27 = v48;
  uint64_t v28 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v48, v49, AssociatedTypeWitness);
  unint64_t v29 = (*(unsigned __int8 *)(v26 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
  unint64_t v30 = (v47 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = (char *)swift_allocObject();
  *((void *)v31 + 2) = v51;
  uint64_t v32 = v54;
  uint64_t v33 = v53;
  *((void *)v31 + 3) = v54[92];
  *((void *)v31 + 4) = v33;
  *((void *)v31 + 5) = v32[94];
  *((void *)v31 + 6) = v24;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(&v31[v29], v27, v28);
  *(void *)&v31[v30] = a2;
  id v34 = (void *)swift_allocObject();
  void v34[2] = sub_24D9574E0;
  void v34[3] = v31;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v34;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_827;
  id v35 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v36 = objc_msgSend(v25, sel_fetchSwift_error_, v35, aBlock);
  _Block_release(v35);
  id v37 = aBlock[0];
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v35) {
    __break(1u);
  }
  if (v36)
  {
    uint64_t v38 = 0;
    while (objc_msgSend(v36, sel_next))
    {
      unint64_t v39 = (unint64_t)objc_msgSend(v36, sel_unsignedLongAtIndex_, 0);
      if ((v39 & ~v38) != 0) {
        unint64_t v40 = v39;
      }
      else {
        unint64_t v40 = 0;
      }
      v38 |= v40;
      id v37 = (id)(v38 & a2);
      if ((v38 & a2) == a2)
      {

        goto LABEL_17;
      }
    }

    id v37 = (id)(v38 & a2);
LABEL_17:
    sub_24DCCA2C8();
    uint64_t v42 = (uint64_t)v56;
    sub_24DCC8F98();
    sub_24D3FCA34(v42, type metadata accessor for Signpost);
    swift_release();
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v41 = (uint64_t)v56;
    sub_24DCC8F98();
    sub_24D3FCA34(v41, type metadata accessor for Signpost);
    swift_release();
  }
  return v37;
}

uint64_t sub_24D92F008(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (qword_26B197990 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
  sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
  sub_24D3F0EB8();
  sub_24DCC9B28();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D92F560(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v14 - v8;
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v14 - v11;
  sub_24D9233BC(a1, (uint64_t)v9);
  if (!v2)
  {
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, AssociatedTypeWitness) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
      char v1 = 0;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, AssociatedTypeWitness);
      char v1 = sub_24D92F7A8((uint64_t)v12);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v12, AssociatedTypeWitness);
    }
  }
  return v1 & 1;
}

uint64_t sub_24D92F7A8(uint64_t a1)
{
  uint64_t v40 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v45 = (void *)*v1;
  uint64_t v2 = v45[93];
  id v46 = v1;
  uint64_t v3 = v45[91];
  uint64_t v44 = v2;
  uint64_t v42 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v41 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v38 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v39 = (char *)&v36 - v4;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v36 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
  sub_24D409D24((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    id v19 = v18;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v17, v8, v5);
  uint64_t v37 = *(int *)(v15 + 20);
  *(void *)&v17[v37] = v18;
  id v20 = &v17[*(int *)(v15 + 24)];
  *(void *)id v20 = "SQLDB: Has ignored parent";
  *((void *)v20 + 1) = 25;
  v20[16] = 2;
  id v21 = v18;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
  id v22 = v46;
  id v23 = *(void **)((char *)v46 + qword_26B1A2590);
  uint64_t v24 = v41;
  uint64_t v25 = v39;
  uint64_t v26 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v39, v40, AssociatedTypeWitness);
  unint64_t v27 = (*(unsigned __int8 *)(v24 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = v42;
  unint64_t v29 = v45;
  uint64_t v30 = v44;
  *((void *)v28 + 3) = v45[92];
  *((void *)v28 + 4) = v30;
  *((void *)v28 + 5) = v29[94];
  *((void *)v28 + 6) = v22;
  (*(void (**)(char *, char *, uint64_t))(v24 + 32))(&v28[v27], v25, v26);
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = sub_24D9574B4;
  v31[3] = v28;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v31;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_817;
  uint64_t v32 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v33 = objc_msgSend(v23, sel_fetchSwift_error_, v32, aBlock);
  _Block_release(v32);
  id v34 = aBlock[0];
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v22) {
    __break(1u);
  }
  if (v33)
  {
    LOBYTE(v34) = objc_msgSend(v33, sel_next);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  sub_24DCC8F98();
  sub_24D3FCA34((uint64_t)v17, type metadata accessor for Signpost);
  swift_release();
  return v34 & 1;
}

uint64_t sub_24D92FE2C(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D930210(void *a1, uint64_t a2, int a3)
{
  int v58 = a3;
  uint64_t v50 = a2;
  id v52 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  int v56 = (void *)*v3;
  uint64_t v5 = v56[93];
  uint64_t v59 = v56[91];
  uint64_t v60 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v55 = AssociatedTypeWitness;
  uint64_t v51 = *(void *)(v54 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v53 = (char *)v48 - v7;
  uint64_t v8 = sub_24DCC8FC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)v48 - v16;
  uint64_t v18 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v18);
  id v61 = (char *)v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  id v20 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
  uint64_t v49 = v17;
  sub_24D409D24((uint64_t)v17, (uint64_t)v15);
  int v21 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8);
  uint64_t v57 = v3;
  if (v21 == 1)
  {
    id v22 = v20;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
  }
  id v23 = v61;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v61, v11, v8);
  v48[0] = *(int *)(v18 + 20);
  *(void *)&v23[v48[0]] = v20;
  uint64_t v24 = &v23[*(int *)(v18 + 24)];
  *(void *)uint64_t v24 = "SQLDB: Scan directory";
  *((void *)v24 + 1) = 21;
  v24[16] = 2;
  id v25 = v20;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_24D415F74((uint64_t)v49, &qword_26B1990B0);
  v48[1] = v24;
  if (v50)
  {
    type metadata accessor for PaginatedContinuation();
    uint64_t v26 = swift_dynamicCastClass();
    uint64_t v27 = (uint64_t)v57;
    if (!v26)
    {
      uint64_t result = sub_24DCCA978();
      __break(1u);
      return result;
    }
    uint64_t v50 = *(void *)(v26 + 16);
  }
  else
  {
    uint64_t v50 = 0;
    uint64_t v27 = (uint64_t)v57;
  }
  id v28 = v52;
  unint64_t v29 = v53;
  id v52 = *(id *)(v27 + qword_26B1A2590);
  uint64_t v30 = v54;
  uint64_t v31 = v55;
  (*(void (**)(char *, id, uint64_t))(v54 + 16))(v53, v28, v55);
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  unint64_t v33 = (v51 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = v59;
  id v35 = v56;
  uint64_t v36 = v60;
  *(void *)(v34 + 24) = v56[92];
  *(void *)(v34 + 32) = v36;
  *(void *)(v34 + 40) = v35[94];
  *(void *)(v34 + 48) = v27;
  *(unsigned char *)(v34 + 56) = v58 & 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v30 + 32))(v34 + v32, v29, v31);
  *(void *)(v34 + v33) = v50;
  *(void *)(v34 + ((v33 + 15) & 0xFFFFFFFFFFFFFFF8)) = 200;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = sub_24D9585C4;
  v37[3] = v34;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v37;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_1148;
  uint64_t v38 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v39 = objc_msgSend(v52, sel_fetchSwift_error_, v38, aBlock);
  _Block_release(v38);
  id v40 = aBlock[0];
  LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v31)
  {
    __break(1u);
    goto LABEL_25;
  }
  if (v39)
  {
    uint64_t v41 = type metadata accessor for SnapshotItem();
    id v40 = (id)sub_24DCC9C98();
    uint64_t v62 = 0;
    aBlock[0] = v40;
    if (!objc_msgSend(v39, sel_next)) {
      goto LABEL_17;
    }
    char v42 = v58;
    do
    {
      id v40 = (id)MEMORY[0x253329610]();
      sub_24D930DF4(&v62, v39, v27, v42 & 1, (uint64_t)aBlock);
      if (v4)
      {

        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
    }
    while ((objc_msgSend(v39, sel_next) & 1) != 0);
    id v40 = aBlock[0];
LABEL_17:
    uint64_t v43 = swift_bridgeObjectRetain();
    uint64_t v44 = MEMORY[0x253327D80](v43, v41);
    swift_bridgeObjectRelease();

    if (v44 == 200)
    {
      uint64_t v45 = v62 + 1;
      if (!__OFADD__(v62, 1))
      {
        type metadata accessor for PaginatedContinuation();
        *(void *)(swift_allocObject() + 16) = v45;
        goto LABEL_23;
      }
LABEL_25:
      __break(1u);
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
LABEL_23:
  sub_24DCCA2C8();
  uint64_t v46 = (uint64_t)v61;
  sub_24DCC8F98();
  sub_24D3FCA34(v46, type metadata accessor for Signpost);
  swift_release();
  return (uint64_t)v40;
}

uint64_t sub_24D930A5C(void *a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (*(unsigned char *)(a2 + 32) == 1 && (a3 & 1) != 0)
  {
    sub_24DCCA728();
    sub_24DCC9968();
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
  }
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v8 = *(void (**)(void *, uint64_t, uint64_t))(v7 + 32);
  uint64_t v9 = swift_checkMetadataState();
  v8(a1, v9, v7);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v10 = objc_msgSend(a1, sel_bindLongParameter_, a5);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v11 = objc_msgSend(a1, sel_bindLongParameter_, a6);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

id sub_24D930DF4(void *a1, void *a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t v40 = a5;
  LODWORD(v62) = a4;
  uint64_t v9 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v37 - v14;
  *a1 = objc_msgSend(a2, sel_longAtIndex_, 0);
  uint64_t WitnessTable = swift_getWitnessTable();
  id result = (id)sub_24DA6D518(a2, 1, (uint64_t)v9, WitnessTable, (uint64_t)v15);
  if (!v5)
  {
    uint64_t v38 = v10;
    uint64_t v39 = 0;
    uint64_t v18 = v15;
    uint64_t v19 = v13;
    if (*(unsigned char *)(a3 + 32) == 1)
    {
      if (v62)
      {
        LODWORD(v62) = *(_DWORD *)(a3 + qword_26B1A2580);
        int v20 = v62 + 1;
        if (!__OFADD__(v62, 1))
        {
          int v21 = v18;
          id v22 = sub_24D403898();
          uint64_t v23 = v39;
          sub_24D4087EC(a2, (uint64_t)v22, v20, (uint64_t)&v46);
          if (v23)
          {
            swift_bridgeObjectRelease();
            return (id)(*(uint64_t (**)(char *, int *))(v38 + 8))(v18, v9);
          }
          swift_bridgeObjectRelease();
          v41[12] = v58;
          v41[13] = v59;
          v41[14] = v60;
          v41[8] = v54;
          v41[9] = v55;
          v41[10] = v56;
          v41[11] = v57;
          v41[4] = v50;
          v41[5] = v51;
          v41[6] = v52;
          v41[7] = v53;
          v41[0] = v46;
          v41[1] = v47;
          v41[2] = v48;
          v41[3] = v49;
          v43[12] = v58;
          v43[13] = v59;
          v43[14] = v60;
          v43[8] = v54;
          v43[9] = v55;
          v43[10] = v56;
          v43[11] = v57;
          unsigned char v43[4] = v50;
          v43[5] = v51;
          v43[6] = v52;
          v43[7] = v53;
          v43[0] = v46;
          v43[1] = v47;
          uint64_t v42 = v61;
          uint64_t v44 = v61;
          v43[2] = v48;
          v43[3] = v49;
          nullsub_1(v43);
          uint64_t v30 = (uint64_t)&v18[v9[13]];
          sub_24D5013B0(v30, (uint64_t)v45);
          sub_24D3FBB70((uint64_t)v41);
          sub_24D401194(v45, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
          sub_24D5013B0((uint64_t)v43, v30);
          uint64_t v31 = swift_getWitnessTable();
          id result = (id)sub_24D98BCC4((uint64_t)v9, v31);
          if (result != 1)
          {
            sub_24D95869C((uint64_t)v41);
            goto LABEL_19;
          }
          int v32 = *(_DWORD *)(a3 + qword_26B1A2598);
          uint64_t v33 = (v62 + v32);
          if (!__OFADD__(v62, v32))
          {
            id result = objc_msgSend(a2, sel_unsignedLongAtIndex_, v33);
            if (!__OFADD__(v33, 1))
            {
              id v34 = result;
              id v35 = objc_msgSend(a2, sel_unsignedLongAtIndex_, (v33 + 1));
              sub_24D95869C((uint64_t)v41);
              uint64_t v36 = &v18[v9[15]];
              *(void *)uint64_t v36 = v34;
              *((void *)v36 + 1) = v35;
              v36[16] = 0;
              goto LABEL_19;
            }
LABEL_26:
            __break(1u);
            return result;
          }
LABEL_25:
          __break(1u);
          goto LABEL_26;
        }
        __break(1u);
        goto LABEL_23;
      }
    }
    else if (v62)
    {
      uint64_t v24 = swift_getWitnessTable();
      int v21 = v15;
      if (sub_24D98BCC4((uint64_t)v9, v24) == 1)
      {
        unsigned int v25 = *(_DWORD *)(a3 + qword_26B1A2580);
        id result = objc_msgSend(a2, sel_unsignedLongAtIndex_, v25);
        id v62 = result;
        if (!__OFADD__(v25, 1))
        {
          id result = objc_msgSend(a2, sel_unsignedLongAtIndex_, v25 + 1);
          if (!__OFADD__(v25, 2))
          {
            id v26 = result;
            id v27 = objc_msgSend(a2, sel_unsignedLongAtIndex_, v25 + 2);
            id v28 = &v21[v9[14]];
            *(void *)id v28 = v62;
            *((void *)v28 + 1) = v26;
            *((void *)v28 + 2) = v27;
            v28[24] = 0;
LABEL_19:
            uint64_t v29 = v38;
            goto LABEL_20;
          }
          goto LABEL_24;
        }
LABEL_23:
        __break(1u);
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      uint64_t v29 = v38;
LABEL_20:
      (*(void (**)(char *, char *, int *))(v29 + 16))(v19, v21, v9);
      sub_24DCC9D48();
      sub_24DCC9D08();
      return (id)(*(uint64_t (**)(char *, int *))(v29 + 8))(v21, v9);
    }
    uint64_t v29 = v38;
    int v21 = v18;
    goto LABEL_20;
  }
  return result;
}

uint64_t sub_24D9312CC(void *a1, uint64_t a2)
{
  return sub_24D930210(a1, a2, 0);
}

uint64_t sub_24D9312E8(uint64_t a1)
{
  char v114 = (char *)a1;
  uint64_t v121 = *MEMORY[0x263EF8340];
  unint64_t v3 = *(void *)(*(void *)v1 + 736);
  uint64_t v4 = *(id (**)(uint64_t, void *))(*(void *)v1 + 744);
  uint64_t v5 = *(void **)(*(void *)v1 + 752);
  id aBlock = *(char **)(*(void *)v1 + 728);
  uint64_t v2 = aBlock;
  unint64_t v116 = v3;
  unint64_t v93 = v3;
  unint64_t v117 = v4;
  id v118 = v5;
  uint64_t v92 = v5;
  uint64_t v88 = type metadata accessor for PersistenceTrigger();
  uint64_t v90 = *(void *)(v88 - 8);
  MEMORY[0x270FA5388](v88);
  uint64_t v91 = (char *)&v85 - v6;
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v89 = sub_24DCCA3F8();
  uint64_t v86 = *(void *)(v89 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v89);
  uint64_t v101 = (char *)&v85 - v9;
  unint64_t v95 = (int *)v7;
  uint64_t v96 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v94 = (char *)&v85 - v10;
  uint64_t v11 = sub_24DCC8288();
  MEMORY[0x270FA5388](v11 - 8);
  unint64_t v98 = (char *)&v85 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = sub_24DCC82A8();
  uint64_t v99 = *(void *)(v100 - 8);
  MEMORY[0x270FA5388](v100);
  uint64_t v97 = (char *)&v85 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v107 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v85 = *(void *)(v107 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v110 = (char *)&v85 - v15;
  uint64_t v16 = sub_24DCC8FC8();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v106 = (char *)&v85 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  id v22 = (char *)&v85 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v85 - v23;
  uint64_t v25 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v25);
  uint64_t v113 = (char *)&v85 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  id v27 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v24, 1, 1, v16);
  id aBlock = 0;
  unint64_t v116 = 0xE000000000000000;
  sub_24DCC9968();
  uint64_t v87 = v4;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v108 = (char *)AssociatedTypeWitness;
  sub_24DCCADC8();
  unint64_t v28 = v116;
  uint64_t v104 = aBlock;
  id v105 = v24;
  sub_24D409D24((uint64_t)v24, (uint64_t)v22);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v22, 1, v16) == 1)
  {
    id v29 = v27;
    uint64_t v30 = v106;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v22, &qword_26B1990B0);
  }
  else
  {
    uint64_t v30 = v106;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v106, v22, v16);
  }
  uint64_t v31 = v113;
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v113, v30, v16);
  uint64_t v106 = (char *)*(int *)(v25 + 20);
  *(void *)&v106[(void)v31] = v27;
  int v32 = &v31[*(int *)(v25 + 24)];
  *(void *)int v32 = "SQLDB: Delete Item";
  *((void *)v32 + 1) = 18;
  int v103 = v32;
  v32[16] = 2;
  id v33 = v27;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v34 = swift_allocObject();
  *(_OWORD *)(v34 + 16) = xmmword_24DCCECE0;
  *(void *)(v34 + 56) = MEMORY[0x263F8D310];
  *(void *)(v34 + 64) = sub_24D3F7B98();
  *(void *)(v34 + 32) = v104;
  *(void *)(v34 + 40) = v28;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v17 + 8))(v30, v16);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v105, &qword_26B1990B0);
  id v35 = v109;
  uint64_t v36 = *(void **)&v109[qword_26B1A2590];
  objc_msgSend(v36, sel_assertOnQueue);
  uint64_t v37 = v110;
  sub_24DBB275C();
  uint64_t v38 = (uint64_t)v114;
  uint64_t v39 = v108;
  char v40 = sub_24DCC9798();
  uint64_t v41 = v107;
  (*(void (**)(char *, char *))(v107 + 8))(v37, v39);
  if (v40)
  {
    sub_24DCC8258();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D4A4604();
    uint64_t v42 = v97;
    uint64_t v43 = v100;
    sub_24DCC8808();
    sub_24DCC8128();
    (*(void (**)(char *, uint64_t))(v99 + 8))(v42, v43);
    swift_willThrow();
LABEL_9:
    long long v46 = 0;
LABEL_13:
    sub_24DCCA2C8();
    uint64_t v56 = (uint64_t)v113;
    sub_24DCC8F98();
    sub_24D3FCA34(v56, type metadata accessor for Signpost);
    return sub_24D43DD74((uint64_t)v46);
  }
  uint64_t v45 = v101;
  uint64_t v44 = v102;
  sub_24D91FEC8(v38, 1, v101);
  if (v44) {
    goto LABEL_9;
  }
  uint64_t v47 = v96;
  long long v48 = v95;
  int v49 = (*(uint64_t (**)(char *, uint64_t, int *))(v96 + 48))(v45, 1, v95);
  id v105 = 0;
  if (v49 == 1)
  {
    (*(void (**)(char *, uint64_t))(v86 + 8))(v45, v89);
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      uint64_t v51 = result;
      long long v52 = v91;
      (*(void (**)(char *, uint64_t, char *))(v41 + 16))(v91, v38, v39);
      uint64_t v53 = swift_getAssociatedTypeWitness();
      uint64_t v54 = swift_getAssociatedConformanceWitness();
      id aBlock = v39;
      unint64_t v116 = v53;
      unint64_t v117 = (id (*)(uint64_t, void *))AssociatedConformanceWitness;
      id v118 = (void *)v54;
      type metadata accessor for ReconciliationID();
      swift_storeEnumTagMultiPayload();
      uint64_t v55 = v88;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *))(*(void *)v51 + 312))(v52);
      swift_release();
      (*(void (**)(char *, uint64_t))(v90 + 8))(v52, v55);
      long long v46 = 0;
      goto LABEL_13;
    }
    __break(1u);
    goto LABEL_28;
  }
  (*(void (**)(char *, char *, int *))(v47 + 32))(v94, v45, v48);
  long long v57 = *(void (**)(void, void, void))(v41 + 16);
  long long v58 = v110;
  uint64_t v104 = (char *)(v41 + 16);
  id v102 = v57;
  v57(v110, v38, v39);
  unint64_t v59 = (*(unsigned __int8 *)(v41 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80);
  long long v60 = (void *)swift_allocObject();
  uint64_t v61 = v41;
  id v62 = v60;
  unint64_t v63 = v93;
  v60[2] = v111;
  v60[3] = v63;
  unint64_t v64 = v92;
  v60[4] = v87;
  v60[5] = v64;
  v60[6] = v35;
  (*(void (**)(char *, char *, char *))(v61 + 32))((char *)v60 + v59, v58, v39);
  uint64_t v65 = (void *)swift_allocObject();
  v65[2] = sub_24D9573B8;
  v65[3] = v62;
  uint64_t v119 = sub_24D3E3980;
  int v120 = v65;
  id aBlock = (char *)MEMORY[0x263EF8330];
  unint64_t v116 = 1107296256;
  unint64_t v117 = sub_24D3E38DC;
  id v118 = &block_descriptor_807;
  int v66 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v67 = objc_msgSend(v36, sel_executeSwift_error_, v66, &aBlock);
  _Block_release(v66);
  id v68 = aBlock;
  uint64_t v69 = aBlock;
  LOBYTE(v66) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v66)
  {
    __break(1u);
LABEL_26:
    swift_once();
    goto LABEL_18;
  }
  uint64_t v39 = v91;
  if (!v67)
  {
    sub_24DCC8828();

    swift_willThrow();
    (*(void (**)(char *, int *))(v96 + 8))(v94, v95);
    long long v46 = sub_24D9573B8;
    goto LABEL_13;
  }
  sub_24D91BB90((uint64_t)v114);
  char v114 = v35 + 24;
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v65 = (void *)result;
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v71 = &v39[*(int *)(TupleTypeMetadata3 + 48)];
  id v68 = (id)*(int *)(TupleTypeMetadata3 + 64);
  uint64_t v72 = v96;
  id v35 = v94;
  uint64_t v69 = v95;
  (*(void (**)(char *, char *, int *))(v96 + 16))(v39, v94, v95);
  uint64_t v73 = *(void (**)(char *, uint64_t, uint64_t, int *))(v72 + 56);
  v73(v39, 0, 1, v69);
  v73(v71, 1, 1, v69);
  if (qword_26B199AA0 != -1) {
    goto LABEL_26;
  }
LABEL_18:
  *(void *)((char *)v68 + (void)v39) = qword_26B1A24C8;
  uint64_t v74 = v88;
  swift_storeEnumTagMultiPayload();
  (*(void (**)(char *))(*v65 + 312))(v39);
  swift_release();
  uint64_t v75 = v90 + 8;
  unint64_t v76 = *(void (**)(char *, uint64_t))(v90 + 8);
  v76(v39, v74);
  uint64_t v77 = (uint64_t)&v35[v69[9]];
  uint64_t v78 = (uint64_t)v105;
  char v79 = sub_24D927A54(v77, 1);
  uint64_t v80 = v69;
  id v105 = (char *)v78;
  if (v78)
  {
    (*(void (**)(char *, int *))(v96 + 8))(v35, v69);
    long long v46 = sub_24D9573B8;
    goto LABEL_13;
  }
  if (v79)
  {
LABEL_24:
    (*(void (**)(char *, int *))(v96 + 8))(v94, v80);
    long long v46 = sub_24D9573B8;
    goto LABEL_13;
  }
  uint64_t v90 = v75;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v81 = result;
    uint64_t v82 = v91;
    v102(v91, v77, v108);
    uint64_t v83 = swift_getAssociatedTypeWitness();
    uint64_t v84 = swift_getAssociatedConformanceWitness();
    id aBlock = v108;
    unint64_t v116 = v83;
    unint64_t v117 = (id (*)(uint64_t, void *))AssociatedConformanceWitness;
    id v118 = (void *)v84;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))(*(void *)v81 + 312))(v82);
    swift_release();
    v76(v82, v74);
    goto LABEL_24;
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_24D932394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  uint64_t v9 = swift_checkMetadataState();
  v8(a1, v9, v7);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return a5;
}

void sub_24D932518(uint64_t a1)
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 744);
  uint64_t v5 = *(void *)(*v1 + 728);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v17 - v8;
  id v18 = *(id *)((char *)v1 + qword_26B1A2590);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 16);
  uint64_t v17 = a1;
  v10((char *)&v17 - v8, a1, AssociatedTypeWitness);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = v5;
  *((void *)v12 + 3) = *(void *)(v3 + 736);
  *((void *)v12 + 4) = v4;
  *((void *)v12 + 5) = *(void *)(v3 + 752);
  *((void *)v12 + 6) = v1;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v12[v11], v9, AssociatedTypeWitness);
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = sub_24D95738C;
  v13[3] = v12;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v13;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_797;
  uint64_t v14 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v15 = objc_msgSend(v18, sel_fetchSwift_error_, v14, aBlock);
  _Block_release(v14);
  id v16 = aBlock[0];
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v14) {
    __break(1u);
  }
  if (v15)
  {
    if (objc_msgSend(v15, sel_next))
    {
      swift_release();
    }
    else
    {
      sub_24D9312E8(v17);
      swift_release();
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
}

uint64_t sub_24D93286C(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D9329EC(uint64_t a1)
{
  uint64_t v2 = v1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *(void **)v2;
  uint64_t v18 = *(void *)(*(void *)v2 + 744);
  uint64_t v5 = v4[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v17 - v8;
  id v19 = *(id *)(v2 + qword_26B1A2590);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - v8, a1, AssociatedTypeWitness);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = v5;
  *((void *)v11 + 3) = v4[92];
  *((void *)v11 + 4) = v18;
  *((void *)v11 + 5) = v4[94];
  *((void *)v11 + 6) = v2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, AssociatedTypeWitness);
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = sub_24D9584A4;
  v12[3] = v11;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v12;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_1138;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v14 = objc_msgSend(v19, sel_executeSwift_error_, v13, aBlock);
  _Block_release(v13);
  id v15 = aBlock[0];
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v13) {
    __break(1u);
  }
  if (v14) {
    return swift_release();
  }
  sub_24DCC8828();

  swift_willThrow();
  return swift_release();
}

uint64_t sub_24D932D1C(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D932F9C(void (**a1)(char *, uint64_t))
{
  uint64_t v88 = a1;
  uint64_t v2 = *(void *)(*(void *)v1 + 728);
  uint64_t v94 = *(void *)(*(void *)v1 + 744);
  uint64_t v91 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_24D958460();
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  uint64_t v81 = *(void *)(TupleTypeMetadata3 - 8);
  MEMORY[0x270FA5388](TupleTypeMetadata3);
  uint64_t v87 = (char *)&v71 - v5;
  uint64_t v73 = sub_24DCCA3F8();
  uint64_t v72 = *(void *)(v73 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v73);
  uint64_t v80 = (char *)&v71 - v7;
  char v79 = *(void **)(AssociatedTypeWitness - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v74 = (char *)&v71 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v90 = (char *)&v71 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v89 = (char *)&v71 - v12;
  uint64_t v13 = sub_24DCC8FC8();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v78 = (uint64_t *)((char *)&v71 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  id v19 = (char *)&v71 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v71 - v20;
  uint64_t v22 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v22);
  uint64_t v83 = (char *)&v71 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v24 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v21, 1, 1, v13);
  uint64_t v92 = 0;
  unint64_t v93 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  unint64_t v25 = v93;
  uint64_t v77 = (unsigned int (**)(char *, uint64_t, uint64_t))v92;
  uint64_t v84 = v21;
  sub_24D409D24((uint64_t)v21, (uint64_t)v19);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v19, 1, v13);
  uint64_t v91 = TupleTypeMetadata3;
  uint64_t v94 = AssociatedTypeWitness;
  if (v26 == 1)
  {
    id v27 = v24;
    unint64_t v28 = v78;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v19, &qword_26B1990B0);
  }
  else
  {
    unint64_t v28 = v78;
    (*(void (**)(void *, char *, uint64_t))(v14 + 32))(v78, v19, v13);
  }
  id v29 = v83;
  (*(void (**)(char *, void *, uint64_t))(v14 + 16))(v83, v28, v13);
  uint64_t v76 = *(int *)(v22 + 20);
  *(void *)&v29[v76] = v24;
  uint64_t v30 = &v29[*(int *)(v22 + 24)];
  *(void *)uint64_t v30 = "SQLDB: Recursive Delete Children";
  *((void *)v30 + 1) = 32;
  uint64_t v75 = v30;
  v30[16] = 2;
  id v31 = v24;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_24DCCECE0;
  *(void *)(v32 + 56) = MEMORY[0x263F8D310];
  *(void *)(v32 + 64) = sub_24D3F7B98();
  *(void *)(v32 + 32) = v77;
  *(void *)(v32 + 40) = v25;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(void *, uint64_t))(v14 + 8))(v28, v13);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v84, &qword_26B1990B0);
  objc_msgSend(*(id *)(v82 + qword_26B1A2590), sel_assertOnQueue);
  uint64_t v33 = v91;
  sub_24DCCAD88();
  swift_allocObject();
  uint64_t v78 = (void *)sub_24DCC9C58();
  uint64_t v35 = v34;
  uint64_t v36 = v79;
  uint64_t v38 = (char *)(v79 + 2);
  uint64_t v37 = (char *)v79[2];
  uint64_t v39 = (uint64_t)v88;
  uint64_t v40 = v94;
  ((void (*)(uint64_t, void (**)(char *, uint64_t), uint64_t))v37)(v34, v88, v94);
  uint64_t v41 = v85;
  id v42 = sub_24D9248A8(v39);
  if (v41)
  {
    ((void (*)(uint64_t, uint64_t))v36[1])(v35, v40);
    sub_24D791050((uint64_t)v78);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_24DCCA2C8();
    uint64_t v69 = (uint64_t)v83;
  }
  else
  {
    uint64_t v84 = v37;
    uint64_t v85 = v38;
    uint64_t v43 = *(int *)(v33 + 64);
    *(void *)(v35 + *(int *)(v33 + 48)) = v42;
    *(unsigned char *)(v35 + v43) = 0;
    uint64_t v92 = sub_24D785484((uint64_t)v78);
    uint64_t v44 = sub_24DCC9D48();
    uint64_t v77 = (unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
    uint64_t v78 = v36 + 4;
    uint64_t v88 = (void (**)(char *, uint64_t))(v36 + 1);
    uint64_t v45 = (uint64_t)v89;
LABEL_10:
    long long v46 = v80;
    while (1)
    {
      uint64_t WitnessTable = swift_getWitnessTable();
      uint64_t v48 = swift_getWitnessTable();
      MEMORY[0x2533280E0](v44, WitnessTable, v48);
      if ((*v77)(v46, 1, v33) == 1) {
        break;
      }
      int v49 = *(void **)&v46[*(int *)(v33 + 48)];
      LODWORD(v81) = v46[*(int *)(v33 + 64)];
      long long v50 = (void *)*v78;
      ((void (*)(uint64_t, char *, uint64_t))*v78)(v45, v46, v40);
      if (objc_msgSend(v49, sel_next))
      {
        char v79 = v50;
        while (2)
        {
          uint64_t v51 = *(int *)(v33 + 48);
          uint64_t v52 = *(int *)(v33 + 64);
          uint64_t v53 = v87;
          ((void (*)(char *, uint64_t, uint64_t))v84)(v87, v45, v40);
          *(void *)&v53[v51] = v49;
          v53[v52] = 1;
          id v54 = v49;
          sub_24DCC9D08();
          uint64_t v55 = *(void (**)(void))(*(void *)(AssociatedConformanceWitness + 40) + 16);
          id v56 = v54;
          v55();
          switch((unint64_t)objc_msgSend(v56, sel_longAtIndex_, 1))
          {
            case 0uLL:
            case 2uLL:
            case 4uLL:
              uint64_t v40 = v94;
              (*v88)(v90, v94);
              unsigned __int8 v57 = objc_msgSend(v56, sel_next);
              uint64_t v33 = v91;
              uint64_t v45 = (uint64_t)v89;
              if ((v57 & 1) == 0) {
                break;
              }
              continue;
            case 1uLL:
              long long v58 = v74;
              uint64_t v59 = (uint64_t)v90;
              ((void (*)(char *, char *, uint64_t))v84)(v74, v90, v94);
              id v60 = sub_24D9248A8(v59);
              uint64_t v33 = v91;
              uint64_t v61 = *(int *)(v91 + 48);
              id v62 = v58;
              uint64_t v63 = *(int *)(v91 + 64);
              unint64_t v64 = v87;
              ((void (*)(char *, char *, uint64_t))v79)(v87, v62, v94);
              *(void *)&v64[v61] = v60;
              v64[v63] = 0;
              uint64_t v40 = v94;
              sub_24DCC9D08();

              uint64_t v65 = *v88;
              (*v88)((char *)v59, v40);
              uint64_t v45 = (uint64_t)v89;
              v65(v89, v40);
              goto LABEL_10;
            default:
              sub_24D511F64();
              swift_allocError();
              *int v66 = 0;
              swift_willThrow();

              unsigned int v67 = *v88;
              uint64_t v68 = v94;
              (*v88)(v90, v94);
              v67(v89, v68);
              goto LABEL_20;
          }
          break;
        }
      }
      if (!v81)
      {
        (*v88)((char *)v45, v40);

        goto LABEL_10;
      }
      sub_24D9329EC(v45);
      long long v46 = v80;
      (*v88)((char *)v45, v40);
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v46, v73);
    sub_24DCCA2C8();
    uint64_t v69 = (uint64_t)v83;
  }
  sub_24DCC8F98();
  return sub_24D3FCA34(v69, type metadata accessor for Signpost);
}

uint64_t sub_24D933B88(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  int v66 = a2;
  uint64_t v67 = a1;
  unint64_t v4 = *(void *)(*(void *)v2 + 736);
  uint64_t v5 = *(void *)(*(void *)v2 + 744);
  uint64_t v6 = *(void *)(*(void *)v2 + 752);
  uint64_t v68 = *(void *)(*(void *)v2 + 728);
  unint64_t v69 = v4;
  uint64_t v54 = v6;
  unint64_t v55 = v4;
  uint64_t v70 = v5;
  uint64_t v71 = v6;
  uint64_t v7 = type metadata accessor for PersistenceTrigger();
  uint64_t v57 = *(void *)(v7 - 8);
  uint64_t v58 = v7;
  MEMORY[0x270FA5388](v7);
  id v56 = (char *)&v51 - v8;
  uint64_t v9 = sub_24DCC8FC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v65 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v51 - v16;
  uint64_t v18 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v63 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v60 = qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v17, 1, 1, v9);
  uint64_t v68 = 0;
  unint64_t v69 = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v64 = v17;
  uint64_t v21 = AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v53 = v21;
  sub_24DCCADC8();
  sub_24DCC9968();
  sub_24DCC9968();
  uint64_t v23 = v9;
  swift_bridgeObjectRelease();
  uint64_t v25 = v68;
  unint64_t v24 = v69;
  sub_24D409D24((uint64_t)v64, (uint64_t)v15);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9);
  uint64_t v52 = AssociatedConformanceWitness;
  uint64_t v61 = v3;
  uint64_t v59 = v25;
  if (v26 == 1)
  {
    id v27 = (id)v60;
    id v28 = (id)v60;
    id v29 = v65;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
  }
  else
  {
    id v29 = v65;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v65, v15, v23);
    id v27 = (id)v60;
  }
  uint64_t v30 = v63;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v63, v29, v23);
  uint64_t v60 = *(int *)(v18 + 20);
  *(void *)&v30[v60] = v27;
  id v31 = &v30[*(int *)(v18 + 24)];
  *(void *)id v31 = "SQLDB: Delete Children";
  *((void *)v31 + 1) = 22;
  v31[16] = 2;
  id v32 = v27;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_24DCCECE0;
  *(void *)(v33 + 56) = MEMORY[0x263F8D310];
  *(void *)(v33 + 64) = sub_24D3F7B98();
  *(void *)(v33 + 32) = v59;
  *(void *)(v33 + 40) = v24;
  uint64_t v49 = v33;
  char v48 = 2;
  uint64_t v47 = 2;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v65, v23);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v64, &qword_26B1990B0);
  uint64_t v34 = v61;
  objc_msgSend(*(id *)(v61 + qword_26B1A2590), sel_assertOnQueue);
  id v35 = objc_msgSend(*(id *)(v34 + qword_26B1992E8), sel_removeAllObjects);
  uint64_t v72 = 0;
  if ((v66 & 1) == 0)
  {
    uint64_t v38 = v62;
    uint64_t v36 = v67;
    goto LABEL_11;
  }
  MEMORY[0x270FA5388](v35);
  uint64_t v49 = v34;
  long long v50 = &v72;
  uint64_t v36 = v67;
  uint64_t v37 = v62;
  sub_24D924D8C(v67, (void (*)(char *, unint64_t))sub_24D95733C, (uint64_t)&v47);
  uint64_t v38 = v37;
  if (v37) {
    goto LABEL_14;
  }
  if (v72 >= 1)
  {
LABEL_11:
    sub_24D9329EC(v36);
    if (!v38) {
      goto LABEL_12;
    }
LABEL_14:
    sub_24DCCA2C8();
    uint64_t v46 = (uint64_t)v63;
    sub_24DCC8F98();
    return sub_24D3FCA34(v46, type metadata accessor for Signpost);
  }
LABEL_12:
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v40 = result;
    uint64_t v41 = v53;
    id v42 = v56;
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v56, v36, v53);
    uint64_t v43 = swift_getAssociatedTypeWitness();
    uint64_t v44 = swift_getAssociatedConformanceWitness();
    uint64_t v68 = v41;
    unint64_t v69 = v43;
    uint64_t v70 = v52;
    uint64_t v71 = v44;
    type metadata accessor for ReconciliationID();
    swift_storeEnumTagMultiPayload();
    uint64_t v45 = v58;
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *))(*(void *)v40 + 312))(v42);
    swift_release();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v42, v45);
    goto LABEL_14;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D93434C(uint64_t a1)
{
  uint64_t v94 = a1;
  uint64_t v103 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 736);
  uint64_t v3 = *(uint64_t (**)(uint64_t))(*(void *)v1 + 744);
  unint64_t v4 = *(void **)(*(void *)v1 + 752);
  uint64_t v97 = *(char **)(*(void *)v1 + 728);
  unint64_t v98 = (unint64_t)v2;
  uint64_t v89 = v2;
  uint64_t v99 = (id (*)(uint64_t, void *))v3;
  uint64_t v100 = v4;
  uint64_t v87 = v4;
  uint64_t v5 = type metadata accessor for PersistenceTrigger();
  uint64_t v73 = *(void *)(v5 - 8);
  uint64_t v74 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v72 = (char *)&v72 - v6;
  uint64_t v90 = v97;
  uint64_t v88 = v3;
  uint64_t v7 = type metadata accessor for SnapshotItem();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v75 = (char *)&v72 - v10;
  uint64_t v93 = *(void *)(v7 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v84 = v12;
  uint64_t v85 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v83 = (char *)&v72 - v13;
  uint64_t v14 = sub_24DCC8FC8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v82 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v20 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v72 - v21;
  uint64_t v81 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v81);
  unint64_t v24 = (char *)&v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v25 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v22, 1, 1, v14);
  uint64_t v97 = 0;
  unint64_t v98 = 0xE000000000000000;
  sub_24DCC9968();
  swift_getWitnessTable();
  uint64_t v92 = v7;
  sub_24DCCADC8();
  unint64_t v26 = v98;
  uint64_t v80 = v97;
  uint64_t v86 = v22;
  sub_24D409D24((uint64_t)v22, (uint64_t)v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) == 1)
  {
    id v27 = v25;
    id v28 = v82;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v20, &qword_26B1990B0);
  }
  else
  {
    id v28 = v82;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v82, v20, v14);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v24, v28, v14);
  uint64_t v29 = v81;
  uint64_t v78 = *(int *)(v81 + 20);
  *(void *)&v24[v78] = v25;
  uint64_t v30 = &v24[*(int *)(v29 + 24)];
  *(void *)uint64_t v30 = "SQLDB: Snapshot insert";
  *((void *)v30 + 1) = 22;
  char v79 = v30;
  v30[16] = 2;
  id v31 = v25;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  uint64_t v82 = (char *)v14;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_24DCCECE0;
  *(void *)(v32 + 56) = MEMORY[0x263F8D310];
  *(void *)(v32 + 64) = sub_24D3F7B98();
  *(void *)(v32 + 32) = v80;
  *(void *)(v32 + 40) = v26;
  uint64_t v81 = (uint64_t)v24;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *))(v15 + 8))(v28, v82);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v86, &qword_26B1990B0);
  uint64_t v33 = v91;
  uint64_t v86 = *(char **)(v91 + qword_26B1A2590);
  objc_msgSend(v86, sel_assertOnQueue);
  char v34 = *(unsigned char *)(v33 + 32);
  uint64_t v35 = v93;
  uint64_t v36 = v94;
  uint64_t v37 = (char *)(v93 + 16);
  uint64_t v38 = *(char **)(v93 + 16);
  uint64_t v39 = v83;
  uint64_t v40 = v92;
  ((void (*)(char *, uint64_t, uint64_t))v38)(v83, v94, v92);
  uint64_t v82 = v37;
  uint64_t v80 = v38;
  if ((v34 & 1) == 0)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v40);
    goto LABEL_12;
  }
  sub_24D5013B0((uint64_t)&v39[*(int *)(v40 + 52)], (uint64_t)v96);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v39, v40);
  sub_24D5013B0((uint64_t)v96, (uint64_t)&v97);
  if (sub_24D3F0D40((uint64_t)&v97) == 1)
  {
LABEL_12:
    uint64_t v51 = v85;
    ((void (*)(char *, uint64_t, uint64_t))v38)(v85, v36, v40);
    unint64_t v52 = (*(unsigned __int8 *)(v35 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    uint64_t v53 = (char *)swift_allocObject();
    uint64_t v54 = v89;
    *((void *)v53 + 2) = v90;
    *((void *)v53 + 3) = v54;
    unint64_t v55 = v87;
    *((void *)v53 + 4) = v88;
    *((void *)v53 + 5) = v55;
    *((void *)v53 + 6) = v33;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v53[v52], v51, v40);
    uint64_t v56 = swift_allocObject();
    *(void *)(v56 + 16) = sub_24D957284;
    *(void *)(v56 + 24) = v53;
    uint64_t v101 = sub_24D3E3980;
    uint64_t v102 = v56;
    uint64_t v97 = (char *)MEMORY[0x263EF8330];
    unint64_t v98 = 1107296256;
    uint64_t v99 = sub_24D3E38DC;
    uint64_t v100 = &block_descriptor_787_0;
    uint64_t v57 = _Block_copy(&v97);
    swift_retain();
    swift_retain();
    swift_release();
    uint64_t v97 = 0;
    unsigned __int8 v58 = objc_msgSend(v86, sel_executeSwift_error_, v57, &v97);
    _Block_release(v57);
    uint64_t v59 = v97;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
      goto LABEL_22;
    }
    if (v58)
    {
      uint64_t v88 = 0;
      uint64_t v89 = sub_24D957284;
      uint64_t v90 = 0;
      uint64_t v40 = v92;
      goto LABEL_15;
    }
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v69 = v81;
    sub_24DCC8F98();
    uint64_t v70 = 0;
    uint64_t v71 = sub_24D957284;
LABEL_20:
    sub_24D3FCA34(v69, type metadata accessor for Signpost);
    sub_24D43DD74((uint64_t)v71);
    return sub_24D43DD74((uint64_t)v70);
  }
  uint64_t v41 = v85;
  ((void (*)(char *, uint64_t, uint64_t))v38)(v85, v36, v40);
  unint64_t v42 = (*(unsigned __int8 *)(v35 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v43 = (char *)swift_allocObject();
  uint64_t v44 = v89;
  *((void *)v43 + 2) = v90;
  *((void *)v43 + 3) = v44;
  uint64_t v45 = v87;
  *((void *)v43 + 4) = v88;
  *((void *)v43 + 5) = v45;
  *((void *)v43 + 6) = v33;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v43[v42], v41, v40);
  uint64_t v46 = (void *)swift_allocObject();
  v46[2] = sub_24D956E10;
  v46[3] = v43;
  uint64_t v90 = v43;
  v95[4] = sub_24D3E3980;
  v95[5] = v46;
  v95[0] = (id)MEMORY[0x263EF8330];
  v95[1] = (id)1107296256;
  v95[2] = sub_24D3E38DC;
  v95[3] = &block_descriptor_777_0;
  uint64_t v47 = _Block_copy(v95);
  swift_retain();
  swift_retain();
  swift_release();
  v95[0] = 0;
  unsigned int v48 = objc_msgSend(v86, sel_executeSwift_error_, v47, v95);
  _Block_release(v47);
  id v49 = v95[0];
  char v50 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v50) {
    __break(1u);
  }
  if (!v48)
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v69 = v81;
    sub_24DCC8F98();
    uint64_t v71 = 0;
    uint64_t v70 = sub_24D956E10;
    goto LABEL_20;
  }
  uint64_t v88 = sub_24D956E10;
  uint64_t v89 = 0;
LABEL_15:
  uint64_t v61 = (uint64_t)v75;
  ((void (*)(char *, uint64_t, uint64_t))v80)(v75, v36, v40);
  uint64_t v62 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v93 + 56);
  v62(v61, 0, 1, v40);
  sub_24D91B880(v36, v61);
  (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v61, v77);
  uint64_t result = swift_weakLoadStrong();
  uint64_t v59 = (char *)result;
  if (result)
  {
    uint64_t v64 = v36;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    uint64_t v36 = (uint64_t)v72;
    int v66 = &v72[*(int *)(TupleTypeMetadata3 + 48)];
    uint64_t v93 = *(int *)(TupleTypeMetadata3 + 64);
    v62((uint64_t)v72, 1, 1, v40);
    ((void (*)(char *, uint64_t, uint64_t))v80)(v66, v64, v40);
    v62((uint64_t)v66, 0, 1, v40);
    if (qword_26B199AA0 == -1)
    {
LABEL_17:
      *(void *)(v36 + v93) = qword_26B1A24C8;
      uint64_t v67 = v74;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t))(*(void *)v59 + 312))(v36);
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v36, v67);
      sub_24DCCA2C8();
      uint64_t v68 = v81;
      sub_24DCC8F98();
      sub_24D3FCA34(v68, type metadata accessor for Signpost);
      sub_24D43DD74((uint64_t)v89);
      return sub_24D43DD74((uint64_t)v88);
    }
LABEL_22:
    swift_once();
    goto LABEL_17;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D9350E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = type metadata accessor for SnapshotItem();
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v12 - v7;
  v12[0] = 0;
  v12[1] = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v12, "INSERT INTO ");
  BYTE5(v12[1]) = 0;
  HIWORD(v12[1]) = -5120;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v9 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, a3, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v4);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24D734148((uint64_t)v8, v4, WitnessTable);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v12[0];
}

uint64_t sub_24D93538C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v21 = a3;
  uint64_t v4 = type metadata accessor for SnapshotItem();
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v22 - v7;
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v25 = v43;
  unint64_t v26 = v44;
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v9 = *(void *)(v4 - 8);
  uint64_t v10 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v8, v21, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v8, 0, 1, v4);
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24D734148((uint64_t)v8, v4, WitnessTable);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v12 = sub_24D403898();
  sub_24D5013B0(v10 + *(int *)(v4 + 52), (uint64_t)&v43);
  uint64_t v13 = v12[2];
  if (v13)
  {
    sub_24D401194(&v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
    swift_bridgeObjectRetain();
    uint64_t v14 = 0;
    uint64_t v15 = v13 - 1;
    while (1)
    {
      char v16 = *((unsigned char *)v12 + v14 + 32);
      sub_24D5013B0((uint64_t)&v43, (uint64_t)v24);
      if (sub_24D3F0D40((uint64_t)v24) == 1)
      {

        if (v15 == v14) {
          goto LABEL_7;
        }
      }
      else
      {
        sub_24D5013B0((uint64_t)&v43, (uint64_t)v22);
        long long v39 = v22[12];
        long long v40 = v22[13];
        long long v41 = v22[14];
        uint64_t v42 = v23;
        long long v35 = v22[8];
        long long v36 = v22[9];
        long long v37 = v22[10];
        long long v38 = v22[11];
        long long v31 = v22[4];
        long long v32 = v22[5];
        long long v33 = v22[6];
        long long v34 = v22[7];
        long long v27 = v22[0];
        long long v28 = v22[1];
        long long v29 = v22[2];
        long long v30 = v22[3];
        sub_24D3FBB70((uint64_t)v22);
        sub_24D7CAFB0(v16, a1);
        swift_bridgeObjectRelease();
        sub_24D401194(&v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
        if (v15 == v14)
        {
LABEL_7:
          swift_bridgeObjectRelease();
          goto LABEL_9;
        }
      }
      ++v14;
    }
  }
  sub_24D401194(&v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401000);
LABEL_9:
  uint64_t v17 = MEMORY[0x253327AD0](2108479, 0xE300000000000000, v12[2]);
  v24[0] = v17;
  v24[1] = v18;
  uint64_t v19 = HIBYTE(v18) & 0xF;
  if ((v18 & 0x2000000000000000) == 0) {
    uint64_t v19 = v17 & 0xFFFFFFFFFFFFLL;
  }
  if (v19) {
    sub_24D856218(2);
  }
  swift_bridgeObjectRelease();
  sub_24D401194(&v43, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_24D401218);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v24[0] = 0;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v25;
}

uint64_t sub_24D9359A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v5[2] = a3;
  v5[3] = a1;
  v5[6] = sub_24D91B10C(MEMORY[0x263F8EE78], (void (*)(uint64_t *, uint64_t *))sub_24D958440, (uint64_t)v5, a2 | 0x10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D3E4A9C((unint64_t *)&qword_26B199DD0, &qword_26B197E00);
  uint64_t v3 = sub_24DCC9708();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_24D935A74(void **a1, uint64_t *a2, void *a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v250 = a4;
  v252 = a1;
  id v253 = a3;
  uint64_t v7 = *a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v8 - 8);
  v247 = (char *)&v244 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v7 + 744);
  uint64_t v11 = *(void *)(v7 + 728);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = sub_24DCCA3F8();
  uint64_t v245 = *(void *)(v13 - 8);
  uint64_t v246 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v244 - v14;
  uint64_t v248 = v11;
  uint64_t v249 = v10;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v17 = sub_24DCCA3F8();
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v244 - v19;
  uint64_t result = MEMORY[0x270FA5388](v18);
  uint64_t v25 = (char *)&v244 - v24;
  uint64_t v26 = *a2;
  if (v26 > 0x7FFFFFF)
  {
    if (v26 <= 0xFFFFFFFFFFLL)
    {
      if (v26 <= 0x1FFFFFFFFLL)
      {
        if (v26 > 0x3FFFFFFF)
        {
          if (v26 != 0x40000000)
          {
            if (v26 == 0x80000000)
            {
              v265[0] = 0;
              v265[1] = 0xE000000000000000;
              sub_24DCCA728();
              swift_bridgeObjectRelease();
              unint64_t v258 = 0xD00000000000001ALL;
              unint64_t v259 = 0x800000024DD125E0;
              uint64_t v95 = type metadata accessor for SnapshotItem();
              sub_24D5013B0(v250 + *(int *)(v95 + 52), (uint64_t)&v263);
              sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
              int v96 = sub_24D3F0D40((uint64_t)v265);
              char v97 = v278;
            }
            else
            {
              if (v26 != 0x100000000) {
                goto LABEL_236;
              }
              v265[0] = 0;
              v265[1] = 0xE000000000000000;
              sub_24DCCA728();
              swift_bridgeObjectRelease();
              unint64_t v258 = 0xD000000000000023;
              unint64_t v259 = 0x800000024DD125B0;
              uint64_t v194 = type metadata accessor for SnapshotItem();
              sub_24D5013B0(v250 + *(int *)(v194 + 52), (uint64_t)&v263);
              sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
              int v96 = sub_24D3F0D40((uint64_t)v265);
              char v97 = v279;
            }
            goto LABEL_186;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD000000000000021;
          unint64_t v259 = 0x800000024DD12630;
          uint64_t v166 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v166 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          uint64_t v70 = 0;
          uint64_t v71 = 0;
          if (sub_24D3F0D40((uint64_t)v265) == 1) {
            goto LABEL_172;
          }
          uint64_t v70 = v276;
          uint64_t v71 = v277;
        }
        else
        {
          if (v26 != 0x8000000)
          {
            if (v26 == 0x10000000)
            {
              uint64_t v73 = type metadata accessor for SnapshotItem();
              sub_24D5013B0(v250 + *(int *)(v73 + 52), (uint64_t)&v263);
              sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
              uint64_t v74 = 0;
              uint64_t v75 = 0;
              if (sub_24D3F0D40((uint64_t)v265) != 1)
              {
                uint64_t v74 = v273;
                uint64_t v75 = v274;
                swift_bridgeObjectRetain();
              }
              sub_24D5F1A28(v74, v75);
              swift_bridgeObjectRelease();
              unint64_t v258 = 0xD000000000000032;
              unint64_t v259 = 0x800000024DD12690;
              goto LABEL_190;
            }
            if (v26 != 0x20000000) {
              goto LABEL_236;
            }
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            unint64_t v258 = 0xD000000000000029;
            unint64_t v259 = 0x800000024DD12660;
            uint64_t v192 = type metadata accessor for SnapshotItem();
            sub_24D5013B0(v250 + *(int *)(v192 + 52), (uint64_t)&v263);
            sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
            int v96 = sub_24D3F0D40((uint64_t)v265);
            char v97 = v275;
            goto LABEL_186;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD000000000000025;
          unint64_t v259 = 0x800000024DD126D0;
          uint64_t v161 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v161 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          uint64_t v70 = 0;
          uint64_t v71 = 0;
          if (sub_24D3F0D40((uint64_t)v265) == 1) {
            goto LABEL_172;
          }
          uint64_t v70 = v271;
          uint64_t v71 = v272;
        }
        goto LABEL_171;
      }
      if (v26 > 0xFFFFFFFFFLL)
      {
        if (v26 > 0x3FFFFFFFFFLL)
        {
          if (v26 != 0x4000000000)
          {
            if (v26 != 0x8000000000) {
              goto LABEL_236;
            }
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            unint64_t v258 = 0xD000000000000017;
            unint64_t v259 = 0x800000024DD12490;
            uint64_t v188 = type metadata accessor for SnapshotItem();
            sub_24D5013B0(v250 + *(int *)(v188 + 52), (uint64_t)&v263);
            sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
            uint64_t v189 = 0;
            uint64_t v190 = 0;
            if (sub_24D3F0D40((uint64_t)v265) != 1)
            {
              uint64_t v189 = v290;
              uint64_t v190 = v291;
              sub_24D40110C(v290);
            }
            sub_24D5F1DA0(v189, v190);
            sub_24D401324(v189);
            sub_24DCC9968();
            goto LABEL_191;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD00000000000001DLL;
          unint64_t v259 = 0x800000024DD124B0;
          uint64_t v114 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v114 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          uint64_t v115 = 0;
          if (sub_24D3F0D40((uint64_t)v265) != 1)
          {
            uint64_t v115 = v289;
            swift_bridgeObjectRetain();
          }
          sub_24D5F1BE0(v115);
        }
        else
        {
          if (v26 != 0x1000000000)
          {
            if (v26 != 0x2000000000) {
              goto LABEL_236;
            }
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            unint64_t v258 = 0xD000000000000026;
            unint64_t v259 = 0x800000024DD124D0;
            uint64_t v186 = type metadata accessor for SnapshotItem();
            sub_24D5013B0(v250 + *(int *)(v186 + 52), (uint64_t)&v263);
            sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
            int v96 = sub_24D3F0D40((uint64_t)v265);
            char v97 = v288;
            goto LABEL_186;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD00000000000001ALL;
          unint64_t v259 = 0x800000024DD12500;
          uint64_t v65 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v65 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          uint64_t v66 = 0;
          uint64_t v67 = 0;
          if (sub_24D3F0D40((uint64_t)v265) != 1)
          {
            uint64_t v66 = v286;
            uint64_t v67 = v287;
            swift_bridgeObjectRetain();
          }
          sub_24D719BE4(v66, v67);
        }
        goto LABEL_173;
      }
      if (v26 != 0x200000000)
      {
        if (v26 != 0x400000000)
        {
          if (v26 != 0x800000000) {
            goto LABEL_236;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD000000000000024;
          unint64_t v259 = 0x800000024DD12520;
          uint64_t v187 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v187 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          uint64_t v70 = 0;
          uint64_t v71 = 0;
          if (sub_24D3F0D40((uint64_t)v265) == 1) {
            goto LABEL_172;
          }
          uint64_t v70 = v284;
          uint64_t v71 = v285;
          goto LABEL_171;
        }
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        unint64_t v258 = 0xD000000000000028;
        unint64_t v259 = 0x800000024DD12550;
        uint64_t v92 = type metadata accessor for SnapshotItem();
        sub_24D5013B0(v250 + *(int *)(v92 + 52), (uint64_t)&v263);
        sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
        uint64_t v70 = 0;
        uint64_t v71 = 0;
        if (sub_24D3F0D40((uint64_t)v265) != 1)
        {
          uint64_t v70 = v282;
          uint64_t v71 = v283;
          goto LABEL_171;
        }
LABEL_172:
        sub_24D5F1A28(v70, v71);
LABEL_173:
        swift_bridgeObjectRelease();
        goto LABEL_190;
      }
      unint64_t v258 = 0;
      unint64_t v259 = 0xE000000000000000;
      uint64_t v127 = type metadata accessor for SnapshotItem();
      sub_24D5013B0(v250 + *(int *)(v127 + 52), (uint64_t)&v263);
      sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
      uint64_t v128 = 0;
      uint64_t v129 = 0;
      if (sub_24D3F0D40((uint64_t)v265) != 1)
      {
        uint64_t v128 = v280;
        uint64_t v129 = v281;
        swift_bridgeObjectRetain();
      }
      sub_24D5F1A28(v128, v129);
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      unint64_t v112 = 0xD00000000000002DLL;
      uint64_t v113 = "decoration_app_container_bundle_identifier = ";
    }
    else
    {
      if (v26 <= 0xFFFFFFFFFFFFLL)
      {
        if (v26 <= 0xFFFFFFFFFFFLL)
        {
          switch(v26)
          {
            case 0x10000000000:
              v265[0] = 0;
              v265[1] = 0xE000000000000000;
              sub_24DCCA728();
              swift_bridgeObjectRelease();
              unint64_t v263 = 0xD000000000000010;
              unint64_t v264 = 0x800000024DD0D300;
              uint64_t v117 = type metadata accessor for SnapshotItem();
              uint64_t WitnessTable = swift_getWitnessTable();
              uint64_t v119 = qword_24DCDFB38[(char)sub_24D98BCC4(v117, WitnessTable)];
              v267 = (void *)MEMORY[0x263F8D6C8];
              v265[0] = v119;
              sub_24D3E3EB4((uint64_t)v265);
              uint64_t v121 = v120;
              sub_24D415F74((uint64_t)v265, qword_26B197F50);
              if (!v121) {
                goto LABEL_237;
              }
              sub_24DCC9968();
              break;
            case 0x20000000000:
              swift_getAssociatedTypeWitness();
              swift_getAssociatedConformanceWitness();
              type metadata accessor for ItemStateVersion();
              uint64_t result = swift_dynamicCastMetatype();
              if (result) {
                return result;
              }
              v265[0] = 0;
              v265[1] = 0xE000000000000000;
              sub_24DCCA728();
              swift_bridgeObjectRelease();
              unint64_t v263 = 0xD000000000000015;
              unint64_t v264 = 0x800000024DD12A70;
              uint64_t v78 = *(int *)(type metadata accessor for SnapshotItem() + 40);
              uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
              uint64_t v80 = swift_getAssociatedConformanceWitness();
              v265[0] = v16;
              v265[1] = AssociatedTypeWitness;
              v266 = (void *)AssociatedConformanceWitness;
              v267 = (void *)v80;
              uint64_t v81 = v250 + *(int *)(type metadata accessor for FileItemVersion() + 56) + v78;
              uint64_t v82 = *(void *)(AssociatedTypeWitness - 8);
              (*(void (**)(char *, uint64_t, uint64_t))(v82 + 16))(v15, v81, AssociatedTypeWitness);
              (*(void (**)(char *, void, uint64_t, uint64_t))(v82 + 56))(v15, 0, 1, AssociatedTypeWitness);
              sub_24D7341C0((uint64_t)v15, AssociatedTypeWitness, *(void *)(v80 + 16));
              (*(void (**)(char *, uint64_t))(v245 + 8))(v15, v246);
              sub_24DCC9968();
              break;
            case 0x80000000000:
              return result;
            default:
              goto LABEL_236;
          }
          swift_bridgeObjectRelease();
          unint64_t v102 = v263;
          unint64_t v103 = v264;
LABEL_204:
          v207 = v252;
LABEL_205:
          v208 = *v207;
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_24DA13838(0, v208[2] + 1, 1, v208);
            v208 = (void *)result;
          }
          unint64_t v210 = v208[2];
          unint64_t v209 = v208[3];
          if (v210 >= v209 >> 1)
          {
            uint64_t result = (uint64_t)sub_24DA13838((void *)(v209 > 1), v210 + 1, 1, v208);
            v208 = (void *)result;
          }
          v208[2] = v210 + 1;
          v211 = &v208[2 * v210];
          v211[4] = v102;
          v211[5] = v103;
          *v207 = v208;
          return result;
        }
        if (v26 <= 0x3FFFFFFFFFFFLL)
        {
          if (v26 != 0x100000000000)
          {
            if (v26 == 0x200000000000)
            {
              v265[0] = 0;
              v265[1] = 0xE000000000000000;
              sub_24DCCA728();
              swift_bridgeObjectRelease();
              v265[0] = 0xD000000000000016;
              v265[1] = 0x800000024DD12A90;
              uint64_t v136 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
              id v41 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v136 + *(int *)(type metadata accessor for ItemMetadata() + 108)));
              goto LABEL_196;
            }
            goto LABEL_236;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          v265[0] = 0xD000000000000017;
          v265[1] = 0x800000024DD12820;
          uint64_t v40 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
          id v41 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v40 + *(int *)(type metadata accessor for ItemMetadata() + 60)));
          goto LABEL_196;
        }
        if (v26 == 0x400000000000)
        {
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          v265[0] = 0xD000000000000013;
          v265[1] = 0x800000024DD12440;
          uint64_t v104 = *(int *)(type metadata accessor for SnapshotItem() + 48);
          uint64_t v105 = v250 + *(int *)(type metadata accessor for ItemMetadata() + 136) + v104;
          sub_24D719CA0(*(void *)v105, *(unsigned char *)(v105 + 8));
        }
        else
        {
          if (v26 != 0x800000000000) {
            goto LABEL_236;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          v265[0] = 0xD000000000000016;
          v265[1] = 0x800000024DD12420;
          uint64_t v152 = *(int *)(type metadata accessor for SnapshotItem() + 48);
          uint64_t v153 = (unsigned int *)(v250 + *(int *)(type metadata accessor for ItemMetadata() + 144) + v152);
          uint64_t v154 = *v153;
          LOBYTE(v263) = *((unsigned char *)v153 + 4);
          sub_24D5F1848(v154 | ((unint64_t)v263 << 32));
        }
        sub_24DCC9968();
        goto LABEL_144;
      }
      if (v26 <= 0x7FFFFFFFFFFFFLL)
      {
        if (v26 != 0x1000000000000)
        {
          if (v26 == 0x2000000000000)
          {
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            unint64_t v258 = 0xD00000000000001CLL;
            unint64_t v259 = 0x800000024DD12400;
            uint64_t v88 = type metadata accessor for SnapshotItem();
            sub_24D5013B0(v250 + *(int *)(v88 + 52), (uint64_t)&v263);
            sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
            int v89 = sub_24D3F0D40((uint64_t)v265);
            char v90 = v89 == 1;
            if (v89 == 1) {
              unint64_t v91 = 0;
            }
            else {
              unint64_t v91 = v292;
            }
            sub_24D95535C(v91, v90);
            goto LABEL_190;
          }
          if (v26 != 0x4000000000000) {
            goto LABEL_236;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD000000000000022;
          unint64_t v259 = 0x800000024DD12460;
          uint64_t v133 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v133 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          uint64_t v134 = 0;
          if (sub_24D3F0D40((uint64_t)v265) != 1)
          {
            uint64_t v134 = v294;
            swift_bridgeObjectRetain();
          }
          sub_24D5F1F4C(v134);
          goto LABEL_173;
        }
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD000000000000025;
        v265[1] = 0x800000024DD12600;
        uint64_t v123 = *(int *)(type metadata accessor for SnapshotItem() + 48);
        uint64_t v124 = (uint64_t *)(v250 + *(int *)(type metadata accessor for ItemMetadata() + 148) + v123);
        uint64_t v125 = *v124;
        uint64_t v126 = v124[1];
        swift_bridgeObjectRetain();
        sub_24D5F1A28(v125, v126);
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        goto LABEL_144;
      }
      if (v26 <= 0x3FFFFFFFFFFFFFFLL)
      {
        if (v26 == 0x8000000000000)
        {
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD000000000000025;
          unint64_t v259 = 0x800000024DD123A0;
          uint64_t v69 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v69 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          uint64_t v70 = 0;
          uint64_t v71 = 0;
          if (sub_24D3F0D40((uint64_t)v265) != 1)
          {
            uint64_t v70 = v295;
            uint64_t v71 = v296;
LABEL_171:
            swift_bridgeObjectRetain();
            goto LABEL_172;
          }
          goto LABEL_172;
        }
        if (v26 != 0x10000000000000) {
          goto LABEL_236;
        }
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD00000000000001CLL;
        v265[1] = 0x800000024DD12380;
        uint64_t v138 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
        id v139 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v138 + *(int *)(type metadata accessor for ItemMetadata() + 72)));
        sub_24DCC97E8();

        sub_24DCC9968();
LABEL_144:
        swift_bridgeObjectRelease();
        unint64_t v155 = v265[0];
        unint64_t v156 = v265[1];
LABEL_192:
        uint64_t v196 = (uint64_t *)v252;
        sub_24DA13790();
        uint64_t v197 = *v196;
LABEL_193:
        uint64_t v198 = *(void **)(v197 + 16);
        sub_24DA137DC(v198);
        uint64_t v149 = (uint64_t)v198;
        uint64_t v150 = v155;
        uint64_t v151 = v156;
LABEL_194:
        uint64_t v199 = sub_24DA13820(v149, v150, v151);
        return nullsub_1(v199);
      }
      if (v26 != 0x400000000000000)
      {
        if (v26 == 0x800000000000000)
        {
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          v265[0] = 0xD00000000000001FLL;
          v265[1] = 0x800000024DD12840;
          uint64_t v158 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
          id v41 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v158 + *(int *)(type metadata accessor for ItemMetadata() + 48)));
          goto LABEL_196;
        }
        goto LABEL_236;
      }
      unint64_t v261 = 0;
      unint64_t v262 = 0xE000000000000000;
      uint64_t v107 = type metadata accessor for SnapshotItem();
      sub_24D5013B0(v250 + *(int *)(v107 + 52), (uint64_t)&v263);
      sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
      int v108 = sub_24D3F0D40((uint64_t)v265);
      unint64_t v109 = v293;
      if (v108 == 1) {
        unint64_t v109 = 0;
      }
      uint64_t v260 = MEMORY[0x263F8D6C8];
      unint64_t v258 = v109;
      sub_24D3E3EB4((uint64_t)&v258);
      uint64_t v111 = v110;
      sub_24D415F74((uint64_t)&v258, qword_26B197F50);
      if (!v111)
      {
        while (1)
        {
LABEL_237:
          sub_24DCCA978();
          __break(1u);
        }
      }
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      unint64_t v112 = 0xD000000000000026;
      uint64_t v113 = "decoration_inherited_content_policy = ";
    }
    unint64_t v258 = v112;
    unint64_t v259 = (unint64_t)(v113 - 32) | 0x8000000000000000;
LABEL_190:
    sub_24DCC9968();
LABEL_191:
    swift_bridgeObjectRelease();
    unint64_t v155 = v258;
    unint64_t v156 = v259;
    goto LABEL_192;
  }
  if (v26 < 0x2000)
  {
    if (v26 > 127)
    {
      if (v26 > 1023)
      {
        switch(v26)
        {
          case 1024:
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            v265[0] = 0xD000000000000019;
            v265[1] = 0x800000024DD129D0;
            uint64_t v93 = *(int *)(type metadata accessor for SnapshotItem() + 48);
            uint64_t v94 = *(int *)(type metadata accessor for ItemMetadata() + 28);
            break;
          case 2048:
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            v265[0] = 0xD000000000000025;
            v265[1] = 0x800000024DD129A0;
            uint64_t v93 = *(int *)(type metadata accessor for SnapshotItem() + 48);
            uint64_t v94 = *(int *)(type metadata accessor for ItemMetadata() + 32);
            break;
          case 4096:
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            v265[0] = 0xD000000000000015;
            v265[1] = 0x800000024DD12980;
            uint64_t v193 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
            id v41 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v193 + *(int *)(type metadata accessor for ItemMetadata() + 40)));
            goto LABEL_196;
          default:
            goto LABEL_236;
        }
        uint64_t v162 = v250 + v94 + v93;
        uint64_t v163 = sub_24DCC8CE8();
        uint64_t v164 = *(void *)(v163 - 8);
        uint64_t v165 = (uint64_t)v247;
        (*(void (**)(char *, uint64_t, uint64_t))(v164 + 16))(v247, v162, v163);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v164 + 56))(v165, 0, 1, v163);
        sub_24D5F1278(v165);
        sub_24D415F74(v165, (uint64_t *)&unk_26B196B10);
      }
      else
      {
        if (v26 != 128)
        {
          if (v26 == 256)
          {
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            v265[0] = 0xD00000000000001FLL;
            v265[1] = 0x800000024DD128C0;
            type metadata accessor for SnapshotItem();
            type metadata accessor for ItemMetadata();
            uint64_t v72 = swift_bridgeObjectRetain();
            sub_24D5F1A00(v72);
LABEL_202:
            swift_bridgeObjectRelease();
            sub_24DCC9968();
            goto LABEL_203;
          }
          if (v26 == 512)
          {
            v265[0] = 0;
            v265[1] = 0xE000000000000000;
            sub_24DCCA728();
            swift_bridgeObjectRelease();
            v265[0] = 0xD000000000000015;
            v265[1] = 0x800000024DD12A10;
            uint64_t v191 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
            id v41 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v191 + *(int *)(type metadata accessor for ItemMetadata() + 36)));
            goto LABEL_196;
          }
          goto LABEL_236;
        }
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD000000000000019;
        v265[1] = 0x800000024DD128E0;
        uint64_t v159 = *(int *)(type metadata accessor for SnapshotItem() + 48);
        uint64_t v160 = v250 + *(int *)(type metadata accessor for ItemMetadata() + 124) + v159;
        sub_24D5F1678(*(void *)v160, *(unsigned char *)(v160 + 8));
      }
      goto LABEL_197;
    }
    switch(v26)
    {
      case 1:
        unint64_t v263 = 0x656D616E656C6966;
        unint64_t v264 = 0xEB00000000203D20;
        uint64_t v42 = type metadata accessor for SnapshotItem();
        uint64_t v43 = (uint64_t *)(v250 + *(int *)(v42 + 44));
        uint64_t v44 = *v43;
        uint64_t v45 = v43[1];
        v267 = (void *)MEMORY[0x263F8D310];
        v265[0] = v44;
        v265[1] = v45;
        swift_bridgeObjectRetain_n();
        sub_24D3E3EB4((uint64_t)v265);
        uint64_t v47 = v46;
        sub_24D415F74((uint64_t)v265, qword_26B197F50);
        if (!v47) {
          goto LABEL_237;
        }
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        unint64_t v48 = v263;
        unint64_t v49 = v264;
        char v50 = v252;
        uint64_t v51 = *v252;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v51 = sub_24DA13838(0, v51[2] + 1, 1, v51);
        }
        unint64_t v53 = v51[2];
        unint64_t v52 = v51[3];
        if (v53 >= v52 >> 1) {
          uint64_t v51 = sub_24DA13838((void *)(v52 > 1), v53 + 1, 1, v51);
        }
        v51[2] = v53 + 1;
        uint64_t v54 = &v51[2 * v53];
        v54[4] = v48;
        v54[5] = v49;
        *char v50 = v51;
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD000000000000022;
        v265[1] = 0x800000024DD12B10;
        uint64_t v55 = *(int *)(v42 + 48);
        uint64_t v56 = (uint64_t *)(v250 + *(int *)(type metadata accessor for ItemMetadata() + 56) + v55);
        uint64_t v57 = *v56;
        uint64_t v58 = v56[1];
        swift_bridgeObjectRetain();
        sub_24D719BE4(v57, v58);
        swift_bridgeObjectRelease();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v59 = v265[0];
        uint64_t v60 = v265[1];
        uint64_t v61 = (void *)*v50;
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_24DA13838(0, v61[2] + 1, 1, v61);
          uint64_t v61 = (void *)result;
        }
        unint64_t v63 = v61[2];
        unint64_t v62 = v61[3];
        if (v63 >= v62 >> 1)
        {
          uint64_t result = (uint64_t)sub_24DA13838((void *)(v62 > 1), v63 + 1, 1, v61);
          uint64_t v61 = (void *)result;
        }
        v61[2] = v63 + 1;
        uint64_t v64 = &v61[2 * v63];
        v64[4] = v59;
        v64[5] = v60;
        *char v50 = v61;
        return result;
      case 2:
        strcpy((char *)v265, "parent_id = ");
        BYTE5(v265[1]) = 0;
        HIWORD(v265[1]) = -5120;
        type metadata accessor for SnapshotItem();
        swift_getAssociatedTypeWitness();
        uint64_t v201 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
        uint64_t v202 = *(void (**)(id, uint64_t, uint64_t))(v201 + 32);
        uint64_t v203 = swift_checkMetadataState();
        v202(v253, v203, v201);
        goto LABEL_197;
      case 4:
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD00000000000001DLL;
        v265[1] = 0x800000024DD129F0;
        id v41 = objc_msgSend(v253, sel_bindUnsignedShortParameter_, *(unsigned __int16 *)(v250 + *(int *)(type metadata accessor for SnapshotItem() + 48) + 10));
        goto LABEL_196;
      case 8:
        uint64_t v167 = v23;
        uint64_t v168 = v22;
        if ((a5[4] & 1) != 0 || !swift_dynamicCastMetatype())
        {
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          v265[0] = 0xD000000000000012;
          v265[1] = 0x800000024DD12AB0;
          uint64_t v169 = type metadata accessor for SnapshotItem();
          (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v20, v250 + *(int *)(v169 + 40), v16);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v167 + 56))(v20, 0, 1, v16);
          uint64_t v227 = swift_getAssociatedConformanceWitness();
          sub_24D7341C0((uint64_t)v20, v16, *(void *)(v227 + 16));
          (*(void (**)(char *, uint64_t))(v168 + 8))(v20, v17);
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          uint64_t v181 = v265[0];
          uint64_t v180 = v265[1];
          v182 = *v252;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v182 = sub_24DA13838(0, v182[2] + 1, 1, v182);
          }
          unint64_t v184 = v182[2];
          unint64_t v183 = v182[3];
          int64_t v185 = v184 + 1;
          if (v184 >= v183 >> 1) {
            goto LABEL_165;
          }
        }
        else
        {
          uint64_t v169 = type metadata accessor for SnapshotItem();
          (*(void (**)(char *, uint64_t, uint64_t))(v167 + 16))(v25, v250 + *(int *)(v169 + 40), v16);
          swift_dynamicCast();
          uint64_t v170 = v265[0];
          uint64_t v171 = LODWORD(v265[1]);
          strcpy((char *)v265, "vfs_fileid = ");
          HIWORD(v265[1]) = -4864;
          sub_24D5F1678(v170, 0);
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          uint64_t v172 = v265[0];
          uint64_t v173 = v265[1];
          uint64_t v174 = *v252;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v174 = sub_24DA13838(0, v174[2] + 1, 1, v174);
          }
          unint64_t v176 = v174[2];
          unint64_t v175 = v174[3];
          if (v176 >= v175 >> 1) {
            uint64_t v174 = sub_24DA13838((void *)(v175 > 1), v176 + 1, 1, v174);
          }
          void v174[2] = v176 + 1;
          uint64_t v177 = &v174[2 * v176];
          v177[4] = v172;
          v177[5] = v173;
          uint64_t v178 = v252;
          *v252 = v174;
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          v265[0] = 0xD000000000000013;
          v265[1] = 0x800000024DD12AF0;
          id v179 = objc_msgSend(v253, sel_bindUnsignedIntegerParameter_, v171);
          sub_24DCC97E8();

          sub_24DCC9968();
          swift_bridgeObjectRelease();
          uint64_t v181 = v265[0];
          uint64_t v180 = v265[1];
          v182 = *v178;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v182 = sub_24DA13838(0, v182[2] + 1, 1, v182);
          }
          unint64_t v184 = v182[2];
          unint64_t v183 = v182[3];
          int64_t v185 = v184 + 1;
          if (v184 >= v183 >> 1) {
LABEL_165:
          }
            v182 = sub_24DA13838((void *)(v183 > 1), v185, 1, v182);
        }
        v182[2] = v185;
        v228 = &v182[2 * v184];
        v228[4] = v181;
        v228[5] = v180;
        v229 = v252;
        *v252 = v182;
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD000000000000010;
        v265[1] = 0x800000024DD12AD0;
        type metadata accessor for SnapshotItem();
        uint64_t v230 = *(int *)(v169 + 48);
        v231 = v229;
        uint64_t v232 = v250 + v230;
        uint64_t v233 = type metadata accessor for ItemMetadata();
        sub_24D5F1254(*(void *)(v232 + *(int *)(v233 + 100)), 0);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v234 = v265[0];
        uint64_t v235 = v265[1];
        v236 = *v231;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v236 = sub_24DA13838(0, v236[2] + 1, 1, v236);
        }
        unint64_t v238 = v236[2];
        unint64_t v237 = v236[3];
        if (v238 >= v237 >> 1) {
          v236 = sub_24DA13838((void *)(v237 > 1), v238 + 1, 1, v236);
        }
        v236[2] = v238 + 1;
        v239 = &v236[2 * v238];
        v239[4] = v234;
        v239[5] = v235;
        v207 = v252;
        *v252 = v236;
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD000000000000019;
        v265[1] = 0x800000024DD12A50;
        sub_24D5F1254(*(void *)(v232 + *(int *)(v233 + 104)), 0);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        unint64_t v102 = v265[0];
        unint64_t v103 = v265[1];
        goto LABEL_205;
      case 16:
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD000000000000017;
        v265[1] = 0x800000024DD12A30;
        uint64_t v212 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
        uint64_t v213 = type metadata accessor for ItemMetadata();
        id v214 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v212 + *(int *)(v213 + 80)));
        sub_24DCC97E8();

        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v215 = v265[0];
        uint64_t v216 = v265[1];
        v217 = *v252;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v217 = sub_24DA13838(0, v217[2] + 1, 1, v217);
        }
        unint64_t v219 = v217[2];
        unint64_t v218 = v217[3];
        if (v219 >= v218 >> 1) {
          v217 = sub_24DA13838((void *)(v218 > 1), v219 + 1, 1, v217);
        }
        v217[2] = v219 + 1;
        v220 = &v217[2 * v219];
        v220[4] = v215;
        v220[5] = v216;
        long long v37 = v252;
        *v252 = v217;
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD000000000000019;
        v265[1] = 0x800000024DD12A50;
        sub_24D5F1254(*(void *)(v212 + *(int *)(v213 + 104)), 0);
        sub_24DCC9968();
        goto LABEL_216;
      case 32:
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD00000000000001ALL;
        v265[1] = 0x800000024DD12920;
        uint64_t v204 = *(int *)(type metadata accessor for SnapshotItem() + 48);
        uint64_t v205 = type metadata accessor for ItemMetadata();
        sub_24D5F1278(v250 + *(int *)(v205 + 116) + v204);
        goto LABEL_197;
      case 64:
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        v265[0] = 0xD000000000000014;
        v265[1] = 0x800000024DD12900;
        type metadata accessor for SnapshotItem();
        type metadata accessor for ItemMetadata();
        uint64_t v206 = swift_bridgeObjectRetain();
        sub_24D5F14CC(v206);
        goto LABEL_202;
      default:
        goto LABEL_236;
    }
  }
  if (v26 >= 0x100000)
  {
    if (v26 >= 0x800000)
    {
      if (v26 > 0x1FFFFFF)
      {
        if (v26 == 0x2000000)
        {
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD000000000000026;
          unint64_t v259 = 0x800000024DD12730;
          uint64_t v106 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v106 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          int v96 = sub_24D3F0D40((uint64_t)v265);
          char v97 = v269;
        }
        else
        {
          if (v26 != 0x4000000) {
            goto LABEL_236;
          }
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          unint64_t v258 = 0xD000000000000027;
          unint64_t v259 = 0x800000024DD12700;
          uint64_t v157 = type metadata accessor for SnapshotItem();
          sub_24D5013B0(v250 + *(int *)(v157 + 52), (uint64_t)&v263);
          sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
          int v96 = sub_24D3F0D40((uint64_t)v265);
          char v97 = v270;
        }
      }
      else
      {
        if (v26 == 0x800000)
        {
          v265[0] = 0;
          v265[1] = 0xE000000000000000;
          sub_24DCCA728();
          swift_bridgeObjectRelease();
          v265[0] = 0xD000000000000019;
          v265[1] = 0x800000024DD12800;
          uint64_t v68 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
          id v41 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v68 + *(int *)(type metadata accessor for ItemMetadata() + 64)));
          goto LABEL_196;
        }
        if (v26 != 0x1000000) {
          goto LABEL_236;
        }
        v265[0] = 0;
        v265[1] = 0xE000000000000000;
        sub_24DCCA728();
        swift_bridgeObjectRelease();
        unint64_t v258 = 0xD000000000000017;
        unint64_t v259 = 0x800000024DD12760;
        uint64_t v137 = type metadata accessor for SnapshotItem();
        sub_24D5013B0(v250 + *(int *)(v137 + 52), (uint64_t)&v263);
        sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
        int v96 = sub_24D3F0D40((uint64_t)v265);
        char v97 = v268;
      }
      goto LABEL_186;
    }
    if (v26 != 0x100000)
    {
      if (v26 == 0x200000)
      {
        unint64_t v261 = 0;
        unint64_t v262 = 0xE000000000000000;
        sub_24DCCA728();
        unint64_t v258 = v261;
        unint64_t v259 = v262;
        sub_24DCC9968();
        uint64_t v83 = type metadata accessor for SnapshotItem();
        sub_24D5013B0(v250 + *(int *)(v83 + 52), (uint64_t)&v263);
        sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
        if (sub_24D3F0D40((uint64_t)v265) != 1)
        {
          uint64_t v84 = v266;
          uint64_t v85 = (uint64_t *)v252;
          if (v266)
          {
            swift_getErrorValue();
            uint64_t v86 = v254;
            uint64_t v87 = v255;
LABEL_231:
            id v240 = v84;
            v241 = v251;
            v242 = sub_24D735884(v86, v87);
            if (v241)
            {

              uint64_t result = swift_bridgeObjectRelease();
              v251 = 0;
              return result;
            }
            uint64_t v131 = (uint64_t)v242;
            unint64_t v132 = v243;
            v251 = 0;

            goto LABEL_235;
          }
LABEL_233:
          uint64_t v131 = 0;
          unint64_t v132 = 0xF000000000000000;
          goto LABEL_235;
        }
      }
      else
      {
        if (v26 != 0x400000) {
          goto LABEL_236;
        }
        unint64_t v261 = 0;
        unint64_t v262 = 0xE000000000000000;
        sub_24DCCA728();
        unint64_t v258 = v261;
        unint64_t v259 = v262;
        sub_24DCC9968();
        uint64_t v130 = type metadata accessor for SnapshotItem();
        sub_24D5013B0(v250 + *(int *)(v130 + 52), (uint64_t)&v263);
        sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
        if (sub_24D3F0D40((uint64_t)v265) != 1)
        {
          uint64_t v84 = v267;
          uint64_t v85 = (uint64_t *)v252;
          if (v267)
          {
            swift_getErrorValue();
            uint64_t v86 = v256;
            uint64_t v87 = v257;
            goto LABEL_231;
          }
          goto LABEL_233;
        }
      }
      uint64_t v131 = 0;
      unint64_t v132 = 0xF000000000000000;
      uint64_t v85 = (uint64_t *)v252;
LABEL_235:
      sub_24D5F0D1C(v131, v132);
      sub_24D416034(v131, v132);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      unint64_t v155 = v258;
      unint64_t v156 = v259;
      sub_24DA13790();
      uint64_t v197 = *v85;
      goto LABEL_193;
    }
    v265[0] = 0;
    v265[1] = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    unint64_t v258 = 0xD000000000000019;
    unint64_t v259 = 0x800000024DD127A0;
    uint64_t v122 = type metadata accessor for SnapshotItem();
    sub_24D5013B0(v250 + *(int *)(v122 + 52), (uint64_t)&v263);
    sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
    int v96 = sub_24D3F0D40((uint64_t)v265);
    char v97 = BYTE1(v265[1]);
LABEL_186:
    if (v96 == 1) {
      char v195 = 2;
    }
    else {
      char v195 = v97;
    }
    sub_24D5F2150(v195);
    goto LABEL_190;
  }
  if (v26 < 0x10000)
  {
    if (v26 != 0x2000)
    {
      if (v26 != 0x4000)
      {
        if (v26 == 0x8000) {
          return result;
        }
        goto LABEL_236;
      }
      v265[0] = 0;
      v265[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v265[0] = 0xD00000000000001CLL;
      v265[1] = 0x800000024DD12940;
      uint64_t v76 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
      uint64_t v77 = *(unsigned int *)(v76 + 4);
      LOBYTE(v263) = *(unsigned char *)(v76 + 8);
      sub_24D5F1848(v77 | ((unint64_t)v263 << 32));
LABEL_197:
      sub_24DCC9968();
LABEL_203:
      swift_bridgeObjectRelease();
      unint64_t v102 = v265[0];
      unint64_t v103 = v265[1];
      goto LABEL_204;
    }
    v265[0] = 0;
    v265[1] = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    v265[0] = 0xD00000000000001CLL;
    v265[1] = 0x800000024DD12960;
    uint64_t v116 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
    id v41 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v116 + *(int *)(type metadata accessor for ItemMetadata() + 52)));
LABEL_196:
    id v200 = v41;
    sub_24DCC97E8();

    goto LABEL_197;
  }
  if (v26 >= 0x40000)
  {
    if (v26 == 0x40000)
    {
      v265[0] = 0;
      v265[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      unint64_t v258 = 0xD00000000000001ALL;
      unint64_t v259 = 0x800000024DD127E0;
      uint64_t v98 = type metadata accessor for SnapshotItem();
      sub_24D5013B0(v250 + *(int *)(v98 + 52), (uint64_t)&v263);
      sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
      int v99 = sub_24D3F0D40((uint64_t)v265);
      char v100 = v99 == 1;
      if (v99 == 1) {
        uint64_t v101 = 0;
      }
      else {
        uint64_t v101 = v265[0];
      }
      sub_24D719D5C(v101, v100);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      unint64_t v102 = v258;
      unint64_t v103 = v259;
      goto LABEL_204;
    }
    if (v26 == 0x80000)
    {
      v265[0] = 0;
      v265[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      unint64_t v258 = 0xD00000000000001ALL;
      unint64_t v259 = 0x800000024DD127C0;
      uint64_t v140 = type metadata accessor for SnapshotItem();
      sub_24D5013B0(v250 + *(int *)(v140 + 52), (uint64_t)&v263);
      sub_24D5013B0((uint64_t)&v263, (uint64_t)v265);
      if (sub_24D3F0D40((uint64_t)v265) == 1) {
        char v141 = 2;
      }
      else {
        char v141 = v265[1];
      }
      sub_24D5F2150(v141);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      unint64_t v143 = v258;
      unint64_t v142 = v259;
      uint64_t v144 = v252;
      v145 = *v252;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v144 = v145;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        v145 = sub_24DA13838(0, v145[2] + 1, 1, v145);
        *uint64_t v144 = v145;
      }
      unint64_t v148 = v145[2];
      unint64_t v147 = v145[3];
      if (v148 >= v147 >> 1) {
        *uint64_t v144 = sub_24DA13838((void *)(v147 > 1), v148 + 1, 1, v145);
      }
      uint64_t v149 = v148;
      uint64_t v150 = v143;
      uint64_t v151 = v142;
      goto LABEL_194;
    }
LABEL_236:
    v265[0] = 0;
    v265[1] = 0xE000000000000000;
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    v265[0] = 0xD000000000000017;
    v265[1] = 0x800000024DD12360;
    sub_24D97C4E0(v26);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    goto LABEL_237;
  }
  if (v26 != 0x10000)
  {
    if (v26 == 0x20000)
    {
      v265[0] = 0;
      v265[1] = 0xE000000000000000;
      sub_24DCCA728();
      swift_bridgeObjectRelease();
      v265[0] = 0xD000000000000015;
      v265[1] = 0x800000024DD12860;
      uint64_t v135 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
      id v41 = objc_msgSend(v253, sel_bindBooleanParameter_, *(unsigned __int8 *)(v135 + *(int *)(type metadata accessor for ItemMetadata() + 44)));
      goto LABEL_196;
    }
    goto LABEL_236;
  }
  v265[0] = 0;
  v265[1] = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  unint64_t v263 = 0xD000000000000018;
  unint64_t v264 = 0x800000024DD12880;
  uint64_t v27 = v250 + *(int *)(type metadata accessor for SnapshotItem() + 48);
  uint64_t v28 = *(unsigned __int8 *)(v27 + *(int *)(type metadata accessor for ItemMetadata() + 84));
  v267 = (void *)MEMORY[0x263F8D6C8];
  v265[0] = v28;
  sub_24D3E3EB4((uint64_t)v265);
  uint64_t v30 = v29;
  sub_24D415F74((uint64_t)v265, qword_26B197F50);
  if (!v30) {
    goto LABEL_237;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v31 = v263;
  unint64_t v32 = v264;
  long long v33 = *v252;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    long long v33 = sub_24DA13838(0, v33[2] + 1, 1, v33);
  }
  unint64_t v35 = v33[2];
  unint64_t v34 = v33[3];
  if (v35 >= v34 >> 1) {
    long long v33 = sub_24DA13838((void *)(v34 > 1), v35 + 1, 1, v33);
  }
  v33[2] = v35 + 1;
  long long v36 = &v33[2 * v35];
  v36[4] = v31;
  v36[5] = v32;
  long long v37 = v252;
  *v252 = v33;
  v265[0] = 0;
  v265[1] = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  v265[0] = 0xD00000000000001CLL;
  v265[1] = 0x800000024DD128A0;
  long long v38 = (void *)sub_24DCCB088();
  id v39 = objc_msgSend(v253, sel_bindObjectParameter_, v38);

  sub_24DCC97E8();
  sub_24DCC9968();
LABEL_216:
  swift_bridgeObjectRelease();
  uint64_t v221 = v265[0];
  uint64_t v222 = v265[1];
  v223 = *v37;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24DA13838(0, v223[2] + 1, 1, v223);
    v223 = (void *)result;
  }
  unint64_t v225 = v223[2];
  unint64_t v224 = v223[3];
  if (v225 >= v224 >> 1)
  {
    uint64_t result = (uint64_t)sub_24DA13838((void *)(v224 > 1), v225 + 1, 1, v223);
    v223 = (void *)result;
  }
  v223[2] = v225 + 1;
  v226 = &v223[2 * v225];
  v226[4] = v221;
  v226[5] = v222;
  *long long v37 = v223;
  return result;
}

void (***sub_24D938B40(uint64_t a1, uint64_t a2))(void)
{
  uint64_t v3 = v2;
  uint64_t v210 = *MEMORY[0x263EF8340];
  uint64_t v7 = *(void **)(*(void *)v3 + 736);
  uint64_t v8 = *(id (**)(uint64_t, void *))(*(void *)v3 + 744);
  uint64_t v9 = *(id (**)(uint64_t, void *))(*(void *)v3 + 752);
  id aBlock = *(id *)(*(void *)v3 + 728);
  id v6 = aBlock;
  unint64_t v205 = (unint64_t)v7;
  uint64_t v192 = v9;
  uint64_t v193 = v7;
  uint64_t v206 = v8;
  v207 = v9;
  uint64_t v185 = type metadata accessor for PersistenceTrigger();
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  unint64_t v183 = (char *)&v166 - v10;
  uint64_t v197 = sub_24DCC8FC8();
  uint64_t v191 = *(void *)(v197 - 8);
  MEMORY[0x270FA5388](v197);
  uint64_t v190 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v166 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v196 = (void (*)(char *, uint64_t, uint64_t))((char *)&v166 - v16);
  uint64_t v17 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v166 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v198 = v8;
  uint64_t v199 = v6;
  uint64_t v20 = type metadata accessor for SnapshotItem();
  uint64_t v21 = sub_24DCCA3F8();
  uint64_t v22 = *(void (****)(void))(v21 - 8);
  uint64_t v194 = v21;
  char v195 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v177 = (char *)&v166 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v178 = (char *)&v166 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  id v179 = (char *)&v166 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v180 = (char *)&v166 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v186 = (char *)&v166 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  unint64_t v35 = (char *)&v166 - v34;
  uint64_t v201 = *(void *)(v20 - 8);
  uint64_t v36 = *(void *)(v201 + 64);
  uint64_t v37 = MEMORY[0x270FA5388](v33);
  uint64_t v181 = (char *)&v166 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v37);
  v182 = (char *)&v166 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v188 = (char *)&v166 - v41;
  MEMORY[0x270FA5388](v40);
  id v200 = (char *)&v166 - v42;
  uint64_t v189 = *(char **)&v3[qword_26B1A2590];
  uint64_t result = (void (***)(void))objc_msgSend(v189, sel_assertOnQueue);
  uint64_t v203 = a2;
  int v44 = v3[32];
  if ((v44 & 1) == 0)
  {
    if (qword_26B193848 != -1)
    {
      int v174 = v3[32];
      uint64_t result = (void (***)(void))swift_once();
      int v44 = v174;
    }
    a2 &= ~qword_26B1A22B0;
    uint64_t v203 = a2;
  }
  if (qword_26B199AA0 == -1)
  {
    if (!a2) {
      return result;
    }
LABEL_7:
    int v174 = v44;
    unint64_t v176 = v19;
    uint64_t v187 = v20;
    uint64_t v45 = qword_26B1A24C8;
    uint64_t v46 = v202;
    uint64_t result = (void (***)(void))sub_24D91FEC8(a1, 1, v35);
    if (v46) {
      return result;
    }
    uint64_t v173 = v17;
    uint64_t v175 = a1;
    uint64_t v47 = v201;
    uint64_t v48 = v187;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v201 + 48))(v35, 1, v187) == 1)
    {
      ((void (*)(char *, uint64_t))v195[1])(v35, v194);
      type metadata accessor for FileTreeError();
      swift_getWitnessTable();
      uint64_t v202 = swift_allocError();
      uint64_t v50 = v49;
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      unint64_t v52 = (void *)swift_getAssociatedTypeWitness();
      uint64_t v53 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v55 = swift_getAssociatedConformanceWitness();
      id aBlock = v52;
      unint64_t v205 = v53;
      uint64_t v206 = (id (*)(uint64_t, void *))AssociatedConformanceWitness;
      v207 = (void *)v55;
      uint64_t v56 = type metadata accessor for FileItemVersion();
      sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v58 = v50 + *(int *)(TupleTypeMetadata3 + 48);
      uint64_t v59 = *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v50, v175, AssociatedTypeWitness);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v58, 1, 1, v56);
      *(void *)(v50 + v59) = 0;
      swift_storeEnumTagMultiPayload();
      return (void (***)(void))swift_willThrow();
    }
    uint64_t v202 = 0;
    uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
    uint64_t v171 = v47 + 32;
    uint64_t v170 = v60;
    v60(v200, v35, v48);
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    unint64_t v169 = a2 & 0xFFFFFFFFFF7FFFEFLL & (v45 | 0x409000000C000);
    id v168 = (id)qword_26B1A23B0;
    uint64_t v61 = v191;
    unint64_t v63 = v196;
    uint64_t v62 = v197;
    (*(void (**)(void (*)(char *, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t))(v191 + 56))(v196, 1, 1, v197);
    id aBlock = 0;
    unint64_t v205 = 0xE000000000000000;
    sub_24DCC9968();
    sub_24D97C4E0(v203);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_getWitnessTable();
    sub_24DCCADC8();
    id v167 = aBlock;
    unint64_t v172 = v205;
    sub_24D409D24((uint64_t)v63, (uint64_t)v15);
    int v64 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v61 + 48))(v15, 1, v62);
    uint64_t v65 = v176;
    if (v64 == 1)
    {
      id v66 = v168;
      id v67 = v168;
      uint64_t v68 = v190;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
      uint64_t v69 = v173;
    }
    else
    {
      uint64_t v68 = v190;
      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v190, v15, v62);
      uint64_t v69 = v173;
      id v66 = v168;
    }
    LODWORD(v190) = v169 != 0;
    (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v65, v68, v62);
    unint64_t v169 = *(int *)(v69 + 20);
    *(void *)&v65[v169] = v66;
    uint64_t v70 = (uint64_t)&v65[*(int *)(v69 + 24)];
    *(void *)uint64_t v70 = "SQLDB: Snapshot update";
    *(void *)(v70 + 8) = 22;
    uint64_t v173 = v70;
    *(unsigned char *)(v70 + 16) = 2;
    id v71 = v66;
    unint64_t v72 = v172;
    swift_bridgeObjectRetain();
    sub_24DCCA2D8();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
    uint64_t v73 = swift_allocObject();
    *(_OWORD *)(v73 + 16) = xmmword_24DCCECE0;
    *(void *)(v73 + 56) = MEMORY[0x263F8D310];
    *(void *)(v73 + 64) = sub_24D3F7B98();
    *(void *)(v73 + 32) = v167;
    *(void *)(v73 + 40) = v72;
    sub_24DCC8F88();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v68, v197);
    swift_bridgeObjectRelease();
    sub_24D415F74((uint64_t)v196, &qword_26B1990B0);
    uint64_t v75 = v201 + 16;
    uint64_t v74 = *(void (**)(char *, uint64_t, uint64_t))(v201 + 16);
    uint64_t v76 = v188;
    uint64_t v77 = v187;
    v74(v188, v175, v187);
    unint64_t v78 = (*(unsigned __int8 *)(v75 + 64) + 56) & ~(unint64_t)*(unsigned __int8 *)(v75 + 64);
    unint64_t v79 = (v36 + v78 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v80 = (char *)swift_allocObject();
    uint64_t v81 = v193;
    *((void *)v80 + 2) = v199;
    *((void *)v80 + 3) = v81;
    uint64_t v82 = v192;
    *((void *)v80 + 4) = v198;
    *((void *)v80 + 5) = v82;
    *((void *)v80 + 6) = v3;
    v170(&v80[v78], v76, v77);
    uint64_t v83 = &v80[v79];
    *(void *)uint64_t v83 = &v203;
    v83[8] = (char)v190;
    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = sub_24D956D4C;
    *(void *)(v84 + 24) = v80;
    v208 = sub_24D3E3980;
    uint64_t v209 = v84;
    id aBlock = (id)MEMORY[0x263EF8330];
    unint64_t v205 = 1107296256;
    uint64_t v206 = sub_24D3E38DC;
    v207 = &block_descriptor_767_0;
    uint64_t v85 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v86 = objc_msgSend(v189, sel_executeSwift_error_, v85, &aBlock);
    _Block_release(v85);
    id v87 = aBlock;
    LOBYTE(v72) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v72) {
      __break(1u);
    }
    if (!v86)
    {
      sub_24DCC8828();

      swift_willThrow();
      sub_24DCCA2C8();
      uint64_t v96 = (uint64_t)v176;
      sub_24DCC8F98();
      sub_24D3FCA34(v96, type metadata accessor for Signpost);
      (*(void (**)(char *, uint64_t))(v201 + 8))(v200, v187);
      return (void (***)(void))swift_release();
    }
    uint64_t v197 = (uint64_t)v80;
    uint64_t v88 = (uint64_t)v186;
    uint64_t v89 = v175;
    uint64_t v90 = v187;
    v74(v186, v175, v187);
    uint64_t v91 = v201;
    uint64_t v190 = *(char **)(v201 + 56);
    uint64_t v191 = v201 + 56;
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v190)(v88, 0, 1, v90);
    sub_24D91B880(v89, v88);
    uint64_t v93 = v195 + 1;
    uint64_t v92 = (char *)v195[1];
    ((void (*)(uint64_t, uint64_t))v92)(v88, v194);
    if ((v203 & 8) != 0)
    {
      uint64_t v95 = v175;
      if (v174)
      {
        char v195 = v93;
        uint64_t result = (void (***)(void))swift_weakLoadStrong();
        if (!result)
        {
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
        uint64_t v97 = ((uint64_t (*)(id))(*result)[22])(result);
        swift_release();
        id aBlock = v193;
        unint64_t v205 = (unint64_t)v199;
        uint64_t v206 = v192;
        v207 = v198;
        type metadata accessor for SQLDatabase();
        if (swift_dynamicCastClass())
        {
          uint64_t v188 = (char *)v97;
          uint64_t v189 = v92;
          uint64_t v98 = (uint64_t)v178;
          v74(v178, (uint64_t)v200, v90);
          int v99 = v190;
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v190)(v98, 0, 1, v90);
          char v100 = (void (*)(void, void, void))v177;
          v74(v177, v175, v90);
          ((void (*)(void (*)(void, void, void), void, uint64_t, uint64_t))v99)(v100, 0, 1, v90);
          uint64_t v101 = v202;
          sub_24DA3F2D0(v98, v100);
          if (v101)
          {
            swift_release();
            unint64_t v102 = v100;
            uint64_t v103 = v194;
            uint64_t v104 = v189;
            ((void (*)(void (*)(void, void, void), uint64_t))v189)(v102, v194);
            ((void (*)(uint64_t, uint64_t))v104)(v98, v103);
LABEL_32:
            sub_24DCCA2C8();
            uint64_t v113 = (uint64_t)v176;
            sub_24DCC8F98();
            sub_24D3FCA34(v113, type metadata accessor for Signpost);
            (*(void (**)(char *, uint64_t))(v201 + 8))(v200, v90);
            return (void (***)(void))swift_release();
          }
          uint64_t v196 = v74;
          uint64_t v202 = 0;
          swift_release();
          uint64_t v117 = v100;
          uint64_t v118 = v194;
          uint64_t v119 = v189;
          ((void (*)(void (*)(void, void, void), uint64_t))v189)(v117, v194);
          ((void (*)(uint64_t, uint64_t))v119)(v98, v118);
          goto LABEL_39;
        }
        uint64_t v196 = v74;
LABEL_36:
        swift_release();
        uint64_t v95 = v175;
        goto LABEL_40;
      }
    }
    else
    {
      char v94 = v174;
      if ((v203 & 0x800000) == 0) {
        char v94 = 1;
      }
      uint64_t v95 = v175;
      if (v94) {
        goto LABEL_33;
      }
    }
    uint64_t v189 = v92;
    if (!swift_weakLoadStrong())
    {
LABEL_33:
      uint64_t v196 = v74;
      goto LABEL_40;
    }
    char v195 = v93;
    id aBlock = v199;
    unint64_t v205 = (unint64_t)v193;
    uint64_t v206 = v198;
    v207 = v192;
    type metadata accessor for SQLDatabase();
    uint64_t v105 = (void (*)(char *, uint64_t, uint64_t))swift_dynamicCastClass();
    if (v105)
    {
      uint64_t v106 = (uint64_t)v180;
      uint64_t v196 = v105;
      v74(v180, (uint64_t)v200, v90);
      uint64_t v107 = v190;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v190)(v106, 0, 1, v90);
      uint64_t v108 = (uint64_t)v179;
      v74(v179, v175, v90);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v107)(v108, 0, 1, v90);
      uint64_t v109 = v202;
      sub_24DA3E980(v106, v108);
      if (v109)
      {
        swift_release();
        uint64_t v110 = v108;
        uint64_t v111 = v194;
        unint64_t v112 = v189;
        ((void (*)(uint64_t, uint64_t))v189)(v110, v194);
        ((void (*)(uint64_t, uint64_t))v112)(v106, v111);
        goto LABEL_32;
      }
      uint64_t v196 = v74;
      uint64_t v202 = 0;
      swift_release();
      uint64_t v114 = v108;
      uint64_t v115 = v194;
      uint64_t v116 = v189;
      ((void (*)(uint64_t, uint64_t))v189)(v114, v194);
      ((void (*)(uint64_t, uint64_t))v116)(v106, v115);
LABEL_39:
      uint64_t v95 = v175;
      uint64_t v91 = v201;
LABEL_40:
      if ((v203 & 0x10) != 0)
      {
        uint64_t v120 = v95 + *(int *)(v90 + 48);
        uint64_t v121 = type metadata accessor for ItemMetadata();
        uint64_t v122 = *(int *)(v121 + 80);
        int v123 = *(unsigned __int8 *)(v120 + v122);
        uint64_t v124 = v182;
        v196(v182, (uint64_t)v200, v90);
        if (v123 == 1)
        {
          uint64_t v125 = v91;
          char v126 = v124[*(int *)(v90 + 48) + *(int *)(v121 + 80)];
          uint64_t v127 = *(void (**)(char *, uint64_t))(v125 + 8);
          v127(v124, v90);
          if ((v126 & 1) == 0)
          {
            uint64_t result = (void (***)(void))swift_weakLoadStrong();
            char v195 = result;
            if (!result)
            {
LABEL_67:
              __break(1u);
              goto LABEL_68;
            }
            uint64_t v128 = (void *)swift_getAssociatedTypeWitness();
            uint64_t v129 = swift_getAssociatedTypeWitness();
            uint64_t v130 = swift_getAssociatedConformanceWitness();
            uint64_t v131 = swift_getAssociatedConformanceWitness();
            id aBlock = v128;
            unint64_t v205 = v129;
            uint64_t v206 = (id (*)(uint64_t, void *))v130;
            v207 = (void *)v131;
            type metadata accessor for ReconciliationID();
            TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
            uint64_t v133 = v183;
            uint64_t v189 = &v183[*(int *)(TupleTypeMetadata2 + 48)];
            uint64_t v134 = *(void (**)(char *, uint64_t, void *))(*((void *)v128 - 1) + 16);
            uint64_t v135 = v175;
            v134(v183, v175, v128);
            swift_storeEnumTagMultiPayload();
            uint64_t v136 = v187;
            v134(v189, v135 + *(int *)(v187 + 36), v128);
            uint64_t v90 = v136;
            swift_storeEnumTagMultiPayload();
            uint64_t v137 = v185;
            swift_storeEnumTagMultiPayload();
            ((void (**)(char *))*v195)[39](v133);
            swift_release();
            (*(void (**)(char *, uint64_t))(v184 + 8))(v133, v137);
            uint64_t v91 = v201;
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v127 = *(void (**)(char *, uint64_t))(v91 + 8);
          v127(v124, v90);
        }
        char v138 = *(unsigned char *)(v120 + v122);
        id v139 = v181;
        v196(v181, (uint64_t)v200, v90);
        if (v138)
        {
          uint64_t v91 = v201;
          v127(v139, v90);
        }
        else
        {
          char v140 = v139[*(int *)(v90 + 48) + *(int *)(v121 + 80)];
          uint64_t v91 = v201;
          v127(v139, v90);
          if (v140)
          {
            uint64_t result = (void (***)(void))swift_weakLoadStrong();
            char v195 = result;
            if (!result)
            {
LABEL_68:
              __break(1u);
              goto LABEL_69;
            }
            char v141 = (void *)swift_getAssociatedTypeWitness();
            unint64_t v142 = v183;
            (*(void (**)(char *, uint64_t, void *))(*(v141 - 1) + 16))(v183, v175, v141);
            uint64_t v143 = swift_getAssociatedTypeWitness();
            uint64_t v189 = (char *)swift_getAssociatedConformanceWitness();
            uint64_t v144 = swift_getAssociatedConformanceWitness();
            id aBlock = v141;
            unint64_t v205 = v143;
            uint64_t v206 = (id (*)(uint64_t, void *))v189;
            v207 = (void *)v144;
            type metadata accessor for ReconciliationID();
            swift_storeEnumTagMultiPayload();
            uint64_t v145 = v185;
            swift_storeEnumTagMultiPayload();
            ((void (**)(char *))*v195)[39](v142);
            swift_release();
            (*(void (**)(char *, uint64_t))(v184 + 8))(v142, v145);
            uint64_t v90 = v187;
          }
        }
      }
LABEL_51:
      if ((v203 & 2) == 0)
      {
        uint64_t v146 = v200;
        unint64_t v147 = (void (*)(char *, char *, uint64_t))v196;
LABEL_53:
        uint64_t result = (void (***)(void))swift_weakLoadStrong();
        if (result)
        {
          id v148 = result;
          uint64_t v149 = swift_getTupleTypeMetadata3();
          uint64_t v150 = v183;
          uint64_t v151 = &v183[*(int *)(v149 + 48)];
          uint64_t v152 = *(int *)(v149 + 64);
          v147(v183, v146, v90);
          uint64_t v153 = (void (*)(char *, uint64_t, uint64_t))v147;
          uint64_t v154 = v190;
          ((void (*)(char *, void, uint64_t, uint64_t))v190)(v150, 0, 1, v90);
          v153(v151, v175, v90);
          ((void (*)(char *, void, uint64_t, uint64_t))v154)(v151, 0, 1, v90);
          *(void *)&v150[v152] = v203;
          uint64_t v155 = v185;
          swift_storeEnumTagMultiPayload();
          (*(void (**)(char *))(*(void *)v148 + 312))(v150);
          swift_release();
          (*(void (**)(char *, uint64_t))(v184 + 8))(v150, v155);
          sub_24DCCA2C8();
          uint64_t v156 = (uint64_t)v176;
          sub_24DCC8F98();
          sub_24D3FCA34(v156, type metadata accessor for Signpost);
          (*(void (**)(char *, uint64_t))(v201 + 8))(v200, v90);
          return (void (***)(void))swift_release();
        }
        __break(1u);
        goto LABEL_66;
      }
      uint64_t v146 = v200;
      uint64_t v157 = (uint64_t)&v200[*(int *)(v90 + 36)];
      uint64_t v158 = v202;
      char v159 = sub_24D927A54(v157, 1);
      if (!v158)
      {
        uint64_t v202 = 0;
        unint64_t v147 = (void (*)(char *, char *, uint64_t))v196;
        if ((v159 & 1) == 0)
        {
          uint64_t result = (void (***)(void))swift_weakLoadStrong();
          char v195 = result;
          if (!result)
          {
LABEL_69:
            __break(1u);
            return result;
          }
          uint64_t v161 = (void *)swift_getAssociatedTypeWitness();
          uint64_t v162 = v183;
          (*(void (**)(char *, uint64_t, void *))(*(v161 - 1) + 16))(v183, v157, v161);
          uint64_t v163 = swift_getAssociatedTypeWitness();
          uint64_t v199 = (void *)swift_getAssociatedConformanceWitness();
          uint64_t v164 = swift_getAssociatedConformanceWitness();
          id aBlock = v161;
          unint64_t v205 = v163;
          uint64_t v206 = (id (*)(uint64_t, void *))v199;
          v207 = (void *)v164;
          type metadata accessor for ReconciliationID();
          swift_storeEnumTagMultiPayload();
          uint64_t v165 = v185;
          swift_storeEnumTagMultiPayload();
          ((void (**)(char *))*v195)[39](v162);
          swift_release();
          (*(void (**)(char *, uint64_t))(v184 + 8))(v162, v165);
          uint64_t v90 = v187;
          uint64_t v146 = v200;
        }
        goto LABEL_53;
      }
      sub_24DCCA2C8();
      uint64_t v160 = (uint64_t)v176;
      sub_24DCC8F98();
      sub_24D3FCA34(v160, type metadata accessor for Signpost);
      (*(void (**)(char *, uint64_t))(v91 + 8))(v146, v90);
      return (void (***)(void))swift_release();
    }
    uint64_t v196 = v74;
    goto LABEL_36;
  }
  int v174 = v44;
  uint64_t result = (void (***)(void))swift_once();
  int v44 = v174;
  if (v203) {
    goto LABEL_7;
  }
  return result;
}

uint64_t sub_24D93A688(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D9359A4(a3, *a4, a1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  uint64_t v9 = swift_checkMetadataState();
  v8(a1, v9, v7);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0x20455441445055;
}

uint64_t sub_24D93A8B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v29 = a2;
  uint64_t v4 = type metadata accessor for SnapshotItem();
  uint64_t v5 = sub_24DCCA3F8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v23 - v7;
  uint64_t result = sub_24D91FEC8(a1, 1, (char *)&v23 - v7);
  if (!v2)
  {
    uint64_t v10 = *(void *)(v4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v12 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v14 = swift_getAssociatedConformanceWitness();
      uint64_t v25 = AssociatedTypeWitness;
      uint64_t v26 = v12;
      uint64_t v27 = AssociatedConformanceWitness;
      uint64_t v28 = v14;
      uint64_t v15 = type metadata accessor for FileItemVersion();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v29, 1, 1, v15);
    }
    else
    {
      uint64_t v24 = &v8[*(int *)(v4 + 40)];
      uint64_t v16 = swift_getAssociatedTypeWitness();
      uint64_t v17 = swift_getAssociatedTypeWitness();
      uint64_t v18 = swift_getAssociatedConformanceWitness();
      uint64_t v19 = swift_getAssociatedConformanceWitness();
      uint64_t v25 = v16;
      uint64_t v26 = v17;
      uint64_t v27 = v18;
      uint64_t v28 = v19;
      uint64_t v20 = type metadata accessor for FileItemVersion();
      uint64_t v21 = *(void *)(v20 - 8);
      uint64_t v22 = v29;
      (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v29, v24, v20);
      (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v4);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v22, 0, 1, v20);
    }
  }
  return result;
}

uint64_t sub_24D93AC68(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SnapshotItem();
  uint64_t v4 = sub_24DCCA3F8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v15 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)v15 - v10;
  if (!sub_24D8903D0())
  {
    sub_24D91FEC8(a1, 1, v8);
    if (v1) {
      return v4;
    }
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
      uint64_t v12 = &v11[*(int *)(v3 + 48)];
      uint64_t v4 = *(void *)&v12[*(int *)(type metadata accessor for ItemMetadata() + 100)];
      uint64_t WitnessTable = swift_getWitnessTable();
      sub_24D98BCC4(v3, WitnessTable);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v3);
      return v4;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  return 0;
}

uint64_t sub_24D93AECC(void *a1)
{
  type metadata accessor for SnapshotItem();
  uint64_t v2 = 0;
  uint64_t v6 = sub_24DCC9C98();
  do
  {
    sub_24D930210(a1, v2, 1);
    uint64_t v4 = v3;
    sub_24DCC9D48();
    swift_getWitnessTable();
    sub_24DCC9CF8();
    swift_release();
    uint64_t v2 = v4;
  }
  while (v4);
  return v6;
}

BOOL sub_24D93B008(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a1;
  uint64_t v33 = a2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_24DCC8FC8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v31 - v10;
  uint64_t v12 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v15 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
  sub_24D409D24((uint64_t)v11, (uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
  {
    id v16 = v15;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v9, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v14, v5, v2);
  uint64_t v32 = *(int *)(v12 + 20);
  *(void *)&v14[v32] = v15;
  uint64_t v17 = &v14[*(int *)(v12 + 24)];
  *(void *)uint64_t v17 = "SQLDB: Update closest sync root for descendents of unignored item";
  *((void *)v17 + 1) = 65;
  v17[16] = 2;
  id v18 = v15;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_24D415F74((uint64_t)v11, &qword_26B1990B0);
  uint64_t v19 = v35;
  uint64_t v20 = *(void **)(v35 + qword_26B1A2590);
  uint64_t v21 = (void *)swift_allocObject();
  uint64_t v22 = v33;
  uint64_t v23 = v34;
  void v21[2] = v19;
  v21[3] = v22;
  v21[4] = v23;
  v21[5] = 200;
  uint64_t v24 = (void *)swift_allocObject();
  BOOL v25 = (char)v24;
  v24[2] = sub_24D9568DC;
  v24[3] = v21;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v24;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_757;
  uint64_t v26 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v27 = objc_msgSend(v20, sel_executeSwift_error_, v26, aBlock);
  _Block_release(v26);
  id v28 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v27)
  {
    BOOL v25 = (uint64_t)objc_msgSend(v20, sel_changes) > 199;
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  sub_24DCC8F98();
  sub_24D3FCA34((uint64_t)v14, type metadata accessor for Signpost);
  swift_release();
  return v25;
}

uint64_t sub_24D93B540(void *a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v2 = (void *)sub_24DCCB088();
  id v3 = objc_msgSend(a1, sel_bindObjectParameter_, v2);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v4 = (void *)sub_24DCCB088();
  id v5 = objc_msgSend(a1, sel_bindObjectParameter_, v4);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D93B73C(uint64_t a1)
{
  uint64_t v46 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v49 = *(void **)v1;
  uint64_t v2 = v49[93];
  uint64_t v3 = v49[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v48 = AssociatedTypeWitness;
  uint64_t v44 = *(void *)(v47 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v45 = (char *)v39 - v5;
  uint64_t v6 = sub_24DCC8FC8();
  uint64_t v43 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v39 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t isEscapingClosureAtFileLocation = 0;
  if ((*(unsigned char *)(v1 + 32) & 1) == 0)
  {
    uint64_t v42 = (char *)v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
    swift_getAssociatedTypeWitness();
    if (swift_dynamicCastMetatype())
    {
      uint64_t v40 = v3;
      uint64_t v41 = v2;
      if (qword_26B1990F8 != -1) {
        swift_once();
      }
      id v18 = (void *)qword_26B1A23B0;
      uint64_t v19 = v43;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v43 + 56))(v14, 1, 1, v6);
      sub_24D409D24((uint64_t)v14, (uint64_t)v12);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v12, 1, v6) == 1)
      {
        id v20 = v18;
        sub_24DCC8FA8();
        sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v8, v12, v6);
      }
      uint64_t v21 = v42;
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v42, v8, v6);
      v39[0] = *(int *)(v15 + 20);
      *(void *)&v21[v39[0]] = v18;
      uint64_t v22 = &v21[*(int *)(v15 + 24)];
      *(void *)uint64_t v22 = "SQLDB: Find closest sync root in parent chain";
      *((void *)v22 + 1) = 45;
      v39[1] = v22;
      v22[16] = 2;
      id v23 = v18;
      sub_24DCCA2D8();
      sub_24DCC8F98();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v8, v6);
      sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
      uint64_t v24 = *(void **)(v1 + qword_26B1A2590);
      uint64_t v25 = v47;
      uint64_t v26 = v45;
      uint64_t v27 = v48;
      (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v45, v46, v48);
      unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v29 = (char *)swift_allocObject();
      *((void *)v29 + 2) = v40;
      uint64_t v30 = v49;
      uint64_t v31 = v41;
      *((void *)v29 + 3) = v49[92];
      *((void *)v29 + 4) = v31;
      *((void *)v29 + 5) = v30[94];
      *((void *)v29 + 6) = v1;
      (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v29[v28], v26, v27);
      uint64_t v32 = (void *)swift_allocObject();
      v32[2] = sub_24D95687C;
      v32[3] = v29;
      aBlock[4] = sub_24D3E3980;
      aBlock[5] = v32;
      aBlock[0] = (id)MEMORY[0x263EF8330];
      aBlock[1] = (id)1107296256;
      aBlock[2] = sub_24D3E38DC;
      aBlock[3] = &block_descriptor_747;
      uint64_t v33 = _Block_copy(aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      aBlock[0] = 0;
      id v34 = objc_msgSend(v24, sel_fetchSwift_error_, v33, aBlock);
      _Block_release(v33);
      id v35 = aBlock[0];
      uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation) {
        __break(1u);
      }
      if (v34)
      {
        if (objc_msgSend(v34, sel_next)) {
          uint64_t isEscapingClosureAtFileLocation = (uint64_t)objc_msgSend(v34, sel_unsignedLongLongAtIndex_, 0);
        }
        else {
          uint64_t isEscapingClosureAtFileLocation = 0;
        }

        sub_24DCCA2C8();
        uint64_t v37 = (uint64_t)v42;
        sub_24DCC8F98();
        sub_24D3FCA34(v37, type metadata accessor for Signpost);
        swift_release();
      }
      else
      {
        sub_24DCC8828();

        swift_willThrow();
        sub_24DCCA2C8();
        uint64_t v36 = (uint64_t)v42;
        sub_24DCC8F98();
        sub_24D3FCA34(v36, type metadata accessor for Signpost);
        swift_release();
      }
    }
    else
    {
      return 0;
    }
  }
  return isEscapingClosureAtFileLocation;
}

uint64_t sub_24D93BE3C(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

id sub_24D93C1EC(uint64_t a1)
{
  uint64_t v2 = v1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *(void **)v2;
  uint64_t v18 = *(void *)(*(void *)v2 + 744);
  uint64_t v5 = v4[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = (char *)&v17 - v8;
  id v19 = *(id *)(v2 + qword_26B1A2590);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v17 - v8, a1, AssociatedTypeWitness);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = (char *)swift_allocObject();
  *((void *)v11 + 2) = v5;
  *((void *)v11 + 3) = v4[92];
  *((void *)v11 + 4) = v18;
  *((void *)v11 + 5) = v4[94];
  *((void *)v11 + 6) = v2;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v11[v10], v9, AssociatedTypeWitness);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = sub_24D958418;
  v12[3] = v11;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v12;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_1128_0;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v14 = objc_msgSend(v19, sel_fetchSwift_error_, v13, aBlock);
  _Block_release(v13);
  id v15 = aBlock[0];
  LOBYTE(v13) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v13) {
    __break(1u);
  }
  if (!v14)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  swift_release();
  return v14;
}

uint64_t sub_24D93C520(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D93C818(void *a1, void (*a2)(void))
{
  id v85 = a1;
  uint64_t v84 = a2;
  uint64_t v3 = *(void **)(*(void *)v2 + 744);
  uint64_t v80 = *(uint64_t (**)(uint64_t, void *))(*(void *)v2 + 728);
  uint64_t v81 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v82 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v83 = AssociatedTypeWitness;
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v7 = (char *)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  unint64_t v10 = (char *)&v68 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (char **)((char *)&v68 - v12);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v68 - v15;
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  id v19 = (char *)&v68 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v68 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  uint64_t v25 = (char *)&v68 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v68 - v26;
  uint64_t v28 = v86;
  id v29 = sub_24D93C1EC((uint64_t)v85);
  if (v28) {
    return (uint64_t)v16;
  }
  uint64_t v73 = (void (*)(void, void, void))v19;
  uint64_t v74 = v25;
  unint64_t v72 = v13;
  uint64_t v77 = v16;
  unint64_t v78 = v10;
  uint64_t v75 = v7;
  uint64_t v76 = v22;
  id v85 = v29;
  unint64_t v79 = v27;
  uint64_t v30 = v83;
  id v31 = sub_24D93C1EC((uint64_t)v84);
  uint64_t v86 = 0;
  id v33 = v31;
  id v34 = v85;
  if (objc_msgSend(v85, sel_next))
  {
    id v71 = v33;
    uint64_t v84 = *(void (**)(void))(*(void *)(swift_getAssociatedConformanceWitness() + 40) + 16);
    id v35 = v34;
    uint64_t v16 = v74;
    uint64_t v36 = v86;
    v84();
    uint64_t v86 = v36;
    if (v36)
    {

      return (uint64_t)v16;
    }
    uint64_t v37 = v82;
    (*(void (**)(char *, char *, uint64_t))(v82 + 32))(v79, v16, v30);
    id v33 = v71;
  }
  else
  {
    sub_24DBB275C();
    uint64_t v37 = v82;
  }
  if (objc_msgSend(v33, sel_next))
  {
    uint64_t v38 = v30;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v40 = *(void (**)(void))(*(void *)(AssociatedConformanceWitness + 40) + 16);
    uint64_t v16 = (char *)v33;
    uint64_t v41 = v73;
    uint64_t v42 = v86;
    v40();
    uint64_t v86 = v42;
    if (v42)
    {
      (*(void (**)(char *, uint64_t))(v37 + 8))(v79, v38);

      return (uint64_t)v16;
    }
    uint64_t v43 = v76;
    (*(void (**)(char *, void, uint64_t))(v37 + 32))(v76, v41, v38);
    uint64_t v44 = v38;
    uint64_t v45 = (void *)AssociatedConformanceWitness;
    uint64_t v46 = v79;
  }
  else
  {
    uint64_t v43 = v76;
    sub_24DBB275C();
    uint64_t v44 = v30;
    uint64_t v45 = (void *)swift_getAssociatedConformanceWitness();
    uint64_t v46 = v79;
  }
  uint64_t v83 = *(void *)(v45[4] + 8);
  if (sub_24DCC9798())
  {
    uint64_t v16 = (char *)sub_24DCC9C98();

    uint64_t v47 = *(void (**)(char *, uint64_t))(v37 + 8);
    v47(v43, v44);
    v47(v46, v44);
    return (uint64_t)v16;
  }
  uint64_t v93 = sub_24DCC9C98();
  uint64_t v80 = (uint64_t (*)(uint64_t, void *))v45[8];
  uint64_t v81 = v45 + 8;
  char v48 = v80(v44, v45);
  id v71 = v33;
  uint64_t v69 = v45;
  if ((v48 & 1) == 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v77, v46, v44);
    sub_24DCC9D48();
    sub_24DCC9D08();
    if (objc_msgSend(v85, sel_next))
    {
      uint64_t v49 = *(void (**)(void))(v45[5] + 16);
      while (1)
      {
        id v50 = v85;
        uint64_t v51 = v86;
        v49();
        uint64_t v86 = v51;
        if (v51) {
          break;
        }
        sub_24DCC9D08();
        if ((objc_msgSend(v50, sel_next) & 1) == 0) {
          goto LABEL_22;
        }
      }

      uint64_t v16 = *(char **)(v82 + 8);
      ((void (*)(char *, uint64_t))v16)(v76, v44);
      uint64_t v62 = v46;
LABEL_38:
      ((void (*)(char *, uint64_t))v16)(v62, v44);
      swift_bridgeObjectRelease();
      return (uint64_t)v16;
    }
  }
LABEL_22:
  uint64_t v92 = sub_24DCC9C98();
  uint64_t v52 = v82;
  uint64_t v53 = v78;
  uint64_t v54 = v76;
  uint64_t v73 = *(void (**)(void, void, void))(v82 + 16);
  uint64_t v74 = (char *)(v82 + 16);
  v73(v78, v76, v44);
  if (v80(v44, v69))
  {

    uint64_t v55 = *(char **)(v52 + 8);
LABEL_24:
    ((void (*)(char *, uint64_t))v55)(v53, v44);
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t))v55)(v54, v44);
    ((void (*)(char *, uint64_t))v55)(v46, v44);
    return v93;
  }
  sub_24DCC9D48();
  uint64_t v70 = (void (**)(char *, char *, uint64_t))(v52 + 32);
  unint64_t v72 = (char **)(v52 + 8);
  uint64_t v82 = (v52 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  id v56 = v71;
  uint64_t v57 = v69;
  while (1)
  {
    uint64_t v91 = v93;
    swift_getWitnessTable();
    uint64_t result = sub_24DCCA008();
    if ((v88 & 1) == 0) {
      break;
    }
    v73(v77, v53, v44);
    sub_24DCC9D08();
    if ((objc_msgSend(v56, sel_next) & 1) == 0) {
      goto LABEL_34;
    }
    uint64_t v84 = *(void (**)(void))(v57[5] + 16);
    id v58 = v56;
    id v59 = v56;
    uint64_t v60 = v75;
    uint64_t v61 = v86;
    v84();
    uint64_t v86 = v61;
    if (v61)
    {

      uint64_t v16 = *v72;
      ((void (*)(char *, uint64_t))*v72)(v78, v44);
      swift_bridgeObjectRelease();
      ((void (*)(char *, uint64_t))v16)(v76, v44);
      uint64_t v62 = v79;
      goto LABEL_38;
    }
    uint64_t v55 = *v72;
    uint64_t v53 = v78;
    ((void (*)(char *, uint64_t))*v72)(v78, v44);
    (*v70)(v53, v60, v44);
    id v56 = v58;
    if (v80(v44, v57))
    {

      uint64_t v46 = v79;
      uint64_t v54 = v76;
      goto LABEL_24;
    }
  }
  if ((v87 & 0x8000000000000000) == 0)
  {
    uint64_t v87 = sub_24DCC9D88();
    uint64_t v88 = v63;
    uint64_t v89 = v64;
    uint64_t v90 = v65;
    sub_24DCCA578();
    swift_getWitnessTable();
    uint64_t v66 = sub_24DCC9D78();
    swift_bridgeObjectRelease();
    uint64_t v93 = v66;
LABEL_34:
    uint64_t v91 = v92;
    swift_getWitnessTable();
    sub_24DCC96F8();
    uint64_t v91 = v87;
    sub_24DCCA9B8();
    swift_getWitnessTable();
    sub_24DCC9CF8();

    id v67 = *v72;
    ((void (*)(char *, uint64_t))*v72)(v53, v44);
    ((void (*)(char *, uint64_t))v67)(v76, v44);
    ((void (*)(char *, uint64_t))v67)(v79, v44);
    return v93;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D93D1F8(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v57 = (void *)*v2;
  uint64_t v3 = v57[93];
  id v58 = v2;
  uint64_t v4 = v57[91];
  uint64_t v55 = v3;
  uint64_t v53 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v52 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = &v45[-v7];
  uint64_t v8 = sub_24DCC8FC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v45[-v16];
  uint64_t v18 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v18);
  id v59 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_26B1A23B0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
  sub_24D409D24((uint64_t)v17, (uint64_t)v15);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    id v21 = v20;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v15, v8);
  }
  uint64_t v22 = v59;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v59, v11, v8);
  uint64_t v46 = *(int *)(v18 + 20);
  *(void *)&v22[v46] = v20;
  uint64_t v23 = &v22[*(int *)(v18 + 24)];
  *(void *)uint64_t v23 = "SQLDB: check item is descendent of another item";
  *((void *)v23 + 1) = 47;
  v23[16] = 2;
  id v24 = v20;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  sub_24D415F74((uint64_t)v17, &qword_26B1990B0);
  uint64_t v25 = v58;
  id v47 = *(id *)((char *)v58 + qword_26B1A2590);
  uint64_t v26 = v54;
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 16);
  uint64_t v28 = v49;
  uint64_t v29 = AssociatedTypeWitness;
  v27(v49, v50, AssociatedTypeWitness);
  uint64_t v30 = v52;
  v27(v52, v51, v29);
  uint64_t v31 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v32 = (v31 + 56) & ~v31;
  uint64_t v33 = (v48 + v31 + v32) & ~v31;
  id v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = v53;
  id v35 = v57;
  uint64_t v36 = v55;
  *((void *)v34 + 3) = v57[92];
  *((void *)v34 + 4) = v36;
  *((void *)v34 + 5) = v35[94];
  *((void *)v34 + 6) = v25;
  uint64_t v37 = *(void (**)(char *, unsigned char *, uint64_t))(v26 + 32);
  v37(&v34[v32], v28, v29);
  v37(&v34[v33], v30, v29);
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = sub_24D956784;
  v38[3] = v34;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v38;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_737_0;
  uint64_t v39 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v40 = objc_msgSend(v47, sel_fetchSwift_error_, v39, aBlock);
  _Block_release(v39);
  id v41 = aBlock[0];
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v25) {
    __break(1u);
  }
  if (v40)
  {
    LOBYTE(v42) = objc_msgSend(v40, sel_next);

    sub_24DCCA2C8();
    uint64_t v43 = (uint64_t)v59;
    sub_24DCC8F98();
    sub_24D3FCA34(v43, type metadata accessor for Signpost);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v42 = (uint64_t)v59;
    sub_24DCC8F98();
    sub_24D3FCA34(v42, type metadata accessor for Signpost);
  }
  swift_release();
  return v42 & 1;
}

uint64_t sub_24D93D8FC(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D93DC34(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v57 = (void *)*v2;
  uint64_t v3 = v57[93];
  id v58 = v2;
  uint64_t v4 = v57[91];
  uint64_t v55 = v3;
  uint64_t v53 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v52 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = &v45[-v7];
  uint64_t v8 = sub_24DCC8FC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v45[-v16];
  uint64_t v18 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v18);
  id v59 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v20 = (void *)qword_26B1A23B0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
  sub_24D409D24((uint64_t)v17, (uint64_t)v15);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    id v21 = v20;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v15, v8);
  }
  uint64_t v22 = v59;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v59, v11, v8);
  uint64_t v46 = *(int *)(v18 + 20);
  *(void *)&v22[v46] = v20;
  uint64_t v23 = &v22[*(int *)(v18 + 24)];
  *(void *)uint64_t v23 = "SQLDB: check item is descendent of another item";
  *((void *)v23 + 1) = 47;
  v23[16] = 2;
  id v24 = v20;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  sub_24D415F74((uint64_t)v17, &qword_26B1990B0);
  uint64_t v25 = v58;
  id v47 = *(id *)((char *)v58 + qword_26B1A2590);
  uint64_t v26 = v54;
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 16);
  uint64_t v28 = v49;
  uint64_t v29 = AssociatedTypeWitness;
  v27(v49, v50, AssociatedTypeWitness);
  uint64_t v30 = v52;
  v27(v52, v51, v29);
  uint64_t v31 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v32 = (v31 + 56) & ~v31;
  uint64_t v33 = (v48 + v31 + v32) & ~v31;
  id v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = v53;
  id v35 = v57;
  uint64_t v36 = v55;
  *((void *)v34 + 3) = v57[92];
  *((void *)v34 + 4) = v36;
  *((void *)v34 + 5) = v35[94];
  *((void *)v34 + 6) = v25;
  uint64_t v37 = *(void (**)(char *, unsigned char *, uint64_t))(v26 + 32);
  v37(&v34[v32], v28, v29);
  v37(&v34[v33], v30, v29);
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = sub_24D95664C;
  v38[3] = v34;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v38;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_727;
  uint64_t v39 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v40 = objc_msgSend(v47, sel_fetchSwift_error_, v39, aBlock);
  _Block_release(v39);
  id v41 = aBlock[0];
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v25) {
    __break(1u);
  }
  if (v40)
  {
    LOBYTE(v42) = objc_msgSend(v40, sel_next);

    sub_24DCCA2C8();
    uint64_t v43 = (uint64_t)v59;
    sub_24DCC8F98();
    sub_24D3FCA34(v43, type metadata accessor for Signpost);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v42 = (uint64_t)v59;
    sub_24DCC8F98();
    sub_24D3FCA34(v42, type metadata accessor for Signpost);
  }
  swift_release();
  return v42 & 1;
}

uint64_t sub_24D93E338(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D93E8B8(uint64_t a1, uint64_t a2, int a3)
{
  int v69 = a3;
  uint64_t v61 = a1;
  uint64_t v62 = a2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *v3;
  uint64_t v5 = *(void *)(*v3 + 744);
  uint64_t v6 = v3;
  uint64_t v64 = *(void *)(*v3 + 728);
  uint64_t v65 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v66 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v63 = &v54[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v59 = v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v60 = &v54[-v9];
  uint64_t v10 = sub_24DCC8FC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v54[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = &v54[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v54[-v18];
  uint64_t v20 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v20);
  uint64_t v70 = &v54[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v22 = (void *)qword_26B1A23B0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
  sub_24D409D24((uint64_t)v19, (uint64_t)v17);
  int v23 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10);
  uint64_t v67 = v4;
  if (v23 == 1)
  {
    id v24 = v22;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v17, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v13, v17, v10);
  }
  uint64_t v25 = v70;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v70, v13, v10);
  uint64_t v55 = *(int *)(v20 + 20);
  *(void *)&v25[v55] = v22;
  uint64_t v26 = &v25[*(int *)(v20 + 24)];
  *(void *)uint64_t v26 = "SQLDB: check path-matching loop";
  *((void *)v26 + 1) = 31;
  id v56 = v26;
  v26[16] = 2;
  id v27 = v22;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  sub_24D415F74((uint64_t)v19, &qword_26B1990B0);
  char v28 = *((unsigned char *)v6 + 32);
  uint64_t result = swift_weakLoadStrong();
  if ((v28 & 1) == 0)
  {
    if (result)
    {
      uint64_t v30 = *(void *)(result + 40);
      goto LABEL_11;
    }
LABEL_18:
    __break(1u);
    return result;
  }
  if (!result)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v30 = *(void *)(result + 32);
LABEL_11:
  swift_retain();
  swift_release();
  uint64_t v31 = *(void *)(v30 + 16);
  swift_retain();
  uint64_t v32 = swift_release();
  char v33 = (*(uint64_t (**)(uint64_t))(*(void *)v31 + 112))(v32);
  swift_release();
  int v57 = v33 & 1;
  id v58 = *(id *)((char *)v6 + qword_26B1A2590);
  uint64_t v34 = v66;
  id v35 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v66 + 16);
  uint64_t v36 = v60;
  uint64_t v37 = AssociatedTypeWitness;
  v35(v60, v61, AssociatedTypeWitness);
  uint64_t v38 = v63;
  v35(v63, v62, v37);
  uint64_t v39 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v40 = (v39 + 56) & ~v39;
  uint64_t v41 = v40 + v59;
  uint64_t v42 = (v39 + v40 + v59 + 2) & ~v39;
  uint64_t v43 = (char *)swift_allocObject();
  *((void *)v43 + 2) = v64;
  uint64_t v44 = v67;
  uint64_t v45 = v65;
  *((void *)v43 + 3) = *(void *)(v67 + 736);
  *((void *)v43 + 4) = v45;
  *((void *)v43 + 5) = *(void *)(v44 + 752);
  *((void *)v43 + 6) = v6;
  uint64_t v46 = *(void (**)(char *, unsigned char *, uint64_t))(v34 + 32);
  v46(&v43[v40], v36, v37);
  id v47 = &v43[v41];
  *id v47 = v57;
  v47[1] = v69 & 1;
  v46(&v43[v42], v38, v37);
  uint64_t v48 = (void *)swift_allocObject();
  void v48[2] = sub_24D956570;
  v48[3] = v43;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v48;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_717_0;
  uint64_t v49 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v50 = objc_msgSend(v58, sel_fetchSwift_error_, v49, aBlock);
  _Block_release(v49);
  id v51 = aBlock[0];
  LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v42) {
    __break(1u);
  }
  if (v50)
  {
    LOBYTE(v52) = objc_msgSend(v50, sel_next);

    sub_24DCCA2C8();
    uint64_t v53 = (uint64_t)v70;
    sub_24DCC8F98();
    sub_24D3FCA34(v53, type metadata accessor for Signpost);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v52 = (uint64_t)v70;
    sub_24DCC8F98();
    sub_24D3FCA34(v52, type metadata accessor for Signpost);
  }
  swift_release();
  return v52 & 1;
}

uint64_t sub_24D93F088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v7 = *(void (**)(uint64_t))(v6 + 32);
  uint64_t v9 = swift_checkMetadataState();
  v7(a1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if ((a5 & 1) == 0)
  {
    ((void (*)(uint64_t, uint64_t, uint64_t))v7)(a1, v9, v6);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  ((void (*)(uint64_t, uint64_t, uint64_t))v7)(a1, v9, v6);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D93F668(uint64_t a1, uint64_t a2)
{
  uint64_t v56 = a1;
  uint64_t v57 = a2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = *v2;
  uint64_t v4 = *(void *)(*v2 + 736);
  uint64_t v61 = *(void *)(*v2 + 752);
  uint64_t v59 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v60 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v54 = *(void *)(v60 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v58 = &v46[-v5];
  uint64_t v6 = *(void *)(v3 + 744);
  uint64_t v64 = v2;
  uint64_t v7 = *(void *)(v3 + 728);
  uint64_t v55 = v6;
  uint64_t v52 = v7;
  uint64_t v53 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v53 - 8);
  uint64_t v50 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v53);
  id v51 = &v46[-v9];
  uint64_t v10 = sub_24DCC8FC8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = &v46[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v17 = &v46[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = &v46[-v18];
  uint64_t v20 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v20);
  uint64_t v63 = &v46[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v22 = (void *)qword_26B1A23B0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v19, 1, 1, v10);
  sub_24D409D24((uint64_t)v19, (uint64_t)v17);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v17, 1, v10) == 1)
  {
    id v23 = v22;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v17, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 32))(v13, v17, v10);
  }
  id v24 = v63;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v11 + 16))(v63, v13, v10);
  uint64_t v47 = *(int *)(v20 + 20);
  *(void *)&v24[v47] = v22;
  uint64_t v25 = &v24[*(int *)(v20 + 24)];
  *(void *)uint64_t v25 = "SQLDB: check path-matching loop";
  *((void *)v25 + 1) = 31;
  uint64_t v48 = v25;
  v25[16] = 2;
  id v26 = v22;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  sub_24D415F74((uint64_t)v19, &qword_26B1990B0);
  id v27 = v64;
  id v49 = *(id *)((char *)v64 + qword_26B1A2590);
  char v28 = v51;
  uint64_t v29 = v53;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v51, v56, v53);
  uint64_t v30 = v60;
  uint64_t v31 = v58;
  uint64_t v32 = AssociatedTypeWitness;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v60 + 16))(v58, v57, AssociatedTypeWitness);
  unint64_t v33 = (*(unsigned __int8 *)(v8 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v34 = (v50 + *(unsigned __int8 *)(v30 + 80) + v33) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  id v35 = (void *)swift_allocObject();
  uint64_t v36 = v59;
  void v35[2] = v52;
  v35[3] = v36;
  uint64_t v37 = v61;
  v35[4] = v55;
  v35[5] = v37;
  v35[6] = v27;
  uint64_t v38 = v35;
  (*(void (**)(char *, unsigned char *, uint64_t))(v8 + 32))((char *)v35 + v33, v28, v29);
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v30 + 32))((unint64_t)v38 + v34, v31, v32);
  uint64_t v39 = (void *)swift_allocObject();
  void v39[2] = sub_24D956338;
  v39[3] = v38;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v39;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_707;
  uint64_t v40 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v41 = objc_msgSend(v49, sel_fetchSwift_error_, v40, aBlock);
  _Block_release(v40);
  id v42 = aBlock[0];
  LOBYTE(v32) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v32) {
    __break(1u);
  }
  if (v41)
  {
    LOBYTE(v43) = objc_msgSend(v41, sel_next);

    sub_24DCCA2C8();
    uint64_t v44 = (uint64_t)v63;
    sub_24DCC8F98();
    sub_24D3FCA34(v44, type metadata accessor for Signpost);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v43 = (uint64_t)v63;
    sub_24DCC8F98();
    sub_24D3FCA34(v43, type metadata accessor for Signpost);
  }
  swift_release();
  return v43 & 1;
}

uint64_t sub_24D93FE28(uint64_t a1)
{
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
  uint64_t v3 = swift_checkMetadataState();
  v2(a1, v3, v1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  uint64_t v6 = swift_checkMetadataState();
  v5(a1, v6, v4);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D940200()
{
  return sub_24D9548B0();
}

uint64_t sub_24D94021C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v42[0] = a2;
  uint64_t v3 = v2;
  uint64_t v47 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v48 = (void *)*v2;
  uint64_t v4 = v48[93];
  uint64_t v51 = v48[91];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v52 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v45 = *(void *)(v52 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v46 = (char *)v42 - v5;
  uint64_t v6 = sub_24DCC8FC8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v42 - v14;
  uint64_t v16 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v53 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v18 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v15, 1, 1, v6);
  sub_24D409D24((uint64_t)v15, (uint64_t)v13);
  int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48))(v13, 1, v6);
  uint64_t v49 = v4;
  if (v19 == 1)
  {
    id v20 = v18;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v13, v6);
  }
  uint64_t v21 = v53;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v53, v9, v6);
  uint64_t v43 = *(int *)(v16 + 20);
  *(void *)&v21[v43] = v18;
  uint64_t v22 = &v21[*(int *)(v16 + 24)];
  *(void *)uint64_t v22 = "SQLDB: lookupPathMatchingItemIDInCreationParentHierarchy";
  *((void *)v22 + 1) = 56;
  uint64_t v44 = v22;
  v22[16] = 2;
  id v23 = v18;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
  id v24 = *(void **)((char *)v3 + qword_26B1A2590);
  uint64_t v25 = v52;
  id v26 = v46;
  uint64_t v27 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v46, v47, AssociatedTypeWitness);
  unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v29 = (v45 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = (char *)swift_allocObject();
  *((void *)v30 + 2) = v51;
  uint64_t v31 = v48;
  uint64_t v32 = v49;
  *((void *)v30 + 3) = v48[92];
  *((void *)v30 + 4) = v32;
  *((void *)v30 + 5) = v31[94];
  *((void *)v30 + 6) = v3;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v30[v28], v26, v27);
  *(void *)&v30[v29] = 1026;
  unint64_t v33 = (void *)swift_allocObject();
  v33[2] = sub_24D956188;
  v33[3] = v30;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v33;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_697;
  unint64_t v34 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v35 = objc_msgSend(v24, sel_fetchSwift_error_, v34, aBlock);
  _Block_release(v34);
  id v36 = aBlock[0];
  LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v26) {
    __break(1u);
  }
  if (v35)
  {
    if (objc_msgSend(v35, sel_next))
    {
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v39 = v42[0];
      uint64_t v38 = v42[1];
      (*(void (**)(id, void, uint64_t))(*(void *)(AssociatedConformanceWitness + 40) + 16))(v35, 0, v27);
      if (!v38) {
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v52 + 56))(v39, 0, 1, v27);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, uint64_t))(v52 + 56))(v42[0], 1, 1, v27);
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  uint64_t v40 = (uint64_t)v53;
  sub_24DCC8F98();
  sub_24D3FCA34(v40, type metadata accessor for Signpost);
  return swift_release();
}

uint64_t sub_24D940920(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
  uint64_t v3 = swift_checkMetadataState();
  v2(a1, v3, v1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D940E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v57 = (void *)*v2;
  uint64_t v3 = v57[93];
  id v58 = v2;
  uint64_t v4 = v57[91];
  uint64_t v55 = v3;
  uint64_t v53 = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v52 = &v45[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v48 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = &v45[-v7];
  uint64_t v8 = sub_24DCC8FC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v45[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = &v45[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = &v45[-v16];
  uint64_t v18 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v18);
  uint64_t v59 = &v45[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  id v20 = (void *)qword_26B1A23B0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
  sub_24D409D24((uint64_t)v17, (uint64_t)v15);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8) == 1)
  {
    id v21 = v20;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v11, v15, v8);
  }
  uint64_t v22 = v59;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v59, v11, v8);
  uint64_t v46 = *(int *)(v18 + 20);
  *(void *)&v22[v46] = v20;
  id v23 = &v22[*(int *)(v18 + 24)];
  *(void *)id v23 = "SQLDB: parentHierarchyContainsAncestorID";
  *((void *)v23 + 1) = 40;
  v23[16] = 2;
  id v24 = v20;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  sub_24D415F74((uint64_t)v17, &qword_26B1990B0);
  uint64_t v25 = v58;
  id v47 = *(id *)((char *)v58 + qword_26B1A2590);
  uint64_t v26 = v54;
  uint64_t v27 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v54 + 16);
  unint64_t v28 = v49;
  uint64_t v29 = AssociatedTypeWitness;
  v27(v49, v50, AssociatedTypeWitness);
  uint64_t v30 = v52;
  v27(v52, v51, v29);
  uint64_t v31 = *(unsigned __int8 *)(v26 + 80);
  uint64_t v32 = (v31 + 56) & ~v31;
  uint64_t v33 = (v48 + v31 + v32) & ~v31;
  unint64_t v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = v53;
  id v35 = v57;
  uint64_t v36 = v55;
  *((void *)v34 + 3) = v57[92];
  *((void *)v34 + 4) = v36;
  *((void *)v34 + 5) = v35[94];
  *((void *)v34 + 6) = v25;
  uint64_t v37 = *(void (**)(char *, unsigned char *, uint64_t))(v26 + 32);
  v37(&v34[v32], v28, v29);
  v37(&v34[v33], v30, v29);
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = sub_24D95615C;
  v38[3] = v34;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v38;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_687;
  uint64_t v39 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v40 = objc_msgSend(v47, sel_fetchSwift_error_, v39, aBlock);
  _Block_release(v39);
  id v41 = aBlock[0];
  LOBYTE(v25) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v25) {
    __break(1u);
  }
  if (v40)
  {
    LOBYTE(v42) = objc_msgSend(v40, sel_next);

    sub_24DCCA2C8();
    uint64_t v43 = (uint64_t)v59;
    sub_24DCC8F98();
    sub_24D3FCA34(v43, type metadata accessor for Signpost);
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    sub_24DCCA2C8();
    uint64_t v42 = (uint64_t)v59;
    sub_24DCC8F98();
    sub_24D3FCA34(v42, type metadata accessor for Signpost);
  }
  swift_release();
  return v42 & 1;
}

uint64_t sub_24D941540(uint64_t a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32);
  uint64_t v4 = swift_checkMetadataState();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v3(a1, v4, v2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D9417F0(uint64_t a1, uint64_t a2)
{
  uint64_t v107 = a2;
  uint64_t v105 = a1;
  v119[1] = *MEMORY[0x263EF8340];
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 744);
  uint64_t v108 = v2;
  uint64_t v109 = *(void *)(v3 + 728);
  uint64_t v110 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v112 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v101 = *(void *)(v112 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v104 = (char *)&v88 - v6;
  uint64_t v7 = sub_24DCC8FC8();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v88 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v88 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v88 - v15;
  uint64_t v17 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v17);
  uint64_t v111 = (char *)&v88 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v19 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, 1, 1, v7);
  sub_24D409D24((uint64_t)v16, (uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v14, 1, v7) == 1)
  {
    id v20 = v19;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v14, v7);
  }
  id v21 = v111;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v111, v10, v7);
  uint64_t v98 = *(int *)(v17 + 20);
  *(void *)&v21[v98] = v19;
  uint64_t v22 = &v21[*(int *)(v17 + 24)];
  *(void *)uint64_t v22 = "SQLDB: listing descendents pending incoming propagation";
  *((void *)v22 + 1) = 55;
  int v99 = v22;
  v22[16] = 2;
  id v23 = v19;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_24D415F74((uint64_t)v16, &qword_26B1990B0);
  uint64_t v24 = *(void *)(v4 + 752);
  uint64_t v25 = *(void *)(v4 + 736);
  uint64_t v26 = swift_getAssociatedTypeWitness();
  uint64_t v27 = sub_24DCC9C98();
  uint64_t v28 = MEMORY[0x253327DD0](v27, v26);
  uint64_t v96 = v26;
  uint64_t v100 = v25;
  if (v28)
  {
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v30 = sub_24D7846E4(v27, v26, *(void *)(AssociatedConformanceWitness + 32));
  }
  else
  {
    uint64_t v30 = MEMORY[0x263F8EE88];
  }
  uint64_t v31 = v109;
  swift_bridgeObjectRelease();
  v119[0] = v30;
  uint64_t v32 = v108;
  id v103 = *(id *)((char *)v108 + qword_26B1A2590);
  uint64_t v33 = v112;
  unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v112 + 16);
  id v35 = v104;
  uint64_t v36 = AssociatedTypeWitness;
  uint64_t v93 = v112 + 16;
  uint64_t v92 = v34;
  v34(v104, v105, AssociatedTypeWitness);
  uint64_t v37 = *(unsigned __int8 *)(v33 + 80);
  uint64_t v38 = (v37 + 64) & ~v37;
  unint64_t v39 = (v101 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v90 = v39 + 8;
  uint64_t v91 = v37 | 7;
  uint64_t v40 = swift_allocObject();
  *(void *)(v40 + 16) = v31;
  uint64_t v41 = v100;
  uint64_t v42 = v110;
  *(void *)(v40 + 24) = v100;
  *(void *)(v40 + 32) = v42;
  uint64_t v102 = v24;
  *(void *)(v40 + 40) = v24;
  *(void *)(v40 + 48) = v32;
  *(void *)(v40 + 56) = v107;
  uint64_t v94 = v38;
  uint64_t v43 = v40 + v38;
  uint64_t v44 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  uint64_t v112 = v33 + 32;
  v44(v43, v35, v36);
  unint64_t v95 = v39;
  *(void *)(v40 + v39) = 100;
  uint64_t v45 = swift_allocObject();
  *(void *)(v45 + 16) = sub_24D955F1C;
  *(void *)(v45 + 24) = v40;
  uint64_t v101 = v40;
  uint64_t v117 = sub_24D3E3980;
  uint64_t v118 = v45;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v114 = 1107296256;
  uint64_t v115 = sub_24D3E38DC;
  uint64_t v116 = &block_descriptor_657;
  uint64_t v46 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v47 = (uint64_t (*)(uint64_t))objc_msgSend(v103, sel_fetchSwift_error_, v46, &aBlock);
  _Block_release(v46);
  id v48 = aBlock;
  LOBYTE(v40) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v40)
  {
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
  if (!v47)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_bridgeObjectRelease();
    uint64_t v53 = 0;
    uint64_t v97 = 0;
LABEL_42:
    sub_24DCCA2C8();
    uint64_t v86 = (uint64_t)v111;
    sub_24DCC8F98();
    sub_24D3FCA34(v86, type metadata accessor for Signpost);
    swift_release();
    sub_24D43DD74(v53);
    sub_24D43DD74((uint64_t)v47);
    return v53;
  }
  if (objc_msgSend(v47, sel_next))
  {
    uint64_t v50 = v109;
    uint64_t v49 = v110;
    uint64_t v51 = v97;
    while (1)
    {
      uint64_t v52 = (void *)MEMORY[0x253329610]();
      sub_24D94354C((uint64_t)v119, v47);
      if (v51) {
        break;
      }
      if ((objc_msgSend(v47, sel_next) & 1) == 0) {
        goto LABEL_18;
      }
    }

    swift_bridgeObjectRelease();
    uint64_t v53 = 0;
    uint64_t v97 = 0;
    id v47 = 0;
    goto LABEL_42;
  }
  uint64_t v50 = v109;
  uint64_t v49 = v110;
  uint64_t v51 = v97;
LABEL_18:
  uint64_t v89 = (void (*)(char *, char *, uint64_t))v44;
  uint64_t v54 = (void *)v119[0];
  uint64_t v55 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_24DCC9EA8();
  swift_bridgeObjectRelease();
  if (v56 >= 100)
  {
    id aBlock = v54;
    sub_24DCC9F28();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v53 = sub_24DCC9D78();
    swift_bridgeObjectRelease();

    uint64_t v70 = 0;
    uint64_t v97 = 0;
    id v71 = 0;
    goto LABEL_27;
  }
  uint64_t v88 = v55;

  uint64_t v57 = v104;
  uint64_t v58 = AssociatedTypeWitness;
  v92(v104, v105, AssociatedTypeWitness);
  uint64_t v59 = (void *)swift_allocObject();
  v59[2] = v50;
  v59[3] = v41;
  uint64_t v60 = v102;
  v59[4] = v49;
  v59[5] = v60;
  uint64_t v61 = v59;
  uint64_t v62 = (char *)v59 + v94;
  uint64_t v63 = v107;
  v61[6] = v108;
  v61[7] = v63;
  v89(v62, v57, v58);
  *(void *)((char *)v61 + v95) = 100;
  uint64_t v64 = swift_allocObject();
  *(void *)(v64 + 16) = sub_24D955F48;
  *(void *)(v64 + 24) = v61;
  uint64_t v97 = v61;
  uint64_t v117 = sub_24D3E3980;
  uint64_t v118 = v64;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v114 = 1107296256;
  uint64_t v115 = sub_24D3E38DC;
  uint64_t v116 = &block_descriptor_667;
  uint64_t v65 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v47 = (uint64_t (*)(uint64_t))objc_msgSend(v103, sel_fetchSwift_error_, v65, &aBlock);
  _Block_release(v65);
  id v66 = aBlock;
  LOBYTE(v65) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v65) {
    goto LABEL_47;
  }
  if (!v47)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_bridgeObjectRelease();
LABEL_41:
    uint64_t v53 = (uint64_t)sub_24D955F48;
    goto LABEL_42;
  }
  if (objc_msgSend(v47, sel_next))
  {
    uint64_t v68 = v109;
    uint64_t v67 = v110;
    while (1)
    {
      int v69 = (void *)MEMORY[0x253329610]();
      sub_24D94354C((uint64_t)v119, v47);
      if (v51) {
        break;
      }
      if ((objc_msgSend(v47, sel_next) & 1) == 0) {
        goto LABEL_31;
      }
    }

    swift_bridgeObjectRelease();
    id v47 = 0;
    goto LABEL_41;
  }
  uint64_t v68 = v109;
  uint64_t v67 = v110;
LABEL_31:
  uint64_t v73 = (void *)v119[0];
  swift_bridgeObjectRetain();
  uint64_t v74 = sub_24DCC9EA8();
  swift_bridgeObjectRelease();
  if (v74 >= 100)
  {
    id aBlock = v73;
    sub_24DCC9F28();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v53 = sub_24DCC9D78();
    swift_bridgeObjectRelease();

    id v71 = 0;
    uint64_t v70 = sub_24D955F48;
    goto LABEL_27;
  }

  uint64_t v75 = v104;
  uint64_t v76 = AssociatedTypeWitness;
  v92(v104, v105, AssociatedTypeWitness);
  uint64_t v77 = (void *)swift_allocObject();
  v77[2] = v68;
  v77[3] = v41;
  uint64_t v78 = v102;
  v77[4] = v67;
  v77[5] = v78;
  unint64_t v79 = (char *)v77 + v94;
  uint64_t v80 = v107;
  v77[6] = v108;
  v77[7] = v80;
  v89(v79, v75, v76);
  *(void *)((char *)v77 + v95) = 100;
  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = sub_24D956064;
  *(void *)(v81 + 24) = v77;
  uint64_t v117 = sub_24D3E3980;
  uint64_t v118 = v81;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v114 = 1107296256;
  uint64_t v115 = sub_24D3E38DC;
  uint64_t v116 = &block_descriptor_677;
  uint64_t v82 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  id v83 = objc_msgSend(v103, sel_fetchSwift_error_, v82, &aBlock);
  _Block_release(v82);
  id v84 = aBlock;
  LOBYTE(v82) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v82) {
LABEL_48:
  }
    __break(1u);
  if (!v83)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_bridgeObjectRelease();
    id v47 = sub_24D956064;
    goto LABEL_41;
  }
  if (objc_msgSend(v83, sel_next))
  {
    while (1)
    {
      id v85 = (void *)MEMORY[0x253329610]();
      sub_24D94354C((uint64_t)v119, v83);
      if (v51) {
        break;
      }
      if ((objc_msgSend(v83, sel_next) & 1) == 0) {
        goto LABEL_44;
      }
    }

    swift_bridgeObjectRelease();
    id v47 = sub_24D956064;
    uint64_t v53 = (uint64_t)sub_24D955F48;
    goto LABEL_42;
  }
LABEL_44:
  id aBlock = (id)v119[0];
  sub_24DCC9F28();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  uint64_t v53 = sub_24DCC9D78();
  swift_bridgeObjectRetain();
  sub_24DCC9EA8();
  swift_bridgeObjectRelease_n();

  id v71 = sub_24D956064;
  uint64_t v70 = sub_24D955F48;
LABEL_27:
  sub_24DCCA2C8();
  uint64_t v72 = (uint64_t)v111;
  sub_24DCC8F98();
  sub_24D3FCA34(v72, type metadata accessor for Signpost);
  swift_release();
  sub_24D43DD74((uint64_t)v70);
  sub_24D43DD74((uint64_t)v71);
  return v53;
}

uint64_t sub_24D942808(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v16 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v18 = 0;
  unint64_t v19 = 0xE000000000000000;
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v17 = MEMORY[0x263F8D6C8];
  uint64_t v15 = a3;
  sub_24D3E3EB4((uint64_t)&v15);
  uint64_t v8 = v7;
  sub_24D415F74((uint64_t)&v15, qword_26B197F50);
  if (v8)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 32);
    uint64_t v11 = swift_checkMetadataState();
    v10(a1, v11, v9);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v15 = 3044466;
    unint64_t v16 = 0xE300000000000000;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24D9548B0();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    id v12 = objc_msgSend(a1, sel_bindLongParameter_, a5);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D942C1C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v17 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v7 = MEMORY[0x263F8D6C8];
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v18 = v7;
  uint64_t v16 = a3;
  sub_24D3E3EB4((uint64_t)&v16);
  uint64_t v9 = v8;
  sub_24D415F74((uint64_t)&v16, qword_26B197F50);
  if (v9)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_getAssociatedTypeWitness();
    uint64_t v10 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    uint64_t v11 = *(void (**)(void *, uint64_t, uint64_t))(v10 + 32);
    uint64_t v12 = swift_checkMetadataState();
    v11(a1, v12, v10);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v16 = 3044466;
    unint64_t v17 = 0xE300000000000000;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24D9548B0();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    id v13 = objc_msgSend(a1, sel_bindLongParameter_, a5);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v19;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D943044(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v17 = (uint64_t (*)())0xE000000000000000;
  sub_24DCCA728();
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v16 = 5;
  uint64_t v6 = MEMORY[0x263F8D6C8];
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  if (qword_26B197990 != -1) {
    swift_once();
  }
  uint64_t v20 = 40;
  unint64_t v21 = 0xE100000000000000;
  unint64_t v17 = sub_24DAFB0AC;
  uint64_t v18 = 0;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
  sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
  sub_24D3F0EB8();
  sub_24DCC9B28();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v19 = v6;
  uint64_t v16 = a3;
  sub_24D3E3EB4((uint64_t)&v16);
  uint64_t v8 = v7;
  sub_24D415F74((uint64_t)&v16, qword_26B197F50);
  if (v8)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    uint64_t v10 = *(void (**)(void *, uint64_t, uint64_t))(v9 + 32);
    uint64_t v11 = swift_checkMetadataState();
    v10(a1, v11, v9);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v16 = 3044466;
    unint64_t v17 = (uint64_t (*)())0xE300000000000000;
    sub_24DCC9968();
    sub_24DCC9968();
    sub_24D9548B0();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    id v12 = objc_msgSend(a1, sel_bindLongParameter_, a5);
    sub_24DCC97E8();

    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v22;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D94354C(uint64_t a1, void *a2)
{
  v12[1] = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12[0] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v12 - v5;
  uint64_t v7 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v8 = *(uint64_t (**)(id, void, uint64_t, uint64_t))(v7 + 16);
  id v9 = a2;
  uint64_t v10 = v12[3];
  uint64_t result = v8(v9, 0, AssociatedTypeWitness, v7);
  if (!v10)
  {
    sub_24DCC9F28();
    sub_24DCC9EB8();
    return (*(uint64_t (**)(char *, uint64_t))(v12[0] + 8))(v6, AssociatedTypeWitness);
  }
  return result;
}

id sub_24D9436F8(uint64_t a1, uint64_t a2)
{
  uint64_t v52 = a2;
  uint64_t v49 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v51 = (void *)*v2;
  uint64_t v3 = v51[93];
  uint64_t v53 = v2;
  uint64_t v54 = v51[91];
  uint64_t v55 = v3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v47 = *(void *)(v50 + 64);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v48 = (char *)&v44 - v4;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  id v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v44 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v57 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  unint64_t v17 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
  sub_24D409D24((uint64_t)v14, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
  {
    id v18 = v17;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
  }
  uint64_t v19 = v57;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v57, v8, v5);
  uint64_t v45 = *(int *)(v15 + 20);
  *(void *)&v19[v45] = v17;
  uint64_t v20 = &v19[*(int *)(v15 + 24)];
  *(void *)uint64_t v20 = "SQLDB: list not yet created descendents";
  *((void *)v20 + 1) = 39;
  v20[16] = 2;
  id v21 = v17;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
  uint64_t v22 = v53;
  id v46 = *(id *)((char *)v53 + qword_26B1A2590);
  uint64_t v23 = v50;
  uint64_t v24 = v48;
  uint64_t v25 = AssociatedTypeWitness;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v48, v49, AssociatedTypeWitness);
  unint64_t v26 = (*(unsigned __int8 *)(v23 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v27 = (v47 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = (char *)swift_allocObject();
  *((void *)v28 + 2) = v54;
  uint64_t v29 = v51;
  uint64_t v49 = v51[92];
  uint64_t v30 = v55;
  *((void *)v28 + 3) = v49;
  *((void *)v28 + 4) = v30;
  uint64_t v31 = v29[94];
  *((void *)v28 + 5) = v31;
  *((void *)v28 + 6) = v22;
  *((void *)v28 + 7) = v52;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v28[v26], v24, v25);
  *(void *)&v28[v27] = 100;
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = sub_24D955EF0;
  v32[3] = v28;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v32;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_647;
  uint64_t v33 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v34 = objc_msgSend(v46, sel_fetchSwift_error_, v33, aBlock);
  _Block_release(v33);
  id v35 = aBlock[0];
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  uint64_t v36 = swift_release();
  if (v22) {
    __break(1u);
  }
  if (v34)
  {
    MEMORY[0x270FA5388](v36);
    uint64_t v37 = v49;
    *(&v44 - 6) = v54;
    *(&v44 - 5) = v37;
    uint64_t v38 = AssociatedTypeWitness;
    *(&v44 - 4) = v55;
    *(&v44 - 3) = v31;
    *(&v44 - 2) = (uint64_t)v34;
    uint64_t v39 = v44;
    uint64_t v40 = sub_24D734D78();
    if (!v39)
    {
      id v35 = v40;
      MEMORY[0x253327D80](v40, v38);

      sub_24DCCA2C8();
      uint64_t v42 = (uint64_t)v57;
      sub_24DCC8F98();
      sub_24D3FCA34(v42, type metadata accessor for Signpost);
      swift_release();
      return v35;
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  uint64_t v41 = (uint64_t)v57;
  sub_24DCC8F98();
  sub_24D3FCA34(v41, type metadata accessor for Signpost);
  swift_release();
  return v35;
}

uint64_t sub_24D943E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v15 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v16 = MEMORY[0x263F8D6C8];
  uint64_t v14 = a3;
  sub_24D3E3EB4((uint64_t)&v14);
  uint64_t v8 = v7;
  sub_24D415F74((uint64_t)&v14, qword_26B197F50);
  if (v8)
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_getAssociatedTypeWitness();
    uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
    uint64_t v11 = swift_checkMetadataState();
    v10(a1, v11, v9);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v14 = 3044466;
    unint64_t v15 = 0xE300000000000000;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    sub_24D9548B0();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    uint64_t v14 = a5;
    sub_24DCCAD78();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

void *sub_24D9441BC(uint64_t a1)
{
  uint64_t v37 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = *v1;
  uint64_t v4 = sub_24DCC8FC8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v34 - v12;
  uint64_t v14 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v14);
  uint64_t v39 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v34 = v3;
  uint64_t v16 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v13, 1, 1, v4);
  sub_24D409D24((uint64_t)v13, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v11, 1, v4) == 1)
  {
    id v17 = v16;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v11, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
  }
  unint64_t v18 = v7;
  uint64_t v19 = v39;
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v39, v18, v4);
  uint64_t v35 = *(int *)(v14 + 20);
  *(void *)&v19[v35] = v16;
  uint64_t v20 = &v19[*(int *)(v14 + 24)];
  *(void *)uint64_t v20 = "SQLDB: list packages";
  *((void *)v20 + 1) = 20;
  uint64_t v36 = v20;
  v20[16] = 2;
  id v21 = v16;
  sub_24DCCA2D8();
  sub_24DCC8F98();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
  sub_24D415F74((uint64_t)v13, &qword_26B1990B0);
  uint64_t v22 = v38;
  uint64_t v23 = *(void **)(v38 + qword_26B1A2590);
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v37;
  v24[2] = v22;
  v24[3] = v25;
  v24[4] = 100;
  unint64_t v26 = (void *)swift_allocObject();
  void v26[2] = sub_24D955ED0;
  v26[3] = v24;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v26;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_637;
  unint64_t v27 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v28 = objc_msgSend(v23, sel_fetchSwift_error_, v27, aBlock);
  _Block_release(v27);
  id v29 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v28)
  {
    swift_getAssociatedTypeWitness();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    unint64_t v26 = (void *)sub_24DCC9C98();
    uint64_t v40 = 0;
    aBlock[0] = v26;
    if (objc_msgSend(v28, sel_next))
    {
      while (1)
      {
        unint64_t v26 = (void *)MEMORY[0x253329610]();
        sub_24D9449B8(&v40, v28, (uint64_t)aBlock);
        if (v2) {
          break;
        }
        if ((objc_msgSend(v28, sel_next) & 1) == 0)
        {
          unint64_t v26 = aBlock[0];
          goto LABEL_12;
        }
      }

      swift_bridgeObjectRelease();
    }
    else
    {
LABEL_12:
      swift_bridgeObjectRetain_n();
      MEMORY[0x253327D80](v26, TupleTypeMetadata2);
      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  sub_24DCCA2C8();
  uint64_t v32 = (uint64_t)v39;
  sub_24DCC8F98();
  sub_24D3FCA34(v32, type metadata accessor for Signpost);
  swift_release();
  return v26;
}

uint64_t sub_24D944844(void *a1, uint64_t a2, uint64_t a3)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v5 = objc_msgSend(a1, sel_bindLongParameter_, a3);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D9449B8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v25 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v6 = MEMORY[0x270FA5388](TupleTypeMetadata2);
  uint64_t v8 = (uint64_t *)((char *)&v22 - v7);
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v22 - v9;
  *a1 = objc_msgSend(a2, sel_longAtIndex_, 0);
  id v11 = objc_msgSend(a2, sel_stringAtIndex_, 1);
  uint64_t v12 = sub_24DCC97E8();
  uint64_t v14 = v13;

  uint64_t v15 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v16 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v15 + 16);
  id v17 = a2;
  uint64_t v18 = v26;
  v16(v17, 3, AssociatedTypeWitness, v15);
  if (v18) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v20 = v23;
  id v21 = (char *)v8 + *(int *)(TupleTypeMetadata2 + 48);
  *uint64_t v8 = v12;
  v8[1] = v14;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v21, v10, AssociatedTypeWitness);
  sub_24DCC9D48();
  return sub_24DCC9D08();
}

void *sub_24D944BF4()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_24D955EB8;
  v2[3] = v0;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_627;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v4 = objc_msgSend(v1, sel_fetchSwift_error_, v3, aBlock);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v4)
  {
    if (objc_msgSend(v4, sel_next))
    {
      uint64_t v2 = objc_msgSend(v4, sel_longAtIndex_, 0);
      swift_release();
    }
    else
    {
      swift_release();

      return 0;
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return v2;
}

unint64_t sub_24D944DF4()
{
  return 0xD000000000000017;
}

uint64_t sub_24D944E90(uint64_t a1, uint64_t a2, void (*a3)(char *), uint64_t a4)
{
  uint64_t v49 = a4;
  uint64_t v57 = a3;
  uint64_t v51 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v54 = *(void **)v4;
  uint64_t v55 = sub_24DCC8CE8();
  uint64_t v53 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  uint64_t v50 = v7;
  uint64_t v52 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24DCC8FC8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v42 - v16;
  uint64_t v18 = type metadata accessor for Signpost(0);
  uint64_t result = MEMORY[0x270FA5388](v18);
  uint64_t v56 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v4 + 32) == 1)
  {
    uint64_t v48 = v4;
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    id v21 = (void *)qword_26B1A23B0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v17, 1, 1, v8);
    sub_24D409D24((uint64_t)v17, (uint64_t)v15);
    int v22 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v15, 1, v8);
    uint64_t v47 = a2;
    if (v22 == 1)
    {
      id v23 = v21;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v15, &qword_26B1990B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v15, v8);
    }
    uint64_t v24 = v56;
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v56, v11, v8);
    uint64_t v44 = *(int *)(v18 + 20);
    *(void *)&v24[v44] = v21;
    uint64_t v25 = &v24[*(int *)(v18 + 24)];
    *(void *)uint64_t v25 = "SQLDB: get mostRecentItems";
    *((void *)v25 + 1) = 26;
    uint64_t v45 = v25;
    v25[16] = 2;
    id v26 = v21;
    sub_24DCCA2D8();
    sub_24DCC8F98();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    sub_24D415F74((uint64_t)v17, &qword_26B1990B0);
    uint64_t v27 = v48;
    id v46 = *(id *)(v48 + qword_26B1A2590);
    id v29 = v52;
    uint64_t v28 = v53;
    uint64_t v30 = v55;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v52, v51, v55);
    unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    unint64_t v32 = (v50 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v54;
    uint64_t v51 = v54[91];
    *(void *)(v33 + 16) = v51;
    uint64_t v50 = v34[92];
    *(void *)(v33 + 24) = v50;
    uint64_t v43 = v34[93];
    *(void *)(v33 + 32) = v43;
    *(void *)(v33 + 40) = v34[94];
    *(void *)(v33 + 48) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v33 + v31, v29, v30);
    *(void *)(v33 + v32) = v47;
    uint64_t v35 = (void *)swift_allocObject();
    void v35[2] = sub_24D955E08;
    v35[3] = v33;
    uint64_t v55 = v33;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v35;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_620_0;
    uint64_t v36 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    id v37 = objc_msgSend(v46, sel_fetchSwift_error_, v36, aBlock);
    _Block_release(v36);
    id v38 = aBlock[0];
    LOBYTE(v33) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v33) {
      __break(1u);
    }
    if (v37)
    {
      if (objc_msgSend(v37, sel_next))
      {
        uint64_t v39 = v49;
        while (1)
        {
          uint64_t v40 = (void *)MEMORY[0x253329610]();
          sub_24D945938(v37, v57, v39);
          if (v5) {
            break;
          }
          if ((objc_msgSend(v37, sel_next) & 1) == 0) {
            goto LABEL_16;
          }
        }
      }
LABEL_16:
    }
    else
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    sub_24DCCA2C8();
    uint64_t v41 = (uint64_t)v56;
    sub_24DCC8F98();
    sub_24D3FCA34(v41, type metadata accessor for Signpost);
    return swift_release();
  }
  return result;
}

uint64_t sub_24D945548(void *a1, uint64_t **a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *a2;
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v7 = (void *)sub_24DCC8C38();
  id v8 = objc_msgSend(a1, sel_bindObjectParameter_, v7);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D955438(0x2E70616E73, 0xE500000000000000, v6[91], v6[92], v6[93], v6[94], 502);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v9 = objc_msgSend(a1, sel_bindLongParameter_, a4);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D945938(void *a1, void (*a2)(char *), uint64_t a3)
{
  v11[1] = a3;
  uint64_t v12 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v8 = (char *)v11 - v7;
  uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t result = (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(v9 + 16))(a1, 0, AssociatedTypeWitness, v9);
  if (!v3)
  {
    v12(v8);
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_24D945AB4(uint64_t a1, int a2)
{
  int v38 = a2;
  uint64_t v39 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = *v2;
  uint64_t v5 = sub_24DCC8FC8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  id v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v15);
  uint64_t v40 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((v2[4] & 1) == 0)
  {
    uint64_t v35 = v4;
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    uint64_t v18 = (void *)qword_26B1A23B0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v14, 1, 1, v5);
    sub_24D409D24((uint64_t)v14, (uint64_t)v12);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v12, 1, v5) == 1)
    {
      id v19 = v18;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v12, v5);
    }
    uint64_t v20 = v18;
    id v21 = v40;
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v40, v8, v5);
    uint64_t v36 = *(int *)(v15 + 20);
    *(void *)&v21[v36] = v20;
    int v22 = &v21[*(int *)(v15 + 24)];
    *(void *)int v22 = "SQLDB: list non evictable items with keepDownloaded policy";
    *((void *)v22 + 1) = 58;
    id v37 = v22;
    v22[16] = 2;
    id v23 = v20;
    sub_24DCCA2D8();
    sub_24DCC8F98();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_24D415F74((uint64_t)v14, &qword_26B1990B0);
    if (v38) {
      uint64_t v24 = 0;
    }
    else {
      uint64_t v24 = v39;
    }
    uint64_t v25 = *(void **)((char *)v2 + qword_26B1A2590);
    id v26 = (void *)swift_allocObject();
    void v26[2] = v2;
    v26[3] = v24;
    v26[4] = 100;
    id v17 = (void *)swift_allocObject();
    v17[2] = sub_24D955D14;
    v17[3] = v26;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v17;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_610;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    id v28 = objc_msgSend(v25, sel_fetchSwift_error_, v27, aBlock);
    _Block_release(v27);
    id v29 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (v28)
    {
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      id v17 = (void *)sub_24DCC9C98();
      uint64_t v41 = 0;
      aBlock[0] = v17;
      if (!objc_msgSend(v28, sel_next))
      {
LABEL_17:
        swift_bridgeObjectRetain_n();
        MEMORY[0x253327D80](v17, AssociatedTypeWitness);
        swift_bridgeObjectRelease_n();

        sub_24DCCA2C8();
        uint64_t v32 = (uint64_t)v40;
        sub_24DCC8F98();
        sub_24D3FCA34(v32, type metadata accessor for Signpost);
        swift_release();
        return (uint64_t)v17;
      }
      while (1)
      {
        id v17 = (void *)MEMORY[0x253329610]();
        sub_24D946D48(&v41, v28);
        if (v3) {
          break;
        }
        if ((objc_msgSend(v28, sel_next) & 1) == 0)
        {
          id v17 = aBlock[0];
          goto LABEL_17;
        }
      }

      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    sub_24DCCA2C8();
    uint64_t v33 = (uint64_t)v40;
    sub_24DCC8F98();
    sub_24D3FCA34(v33, type metadata accessor for Signpost);
    swift_release();
    return (uint64_t)v17;
  }
  swift_getAssociatedTypeWitness();
  return sub_24DCC9C98();
}

uint64_t sub_24D94616C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24D9552A4(3043430, 0xE300000000000000);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v5 = objc_msgSend(a1, sel_bindLongParameter_, a3);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D9463C8(uint64_t a1)
{
  uint64_t v36 = a1;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_24DCC8FC8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v32 - v11;
  uint64_t v13 = type metadata accessor for Signpost(0);
  MEMORY[0x270FA5388](v13);
  id v37 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 32) == 1)
  {
    if (qword_26B1990F8 != -1) {
      swift_once();
    }
    id v35 = (id)qword_26B1A23B0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v12, 1, 1, v3);
    sub_24D409D24((uint64_t)v12, (uint64_t)v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
    {
      id v15 = v35;
      sub_24DCC8FA8();
      sub_24D415F74((uint64_t)v10, &qword_26B1990B0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v6, v10, v3);
    }
    id v17 = v37;
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v37, v6, v3);
    uint64_t v33 = *(int *)(v13 + 20);
    id v18 = v35;
    *(void *)&v17[v33] = v35;
    id v19 = &v17[*(int *)(v13 + 24)];
    *(void *)id v19 = "SQLDB: list folders with non-propagated content policy";
    *((void *)v19 + 1) = 54;
    uint64_t v34 = v19;
    v19[16] = 2;
    id v20 = v18;
    sub_24DCCA2D8();
    sub_24DCC8F98();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    sub_24D415F74((uint64_t)v12, &qword_26B1990B0);
    id v21 = *(void **)(v1 + qword_26B1A2590);
    int v22 = (void *)swift_allocObject();
    uint64_t v23 = v36;
    v22[2] = v1;
    v22[3] = v23;
    v22[4] = 100;
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = sub_24D955CF8;
    v16[3] = v22;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v16;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_600;
    uint64_t v24 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    id v25 = objc_msgSend(v21, sel_fetchSwift_error_, v24, aBlock);
    _Block_release(v24);
    id v26 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v25)
    {
      sub_24DCC8828();

      swift_willThrow();
LABEL_17:
      sub_24DCCA2C8();
      uint64_t v30 = (uint64_t)v37;
      sub_24DCC8F98();
      sub_24D3FCA34(v30, type metadata accessor for Signpost);
      swift_release();
      return (uint64_t)v16;
    }
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v16 = (void *)sub_24DCC9C98();
    uint64_t v38 = 0;
    aBlock[0] = v16;
    if (objc_msgSend(v25, sel_next))
    {
      while (1)
      {
        uint64_t v16 = (void *)MEMORY[0x253329610]();
        sub_24D946D48(&v38, v25);
        if (v2) {
          break;
        }
        if ((objc_msgSend(v25, sel_next) & 1) == 0)
        {
          uint64_t v16 = aBlock[0];
          goto LABEL_14;
        }
      }

      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
LABEL_14:
    swift_bridgeObjectRetain_n();
    MEMORY[0x253327D80](v16, AssociatedTypeWitness);
    swift_bridgeObjectRelease_n();

    sub_24DCCA2C8();
    uint64_t v29 = (uint64_t)v37;
    sub_24DCC8F98();
    sub_24D3FCA34(v29, type metadata accessor for Signpost);
    swift_release();
  }
  else
  {
    swift_getAssociatedTypeWitness();
    return sub_24DCC9C98();
  }
  return (uint64_t)v16;
}

uint64_t sub_24D946A74(void *a1, uint64_t a2, uint64_t a3)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v5 = objc_msgSend(a1, sel_bindLongParameter_, a3);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D946D48(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  *a1 = objc_msgSend(a2, sel_longAtIndex_, 0);
  uint64_t v6 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t result = (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(v6 + 16))(a2, 1, AssociatedTypeWitness, v6);
  if (!v2)
  {
    sub_24DCC9D48();
    return sub_24DCC9D08();
  }
  return result;
}

void sub_24D946E90()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void **)(v0 + qword_26B1992E8);
}

uint64_t sub_24D946F1C()
{
  uint64_t v0 = sub_24DBB3D08();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t sub_24D946FB0()
{
  sub_24D946F1C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SQLSnapshot()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D94701C()
{
  uint64_t v1 = v0;
  uint64_t v54 = *MEMORY[0x263EF8340];
  type metadata accessor for VFSItem(0);
  uint64_t v47 = swift_dynamicCastMetatype();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (swift_dynamicCastMetatype())
  {
    unint64_t v3 = 0xD000000000000037;
    unint64_t v4 = 0x800000024DD0E240;
  }
  else
  {
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    id aBlock = (id)0xD000000000000010;
    unint64_t v49 = 0x800000024DD0E200;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t))(*(void *)(AssociatedConformanceWitness + 32) + 8))(AssociatedTypeWitness);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    unint64_t v3 = 0xD000000000000010;
    unint64_t v4 = 0x800000024DD0E200;
  }
  uint64_t v6 = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemStateVersion();
  unint64_t v7 = 0xE000000000000000;
  if (swift_dynamicCastMetatype())
  {
    unint64_t v8 = 0;
  }
  else
  {
    sub_24DCCA728();
    swift_bridgeObjectRelease();
    id aBlock = (id)0xD000000000000013;
    unint64_t v49 = 0x800000024DD0E220;
    uint64_t v9 = swift_getAssociatedConformanceWitness();
    (*(void (**)(uint64_t))(*(void *)(v9 + 32) + 8))(v6);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    unint64_t v8 = 0xD000000000000013;
    unint64_t v7 = 0x800000024DD0E220;
  }
  uint64_t v10 = *(void **)(v1 + qword_26B1A2590);
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v1;
  v11[3] = v3;
  void v11[4] = v4;
  v11[5] = v8;
  v11[6] = v7;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D95466C;
  *(void *)(v12 + 24) = v11;
  uint64_t v52 = sub_24D3E3980;
  uint64_t v53 = v12;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v49 = 1107296256;
  uint64_t v50 = sub_24D3E38DC;
  uint64_t v51 = &block_descriptor_508;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  uint64_t v14 = &selRef_createIndexerWithExtension_enabled_error_;
  unsigned int v15 = objc_msgSend(v10, sel_executeSwift_error_, v13, &aBlock);
  _Block_release(v13);
  id v16 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (!v15)
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
  if (!v47)
  {
    id v46 = 0;
    id v26 = 0;
    goto LABEL_17;
  }
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D954730;
  *(void *)(v18 + 24) = v1;
  uint64_t v52 = sub_24D3E3980;
  uint64_t v53 = v18;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v49 = 1107296256;
  uint64_t v50 = sub_24D3E38DC;
  uint64_t v51 = &block_descriptor_539_0;
  id v19 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v20 = objc_msgSend(v10, sel_executeSwift_error_, v19, &aBlock);
  _Block_release(v19);
  id v21 = aBlock;
  LOBYTE(v19) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v19)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (!v20)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    return swift_release();
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_24D954748;
  *(void *)(v22 + 24) = v1;
  uint64_t v52 = sub_24D3E3980;
  uint64_t v53 = v22;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v49 = 1107296256;
  uint64_t v50 = sub_24D3E38DC;
  uint64_t v51 = &block_descriptor_546;
  uint64_t v23 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v24 = objc_msgSend(v10, sel_executeSwift_error_, v23, &aBlock);
  _Block_release(v23);
  id v25 = aBlock;
  LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v23)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  if (!v24)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release_n();
    return swift_release();
  }
  id v46 = sub_24D954730;
  uint64_t v14 = &selRef_createIndexerWithExtension_enabled_error_;
  id v26 = sub_24D954748;
LABEL_17:
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_24D9546AC;
  *(void *)(v27 + 24) = v1;
  uint64_t v52 = sub_24D3E3980;
  uint64_t v53 = v27;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v49 = 1107296256;
  uint64_t v50 = sub_24D3E38DC;
  uint64_t v51 = &block_descriptor_515;
  id v28 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v29 = objc_msgSend(v10, v14[184], v28, &aBlock);
  _Block_release(v28);
  id v30 = aBlock;
  LOBYTE(v28) = swift_isEscapingClosureAtFileLocation();
  uint64_t v31 = swift_release();
  if (v28)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (!v29)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    sub_24D43DD74((uint64_t)v46);
    sub_24D43DD74((uint64_t)v26);
    return swift_release();
  }
  uint64_t v45 = (uint64_t)v26;
  char v32 = (*(uint64_t (**)(uint64_t))(**(void **)(v1 + 16) + 112))(v31) & 1;
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = v1;
  *(unsigned char *)(v33 + 24) = v32;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_24D9546FC;
  *(void *)(v34 + 24) = v33;
  uint64_t v52 = sub_24D3E3980;
  uint64_t v53 = v34;
  id aBlock = (id)MEMORY[0x263EF8330];
  unint64_t v49 = 1107296256;
  uint64_t v50 = sub_24D3E38DC;
  uint64_t v51 = &block_descriptor_525;
  id v35 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v36 = objc_msgSend(v10, sel_executeSwift_error_, v35, &aBlock);
  _Block_release(v35);
  id v37 = aBlock;
  LOBYTE(v35) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v35)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if (!v36)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    sub_24D43DD74((uint64_t)v46);
    sub_24D43DD74(v45);
LABEL_27:
    swift_release();
    return swift_release();
  }
  if ((*(unsigned char *)(v1 + 32) & 1) == 0)
  {
    uint64_t v41 = swift_allocObject();
    *(void *)(v41 + 16) = sub_24D954718;
    *(void *)(v41 + 24) = v1;
    uint64_t v52 = sub_24D3E3980;
    uint64_t v53 = v41;
    id aBlock = (id)MEMORY[0x263EF8330];
    unint64_t v49 = 1107296256;
    uint64_t v50 = sub_24D3E38DC;
    uint64_t v51 = &block_descriptor_532;
    uint64_t v42 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned __int8 v44 = objc_msgSend(v10, sel_executeSwift_error_, v42, &aBlock);
    _Block_release(v42);
    id v43 = aBlock;
    LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v42 & 1) == 0)
    {
      uint64_t v39 = v45;
      if (v44)
      {
        uint64_t v38 = sub_24D954718;
        goto LABEL_32;
      }
      sub_24DCC8828();

      swift_willThrow();
      swift_release();
      sub_24D43DD74((uint64_t)v46);
      sub_24D43DD74(v45);
      swift_release();
      goto LABEL_27;
    }
LABEL_39:
    __break(1u);
  }
  uint64_t v38 = 0;
  uint64_t v39 = v45;
LABEL_32:
  swift_release();
  sub_24D43DD74((uint64_t)v46);
  sub_24D43DD74(v39);
  swift_release();
  swift_release();
  return sub_24D43DD74((uint64_t)v38);
}

uint64_t sub_24D947C0C()
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v2(AssociatedTypeWitness, v1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v2(AssociatedTypeWitness, v1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D947EBC()
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "CREATE INDEX ");
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v1[0];
}

uint64_t sub_24D947FC4()
{
  return 0;
}

uint64_t sub_24D9480D4()
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "CREATE INDEX ");
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v1[0];
}

uint64_t sub_24D9481DC()
{
  return 0;
}

uint64_t sub_24D948344()
{
  return 0;
}

uint64_t sub_24D948450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v59 = *MEMORY[0x263EF8340];
  uint64_t v11 = *(void **)(v6 + qword_26B1A2590);
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v51 = a1;
  void v12[2] = a1;
  v12[3] = a2;
  void v12[4] = v6;
  v12[5] = a4;
  uint64_t v49 = a5;
  v12[6] = a5;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D9541FC;
  *(void *)(v13 + 24) = v12;
  uint64_t v57 = sub_24D3E3980;
  uint64_t v58 = v13;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v54 = 1107296256;
  uint64_t v55 = sub_24D3E38DC;
  uint64_t v56 = &block_descriptor_294_0;
  uint64_t v14 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  id v52 = v11;
  id aBlock = 0;
  unsigned int v15 = objc_msgSend(v11, sel_executeSwift_error_, v14, &aBlock);
  _Block_release(v14);
  id v16 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v15)
  {
    uint64_t v18 = (void *)swift_allocObject();
    v18[2] = a1;
    v18[3] = a2;
    v18[4] = v6;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = sub_24D95422C;
    *(void *)(v19 + 24) = v18;
    uint64_t v57 = sub_24D3E3980;
    uint64_t v58 = v19;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v54 = 1107296256;
    uint64_t v55 = sub_24D3E38DC;
    uint64_t v56 = &block_descriptor_304_1;
    unsigned int v20 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v21 = objc_msgSend(v52, sel_executeSwift_error_, v20, &aBlock);
    _Block_release(v20);
    id v22 = aBlock;
    char v23 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v23 & 1) == 0)
    {
      if (!v21)
      {
        sub_24DCC8828();

        swift_willThrow();
LABEL_23:
        swift_release();
        return swift_release();
      }
      unsigned int v24 = (void *)swift_allocObject();
      v24[2] = a1;
      v24[3] = a2;
      v24[4] = v6;
      uint64_t v25 = swift_allocObject();
      *(void *)(v25 + 16) = sub_24D954250;
      *(void *)(v25 + 24) = v24;
      uint64_t v57 = sub_24D3E3980;
      uint64_t v58 = v25;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v54 = 1107296256;
      uint64_t v55 = sub_24D3E38DC;
      uint64_t v56 = &block_descriptor_314_1;
      id v26 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v27 = objc_msgSend(v52, sel_executeSwift_error_, v26, &aBlock);
      _Block_release(v26);
      id v28 = aBlock;
      char v29 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v29 & 1) == 0)
      {
        if (!v27)
        {
          sub_24DCC8828();

          swift_willThrow();
LABEL_22:
          swift_release();
          goto LABEL_23;
        }
        id v30 = (void *)swift_allocObject();
        v30[2] = v51;
        v30[3] = a2;
        v30[4] = v6;
        v30[5] = a3;
        v30[6] = a4;
        v30[7] = v49;
        uint64_t v31 = swift_allocObject();
        *(void *)(v31 + 16) = sub_24D9542B4;
        *(void *)(v31 + 24) = v30;
        uint64_t v57 = sub_24D3E3980;
        uint64_t v58 = v31;
        id aBlock = (id)MEMORY[0x263EF8330];
        uint64_t v54 = 1107296256;
        uint64_t v55 = sub_24D3E38DC;
        uint64_t v56 = &block_descriptor_324_0;
        char v32 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_release();
        id aBlock = 0;
        unsigned int v33 = objc_msgSend(v52, sel_executeSwift_error_, v32, &aBlock);
        _Block_release(v32);
        id v34 = aBlock;
        char v35 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v35 & 1) == 0)
        {
          if (!v33)
          {
            sub_24DCC8828();

            swift_willThrow();
LABEL_21:
            swift_release();
            goto LABEL_22;
          }
          unsigned int v36 = (void *)swift_allocObject();
          v36[2] = v51;
          v36[3] = a2;
          v36[4] = v6;
          uint64_t v37 = swift_allocObject();
          *(void *)(v37 + 16) = sub_24D9542DC;
          *(void *)(v37 + 24) = v36;
          uint64_t v57 = sub_24D3E3980;
          uint64_t v58 = v37;
          id aBlock = (id)MEMORY[0x263EF8330];
          uint64_t v54 = 1107296256;
          uint64_t v55 = sub_24D3E38DC;
          uint64_t v56 = &block_descriptor_334_0;
          uint64_t v38 = _Block_copy(&aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_release();
          id aBlock = 0;
          unsigned int v39 = objc_msgSend(v52, sel_executeSwift_error_, v38, &aBlock);
          _Block_release(v38);
          id v40 = aBlock;
          char v41 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v41 & 1) == 0)
          {
            if (!v39)
            {
              sub_24DCC8828();

              swift_willThrow();
LABEL_20:
              swift_release();
              goto LABEL_21;
            }
            uint64_t v42 = (void *)swift_allocObject();
            void v42[2] = v51;
            uint64_t v42[3] = a2;
            v42[4] = v6;
            uint64_t v43 = swift_allocObject();
            *(void *)(v43 + 16) = sub_24D954300;
            *(void *)(v43 + 24) = v42;
            uint64_t v57 = sub_24D3E3980;
            uint64_t v58 = v43;
            id aBlock = (id)MEMORY[0x263EF8330];
            uint64_t v54 = 1107296256;
            uint64_t v55 = sub_24D3E38DC;
            uint64_t v56 = &block_descriptor_344_0;
            unsigned __int8 v44 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_release();
            id aBlock = 0;
            unsigned __int8 v45 = objc_msgSend(v52, sel_executeSwift_error_, v44, &aBlock);
            _Block_release(v44);
            id v46 = aBlock;
            char v47 = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v47 & 1) == 0)
            {
              if (v45)
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                return swift_release();
              }
              sub_24DCC8828();

              swift_willThrow();
              swift_release();
              goto LABEL_20;
            }
LABEL_30:
            __break(1u);
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_24DCC8828();

  swift_willThrow();
  return swift_release();
}

uint64_t sub_24D948D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, unint64_t))
{
  return 0;
}

uint64_t sub_24D948FB4()
{
  return 0;
}

uint64_t sub_24D949238()
{
  return 0;
}

uint64_t sub_24D949428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, unint64_t))
{
  return 0;
}

uint64_t sub_24D949818()
{
  return 0;
}

uint64_t sub_24D949B20()
{
  return 0;
}

uint64_t sub_24D949DD4(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D949E58()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t result = sub_24D948450(0xD00000000000001DLL, 0x800000024DD0D280, (uint64_t)&unk_26FFA35F8, (uint64_t)sub_24D949EFC, 0);
    if (!v1) {
      return sub_24D948450(0xD000000000000019, 0x800000024DD0D2A0, (uint64_t)&unk_26FFA3638, (uint64_t)sub_24D949F1C, 0);
    }
  }
  return result;
}

uint64_t sub_24D949EFC()
{
  return sub_24D949F3C();
}

uint64_t sub_24D949F1C()
{
  return sub_24D949F3C();
}

uint64_t sub_24D949F3C()
{
  return 0;
}

uint64_t sub_24D94A058()
{
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t result = sub_24D948450(0xD000000000000021, 0x800000024DD0DB30, (uint64_t)&unk_26FFA3678, (uint64_t)sub_24D94A100, 0);
    if (!v1) {
      return sub_24D948450(0xD000000000000022, 0x800000024DD0DB60, (uint64_t)&unk_26FFA36A8, (uint64_t)sub_24D94A108, 0);
    }
  }
  return result;
}

uint64_t sub_24D94A100()
{
  return sub_24D94A110();
}

uint64_t sub_24D94A108()
{
  return sub_24D94A110();
}

uint64_t sub_24D94A110()
{
  return 40;
}

uint64_t sub_24D94A1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v50 = *MEMORY[0x263EF8340];
  uint64_t v6 = *(void **)(v2 + qword_26B1A2590);
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = a1;
  v7[3] = a2;
  v7[4] = v2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_24D954354;
  *(void *)(v8 + 24) = v7;
  uint64_t v48 = sub_24D3E3980;
  uint64_t v49 = v8;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v45 = 1107296256;
  id v46 = sub_24D3E38DC;
  char v47 = &block_descriptor_368;
  uint64_t v9 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_release();
  id v43 = v6;
  id aBlock = 0;
  unsigned int v10 = objc_msgSend(v6, sel_executeSwift_error_, v9, &aBlock);
  _Block_release(v9);
  id v11 = aBlock;
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v10)
  {
    uint64_t v12 = (void *)swift_allocObject();
    void v12[2] = a1;
    v12[3] = a2;
    void v12[4] = v3;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_24D9543A4;
    *(void *)(v13 + 24) = v12;
    uint64_t v48 = sub_24D3E3980;
    uint64_t v49 = v13;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v45 = 1107296256;
    id v46 = sub_24D3E38DC;
    char v47 = &block_descriptor_378;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v15 = objc_msgSend(v43, sel_executeSwift_error_, v14, &aBlock);
    _Block_release(v14);
    id v16 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      if (!v15)
      {
        sub_24DCC8828();

        swift_willThrow();
LABEL_23:
        swift_release();
        return swift_release();
      }
      uint64_t v18 = (void *)swift_allocObject();
      v18[2] = a1;
      v18[3] = a2;
      v18[4] = v3;
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = sub_24D954400;
      *(void *)(v19 + 24) = v18;
      uint64_t v48 = sub_24D3E3980;
      uint64_t v49 = v19;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v45 = 1107296256;
      id v46 = sub_24D3E38DC;
      char v47 = &block_descriptor_388;
      unsigned int v20 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v21 = objc_msgSend(v43, sel_executeSwift_error_, v20, &aBlock);
      _Block_release(v20);
      id v22 = aBlock;
      char v23 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v23 & 1) == 0)
      {
        if (!v21)
        {
          sub_24DCC8828();

          swift_willThrow();
LABEL_22:
          swift_release();
          goto LABEL_23;
        }
        unsigned int v24 = (void *)swift_allocObject();
        v24[2] = a1;
        v24[3] = a2;
        v24[4] = v3;
        uint64_t v25 = swift_allocObject();
        *(void *)(v25 + 16) = sub_24D954450;
        *(void *)(v25 + 24) = v24;
        uint64_t v48 = sub_24D3E3980;
        uint64_t v49 = v25;
        id aBlock = (id)MEMORY[0x263EF8330];
        uint64_t v45 = 1107296256;
        id v46 = sub_24D3E38DC;
        char v47 = &block_descriptor_398;
        id v26 = _Block_copy(&aBlock);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        swift_release();
        id aBlock = 0;
        unsigned int v27 = objc_msgSend(v43, sel_executeSwift_error_, v26, &aBlock);
        _Block_release(v26);
        id v28 = aBlock;
        char v29 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v29 & 1) == 0)
        {
          if (!v27)
          {
            sub_24DCC8828();

            swift_willThrow();
LABEL_21:
            swift_release();
            goto LABEL_22;
          }
          id v30 = (void *)swift_allocObject();
          v30[2] = a1;
          v30[3] = a2;
          v30[4] = v3;
          uint64_t v31 = swift_allocObject();
          *(void *)(v31 + 16) = sub_24D9544AC;
          *(void *)(v31 + 24) = v30;
          uint64_t v48 = sub_24D3E3980;
          uint64_t v49 = v31;
          id aBlock = (id)MEMORY[0x263EF8330];
          uint64_t v45 = 1107296256;
          id v46 = sub_24D3E38DC;
          char v47 = &block_descriptor_408_0;
          char v32 = _Block_copy(&aBlock);
          swift_bridgeObjectRetain();
          swift_retain();
          swift_retain();
          swift_release();
          id aBlock = 0;
          unsigned int v33 = objc_msgSend(v43, sel_executeSwift_error_, v32, &aBlock);
          _Block_release(v32);
          id v34 = aBlock;
          char v35 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v35 & 1) == 0)
          {
            if (!v33)
            {
              sub_24DCC8828();

              swift_willThrow();
LABEL_20:
              swift_release();
              goto LABEL_21;
            }
            unsigned int v36 = (void *)swift_allocObject();
            v36[2] = a1;
            v36[3] = a2;
            v36[4] = v3;
            uint64_t v37 = swift_allocObject();
            *(void *)(v37 + 16) = sub_24D954500;
            *(void *)(v37 + 24) = v36;
            uint64_t v48 = sub_24D3E3980;
            uint64_t v49 = v37;
            id aBlock = (id)MEMORY[0x263EF8330];
            uint64_t v45 = 1107296256;
            id v46 = sub_24D3E38DC;
            char v47 = &block_descriptor_418;
            uint64_t v38 = _Block_copy(&aBlock);
            swift_bridgeObjectRetain();
            swift_retain();
            swift_retain();
            swift_release();
            id aBlock = 0;
            unsigned __int8 v39 = objc_msgSend(v43, sel_executeSwift_error_, v38, &aBlock);
            _Block_release(v38);
            id v40 = aBlock;
            char v41 = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v41 & 1) == 0)
            {
              if (v39)
              {
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                swift_release();
                return swift_release();
              }
              sub_24DCC8828();

              swift_willThrow();
              swift_release();
              goto LABEL_20;
            }
LABEL_30:
            __break(1u);
          }
LABEL_29:
          __break(1u);
          goto LABEL_30;
        }
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  sub_24DCC8828();

  swift_willThrow();
  return swift_release();
}

unint64_t sub_24D94AAF8()
{
  return 0xD000000000000018;
}

uint64_t sub_24D94ABDC()
{
  return 0;
}

uint64_t sub_24D94ACD0()
{
  uint64_t v20 = *MEMORY[0x263EF8340];
  uint64_t result = sub_24D94A1EC(0xD00000000000001DLL, 0x800000024DD0D280);
  if (!v1)
  {
    sub_24D94A1EC(0xD000000000000019, 0x800000024DD0D2A0);
    sub_24D94A1EC(0xD000000000000016, 0x800000024DD0D940);
    uint64_t v3 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_24D95431C;
    *(void *)(v4 + 24) = v0;
    uint64_t v18 = sub_24D3E3980;
    uint64_t v19 = v4;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v15 = 1107296256;
    id v16 = sub_24D3E38DC;
    id v17 = &block_descriptor_351;
    uint64_t v5 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v6 = objc_msgSend(v3, sel_executeSwift_error_, v5, &aBlock);
    _Block_release(v5);
    id v7 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      if (!v6)
      {
        sub_24DCC8828();

        swift_willThrow();
        return swift_release();
      }
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_24D954334;
      *(void *)(v9 + 24) = v0;
      uint64_t v18 = sub_24D3E3980;
      uint64_t v19 = v9;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v15 = 1107296256;
      id v16 = sub_24D3E38DC;
      id v17 = &block_descriptor_358;
      unsigned int v10 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned __int8 v11 = objc_msgSend(v3, sel_executeSwift_error_, v10, &aBlock);
      _Block_release(v10);
      id v12 = aBlock;
      char v13 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v13 & 1) == 0)
      {
        if (v11) {
          return swift_release_n();
        }
        sub_24DCC8828();

        swift_willThrow();
        swift_release();
        return swift_release();
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_24D94B03C()
{
  return 0;
}

uint64_t sub_24D94B100()
{
  return 0;
}

uint64_t sub_24D94B1C4()
{
  uint64_t result = sub_24D94A1EC(0xD000000000000012, 0x800000024DD0DA50);
  if (!v0) {
    return sub_24D94A1EC(0xD000000000000018, 0x800000024DD0DA10);
  }
  return result;
}

uint64_t sub_24D94B220()
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24D953DB8;
  *(void *)(v2 + 24) = v0;
  char v35 = sub_24D3E3980;
  uint64_t v36 = v2;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v32 = 1107296256;
  unsigned int v33 = sub_24D3E38DC;
  id v34 = &block_descriptor_10_0;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D953DD0;
  *(void *)(v7 + 24) = v0;
  char v35 = sub_24D3E3980;
  uint64_t v36 = v7;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v32 = 1107296256;
  unsigned int v33 = sub_24D3E38DC;
  id v34 = &block_descriptor_17_1;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v9)
  {
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = sub_24D953DE8;
    *(void *)(v12 + 24) = v0;
    char v35 = sub_24D3E3980;
    uint64_t v36 = v12;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v32 = 1107296256;
    unsigned int v33 = sub_24D3E38DC;
    id v34 = &block_descriptor_24_0;
    char v13 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v14 = objc_msgSend(v1, sel_executeSwift_error_, v13, &aBlock);
    _Block_release(v13);
    id v15 = aBlock;
    char v16 = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v16 & 1) == 0)
    {
      if (!v14) {
        goto LABEL_16;
      }
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = sub_24D953E2C;
      *(void *)(v17 + 24) = v0;
      char v35 = sub_24D3E3980;
      uint64_t v36 = v17;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v32 = 1107296256;
      unsigned int v33 = sub_24D3E38DC;
      id v34 = &block_descriptor_31_1;
      uint64_t v18 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v19 = objc_msgSend(v1, sel_executeSwift_error_, v18, &aBlock);
      _Block_release(v18);
      id v15 = aBlock;
      char v20 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v20 & 1) == 0)
      {
        if (!v19) {
          goto LABEL_16;
        }
        uint64_t v21 = swift_allocObject();
        *(void *)(v21 + 16) = sub_24D953E44;
        *(void *)(v21 + 24) = v0;
        char v35 = sub_24D3E3980;
        uint64_t v36 = v21;
        id aBlock = (id)MEMORY[0x263EF8330];
        uint64_t v32 = 1107296256;
        unsigned int v33 = sub_24D3E38DC;
        id v34 = &block_descriptor_38_0;
        id v22 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        id aBlock = 0;
        unsigned int v23 = objc_msgSend(v1, sel_executeSwift_error_, v22, &aBlock);
        _Block_release(v22);
        id v15 = aBlock;
        char v24 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v24 & 1) == 0)
        {
          if (v23)
          {
            uint64_t v25 = swift_allocObject();
            *(void *)(v25 + 16) = sub_24D953E5C;
            *(void *)(v25 + 24) = v0;
            char v35 = sub_24D3E3980;
            uint64_t v36 = v25;
            id aBlock = (id)MEMORY[0x263EF8330];
            uint64_t v32 = 1107296256;
            unsigned int v33 = sub_24D3E38DC;
            id v34 = &block_descriptor_45_0;
            id v26 = _Block_copy(&aBlock);
            swift_retain();
            swift_retain();
            swift_release();
            id aBlock = 0;
            unsigned __int8 v27 = objc_msgSend(v1, sel_executeSwift_error_, v26, &aBlock);
            _Block_release(v26);
            id v28 = aBlock;
            char v29 = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v29 & 1) == 0)
            {
              if (v27) {
                return swift_release_n();
              }
              sub_24DCC8828();

              swift_willThrow();
              goto LABEL_18;
            }
LABEL_25:
            __break(1u);
          }
LABEL_16:
          sub_24DCC8828();

          swift_willThrow();
LABEL_18:
          swift_release_n();
          return swift_release();
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_24DCC8828();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_24D94B9E0()
{
  return 0;
}

uint64_t sub_24D94BAE0()
{
  return 0;
}

uint64_t sub_24D94BBE0()
{
  return 0;
}

uint64_t sub_24D94BCA4()
{
  return 0;
}

unint64_t sub_24D94BD68()
{
  return 0xD000000000000020;
}

uint64_t sub_24D94BE24()
{
  if ((*(unsigned char *)(v0 + 32) & 1) == 0) {
    return sub_24D948450(0xD000000000000018, 0x800000024DD0DA10, (uint64_t)&unk_26FFA35C8, (uint64_t)sub_24D949DD4, 0);
  }
  return result;
}

uint64_t sub_24D94BE7C()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  swift_getAssociatedTypeWitness();
  uint64_t result = swift_dynamicCastMetatype();
  if (result)
  {
    uint64_t v2 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = sub_24D95460C;
    v3[3] = v0;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v3;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_498;
    unsigned int v4 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v5 = objc_msgSend(v2, sel_executeSwift_error_, v4, aBlock);
    _Block_release(v4);
    id v6 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v5)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24D94C07C()
{
  return 0;
}

uint64_t sub_24D94C188()
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24D9545DC;
  *(void *)(v2 + 24) = v0;
  uint64_t v17 = sub_24D3E3980;
  uint64_t v18 = v2;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  id v15 = sub_24D3E38DC;
  char v16 = &block_descriptor_484_0;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D9545F4;
  *(void *)(v7 + 24) = v0;
  uint64_t v17 = sub_24D3E3980;
  uint64_t v18 = v7;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  id v15 = sub_24D3E38DC;
  char v16 = &block_descriptor_491;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned __int8 v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
LABEL_10:
  }
    __break(1u);
  if (v9) {
    return swift_release_n();
  }
  sub_24DCC8828();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_24D94C484()
{
  return 0;
}

uint64_t sub_24D94C548()
{
  return 0;
}

uint64_t sub_24D94C654()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_24D9545C4;
  v2[3] = v0;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_477;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_24D94C800()
{
  return 0;
}

uint64_t sub_24D94C910()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_24D9545AC;
  v2[3] = v0;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_470_0;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_24D94CABC()
{
  return 0;
}

void sub_24D94CB80()
{
  uint64_t v23 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = sub_24D954564;
    *(void *)(v2 + 24) = v0;
    uint64_t v21 = sub_24D3E3980;
    uint64_t v22 = v2;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v18 = 1107296256;
    uint64_t v19 = sub_24D3E38DC;
    char v20 = &block_descriptor_449;
    uint64_t v3 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
    _Block_release(v3);
    id v5 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      if (!v4)
      {
        sub_24DCC8828();

        swift_willThrow();
        goto LABEL_12;
      }
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = sub_24D95457C;
      *(void *)(v7 + 24) = v0;
      uint64_t v21 = sub_24D3E3980;
      uint64_t v22 = v7;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v18 = 1107296256;
      uint64_t v19 = sub_24D3E38DC;
      char v20 = &block_descriptor_456;
      uint64_t v8 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
      _Block_release(v8);
      id v10 = aBlock;
      char v11 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v11 & 1) == 0)
      {
        if (v9)
        {
          uint64_t v12 = swift_allocObject();
          *(void *)(v12 + 16) = sub_24D954594;
          *(void *)(v12 + 24) = v0;
          uint64_t v21 = sub_24D3E3980;
          uint64_t v22 = v12;
          id aBlock = (id)MEMORY[0x263EF8330];
          uint64_t v18 = 1107296256;
          uint64_t v19 = sub_24D3E38DC;
          char v20 = &block_descriptor_463;
          char v13 = _Block_copy(&aBlock);
          swift_retain();
          swift_retain();
          swift_release();
          id aBlock = 0;
          unsigned int v14 = objc_msgSend(v1, sel_executeSwift_error_, v13, &aBlock);
          _Block_release(v13);
          id v15 = aBlock;
          char v16 = swift_isEscapingClosureAtFileLocation();
          swift_release();
          if ((v16 & 1) == 0)
          {
            if (v14)
            {
              swift_release_n();
              return;
            }
            sub_24DCC8828();

            swift_willThrow();
            swift_release_n();
            goto LABEL_12;
          }
LABEL_16:
          __break(1u);
        }
        sub_24DCC8828();

        swift_willThrow();
        swift_release();
LABEL_12:
        swift_release();
        return;
      }
    }
    __break(1u);
    goto LABEL_16;
  }
}

uint64_t sub_24D94CFBC()
{
  return 0;
}

uint64_t sub_24D94D080()
{
  return 0;
}

uint64_t sub_24D94D218()
{
  return 0;
}

uint64_t sub_24D94D404()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_24D95454C;
  v2[3] = v0;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_442;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_24D94D5B0()
{
  return 0;
}

void sub_24D94D674()
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    sub_24D94ACD0();
    if (!v1)
    {
      uint64_t v2 = *(void **)(v0 + qword_26B1A2590);
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = sub_24D95451C;
      *(void *)(v3 + 24) = v0;
      uint64_t v17 = sub_24D3E3980;
      uint64_t v18 = v3;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v14 = 1107296256;
      id v15 = sub_24D3E38DC;
      char v16 = &block_descriptor_428;
      unsigned __int8 v4 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v5 = objc_msgSend(v2, sel_executeSwift_error_, v4, &aBlock);
      _Block_release(v4);
      id v6 = aBlock;
      char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if (isEscapingClosureAtFileLocation)
      {
        __break(1u);
      }
      else
      {
        if (!v5)
        {
          sub_24DCC8828();

          swift_willThrow();
LABEL_9:
          swift_release();
          return;
        }
        sub_24D949E58();
        uint64_t v8 = swift_allocObject();
        *(void *)(v8 + 16) = sub_24D954534;
        *(void *)(v8 + 24) = v0;
        uint64_t v17 = sub_24D3E3980;
        uint64_t v18 = v8;
        id aBlock = (id)MEMORY[0x263EF8330];
        uint64_t v14 = 1107296256;
        id v15 = sub_24D3E38DC;
        char v16 = &block_descriptor_435_0;
        unsigned int v9 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        id aBlock = 0;
        unsigned int v10 = objc_msgSend(v2, sel_executeSwift_error_, v9, &aBlock);
        _Block_release(v9);
        id v11 = aBlock;
        char v12 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v12 & 1) == 0)
        {
          if (v10)
          {
            swift_release_n();
            return;
          }
          sub_24DCC8828();

          swift_willThrow();
          swift_release();
          goto LABEL_9;
        }
      }
      __break(1u);
    }
  }
}

uint64_t sub_24D94D998()
{
  return 0;
}

uint64_t sub_24D94DA5C()
{
  return 0;
}

uint64_t sub_24D94DB70()
{
  uint64_t v29 = *MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32))
  {
    uint64_t v2 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = sub_24D95412C;
    *(void *)(v3 + 24) = v0;
    unsigned __int8 v27 = sub_24D3E3980;
    uint64_t v28 = v3;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v24 = 1107296256;
    uint64_t v25 = sub_24D3E38DC;
    id v26 = &block_descriptor_262_0;
    unsigned __int8 v4 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v5 = objc_msgSend(v2, sel_executeSwift_error_, v4, &aBlock);
    _Block_release(v4);
    id v6 = aBlock;
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation)
    {
      __break(1u);
    }
    else
    {
      if (!v5)
      {
        sub_24DCC8828();

        swift_willThrow();
        return swift_release();
      }
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = sub_24D954144;
      *(void *)(v8 + 24) = v0;
      unsigned __int8 v27 = sub_24D3E3980;
      uint64_t v28 = v8;
      id aBlock = (id)MEMORY[0x263EF8330];
      uint64_t v24 = 1107296256;
      uint64_t v25 = sub_24D3E38DC;
      id v26 = &block_descriptor_269;
      unsigned int v9 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      id aBlock = 0;
      unsigned int v10 = objc_msgSend(v2, sel_executeSwift_error_, v9, &aBlock);
      _Block_release(v9);
      id v11 = aBlock;
      char v12 = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v12 & 1) == 0)
      {
        if (!v10)
        {
LABEL_18:
          sub_24DCC8828();

          swift_willThrow();
          return swift_release_n();
        }
        sub_24D94A058();
        if (v1) {
          return swift_release_n();
        }
        uint64_t v13 = swift_allocObject();
        *(void *)(v13 + 16) = sub_24D95415C;
        *(void *)(v13 + 24) = v0;
        unsigned __int8 v27 = sub_24D3E3980;
        uint64_t v28 = v13;
        id aBlock = (id)MEMORY[0x263EF8330];
        uint64_t v24 = 1107296256;
        uint64_t v25 = sub_24D3E38DC;
        id v26 = &block_descriptor_276;
        uint64_t v14 = _Block_copy(&aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        id aBlock = 0;
        unsigned int v15 = objc_msgSend(v2, sel_executeSwift_error_, v14, &aBlock);
        _Block_release(v14);
        id v11 = aBlock;
        char v16 = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if ((v16 & 1) == 0)
        {
          if (v15)
          {
            uint64_t v17 = swift_allocObject();
            *(void *)(v17 + 16) = sub_24D9541A8;
            *(void *)(v17 + 24) = v0;
            unsigned __int8 v27 = sub_24D3E3980;
            uint64_t v28 = v17;
            id aBlock = (id)MEMORY[0x263EF8330];
            uint64_t v24 = 1107296256;
            uint64_t v25 = sub_24D3E38DC;
            id v26 = &block_descriptor_283;
            uint64_t v18 = _Block_copy(&aBlock);
            swift_retain();
            swift_retain();
            swift_release();
            id aBlock = 0;
            unsigned int v19 = objc_msgSend(v2, sel_executeSwift_error_, v18, &aBlock);
            _Block_release(v18);
            id v20 = aBlock;
            char v21 = swift_isEscapingClosureAtFileLocation();
            swift_release();
            if ((v21 & 1) == 0)
            {
              if (!v19)
              {
                sub_24DCC8828();

                swift_willThrow();
              }
              return swift_release_n();
            }
LABEL_25:
            __break(1u);
          }
          goto LABEL_18;
        }
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
    }
    __break(1u);
    goto LABEL_24;
  }
  uint64_t result = sub_24D94B1C4();
  if (!v1)
  {
    if ((*(unsigned char *)(v0 + 32) & 1) == 0) {
      sub_24D948450(0xD000000000000018, 0x800000024DD0DA10, (uint64_t)&unk_26FFA35C8, (uint64_t)sub_24D949DD4, 0);
    }
    sub_24D94ACD0();
    return sub_24D949E58();
  }
  return result;
}

uint64_t sub_24D94E15C()
{
  return 0;
}

uint64_t sub_24D94E220()
{
  return 0;
}

uint64_t sub_24D94E2E4()
{
  return 0;
}

uint64_t sub_24D94E3EC()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  type metadata accessor for VFSItem(0);
  uint64_t result = swift_dynamicCastMetatype();
  if (result)
  {
    uint64_t v2 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v3 = (void *)swift_allocObject();
    v3[2] = sub_24D954114;
    v3[3] = v0;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v3;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_255;
    unsigned __int8 v4 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v5 = objc_msgSend(v2, sel_executeSwift_error_, v4, aBlock);
    _Block_release(v4);
    id v6 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v5)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24D94E5C4()
{
  return 0;
}

void sub_24D94E688()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_24D9540FC;
    v2[3] = v0;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v2;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_248;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_24D94E840()
{
  return 0;
}

uint64_t sub_24D94E904()
{
  return 0;
}

uint64_t sub_24D94EAE4()
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24D9540CC;
  *(void *)(v2 + 24) = v0;
  uint64_t v17 = sub_24D3E3980;
  uint64_t v18 = v2;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  unsigned int v15 = sub_24D3E38DC;
  char v16 = &block_descriptor_234;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D9540E4;
  *(void *)(v7 + 24) = v0;
  uint64_t v17 = sub_24D3E3980;
  uint64_t v18 = v7;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  unsigned int v15 = sub_24D3E38DC;
  char v16 = &block_descriptor_241_0;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned __int8 v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
LABEL_10:
  }
    __break(1u);
  if (v9) {
    return swift_release_n();
  }
  sub_24DCC8828();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_24D94EDE0()
{
  return 0;
}

uint64_t sub_24D94EEA4()
{
  return 0;
}

void sub_24D94EF68()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_24D9540B4;
    v2[3] = v0;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v2;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_227;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_24D94F120()
{
  return 0;
}

void sub_24D94F1E4()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_24D95409C;
    v2[3] = v0;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v2;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_220;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_24D94F39C()
{
  return 0;
}

void sub_24D94F460()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_24D954084;
    v2[3] = v0;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v2;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_213_0;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_24D94F618()
{
  return 0;
}

uint64_t sub_24D94F6DC()
{
  uint64_t v14 = *MEMORY[0x263EF8340];
  id v1 = *(id *)(v0 + qword_26B1A2590);
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v2 = swift_allocObject();
    *(void *)(v2 + 16) = sub_24D95406C;
    *(void *)(v2 + 24) = v0;
    char v12 = sub_24D3E3980;
    uint64_t v13 = v2;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v9 = 1107296256;
    id v10 = sub_24D3E38DC;
    char v11 = &block_descriptor_206;
    uint64_t v3 = _Block_copy(&aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    id aBlock = 0;
    unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
    _Block_release(v3);
    id v1 = aBlock;
    LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v3 & 1) == 0) {
      goto LABEL_5;
    }
    __break(1u);
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_24D954054;
  *(void *)(v5 + 24) = v0;
  char v12 = sub_24D3E3980;
  uint64_t v13 = v5;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v9 = 1107296256;
  id v10 = sub_24D3E38DC;
  char v11 = &block_descriptor_199_1;
  id v6 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v6, &aBlock);
  _Block_release(v6);
  id v1 = aBlock;
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v6) {
    __break(1u);
  }
LABEL_5:
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_24D94F9A8()
{
  return 0;
}

uint64_t sub_24D94FA6C()
{
  return 0;
}

uint64_t sub_24D94FB30()
{
  uint64_t v42 = *MEMORY[0x263EF8340];
  id v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24D953F0C;
  *(void *)(v2 + 24) = v0;
  id v40 = sub_24D3E3980;
  uint64_t v41 = v2;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_24D3E38DC;
  unsigned __int8 v39 = &block_descriptor_150;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
LABEL_19:
    char v35 = 0;
    goto LABEL_20;
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D953F24;
  *(void *)(v7 + 24) = v0;
  id v40 = sub_24D3E3980;
  uint64_t v41 = v7;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_24D3E38DC;
  unsigned __int8 v39 = &block_descriptor_157;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (!v9)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    goto LABEL_19;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D953F3C;
  *(void *)(v12 + 24) = v0;
  id v40 = sub_24D3E3980;
  uint64_t v41 = v12;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_24D3E38DC;
  unsigned __int8 v39 = &block_descriptor_164;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v14 = objc_msgSend(v1, sel_executeSwift_error_, v13, &aBlock);
  _Block_release(v13);
  id v15 = aBlock;
  char v16 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (!v14)
  {
LABEL_18:
    sub_24DCC8828();

    swift_willThrow();
    swift_release_n();
    goto LABEL_19;
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_24D953EDC;
  *(void *)(v17 + 24) = v0;
  id v40 = sub_24D3E3980;
  uint64_t v41 = v17;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_24D3E38DC;
  unsigned __int8 v39 = &block_descriptor_171;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v19 = objc_msgSend(v1, sel_executeSwift_error_, v18, &aBlock);
  _Block_release(v18);
  id v15 = aBlock;
  char v20 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v20)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (!v19) {
    goto LABEL_18;
  }
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_24D953EF4;
  *(void *)(v21 + 24) = v0;
  id v40 = sub_24D3E3980;
  uint64_t v41 = v21;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_24D3E38DC;
  unsigned __int8 v39 = &block_descriptor_178_0;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v23 = objc_msgSend(v1, sel_executeSwift_error_, v22, &aBlock);
  _Block_release(v22);
  id v15 = aBlock;
  char v24 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v24)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!v23) {
    goto LABEL_18;
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_24D953EAC;
  *(void *)(v25 + 24) = v0;
  id v40 = sub_24D3E3980;
  uint64_t v41 = v25;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_24D3E38DC;
  unsigned __int8 v39 = &block_descriptor_185;
  id v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v27 = objc_msgSend(v1, sel_executeSwift_error_, v26, &aBlock);
  _Block_release(v26);
  id v15 = aBlock;
  char v28 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  if (!v27) {
    goto LABEL_18;
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_24D953EC4;
  *(void *)(v29 + 24) = v0;
  id v40 = sub_24D3E3980;
  uint64_t v41 = v29;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v37 = 1107296256;
  uint64_t v38 = sub_24D3E38DC;
  unsigned __int8 v39 = &block_descriptor_192;
  id v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned __int8 v31 = objc_msgSend(v1, sel_executeSwift_error_, v30, &aBlock);
  _Block_release(v30);
  id v32 = aBlock;
  char v33 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v33) {
    goto LABEL_28;
  }
  if (v31) {
    return swift_release_n();
  }
  sub_24DCC8828();

  swift_willThrow();
  swift_release_n();
  char v35 = sub_24D953EC4;
LABEL_20:
  swift_release();
  return sub_24D43DD74((uint64_t)v35);
}

uint64_t sub_24D950450()
{
  return 0;
}

uint64_t sub_24D950514()
{
  return 0;
}

uint64_t sub_24D9505D8()
{
  return 0;
}

uint64_t sub_24D95069C()
{
  return 0;
}

uint64_t sub_24D950760()
{
  return 0;
}

uint64_t sub_24D950828()
{
  return 0;
}

uint64_t sub_24D9508EC()
{
  return 0;
}

uint64_t sub_24D9509B4()
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  id v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24D953F0C;
  *(void *)(v2 + 24) = v0;
  uint64_t v17 = sub_24D3E3980;
  uint64_t v18 = v2;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  id v15 = sub_24D3E38DC;
  char v16 = &block_descriptor_136;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
    return swift_release();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D953EC4;
  *(void *)(v7 + 24) = v0;
  uint64_t v17 = sub_24D3E3980;
  uint64_t v18 = v7;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v14 = 1107296256;
  id v15 = sub_24D3E38DC;
  char v16 = &block_descriptor_143;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned __int8 v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11) {
LABEL_10:
  }
    __break(1u);
  if (v9) {
    return swift_release_n();
  }
  sub_24DCC8828();

  swift_willThrow();
  swift_release();
  return swift_release();
}

uint64_t sub_24D950CB0()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  id v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_24D953FAC;
  v2[3] = v0;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_129;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_24D950E5C()
{
  return 0;
}

uint64_t sub_24D950F20()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  id v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_24D953EC4;
  v2[3] = v0;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_122_0;
  uint64_t v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if ((v4 & 1) == 0)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_24D9510CC()
{
  uint64_t v1 = v0;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  char v2 = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 112))();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
LABEL_10:
  }
    __break(1u);
  uint64_t v4 = *(void *)(Strong + 40);
  swift_retain();
  swift_release();
  uint64_t v5 = *(void *)(v4 + 16);
  swift_retain();
  uint64_t v6 = swift_release();
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t))(*(void *)v5 + 112))(v6);
  uint64_t result = swift_release();
  if (v4 & 1) == 0 || (v2) {
    return result;
  }
  uint64_t v8 = *(void **)(v1 + qword_26B1A2590);
  unsigned __int8 v9 = (void *)swift_allocObject();
  v9[2] = sub_24D953F84;
  v9[3] = v1;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v9;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_115;
  id v10 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v11 = objc_msgSend(v8, sel_executeSwift_error_, v10, aBlock);
  _Block_release(v10);
  id v12 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (!v11)
  {
    sub_24DCC8828();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_24D951328()
{
  return 0;
}

void sub_24D951434()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
    char v2 = (void *)swift_allocObject();
    v2[2] = sub_24D953F6C;
    v2[3] = v0;
    aBlock[4] = sub_24D3E3980;
    aBlock[5] = v2;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_108_1;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_24D9515EC()
{
  return 0;
}

uint64_t sub_24D9516F8()
{
  uint64_t v48 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_24D953EAC;
  *(void *)(v2 + 24) = v0;
  id v46 = sub_24D3E3980;
  uint64_t v47 = v2;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  unsigned __int8 v44 = sub_24D3E38DC;
  uint64_t v45 = &block_descriptor_52_1;
  uint64_t v3 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, &aBlock);
  _Block_release(v3);
  id v5 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
    goto LABEL_26;
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
LABEL_21:
    id v40 = 0;
    uint64_t v41 = 0;
    goto LABEL_22;
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_24D953EC4;
  *(void *)(v7 + 24) = v0;
  id v46 = sub_24D3E3980;
  uint64_t v47 = v7;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  unsigned __int8 v44 = sub_24D3E38DC;
  uint64_t v45 = &block_descriptor_59;
  uint64_t v8 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v9 = objc_msgSend(v1, sel_executeSwift_error_, v8, &aBlock);
  _Block_release(v8);
  id v10 = aBlock;
  char v11 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v11)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (!v9)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    goto LABEL_21;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D953EDC;
  *(void *)(v12 + 24) = v0;
  id v46 = sub_24D3E3980;
  uint64_t v47 = v12;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  unsigned __int8 v44 = sub_24D3E38DC;
  uint64_t v45 = &block_descriptor_66;
  uint64_t v13 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v14 = objc_msgSend(v1, sel_executeSwift_error_, v13, &aBlock);
  _Block_release(v13);
  id v15 = aBlock;
  char v16 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (!v14)
  {
LABEL_20:
    sub_24DCC8828();

    swift_willThrow();
    swift_release_n();
    goto LABEL_21;
  }
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_24D953EF4;
  *(void *)(v17 + 24) = v0;
  id v46 = sub_24D3E3980;
  uint64_t v47 = v17;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  unsigned __int8 v44 = sub_24D3E38DC;
  uint64_t v45 = &block_descriptor_73;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v19 = objc_msgSend(v1, sel_executeSwift_error_, v18, &aBlock);
  _Block_release(v18);
  id v15 = aBlock;
  char v20 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v20)
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  if (!v19) {
    goto LABEL_20;
  }
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_24D953F0C;
  *(void *)(v21 + 24) = v0;
  id v46 = sub_24D3E3980;
  uint64_t v47 = v21;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  unsigned __int8 v44 = sub_24D3E38DC;
  uint64_t v45 = &block_descriptor_80_1;
  uint64_t v22 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v23 = objc_msgSend(v1, sel_executeSwift_error_, v22, &aBlock);
  _Block_release(v22);
  id v15 = aBlock;
  char v24 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v24)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!v23) {
    goto LABEL_20;
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = sub_24D953F24;
  *(void *)(v25 + 24) = v0;
  id v46 = sub_24D3E3980;
  uint64_t v47 = v25;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  unsigned __int8 v44 = sub_24D3E38DC;
  uint64_t v45 = &block_descriptor_87;
  id v26 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v27 = objc_msgSend(v1, sel_executeSwift_error_, v26, &aBlock);
  _Block_release(v26);
  id v15 = aBlock;
  char v28 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (!v27) {
    goto LABEL_20;
  }
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = sub_24D953F3C;
  *(void *)(v29 + 24) = v0;
  id v46 = sub_24D3E3980;
  uint64_t v47 = v29;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  unsigned __int8 v44 = sub_24D3E38DC;
  uint64_t v45 = &block_descriptor_94_1;
  id v30 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned int v31 = objc_msgSend(v1, sel_executeSwift_error_, v30, &aBlock);
  _Block_release(v30);
  id v32 = aBlock;
  char v33 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v33)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  if (!v31)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release_n();
    uint64_t v41 = 0;
    id v40 = sub_24D953F3C;
    goto LABEL_22;
  }
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_24D953F54;
  *(void *)(v34 + 24) = v0;
  id v46 = sub_24D3E3980;
  uint64_t v47 = v34;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v43 = 1107296256;
  unsigned __int8 v44 = sub_24D3E38DC;
  uint64_t v45 = &block_descriptor_101_0;
  char v35 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned __int8 v36 = objc_msgSend(v1, sel_executeSwift_error_, v35, &aBlock);
  _Block_release(v35);
  id v37 = aBlock;
  char v38 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v38) {
LABEL_32:
  }
    __break(1u);
  if (v36) {
    return swift_release_n();
  }
  sub_24DCC8828();

  swift_willThrow();
  swift_release_n();
  uint64_t v41 = sub_24D953F54;
  id v40 = sub_24D953F3C;
LABEL_22:
  swift_release();
  sub_24D43DD74((uint64_t)v40);
  return sub_24D43DD74((uint64_t)v41);
}

uint64_t sub_24D952198()
{
  return 0;
}

void sub_24D95225C()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if ((*(unsigned char *)(v0 + 32) & 1) == 0)
  {
    uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
    uint64_t v2 = (void *)swift_allocObject();
    v2[2] = sub_24D953DA0;
    v2[3] = v0;
    aBlock[4] = sub_24D3E3974;
    aBlock[5] = v2;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D3E38DC;
    aBlock[3] = &block_descriptor_20;
    uint64_t v3 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    swift_release();
    aBlock[0] = 0;
    unsigned int v4 = objc_msgSend(v1, sel_executeSwift_error_, v3, aBlock);
    _Block_release(v3);
    id v5 = aBlock[0];
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (isEscapingClosureAtFileLocation) {
      __break(1u);
    }
    if (!v4)
    {
      sub_24DCC8828();

      swift_willThrow();
    }
    swift_release();
  }
}

uint64_t sub_24D952410()
{
  return 0;
}

uint64_t sub_24D95251C()
{
  return sub_24D94701C();
}

uint64_t sub_24D952540()
{
  return sub_24D94BE24();
}

uint64_t sub_24D952564()
{
  return sub_24D94BE7C();
}

uint64_t sub_24D952588()
{
  return sub_24D94C188();
}

uint64_t sub_24D9525AC()
{
  return sub_24D94C654();
}

uint64_t sub_24D9525D0()
{
  return sub_24D94C910();
}

void sub_24D9525F4()
{
}

uint64_t sub_24D952618()
{
  return sub_24D94D404();
}

void sub_24D95263C()
{
}

uint64_t sub_24D952660()
{
  return sub_24D94DB70();
}

uint64_t sub_24D952684()
{
  return sub_24D94E3EC();
}

void sub_24D9526A8()
{
}

uint64_t sub_24D9526CC()
{
  return sub_24D94EAE4();
}

void sub_24D9526F0()
{
}

void sub_24D952714()
{
}

void sub_24D952738()
{
}

uint64_t sub_24D95275C()
{
  return sub_24D94F6DC();
}

uint64_t sub_24D952780()
{
  return sub_24D94FB30();
}

uint64_t sub_24D9527A4()
{
  return sub_24D9509B4();
}

uint64_t sub_24D9527C8()
{
  return sub_24D950CB0();
}

uint64_t sub_24D9527EC()
{
  return sub_24D950F20();
}

uint64_t sub_24D952810()
{
  return sub_24D9510CC();
}

void sub_24D952834()
{
}

uint64_t sub_24D952858()
{
  return sub_24D9516F8();
}

uint64_t sub_24D95287C()
{
  return sub_24D94B220();
}

void sub_24D9528A0()
{
}

void sub_24D9528C4(uint64_t a1, void (*a2)(id, void *), uint64_t a3)
{
  char v33 = a2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = sub_24DCC9078();
  uint64_t v7 = *(char **)(v6 - 8);
  uint64_t v35 = v6;
  unsigned __int8 v36 = v7;
  MEMORY[0x270FA5388](v6);
  unsigned int v9 = (char *)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = *(void **)(a1 + qword_26B1A2590);
  char v11 = (void *)swift_allocObject();
  void v11[2] = sub_24D9551C8;
  v11[3] = a1;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v11;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_573;
  uint64_t v12 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v13 = objc_msgSend(v10, sel_fetchSwift_error_, v12, aBlock);
  _Block_release(v12);
  id v14 = aBlock[0];
  LOBYTE(v12) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v12) {
    __break(1u);
  }
  if (!v13)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    swift_release();
    return;
  }
  id v15 = v13;
  if (!objc_msgSend(v13, sel_next))
  {
LABEL_19:
    swift_release();
    swift_release();

    return;
  }
  id v37 = v13;
  char v38 = v3;
  v32[1] = a1;
  v32[2] = a3;
  uint64_t v34 = (void (**)(char *, uint64_t))(v36 + 8);
  while (1)
  {
    uint64_t v17 = (char *)MEMORY[0x253329610]();
    id v18 = v15;
    id v19 = objc_msgSend(v18, sel_stringAtIndex_, 0);
    if (!v19)
    {
      sub_24DCC97E8();
      id v19 = (id)sub_24DCC97B8();
      swift_bridgeObjectRelease();
    }

    if (objc_msgSend(v18, sel_isNullAtIndex_, 1)) {
      goto LABEL_13;
    }
    unsigned __int8 v36 = v17;
    id v20 = objc_msgSend(v18, sel_dataAtIndex_, 1);
    uint64_t v21 = sub_24DCC8B68();
    unint64_t v23 = v22;

    char v24 = v38;
    uint64_t v25 = sub_24D73544C(v21, v23);
    if (v24)
    {
      sub_24D400DCC(v21, v23);

      char v38 = 0;
LABEL_12:
      uint64_t v17 = v36;
LABEL_13:
      id v26 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      unsigned int v27 = sub_24DCC9068();
      os_log_type_t v28 = sub_24DCCA128();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v29 = 0;
        _os_log_impl(&dword_24D3D0000, v27, v28, "Unable to parse uploading error", v29, 2u);
        MEMORY[0x25332B030](v29, -1, -1);
      }

      (*v34)(v9, v35);
      goto LABEL_6;
    }
    id v30 = (void *)v25;
    char v38 = 0;
    sub_24D400DCC(v21, v23);
    if (!v30) {
      goto LABEL_12;
    }
    unsigned int v31 = v38;
    v33(v19, v30);
    char v38 = v31;
    if (v31) {
      break;
    }

    uint64_t v17 = v36;
LABEL_6:
    unsigned __int8 v16 = objc_msgSend(v18, sel_next);
    id v15 = v37;
    if ((v16 & 1) == 0) {
      goto LABEL_19;
    }
  }

  swift_release();
  swift_release();
}

uint64_t sub_24D952D98()
{
  return 0;
}

uint64_t sub_24D952E5C(void *a1, uint64_t a2, uint64_t a3)
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  id v5 = objc_msgSend(a1, sel_bindLongParameter_, a3);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0x205443454C4553;
}

uint64_t sub_24D952FB8()
{
  return 0x205443454C4553;
}

void *sub_24D95309C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = a1;
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = sub_24D954868;
  v7[3] = v6;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v7;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_566;
  uint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v9 = objc_msgSend(a2, sel_fetchSwift_error_, v8, aBlock);
  _Block_release(v8);
  id v10 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v9)
  {
    if (objc_msgSend(v9, sel_next))
    {
      uint64_t v7 = (void *)sub_24D3FAE2C(v9, 0);
      swift_release();
    }
    else
    {
      swift_release();

      return 0;
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return v7;
}

uint64_t sub_24D9532D0(uint64_t a1)
{
  void (*v10)(uint64_t *__return_ptr, void, const char *, uint64_t, uint64_t, void *(*)@<X0>(uint64_t@<X8>), void *, uint64_t);
  uint64_t v11;
  void v12[4];
  uint64_t v13;

  uint64_t v3 = v2;
  id v5 = *(void **)(v1 + qword_26B1A25A0);
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_24D95309C(a1, v6);
    if (!v2)
    {
      id v9 = v7;

      return (uint64_t)v9;
    }

    uint64_t v3 = 0;
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v9 = (void *)result;
    void v12[2] = v1;
    v12[3] = a1;
    id v10 = *(void (**)(uint64_t *__return_ptr, void, const char *, uint64_t, uint64_t, void *(*)@<X0>(uint64_t@<X8>), void *, uint64_t))(*(void *)MEMORY[0x270FA5388](result) + 432);
    char v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D38);
    v10(&v13, 0, "lookup(byFileID:)", 17, 2, sub_24D954824, v12, v11);
    swift_release();
    if (!v3) {
      return v13;
    }
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

void *sub_24D95344C(uint64_t a1, void *a2)
{
  uint64_t v4 = v2;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v4;
  *(void *)(v7 + 24) = a1;
  uint64_t v8 = (void *)swift_allocObject();
  _OWORD v8[2] = sub_24D9547DC;
  v8[3] = v7;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v8;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_556;
  id v9 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v10 = objc_msgSend(a2, sel_fetchSwift_error_, v9, aBlock);
  _Block_release(v9);
  id v11 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v10)
  {
    if (objc_msgSend(v10, sel_next))
    {
      id v13 = v10;
      unint64_t v14 = sub_24D3FAE2C(v13, 0);
      if (v3)
      {
        swift_release();
      }
      else
      {
        uint64_t v8 = (void *)v14;

        id v15 = objc_msgSend(v13, sel_stringAtIndex_, 1);
        sub_24DCC97E8();
        swift_release();
      }
    }
    else
    {
      swift_release();

      return 0;
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
  }
  return v8;
}

uint64_t sub_24D9536DC(void *a1)
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v2 = (void *)sub_24DCCB088();
  id v3 = objc_msgSend(a1, sel_bindObjectParameter_, v2);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D953844(uint64_t a1)
{
  void (*v10)(uint64_t *__return_ptr, void, const char *, uint64_t, uint64_t, void *(*)@<X0>(void *@<X8>), void *, uint64_t);
  uint64_t v11;
  void v12[4];
  uint64_t v13;

  id v3 = v2;
  id v5 = *(void **)(v1 + qword_26B1A25A0);
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = sub_24D95344C(a1, v6);
    if (!v2)
    {
      id v9 = v7;

      return (uint64_t)v9;
    }

    id v3 = 0;
  }
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v9 = (void *)result;
    void v12[2] = v1;
    v12[3] = a1;
    id v10 = *(void (**)(uint64_t *__return_ptr, void, const char *, uint64_t, uint64_t, void *(*)@<X0>(void *@<X8>), void *, uint64_t))(*(void *)MEMORY[0x270FA5388](result) + 432);
    id v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FBE0);
    v10(&v13, 0, "lookupLink(byFileID:)", 21, 2, sub_24D954760, v12, v11);
    swift_release();
    if (!v3) {
      return v13;
    }
    return (uint64_t)v9;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D9539D0(uint64_t a1)
{
  return sub_24D9532D0(a1);
}

uint64_t sub_24D9539E8(uint64_t a1)
{
  uint64_t result = sub_24D953844(a1);
  if (v1) {
    return v3;
  }
  return result;
}

id sub_24D953A14(void *a1, void *a2)
{
  unint64_t v22 = a2;
  uint64_t v23 = sub_24DCC9078();
  uint64_t v3 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v6 = sub_24DA257C0((unint64_t)objc_msgSend(a1, sel_integerAtIndex_, 0));
  unsigned int v7 = objc_msgSend(a1, sel_BOOLAtIndex_, 2);
  id result = objc_msgSend(a1, sel_unsignedLongAtIndex_, 3);
  if (v6 == 4)
  {
LABEL_2:
    id v9 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v10 = sub_24DCC9068();
    os_log_type_t v11 = sub_24DCCA128();
    if (os_log_type_enabled(v10, v11))
    {
      int v12 = v6;
      id v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)id v13 = 136315138;
      uint64_t v25 = v14;
      uint64_t v15 = 0x6B6E696C6D7973;
      if (v12 == 3) {
        uint64_t v15 = 0x7361696C61;
      }
      unint64_t v16 = 0xE700000000000000;
      if (v12 == 3) {
        unint64_t v16 = 0xE500000000000000;
      }
      if (v12 == 4) {
        uint64_t v17 = 7104878;
      }
      else {
        uint64_t v17 = v15;
      }
      if (v12 == 4) {
        unint64_t v18 = 0xE300000000000000;
      }
      else {
        unint64_t v18 = v16;
      }
      uint64_t v24 = sub_24D418FB4(v17, v18, &v25);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v10, v11, "Invalid object: %s cannot be dataless", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v14, -1, -1);
      MEMORY[0x25332B030](v13, -1, -1);
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  }
  else
  {
    id v19 = result;
    if (v7)
    {
      switch(v6)
      {
        case 1u:
          v22[5] = result;
          break;
        case 2u:
          goto LABEL_2;
        case 3u:
          goto LABEL_23;
        default:
          goto LABEL_20;
      }
    }
    else
    {
      switch(v6)
      {
        case 1u:
          v22[4] = result;
          break;
        case 2u:
          v22[7] = result;
          break;
        case 3u:
LABEL_23:
          v22[6] = result;
          break;
        default:
LABEL_20:
          unsigned int v20 = objc_msgSend(a1, sel_BOOLAtIndex_, 1, v22);
          id result = objc_msgSend(a1, sel_unsignedLongAtIndex_, 4);
          if (v7)
          {
            if (v20) {
              v22[3] = v19;
            }
            else {
              v22[1] = v19;
            }
          }
          else
          {
            uint64_t v21 = v22;
            if (v20)
            {
              v22[2] = v19;
              void v21[9] = result;
            }
            else
            {
              *unint64_t v22 = v19;
              v21[8] = result;
            }
          }
          break;
      }
    }
  }
  return result;
}

uint64_t sub_24D953DA0()
{
  return sub_24D952410();
}

uint64_t sub_24D953DA8()
{
  return swift_deallocObject();
}

uint64_t sub_24D953DB8()
{
  return sub_24D94B9E0();
}

uint64_t sub_24D953DC0()
{
  return swift_deallocObject();
}

uint64_t sub_24D953DD0()
{
  return sub_24D94BAE0();
}

uint64_t sub_24D953DD8()
{
  return swift_deallocObject();
}

unint64_t sub_24D953DE8()
{
  return sub_24D94BD68();
}

uint64_t sub_24D953E1C()
{
  return swift_deallocObject();
}

uint64_t sub_24D953E2C()
{
  return sub_24D94BBE0();
}

uint64_t sub_24D953E34()
{
  return swift_deallocObject();
}

uint64_t sub_24D953E44()
{
  return sub_24D94BCA4();
}

uint64_t sub_24D953E4C()
{
  return swift_deallocObject();
}

unint64_t sub_24D953E5C()
{
  return sub_24D94BD68();
}

uint64_t sub_24D953E9C()
{
  return swift_deallocObject();
}

uint64_t sub_24D953EAC()
{
  return sub_24D950828();
}

uint64_t sub_24D953EB4()
{
  return swift_deallocObject();
}

uint64_t sub_24D953EC4()
{
  return sub_24D9508EC();
}

uint64_t sub_24D953ECC()
{
  return swift_deallocObject();
}

uint64_t sub_24D953EDC()
{
  return sub_24D95069C();
}

uint64_t sub_24D953EE4()
{
  return swift_deallocObject();
}

uint64_t sub_24D953EF4()
{
  return sub_24D950760();
}

uint64_t sub_24D953EFC()
{
  return swift_deallocObject();
}

uint64_t sub_24D953F0C()
{
  return sub_24D950450();
}

uint64_t sub_24D953F14()
{
  return swift_deallocObject();
}

uint64_t sub_24D953F24()
{
  return sub_24D950514();
}

uint64_t sub_24D953F2C()
{
  return swift_deallocObject();
}

uint64_t sub_24D953F3C()
{
  return sub_24D9505D8();
}

uint64_t sub_24D953F44()
{
  return swift_deallocObject();
}

uint64_t sub_24D953F54()
{
  return sub_24D952198();
}

uint64_t sub_24D953F5C()
{
  return swift_deallocObject();
}

uint64_t sub_24D953F6C()
{
  return sub_24D9515EC();
}

uint64_t sub_24D953F74()
{
  return swift_deallocObject();
}

uint64_t sub_24D953F84()
{
  return sub_24D951328();
}

uint64_t sub_24D953F8C()
{
  return swift_deallocObject();
}

uint64_t sub_24D953F9C()
{
  return swift_deallocObject();
}

uint64_t sub_24D953FAC()
{
  return sub_24D950E5C();
}

uint64_t sub_24D953FB4()
{
  return swift_deallocObject();
}

uint64_t sub_24D953FC4()
{
  return swift_deallocObject();
}

uint64_t sub_24D953FD4()
{
  return swift_deallocObject();
}

uint64_t sub_24D953FE4()
{
  return swift_deallocObject();
}

uint64_t sub_24D953FF4()
{
  return swift_deallocObject();
}

uint64_t sub_24D954004()
{
  return swift_deallocObject();
}

uint64_t sub_24D954014()
{
  return swift_deallocObject();
}

uint64_t sub_24D954024()
{
  return swift_deallocObject();
}

uint64_t sub_24D954034()
{
  return swift_deallocObject();
}

uint64_t sub_24D954044()
{
  return swift_deallocObject();
}

uint64_t sub_24D954054()
{
  return sub_24D94FA6C();
}

uint64_t sub_24D95405C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95406C()
{
  return sub_24D94F9A8();
}

uint64_t sub_24D954074()
{
  return swift_deallocObject();
}

uint64_t sub_24D954084()
{
  return sub_24D94F618();
}

uint64_t sub_24D95408C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95409C()
{
  return sub_24D94F39C();
}

uint64_t sub_24D9540A4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9540B4()
{
  return sub_24D94F120();
}

uint64_t sub_24D9540BC()
{
  return swift_deallocObject();
}

uint64_t sub_24D9540CC()
{
  return sub_24D94EDE0();
}

uint64_t sub_24D9540D4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9540E4()
{
  return sub_24D94EEA4();
}

uint64_t sub_24D9540EC()
{
  return swift_deallocObject();
}

uint64_t sub_24D9540FC()
{
  return sub_24D94E840();
}

uint64_t sub_24D954104()
{
  return swift_deallocObject();
}

uint64_t sub_24D954114()
{
  return sub_24D94E5C4();
}

uint64_t sub_24D95411C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95412C()
{
  return sub_24D94E15C();
}

uint64_t sub_24D954134()
{
  return swift_deallocObject();
}

uint64_t sub_24D954144()
{
  return sub_24D94E220();
}

uint64_t sub_24D95414C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95415C()
{
  return sub_24D94E2E4();
}

uint64_t sub_24D954198()
{
  return swift_deallocObject();
}

uint64_t sub_24D9541A8()
{
  return sub_24D94E2E4();
}

uint64_t sub_24D9541E4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9541F4()
{
  return objectdestroy_286Tm_0();
}

uint64_t sub_24D9541FC(uint64_t a1)
{
  return sub_24D954684(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D948D94);
}

uint64_t sub_24D954214()
{
  return swift_deallocObject();
}

uint64_t sub_24D954224()
{
  return objectdestroy_286Tm_0();
}

uint64_t sub_24D95422C()
{
  return sub_24D948FB4();
}

uint64_t sub_24D954238()
{
  return swift_deallocObject();
}

uint64_t sub_24D954248()
{
  return objectdestroy_286Tm_0();
}

uint64_t sub_24D954250()
{
  return sub_24D949238();
}

uint64_t sub_24D95425C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95426C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D9542B4(uint64_t a1)
{
  return sub_24D949428(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void (**)(uint64_t, unint64_t))(v1 + 48));
}

uint64_t sub_24D9542C4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9542D4()
{
  return objectdestroy_286Tm_0();
}

uint64_t sub_24D9542DC()
{
  return sub_24D949818();
}

uint64_t sub_24D9542E8()
{
  return swift_deallocObject();
}

uint64_t sub_24D9542F8()
{
  return objectdestroy_286Tm_0();
}

uint64_t sub_24D954300()
{
  return sub_24D949B20();
}

uint64_t sub_24D95430C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95431C()
{
  return sub_24D94B03C();
}

uint64_t sub_24D954324()
{
  return swift_deallocObject();
}

uint64_t sub_24D954334()
{
  return sub_24D94B100();
}

uint64_t sub_24D95433C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95434C()
{
  return objectdestroy_286Tm_0();
}

unint64_t sub_24D954354()
{
  return sub_24D94AAF8();
}

uint64_t sub_24D95438C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95439C()
{
  return objectdestroy_286Tm_0();
}

unint64_t sub_24D9543A4()
{
  return sub_24D94AAF8();
}

uint64_t sub_24D9543E8()
{
  return swift_deallocObject();
}

uint64_t sub_24D9543F8()
{
  return objectdestroy_286Tm_0();
}

unint64_t sub_24D954400()
{
  return sub_24D94AAF8();
}

uint64_t sub_24D954438()
{
  return swift_deallocObject();
}

uint64_t sub_24D954448()
{
  return objectdestroy_286Tm_0();
}

unint64_t sub_24D954450()
{
  return sub_24D94AAF8();
}

uint64_t sub_24D954494()
{
  return swift_deallocObject();
}

uint64_t sub_24D9544A4()
{
  return objectdestroy_286Tm_0();
}

unint64_t sub_24D9544AC()
{
  return sub_24D94AAF8();
}

uint64_t sub_24D9544E8()
{
  return swift_deallocObject();
}

uint64_t sub_24D9544F8()
{
  return objectdestroy_286Tm_0();
}

uint64_t sub_24D954500()
{
  return sub_24D94ABDC();
}

uint64_t sub_24D95450C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95451C()
{
  return sub_24D94D998();
}

uint64_t sub_24D954524()
{
  return swift_deallocObject();
}

uint64_t sub_24D954534()
{
  return sub_24D94DA5C();
}

uint64_t sub_24D95453C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95454C()
{
  return sub_24D94D5B0();
}

uint64_t sub_24D954554()
{
  return swift_deallocObject();
}

uint64_t sub_24D954564()
{
  return sub_24D94CFBC();
}

uint64_t sub_24D95456C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95457C()
{
  return sub_24D94D080();
}

uint64_t sub_24D954584()
{
  return swift_deallocObject();
}

uint64_t sub_24D954594()
{
  return sub_24D94D218();
}

uint64_t sub_24D95459C()
{
  return swift_deallocObject();
}

uint64_t sub_24D9545AC()
{
  return sub_24D94CABC();
}

uint64_t sub_24D9545B4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9545C4()
{
  return sub_24D94C800();
}

uint64_t sub_24D9545CC()
{
  return swift_deallocObject();
}

uint64_t sub_24D9545DC()
{
  return sub_24D94C484();
}

uint64_t sub_24D9545E4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9545F4()
{
  return sub_24D94C548();
}

uint64_t sub_24D9545FC()
{
  return swift_deallocObject();
}

uint64_t sub_24D95460C()
{
  return sub_24D94C07C();
}

uint64_t sub_24D954614()
{
  return swift_deallocObject();
}

uint64_t sub_24D954624()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D95466C(uint64_t a1)
{
  return sub_24D954684(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D947C0C);
}

uint64_t sub_24D954684(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_24D95469C()
{
  return swift_deallocObject();
}

uint64_t sub_24D9546AC()
{
  return sub_24D9480D4();
}

uint64_t sub_24D9546B4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9546C4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9546FC()
{
  return sub_24D9481DC();
}

uint64_t sub_24D954708()
{
  return swift_deallocObject();
}

uint64_t sub_24D954718()
{
  return sub_24D948344();
}

uint64_t sub_24D954720()
{
  return swift_deallocObject();
}

uint64_t sub_24D954730()
{
  return sub_24D947EBC();
}

uint64_t sub_24D954738()
{
  return swift_deallocObject();
}

uint64_t sub_24D954748()
{
  return sub_24D947FC4();
}

uint64_t sub_24D954750()
{
  return swift_deallocObject();
}

void *sub_24D954760@<X0>(void *a1@<X8>)
{
  id result = sub_24D95344C(*(void *)(v1 + 24), *(void **)(*(void *)(v1 + 16) + qword_26B1A2590));
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
    a1[2] = v6;
    a1[3] = v7;
  }
  return result;
}

uint64_t sub_24D9547A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9547DC(void *a1)
{
  return sub_24D9536DC(a1);
}

uint64_t sub_24D954814()
{
  return swift_deallocObject();
}

void *sub_24D954824@<X0>(uint64_t a1@<X8>)
{
  id result = sub_24D95309C(*(void *)(v1 + 24), *(void **)(*(void *)(v1 + 16) + qword_26B1A2590));
  if (!v2)
  {
    *(void *)a1 = result;
    *(unsigned char *)(a1 + 8) = v5;
  }
  return result;
}

uint64_t sub_24D954868(void *a1)
{
  return sub_24D9536DC(a1);
}

uint64_t sub_24D9548A0()
{
  return swift_deallocObject();
}

uint64_t sub_24D9548B0()
{
  return 0;
}

uint64_t sub_24D954C00()
{
  return 0;
}

uint64_t sub_24D954F48()
{
  return 0;
}

uint64_t sub_24D9551C8()
{
  return sub_24D952D98();
}

uint64_t sub_24D9551D0()
{
  return swift_deallocObject();
}

uint64_t sub_24D9551E0(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1941F8);
  uint64_t inited = (_OWORD *)swift_initStackObject();
  inited[1] = xmmword_24DCD57D0;
  inited[2] = xmmword_24DCDF8D0;
  inited[3] = xmmword_24DCDF8E0;
  uint64_t v5 = sub_24D6DE514(a1, a2, (uint64_t)inited);
  swift_setDeallocating();
  return v5;
}

uint64_t sub_24D9552A4(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1941F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECD0;
  *(_OWORD *)(inited + 32) = xmmword_24DCD6EC0;
  uint64_t v5 = sub_24D6DE514(a1, a2, inited);
  swift_setDeallocating();
  return v5;
}

uint64_t sub_24D95535C(unint64_t a1, char a2)
{
  if ((a2 & 1) != 0 || a1 >= 4 && a1 - 500 > 2)
  {
    uint64_t v7 = MEMORY[0x263F8D6C8];
    v6[0] = 0;
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8D6C8];
    v6[0] = a1;
  }
  uint64_t v2 = sub_24D3E3EB4((uint64_t)v6);
  uint64_t v4 = v3;
  sub_24D415F74((uint64_t)v6, qword_26B197F50);
  if (v4) {
    return v2;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24D955438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1941F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  *(void *)(inited + 32) = a7;
  uint64_t v11 = sub_24D6DE514(a1, a2, inited);
  swift_setDeallocating();
  return v11;
}

void sub_24D9554F0(uint64_t a1, uint64_t a2, uint64_t *a3, void *a4, void (*a5)(char *, void, id), uint64_t a6)
{
  uint64_t v35 = a6;
  id v38 = a4;
  unsigned __int8 v39 = a5;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  MEMORY[0x270FA5388](v10 - 8);
  int v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(void **)(a2 + qword_26B1A2590);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a1;
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = sub_24D955CA8;
  v15[3] = v14;
  uint64_t v37 = v14;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v15;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_590;
  unint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v17 = objc_msgSend(v13, sel_fetchSwift_error_, v16, aBlock);
  _Block_release(v16);
  id v18 = aBlock[0];
  LOBYTE(v16) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v16) {
    __break(1u);
  }
  if (v17)
  {
    unsigned __int8 v19 = objc_msgSend(v17, sel_next);
    id v20 = v38;
    if (v19)
    {
      uint64_t v21 = a3 + 4;
      swift_beginAccess();
      uint64_t v34 = a3 + 3;
      swift_beginAccess();
      unsigned __int8 v36 = a3 + 5;
      uint64_t v22 = swift_beginAccess();
      while (1)
      {
        uint64_t v23 = (void *)MEMORY[0x253329610](v22);
        uint64_t v24 = sub_24D7872C8();
        sub_24D8C6918(v24, v17, 0, (uint64_t)v12);
        if (v6) {
          break;
        }
        swift_bridgeObjectRelease();
        uint64_t v25 = *((void *)v12 + 4);
        if (sub_24D82CEC0(v25, *v21) & 1) != 0 || (sub_24D82CEC0(v25, *v36))
        {
          char v26 = 1;
        }
        else
        {
          uint64_t v27 = *v34;
          if (*(void *)(*v34 + 16))
          {
            id v28 = v20;
            swift_bridgeObjectRetain();
            uint64_t v29 = sub_24D4060A4(v28);
            if (v30)
            {
              uint64_t v31 = *(void *)(v27 + 56);
              char v33 = a3;
              id v32 = *(void **)(v31 + 8 * v29);
              swift_retain();

              swift_bridgeObjectRelease();
              char v26 = sub_24D9B1B28((uint64_t)v12, v32);
              a3 = v33;
              swift_release();
            }
            else
            {

              swift_bridgeObjectRelease();
              char v26 = 0;
            }
            id v20 = v38;
          }
          else
          {
            char v26 = 0;
          }
        }
        v39(v12, v26 & 1, v20);
        sub_24D415F74((uint64_t)v12, (uint64_t *)&unk_26B199410);
        uint64_t v22 = (uint64_t)objc_msgSend(v17, sel_next);
        if ((v22 & 1) == 0) {
          goto LABEL_17;
        }
      }
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();
    }
    else
    {
LABEL_17:
      swift_release();
      swift_release();
    }
  }
  else
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    swift_release();
  }
}

void sub_24D955948(uint64_t a1, void (*a2)(char *, void, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a2;
  uint64_t v25 = a5;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void **)(a1 + qword_26B1A2590);
  int v12 = (void *)swift_allocObject();
  void v12[2] = sub_24D955C90;
  v12[3] = a1;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v12;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_580;
  id v13 = _Block_copy(aBlock);
  uint64_t v23 = a1;
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v14 = objc_msgSend(v11, sel_fetchSwift_error_, v13, aBlock);
  _Block_release(v13);
  id v15 = aBlock[0];
  LOBYTE(a1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (a1) {
    __break(1u);
  }
  if (!v14)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    swift_release();
    goto LABEL_9;
  }
  uint64_t v22 = a4;
  if ((objc_msgSend(v14, sel_next) & 1) == 0)
  {
LABEL_7:
    swift_release();
    swift_release();

LABEL_9:
    swift_release();
    return;
  }
  unint64_t v16 = (void *)(v22 + 32);
  uint64_t v17 = swift_beginAccess();
  while (1)
  {
    id v18 = (void *)MEMORY[0x253329610](v17);
    uint64_t v19 = sub_24D7872C8();
    sub_24D8C6918(v19, v14, 0, (uint64_t)v10);
    if (v5) {
      break;
    }
    swift_bridgeObjectRelease();
    char v20 = sub_24D82CEC0(*((void *)v10 + 4), *v16);
    v24(v10, v20 & 1, v25);
    sub_24D415F74((uint64_t)v10, (uint64_t *)&unk_26B199410);
    uint64_t v17 = (uint64_t)objc_msgSend(v14, sel_next);
    if ((v17 & 1) == 0) {
      goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_24D955C90()
{
  return sub_24D952FB8();
}

uint64_t sub_24D955C98()
{
  return swift_deallocObject();
}

uint64_t sub_24D955CA8(void *a1)
{
  return sub_24D952E5C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D955CB0()
{
  return swift_deallocObject();
}

uint64_t sub_24D955CC0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D955CF8(void *a1)
{
  return sub_24D946A74(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D955D04()
{
  return swift_deallocObject();
}

uint64_t sub_24D955D14(void *a1)
{
  return sub_24D94616C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D955D20()
{
  return swift_deallocObject();
}

uint64_t sub_24D955D30()
{
  uint64_t v1 = sub_24DCC8CE8();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D955E08(void *a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8CE8() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(uint64_t ***)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D945548(a1, v5, v1 + v4, v6);
}

uint64_t sub_24D955EA8()
{
  return swift_deallocObject();
}

unint64_t sub_24D955EB8()
{
  return sub_24D944DF4();
}

uint64_t sub_24D955EC0()
{
  return swift_deallocObject();
}

uint64_t sub_24D955ED0(void *a1)
{
  return sub_24D944844(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D955EDC()
{
  return swift_deallocObject();
}

uint64_t sub_24D955EF0(uint64_t a1)
{
  return sub_24D95607C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_24D943E28);
}

uint64_t sub_24D955F08()
{
  return swift_deallocObject();
}

uint64_t sub_24D955F1C(uint64_t a1)
{
  return sub_24D95607C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_24D942808);
}

uint64_t sub_24D955F34()
{
  return swift_deallocObject();
}

uint64_t sub_24D955F48(uint64_t a1)
{
  return sub_24D95607C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_24D942C1C);
}

uint64_t sub_24D955F60()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_639Tm()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D956064(uint64_t a1)
{
  return sub_24D95607C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))sub_24D943044);
}

uint64_t sub_24D95607C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 48);
  uint64_t v7 = *(void *)(v2 + 56);
  uint64_t v8 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(a1, v6, v7, v2 + v5, v8);
}

uint64_t sub_24D956148()
{
  return swift_deallocObject();
}

uint64_t sub_24D95615C(uint64_t a1)
{
  return sub_24D95679C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24D941540);
}

uint64_t sub_24D956174()
{
  return swift_deallocObject();
}

uint64_t sub_24D956188(uint64_t a1)
{
  return sub_24D958184(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_24D940920);
}

uint64_t sub_24D9561A0()
{
  return swift_deallocObject();
}

uint64_t sub_24D9561B0()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_24D956338(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();

  return sub_24D93FE28(a1);
}

uint64_t sub_24D956450()
{
  return swift_deallocObject();
}

uint64_t sub_24D956460()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4 + 2) & ~v3;
  swift_release();
  uint64_t v6 = v0 + v4;
  unint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, AssociatedTypeWitness);
  v7(v0 + v5, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D956570(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(v1 + 48);
  uint64_t v7 = *(unsigned __int8 *)(v1 + v5);
  char v8 = *(unsigned char *)(v1 + v5 + 1);

  return sub_24D93F088(a1, v6, v1 + v4, v7, v8);
}

uint64_t sub_24D956638()
{
  return swift_deallocObject();
}

uint64_t sub_24D95664C(uint64_t a1)
{
  return sub_24D95679C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24D93E338);
}

uint64_t sub_24D956664()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_679Tm()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  uint64_t v6 = v0 + v4;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, AssociatedTypeWitness);
  v7(v0 + v5, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D956784(uint64_t a1)
{
  return sub_24D95679C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24D93D8FC);
}

uint64_t sub_24D95679C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 56) & ~v5;
  uint64_t v7 = *(void *)(v2 + 48);
  uint64_t v8 = v2 + ((*(void *)(v4 + 64) + v5 + v6) & ~v5);

  return a2(a1, v7, v2 + v6, v8);
}

uint64_t sub_24D956868()
{
  return swift_deallocObject();
}

uint64_t sub_24D95687C(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D93BE3C);
}

uint64_t sub_24D956894()
{
  return swift_deallocObject();
}

uint64_t sub_24D9568A4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9568DC(void *a1)
{
  return sub_24D93B540(a1);
}

uint64_t sub_24D9568E8()
{
  return swift_deallocObject();
}

uint64_t sub_24D9568F8()
{
  uint64_t v1 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v20 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v20 + 56) & ~v20);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v4(v2, AssociatedTypeWitness);
  v4(v2 + v1[9], AssociatedTypeWitness);
  uint64_t v5 = v2 + v1[10];
  uint64_t v6 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for FileItemVersion();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v5 + *(int *)(v7 + 56), v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v1[12];
  uint64_t v9 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v10 = v8 + v9[7];
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = (uint64_t *)(v8 + v9[33]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_24D400DCC(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v2 + v1[13];
  id v18 = *(void **)(v17 + 16);
  if (v18 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24D466534(*(void *)(v2 + v1[17]), *(void *)(v2 + v1[17] + 8));
  return swift_deallocObject();
}

uint64_t sub_24D956D4C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for SnapshotItem() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = *(uint64_t **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D93A688(a1, v5, v1 + v4, v6);
}

uint64_t sub_24D956DFC()
{
  return swift_deallocObject();
}

uint64_t sub_24D956E10(uint64_t a1)
{
  return sub_24D95729C(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D93538C);
}

uint64_t sub_24D956E28()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_769Tm()
{
  uint64_t v1 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v20 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v20 + 56) & ~v20);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);
  v4(v2, AssociatedTypeWitness);
  v4(v2 + v1[9], AssociatedTypeWitness);
  uint64_t v5 = v2 + v1[10];
  uint64_t v6 = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v21 = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = type metadata accessor for FileItemVersion();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(v5 + *(int *)(v7 + 56), v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v8 = v2 + v1[12];
  uint64_t v9 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v10 = v8 + v9[7];
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v11 - 8);
  id v13 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
  v13(v10, v11);
  v13(v8 + v9[8], v11);
  swift_bridgeObjectRelease();
  uint64_t v14 = v8 + v9[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v14, 1, v11)) {
    v13(v14, v11);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v15 = (uint64_t *)(v8 + v9[33]);
  unint64_t v16 = v15[1];
  if (v16 >> 60 != 15) {
    sub_24D400DCC(*v15, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t v17 = v2 + v1[13];
  id v18 = *(void **)(v17 + 16);
  if (v18 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v17 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_24D466534(*(void *)(v2 + v1[17]), *(void *)(v2 + v1[17] + 8));
  return swift_deallocObject();
}

uint64_t sub_24D957284(uint64_t a1)
{
  return sub_24D95729C(a1, sub_24D9350E8);
}

uint64_t sub_24D95729C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for SnapshotItem() - 8);
  uint64_t v5 = *(void *)(v2 + 48);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5, v6);
}

uint64_t sub_24D95732C()
{
  return swift_deallocObject();
}

void (**sub_24D95733C(void (**result)(char *, uint64_t), char a2))(char *, uint64_t)
{
  uint64_t v4 = *(void **)(v2 + 24);
  if (a2 != 1 || (uint64_t result = (void (**)(char *, uint64_t))sub_24D932F9C(result), !v3))
  {
    if (__OFADD__(*v4, 1)) {
      __break(1u);
    }
    else {
      ++*v4;
    }
  }
  return result;
}

uint64_t sub_24D95738C(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D93286C);
}

uint64_t sub_24D9573A4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9573B8(uint64_t a1)
{
  return sub_24D9573F0(a1, 29, 0x46204554454C4544, 0xEC000000204D4F52, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_24D932394);
}

uint64_t sub_24D9573F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  return a5(a1, *(void *)(v5 + 48), v5 + ((*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80)), a2, a3, a4);
}

uint64_t sub_24D9574A0()
{
  return swift_deallocObject();
}

uint64_t sub_24D9574B4(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D92FE2C);
}

uint64_t sub_24D9574CC()
{
  return swift_deallocObject();
}

uint64_t sub_24D9574E0(uint64_t a1)
{
  return sub_24D958184(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_24D92F008);
}

uint64_t sub_24D9574F8()
{
  return swift_deallocObject();
}

uint64_t sub_24D95750C(uint64_t a1)
{
  return sub_24D958184(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_24D92E3C8);
}

uint64_t sub_24D957524()
{
  return swift_deallocObject();
}

uint64_t sub_24D957538(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D92D9FC);
}

uint64_t sub_24D957550()
{
  return swift_deallocObject();
}

uint64_t sub_24D957564(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D92CF6C);
}

uint64_t sub_24D95757C()
{
  return swift_deallocObject();
}

uint64_t sub_24D957590(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D92C51C);
}

uint64_t sub_24D9575A8()
{
  return swift_deallocObject();
}

uint64_t sub_24D9575BC(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D92C1CC);
}

uint64_t sub_24D9575D4()
{
  return swift_deallocObject();
}

uint64_t sub_24D9575E8(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D92B470);
}

uint64_t sub_24D957600()
{
  return swift_deallocObject();
}

uint64_t sub_24D957614(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D92A7D0);
}

uint64_t sub_24D95762C()
{
  return swift_deallocObject();
}

uint64_t sub_24D957640(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D929D10);
}

uint64_t sub_24D957658()
{
  return swift_deallocObject();
}

uint64_t sub_24D957668()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D95774C(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  char v3 = *(unsigned char *)(v1 + 48);

  return sub_24D929028(a1, v3);
}

uint64_t sub_24D9577DC()
{
  return swift_deallocObject();
}

uint64_t sub_24D9577F0(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D928664);
}

uint64_t sub_24D957808()
{
  return swift_deallocObject();
}

uint64_t sub_24D95781C(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D9283D4);
}

uint64_t sub_24D957834()
{
  return swift_deallocObject();
}

uint64_t sub_24D957844(void *a1)
{
  return sub_24D9277E8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_24D957854()
{
  return swift_deallocObject();
}

uint64_t sub_24D957864()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D957954(void *a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 48);
  uint64_t v6 = v1 + v4;
  uint64_t v7 = v1 + ((v4 + *(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)v7;
  char v9 = *(unsigned char *)(v7 + 8);

  return sub_24D926CB4(a1, v5, v6, v8, v9);
}

uint64_t sub_24D957A20()
{
  return swift_deallocObject();
}

uint64_t sub_24D957A30(void *a1)
{
  return sub_24D957A50(a1);
}

uint64_t sub_24D957A50(void *a1)
{
  return sub_24D926148(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_24D957A80()
{
  return swift_deallocObject();
}

uint64_t sub_24D957A90(void *a1)
{
  return sub_24D957A50(a1);
}

uint64_t sub_24D957AB0()
{
  return swift_deallocObject();
}

uint64_t sub_24D957AC4(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D9246F4);
}

uint64_t sub_24D957ADC()
{
  return swift_deallocObject();
}

uint64_t sub_24D957AF0(uint64_t a1)
{
  return sub_24D9573F0(a1, 41, 0xD000000000000018, 0x800000024DD11CD0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_24D932394);
}

uint64_t sub_24D957B24()
{
  return swift_deallocObject();
}

uint64_t sub_24D957B38()
{
  return swift_deallocObject();
}

uint64_t sub_24D957B48()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D957C34(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v1 + 48);
  unint64_t v4 = *(void **)(v1 + 56);

  return sub_24D923154(a1, v3, v4);
}

uint64_t sub_24D957CC0()
{
  return swift_deallocObject();
}

uint64_t sub_24D957CD4(uint64_t a1)
{
  return sub_24D957CE0(a1);
}

uint64_t sub_24D957CE0(uint64_t a1)
{
  return sub_24D922F78(a1);
}

uint64_t sub_24D957D70()
{
  return swift_deallocObject();
}

uint64_t sub_24D957D80()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_24DCCA3F8() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  uint64_t v7 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v7(v0 + v3, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v2 + 48))(v0 + v6, 1, AssociatedTypeWitness))v7(v0 + v6, AssociatedTypeWitness); {

  }
  return swift_deallocObject();
}

uint64_t sub_24D957F30(uint64_t a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_24DCCA3F8() - 8);
  uint64_t v7 = *(void **)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + v5);
  unint64_t v9 = *(void *)(v1 + v5 + 8);
  int v10 = *(unsigned __int8 *)(v1 + v5 + 16);
  uint64_t v11 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_24D9221B8(a1, v7, v1 + v4, v8, v9, v10, v11);
}

uint64_t sub_24D958040()
{
  return swift_deallocObject();
}

uint64_t sub_24D958050@<X0>(void *a1@<X8>)
{
  return sub_24D922568(*(void *)(v1 + 48), a1);
}

uint64_t objectdestroy_689Tm()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D95816C(uint64_t a1)
{
  return sub_24D958184(a1, (uint64_t (*)(uint64_t, uint64_t, unint64_t, uint64_t))sub_24D921514);
}

uint64_t sub_24D958184(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, unint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v2 + 48);
  uint64_t v7 = *(void *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));

  return a2(a1, v6, v2 + v5, v7);
}

uint64_t sub_24D958250()
{
  return swift_deallocObject();
}

uint64_t sub_24D958264(uint64_t a1)
{
  return sub_24D957CE0(a1);
}

uint64_t sub_24D958270()
{
  return swift_deallocObject();
}

uint64_t sub_24D958284(uint64_t a1)
{
  return sub_24D9573F0(a1, 60, 0xD00000000000002BLL, 0x800000024DD11ED0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_24D91FD38);
}

uint64_t sub_24D9582B8()
{
  return swift_deallocObject();
}

uint64_t sub_24D9582CC(uint64_t a1)
{
  return sub_24D9573F0(a1, 48, 0xD00000000000001FLL, 0x800000024DD11F20, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_24D932394);
}

uint64_t sub_24D958300()
{
  return swift_deallocObject();
}

uint64_t sub_24D958314(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D91DE9C);
}

uint64_t sub_24D95832C()
{
  return swift_deallocObject();
}

uint64_t sub_24D958340(uint64_t a1)
{
  return sub_24D9573F0(a1, 67, 0xD000000000000032, 0x800000024DD11FA0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_24D91FD38);
}

uint64_t sub_24D958374()
{
  return swift_deallocObject();
}

uint64_t sub_24D958388(uint64_t a1)
{
  return sub_24D9573F0(a1, 101, 0xD000000000000054, 0x800000024DD12010, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_24D91FD38);
}

uint64_t sub_24D9583BC()
{
  return swift_deallocObject();
}

uint64_t sub_24D9583D0(uint64_t a1)
{
  return sub_24D9573F0(a1, 114, 0xD000000000000061, 0x800000024DD120A0, (uint64_t (*)(uint64_t, void, unint64_t, uint64_t, uint64_t, uint64_t))sub_24D91FD38);
}

uint64_t sub_24D958404()
{
  return swift_deallocObject();
}

uint64_t sub_24D958418(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D93C520);
}

uint64_t sub_24D958430()
{
  return swift_deallocObject();
}

uint64_t sub_24D958440(void **a1, uint64_t *a2)
{
  return sub_24D935A74(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(uint64_t **)(v2 + 32));
}

unint64_t sub_24D958460()
{
  unint64_t result = qword_26B194800;
  if (!qword_26B194800)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B194800);
  }
  return result;
}

uint64_t sub_24D9584A4(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D932D1C);
}

uint64_t sub_24D9584BC()
{
  return swift_deallocObject();
}

uint64_t sub_24D9584CC()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, AssociatedTypeWitness);

  return swift_deallocObject();
}

uint64_t sub_24D9585C4(void *a1)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 48);
  char v7 = *(unsigned char *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D930A5C(a1, v6, v7, v1 + v4, v8, v9);
}

uint64_t sub_24D95868C()
{
  return swift_deallocObject();
}

uint64_t sub_24D95869C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 24);
  uint64_t v3 = *(void **)(a1 + 96);
  uint64_t v5 = *(void *)(a1 + 192);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D401324(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24D958798(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D924BDC);
}

uint64_t sub_24D9587B0()
{
  return swift_deallocObject();
}

uint64_t sub_24D9587C4(uint64_t a1)
{
  return sub_24D3E58C8(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D91EFD4);
}

uint64_t sub_24D9587DC()
{
  return swift_deallocObject();
}

unint64_t sub_24D9587EC()
{
  unint64_t result = qword_26986FBF0;
  if (!qword_26986FBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FBF0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PaginatedContinuation.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24D9588DCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for PaginatedContinuation.CodingKeys()
{
  return &type metadata for PaginatedContinuation.CodingKeys;
}

unint64_t sub_24D958918()
{
  unint64_t result = qword_26986FC00;
  if (!qword_26986FC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FC00);
  }
  return result;
}

unint64_t sub_24D958970()
{
  unint64_t result = qword_26986FC08;
  if (!qword_26986FC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FC08);
  }
  return result;
}

unint64_t sub_24D9589C8()
{
  unint64_t result = qword_26986FC10[0];
  if (!qword_26986FC10[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26986FC10);
  }
  return result;
}

uint64_t sub_24D958E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v10 = type metadata accessor for ItemState();
  uint64_t v11 = (void *)(a6 + *(int *)(v10 + 36));
  void *v11 = a2;
  v11[1] = a3;
  uint64_t v12 = a6 + *(int *)(v10 + 40);

  return sub_24D4EFE74(a4, v12);
}

uint64_t sub_24D958F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for ItemStateVersion();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 36));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for ItemStateVersion()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D958FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1);
  uint64_t v12 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  id v15 = (char *)&v61 - v14;
  uint64_t v19 = sub_24D4E8338((char *)(v13 + *(int *)(v16 + 40)), v17, v18);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  v20(v15, v4, v8);
  v20(v12, a1, v8);
  char v21 = sub_24DCC9798();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v9 + 8);
  v22(v12, v8);
  v22(v15, v8);
  if (v21) {
    uint64_t v23 = v19;
  }
  else {
    uint64_t v23 = v19 | 2;
  }
  uint64_t v24 = *(int *)(a4 + 36);
  uint64_t v25 = v5 + v24;
  uint64_t v27 = *(void *)(v5 + v24);
  unint64_t v26 = *(void *)(v25 + 8);
  id v28 = (uint64_t *)(a1 + v24);
  uint64_t v30 = *v28;
  unint64_t v29 = v28[1];
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_24D40114C(v27, v26);
  uint64_t v33 = v32;
  swift_bridgeObjectRelease();
  if (!v33) {
    goto LABEL_10;
  }
  if (v31 == 12565487 && v33 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v35 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if ((v35 & 1) == 0)
    {
LABEL_10:
      swift_bridgeObjectRetain();
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v36 = sub_24DCC9918();
  unint64_t v37 = sub_24D41824C(v36, v27, v26);
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  uint64_t v43 = v42;
  swift_bridgeObjectRelease();
  uint64_t v27 = MEMORY[0x253327950](v37, v39, v41, v43);
  unint64_t v26 = v44;
  swift_bridgeObjectRelease();
LABEL_13:
  swift_bridgeObjectRetain();
  uint64_t v45 = sub_24D40114C(v30, v29);
  uint64_t v47 = v46;
  swift_bridgeObjectRelease();
  if (v47)
  {
    if (v45 == 12565487 && v47 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    char v48 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v48)
    {
LABEL_18:
      swift_bridgeObjectRetain();
      unint64_t v49 = sub_24DCC9918();
      unint64_t v50 = sub_24D41824C(v49, v30, v29);
      uint64_t v52 = v51;
      uint64_t v54 = v53;
      uint64_t v56 = v55;
      swift_bridgeObjectRelease();
      uint64_t v57 = MEMORY[0x253327950](v50, v52, v54, v56);
      unint64_t v29 = v58;
      swift_bridgeObjectRelease();
      if (v27 != v57) {
        goto LABEL_23;
      }
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRetain();
  if (v27 != v30)
  {
LABEL_23:
    char v59 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23 | ((v59 & 1) == 0);
  }
LABEL_21:
  if (v26 != v29) {
    goto LABEL_23;
  }
  swift_bridgeObjectRelease_n();
  return v23;
}

int *sub_24D959378@<X0>(int *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a4, v5);
  if ((a1 & 2) != 0) {
    (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 16) - 8) + 24))(a4, a2);
  }
  if (a1)
  {
    uint64_t v10 = *(int *)(a3 + 36);
    uint64_t v12 = *(void *)(a2 + v10);
    uint64_t v11 = *(void *)(a2 + v10 + 8);
    uint64_t v13 = (void *)(a4 + v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *uint64_t v13 = v12;
    v13[1] = v11;
  }
  return sub_24D4E7C7C(a1, a2 + *(int *)(a3 + 40));
}

uint64_t sub_24D959468()
{
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCCADC8();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_24DCC97B8();
  id v1 = objc_msgSend(v0, sel_fp_obfuscatedFilename);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D4E6FA0();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D9595C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  char v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(v8 + 48))(v9, v8);
  v15[4] = 0;
  void v15[5] = 0xE000000000000000;
  void v15[2] = 58;
  v15[3] = 0xE100000000000000;
  v15[0] = 47;
  v15[1] = 0xE100000000000000;
  sub_24D3F0EB8();
  uint64_t v10 = sub_24DCCA478();
  uint64_t v12 = v11;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a3, v7, a2);
  uint64_t result = type metadata accessor for ItemStateVersion();
  uint64_t v14 = (uint64_t *)(a3 + *(int *)(result + 36));
  uint64_t *v14 = v10;
  v14[1] = v12;
  return result;
}

BOOL sub_24D959734(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](a1);
  char v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v5 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v5);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, void))(*(void *)(v10 + 24) + 48))(v8, *(void *)(v10 + 24));
  char v13 = sub_24DCC9798();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v2, a1);
  if (v13)
  {
    uint64_t v14 = &v7[*(int *)(a1 + 36)];
    uint64_t v16 = *(void *)v14;
    unint64_t v15 = *((void *)v14 + 1);
    uint64_t v17 = v16 & 0xFFFFFFFFFFFFLL;
    if ((v15 & 0x2000000000000000) != 0) {
      uint64_t v18 = HIBYTE(v15) & 0xF;
    }
    else {
      uint64_t v18 = v17;
    }
    BOOL v19 = v18 == 0;
  }
  else
  {
    BOOL v19 = 0;
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a1);
  return v19;
}

uint64_t sub_24D959914()
{
  sub_24DCCADC8();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_24DCC97B8();
  id v1 = objc_msgSend(v0, sel_fp_obfuscatedFilename);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

void sub_24D9599EC()
{
}

void sub_24D959A48()
{
}

void sub_24D959AA4()
{
}

void sub_24D959B00()
{
}

uint64_t sub_24D959B5C(uint64_t a1, uint64_t a2)
{
  if ((sub_24DCC9798() & 1) == 0)
  {
    char v15 = 0;
    return v15 & 1;
  }
  uint64_t v4 = *(int *)(type metadata accessor for ItemStateVersion() + 36);
  uint64_t v6 = *(void *)(a1 + v4);
  unint64_t v5 = *(void *)(a1 + v4 + 8);
  char v7 = (uint64_t *)(a2 + v4);
  uint64_t v9 = *v7;
  unint64_t v8 = v7[1];
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_24D40114C(v6, v5);
  uint64_t v12 = v11;
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_8;
  }
  if (v10 == 12565487 && v12 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v14 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if ((v14 & 1) == 0)
    {
LABEL_8:
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
  }
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_24DCC9918();
  unint64_t v17 = sub_24D41824C(v16, v6, v5);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  uint64_t v6 = MEMORY[0x253327950](v17, v19, v21, v23);
  unint64_t v5 = v24;
  swift_bridgeObjectRelease();
LABEL_12:
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_24D40114C(v9, v8);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (v27)
  {
    if (v25 == 12565487 && v27 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v29 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        goto LABEL_18;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v30 = sub_24DCC9918();
    unint64_t v31 = sub_24D41824C(v30, v9, v8);
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    swift_bridgeObjectRelease();
    uint64_t v9 = MEMORY[0x253327950](v31, v33, v35, v37);
    unint64_t v8 = v38;
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
LABEL_18:
  swift_bridgeObjectRetain();
LABEL_21:
  if (v6 == v9 && v5 == v8) {
    char v15 = 1;
  }
  else {
    char v15 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15 & 1;
}

uint64_t sub_24D959DDC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4449746E65726170 && a2 == 0xE800000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D959ED0(char a1)
{
  if (a1) {
    return 0x656D616E656C6966;
  }
  else {
    return 0x4449746E65726170;
  }
}

uint64_t sub_24D959F00()
{
  return sub_24D4358D4();
}

uint64_t sub_24D959F10()
{
  return sub_24DCCB048();
}

uint64_t sub_24D959F58()
{
  return sub_24D959ED0(*v0);
}

uint64_t sub_24D959F68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D959DDC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D959F98(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D959FEC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D95A040(void *a1, uint64_t a2)
{
  v13[0] = a2;
  v13[2] = *(void *)(a2 + 16);
  type metadata accessor for ItemStateVersion.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_24DCCAD58();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v13 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v7 = v13[1];
  sub_24DCCB0D8();
  LOBYTE(v14) = 0;
  uint64_t v8 = v13[3];
  sub_24DCCACF8();
  if (!v8)
  {
    uint64_t v9 = (uint64_t *)(v7 + *(int *)(v13[0] + 36));
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    uint64_t v14 = v11;
    uint64_t v15 = v10;
    char v16 = 1;
    sub_24D4ED694();
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t type metadata accessor for ItemStateVersion.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D95A21C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t v23 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v26 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ItemStateVersion.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_24DCCAC08();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v24 = v6;
  uint64_t v25 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v27 = a2;
  uint64_t v10 = type metadata accessor for ItemStateVersion();
  uint64_t v21 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v21 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v13 = v28;
  sub_24DCCB0B8();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v14 = v12;
  uint64_t v16 = v23;
  uint64_t v15 = v24;
  LOBYTE(v29) = 0;
  sub_24DCCAB98();
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v14, v26, v27);
  char v31 = 1;
  sub_24D4ED88C();
  sub_24DCCAB98();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v15);
  uint64_t v17 = v30;
  uint64_t v18 = &v14[*(int *)(v10 + 36)];
  *(void *)uint64_t v18 = v29;
  *((void *)v18 + 1) = v17;
  uint64_t v19 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v22, v14, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v14, v10);
}

uint64_t sub_24D95A5AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D9595C0(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_24D95A5BC(void *a1)
{
  a1[1] = swift_getWitnessTable();
  a1[2] = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  a1[3] = result;
  return result;
}

uint64_t sub_24D95A640(uint64_t a1, uint64_t a2)
{
  return sub_24D959B5C(a1, a2);
}

uint64_t sub_24D95A64C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D95A21C(a1, *(void *)(a2 + 16), a3);
}

uint64_t sub_24D95A66C(void *a1, uint64_t a2)
{
  return sub_24D95A040(a1, a2);
}

void sub_24D95A684()
{
}

void sub_24D95A694()
{
}

void sub_24D95A6A4()
{
}

uint64_t sub_24D95A6B4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24D95A74C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_24D95A850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24D95A8E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24D95A960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

void sub_24D95AA00(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x24D95ABE0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          uint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_24D95AC08()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for ItemMetadata();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24D95ACDC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v70 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v70 - 8);
  int v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v69 = v8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v12 = *(void *)(*(void *)(v70 - 8) + 64);
  }
  else {
    size_t v12 = v11 + 1;
  }
  unsigned int v13 = v9 | *(_DWORD *)(v6 + 80) & 0xF8;
  int v14 = (*(_DWORD *)(v6 + 80) | v9) & 0x100000;
  BOOL v15 = v13 <= 7 && v14 == 0;
  if (v15
    && (uint64_t v16 = v10 | 7,
        uint64_t v17 = v10 + 12,
        ((v10 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(v10 | 7))
      + ((((((((((v12
                + 7
                + ((v10
                  + 10
                  + ((((((v11 + ((v11 + v10 + ((v10 + 12) & ~v10)) & ~v10) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v10)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16 <= 0x18))
  {
    uint64_t v66 = v10 + 10;
    size_t v67 = v12 + 7;
    size_t __n = v12;
    uint64_t v65 = v11 + v10;
    uint64_t v18 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    uint64_t v68 = a1;
    uint64_t v19 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    void *v19 = *v20;
    v19[1] = v20[1];
    uint64_t v21 = ((unint64_t)v19 + v16 + 16) & ~v16;
    uint64_t v22 = ((unint64_t)v20 + v16 + 16) & ~v16;
    *(unsigned char *)uint64_t v21 = *(unsigned char *)v22;
    uint64_t v23 = v21 | 4;
    int v24 = *(_DWORD *)(v22 | 4);
    *(unsigned char *)(v23 + 4) = *(unsigned char *)((v22 | 4) + 4);
    *(_DWORD *)uint64_t v23 = v24;
    *(_WORD *)(v21 + 10) = *(_WORD *)(v22 + 10);
    uint64_t v25 = (v17 + v21) & v18;
    uint64_t v26 = (v17 + v22) & v18;
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t))(v69 + 16);
    swift_bridgeObjectRetain();
    v27(v25, v26, v70);
    uint64_t v28 = (v65 + v25) & v18;
    uint64_t v29 = (v65 + v26) & v18;
    v27(v28, v29, v70);
    uint64_t v30 = (unsigned char *)(v28 + v11);
    *uint64_t v30 = *(unsigned char *)(v29 + v11);
    v30[1] = *(unsigned char *)(v29 + v11 + 1);
    v30[2] = *(unsigned char *)(v29 + v11 + 2);
    v30[3] = *(unsigned char *)(v29 + v11 + 3);
    v30[4] = *(unsigned char *)(v29 + v11 + 4);
    unint64_t v31 = (v28 + v11 + 12) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v29 + v11 + 12) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v31 = *(void *)v32;
    *(void *)(v31 + 8) = *(void *)(v32 + 8);
    *(unsigned char *)(v31 + 16) = *(unsigned char *)(v32 + 16);
    *(unsigned char *)(v31 + 17) = *(unsigned char *)(v32 + 17);
    *(unsigned char *)(v31 + 18) = *(unsigned char *)(v32 + 18);
    *(unsigned char *)(v31 + 19) = *(unsigned char *)(v32 + 19);
    unint64_t v33 = (v31 + 27) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v32 + 27) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v33 = *(void *)v34;
    *(unsigned char *)(v33 + 8) = *(unsigned char *)(v34 + 8);
    *(unsigned char *)(v33 + 9) = *(unsigned char *)(v34 + 9);
    *(unsigned char *)(v33 + 10) = *(unsigned char *)(v34 + 10);
    *(unsigned char *)(v33 + 11) = *(unsigned char *)(v34 + 11);
    *(unsigned char *)(v33 + 12) = *(unsigned char *)(v34 + 12);
    uint64_t v35 = (void *)((v32 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v36 = (void *)((v31 + 47) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v36 = *v35;
    unint64_t v37 = ((unint64_t)v36 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = ((unint64_t)v35 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v37 = *(void *)v38;
    *(unsigned char *)(v37 + 8) = *(unsigned char *)(v38 + 8);
    *(unsigned char *)(v37 + 9) = *(unsigned char *)(v38 + 9);
    uint64_t v39 = (void *)((v66 + v37) & v18);
    uint64_t v40 = (const void *)((v66 + v38) & v18);
    uint64_t v41 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v69 + 48);
    swift_bridgeObjectRetain();
    if (v41(v40, 1, v70))
    {
      memcpy(v39, v40, __n);
    }
    else
    {
      v27((uint64_t)v39, (uint64_t)v40, v70);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v69 + 56))(v39, 0, 1, v70);
    }
    unint64_t v44 = (void *)(((unint64_t)v39 + v67) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v45 = (void *)(((unint64_t)v40 + v67) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v44 = *v45;
    unint64_t v46 = ((unint64_t)v44 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v47 = ((unint64_t)v45 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v48 = *(void *)v47;
    *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
    *(void *)unint64_t v46 = v48;
    unint64_t v49 = (void *)(((unint64_t)v44 + 31) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v50 = (void *)(((unint64_t)v45 + 31) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v49 = *v50;
    unint64_t v51 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v52 = (uint64_t *)(((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v53 = v52[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v53 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v51 = *(_OWORD *)v52;
    }
    else
    {
      uint64_t v54 = *v52;
      sub_24D3F9C18(*v52, v53);
      *(void *)unint64_t v51 = v54;
      *(void *)(v51 + 8) = v53;
    }
    unint64_t v55 = (v51 + 19) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v56 = ((unint64_t)v52 + 19) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v57 = *(void *)v56;
    *(unsigned char *)(v55 + 8) = *(unsigned char *)(v56 + 8);
    *(void *)unint64_t v55 = v57;
    *(unsigned char *)(v55 + 9) = *(unsigned char *)(v56 + 9);
    unint64_t v58 = (v55 + 13) & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v59 = (v56 + 13) & 0xFFFFFFFFFFFFFFFCLL;
    int v60 = *(_DWORD *)v59;
    *(unsigned char *)(v58 + 4) = *(unsigned char *)(v59 + 4);
    *(_DWORD *)unint64_t v58 = v60;
    uint64_t v61 = (void *)((v55 + 25) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v62 = (void *)((v56 + 25) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v61 = *v62;
    v61[1] = v62[1];
    swift_bridgeObjectRetain();
    return v68;
  }
  else
  {
    uint64_t v42 = *a2;
    *a1 = *a2;
    uint64_t v43 = v42 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7));
    swift_retain();
  }
  return (uint64_t *)v43;
}

uint64_t sub_24D95B218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v65 = a1;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  unint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & v13;
  uint64_t v15 = ((unint64_t)v8 + v12 + 16) & v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  char v16 = *(unsigned char *)(v15 + 8);
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  *(unsigned char *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 10) = *(_WORD *)(v15 + 10);
  uint64_t v17 = (v12 + 12 + v14) & ~v12;
  uint64_t v18 = (v12 + 12 + v15) & ~v12;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v19(v17, v18, v9);
  size_t v20 = *(void *)(v10 + 64);
  uint64_t v21 = (v20 + v12 + v17) & ~v12;
  v19(v21, (v20 + v12 + v18) & ~v12, v9);
  uint64_t v22 = (unsigned char *)(v21 + v20);
  uint64_t v23 = (unsigned char *)(((v20 + v12 + v18) & ~v12) + v20);
  *uint64_t v22 = *v23;
  v22[1] = v23[1];
  v22[2] = v23[2];
  v22[3] = v23[3];
  v22[4] = v23[4];
  unint64_t v24 = (v21 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (unint64_t)(v23 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  *(unsigned char *)(v24 + 18) = *(unsigned char *)(v25 + 18);
  *(unsigned char *)(v24 + 19) = *(unsigned char *)(v25 + 19);
  unint64_t v26 = (v24 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v25 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(unsigned char *)(v26 + 9) = *(unsigned char *)(v27 + 9);
  *(unsigned char *)(v26 + 10) = *(unsigned char *)(v27 + 10);
  *(unsigned char *)(v26 + 11) = *(unsigned char *)(v27 + 11);
  *(unsigned char *)(v26 + 12) = *(unsigned char *)(v27 + 12);
  uint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)((v25 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v28 = *v29;
  unint64_t v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(unsigned char *)(v30 + 9) = *(unsigned char *)(v31 + 9);
  unint64_t v32 = (void *)((v12 + 10 + v30) & ~v12);
  unint64_t v33 = (void *)((v12 + 10 + v31) & ~v12);
  unint64_t v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v25) = v34(v32, 1, v9);
  int v35 = v34(v33, 1, v9);
  if (v25)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 16))(v32, v33, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v9);
      goto LABEL_12;
    }
    int v36 = *(_DWORD *)(v11 + 84);
  }
  else
  {
    if (!v35)
    {
      v19((uint64_t)v32, (uint64_t)v33, v9);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v32, v9);
    int v36 = *(_DWORD *)(v11 + 84);
  }
  if (v36) {
    size_t v37 = v20;
  }
  else {
    size_t v37 = v20 + 1;
  }
  memcpy(v32, v33, v37);
LABEL_12:
  if (*(_DWORD *)(v11 + 84)) {
    size_t v38 = v20;
  }
  else {
    size_t v38 = v20 + 1;
  }
  uint64_t v39 = (uint64_t)v32 + v38 + 7;
  uint64_t v40 = (void *)(((unint64_t)v33 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = (v39 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v39 & 0xFFFFFFFFFFFFFFF8) = *v40;
  unint64_t v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v43 = v41 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v44 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = *(void *)v44;
  *(unsigned char *)(v43 + 8) = *(unsigned char *)(v44 + 8);
  *(void *)unint64_t v43 = v45;
  unint64_t v46 = (void *)(((unint64_t)v40 + 31) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v42 & 0xFFFFFFFFFFFFFFF8) = *v46;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v47 = (uint64_t *)(((v42 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (uint64_t *)(((unint64_t)v46 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v49 = v47[1];
  unint64_t v50 = v48[1];
  uint64_t v51 = v50 & 0x3000000000000000;
  if ((v49 & 0x3000000000000000) == 0)
  {
    if (!v51)
    {
      uint64_t v62 = *v48;
      sub_24D3F9C18(*v48, v50);
      uint64_t v63 = *v47;
      unint64_t v64 = v47[1];
      *unint64_t v47 = v62;
      v47[1] = v50;
      sub_24D400DCC(v63, v64);
      goto LABEL_21;
    }
    sub_24D400DCC(*v47, v49);
    goto LABEL_20;
  }
  if (v51)
  {
LABEL_20:
    *(_OWORD *)unint64_t v47 = *(_OWORD *)v48;
    goto LABEL_21;
  }
  uint64_t v52 = *v48;
  sub_24D3F9C18(*v48, v50);
  *unint64_t v47 = v52;
  v47[1] = v50;
LABEL_21:
  unint64_t v53 = ((unint64_t)v47 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = ((unint64_t)v48 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = *(void *)v54;
  *(unsigned char *)(v53 + 8) = *(unsigned char *)(v54 + 8);
  *(void *)unint64_t v53 = v55;
  *(unsigned char *)(v53 + 9) = *(unsigned char *)(v54 + 9);
  unint64_t v56 = (v53 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v57 = (v54 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v58 = *(_DWORD *)v57;
  *(unsigned char *)(v56 + 4) = *(unsigned char *)(v57 + 4);
  *(_DWORD *)unint64_t v56 = v58;
  unint64_t v59 = (void *)((v53 + 25) & 0xFFFFFFFFFFFFFFF8);
  int v60 = (void *)((v54 + 25) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return v65;
}

uint64_t sub_24D95B71C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  uint64_t v7 = (_OWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (_OWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  unint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & v13;
  uint64_t v15 = ((unint64_t)v8 + v12 + 16) & v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  char v16 = *(unsigned char *)(v15 + 8);
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  *(unsigned char *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 10) = *(_WORD *)(v15 + 10);
  uint64_t v17 = (v12 + 12 + v14) & ~v12;
  uint64_t v18 = (v12 + 12 + v15) & ~v12;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 32);
  v19(v17, v18, v9);
  size_t v20 = *(void *)(v10 + 64);
  uint64_t v21 = (v20 + v12 + v17) & ~v12;
  uint64_t v22 = (v20 + v12 + v18) & ~v12;
  v19(v21, v22, v9);
  uint64_t v23 = (unsigned char *)(v21 + v20);
  *uint64_t v23 = *(unsigned char *)(v22 + v20);
  v23[1] = *(unsigned char *)(v22 + v20 + 1);
  v23[2] = *(unsigned char *)(v22 + v20 + 2);
  v23[3] = *(unsigned char *)(v22 + v20 + 3);
  v23[4] = *(unsigned char *)(v22 + v20 + 4);
  unint64_t v24 = (v21 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v22 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v24 = *(_OWORD *)v25;
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  *(unsigned char *)(v24 + 18) = *(unsigned char *)(v25 + 18);
  *(unsigned char *)(v24 + 19) = *(unsigned char *)(v25 + 19);
  unint64_t v26 = (v24 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v25 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(unsigned char *)(v26 + 9) = *(unsigned char *)(v27 + 9);
  *(unsigned char *)(v26 + 10) = *(unsigned char *)(v27 + 10);
  *(unsigned char *)(v26 + 11) = *(unsigned char *)(v27 + 11);
  *(unsigned char *)(v26 + 12) = *(unsigned char *)(v27 + 12);
  uint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)((v25 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v28 = *v29;
  unint64_t v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(unsigned char *)(v30 + 9) = *(unsigned char *)(v31 + 9);
  unint64_t v32 = (void *)((v12 + 10 + v30) & ~v12);
  unint64_t v33 = (const void *)((v12 + 10 + v31) & ~v12);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v33, 1, v9))
  {
    int v34 = *(_DWORD *)(v11 + 84);
    if (v34) {
      size_t v35 = v20;
    }
    else {
      size_t v35 = v20 + 1;
    }
    memcpy(v32, v33, v35);
  }
  else
  {
    v19((uint64_t)v32, (uint64_t)v33, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v9);
    int v34 = *(_DWORD *)(v11 + 84);
  }
  if (v34) {
    size_t v36 = v20;
  }
  else {
    size_t v36 = v20 + 1;
  }
  size_t v37 = (void *)(((unint64_t)v32 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  size_t v38 = (void *)(((unint64_t)v33 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
  *size_t v37 = *v38;
  unint64_t v39 = ((unint64_t)v37 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = ((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
  *(void *)unint64_t v39 = v41;
  unint64_t v42 = (void *)(((unint64_t)v37 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v43 = (void *)(((unint64_t)v38 + 31) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v42 = *v43;
  unint64_t v44 = (_OWORD *)(((unint64_t)v42 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v45 = (_OWORD *)(((unint64_t)v43 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v44 = *v45;
  unint64_t v46 = ((unint64_t)v44 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = ((unint64_t)v45 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = *(void *)v47;
  *(unsigned char *)(v46 + 8) = *(unsigned char *)(v47 + 8);
  *(void *)unint64_t v46 = v48;
  *(unsigned char *)(v46 + 9) = *(unsigned char *)(v47 + 9);
  unint64_t v49 = (v46 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v50 = (v47 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v41) = *(_DWORD *)v50;
  *(unsigned char *)(v49 + 4) = *(unsigned char *)(v50 + 4);
  *(_DWORD *)unint64_t v49 = v41;
  *(_OWORD *)((v46 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v47 + 25) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24D95BAD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  uint64_t v63 = a1;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = v10;
  uint64_t v12 = *(_DWORD *)(v10 + 80);
  unint64_t v13 = *(_DWORD *)(v10 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = ((unint64_t)v7 + v12 + 16) & v13;
  uint64_t v15 = ((unint64_t)v8 + v12 + 16) & v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  char v16 = *(unsigned char *)(v15 + 8);
  *(_DWORD *)(v14 + 4) = *(_DWORD *)(v15 + 4);
  *(unsigned char *)(v14 + 8) = v16;
  *(_WORD *)(v14 + 10) = *(_WORD *)(v15 + 10);
  uint64_t v17 = (v12 + 12 + v14) & ~v12;
  uint64_t v18 = (v12 + 12 + v15) & ~v12;
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v19(v17, v18, v9);
  size_t v20 = *(void *)(v10 + 64);
  uint64_t v21 = (v20 + v12 + v17) & ~v12;
  uint64_t v22 = (v20 + v12 + v18) & ~v12;
  v19(v21, v22, v9);
  uint64_t v23 = (unsigned char *)(v21 + v20);
  *uint64_t v23 = *(unsigned char *)(v22 + v20);
  v23[1] = *(unsigned char *)(v22 + v20 + 1);
  v23[2] = *(unsigned char *)(v22 + v20 + 2);
  v23[3] = *(unsigned char *)(v22 + v20 + 3);
  v23[4] = *(unsigned char *)(v22 + v20 + 4);
  unint64_t v24 = (v21 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v22 + v20 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v24 = *(void *)v25;
  *(void *)(v24 + 8) = *(void *)(v25 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v24 + 16) = *(unsigned char *)(v25 + 16);
  *(unsigned char *)(v24 + 17) = *(unsigned char *)(v25 + 17);
  *(unsigned char *)(v24 + 18) = *(unsigned char *)(v25 + 18);
  *(unsigned char *)(v24 + 19) = *(unsigned char *)(v25 + 19);
  unint64_t v26 = (v24 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = (v25 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v26 = *(void *)v27;
  *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
  *(unsigned char *)(v26 + 9) = *(unsigned char *)(v27 + 9);
  *(unsigned char *)(v26 + 10) = *(unsigned char *)(v27 + 10);
  *(unsigned char *)(v26 + 11) = *(unsigned char *)(v27 + 11);
  *(unsigned char *)(v26 + 12) = *(unsigned char *)(v27 + 12);
  uint64_t v28 = (void *)((v24 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v29 = (void *)((v25 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v28 = *v29;
  unint64_t v30 = ((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = ((unint64_t)v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(unsigned char *)(v30 + 9) = *(unsigned char *)(v31 + 9);
  unint64_t v32 = (void *)((v12 + 10 + v30) & ~v12);
  unint64_t v33 = (void *)((v12 + 10 + v31) & ~v12);
  int v34 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(v18) = v34(v32, 1, v9);
  int v35 = v34(v33, 1, v9);
  if (v18)
  {
    if (!v35)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v32, v33, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v9);
      goto LABEL_12;
    }
    int v36 = *(_DWORD *)(v11 + 84);
  }
  else
  {
    if (!v35)
    {
      v19((uint64_t)v32, (uint64_t)v33, v9);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v32, v9);
    int v36 = *(_DWORD *)(v11 + 84);
  }
  if (v36) {
    size_t v37 = v20;
  }
  else {
    size_t v37 = v20 + 1;
  }
  memcpy(v32, v33, v37);
LABEL_12:
  if (*(_DWORD *)(v11 + 84)) {
    size_t v38 = v20;
  }
  else {
    size_t v38 = v20 + 1;
  }
  uint64_t v39 = (uint64_t)v32 + v38 + 7;
  unint64_t v40 = (void *)(((unint64_t)v33 + v38 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = (unint64_t)v40 + 31;
  unint64_t v42 = (v39 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v39 & 0xFFFFFFFFFFFFFFF8) = *v40;
  unint64_t v43 = (v39 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRelease();
  unint64_t v44 = v42 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v45 = ((unint64_t)v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v46 = *(void *)v45;
  *(unsigned char *)(v44 + 8) = *(unsigned char *)(v45 + 8);
  *(void *)unint64_t v44 = v46;
  unint64_t v47 = (void *)(v43 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v48 = (v41 & 0xFFFFFFFFFFFFFFF8) + 15;
  *unint64_t v47 = *(void *)(v41 & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  unint64_t v49 = (uint64_t *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v50 = (uint64_t *)(v48 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v51 = v49[1];
  if ((v51 & 0x3000000000000000) == 0)
  {
    uint64_t v52 = v50[1];
    if ((v52 & 0x3000000000000000) == 0)
    {
      uint64_t v62 = *v49;
      *unint64_t v49 = *v50;
      v49[1] = v52;
      sub_24D400DCC(v62, v51);
      goto LABEL_19;
    }
    sub_24D400DCC(*v49, v51);
  }
  *(_OWORD *)unint64_t v49 = *(_OWORD *)v50;
LABEL_19:
  unint64_t v53 = ((unint64_t)v49 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v54 = ((unint64_t)v50 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v55 = *(void *)v54;
  *(unsigned char *)(v53 + 8) = *(unsigned char *)(v54 + 8);
  *(void *)unint64_t v53 = v55;
  *(unsigned char *)(v53 + 9) = *(unsigned char *)(v54 + 9);
  unint64_t v56 = (v53 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v57 = (v54 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v58 = *(_DWORD *)v57;
  *(unsigned char *)(v56 + 4) = *(unsigned char *)(v57 + 4);
  *(_DWORD *)unint64_t v56 = v58;
  unint64_t v59 = (void *)((v53 + 25) & 0xFFFFFFFFFFFFFFF8);
  int v60 = (void *)((v54 + 25) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v59 = *v60;
  v59[1] = v60[1];
  swift_bridgeObjectRelease();
  return v63;
}

uint64_t sub_24D95BF88(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = *(void *)(sub_24DCC8CE8() - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = *(void *)(v8 + 64);
  if (v9 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  if (v7 <= v13) {
    unsigned int v14 = v13;
  }
  else {
    unsigned int v14 = v7;
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  if (v9) {
    uint64_t v16 = 7;
  }
  else {
    uint64_t v16 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = v11 | 7;
  uint64_t v18 = v11 + 12;
  uint64_t v19 = v12 + v11;
  uint64_t v20 = v12 + 12;
  if (v15 < a2)
  {
    unint64_t v21 = ((v11 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v17)
        + ((((((((((v16
                  + v12
                  + ((v11
                    + ((((((v20 + ((v19 + (v18 & ~v11)) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)
                    + 10) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v21 & 0xFFFFFFF8) != 0) {
      unsigned int v22 = 2;
    }
    else {
      unsigned int v22 = a2 - v15 + 1;
    }
    if (v22 >= 0x10000) {
      unsigned int v23 = 4;
    }
    else {
      unsigned int v23 = 2;
    }
    if (v22 < 0x100) {
      unsigned int v23 = 1;
    }
    if (v22 >= 2) {
      uint64_t v24 = v23;
    }
    else {
      uint64_t v24 = 0;
    }
    switch(v24)
    {
      case 1:
        int v25 = *((unsigned __int8 *)a1 + v21);
        if (!*((unsigned char *)a1 + v21)) {
          break;
        }
        goto LABEL_31;
      case 2:
        int v25 = *(unsigned __int16 *)((char *)a1 + v21);
        if (*(_WORD *)((char *)a1 + v21)) {
          goto LABEL_31;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D95C2C4);
      case 4:
        int v25 = *(_DWORD *)((char *)a1 + v21);
        if (!v25) {
          break;
        }
LABEL_31:
        int v27 = v25 - 1;
        if ((v21 & 0xFFFFFFF8) != 0)
        {
          int v27 = 0;
          int v28 = *a1;
        }
        else
        {
          int v28 = 0;
        }
        return v15 + (v28 | v27) + 1;
      default:
        break;
    }
  }
  if (v7 == v15)
  {
    uint64_t v29 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v6 + 48);
    return v29(a1, v7, v5);
  }
  else
  {
    unint64_t v30 = ((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
    if ((v14 & 0x80000000) != 0)
    {
      uint64_t v32 = (v18 + ((v30 + v17 + 16) & ~v17)) & ~v11;
      if (v9 < 0x7FFFFFFE)
      {
        unint64_t v34 = *(void *)(((v20 + ((v19 + v32) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v34 >= 0xFFFFFFFF) {
          LODWORD(v34) = -1;
        }
        if ((v34 + 1) >= 2) {
          return v34;
        }
        else {
          return 0;
        }
      }
      else
      {
        unint64_t v33 = *(uint64_t (**)(uint64_t))(v8 + 48);
        return v33(v32);
      }
    }
    else
    {
      unint64_t v31 = *(void *)(v30 + 8);
      if (v31 >= 0xFFFFFFFF) {
        LODWORD(v31) = -1;
      }
      return (v31 + 1);
    }
  }
}

void sub_24D95C2D8(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v36 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(sub_24DCC8CE8() - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v14 = *(void *)(v10 + 64);
  if (v11 <= 0x7FFFFFFE) {
    unsigned int v15 = 2147483646;
  }
  else {
    unsigned int v15 = *(_DWORD *)(v10 + 84);
  }
  if (v9 <= v15) {
    unsigned int v16 = v15;
  }
  else {
    unsigned int v16 = v9;
  }
  if (v16 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v16;
  }
  uint64_t v18 = v13 | 7;
  uint64_t v19 = v13 + 12;
  uint64_t v20 = v14 + v13;
  uint64_t v21 = v14 + 12;
  unint64_t v22 = (v13
       + ((((((v14 + 12 + ((v14 + v13 + ((v13 + 12) & ~v13)) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v13;
  if (!v11) {
    ++v14;
  }
  size_t v23 = ((v13 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(v13 | 7))
      + ((((((((((v14 + v22 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v17 >= a3)
  {
    int v26 = 0;
    int v27 = a2 - v17;
    if (a2 <= v17)
    {
LABEL_25:
      uint64_t v28 = ~v13;
      switch(v26)
      {
        case 1:
          *((unsigned char *)a1 + v23) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_38;
        case 2:
          *(_WORD *)((char *)a1 + v23) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_38;
        case 3:
          goto LABEL_58;
        case 4:
          *(_DWORD *)((char *)a1 + v23) = 0;
          goto LABEL_37;
        default:
LABEL_37:
          if (a2)
          {
LABEL_38:
            if (v9 == v17)
            {
              unint64_t v31 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v36 + 56);
              v31(a1, a2, v9, v7);
            }
            else
            {
              uint64_t v32 = (void *)(((unint64_t)a1 + v12 + 7) & 0xFFFFFFFFFFFFFFF8);
              if ((v16 & 0x80000000) != 0)
              {
                uint64_t v33 = (v19 + (((unint64_t)v32 + v18 + 16) & ~v18)) & v28;
                if (v11 < 0x7FFFFFFE)
                {
                  int v35 = (void *)((v21 + ((v20 + v33) & v28)) & 0xFFFFFFFFFFFFFFF8);
                  if (a2 > 0x7FFFFFFE)
                  {
                    *int v35 = 0;
                    v35[1] = 0;
                    *(_DWORD *)int v35 = a2 - 0x7FFFFFFF;
                  }
                  else
                  {
                    v35[1] = a2;
                  }
                }
                else
                {
                  unint64_t v34 = *(void (**)(uint64_t, uint64_t))(v10 + 56);
                  v34(v33, a2);
                }
              }
              else if ((a2 & 0x80000000) != 0)
              {
                void *v32 = a2 ^ 0x80000000;
                v32[1] = 0;
              }
              else
              {
                v32[1] = (a2 - 1);
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v13 + ((v12 + 7) & 0xFFFFFFF8) + 16) & ~(v13 | 7))
       + ((((((((((v14 + v22 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8)
         + 25) & 0xFFFFFFF8) == -16)
      unsigned int v24 = a3 - v17 + 1;
    else {
      unsigned int v24 = 2;
    }
    if (v24 >= 0x10000) {
      int v25 = 4;
    }
    else {
      int v25 = 2;
    }
    if (v24 < 0x100) {
      int v25 = 1;
    }
    if (v24 >= 2) {
      int v26 = v25;
    }
    else {
      int v26 = 0;
    }
    int v27 = a2 - v17;
    if (a2 <= v17) {
      goto LABEL_25;
    }
  }
  if (v23) {
    int v29 = 1;
  }
  else {
    int v29 = v27;
  }
  if (v23)
  {
    int v30 = ~v17 + a2;
    bzero(a1, v23);
    *a1 = v30;
  }
  switch(v26)
  {
    case 1:
      *((unsigned char *)a1 + v23) = v29;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v23) = v29;
      break;
    case 3:
LABEL_58:
      __break(1u);
      JUMPOUT(0x24D95C67CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v23) = v29;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for ItemState()
{
  return __swift_instantiateGenericMetadata();
}

unsigned char *sub_24D95C6BC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D95C788);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_24D95C7B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D95C7CC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D95C7E8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D95C808(uint64_t result)
{
  return result;
}

uint64_t sub_24D95C810(char a1)
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x6C65446568636163;
      break;
    case 2:
      uint64_t result = 1919251317;
      break;
    case 3:
      uint64_t result = 0x697461646E756F66;
      break;
    case 4:
      uint64_t result = 28774;
      break;
    case 5:
      uint64_t result = 0x705565746F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D95C8E0()
{
  uint64_t result = 0x6E776F6E6B6E75;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6C65446568636163;
      break;
    case 2:
      uint64_t result = 1919251317;
      break;
    case 3:
      uint64_t result = 0x697461646E756F66;
      break;
    case 4:
      uint64_t result = 28774;
      break;
    case 5:
      uint64_t result = 0x705565746F6D6572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D95C9A8()
{
  return sub_24DCC9BD8();
}

uint64_t sub_24D95CA08()
{
  return sub_24DCC9B68();
}

unint64_t sub_24D95CA5C()
{
  unint64_t result = qword_26986FC98;
  if (!qword_26986FC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FC98);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EvictionReasons(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D95CB7CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EvictionReasons()
{
  return &type metadata for EvictionReasons;
}

unint64_t sub_24D95CBB4()
{
  unint64_t result = qword_26986FCA0;
  if (!qword_26986FCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FCA0);
  }
  return result;
}

void **sub_24D95CC08(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
    uint64_t v9 = (char *)v7 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_24DCC8A58();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v14 = v4;
    v13(v9, v10, v11);
    uint64_t v15 = *(int *)(a3 + 20);
    unsigned int v16 = (char *)v7 + v15;
    unsigned int v17 = (char *)a2 + v15;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      v13(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = *(int *)(a3 + 24);
    uint64_t v20 = (char *)v7 + v19;
    uint64_t v21 = (char *)a2 + v19;
    unint64_t v22 = *((void *)v21 + 1);
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
    else
    {
      uint64_t v23 = *(void *)v21;
      sub_24D3F9C18(*(void *)v21, *((void *)v21 + 1));
      *(void *)uint64_t v20 = v23;
      *((void *)v20 + 1) = v22;
    }
  }
  return v7;
}

uint64_t type metadata accessor for StagedRemoteVersion(uint64_t a1)
{
  return sub_24D3FC810(a1, (uint64_t *)&unk_26986FCB8);
}

uint64_t sub_24D95CE0C(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  uint64_t v5 = sub_24DCC8A58();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(char *, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5);
  if (!result) {
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v7)(v8, v5);
  }
  uint64_t v10 = (uint64_t *)((char *)a1 + *(int *)(a2 + 24));
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15)
  {
    uint64_t v12 = *v10;
    return sub_24D400DCC(v12, v11);
  }
  return result;
}

void **sub_24D95CF34(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  id v13 = v6;
  v12(v8, v9, v10);
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = (char *)a1 + v14;
  unsigned int v16 = (char *)a2 + v14;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))((char *)a2 + v14, 1, v10))
  {
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    v12(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  uint64_t v18 = *(int *)(a3 + 24);
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  unint64_t v21 = *((void *)v20 + 1);
  if (v21 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  }
  else
  {
    uint64_t v22 = *(void *)v20;
    sub_24D3F9C18(*(void *)v20, *((void *)v20 + 1));
    *(void *)uint64_t v19 = v22;
    *((void *)v19 + 1) = v21;
  }
  return a1;
}

void **sub_24D95D0CC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_24DCC8A58();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v13 + 24);
  v14(v10, v11, v12);
  uint64_t v30 = a3;
  unint64_t v31 = a2;
  uint64_t v15 = *(int *)(a3 + 20);
  unsigned int v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  LODWORD(a3) = v18((char *)a1 + v15, 1, v12);
  int v19 = v18(v17, 1, v12);
  if (a3)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v17, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
LABEL_6:
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  v14(v16, v17, v12);
LABEL_7:
  uint64_t v21 = *(int *)(v30 + 24);
  uint64_t v22 = (uint64_t *)((char *)a1 + v21);
  uint64_t v23 = (uint64_t *)((char *)v31 + v21);
  unint64_t v24 = *(unint64_t *)((char *)v31 + v21 + 8);
  if (*(unint64_t *)((char *)a1 + v21 + 8) >> 60 != 15)
  {
    if (v24 >> 60 != 15)
    {
      uint64_t v26 = *v23;
      sub_24D3F9C18(v26, v24);
      uint64_t v27 = *v22;
      unint64_t v28 = v22[1];
      *uint64_t v22 = v26;
      v22[1] = v24;
      sub_24D400DCC(v27, v28);
      return a1;
    }
    sub_24D4B12A0((uint64_t)v22);
    goto LABEL_12;
  }
  if (v24 >> 60 == 15)
  {
LABEL_12:
    *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
    return a1;
  }
  uint64_t v25 = *v23;
  sub_24D3F9C18(v25, v24);
  *uint64_t v22 = v25;
  v22[1] = v24;
  return a1;
}

void *sub_24D95D320(void *a1, char *a2, uint64_t a3)
{
  *a1 = *(void *)a2;
  uint64_t v6 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = &a2[v6];
  uint64_t v9 = sub_24DCC8A58();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

void **sub_24D95D484(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(type metadata accessor for StagedRemoteVersion(0) + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v26 = a3;
  uint64_t v27 = a2;
  uint64_t v13 = *(int *)(a3 + 20);
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  unsigned int v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  LODWORD(a3) = v16((char *)a1 + v13, 1, v10);
  int v17 = v16(v15, 1, v10);
  if (a3)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v15, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v12(v14, v15, v10);
LABEL_7:
  uint64_t v19 = *(int *)(v26 + 24);
  uint64_t v20 = (uint64_t *)((char *)a1 + v19);
  uint64_t v21 = (uint64_t *)((char *)v27 + v19);
  unint64_t v22 = *(unint64_t *)((char *)a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    unint64_t v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      uint64_t v24 = *v20;
      *uint64_t v20 = *v21;
      v20[1] = v23;
      sub_24D400DCC(v24, v22);
      return a1;
    }
    sub_24D4B12A0((uint64_t)v20);
  }
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  return a1;
}

uint64_t sub_24D95D6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D95D6B8);
}

uint64_t sub_24D95D6B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
  }
  else
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
    uint64_t v12 = *(void *)(v11 - 8);
    if (*(_DWORD *)(v12 + 84) != a2)
    {
      uint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
      BOOL v15 = ((4 * v14) & 0xC) == 0;
      unsigned int v16 = ((4 * v14) & 0xC | (v14 >> 2)) ^ 0xF;
      if (v15) {
        return 0;
      }
      else {
        return v16;
      }
    }
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  }

  return v9(v10, a2, v8);
}

uint64_t sub_24D95D7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D95D7F0);
}

uint64_t sub_24D95D7F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      BOOL v15 = (void *)(a1 + *(int *)(a4 + 24));
      *BOOL v15 = 0;
      v15[1] = (unint64_t)((~a2 >> 2) & 3 | (4 * ~a2)) << 60;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for GSConflictInfo(uint64_t a1)
{
  return sub_24D3FC810(a1, (uint64_t *)&unk_26986FCA8);
}

void sub_24D95D934()
{
  type metadata accessor for StagedRemoteVersion(319);
  if (v0 <= 0x3F)
  {
    sub_24D4FF82C();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void **sub_24D95DA04(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  unsigned int v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_24DCC8A58();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    uint64_t v11 = v4;
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_24D95DAE4(id *a1, uint64_t a2)
{
  unsigned int v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_24DCC8A58();
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void **sub_24D95DB5C(void **a1, void **a2, uint64_t a3)
{
  unsigned int v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = *(int *)(a3 + 20);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
  id v10 = v4;
  v9(v6, v7, v8);
  return a1;
}

void **sub_24D95DBF0(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  id v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_24DCC8A58();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

void *sub_24D95DC80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_24DCC8A58();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void **sub_24D95DCFC(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_24DCC8A58();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_24D95DD88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D95DD9C);
}

uint64_t sub_24D95DD9C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_24DCC8A58();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_24D95DE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D95DE60);
}

void *sub_24D95DE60(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_24DCC8A58();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_24D95DF08()
{
  uint64_t result = sub_24DCC8A58();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_24D95DFA4(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192308);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8A58();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = sub_24D95E30C();
  id v14 = *v1;
  id v15 = objc_msgSend(*v1, sel_displayName);
  uint64_t v16 = sub_24DCC97E8();
  uint64_t v32 = v17;

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  id v18 = objc_msgSend(v14, sel_itemID);
  id v19 = objc_msgSend(v14, sel_contentModificationDate);
  if (v19)
  {
    uint64_t v20 = v19;
    sub_24DCC8CA8();

    uint64_t v21 = sub_24DCC8CE8();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 0, 1, v21);
  }
  else
  {
    uint64_t v22 = sub_24DCC8CE8();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v8, 1, 1, v22);
  }
  id v23 = objc_msgSend(v14, sel_mostRecentEditorNameComponents);
  if (v23)
  {
    uint64_t v24 = v23;
    sub_24DCC8778();

    uint64_t v25 = sub_24DCC8788();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v5, 0, 1, v25);
  }
  else
  {
    uint64_t v26 = sub_24DCC8788();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 1, 1, v26);
  }
  id v27 = objc_msgSend(v14, sel_documentSize);
  id v28 = objc_allocWithZone(MEMORY[0x263F05470]);
  id v29 = sub_24D6C2520((uint64_t)v13, v16, v32, (uint64_t)v12, 0, (uint64_t)v18, (uint64_t)v8, (uint64_t)v5, (uint64_t)v27);

  return v29;
}

id sub_24D95E30C()
{
  sub_24D7C43F4((uint64_t *)v5);
  long long v9 = v5[0];
  long long v8 = *(_OWORD *)((char *)&v5[1] + 8);
  sub_24D95E42C((uint64_t)&v6, (uint64_t)v7);
  sub_24D5D7D58((uint64_t)&v9);
  sub_24D5D7D58((uint64_t)&v8);
  sub_24D43E368((uint64_t)v7);
  unint64_t v0 = (void *)sub_24DCC8B28();
  unint64_t v1 = (void *)sub_24DCC8B28();
  sub_24D95E42C((uint64_t)v7, (uint64_t)v10);
  if (v10[1])
  {
    unint64_t v2 = (void *)sub_24DCC97B8();
    sub_24D58F9DC((uint64_t)v7);
  }
  else
  {
    unint64_t v2 = 0;
  }
  id v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F055A8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v0, v1, v2);
  sub_24D5D7D88((uint64_t)&v8);
  sub_24D5D7D88((uint64_t)&v9);

  sub_24D5DA4D8((uint64_t *)v5);
  return v3;
}

uint64_t sub_24D95E42C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D80);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D95E494()
{
  id v1 = sub_24D95E30C();
  id v2 = *v0;
  id v3 = objc_msgSend(*v0, sel_itemID);
  id v4 = objc_msgSend(v2, sel_filename);
  sub_24DCC97E8();

  sub_24DB93950((uint64_t)&v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v5 = self;
  uint64_t v6 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_versionFaultName_identifier_ext_, v1, v3, v6);

  uint64_t v8 = sub_24DCC97E8();
  return v8;
}

unint64_t sub_24D95E5CC(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000015;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 6:
    case 7:
      unint64_t result = 0x626F4A726568746FLL;
      break;
    case 8:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_24D95E6C8()
{
  return sub_24D95E5CC(*v0);
}

uint64_t sub_24D95E6D0(void *a1, int a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = v7;
  uint64_t v57 = a4;
  id v58 = a5;
  uint64_t v47 = a3;
  uint64_t v13 = sub_24DCC9398();
  uint64_t v49 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  unint64_t v48 = (char *)v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24DCC92E8();
  uint64_t v54 = *(void *)(v15 - 8);
  uint64_t v55 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  unint64_t v53 = (void *)((char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v16);
  id v19 = (void *)((char *)v43 - v18);
  uint64_t v56 = sub_24DCC93E8();
  uint64_t v52 = *(void *)(v56 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v56);
  unint64_t v50 = (char *)v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  unint64_t v51 = (char *)v43 - v22;
  uint64_t v23 = sub_24DCCA248();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t result = MEMORY[0x270FA5388](v23);
  id v27 = (char *)v43 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v8 + 32) = 0;
  *(unsigned char *)(v8 + 40) = 0;
  *(void *)(v8 + 16) = a1;
  int v46 = a2;
  *(unsigned char *)(v8 + 24) = a2;
  uint64_t v28 = a1[2];
  BOOL v29 = __OFADD__(v28, 1);
  uint64_t v30 = v28 + 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    a1[2] = v30;
    *(void *)(v8 + 48) = a6;
    *(void *)(v8 + 56) = a7;
    if (a1[3] >= a1[5])
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v44 = v13;
      sub_24D41820C();
      uint64_t v59 = MEMORY[0x263F8EE78];
      sub_24D512BD8();
      swift_retain();
      uint64_t v45 = a7;
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193FA0);
      sub_24D95F528();
      sub_24DCCA5B8();
      uint64_t v31 = sub_24DCCA258();
      (*(void (**)(char *, uint64_t))(v24 + 8))(v27, v23);
      *(void *)(v8 + 32) = v31;
      swift_unknownObjectRelease();
      if (!*(void *)(v8 + 32)) {
        goto LABEL_7;
      }
      v43[0] = swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v32 = v50;
      sub_24DCC93C8();
      void *v19 = 300;
      uint64_t v34 = v54;
      uint64_t v33 = v55;
      (*(void (**)(void *, void, uint64_t))(v54 + 104))(v19, *MEMORY[0x263F8F018], v55);
      v43[1] = a1;
      int v35 = v51;
      MEMORY[0x2533274A0](v32, v19);
      uint64_t v36 = *(void (**)(void *, uint64_t))(v34 + 8);
      v36(v19, v33);
      uint64_t v54 = *(void *)(v52 + 8);
      ((void (*)(char *, uint64_t))v54)(v32, v56);
      uint64_t v37 = v43[0];
      sub_24D418110((uint64_t)v19);
      size_t v38 = v53;
      sub_24D418098(v53);
      MEMORY[0x2533283D0](v35, v19, v38, v37);
      swift_unknownObjectRelease();
      v36(v38, v33);
      v36(v19, v33);
      ((void (*)(char *, uint64_t))v54)(v35, v56);
      if (*(void *)(v8 + 32))
      {
        swift_getObjectType();
        uint64_t v39 = swift_allocObject();
        swift_weakInit();
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = v39;
        *(unsigned char *)(v40 + 24) = v46;
        uint64_t v41 = v57;
        *(void *)(v40 + 32) = v47;
        *(void *)(v40 + 40) = v41;
        swift_unknownObjectRetain();
        swift_retain();
        uint64_t v42 = (uint64_t)v48;
        sub_24D82F614();
        sub_24D3D6620(0, v42, (uint64_t)sub_24D95F5FC, v40);
        swift_unknownObjectRelease();
        swift_release();
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v42, v44);
        swift_release();
      }
      else
      {
LABEL_7:
        swift_bridgeObjectRelease();
      }
      if (*(void *)(v8 + 32))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_24DCCA298();
        swift_unknownObjectRelease();
      }
      swift_release();

      swift_release();
    }
    return v8;
  }
  return result;
}

uint64_t sub_24D95ECC0(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v7 = sub_24DCC9078();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v12 = result;
    if (*(void *)(result + 32))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_24DCCA288();
      swift_unknownObjectRelease();
      if (*(void *)(v12 + 32))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_24DCCA2B8();
        swift_unknownObjectRelease();
      }
    }
    *(void *)(v12 + 32) = 0;
    swift_unknownObjectRelease();
    id v13 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_bridgeObjectRetain_n();
    uint64_t v14 = sub_24DCC9068();
    os_log_type_t v15 = sub_24DCCA148();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v29 = a3;
      uint64_t v30 = v7;
      uint64_t v16 = 0xD000000000000014;
      uint64_t v17 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v32 = v28;
      *(_DWORD *)uint64_t v17 = 136446466;
      unint64_t v18 = 0x800000024DD13140;
      switch(a2)
      {
        case 1:
          id v19 = "fetchContentJobsForB";
          goto LABEL_17;
        case 2:
          uint64_t v16 = 0xD000000000000015;
          id v19 = "updateContentJobsForA";
          goto LABEL_17;
        case 3:
          uint64_t v16 = 0xD000000000000015;
          id v19 = "updateContentJobsForB";
          goto LABEL_17;
        case 4:
          uint64_t v16 = 0xD00000000000001ALL;
          id v19 = "updateMetadataOnlyJobsForA";
          goto LABEL_17;
        case 5:
          uint64_t v16 = 0xD00000000000001ALL;
          id v19 = "updateMetadataOnlyJobsForB";
          goto LABEL_17;
        case 6:
          uint64_t v20 = 0x41726F4673;
          goto LABEL_15;
        case 7:
          uint64_t v20 = 0x42726F4673;
LABEL_15:
          unint64_t v18 = v20 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          uint64_t v16 = 0x626F4A726568746FLL;
          break;
        case 8:
          uint64_t v16 = 0xD000000000000013;
          id v19 = "backgroundDownloads";
LABEL_17:
          unint64_t v18 = (unint64_t)(v19 - 32) | 0x8000000000000000;
          break;
        default:
          break;
      }
      uint64_t v31 = sub_24D418FB4(v16, v18, &v32);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v17 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_24D418FB4(v29, a4, &v32);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_24D3D0000, v14, v15, "job executing for more than 5 minutes, increasing limit for %{public}s: %{public}s", (uint8_t *)v17, 0x16u);
      uint64_t v21 = v28;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v21, -1, -1);
      MEMORY[0x25332B030](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v30);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    *(unsigned char *)(v12 + 40) = 1;
    uint64_t v22 = *(void *)(v12 + 16);
    uint64_t v23 = *(void *)(v22 + 24);
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
      JUMPOUT(0x24D95F0CCLL);
    }
    *(void *)(v22 + 24) = v25;
    uint64_t v26 = *(void (**)(uint64_t))(v12 + 48);
    uint64_t v27 = swift_retain();
    v26(v27);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24D95F0F0()
{
  if (*(void *)(v0 + 32))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24DCCA288();
    swift_unknownObjectRelease();
    if (*(void *)(v0 + 32))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      sub_24DCCA2B8();
      swift_unknownObjectRelease();
    }
  }
  *(void *)(v0 + 32) = 0;
  uint64_t result = swift_unknownObjectRelease();
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v2 + 16);
  BOOL v4 = __OFSUB__(v3, 1);
  uint64_t v5 = v3 - 1;
  if (v4)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v2 + 16) = v5;
    if (*(unsigned char *)(v0 + 40) != 1)
    {
LABEL_8:
      (*(void (**)(uint64_t))(v0 + 48))(result);
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      return v0;
    }
    uint64_t v6 = *(void *)(v2 + 24);
    BOOL v4 = __OFSUB__(v6, 1);
    uint64_t v7 = v6 - 1;
    if (!v4)
    {
      *(void *)(v2 + 24) = v7;
      goto LABEL_8;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24D95F1E4()
{
  sub_24D95F0F0();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JobLimitSlot()
{
  return self;
}

uint64_t sub_24D95F23C()
{
  sub_24DCCAD78();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v2 = v0[3];
  if (v2 == v0[5] && v2 != v0[4])
  {
    uint64_t result = sub_24DCC9968();
    uint64_t v2 = v0[3];
  }
  uint64_t v3 = v0[2];
  if (__OFSUB__(v2, v3))
  {
    __break(1u);
  }
  else
  {
    if (v2 == v3) {
      uint64_t v4 = 0x20919B9FF0;
    }
    else {
      uint64_t v4 = 545627362;
    }
    uint64_t v5 = v4;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v5;
  }
  return result;
}

uint64_t sub_24D95F374()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for JobLimit()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JobLimitCategory(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D95F474);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JobLimitCategory()
{
  return &type metadata for JobLimitCategory;
}

unint64_t sub_24D95F4B0()
{
  unint64_t result = qword_26986FCC8;
  if (!qword_26986FCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FCC8);
  }
  return result;
}

uint64_t sub_24D95F504()
{
  return sub_24D95F23C();
}

unint64_t sub_24D95F528()
{
  unint64_t result = qword_26B193FB0;
  if (!qword_26B193FB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B193FA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193FB0);
  }
  return result;
}

uint64_t sub_24D95F584()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_24D95F5BC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D95F5FC()
{
  return sub_24D95ECC0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D95F60C()
{
  return 500;
}

uint64_t sub_24D95F614()
{
  return 501;
}

uint64_t sub_24D95F61C()
{
  return 1002;
}

uint64_t sub_24D95F624()
{
  return 502;
}

uint64_t sub_24D95F62C()
{
  return 1001;
}

uint64_t sub_24D95F634()
{
  return 1000;
}

uint64_t sub_24D95F63C()
{
  return 1003;
}

unint64_t sub_24D95F644(uint64_t a1)
{
  if (a1 <= 500)
  {
    unint64_t result = 0x6574697265686E69;
    switch(a1)
    {
      case 0:
        return result;
      case 1:
        unint64_t result = 2038063468;
        break;
      case 2:
        unint64_t result = 0x7463697665;
        break;
      case 3:
        unint64_t result = 0x6E776F447065656BLL;
        break;
      default:
        if (a1 == 500)
        {
          unint64_t result = 0x63617073656D616ELL;
        }
        else
        {
LABEL_17:
          strcpy((char *)v3, "unsupported(");
          sub_24DCCAD78();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24DCC9968();
          unint64_t result = v3[0];
        }
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 1000:
      case 1001:
        unint64_t result = 0x63617073656D616ELL;
        break;
      case 1002:
        unint64_t result = 0xD000000000000016;
        break;
      case 1003:
        unint64_t result = 0xD00000000000001ELL;
        break;
      default:
        if (a1 == 501)
        {
          unint64_t result = 0xD000000000000011;
        }
        else
        {
          if (a1 != 502) {
            goto LABEL_17;
          }
          unint64_t result = 0xD000000000000014;
        }
        break;
    }
  }
  return result;
}

unint64_t sub_24D95F888()
{
  return sub_24D95F644(*v0);
}

uint64_t sub_24D95F890(char a1, uint64_t a2)
{
  if (a2 > 999)
  {
    if ((unint64_t)(a2 - 1000) < 2) {
      return a1 & 1;
    }
    a1 = 1;
    if (a2 == 1002) {
      return a1 & 1;
    }
    return 0;
  }
  if (a2 != 3)
  {
    if (a2 == 500) {
      return a1 & 1;
    }
    a1 = 1;
    if (a2 == 501) {
      return a1 & 1;
    }
    return 0;
  }
  return 1;
}

uint64_t sub_24D95F8EC(int a1, int a2, uint64_t a3)
{
  char v3 = 1;
  if (a3 > 999)
  {
    if ((unint64_t)(a3 - 1000) < 2) {
      return a1 & 1;
    }
    if (a3 != 1002) {
      return 0;
    }
    return v3 & 1;
  }
  if (a3 == 3) {
    return v3 & 1;
  }
  char v3 = a1;
  if (a3 == 500) {
    return v3 & 1;
  }
  if (a3 == 501) {
    return ((a2 | a1) ^ 1) & 1;
  }
  return 0;
}

uint64_t sub_24D95F954(uint64_t a1, uint64_t a2, char a3, unsigned __int8 a4)
{
  uint64_t v7 = sub_24D3FB354(a1, a2, 0, a3, a4, 0);
  uint64_t v8 = sub_24D3FB354(a2, 0, 1, a3, a4, 0);
  uint64_t v9 = 501;
  if (v8 == 3) {
    uint64_t v9 = 3;
  }
  if (v7 != 501) {
    uint64_t v9 = v7;
  }
  if (v9 == 1002 || v9 == 3) {
    unsigned int v11 = 5;
  }
  else {
    unsigned int v11 = 4;
  }
  if (v9 == 500) {
    return 0;
  }
  else {
    return v11;
  }
}

uint64_t sub_24D95F9E4()
{
  uint64_t result = type metadata accessor for ReconciliationID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D95FA80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v3);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v5, v12, v1);
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_24DCC9968();
    sub_24DCCADC8();
    sub_24DCC9968();
    uint64_t v14 = v16;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v12, v6);
    uint64_t v16 = 0;
    unint64_t v17 = 0xE000000000000000;
    sub_24DCC9968();
    sub_24DCCADC8();
    sub_24DCC9968();
    uint64_t v14 = v16;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  return v14;
}

uint64_t sub_24D95FD44@<X0>(int8x16_t *a1@<X0>, uint64_t a2@<X8>)
{
  MEMORY[0x270FA5388](a1);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = a1[1].i64[1];
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a2, v5, v7);
    uint64_t v8 = a1[1].i64[0];
    uint64_t v11 = v7;
    uint64_t v12 = v8;
  }
  else
  {
    uint64_t v9 = a1[1].i64[0];
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a2, v5, v9);
    uint64_t v11 = a1[1].i64[1];
    uint64_t v12 = v9;
  }
  int8x16_t v13 = vextq_s8(a1[2], a1[2], 8uLL);
  type metadata accessor for ReconciliationID();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24D95FEE8(uint64_t a1, uint64_t a2)
{
  sub_24DCCAFF8();
  sub_24D3E0C18((uint64_t)v4, a2);
  return sub_24DCCB048();
}

uint64_t sub_24D95FF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D3EC388(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
}

void sub_24D95FF40()
{
}

uint64_t sub_24D95FFAC()
{
  uint64_t result = type metadata accessor for ItemReconciliation();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D960054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  sub_24D9600A4(a1, a2);
  return v4;
}

uint64_t sub_24D9600A4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(void *)(*(void *)v2 + 112);
  uint64_t v6 = type metadata accessor for ItemReconciliation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(v5, a1, v6);
  *(void *)(v2 + *(void *)(*(void *)v2 + 120)) = a2;
  return v2;
}

uint64_t sub_24D960180()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 112);
  uint64_t v2 = type metadata accessor for ItemReconciliation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_24D960230()
{
  sub_24D960180();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReconciliationIDObjectCacheValue()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D9602A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24D96036C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    void *v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

unsigned __int8 *sub_24D960568(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_24D9607A8(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_24D96091C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_24D960B5C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_24D960CA0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x24D960E78);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24D960EA0(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_24D960F68(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t sub_24D961090()
{
  return swift_getWitnessTable();
}

void sub_24D9610AC()
{
}

uint64_t sub_24D9610DC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (!v1) {
    return v2;
  }
  uint64_t v26 = MEMORY[0x263F8EE78];
  sub_24D3E4C28(0, v1, 0);
  uint64_t v2 = v26;
  uint64_t result = sub_24D965F24(a1);
  uint64_t v6 = result;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  int64_t v22 = v1;
  int v23 = v5;
  uint64_t v24 = a1 + 64;
  while ((v6 & 0x8000000000000000) == 0 && v6 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v6 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v6 >> 6)) & (1 << v6)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v5) {
      goto LABEL_24;
    }
    uint64_t v12 = (uint64_t *)(*(void *)(a1 + 56) + 16 * v6);
    uint64_t v13 = v12[1];
    uint64_t v25 = *v12;
    unint64_t v15 = *(void *)(v26 + 16);
    unint64_t v14 = *(void *)(v26 + 24);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15 >= v14 >> 1) {
      uint64_t result = sub_24D3E4C28(v14 > 1, v15 + 1, 1);
    }
    *(void *)(v26 + 16) = v15 + 1;
    uint64_t v16 = v26 + 16 * v15;
    *(void *)(v16 + 32) = v25;
    *(void *)(v16 + 40) = v13;
    int64_t v9 = 1 << *(unsigned char *)(a1 + 32);
    if (v6 >= v9) {
      goto LABEL_25;
    }
    uint64_t v8 = a1 + 64;
    uint64_t v17 = *(void *)(v24 + 8 * v11);
    if ((v17 & (1 << v6)) == 0) {
      goto LABEL_26;
    }
    int v5 = v23;
    if (*(_DWORD *)(a1 + 36) != v23) {
      goto LABEL_27;
    }
    unint64_t v18 = v17 & (-2 << (v6 & 0x3F));
    if (v18)
    {
      int64_t v9 = __clz(__rbit64(v18)) | v6 & 0xFFFFFFFFFFFFFFC0;
      int64_t v10 = v22;
    }
    else
    {
      unint64_t v19 = v11 + 1;
      unint64_t v20 = (unint64_t)(v9 + 63) >> 6;
      int64_t v10 = v22;
      if (v11 + 1 < v20)
      {
        unint64_t v21 = *(void *)(v24 + 8 * v19);
        if (v21)
        {
LABEL_20:
          int64_t v9 = __clz(__rbit64(v21)) + (v19 << 6);
        }
        else
        {
          while (v20 - 2 != v11)
          {
            unint64_t v21 = *(void *)(a1 + 80 + 8 * v11++);
            if (v21)
            {
              unint64_t v19 = v11 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v7;
    uint64_t v6 = v9;
    if (v7 == v10) {
      return v2;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_24D9612E8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  int v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    uint64_t v4 = sub_24DCC9578();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_24D961390()
{
  type metadata accessor for GSConflictManager();
  uint64_t v0 = swift_allocObject();
  *(unsigned char *)(v0 + 24) = 0;
  type metadata accessor for GSRemoteVersionsManager();
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = objc_msgSend(objc_allocWithZone((Class)FPGSStorageManager), sel_init);
  *(void *)(v0 + 16) = v1;
  if (qword_26986A7A0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_26986A798;
  id v3 = (id)qword_26986FCD8;
  if (v2 != -1) {
    swift_once();
  }
  objc_msgSend(v3, sel_setUnderlyingQueue_, qword_26986FCD0);

  qword_269891660 = v0;
}

uint64_t *sub_24D961498()
{
  if (qword_26986A790 != -1) {
    swift_once();
  }
  return &qword_269891660;
}

uint64_t sub_24D9614E4()
{
  if (qword_26986A790 != -1) {
    swift_once();
  }

  return swift_retain();
}

uint64_t sub_24D961540()
{
  uint64_t v0 = sub_24DCCA1F8();
  uint64_t v20 = *(void *)(v0 - 8);
  uint64_t v21 = v0;
  MEMORY[0x270FA5388](v0);
  unint64_t v19 = (char *)v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24DCCA188();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  id v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)v18 - v7;
  uint64_t v9 = sub_24DCC9398();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  unint64_t v15 = (char *)v18 - v14;
  v18[1] = sub_24D3FB6F8(0, (unint64_t *)&qword_26B197E10);
  sub_24DCC9348();
  uint64_t v22 = MEMORY[0x263F8EE78];
  sub_24D419288((unint64_t *)&qword_26B199E08, MEMORY[0x263F8F0F8]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DE0);
  sub_24D739668();
  sub_24DCCA5B8();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
  (*(void (**)(char *, void, uint64_t))(v20 + 104))(v19, *MEMORY[0x263F8F138], v21);
  uint64_t v16 = sub_24DCCA228();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  qword_26986FCD0 = v16;
  return result;
}

id sub_24D96189C()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08A48]), sel_init);
  qword_26986FCD8 = (uint64_t)result;
  return result;
}

uint64_t sub_24D9618D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v52 = a2;
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  uint64_t v47 = a3;
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  dispatch_group_t v9 = dispatch_group_create();
  uint64_t v51 = swift_allocObject();
  *(void *)(v51 + 16) = 0;
  uint64_t v10 = swift_allocObject();
  uint64_t v11 = MEMORY[0x263F8EE80];
  uint64_t v46 = v10;
  *(void *)(v10 + 16) = MEMORY[0x263F8EE80];
  uint64_t v45 = swift_allocObject();
  *(unsigned char *)(v45 + 16) = 0;
  uint64_t v43 = swift_allocObject();
  *(unsigned char *)(v43 + 16) = 0;
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v11;
  id v42 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08830]), sel_init);
  uint64_t v12 = self;
  uint64_t v13 = (void *)sub_24DCC8948();
  id v14 = objc_msgSend(v12, sel_writingIntentWithURL_options_, v13, 0);

  dispatch_group_t v50 = v9;
  dispatch_group_enter(v9);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190950);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_24DCD3BE0;
  *(void *)(v15 + 32) = v14;
  aBlock[0] = v15;
  sub_24DCC9C48();
  sub_24D3FB6F8(0, &qword_26B194818);
  id v44 = v14;
  uint64_t v41 = sub_24DCC9C18();
  swift_bridgeObjectRelease();
  if (qword_26986A7A0 != -1) {
    swift_once();
  }
  id v40 = (id)qword_26986FCD8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v17 = (v8 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = v6;
  unint64_t v20 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v23 = (char *)swift_allocObject();
  dispatch_group_t v24 = v50;
  *((void *)v23 + 2) = v51;
  *((void *)v23 + 3) = v24;
  uint64_t v25 = v53;
  *((void *)v23 + 4) = v52;
  *((void *)v23 + 5) = v25;
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(&v23[v16], v22, v19);
  uint64_t v27 = v45;
  uint64_t v26 = v46;
  *(void *)&v23[v17] = v46;
  *(void *)&v23[v18] = v54;
  *(void *)&v23[v20] = v27;
  *(void *)&v23[v21] = v47;
  uint64_t v28 = v43;
  *(void *)&v23[(v21 + 15) & 0xFFFFFFFFFFFFFFF8] = v43;
  aBlock[4] = sub_24D965898;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D6024BC;
  aBlock[3] = &block_descriptor_21;
  uint64_t v29 = _Block_copy(aBlock);
  id v30 = v40;
  uint64_t v31 = v51;
  swift_retain();
  uint64_t v32 = v50;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  uint64_t v33 = (void *)v41;
  id v34 = v42;
  objc_msgSend(v42, sel_coordinateAccessWithIntents_queue_byAccessor_, v41, v30, v29);
  _Block_release(v29);

  uint64_t v35 = v31;
  if (qword_26986A798 != -1) {
    swift_once();
  }
  uint64_t v36 = (void *)qword_26986FCD0;
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = v26;
  v37[3] = v28;
  v37[4] = v27;
  v37[5] = v35;
  uint64_t v38 = v49;
  v37[6] = v48;
  v37[7] = v38;
  v37[8] = v54;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"updateListOfConflictsToGS(url:toAdd:toRemove:completion:)", 57, 2, 0, v36, (uint64_t)sub_24D9659D0, (uint64_t)v37);

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_24D961E44()
{
  return swift_deallocObject();
}

uint64_t sub_24D961E7C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D961EB4()
{
  return swift_deallocObject();
}

void sub_24D961EC4(void *a1, uint64_t a2, NSObject *a3, uint64_t a4, NSObject *a5, uint64_t a6, uint64_t a7, uint64_t a8, NSObject *a9, objc_class *a10, uint64_t a11)
{
  uint64_t v82 = a5;
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v18 = sub_24DCC9078();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v75 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  dispatch_group_t v24 = (char *)&v75 - v23;
  if (a1)
  {
    swift_beginAccess();
    uint64_t v25 = *(void **)(a2 + 16);
    *(void *)(a2 + 16) = a1;
    id v26 = a1;
    id v27 = a1;

    dispatch_group_leave(a3);
  }
  else
  {
    uint64_t v81 = a7;
    Class v76 = a10;
    uint64_t v77 = a6;
    uint64_t v78 = a9;
    uint64_t v79 = v22;
    dispatch_group_enter(a3);
    id v28 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_24DCC9068();
    os_log_type_t v30 = sub_24DCCA118();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v80 = a2;
    if (v31)
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 134217984;
      aBlock[0] = *(id *)(a4 + 16);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v29, v30, "⚔️  Adding %ld conflicts...", v32, 0xCu);
      MEMORY[0x25332B030](v32, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    uint64_t v33 = v79;
    uint64_t v79 = a11;
    uint64_t v75 = *(void (**)(char *, uint64_t))(v33 + 8);
    v75(v24, v18);
    id v34 = (void *)swift_allocObject();
    uint64_t v35 = v81;
    void v34[2] = a3;
    void v34[3] = v35;
    v34[4] = a8;
    v34[5] = a4;
    v34[6] = v78;
    swift_bridgeObjectRetain();
    uint64_t v36 = a3;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24D963C64(v77, a4, (uint64_t)sub_24D965EB8, (uint64_t)v34);
    swift_release();
    uint64_t v78 = v36;
    dispatch_group_enter(v36);
    id v37 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    Class v38 = v76;
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_24DCC9068();
    os_log_type_t v40 = sub_24DCCA118();
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 134217984;
      aBlock[0] = *((id *)v38 + 2);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v39, v40, "⚔️  Removing %ld conflicts...", v41, 0xCu);
      MEMORY[0x25332B030](v41, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    v75(v21, v18);
    Class isa = v82[2].isa;
    uint64_t v43 = swift_bridgeObjectRetain();
    uint64_t v44 = sub_24D9610DC(v43);
    swift_bridgeObjectRelease();
    uint64_t v45 = sub_24DCC97E8();
    uint64_t v47 = v46;
    uint64_t v48 = (void *)swift_allocObject();
    uint64_t v49 = v78;
    uint64_t v50 = v79;
    uint64_t v51 = v80;
    uint64_t v52 = v81;
    void v48[2] = v78;
    v48[3] = v51;
    v48[4] = v52;
    v48[5] = v50;
    uint64_t v53 = (void *)v44;
    if (*(void *)(v44 + 16))
    {
      Class v76 = isa;
      uint64_t v54 = (void *)*((void *)isa + 2);
      uint64_t v55 = v49;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      uint64_t v82 = v55;
      uint64_t v56 = v77;
      uint64_t v57 = (void *)sub_24DCC8948();
      aBlock[0] = 0;
      id v58 = objc_msgSend(v54, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v57, 0, aBlock);

      if (v58)
      {
        id v59 = aBlock[0];
        unint64_t v69 = sub_24D7BD528(v56, v45, v47);
        swift_bridgeObjectRetain();
        uint64_t v70 = sub_24D965FAC(v69, v53);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24D3FB6F8(0, (unint64_t *)&qword_26986C6C0);
        id v71 = (void *)sub_24DCC9C18();
        uint64_t v72 = (void *)swift_allocObject();
        Class v73 = v76;
        v72[2] = v70;
        v72[3] = v73;
        v72[4] = sub_24D965F18;
        v72[5] = v48;
        aBlock[4] = sub_24D966224;
        aBlock[5] = v72;
        aBlock[0] = (id)MEMORY[0x263EF8330];
        aBlock[1] = (id)1107296256;
        aBlock[2] = sub_24D9612E8;
        aBlock[3] = &block_descriptor_47_1;
        uint64_t v74 = _Block_copy(aBlock);
        swift_retain();
        swift_retain();
        swift_release();
        objc_msgSend(v58, sel_removeAdditions_completionHandler_, v71, v74);
        _Block_release(v74);

        swift_release();
      }
      else
      {
        id v64 = aBlock[0];
        uint64_t v65 = (void *)sub_24DCC8828();

        swift_willThrow();
        unint64_t v66 = sub_24D42B678(MEMORY[0x263F8EE78]);
        id v67 = v65;
        uint64_t v68 = v82;
        sub_24D962A70(v66, v65, v82, v80, v52, v79);

        swift_bridgeObjectRelease();
        swift_release();
      }
      int v60 = v78;
    }
    else
    {
      int v60 = v49;
      uint64_t v61 = v49;
      swift_retain_n();
      swift_retain_n();
      swift_retain_n();
      uint64_t v62 = v61;
      unint64_t v63 = sub_24D42B678(MEMORY[0x263F8EE78]);
      sub_24D962A70(v63, 0, v62, v51, v52, v50);

      swift_release();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    dispatch_group_leave(v60);
  }
}

void sub_24D962674(uint64_t a1, uint64_t a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12 = (void *)(a4 + 16);
  uint64_t v13 = (void *)(a5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_24DBA4168(a3, a2, v12, v13, a1);
  if (*(void *)(a2 + 16) < *(void *)(a6 + 16))
  {
    swift_beginAccess();
    *(unsigned char *)(a7 + 16) = 1;
  }
  dispatch_group_leave(a3);
}

uint64_t sub_24D96272C(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v41 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v42 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  for (int64_t i = 0; ; int64_t i = v44)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      int64_t v44 = i;
      unint64_t v12 = v11 | (i << 6);
    }
    else
    {
      int64_t v13 = i + 1;
      if (__OFADD__(i, 1)) {
        goto LABEL_36;
      }
      if (v13 >= v42)
      {
LABEL_33:
        swift_release();
        swift_beginAccess();
        *a3 = a4;
        swift_bridgeObjectRetain();
        return swift_bridgeObjectRelease();
      }
      unint64_t v14 = *(void *)(v41 + 8 * v13);
      int64_t v15 = i + 1;
      if (!v14)
      {
        int64_t v15 = i + 2;
        if (i + 2 >= v42) {
          goto LABEL_33;
        }
        unint64_t v14 = *(void *)(v41 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = i + 3;
          if (i + 3 >= v42) {
            goto LABEL_33;
          }
          unint64_t v14 = *(void *)(v41 + 8 * v15);
          if (!v14)
          {
            uint64_t v16 = i + 4;
            if (i + 4 >= v42) {
              goto LABEL_33;
            }
            unint64_t v14 = *(void *)(v41 + 8 * v16);
            if (!v14)
            {
              while (1)
              {
                int64_t v15 = v16 + 1;
                if (__OFADD__(v16, 1)) {
                  goto LABEL_37;
                }
                if (v15 >= v42) {
                  goto LABEL_33;
                }
                unint64_t v14 = *(void *)(v41 + 8 * v15);
                ++v16;
                if (v14) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = i + 4;
          }
        }
      }
LABEL_21:
      unint64_t v7 = (v14 - 1) & v14;
      int64_t v44 = v15;
      unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    }
    unint64_t v17 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = *(void **)(*(void *)(a1 + 56) + 8 * v12);
    swift_beginAccess();
    id v21 = v20;
    id v22 = v20;
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    dispatch_group_t v24 = (void *)*a2;
    uint64_t v45 = (void *)*a2;
    *a2 = 0x8000000000000000;
    unint64_t v26 = sub_24D4053BC(v19, v18);
    uint64_t v27 = v24[2];
    BOOL v28 = (v25 & 1) == 0;
    uint64_t v29 = v27 + v28;
    if (__OFADD__(v27, v28)) {
      break;
    }
    char v30 = v25;
    if (v24[3] >= v29)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v33 = v45;
        if (v25) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_24DC7C730();
        uint64_t v33 = v45;
        if (v30) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_24D7038BC(v29, isUniquelyReferenced_nonNull_native);
      unint64_t v31 = sub_24D4053BC(v19, v18);
      if ((v30 & 1) != (v32 & 1)) {
        goto LABEL_38;
      }
      unint64_t v26 = v31;
      uint64_t v33 = v45;
      if (v30)
      {
LABEL_4:
        uint64_t v9 = v33[7];
        uint64_t v10 = 8 * v26;

        *(void *)(v9 + v10) = v20;
        goto LABEL_5;
      }
    }
    v33[(v26 >> 6) + 8] |= 1 << v26;
    id v34 = (uint64_t *)(v33[6] + 16 * v26);
    *id v34 = v19;
    v34[1] = v18;
    *(void *)(v33[7] + 8 * v26) = v20;
    uint64_t v35 = v33[2];
    BOOL v36 = __OFADD__(v35, 1);
    uint64_t v37 = v35 + 1;
    if (v36) {
      goto LABEL_35;
    }
    v33[2] = v37;
    swift_bridgeObjectRetain();
LABEL_5:
    *a2 = v33;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

void sub_24D962A70(uint64_t a1, id a2, NSObject *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v52 = a1;
  uint64_t v9 = 0;
  if (a2)
  {
    unint64_t v11 = (void **)(a4 + 16);
    id v12 = a2;
    sub_24DBA364C(a3, v11, a2);
  }
  int64_t v13 = (void *)(a5 + 16);
  uint64_t v48 = 0;
  uint64_t v49 = (unsigned char *)(a6 + 16);
  uint64_t v14 = *(void *)(v52 + 64);
  uint64_t v50 = v52 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(v52 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v51 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v18 = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  if (!v17) {
    goto LABEL_7;
  }
LABEL_6:
  unint64_t v20 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  int64_t v53 = v19;
  for (unint64_t i = v20 | (v19 << 6); ; unint64_t i = __clz(__rbit64(v24)) + (v23 << 6))
  {
    unint64_t v26 = (uint64_t *)(*(void *)(v52 + 48) + 16 * i);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void **)(*(void *)(v52 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    id v30 = v29;
    uint64_t v9 = a3;
    uint64_t v18 = objc_sync_enter(a3);
    if (v18) {
      goto LABEL_44;
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v31 = v29;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v54 = (void *)*v13;
    uint64_t v33 = v54;
    *int64_t v13 = 0x8000000000000000;
    unint64_t v35 = sub_24D4053BC(v28, v27);
    uint64_t v36 = v33[2];
    BOOL v37 = (v34 & 1) == 0;
    uint64_t v18 = v36 + v37;
    if (__OFADD__(v36, v37))
    {
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    char v38 = v34;
    if (v33[3] >= v18)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        os_log_type_t v40 = v54;
        if (v34) {
          goto LABEL_27;
        }
      }
      else
      {
        uint64_t v18 = (uint64_t)sub_24DC7C730();
        os_log_type_t v40 = v54;
        if (v38) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      sub_24D7038BC(v18, isUniquelyReferenced_nonNull_native);
      uint64_t v18 = sub_24D4053BC(v28, v27);
      if ((v38 & 1) != (v39 & 1))
      {
        sub_24DCCAF18();
        __break(1u);
        return;
      }
      unint64_t v35 = v18;
      os_log_type_t v40 = v54;
      if (v38)
      {
LABEL_27:
        uint64_t v44 = v40[7];

        *(void *)(v44 + 8 * v35) = v29;
        goto LABEL_28;
      }
    }
    v40[(v35 >> 6) + 8] |= 1 << v35;
    uint64_t v41 = (uint64_t *)(v40[6] + 16 * v35);
    uint64_t *v41 = v28;
    v41[1] = v27;
    *(void *)(v40[7] + 8 * v35) = v29;
    uint64_t v42 = v40[2];
    BOOL v22 = __OFADD__(v42, 1);
    uint64_t v43 = v42 + 1;
    if (v22) {
      goto LABEL_41;
    }
    v40[2] = v43;
    swift_bridgeObjectRetain();
LABEL_28:
    *int64_t v13 = v40;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
    a3 = v9;
    uint64_t v45 = objc_sync_exit(v9);
    if (v45)
    {
      MEMORY[0x270FA5388](v45);
      uint64_t v47 = v9;
      sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57EC30, (uint64_t)v46, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
    }
    swift_bridgeObjectRelease();

    int64_t v19 = v53;
    if (v17) {
      goto LABEL_6;
    }
LABEL_7:
    BOOL v22 = __OFADD__(v19, 1);
    int64_t v23 = v19 + 1;
    if (v22) {
      goto LABEL_42;
    }
    if (v23 >= v51) {
      break;
    }
    unint64_t v24 = *(void *)(v50 + 8 * v23);
    if (v24) {
      goto LABEL_17;
    }
    int64_t v25 = v23 + 1;
    if (v23 + 1 >= v51) {
      break;
    }
    unint64_t v24 = *(void *)(v50 + 8 * v25);
    if (!v24)
    {
      int64_t v25 = v23 + 2;
      if (v23 + 2 >= v51) {
        break;
      }
      unint64_t v24 = *(void *)(v50 + 8 * v25);
      if (!v24)
      {
        int64_t v25 = v23 + 3;
        if (v23 + 3 >= v51) {
          break;
        }
        unint64_t v24 = *(void *)(v50 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v23 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              break;
            }
            if (v23 >= v51) {
              goto LABEL_37;
            }
            unint64_t v24 = *(void *)(v50 + 8 * v23);
            ++v25;
            if (v24) {
              goto LABEL_17;
            }
          }
LABEL_43:
          __break(1u);
LABEL_44:
          MEMORY[0x270FA5388](v18);
          uint64_t v47 = v9;
          sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57EC28, (uint64_t)v46, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
        }
      }
    }
    int64_t v23 = v25;
LABEL_17:
    unint64_t v17 = (v24 - 1) & v24;
    int64_t v53 = v23;
  }
LABEL_37:
  swift_release();
  if (!*(void *)(v52 + 16))
  {
    swift_beginAccess();
    *uint64_t v49 = 1;
  }
  dispatch_group_leave(a3);
}

void sub_24D962EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(unint64_t, uint64_t, void *), uint64_t a6, uint64_t a7)
{
  uint64_t v63 = a6;
  id v64 = a5;
  uint64_t v75 = sub_24DCC9078();
  uint64_t v12 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v65 = (unsigned char *)(a2 + 16);
  uint64_t v62 = (unsigned __int8 *)(a3 + 16);
  unint64_t v66 = (void **)(a4 + 16);
  uint64_t v14 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a7 + 16;
  uint64_t v61 = (uint64_t *)(a1 + 16);
  swift_beginAccess();
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v72 = v15 + 64;
  uint64_t v17 = 1 << *(unsigned char *)(v15 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v73 = (unint64_t)(v17 + 63) >> 6;
  unint64_t v20 = (void (**)(char *, uint64_t))(v12 + 8);
  swift_bridgeObjectRetain();
  int64_t v21 = 0;
  *(void *)&long long v22 = 136315394;
  long long v68 = v22;
  uint64_t v67 = MEMORY[0x263F8EE58] + 8;
  id v71 = v14;
  uint64_t v70 = v15;
  unint64_t v69 = (void (**)(char *, uint64_t))(v12 + 8);
  while (1)
  {
    if (v19)
    {
      unint64_t v23 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v25 >= v73) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v72 + 8 * v25);
    ++v21;
    if (!v26)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v73) {
        goto LABEL_24;
      }
      unint64_t v26 = *(void *)(v72 + 8 * v21);
      if (!v26)
      {
        int64_t v21 = v25 + 2;
        if (v25 + 2 >= v73) {
          goto LABEL_24;
        }
        unint64_t v26 = *(void *)(v72 + 8 * v21);
        if (!v26) {
          break;
        }
      }
    }
LABEL_21:
    unint64_t v19 = (v26 - 1) & v26;
    unint64_t v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_22:
    uint64_t v28 = (uint64_t *)(*(void *)(v15 + 48) + 16 * v24);
    uint64_t v30 = *v28;
    unint64_t v29 = v28[1];
    id v31 = *(void **)(*(void *)(v15 + 56) + 8 * v24);
    swift_bridgeObjectRetain();
    id v32 = v31;
    id v33 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v34 = v31;
    swift_bridgeObjectRetain();
    id v35 = v31;
    uint64_t v36 = sub_24DCC9068();
    os_log_type_t v37 = sub_24DCCA128();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      char v39 = (void *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      int64_t v74 = v21;
      uint64_t v41 = v40;
      v76[0] = v40;
      *(_DWORD *)uint64_t v38 = v68;
      swift_bridgeObjectRetain();
      *(void *)(v38 + 4) = sub_24D418FB4(v30, v29, v76);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v38 + 12) = 2112;
      swift_getErrorValue();
      id v42 = sub_24DBA2828(v76[4]);
      *(void *)(v38 + 14) = v42;
      *char v39 = v42;

      _os_log_impl(&dword_24D3D0000, v36, v37, "⚔️  Error when updating conflict loser with version %s: %@", (uint8_t *)v38, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      uint64_t v43 = v39;
      unint64_t v20 = v69;
      MEMORY[0x25332B030](v43, -1, -1);
      swift_arrayDestroy();
      uint64_t v44 = v41;
      int64_t v21 = v74;
      MEMORY[0x25332B030](v44, -1, -1);
      uint64_t v45 = v38;
      uint64_t v15 = v70;
      uint64_t v14 = v71;
      MEMORY[0x25332B030](v45, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*v20)(v14, v75);
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v73)
  {
LABEL_24:
    swift_release();
    uint64_t v46 = v65;
    swift_beginAccess();
    if (*v46)
    {
      uint64_t v47 = v62;
      swift_beginAccess();
      uint64_t v48 = *v47;
    }
    else
    {
      uint64_t v48 = 1;
    }
    uint64_t v49 = v66;
    swift_beginAccess();
    uint64_t v50 = *v49;
    if (*v49)
    {
      id v51 = v50;
      unint64_t v52 = sub_24D42B00C(MEMORY[0x263F8EE78]);
      id v53 = v50;
      v64(v52, v48, v50);
    }
    else
    {
      uint64_t v54 = v61;
      swift_beginAccess();
      sub_24D4E3D7C(*v54);
      if (!v56)
      {
        swift_beginAccess();
        uint64_t v59 = swift_bridgeObjectRetain();
        v64(v59, v48, 0);
        swift_bridgeObjectRelease();
        return;
      }
      uint64_t v50 = v55;
      unint64_t v57 = sub_24D42B00C(MEMORY[0x263F8EE78]);
      id v58 = v50;
      v64(v57, v48, v50);

      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();

    return;
  }
  unint64_t v26 = *(void *)(v72 + 8 * v27);
  if (v26)
  {
    int64_t v21 = v27;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v21 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v21 >= v73) {
      goto LABEL_24;
    }
    unint64_t v26 = *(void *)(v72 + 8 * v21);
    ++v27;
    if (v26) {
      goto LABEL_21;
    }
  }
LABEL_35:
  __break(1u);
}

void sub_24D96354C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v14 = a2;
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  if (qword_26986A798 != -1) {
    swift_once();
  }
  id v9 = (id)fpfs_current_log();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v3;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v12 = (void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v12 = v14;
  v12[1] = a3;
  swift_retain();
  swift_retain();
  sub_24D3E29E4(v9, (uint64_t)"listConflicts(for:completionHandler:)", 37, 2, (uint64_t)sub_24D9659E8, v11);
  swift_release();
}

uint64_t sub_24D963728(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, void))
{
  unint64_t v15 = sub_24D429200(MEMORY[0x263F8EE78]);
  uint64_t v5 = sub_24DCC97E8();
  unint64_t v7 = sub_24D7BD528(a2, v5, v6);
  swift_bridgeObjectRelease();
  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    uint64_t v13 = swift_bridgeObjectRetain();
    a3(v13, 0);
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_24DCCA9C8();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v8 >= 1)
  {
    uint64_t v10 = 0;
    do
    {
      if ((v7 & 0xC000000000000001) != 0) {
        id v11 = (id)MEMORY[0x253328820](v10, v7);
      }
      else {
        id v11 = *(id *)(v7 + 8 * v10 + 32);
      }
      uint64_t v12 = v11;
      ++v10;
      id v14 = v11;
      sub_24D9638FC(&v14, (uint64_t *)&v15);
    }
    while (v8 != v10);
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

void sub_24D9638FC(id *a1, uint64_t *a2)
{
  uint64_t v5 = sub_24DCC9078();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *a1;
  id v10 = objc_msgSend(v9, sel_name);
  if (!v10)
  {
    __break(1u);
LABEL_12:

    __break(1u);
    return;
  }
  id v11 = v10;
  id v12 = objc_msgSend(self, sel_parseEtag_, v10);

  if (!v12)
  {
    id v22 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v9 = v9;
    unint64_t v23 = sub_24DCC9068();
    uint64_t v24 = sub_24DCCA128();
    if (!os_log_type_enabled(v23, (os_log_type_t)v24))
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return;
    }
    uint64_t v34 = v6;
    uint64_t v35 = v2;
    int64_t v25 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v37 = v33;
    *(_DWORD *)int64_t v25 = 136315138;
    id v26 = objc_msgSend(v9, sel_name);
    if (v26)
    {
      int64_t v27 = v26;
      v32[1] = v25 + 4;
      uint64_t v28 = sub_24DCC97E8();
      unint64_t v30 = v29;

      uint64_t v36 = sub_24D418FB4(v28, v30, &v37);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v23, (os_log_type_t)v24, "⚔️  Loser %s has invalid format, ignoring it...", v25, 0xCu);
      uint64_t v31 = v33;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v31, -1, -1);
      MEMORY[0x25332B030](v25, -1, -1);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v5);
      return;
    }
    goto LABEL_12;
  }
  uint64_t v13 = sub_24DCC97E8();
  uint64_t v15 = v14;

  id v16 = objc_msgSend(v9, sel_name);
  if (v16)
  {
    uint64_t v17 = v16;
    uint64_t v18 = sub_24DCC97E8();
    uint64_t v20 = v19;

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v37 = *a2;
    *a2 = 0x8000000000000000;
    sub_24D7144E0(v18, v20, v13, v15, isUniquelyReferenced_nonNull_native);
    *a2 = v37;
  }
  else
  {
    sub_24DC733CC(v13, v15);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

uint64_t sub_24D963C64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v38 = a1;
  uint64_t v8 = type metadata accessor for StagedRemoteVersion(0);
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v9 = *(void *)(v37 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v41 = (uint64_t)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = dispatch_group_create();
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = MEMORY[0x263F8EE80];
  *(void *)(v11 + 16) = MEMORY[0x263F8EE80];
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  uint64_t v14 = *(void *)(a2 + 16);
  if (v14)
  {
    uint64_t v31 = a3;
    uint64_t v32 = a4;
    uint64_t v36 = type metadata accessor for GSConflictInfo(0);
    uint64_t v15 = (id *)(a2
               + ((*(unsigned __int8 *)(*(void *)(v36 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v36 - 8) + 80)));
    uint64_t v35 = *(void *)(*(void *)(v36 - 8) + 72);
    uint64_t v34 = v9 + 7;
    v30[1] = a2;
    swift_bridgeObjectRetain();
    uint64_t v39 = v13;
    uint64_t v40 = v11;
    uint64_t v16 = v41;
    uint64_t v33 = v4;
    uint64_t v17 = v11;
    do
    {
      dispatch_group_enter(v10);
      uint64_t v18 = *(int *)(v36 + 24);
      id v42 = ((char *)v15 + *(int *)(v36 + 20));
      uint64_t v19 = *(uint64_t *)((char *)v15 + v18);
      unint64_t v20 = *(unint64_t *)((char *)v15 + v18 + 8);
      sub_24D965A10((uint64_t)v15, v16);
      int64_t v21 = v10;
      unint64_t v22 = (*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
      unint64_t v23 = (v34 + v22) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = v21;
      *(void *)(v24 + 24) = v17;
      uint64_t v25 = v24 + v22;
      id v10 = v21;
      uint64_t v16 = v41;
      sub_24D965BE8(v41, v25);
      *(void *)(v24 + v23) = v39;
      sub_24D416048(v19, v20);
      id v26 = v10;
      swift_retain();
      swift_retain();
      sub_24D964414(v38, v15, v42, v19, v20, sub_24D965C4C, v24);
      swift_release();
      sub_24D416034(v19, v20);
      uint64_t v15 = (id *)((char *)v15 + v35);
      --v14;
    }
    while (v14);
    swift_bridgeObjectRelease();
    a3 = v31;
    a4 = v32;
    uint64_t v13 = v39;
    uint64_t v11 = v40;
  }
  if (qword_26986A798 != -1) {
    swift_once();
  }
  int64_t v27 = (void *)qword_26986FCD0;
  uint64_t v28 = (void *)swift_allocObject();
  void v28[2] = a3;
  v28[3] = a4;
  v28[4] = v13;
  v28[5] = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"saveConflicts(for:conflicts:completionHandler:)", 47, 2, 0, v27, (uint64_t)sub_24D965D34, (uint64_t)v28);

  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D963FD8(uint64_t a1, NSObject *a2)
{
}

void sub_24D964044(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  v29[1] = a4;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8A58();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C610);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (void **)((char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24D965D60(a1, (uint64_t)v15);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v16 = *v15;
    id v17 = sub_24D95E30C();
    id v18 = objc_msgSend(v17, sel_description);

    uint64_t v19 = sub_24DCC97E8();
    uint64_t v21 = v20;

    swift_beginAccess();
    id v22 = v16;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v30 = *a2;
    *a2 = 0x8000000000000000;
    sub_24D716FDC((uint64_t)v16, v19, v21, isUniquelyReferenced_nonNull_native);
    *a2 = v30;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    uint64_t v24 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26986C618) + 48);
    (*(void (**)(char *, void **, uint64_t))(v10 + 32))(v12, v15, v9);
    uint64_t v25 = sub_24D95E494();
    uint64_t v27 = v26;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    swift_beginAccess();
    sub_24D6EBC7C((uint64_t)v8, v25, v27);
    swift_endAccess();
    uint64_t v28 = *(void (**)(char *, uint64_t))(v10 + 8);
    v28(v12, v9);
    v28(v24, v9);
  }
}

uint64_t sub_24D964368(void (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t v7 = *(void *)(a3 + 16);
  swift_beginAccess();
  uint64_t v8 = *(void *)(a4 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1(v7, v8);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D964414(uint64_t a1, id *a2, NSObject *a3, uint64_t a4, unint64_t a5, void (*a6)(uint64_t), uint64_t a7)
{
  uint64_t v129 = a7;
  uint64_t v130 = a6;
  unint64_t v119 = a5;
  uint64_t v120 = a4;
  uint64_t v121 = a3;
  uint64_t v122 = a1;
  uint64_t v138 = *MEMORY[0x263EF8340];
  uint64_t v112 = sub_24DCC8A58();
  uint64_t v108 = *(void *)(v112 - 8);
  MEMORY[0x270FA5388](v112);
  uint64_t v107 = (char *)&v106 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = type metadata accessor for StagedRemoteVersion(0);
  MEMORY[0x270FA5388](v118);
  uint64_t v125 = (char *)&v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_24DCC9078();
  uint64_t v123 = *(void *)(v124 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v124);
  uint64_t v113 = (char *)&v106 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  unint64_t v132 = (char *)&v106 - v12;
  uint64_t v111 = sub_24DCC8408();
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  uint64_t v109 = (char *)&v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C610);
  MEMORY[0x270FA5388](v114);
  uint64_t v115 = (uint64_t *)((char *)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192308);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  id v18 = (char *)&v106 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v106 - v19;
  uint64_t v127 = sub_24DCC8788();
  uint64_t v126 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v117 = (char *)&v106 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v25 = (char *)&v106 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v27 = (char *)&v106 - v26;
  uint64_t v28 = sub_24DCC8CE8();
  uint64_t v29 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v106 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
  uint64_t inited = swift_initStackObject();
  long long v116 = xmmword_24DCCECE0;
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  *(void *)(inited + 32) = 0x534650467369;
  *(void *)(inited + 40) = 0xE600000000000000;
  *(void *)(inited + 72) = MEMORY[0x263F8D4F8];
  uint64_t v33 = 1;
  *(unsigned char *)(inited + 48) = 1;
  uint64_t v34 = (void (*)(char *, uint64_t))sub_24D428D08(inited);
  uint64_t v128 = a2;
  id v35 = objc_msgSend(*a2, sel_contentModificationDate);
  if (v35)
  {
    uint64_t v36 = v35;
    sub_24DCC8CA8();

    uint64_t v33 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v25, v33, 1, v28);
  sub_24D3F0BA0((uint64_t)v25, (uint64_t)v27, (uint64_t *)&unk_26B196B10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28) == 1)
  {
    sub_24D415F74((uint64_t)v27, (uint64_t *)&unk_26B196B10);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v31, v27, v28);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986FCE0);
    uint64_t v37 = (int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B193F58) - 8);
    unint64_t v38 = (*(unsigned __int8 *)(*(void *)v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v37 + 80);
    uint64_t v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v116;
    uint64_t v40 = (void *)(v39 + v38);
    unint64_t v41 = v39 + v38 + v37[14];
    void *v40 = 0xD000000000000010;
    v40[1] = 0x800000024DD13330;
    (*(void (**)(unint64_t, char *, uint64_t))(v29 + 16))(v41, v31, v28);
    unint64_t v42 = sub_24D429C90(v39);
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(qword_26986FCE8);
    *(void *)&long long v136 = v42;
    sub_24D3F7E7C(&v136, &v135);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v134 = v34;
    sub_24D706588(&v135, 0x656D75636F44534ELL, 0xEE006F666E49746ELL, isUniquelyReferenced_nonNull_native);
    uint64_t v34 = v134;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  }
  uint64_t v44 = v127;
  uint64_t v45 = v126;
  uint64_t v46 = (uint64_t)v128;
  id v47 = objc_msgSend(*v128, sel_mostRecentEditorNameComponents);
  if (v47)
  {
    uint64_t v48 = v47;
    sub_24DCC8778();

    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v45 + 56))(v18, v49, 1, v44);
  sub_24D3F0BA0((uint64_t)v18, (uint64_t)v20, (uint64_t *)&unk_26B192308);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v20, 1, v44) == 1)
  {
    sub_24D415F74((uint64_t)v20, (uint64_t *)&unk_26B192308);
  }
  else
  {
    uint64_t v50 = v117;
    (*(void (**)(void))(v45 + 32))();
    id v51 = self;
    unint64_t v52 = (void *)sub_24DCC8768();
    *(void *)&long long v136 = 0;
    id v53 = objc_msgSend(v51, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v52, 1, &v136);

    id v54 = (id)v136;
    if (!v53)
    {
      id v84 = v54;
      swift_bridgeObjectRelease();
      id v85 = (void *)sub_24DCC8828();

      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v50, v44);
      id v86 = (id)fpfs_current_or_default_log();
      uint64_t v87 = v113;
      sub_24DCC9088();
      uint64_t v88 = v108;
      uint64_t v89 = v107;
      uint64_t v90 = v112;
      (*(void (**)(char *, uint64_t, uint64_t))(v108 + 16))(v107, v122, v112);
      id v91 = v85;
      id v92 = v85;
      uint64_t v93 = sub_24DCC9068();
      os_log_type_t v94 = sub_24DCCA128();
      if (os_log_type_enabled(v93, v94))
      {
        uint64_t v95 = swift_slowAlloc();
        uint64_t v131 = swift_slowAlloc();
        unint64_t v132 = (char *)swift_slowAlloc();
        *(void *)&long long v136 = v132;
        *(_DWORD *)uint64_t v95 = 136446466;
        uint64_t v96 = (void *)sub_24DCC8948();
        id v97 = objc_msgSend(v96, sel_fp_shortDescription);

        uint64_t v98 = sub_24DCC97E8();
        int v99 = v89;
        unint64_t v101 = v100;

        *(void *)&long long v135 = sub_24D418FB4(v98, v101, (uint64_t *)&v136);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v88 + 8))(v99, v112);
        *(_WORD *)(v95 + 12) = 2112;
        swift_getErrorValue();
        id v102 = sub_24DBA2828(v133);
        *(void *)&long long v135 = v102;
        sub_24DCCA428();
        uint64_t v103 = v131;
        *(void *)uint64_t v131 = v102;

        _os_log_impl(&dword_24D3D0000, v93, v94, "failed to add conflict to %{public}s: %@", (uint8_t *)v95, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v103, -1, -1);
        uint64_t v104 = v132;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v104, -1, -1);
        MEMORY[0x25332B030](v95, -1, -1);

        (*(void (**)(char *, uint64_t))(v123 + 8))(v113, v124);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v88 + 8))(v89, v90);

        (*(void (**)(char *, uint64_t))(v123 + 8))(v87, v124);
      }
      uint64_t v70 = (uint64_t)v115;
      *uint64_t v115 = (uint64_t)v85;
      swift_storeEnumTagMultiPayload();
      id v105 = v85;
      v130(v70);

      return sub_24D415F74(v70, &qword_26986C610);
    }
    uint64_t v55 = sub_24DCC8B68();
    unint64_t v57 = v56;

    uint64_t v137 = MEMORY[0x263F06F78];
    *(void *)&long long v136 = v55;
    *((void *)&v136 + 1) = v57;
    sub_24D3F7E7C(&v136, &v135);
    sub_24D3F9C18(v55, v57);
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v134 = v34;
    sub_24D706588(&v135, 0xD000000000000021, 0x800000024DD13300, v58);
    uint64_t v34 = v134;
    swift_bridgeObjectRelease();
    sub_24D400DCC(v55, v57);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v50, v44);
  }
  id v59 = sub_24D95E30C();
  id v60 = objc_msgSend(v59, sel_lastEditorDeviceName);

  uint64_t v61 = (uint64_t)v125;
  if (v60)
  {
    uint64_t v62 = sub_24DCC97E8();
    uint64_t v64 = v63;

    uint64_t v137 = MEMORY[0x263F8D310];
    *(void *)&long long v136 = v62;
    *((void *)&v136 + 1) = v64;
    sub_24D3F7E7C(&v136, &v135);
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v134 = v34;
    sub_24D706588(&v135, 0xD00000000000001DLL, 0x800000024DD132E0, v65);
    uint64_t v34 = v134;
    swift_bridgeObjectRelease();
  }
  unint64_t v66 = v132;
  if (os_variant_has_internal_content() && *(unsigned char *)(v131 + 24) == 1)
  {
    swift_bridgeObjectRelease();
    LODWORD(v136) = 12;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D419288((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    uint64_t v67 = v109;
    uint64_t v68 = v111;
    sub_24DCC8808();
    uint64_t v69 = sub_24DCC83E8();
    (*(void (**)(char *, uint64_t))(v110 + 8))(v67, v68);
    uint64_t v70 = (uint64_t)v115;
    *uint64_t v115 = v69;
    swift_storeEnumTagMultiPayload();
    v130(v70);
    return sub_24D415F74(v70, &qword_26986C610);
  }
  id v71 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D965A10(v46, v61);
  uint64_t v72 = sub_24DCC9068();
  os_log_type_t v73 = sub_24DCCA108();
  if (os_log_type_enabled(v72, v73))
  {
    int64_t v74 = (uint8_t *)swift_slowAlloc();
    uint64_t v75 = swift_slowAlloc();
    *(void *)&long long v136 = v75;
    *(_DWORD *)int64_t v74 = 136315138;
    uint64_t v76 = sub_24D95E494();
    *(void *)&long long v135 = sub_24D418FB4(v76, v77, (uint64_t *)&v136);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D965A74(v61);
    _os_log_impl(&dword_24D3D0000, v72, v73, "⚔️  Putting loser %s into the Genstore...", v74, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v75, -1, -1);
    MEMORY[0x25332B030](v74, -1, -1);

    (*(void (**)(char *, uint64_t))(v123 + 8))(v132, v124);
  }
  else
  {
    sub_24D965A74(v61);

    (*(void (**)(char *, uint64_t))(v123 + 8))(v66, v124);
  }
  uint64_t v78 = sub_24D95E494();
  unint64_t v80 = v79;
  uint64_t v81 = (void (*)(char *, uint64_t))sub_24DCC97E8();
  sub_24D7BBC94(v122, v34, v78, v80, v81, v82, v46 + *(int *)(v118 + 20), v121, v120, v119, 0, 0, v130, v129);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D9654B4(char a1)
{
  uint64_t result = os_variant_has_internal_content();
  if (result) {
    *(unsigned char *)(v1 + 24) = a1 & 1;
  }
  return result;
}

uint64_t sub_24D9654EC()
{
  swift_release();
  return v0;
}

uint64_t sub_24D96550C()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_24D965544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24D9618D0(a1, a2, a3, a4, a5);
}

void sub_24D965568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v15 = a2;
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = *v3;
  if (qword_26986A798 != -1) {
    swift_once();
  }
  id v10 = (id)fpfs_current_log();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v11 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v9;
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v12 + v11, (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v13 = (void *)(v12 + ((v8 + v11 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v13 = v15;
  v13[1] = a3;
  swift_retain();
  swift_retain();
  sub_24D3E29E4(v10, (uint64_t)"listConflicts(for:completionHandler:)", 37, 2, (uint64_t)sub_24D9659E8, v12);
  swift_release();
}

uint64_t sub_24D965744()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_24D965898(void *a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24D961EC4(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24), *(void *)(v1 + 32), *(NSObject **)(v1 + 40), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(NSObject **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(objc_class **)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D965970()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D9659D0()
{
  sub_24D962EC4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(unint64_t, uint64_t, void *))(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64));
}

uint64_t type metadata accessor for GSConflictManager()
{
  return self;
}

uint64_t sub_24D965A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StagedRemoteVersion(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D965A74(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StagedRemoteVersion(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D965AD0()
{
  uint64_t v1 = (int *)(type metadata accessor for StagedRemoteVersion(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  swift_release();
  uint64_t v3 = (id *)(v0 + v2);

  uint64_t v4 = (char *)v3 + v1[7];
  uint64_t v5 = sub_24DCC8A58();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D965BE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StagedRemoteVersion(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_24D965C4C(uint64_t a1)
{
  type metadata accessor for StagedRemoteVersion(0);
  uint64_t v3 = *(NSObject **)(v1 + 16);

  sub_24D963FD8(a1, v3);
}

uint64_t sub_24D965CEC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D965D34()
{
  return sub_24D964368(*(void (**)(uint64_t, uint64_t))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_24D965D40()
{
  sub_24D964044(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D965D60(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C610);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D965DCC()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void (**)(uint64_t, void))(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D963728(v3, v0 + v2, v4);
}

uint64_t sub_24D965E60()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_24D965EB8(uint64_t a1, uint64_t a2)
{
  sub_24D962674(a1, a2, *(NSObject **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_24D965EC8()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D965F18(uint64_t a1, void *a2)
{
  sub_24D962A70(a1, a2, *(NSObject **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_24D965F24(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_24D965FAC(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  uint64_t v28 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_35;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v4)
  {
    while (1)
    {
      unint64_t v22 = v3;
      unint64_t v5 = 0;
      unint64_t v6 = v3 & 0xC000000000000001;
      uint64_t v7 = v3 & 0xFFFFFFFFFFFFFF8;
      uint64_t v26 = v4;
      uint64_t v27 = (void *)(v3 + 32);
      uint64_t v23 = a2 + 7;
      uint64_t v24 = v3 & 0xFFFFFFFFFFFFFF8;
      unint64_t v25 = v3 & 0xC000000000000001;
      while (1)
      {
        if (v6)
        {
          id v8 = (id)MEMORY[0x253328820](v5, v22);
        }
        else
        {
          if (v5 >= *(void *)(v7 + 16))
          {
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
          id v8 = (id)v27[v5];
        }
        uint64_t v9 = v8;
        if (__OFADD__(v5++, 1)) {
          goto LABEL_33;
        }
        id v11 = objc_msgSend(v8, sel_name);
        if (v11) {
          break;
        }

LABEL_5:
        if (v5 == v4) {
          return v28;
        }
      }
      uint64_t v12 = v11;
      uint64_t v13 = sub_24DCC97E8();
      unint64_t v3 = (unint64_t)v14;

      uint64_t v15 = (void *)a2[2];
      if (!v15)
      {

        swift_bridgeObjectRelease();
        goto LABEL_5;
      }
      uint64_t v16 = a2;
      BOOL v17 = a2[4] == v13 && a2[5] == v3;
      if (v17 || (sub_24DCCAE28() & 1) != 0) {
        break;
      }
      if (v15 == (void *)1)
      {
LABEL_29:

        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      id v18 = v23;
      uint64_t v19 = 1;
      while (1)
      {
        a2 = (void *)(v19 + 1);
        if (__OFADD__(v19, 1)) {
          break;
        }
        BOOL v20 = *(v18 - 1) == v13 && *v18 == v3;
        if (v20 || (sub_24DCCAE28() & 1) != 0) {
          goto LABEL_17;
        }
        v18 += 2;
        ++v19;
        if (a2 == v15) {
          goto LABEL_29;
        }
      }
LABEL_34:
      __break(1u);
LABEL_35:
      uint64_t v4 = sub_24DCCA9C8();
      if (!v4) {
        return MEMORY[0x263F8EE78];
      }
    }
LABEL_17:
    swift_bridgeObjectRelease();
    sub_24DCCA808();
    sub_24DCCA848();
    sub_24DCCA858();
    unint64_t v3 = (unint64_t)&v28;
    sub_24DCCA818();
LABEL_18:
    unint64_t v6 = v25;
    uint64_t v4 = v26;
    a2 = v16;
    uint64_t v7 = v24;
    goto LABEL_5;
  }
  return MEMORY[0x263F8EE78];
}

uint64_t sub_24D9661DC()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D966224(unint64_t a1, uint64_t a2)
{
  return sub_24D7BD310(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t, uint64_t))(v2 + 32));
}

uint64_t sub_24D96623C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t sub_24D966314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = sub_24DCCA3F8();
  uint64_t v18 = *(void *)(v4 - 8);
  uint64_t v19 = v4;
  MEMORY[0x270FA5388](v4);
  unint64_t v6 = (char *)&v17 - v5;
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  id v11 = (char *)&v17 - v10;
  if (sub_24DCCA598())
  {
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
    uint64_t v13 = v20;
    return v12(v13, 1, 1, v3);
  }
  else
  {
    sub_24DCC9B38();
    swift_getAssociatedConformanceWitness();
    uint64_t v15 = sub_24DCCA4C8();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, AssociatedTypeWitness);
    uint64_t v16 = v20;
    sub_24D9665D0(v15, v7, v20);
    sub_24DCCA588();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v6, v19);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v16, 0, 1, v3);
  }
}

uint64_t sub_24D9665D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v11 = a1;
  uint64_t v12 = a3;
  uint64_t v13 = *(void *)(a2 + 8);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v4 = swift_checkMetadataState();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  swift_getAssociatedConformanceWitness();
  sub_24DCCAEE8();
  sub_24DCCADF8();
  uint64_t v14 = v11;
  sub_24D4E3A40();
  sub_24DCCA4D8();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return sub_24DCCB108();
}

uint64_t sub_24D966820(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v9 = sub_24DCCA3F8();
  uint64_t v45 = *(void *)(v9 - 8);
  uint64_t v46 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (uint64_t *)((char *)&v45 - v11);
  uint64_t v13 = *(void *)(TupleTypeMetadata2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  id v47 = (uint64_t *)((char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v48 = (uint64_t *)((char *)&v45 - v17);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (uint64_t *)((char *)&v45 - v18);
  uint64_t v20 = (char *)&v45 + *(int *)(TupleTypeMetadata2 + 48) - v18;
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(a2 + 32);
  uint64_t v51 = a2;
  v21(a1, a2);
  uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v49(v7, v2, a1);
  uint64_t v52 = v13;
  int v22 = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(v12, 1, TupleTypeMetadata2);
  uint64_t v53 = v5;
  uint64_t v50 = TupleTypeMetadata2;
  if (v22 == 1)
  {
    uint64_t *v19 = 0;
    v19[1] = 0xE000000000000000;
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v24 = v20;
    v23(v20, v7, a1);
    (*(void (**)(uint64_t *, uint64_t))(v45 + 8))(v12, v46);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
    unint64_t v25 = (char *)v12 + *(int *)(TupleTypeMetadata2 + 48);
    uint64_t v26 = v12[1];
    uint64_t *v19 = *v12;
    v19[1] = v26;
    uint64_t v27 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v24 = v20;
    v27(v20, v25, a1);
  }
  uint64_t v28 = v51;
  uint64_t v29 = *(void *)(v51 + 16);
  uint64_t v30 = sub_24DCCA598();
  if (v30)
  {
    uint64_t v31 = v50;
    uint64_t v32 = v47;
    uint64_t v33 = (char *)v47 + *(int *)(v50 + 48);
    uint64_t v34 = *v19;
    uint64_t v35 = v19[1];
    *id v47 = *v19;
    v32[1] = v35;
    v49(v33, (uint64_t)v24, a1);
    uint64_t v36 = *(void (**)(char *, uint64_t))(v53 + 8);
    swift_bridgeObjectRetain();
    v36(v33, a1);
  }
  else
  {
    MEMORY[0x270FA5388](v30);
    *(&v45 - 2) = a1;
    *(&v45 - 1) = v28;
    uint64_t v54 = sub_24D96701C((void (*)(char *, char *))sub_24D966FFC, (uint64_t)(&v45 - 4), a1, MEMORY[0x263F8D310], MEMORY[0x263F8E628], *(void *)(v29 + 16), MEMORY[0x263F8E658], v37);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
    sub_24D43E3F0();
    uint64_t v34 = sub_24DCC9708();
    swift_bridgeObjectRelease();
    uint64_t v31 = v50;
    unint64_t v38 = v48;
    uint64_t v39 = (char *)v48 + *(int *)(v50 + 48);
    uint64_t v40 = *v19;
    unint64_t v41 = v19[1];
    *uint64_t v48 = *v19;
    v38[1] = v41;
    v49(v39, (uint64_t)v24, a1);
    if ((v41 & 0x2000000000000000) != 0) {
      uint64_t v42 = HIBYTE(v41) & 0xF;
    }
    else {
      uint64_t v42 = v40 & 0xFFFFFFFFFFFFLL;
    }
    (*(void (**)(char *, uint64_t))(v53 + 8))(v39, a1);
    if (v42)
    {
      uint64_t v43 = v19[1];
      uint64_t v54 = *v19;
      uint64_t v55 = v43;
      swift_bridgeObjectRetain();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v34 = v54;
    }
  }
  (*(void (**)(uint64_t *, uint64_t))(v52 + 8))(v19, v31);
  return v34;
}

void sub_24D966D20(void *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
}

uint64_t sub_24D966D2C@<X0>(uint64_t a1@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56);

  return v3(a1, 1, 1, TupleTypeMetadata2);
}

uint64_t sub_24D966DB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_24D966DEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v18 = a4;
  uint64_t v17 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 24))(a2, a3);
  unint64_t v14 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a2);
  if (!v14)
  {
    uint64_t v19 = 30768;
    unint64_t v20 = 0xE200000000000000;
    sub_24DCC9B38();
    swift_getAssociatedConformanceWitness();
    sub_24DCC9A48();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t v12 = v19;
    unint64_t v14 = v20;
  }
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, a2);
  uint64_t v16 = v18;
  *uint64_t v18 = v12;
  v16[1] = v14;
  return result;
}

uint64_t sub_24D966FFC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_24D966DEC(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_24D96701C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  id v59 = a4;
  unint64_t v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  unint64_t v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_24DCCA3F8();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v50 = *((void *)v15 - 1);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  uint64_t v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v30 = (char *)&v40 - v29;
  uint64_t v31 = sub_24DCC9A98();
  uint64_t v61 = sub_24DCC9528();
  uint64_t v56 = sub_24DCCA888();
  sub_24DCCA828();
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  id v59 = v30;
  uint64_t result = sub_24DCC9A88();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_24DCCA418();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_24DCCA868();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_24DCCA418();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    unint64_t v38 = (void (**)(char *, uint64_t))(v35 + 8);
    uint64_t v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_24DCCA868();
      sub_24DCCA418();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

uint64_t sub_24D967718()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24D9677A8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_24D967860(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24D9678B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24D967900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24D967950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_24D9679A0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_24D967AFC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x24D967D14);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for BitSetIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D967D54()
{
  uint64_t v0 = type metadata accessor for SnapshotItem();
  uint64_t v1 = v0;
  if (v2 <= 0x3F)
  {
    uint64_t v11 = *(void *)(v0 - 8) + 64;
    uint64_t AssociatedTypeWitness = type metadata accessor for SnapshotItem();
    if (v4 > 0x3F) {
      return AssociatedTypeWitness;
    }
    uint64_t v12 = *(void *)(AssociatedTypeWitness - 8) + 64;
    int v13 = (void *)(MEMORY[0x263F8CF70] + 64);
    unsigned int v14 = &unk_24DCE03C8;
    swift_getTupleTypeLayout();
    uint64_t v16 = &v15;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v5 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else
    {
      uint64_t v11 = *(void *)(AssociatedTypeWitness - 8) + 64;
      uint64_t v6 = sub_24DCCA3F8();
      uint64_t v1 = v6;
      if (v7 <= 0x3F)
      {
        uint64_t v12 = *(void *)(v6 - 8) + 64;
        int v13 = &unk_24DCE03E0;
        unsigned int v14 = &unk_24DCE03C8;
        swift_getTupleTypeLayout();
        uint64_t v17 = &v10;
        swift_getTupleTypeLayout3();
        uint64_t v18 = &v9;
        uint64_t v19 = &unk_24DCE03C8;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return v1;
}

void *sub_24D967F70(char *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v520 = *(void *)(AssociatedTypeWitness - 8);
  int v496 = *(_DWORD *)(v520 + 80);
  uint64_t v509 = *(void *)(v520 + 64);
  uint64_t v461 = v509 + v496;
  uint64_t v453 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v453 - 8);
  uint64_t v513 = v2;
  int v492 = *(_DWORD *)(v2 + 80);
  uint64_t v451 = swift_getAssociatedTypeWitness();
  uint64_t v512 = *(void *)(v451 - 8);
  int v488 = *(_DWORD *)(v512 + 80);
  uint64_t v523 = v492 & 0xF8 | v488 | 7u;
  uint64_t v448 = v509 + v523;
  uint64_t v452 = *(void *)(v2 + 64) + 7;
  uint64_t v450 = v488 + 8;
  uint64_t v477 = v488;
  uint64_t v449 = *(void *)(v512 + 64) + 7;
  uint64_t v469 = sub_24DCC8CE8();
  uint64_t v3 = *(void *)(v469 - 8);
  int v484 = *(_DWORD *)(v3 + 80);
  uint64_t v4 = v484;
  uint64_t v5 = v484 | 7;
  uint64_t v517 = v5 + 16;
  unint64_t v454 = ((((v449 + ((v450 + (v452 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v488)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v471 = v484 + 12;
  size_t v6 = *(void *)(v3 + 64);
  size_t v470 = v6 + v484;
  size_t v444 = v6 + 12;
  uint64_t v465 = v3;
  uint64_t v466 = v484 + 10;
  unsigned int v506 = *(_DWORD *)(v3 + 84);
  size_t v472 = v6;
  if (v506) {
    size_t v7 = *(void *)(*(void *)(v469 - 8) + 64);
  }
  else {
    size_t v7 = v6 + 1;
  }
  size_t __n = v7;
  size_t v467 = v7 + 7;
  unint64_t v446 = (v484
        + 10
        + ((((((v6
              + 12
              + ((v6 + v484 + (v471 & ~(unint64_t)v484)) & ~(unint64_t)v484)) & 0xFFFFFFFFFFFFFFF8)
            + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v484;
  unint64_t v499 = (((((((((v7 + 7 + v446) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v468 = v499 + 16;
  unint64_t v447 = (v5
        + 16
        + ((v509 + v523 + (v461 & ~(unint64_t)v496)) & ~v523)
        + ((((v449
            + ((v488 + 8 + (v452 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v488)) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16) & ~v5;
  size_t v503 = ((((v447 + v499 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v457 = v9;
  uint64_t v458 = v8;
  int v481 = *(_DWORD *)(v9 + 80);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v455 = v11;
  uint64_t v456 = v10;
  int v480 = *(_DWORD *)(v11 + 80);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v459 = v13;
  uint64_t v460 = v12;
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v480 & 0xF8 | v14 | 7;
  uint64_t v16 = v15 | v481 | v484;
  size_t v445 = v503 + v16;
  uint64_t v17 = *(void *)(v9 + 64);
  uint64_t v18 = v17 + v481;
  uint64_t v19 = v17 + v15;
  uint64_t v20 = *(void *)(v11 + 64) + 7;
  uint64_t v21 = v14 + 8;
  uint64_t v22 = *(void *)(v13 + 64) + 7;
  unint64_t v23 = ((((v22 + ((v14 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v473 = v484 | 7;
  unint64_t v24 = (v499 + ((v517 + ((v17 + v15 + (v18 & ~(unint64_t)v481)) & ~v15) + v23) & ~v5) + 327) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((((v25 + ((v503 + v16) & ~v16) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v27 = v496;
  unint64_t v28 = v523 | v496 | (unint64_t)v484;
  uint64_t v29 = v28 + v509;
  unsigned int v30 = *(_DWORD *)(v520 + 84);
  uint64_t v31 = *(unsigned int *)(v2 + 84);
  if (v31 <= *(_DWORD *)(v512 + 84)) {
    unsigned int v32 = *(_DWORD *)(v512 + 84);
  }
  else {
    unsigned int v32 = *(_DWORD *)(v2 + 84);
  }
  if (v32 <= 0x7FFFFFFE) {
    unsigned int v33 = 2147483646;
  }
  else {
    unsigned int v33 = v32;
  }
  if (v33 <= v30) {
    unsigned int v34 = *(_DWORD *)(v520 + 84);
  }
  else {
    unsigned int v34 = v33;
  }
  if (v506 <= 0x7FFFFFFE) {
    unsigned int v35 = 2147483646;
  }
  else {
    unsigned int v35 = v506;
  }
  if (v34 <= v35) {
    unsigned int v36 = v35;
  }
  else {
    unsigned int v36 = v34;
  }
  if (v36 <= 0x7FFFFFFF) {
    int v37 = 0x7FFFFFFF;
  }
  else {
    int v37 = v36;
  }
  if (((v503 + (v29 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 24 > v26) {
    unint64_t v26 = ((v503 + (v29 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v38 = ((v24 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v38 > v26) {
    unint64_t v26 = v38;
  }
  if (v26 <= 0x10) {
    uint64_t v39 = 16;
  }
  else {
    uint64_t v39 = v26;
  }
  unint64_t v40 = v15 | v481 | v28;
  if (v40 == 7
    && ((v492 | v496 | v488 | v484 | v481 | v480 | *(_DWORD *)(v459 + 80)) & 0x100000) == 0
    && (v39 | 1uLL) <= 0x18)
  {
    int v489 = v37;
    uint64_t v493 = v28 + v509;
    unsigned int v485 = *(_DWORD *)(v512 + 84);
    uint64_t v500 = v18;
    unsigned int v41 = *((unsigned __int8 *)a2 + v39);
    if (v41 >= 4) {
      unsigned int v41 = *(_DWORD *)a2 + 4;
    }
    uint64_t v42 = ~v477;
    uint64_t v502 = ~v473;
    uint64_t v43 = ~v4;
    uint64_t v44 = ~v15;
    uint64_t v45 = ~v14;
    unint64_t v46 = v25 + 16;
    unint64_t v47 = ~v28;
    switch(v41)
    {
      case 1u:
        unint64_t v483 = ~(unint64_t)v496;
        uint64_t v498 = v39;
        uint64_t v501 = ~v523;
        uint64_t v525 = v43;
        v479 = *(void (**)(char *, uint64_t *, uint64_t))(v520 + 16);
        v479((char *)a1, a2, AssociatedTypeWitness);
        v511 = (char *)(((unint64_t)a1 + v493) & v47);
        uint64_t v89 = (char *)(((unint64_t)a2 + v493) & v47);
        v515 = v89;
        if (v30 == v37)
        {
          uint64_t v90 = v42;
          int v91 = (*(uint64_t (**)(void))(v520 + 48))();
          uint64_t v88 = a1;
          uint64_t v92 = v465;
          uint64_t v93 = (char *)(((unint64_t)a1 + v493) & v47);
          uint64_t v94 = AssociatedTypeWitness;
          uint64_t v95 = v448;
LABEL_100:
          if (v91)
          {
LABEL_101:
            v351 = v515;
            memcpy(v93, v515, v503);
LABEL_102:
            size_t v352 = __n;
LABEL_119:
            unint64_t v439 = ((((v447
                     + ((((((((((v446 + v352 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            unint64_t v440 = (unint64_t)&v93[v439];
            unint64_t v441 = (unint64_t)&v351[v439];
            *(unsigned char *)unint64_t v440 = *(unsigned char *)v441;
            v440 &= 0xFFFFFFFFFFFFFFF8;
            v441 &= 0xFFFFFFFFFFFFFFF8;
            *(void *)(v440 + 8) = *(void *)(v441 + 8);
            *(void *)(v440 + 16) = *(void *)(v441 + 16);
            char v240 = 1;
            goto LABEL_120;
          }
          unint64_t v135 = (unint64_t)&v515[v461] & v483;
          unint64_t v136 = (v95 + v135) & v501;
LABEL_104:
          v479(v93, (uint64_t *)v515, v94);
          unint64_t v353 = (unint64_t)&v93[v461] & v483;
          v479((char *)v353, (uint64_t *)v135, v94);
          unint64_t v354 = (v95 + v353) & v501;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v513 + 16))(v354, v136, v453);
          v355 = (void *)((v452 + v354) & 0xFFFFFFFFFFFFFFF8);
          v356 = (void *)((v452 + v136) & 0xFFFFFFFFFFFFFFF8);
          void *v355 = *v356;
          unint64_t v357 = ((unint64_t)v355 + v450) & v90;
          unint64_t v358 = ((unint64_t)v356 + v450) & v90;
          v359 = *(void (**)(unint64_t, unint64_t, uint64_t))(v512 + 16);
          swift_bridgeObjectRetain();
          v359(v357, v358, v451);
          v360 = (void *)((v449 + v358) & 0xFFFFFFFFFFFFFFF8);
          v361 = (void *)((v449 + v357) & 0xFFFFFFFFFFFFFFF8);
          void *v361 = *v360;
          v362 = (void *)(((unint64_t)v361 + 15) & 0xFFFFFFFFFFFFFFF8);
          v363 = (void *)(((unint64_t)v360 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v362 = *v363;
          v362[1] = v363[1];
          v364 = (void *)(v354 + v454);
          void *v364 = *(void *)(v136 + v454);
          v364[1] = *(void *)(v136 + v454 + 8);
          unint64_t v365 = (v517 + v354 + v454) & v502;
          unint64_t v366 = (v517 + v136 + v454) & v502;
          *(unsigned char *)unint64_t v365 = *(unsigned char *)v366;
          uint64_t v367 = v365 | 4;
          int v368 = *(_DWORD *)(v366 | 4);
          *(unsigned char *)(v367 + 4) = *(unsigned char *)((v366 | 4) + 4);
          *(_DWORD *)uint64_t v367 = v368;
          *(_WORD *)(v365 + 10) = *(_WORD *)(v366 + 0xA);
          unint64_t v522 = v365;
          uint64_t v369 = (v471 + v365) & v525;
          unint64_t v518 = v366;
          uint64_t v370 = (v471 + v366) & v525;
          v371 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v371(v369, v370, v469);
          uint64_t v372 = (v470 + v370) & v525;
          v371((v470 + v369) & v525, v372, v469);
          v373 = (unsigned char *)(((v470 + v369) & v525) + v472);
          unsigned char *v373 = *(unsigned char *)(v372 + v472);
          v373[1] = *(unsigned char *)(v372 + v472 + 1);
          v373[2] = *(unsigned char *)(v372 + v472 + 2);
          v373[3] = *(unsigned char *)(v372 + v472 + 3);
          v373[4] = *(unsigned char *)(v372 + v472 + 4);
          unint64_t v374 = (unint64_t)(v373 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v375 = (v372 + v472 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v374 = *(void *)v375;
          *(void *)(v374 + 8) = *(void *)(v375 + 8);
          *(unsigned char *)(v374 + 16) = *(unsigned char *)(v375 + 16);
          *(unsigned char *)(v374 + 17) = *(unsigned char *)(v375 + 17);
          *(unsigned char *)(v374 + 18) = *(unsigned char *)(v375 + 18);
          *(unsigned char *)(v374 + 19) = *(unsigned char *)(v375 + 19);
          unint64_t v376 = (v374 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v377 = (v375 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v376 = *(void *)v377;
          *(unsigned char *)(v376 + 8) = *(unsigned char *)(v377 + 8);
          *(unsigned char *)(v376 + 9) = *(unsigned char *)(v377 + 9);
          *(unsigned char *)(v376 + 10) = *(unsigned char *)(v377 + 10);
          *(unsigned char *)(v376 + 11) = *(unsigned char *)(v377 + 11);
          *(unsigned char *)(v376 + 12) = *(unsigned char *)(v377 + 12);
          v378 = (void *)((v375 + 47) & 0xFFFFFFFFFFFFFFF8);
          v379 = (void *)((v374 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v379 = *v378;
          unint64_t v380 = ((unint64_t)v379 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v381 = ((unint64_t)v378 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v380 = *(void *)v381;
          *(unsigned char *)(v380 + 8) = *(unsigned char *)(v381 + 8);
          *(unsigned char *)(v380 + 9) = *(unsigned char *)(v381 + 9);
          v382 = (void *)((v466 + v380) & v525);
          v383 = (const void *)((v466 + v381) & v525);
          v384 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v92 + 48);
          swift_bridgeObjectRetain();
          if (v384(v383, 1, v469))
          {
            memcpy(v382, v383, __n);
          }
          else
          {
            v371((uint64_t)v382, (uint64_t)v383, v469);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v92 + 56))(v382, 0, 1, v469);
          }
          unsigned int v385 = v506;
          v386 = (void *)(((unint64_t)v382 + v467) & 0xFFFFFFFFFFFFFFF8);
          v387 = (void *)(((unint64_t)v383 + v467) & 0xFFFFFFFFFFFFFFF8);
          void *v386 = *v387;
          unint64_t v388 = ((unint64_t)v386 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v389 = ((unint64_t)v387 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v390 = *(void *)v389;
          *(unsigned char *)(v388 + 8) = *(unsigned char *)(v389 + 8);
          *(void *)unint64_t v388 = v390;
          v391 = (void *)(((unint64_t)v386 + 31) & 0xFFFFFFFFFFFFFFF8);
          v392 = (void *)(((unint64_t)v387 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v391 = *v392;
          unint64_t v393 = ((unint64_t)v391 + 15) & 0xFFFFFFFFFFFFFFF8;
          v394 = (uint64_t *)(((unint64_t)v392 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v395 = v394[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v395 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v393 = *(_OWORD *)v394;
          }
          else
          {
            uint64_t v396 = *v394;
            sub_24D3F9C18(*v394, v395);
            *(void *)unint64_t v393 = v396;
            *(void *)(v393 + 8) = v395;
          }
          unint64_t v397 = (v393 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v398 = ((unint64_t)v394 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v399 = *(void *)v398;
          *(unsigned char *)(v397 + 8) = *(unsigned char *)(v398 + 8);
          *(void *)unint64_t v397 = v399;
          *(unsigned char *)(v397 + 9) = *(unsigned char *)(v398 + 9);
          unint64_t v400 = (v397 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v401 = (v398 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v402 = *(_DWORD *)v401;
          *(unsigned char *)(v400 + 4) = *(unsigned char *)(v401 + 4);
          *(_DWORD *)unint64_t v400 = v402;
          v403 = (void *)((v397 + 25) & 0xFFFFFFFFFFFFFFF8);
          v404 = (void *)((v398 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v403 = *v404;
          v403[1] = v404[1];
          unint64_t v405 = v468 + v522;
          v406 = (long long *)(v468 + v518);
          unint64_t v407 = *(void *)(v468 + v518 + 16);
          if (v407 >= 0xFFFFFFFF) {
            LODWORD(v407) = -1;
          }
          int v408 = v407 - 1;
          swift_bridgeObjectRetain();
          if (v408 < 0)
          {
            *(void *)unint64_t v405 = *(void *)v406;
            *(unsigned char *)(v405 + 8) = *((unsigned char *)v406 + 8);
            *(unsigned char *)(v405 + 9) = *((unsigned char *)v406 + 9);
            v421 = (void *)*((void *)v406 + 2);
            id v422 = v421;
            *(void *)(v405 + 16) = v421;
            v423 = (void *)*((void *)v406 + 3);
            id v424 = v423;
            *(void *)(v405 + 24) = v423;
            *(unsigned char *)(v405 + 32) = *((unsigned char *)v406 + 32);
            *(unsigned char *)(v405 + 33) = *((unsigned char *)v406 + 33);
            *(unsigned char *)(v405 + 34) = *((unsigned char *)v406 + 34);
            *(void *)(v405 + 40) = *((void *)v406 + 5);
            *(void *)(v405 + 48) = *((void *)v406 + 6);
            *(void *)(v405 + 56) = *((void *)v406 + 7);
            *(void *)(v405 + 64) = *((void *)v406 + 8);
            *(unsigned char *)(v405 + 72) = *((unsigned char *)v406 + 72);
            *(void *)(v405 + 80) = *((void *)v406 + 10);
            *(void *)(v405 + 88) = *((void *)v406 + 11);
            v529 = (void *)*((void *)v406 + 12);
            *(void *)(v405 + 96) = v529;
            *(unsigned char *)(v405 + 104) = *((unsigned char *)v406 + 104);
            *(unsigned char *)(v405 + 105) = *((unsigned char *)v406 + 105);
            *(void *)(v405 + 112) = *((void *)v406 + 14);
            *(void *)(v405 + 120) = *((void *)v406 + 15);
            *(void *)(v405 + 128) = *((void *)v406 + 16);
            *(void *)(v405 + 136) = *((void *)v406 + 17);
            *(void *)(v405 + 144) = *((void *)v406 + 18);
            *(void *)(v405 + 152) = *((void *)v406 + 19);
            *(void *)(v405 + 160) = *((void *)v406 + 20);
            *(void *)(v405 + 168) = *((void *)v406 + 21);
            *(unsigned char *)(v405 + 176) = *((unsigned char *)v406 + 176);
            *(void *)(v405 + 184) = *((void *)v406 + 23);
            uint64_t v425 = *((void *)v406 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v426 = v529;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v425)
            {
              *(void *)(v405 + 192) = v425;
              *(void *)(v405 + 200) = *((void *)v406 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v405 + 192) = v406[12];
            }
            uint64_t v88 = a1;
            size_t v352 = v472;
            unsigned int v385 = v506;
            *(void *)(v405 + 208) = *((void *)v406 + 26);
            *(void *)(v405 + 216) = *((void *)v406 + 27);
            *(void *)(v405 + 224) = *((void *)v406 + 28);
            *(void *)(v405 + 232) = *((void *)v406 + 29);
            *(void *)(v405 + 240) = *((void *)v406 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v409 = *v406;
            long long v410 = v406[1];
            long long v411 = v406[3];
            *(_OWORD *)(v405 + 32) = v406[2];
            *(_OWORD *)(v405 + 48) = v411;
            *(_OWORD *)unint64_t v405 = v409;
            *(_OWORD *)(v405 + 16) = v410;
            long long v412 = v406[4];
            long long v413 = v406[5];
            long long v414 = v406[7];
            *(_OWORD *)(v405 + 96) = v406[6];
            *(_OWORD *)(v405 + 112) = v414;
            *(_OWORD *)(v405 + 64) = v412;
            *(_OWORD *)(v405 + 80) = v413;
            long long v415 = v406[8];
            long long v416 = v406[9];
            long long v417 = v406[11];
            *(_OWORD *)(v405 + 160) = v406[10];
            *(_OWORD *)(v405 + 176) = v417;
            *(_OWORD *)(v405 + 128) = v415;
            *(_OWORD *)(v405 + 144) = v416;
            long long v418 = v406[12];
            long long v419 = v406[13];
            long long v420 = v406[14];
            *(void *)(v405 + 240) = *((void *)v406 + 30);
            *(_OWORD *)(v405 + 208) = v419;
            *(_OWORD *)(v405 + 224) = v420;
            *(_OWORD *)(v405 + 192) = v418;
            size_t v352 = v472;
          }
          v427 = (_OWORD *)((v405 + 255) & 0xFFFFFFFFFFFFFFF8);
          v428 = (long long *)(((unint64_t)v406 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v429 = *v428;
          *(_OWORD *)((char *)v427 + 9) = *(long long *)((char *)v428 + 9);
          _OWORD *v427 = v429;
          unint64_t v430 = (v405 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v431 = ((unint64_t)v406 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v432 = *(_OWORD *)v431;
          *(unsigned char *)(v430 + 16) = *(unsigned char *)(v431 + 16);
          *(_OWORD *)unint64_t v430 = v432;
          v433 = (void *)((v405 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v434 = ((unint64_t)v406 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v435 = *(void *)v434;
          v434 += 15;
          void *v433 = v435;
          v436 = (void *)(((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v437 = *(void *)(v434 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v438 = *(void *)((v434 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v437, v438);
          void *v436 = v437;
          v436[1] = v438;
          uint64_t v93 = v511;
          v351 = v515;
          if (v385) {
            goto LABEL_119;
          }
          goto LABEL_102;
        }
        unint64_t v135 = (unint64_t)&v89[v461] & v483;
        uint64_t v95 = v448;
        unint64_t v136 = (v448 + v135) & v501;
        if (v33 == v489)
        {
          if (v31 == v33)
          {
            uint64_t v90 = v42;
            int v91 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v513 + 48))((v448 + v135) & v501, v31, v453);
            uint64_t v88 = a1;
            uint64_t v92 = v465;
LABEL_99:
            uint64_t v93 = (char *)(((unint64_t)a1 + v493) & v47);
            uint64_t v94 = AssociatedTypeWitness;
            goto LABEL_100;
          }
          v348 = (unint64_t *)((v452 + v136) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v92 = v465;
          if (v32 <= 0x7FFFFFFE)
          {
            uint64_t v90 = v42;
            unint64_t v349 = *v348;
            if (v349 >= 0xFFFFFFFF) {
              LODWORD(v349) = -1;
            }
            uint64_t v88 = a1;
            uint64_t v93 = (char *)(((unint64_t)a1 + v493) & v47);
            uint64_t v94 = AssociatedTypeWitness;
            if ((v349 + 1) >= 2) {
              goto LABEL_101;
            }
            goto LABEL_104;
          }
          uint64_t v90 = v42;
          int v91 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v512 + 48))(((unint64_t)v348 + v450) & v42, v485, v451);
        }
        else
        {
          unint64_t v224 = v136 + v454;
          uint64_t v92 = v465;
          if ((v36 & 0x80000000) != 0)
          {
            uint64_t v90 = v42;
            uint64_t v88 = a1;
            uint64_t v350 = (v471 + ((v517 + v224) & v502)) & v525;
            uint64_t v93 = (char *)(((unint64_t)a1 + v493) & v47);
            uint64_t v94 = AssociatedTypeWitness;
            if (v506 < 0x7FFFFFFE)
            {
              unint64_t v443 = *(void *)(((v444 + ((v470 + v350) & v525)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v443 >= 0xFFFFFFFF) {
                LODWORD(v443) = -1;
              }
              if ((v443 + 1) >= 2) {
                goto LABEL_101;
              }
              goto LABEL_104;
            }
            int v91 = (*(uint64_t (**)(uint64_t))(v465 + 48))(v350);
            goto LABEL_100;
          }
          uint64_t v90 = v42;
          unint64_t v225 = *(void *)(v224 + 8);
          if (v225 >= 0xFFFFFFFF) {
            LODWORD(v225) = -1;
          }
          int v91 = v225 + 1;
        }
        uint64_t v88 = a1;
        goto LABEL_99;
      case 2u:
        unint64_t v508 = v46;
        uint64_t v498 = v39;
        uint64_t v96 = *(void (**)(void *, uint64_t *, uint64_t))(v457 + 16);
        unint64_t v505 = v23;
        uint64_t v491 = v21;
        uint64_t v495 = v22;
        uint64_t v526 = v43;
        uint64_t v97 = v20;
        uint64_t v487 = v45;
        uint64_t v98 = v44;
        v96((char *)a1, a2, v458);
        unint64_t v99 = ((unint64_t)a1 + v500) & ~(unint64_t)v481;
        unint64_t v100 = ((unint64_t)a2 + v500) & ~(unint64_t)v481;
        v96((void *)v99, (uint64_t *)v100, v458);
        unint64_t v101 = (v19 + v99) & v98;
        unint64_t v102 = (v19 + v100) & v98;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v455 + 16))(v101, v102, v456);
        uint64_t v103 = (void *)((v97 + v101) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v104 = (void *)((v97 + v102) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v103 = *v104;
        unint64_t v105 = ((unint64_t)v103 + v491) & v487;
        unint64_t v106 = ((unint64_t)v104 + v491) & v487;
        uint64_t v107 = *(void (**)(unint64_t, unint64_t, uint64_t))(v459 + 16);
        swift_bridgeObjectRetain();
        v107(v105, v106, v460);
        uint64_t v108 = (void *)((v495 + v106) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v109 = (void *)((v495 + v105) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v109 = *v108;
        uint64_t v110 = (void *)(((unint64_t)v109 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v111 = (void *)(((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v110 = *v111;
        v110[1] = v111[1];
        uint64_t v112 = (void *)(v505 + v101);
        *uint64_t v112 = *(void *)(v505 + v102);
        v112[1] = *(void *)(v505 + v102 + 8);
        unint64_t v113 = (v517 + v505 + v101) & v502;
        unint64_t v114 = (v517 + v505 + v102) & v502;
        *(unsigned char *)unint64_t v113 = *(unsigned char *)v114;
        uint64_t v115 = v113 | 4;
        int v116 = *(_DWORD *)(v114 | 4);
        *(unsigned char *)(v115 + 4) = *(unsigned char *)((v114 | 4) + 4);
        *(_DWORD *)uint64_t v115 = v116;
        *(_WORD *)(v113 + 10) = *(_WORD *)(v114 + 0xA);
        unint64_t v521 = v113;
        uint64_t v117 = (v471 + v113) & v526;
        uint64_t v118 = (v471 + v114) & v526;
        unint64_t v119 = *(void (**)(uint64_t, uint64_t, uint64_t))(v465 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v119(v117, v118, v469);
        uint64_t v120 = (v470 + v117) & v526;
        uint64_t v121 = (v470 + v118) & v526;
        v119(v120, v121, v469);
        uint64_t v122 = (unsigned char *)(v120 + v472);
        *uint64_t v122 = *(unsigned char *)(v121 + v472);
        v122[1] = *(unsigned char *)(v121 + v472 + 1);
        v122[2] = *(unsigned char *)(v121 + v472 + 2);
        v122[3] = *(unsigned char *)(v121 + v472 + 3);
        v122[4] = *(unsigned char *)(v121 + v472 + 4);
        unint64_t v123 = (v120 + v472 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v124 = (v121 + v472 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v123 = *(void *)v124;
        *(void *)(v123 + 8) = *(void *)(v124 + 8);
        *(unsigned char *)(v123 + 16) = *(unsigned char *)(v124 + 16);
        *(unsigned char *)(v123 + 17) = *(unsigned char *)(v124 + 17);
        *(unsigned char *)(v123 + 18) = *(unsigned char *)(v124 + 18);
        *(unsigned char *)(v123 + 19) = *(unsigned char *)(v124 + 19);
        unint64_t v125 = (v123 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v126 = (v124 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v125 = *(void *)v126;
        *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
        *(unsigned char *)(v125 + 9) = *(unsigned char *)(v126 + 9);
        *(unsigned char *)(v125 + 10) = *(unsigned char *)(v126 + 10);
        *(unsigned char *)(v125 + 11) = *(unsigned char *)(v126 + 11);
        *(unsigned char *)(v125 + 12) = *(unsigned char *)(v126 + 12);
        uint64_t v127 = (void *)((v124 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v128 = (void *)((v123 + 47) & 0xFFFFFFFFFFFFFFF8);
        void *v128 = *v127;
        unint64_t v129 = ((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v130 = ((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v129 = *(void *)v130;
        *(unsigned char *)(v129 + 8) = *(unsigned char *)(v130 + 8);
        *(unsigned char *)(v129 + 9) = *(unsigned char *)(v130 + 9);
        uint64_t v131 = (void *)((v466 + v129) & v526);
        unint64_t v132 = (const void *)((v466 + v130) & v526);
        uint64_t v133 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v465 + 48);
        swift_bridgeObjectRetain();
        if (v133(v132, 1, v469))
        {
          memcpy(v131, v132, __n);
        }
        else
        {
          v119((uint64_t)v131, (uint64_t)v132, v469);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v465 + 56))(v131, 0, 1, v469);
        }
        uint64_t v137 = (void *)(((unint64_t)v131 + v467) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v138 = (void *)(((unint64_t)v132 + v467) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v137 = *v138;
        unint64_t v139 = ((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v140 = ((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v141 = *(void *)v140;
        *(unsigned char *)(v139 + 8) = *(unsigned char *)(v140 + 8);
        *(void *)unint64_t v139 = v141;
        unint64_t v142 = (void *)(((unint64_t)v137 + 31) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (void *)(((unint64_t)v138 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v142 = *v143;
        unint64_t v144 = ((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v145 = (uint64_t *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v146 = v145[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v146 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v144 = *(_OWORD *)v145;
        }
        else
        {
          uint64_t v147 = *v145;
          sub_24D3F9C18(*v145, v146);
          *(void *)unint64_t v144 = v147;
          *(void *)(v144 + 8) = v146;
        }
        unint64_t v148 = (v144 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v149 = ((unint64_t)v145 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v150 = *(void *)v149;
        *(unsigned char *)(v148 + 8) = *(unsigned char *)(v149 + 8);
        *(void *)unint64_t v148 = v150;
        *(unsigned char *)(v148 + 9) = *(unsigned char *)(v149 + 9);
        unint64_t v151 = (v148 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v152 = (v149 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v153 = *(_DWORD *)v152;
        *(unsigned char *)(v151 + 4) = *(unsigned char *)(v152 + 4);
        *(_DWORD *)unint64_t v151 = v153;
        uint64_t v154 = (void *)((v148 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v155 = (void *)((v149 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v154 = *v155;
        v154[1] = v155[1];
        unint64_t v156 = v521 + v468;
        uint64_t v157 = (long long *)(v114 + v468);
        unint64_t v158 = *(void *)(v114 + v468 + 16);
        if (v158 >= 0xFFFFFFFF) {
          LODWORD(v158) = -1;
        }
        int v159 = v158 - 1;
        swift_bridgeObjectRetain();
        if (v159 < 0)
        {
          *(void *)unint64_t v156 = *(void *)v157;
          *(unsigned char *)(v156 + 8) = *((unsigned char *)v157 + 8);
          *(unsigned char *)(v156 + 9) = *((unsigned char *)v157 + 9);
          uint64_t v173 = (void *)*((void *)v157 + 2);
          id v174 = v173;
          *(void *)(v156 + 16) = v173;
          uint64_t v175 = (void *)*((void *)v157 + 3);
          id v176 = v175;
          *(void *)(v156 + 24) = v175;
          *(unsigned char *)(v156 + 32) = *((unsigned char *)v157 + 32);
          *(unsigned char *)(v156 + 33) = *((unsigned char *)v157 + 33);
          *(unsigned char *)(v156 + 34) = *((unsigned char *)v157 + 34);
          *(void *)(v156 + 40) = *((void *)v157 + 5);
          *(void *)(v156 + 48) = *((void *)v157 + 6);
          *(void *)(v156 + 56) = *((void *)v157 + 7);
          *(void *)(v156 + 64) = *((void *)v157 + 8);
          *(unsigned char *)(v156 + 72) = *((unsigned char *)v157 + 72);
          *(void *)(v156 + 80) = *((void *)v157 + 10);
          *(void *)(v156 + 88) = *((void *)v157 + 11);
          v527 = (void *)*((void *)v157 + 12);
          *(void *)(v156 + 96) = v527;
          *(unsigned char *)(v156 + 104) = *((unsigned char *)v157 + 104);
          *(unsigned char *)(v156 + 105) = *((unsigned char *)v157 + 105);
          *(void *)(v156 + 112) = *((void *)v157 + 14);
          *(void *)(v156 + 120) = *((void *)v157 + 15);
          *(void *)(v156 + 128) = *((void *)v157 + 16);
          *(void *)(v156 + 136) = *((void *)v157 + 17);
          *(void *)(v156 + 144) = *((void *)v157 + 18);
          *(void *)(v156 + 152) = *((void *)v157 + 19);
          *(void *)(v156 + 160) = *((void *)v157 + 20);
          *(void *)(v156 + 168) = *((void *)v157 + 21);
          *(unsigned char *)(v156 + 176) = *((unsigned char *)v157 + 176);
          *(void *)(v156 + 184) = *((void *)v157 + 23);
          uint64_t v177 = *((void *)v157 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v178 = v527;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v177)
          {
            *(void *)(v156 + 192) = v177;
            *(void *)(v156 + 200) = *((void *)v157 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v156 + 192) = v157[12];
          }
          unint64_t v172 = a2;
          *(void *)(v156 + 208) = *((void *)v157 + 26);
          *(void *)(v156 + 216) = *((void *)v157 + 27);
          *(void *)(v156 + 224) = *((void *)v157 + 28);
          *(void *)(v156 + 232) = *((void *)v157 + 29);
          *(void *)(v156 + 240) = *((void *)v157 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v160 = *v157;
          long long v161 = v157[1];
          long long v162 = v157[3];
          *(_OWORD *)(v156 + 32) = v157[2];
          *(_OWORD *)(v156 + 48) = v162;
          *(_OWORD *)unint64_t v156 = v160;
          *(_OWORD *)(v156 + 16) = v161;
          long long v163 = v157[4];
          long long v164 = v157[5];
          long long v165 = v157[7];
          *(_OWORD *)(v156 + 96) = v157[6];
          *(_OWORD *)(v156 + 112) = v165;
          *(_OWORD *)(v156 + 64) = v163;
          *(_OWORD *)(v156 + 80) = v164;
          long long v166 = v157[8];
          long long v167 = v157[9];
          long long v168 = v157[11];
          *(_OWORD *)(v156 + 160) = v157[10];
          *(_OWORD *)(v156 + 176) = v168;
          *(_OWORD *)(v156 + 128) = v166;
          *(_OWORD *)(v156 + 144) = v167;
          long long v169 = v157[12];
          long long v170 = v157[13];
          long long v171 = v157[14];
          *(void *)(v156 + 240) = *((void *)v157 + 30);
          *(_OWORD *)(v156 + 208) = v170;
          *(_OWORD *)(v156 + 224) = v171;
          *(_OWORD *)(v156 + 192) = v169;
          unint64_t v172 = a2;
        }
        v226 = (_OWORD *)((v156 + 255) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v227 = (long long *)(((unint64_t)v157 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v228 = *v227;
        *(_OWORD *)((char *)v226 + 9) = *(long long *)((char *)v227 + 9);
        _OWORD *v226 = v228;
        unint64_t v229 = (v156 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v230 = ((unint64_t)v157 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v231 = *(_OWORD *)v230;
        *(unsigned char *)(v229 + 16) = *(unsigned char *)(v230 + 16);
        *(_OWORD *)unint64_t v229 = v231;
        uint64_t v232 = (void *)((v156 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v233 = ((unint64_t)v157 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v234 = *(void *)v233;
        v233 += 15;
        *uint64_t v232 = v234;
        uint64_t v235 = (void *)(((unint64_t)v232 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v236 = *(void *)(v233 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v237 = *(void *)((v233 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v236, v237);
        *uint64_t v235 = v236;
        v235[1] = v237;
        uint64_t v88 = a1;
        *((unsigned char *)a1 + v508) = *((unsigned char *)v172 + v508);
        unint64_t v238 = ((unint64_t)a1 + v508) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v239 = ((unint64_t)v172 + v508) & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v238 + 8) = *(void *)(v239 + 8);
        *(void *)(v238 + 16) = *(void *)(v239 + 16);
        char v240 = 2;
LABEL_120:
        *((unsigned char *)v88 + v498) = v240;
        goto LABEL_121;
      case 3u:
        uint64_t v134 = a2[1];
        uint64_t v88 = a1;
        *a1 = *a2;
        a1[1] = v134;
        *((unsigned char *)a1 + v39) = 3;
        goto LABEL_121;
      default:
        uint64_t v474 = ~v16;
        unint64_t v476 = ~(unint64_t)v481;
        uint64_t v478 = v44;
        uint64_t v482 = v20;
        uint64_t v486 = v45;
        uint64_t v490 = v21;
        uint64_t v494 = v22;
        unint64_t v504 = v23;
        unint64_t v507 = v46;
        uint64_t v497 = v39;
        uint64_t v48 = v42;
        uint64_t v49 = *(void (**)(void *, uint64_t *, uint64_t))(v520 + 16);
        uint64_t v50 = ~v27;
        v49((char *)a1, a2, AssociatedTypeWitness);
        unint64_t v51 = ((unint64_t)a1 + v461) & v50;
        uint64_t v52 = ((unint64_t)a2 + v461) & v50;
        v49((void *)v51, (uint64_t *)v52, AssociatedTypeWitness);
        unint64_t v53 = (v51 + v509 + v523) & ~v523;
        uint64_t v54 = (v52 + v509 + v523) & ~v523;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v513 + 16))(v53, v54, v453);
        uint64_t v55 = (void *)((v452 + v53) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v56 = (void *)((v452 + v54) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v55 = *v56;
        unint64_t v57 = ((unint64_t)v55 + v450) & v48;
        unint64_t v58 = ((unint64_t)v56 + v450) & v48;
        id v59 = *(void (**)(unint64_t, unint64_t, uint64_t))(v512 + 16);
        swift_bridgeObjectRetain();
        v59(v57, v58, v451);
        uint64_t v60 = (void *)((v449 + v58) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v61 = (void *)((v449 + v57) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v61 = *v60;
        uint64_t v62 = (void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v63 = (void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v62 = *v63;
        v62[1] = v63[1];
        uint64_t v64 = (void *)(v454 + v53);
        *uint64_t v64 = *(void *)(v454 + v54);
        v64[1] = *(void *)(v454 + v54 + 8);
        unint64_t v65 = (v517 + v454 + v53) & v502;
        unint64_t v66 = (v517 + v454 + v54) & v502;
        *(unsigned char *)unint64_t v65 = *(unsigned char *)v66;
        uint64_t v67 = v65 | 4;
        int v68 = *(_DWORD *)(v66 | 4);
        *(unsigned char *)(v67 + 4) = *(unsigned char *)((v66 | 4) + 4);
        *(_DWORD *)uint64_t v67 = v68;
        *(_WORD *)(v65 + 10) = *(_WORD *)(v66 + 0xA);
        uint64_t v69 = (v471 + v65) & v43;
        uint64_t v70 = (v471 + v66) & v43;
        uint64_t v71 = v43;
        uint64_t v72 = *(void (**)(uint64_t, uint64_t, uint64_t))(v465 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72(v69, v70, v469);
        uint64_t v73 = (v470 + v69) & v71;
        uint64_t v74 = (v470 + v70) & v71;
        v72(v73, v74, v469);
        uint64_t v75 = (unsigned char *)(v73 + v472);
        *uint64_t v75 = *(unsigned char *)(v74 + v472);
        v75[1] = *(unsigned char *)(v74 + v472 + 1);
        v75[2] = *(unsigned char *)(v74 + v472 + 2);
        v75[3] = *(unsigned char *)(v74 + v472 + 3);
        v75[4] = *(unsigned char *)(v74 + v472 + 4);
        unint64_t v76 = (v73 + v472 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v77 = (v74 + v472 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v76 = *(void *)v77;
        *(void *)(v76 + 8) = *(void *)(v77 + 8);
        *(unsigned char *)(v76 + 16) = *(unsigned char *)(v77 + 16);
        *(unsigned char *)(v76 + 17) = *(unsigned char *)(v77 + 17);
        *(unsigned char *)(v76 + 18) = *(unsigned char *)(v77 + 18);
        *(unsigned char *)(v76 + 19) = *(unsigned char *)(v77 + 19);
        unint64_t v78 = (v76 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v79 = (v77 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v78 = *(void *)v79;
        *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
        *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
        *(unsigned char *)(v78 + 10) = *(unsigned char *)(v79 + 10);
        *(unsigned char *)(v78 + 11) = *(unsigned char *)(v79 + 11);
        *(unsigned char *)(v78 + 12) = *(unsigned char *)(v79 + 12);
        unint64_t v80 = (void *)((v77 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v81 = (void *)((v76 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v81 = *v80;
        unint64_t v82 = ((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v83 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v82 = *(void *)v83;
        *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
        *(unsigned char *)(v82 + 9) = *(unsigned char *)(v83 + 9);
        id v84 = (void *)((v466 + v82) & v71);
        uint64_t v524 = v71;
        id v85 = (const void *)((v466 + v83) & v71);
        id v86 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v465 + 48);
        swift_bridgeObjectRetain();
        v510 = v86;
        if (v86(v85, 1, v469))
        {
          memcpy(v84, v85, __n);
        }
        else
        {
          v72((uint64_t)v84, (uint64_t)v85, v469);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v465 + 56))(v84, 0, 1, v469);
        }
        uint64_t v88 = a1;
        id v179 = (void *)(((unint64_t)v84 + v467) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v180 = (void *)(((unint64_t)v85 + v467) & 0xFFFFFFFFFFFFFFF8);
        void *v179 = *v180;
        unint64_t v181 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v182 = ((unint64_t)v180 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v183 = *(void *)v182;
        *(unsigned char *)(v181 + 8) = *(unsigned char *)(v182 + 8);
        *(void *)unint64_t v181 = v183;
        uint64_t v184 = (void *)(((unint64_t)v179 + 31) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v185 = (void *)(((unint64_t)v180 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v184 = *v185;
        unint64_t v186 = ((unint64_t)v184 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v187 = (uint64_t *)(((unint64_t)v185 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v188 = v187[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v188 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v186 = *(_OWORD *)v187;
        }
        else
        {
          uint64_t v189 = *v187;
          sub_24D3F9C18(*v187, v188);
          *(void *)unint64_t v186 = v189;
          *(void *)(v186 + 8) = v188;
        }
        unint64_t v190 = (v186 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v191 = ((unint64_t)v187 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v192 = *(void *)v191;
        *(unsigned char *)(v190 + 8) = *(unsigned char *)(v191 + 8);
        *(void *)unint64_t v190 = v192;
        *(unsigned char *)(v190 + 9) = *(unsigned char *)(v191 + 9);
        unint64_t v193 = (v190 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v194 = (v191 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v195 = *(_DWORD *)v194;
        *(unsigned char *)(v193 + 4) = *(unsigned char *)(v194 + 4);
        *(_DWORD *)unint64_t v193 = v195;
        uint64_t v196 = (void *)((v190 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v197 = (void *)((v191 + 25) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v196 = *v197;
        v196[1] = v197[1];
        unint64_t v198 = v468 + v65;
        unint64_t v199 = v468 + v66;
        unint64_t v200 = *(void *)(v468 + v66 + 16);
        if (v200 >= 0xFFFFFFFF) {
          LODWORD(v200) = -1;
        }
        int v201 = v200 - 1;
        swift_bridgeObjectRetain();
        if (v201 < 0)
        {
          *(void *)unint64_t v198 = *(void *)v199;
          *(unsigned char *)(v198 + 8) = *(unsigned char *)(v199 + 8);
          *(unsigned char *)(v198 + 9) = *(unsigned char *)(v199 + 9);
          unint64_t v218 = *(void **)(v199 + 16);
          id v219 = v218;
          *(void *)(v198 + 16) = v218;
          v220 = *(void **)(v199 + 24);
          id v221 = v220;
          *(void *)(v198 + 24) = v220;
          *(unsigned char *)(v198 + 32) = *(unsigned char *)(v199 + 32);
          *(unsigned char *)(v198 + 33) = *(unsigned char *)(v199 + 33);
          *(unsigned char *)(v198 + 34) = *(unsigned char *)(v199 + 34);
          *(void *)(v198 + 40) = *(void *)(v199 + 40);
          *(void *)(v198 + 48) = *(void *)(v199 + 48);
          *(void *)(v198 + 56) = *(void *)(v199 + 56);
          *(void *)(v198 + 64) = *(void *)(v199 + 64);
          *(unsigned char *)(v198 + 72) = *(unsigned char *)(v199 + 72);
          *(void *)(v198 + 80) = *(void *)(v199 + 80);
          *(void *)(v198 + 88) = *(void *)(v199 + 88);
          uint64_t v222 = *(void **)(v199 + 96);
          *(void *)(v198 + 96) = v222;
          *(unsigned char *)(v198 + 104) = *(unsigned char *)(v199 + 104);
          *(unsigned char *)(v198 + 105) = *(unsigned char *)(v199 + 105);
          *(void *)(v198 + 112) = *(void *)(v199 + 112);
          *(void *)(v198 + 120) = *(void *)(v199 + 120);
          *(void *)(v198 + 128) = *(void *)(v199 + 128);
          *(void *)(v198 + 136) = *(void *)(v199 + 136);
          *(void *)(v198 + 144) = *(void *)(v199 + 144);
          *(void *)(v198 + 152) = *(void *)(v199 + 152);
          *(void *)(v198 + 160) = *(void *)(v199 + 160);
          *(void *)(v198 + 168) = *(void *)(v199 + 168);
          *(unsigned char *)(v198 + 176) = *(unsigned char *)(v199 + 176);
          *(void *)(v198 + 184) = *(void *)(v199 + 184);
          uint64_t v462 = *(void *)(v199 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v223 = v222;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v462)
          {
            *(void *)(v198 + 192) = v462;
            *(void *)(v198 + 200) = *(void *)(v199 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v198 + 192) = *(_OWORD *)(v199 + 192);
          }
          uint64_t v88 = a1;
          uint64_t v214 = v469;
          uint64_t v216 = v455;
          uint64_t v215 = v456;
          size_t v217 = v445;
          *(void *)(v198 + 208) = *(void *)(v199 + 208);
          *(void *)(v198 + 216) = *(void *)(v199 + 216);
          *(void *)(v198 + 224) = *(void *)(v199 + 224);
          *(void *)(v198 + 232) = *(void *)(v199 + 232);
          *(void *)(v198 + 240) = *(void *)(v199 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v202 = *(_OWORD *)v199;
          long long v203 = *(_OWORD *)(v199 + 16);
          long long v204 = *(_OWORD *)(v199 + 48);
          *(_OWORD *)(v198 + 32) = *(_OWORD *)(v199 + 32);
          *(_OWORD *)(v198 + 48) = v204;
          *(_OWORD *)unint64_t v198 = v202;
          *(_OWORD *)(v198 + 16) = v203;
          long long v205 = *(_OWORD *)(v199 + 64);
          long long v206 = *(_OWORD *)(v199 + 80);
          long long v207 = *(_OWORD *)(v199 + 112);
          *(_OWORD *)(v198 + 96) = *(_OWORD *)(v199 + 96);
          *(_OWORD *)(v198 + 112) = v207;
          *(_OWORD *)(v198 + 64) = v205;
          *(_OWORD *)(v198 + 80) = v206;
          long long v208 = *(_OWORD *)(v199 + 128);
          long long v209 = *(_OWORD *)(v199 + 144);
          long long v210 = *(_OWORD *)(v199 + 176);
          *(_OWORD *)(v198 + 160) = *(_OWORD *)(v199 + 160);
          *(_OWORD *)(v198 + 176) = v210;
          *(_OWORD *)(v198 + 128) = v208;
          *(_OWORD *)(v198 + 144) = v209;
          long long v211 = *(_OWORD *)(v199 + 192);
          long long v212 = *(_OWORD *)(v199 + 208);
          long long v213 = *(_OWORD *)(v199 + 224);
          *(void *)(v198 + 240) = *(void *)(v199 + 240);
          *(_OWORD *)(v198 + 208) = v212;
          *(_OWORD *)(v198 + 224) = v213;
          *(_OWORD *)(v198 + 192) = v211;
          uint64_t v214 = v469;
          uint64_t v216 = v455;
          uint64_t v215 = v456;
          size_t v217 = v445;
        }
        v241 = (_OWORD *)((v198 + 255) & 0xFFFFFFFFFFFFFFF8);
        v242 = (long long *)((v199 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v243 = *v242;
        *(_OWORD *)((char *)v241 + 9) = *(long long *)((char *)v242 + 9);
        _OWORD *v241 = v243;
        unint64_t v244 = (v198 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v245 = (v199 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v246 = *(_OWORD *)v245;
        *(unsigned char *)(v244 + 16) = *(unsigned char *)(v245 + 16);
        *(_OWORD *)unint64_t v244 = v246;
        v247 = (void *)((v198 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v248 = (v199 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v249 = *(void *)v248;
        v248 += 15;
        void *v247 = v249;
        uint64_t v250 = (void *)(((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v251 = *(void *)(v248 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v252 = *(void *)((v248 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v251, v252);
        *uint64_t v250 = v251;
        v250[1] = v252;
        unint64_t v253 = ((unint64_t)v88 + v217) & v474;
        size_t v254 = ((unint64_t)a2 + v217) & v474;
        v255 = *(void (**)(unint64_t, size_t, uint64_t))(v457 + 16);
        v255(v253, v254, v458);
        unint64_t v516 = v253;
        unint64_t v256 = (v500 + v253) & v476;
        size_t v475 = v254;
        unint64_t v257 = (v500 + v254) & v476;
        v255(v256, v257, v458);
        unint64_t v258 = (v19 + v256) & v478;
        unint64_t v259 = (v19 + v257) & v478;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v216 + 16))(v258, v259, v215);
        uint64_t v260 = (void *)((v482 + v258) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v261 = (void *)((v482 + v259) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v260 = *v261;
        unint64_t v262 = ((unint64_t)v260 + v490) & v486;
        unint64_t v263 = ((unint64_t)v261 + v490) & v486;
        unint64_t v264 = *(void (**)(unint64_t, unint64_t, uint64_t))(v459 + 16);
        swift_bridgeObjectRetain();
        v264(v262, v263, v460);
        v265 = (void *)((v494 + v262) & 0xFFFFFFFFFFFFFFF8);
        v266 = (void *)((v494 + v263) & 0xFFFFFFFFFFFFFFF8);
        void *v265 = *v266;
        v267 = (void *)(((unint64_t)v265 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v268 = (void *)(((unint64_t)v266 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v267 = *v268;
        v267[1] = v268[1];
        char v269 = (void *)(v258 + v504);
        *char v269 = *(void *)(v259 + v504);
        v269[1] = *(void *)(v259 + v504 + 8);
        unint64_t v270 = (v517 + v258 + v504) & v502;
        unint64_t v271 = (v517 + v259 + v504) & v502;
        *(unsigned char *)unint64_t v270 = *(unsigned char *)v271;
        uint64_t v272 = v270 | 4;
        int v273 = *(_DWORD *)(v271 | 4);
        *(unsigned char *)(v272 + 4) = *(unsigned char *)((v271 | 4) + 4);
        *(_DWORD *)uint64_t v272 = v273;
        *(_WORD *)(v270 + 10) = *(_WORD *)(v271 + 0xA);
        uint64_t v274 = (v471 + v270) & v524;
        uint64_t v275 = (v471 + v271) & v524;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v72(v274, v275, v214);
        uint64_t v276 = (v470 + v274) & v524;
        uint64_t v277 = (v470 + v275) & v524;
        v72(v276, v277, v214);
        char v278 = (unsigned char *)(v276 + v472);
        *char v278 = *(unsigned char *)(v277 + v472);
        v278[1] = *(unsigned char *)(v277 + v472 + 1);
        v278[2] = *(unsigned char *)(v277 + v472 + 2);
        v278[3] = *(unsigned char *)(v277 + v472 + 3);
        v278[4] = *(unsigned char *)(v277 + v472 + 4);
        unint64_t v279 = (v276 + v472 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v280 = (v277 + v472 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v279 = *(void *)v280;
        *(void *)(v279 + 8) = *(void *)(v280 + 8);
        *(unsigned char *)(v279 + 16) = *(unsigned char *)(v280 + 16);
        *(unsigned char *)(v279 + 17) = *(unsigned char *)(v280 + 17);
        *(unsigned char *)(v279 + 18) = *(unsigned char *)(v280 + 18);
        *(unsigned char *)(v279 + 19) = *(unsigned char *)(v280 + 19);
        unint64_t v281 = (v279 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v282 = (v280 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v281 = *(void *)v282;
        *(unsigned char *)(v281 + 8) = *(unsigned char *)(v282 + 8);
        *(unsigned char *)(v281 + 9) = *(unsigned char *)(v282 + 9);
        *(unsigned char *)(v281 + 10) = *(unsigned char *)(v282 + 10);
        *(unsigned char *)(v281 + 11) = *(unsigned char *)(v282 + 11);
        *(unsigned char *)(v281 + 12) = *(unsigned char *)(v282 + 12);
        uint64_t v283 = (void *)((v279 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v284 = (void *)((v280 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v283 = *v284;
        unint64_t v285 = ((unint64_t)v283 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v286 = ((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v285 = *(void *)v286;
        *(unsigned char *)(v285 + 8) = *(unsigned char *)(v286 + 8);
        *(unsigned char *)(v285 + 9) = *(unsigned char *)(v286 + 9);
        uint64_t v287 = (void *)((v466 + v285) & v524);
        char v288 = (const void *)((v466 + v286) & v524);
        swift_bridgeObjectRetain();
        if (v510(v288, 1, v214))
        {
          memcpy(v287, v288, __n);
        }
        else
        {
          v72((uint64_t)v287, (uint64_t)v288, v214);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v465 + 56))(v287, 0, 1, v214);
        }
        uint64_t v289 = (void *)(((unint64_t)v287 + v467) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v290 = (void *)(((unint64_t)v288 + v467) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v289 = *v290;
        unint64_t v291 = ((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v292 = ((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v293 = *(void *)v292;
        *(unsigned char *)(v291 + 8) = *(unsigned char *)(v292 + 8);
        *(void *)unint64_t v291 = v293;
        uint64_t v294 = (void *)(((unint64_t)v289 + 31) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v295 = (void *)(((unint64_t)v290 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v294 = *v295;
        unint64_t v296 = ((unint64_t)v294 + 15) & 0xFFFFFFFFFFFFFFF8;
        v297 = (uint64_t *)(((unint64_t)v295 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v298 = v297[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v298 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v296 = *(_OWORD *)v297;
        }
        else
        {
          uint64_t v299 = *v297;
          sub_24D3F9C18(*v297, v298);
          *(void *)unint64_t v296 = v299;
          *(void *)(v296 + 8) = v298;
        }
        unint64_t v300 = (v296 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v301 = ((unint64_t)v297 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v302 = *(void *)v301;
        *(unsigned char *)(v300 + 8) = *(unsigned char *)(v301 + 8);
        *(void *)unint64_t v300 = v302;
        *(unsigned char *)(v300 + 9) = *(unsigned char *)(v301 + 9);
        unint64_t v303 = (v300 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v304 = (v301 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v305 = *(_DWORD *)v304;
        *(unsigned char *)(v303 + 4) = *(unsigned char *)(v304 + 4);
        *(_DWORD *)unint64_t v303 = v305;
        v306 = (void *)((v300 + 25) & 0xFFFFFFFFFFFFFFF8);
        v307 = (void *)((v301 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v306 = *v307;
        v306[1] = v307[1];
        unint64_t v308 = v270 + v468;
        v309 = (long long *)(v271 + v468);
        unint64_t v310 = *(void *)(v271 + v468 + 16);
        if (v310 >= 0xFFFFFFFF) {
          LODWORD(v310) = -1;
        }
        int v311 = v310 - 1;
        swift_bridgeObjectRetain();
        if (v311 < 0)
        {
          *(void *)unint64_t v308 = *(void *)v309;
          *(unsigned char *)(v308 + 8) = *((unsigned char *)v309 + 8);
          *(unsigned char *)(v308 + 9) = *((unsigned char *)v309 + 9);
          v326 = (void *)*((void *)v309 + 2);
          id v327 = v326;
          *(void *)(v308 + 16) = v326;
          v328 = (void *)*((void *)v309 + 3);
          id v329 = v328;
          *(void *)(v308 + 24) = v328;
          *(unsigned char *)(v308 + 32) = *((unsigned char *)v309 + 32);
          *(unsigned char *)(v308 + 33) = *((unsigned char *)v309 + 33);
          *(unsigned char *)(v308 + 34) = *((unsigned char *)v309 + 34);
          *(void *)(v308 + 40) = *((void *)v309 + 5);
          *(void *)(v308 + 48) = *((void *)v309 + 6);
          *(void *)(v308 + 56) = *((void *)v309 + 7);
          *(void *)(v308 + 64) = *((void *)v309 + 8);
          *(unsigned char *)(v308 + 72) = *((unsigned char *)v309 + 72);
          *(void *)(v308 + 80) = *((void *)v309 + 10);
          *(void *)(v308 + 88) = *((void *)v309 + 11);
          v528 = (void *)*((void *)v309 + 12);
          *(void *)(v308 + 96) = v528;
          *(unsigned char *)(v308 + 104) = *((unsigned char *)v309 + 104);
          *(unsigned char *)(v308 + 105) = *((unsigned char *)v309 + 105);
          *(void *)(v308 + 112) = *((void *)v309 + 14);
          *(void *)(v308 + 120) = *((void *)v309 + 15);
          *(void *)(v308 + 128) = *((void *)v309 + 16);
          *(void *)(v308 + 136) = *((void *)v309 + 17);
          *(void *)(v308 + 144) = *((void *)v309 + 18);
          *(void *)(v308 + 152) = *((void *)v309 + 19);
          *(void *)(v308 + 160) = *((void *)v309 + 20);
          *(void *)(v308 + 168) = *((void *)v309 + 21);
          *(unsigned char *)(v308 + 176) = *((unsigned char *)v309 + 176);
          *(void *)(v308 + 184) = *((void *)v309 + 23);
          uint64_t v330 = *((void *)v309 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v331 = v528;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v330)
          {
            *(void *)(v308 + 192) = v330;
            *(void *)(v308 + 200) = *((void *)v309 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v308 + 192) = v309[12];
          }
          uint64_t v88 = a1;
          unint64_t v324 = v516;
          size_t v325 = v475;
          *(void *)(v308 + 208) = *((void *)v309 + 26);
          *(void *)(v308 + 216) = *((void *)v309 + 27);
          *(void *)(v308 + 224) = *((void *)v309 + 28);
          *(void *)(v308 + 232) = *((void *)v309 + 29);
          *(void *)(v308 + 240) = *((void *)v309 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v312 = *v309;
          long long v313 = v309[1];
          long long v314 = v309[3];
          *(_OWORD *)(v308 + 32) = v309[2];
          *(_OWORD *)(v308 + 48) = v314;
          *(_OWORD *)unint64_t v308 = v312;
          *(_OWORD *)(v308 + 16) = v313;
          long long v315 = v309[4];
          long long v316 = v309[5];
          long long v317 = v309[7];
          *(_OWORD *)(v308 + 96) = v309[6];
          *(_OWORD *)(v308 + 112) = v317;
          *(_OWORD *)(v308 + 64) = v315;
          *(_OWORD *)(v308 + 80) = v316;
          long long v318 = v309[8];
          long long v319 = v309[9];
          long long v320 = v309[11];
          *(_OWORD *)(v308 + 160) = v309[10];
          *(_OWORD *)(v308 + 176) = v320;
          *(_OWORD *)(v308 + 128) = v318;
          *(_OWORD *)(v308 + 144) = v319;
          long long v321 = v309[12];
          long long v322 = v309[13];
          long long v323 = v309[14];
          *(void *)(v308 + 240) = *((void *)v309 + 30);
          *(_OWORD *)(v308 + 208) = v322;
          *(_OWORD *)(v308 + 224) = v323;
          *(_OWORD *)(v308 + 192) = v321;
          unint64_t v324 = v516;
          size_t v325 = v475;
        }
        v332 = (_OWORD *)((v308 + 255) & 0xFFFFFFFFFFFFFFF8);
        v333 = (long long *)(((unint64_t)v309 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v334 = *v333;
        *(_OWORD *)((char *)v332 + 9) = *(long long *)((char *)v333 + 9);
        _OWORD *v332 = v334;
        unint64_t v335 = (v308 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v336 = ((unint64_t)v309 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v337 = *(_OWORD *)v336;
        *(unsigned char *)(v335 + 16) = *(unsigned char *)(v336 + 16);
        *(_OWORD *)unint64_t v335 = v337;
        v338 = (void *)((v308 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v339 = ((unint64_t)v309 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v340 = *(void *)v339;
        v339 += 15;
        void *v338 = v340;
        v341 = (void *)(((unint64_t)v338 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v342 = *(void *)(v339 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v343 = *(void *)((v339 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v342, v343);
        void *v341 = v342;
        v341[1] = v343;
        v344 = (void *)((v324 + v507) & 0xFFFFFFFFFFFFFFF8);
        v345 = (void *)((v325 + v507) & 0xFFFFFFFFFFFFFFF8);
        void *v344 = *v345;
        v346 = (void *)(((unint64_t)v344 + 15) & 0xFFFFFFFFFFFFFFF8);
        v347 = (void *)(((unint64_t)v345 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v346 = *v347;
        v346[1] = v347[1];
        *((unsigned char *)v88 + v497) = 0;
LABEL_121:
        swift_bridgeObjectRetain();
        return v88;
    }
  }
  uint64_t v87 = *a2;
  *a1 = *a2;
  uint64_t v88 = (void *)(v87 + ((v40 + 16) & ~v40));
  swift_retain();
  return v88;
}

uint64_t sub_24D96A664(_DWORD *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v149 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v147 = *(unsigned __int8 *)(v149 + 80);
  uint64_t v153 = *(void *)(v149 + 64);
  uint64_t v120 = v153 + v147;
  uint64_t v118 = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(v118 - 8);
  uint64_t v157 = v1;
  int v2 = *(_DWORD *)(v1 + 80) & 0xF8;
  uint64_t v116 = swift_getAssociatedTypeWitness();
  uint64_t v156 = *(void *)(v116 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v156 + 80);
  uint64_t v159 = v2 | v3 | 7;
  uint64_t v110 = v153 + v159;
  uint64_t v117 = *(void *)(v1 + 64) + 7;
  uint64_t v115 = v3 + 8;
  uint64_t v150 = v3;
  unint64_t v119 = ((((*(void *)(v156 + 64) + 7 + ((v3 + 8 + (v117 & 0xFFFFFFFFFFFFFFF8)) & ~v3)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v132 = sub_24DCC8CE8();
  uint64_t v4 = *(void *)(v132 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v158 = (v5 | 7) + 16;
  uint64_t v136 = v5 + 12;
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v134 = v6 + v5;
  uint64_t v135 = v6 + 12;
  uint64_t v133 = v5 + 10;
  unint64_t v7 = (v5
      + 10
      + ((((((v6 + 12 + ((v6 + v5 + ((v5 + 12) & ~v5)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v5;
  uint64_t v131 = v4;
  unsigned int v152 = *(_DWORD *)(v4 + 84);
  if (!v152) {
    ++v6;
  }
  uint64_t v130 = v6 + 7;
  unint64_t v143 = (((((((((v6 + 7 + v7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v155 = ((((v143 + 327 + ((v158 + v119 + ((v153 + v159 + ((v153 + v147) & ~v147)) & ~v159)) & ~(v5 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v124 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v124 - 8);
  uint64_t v122 = v8;
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v125 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v125 - 8);
  uint64_t v123 = v10;
  int v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  uint64_t v128 = swift_getAssociatedTypeWitness();
  uint64_t v126 = *(void *)(v128 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v126 + 80);
  uint64_t v13 = v11 | v12 | 7;
  uint64_t v14 = v9 | v5 | v13;
  unint64_t v114 = v155 + v14;
  uint64_t v15 = *(void *)(v8 + 64);
  uint64_t v16 = v15 + v9;
  uint64_t v121 = v15 + v13;
  uint64_t v17 = *(void *)(v10 + 64) + 7;
  uint64_t v18 = v12 + 8;
  unint64_t v19 = ((((*(void *)(v126 + 64) + 7 + ((v12 + 8 + (v17 & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v20 = (v143 + 327 + ((v158 + v19 + ((v15 + v13 + ((v15 + v9) & ~v9)) & ~v13)) & ~(v5 | 7))) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = ((((((v20 + 15) & 0xFFFFFFFFFFFFFFF8) + ((v155 + v14) & ~v14) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v22 = v159 | v147 | v5;
  uint64_t v137 = v22 + v153;
  uint64_t v23 = *(unsigned int *)(v149 + 84);
  uint64_t v24 = *(unsigned int *)(v157 + 84);
  uint64_t v25 = *(unsigned int *)(v156 + 84);
  if (v24 <= v25) {
    unsigned int v26 = *(_DWORD *)(v156 + 84);
  }
  else {
    unsigned int v26 = *(_DWORD *)(v157 + 84);
  }
  if (v26 <= 0x7FFFFFFE) {
    unsigned int v27 = 2147483646;
  }
  else {
    unsigned int v27 = v26;
  }
  if (v27 <= v23) {
    unsigned int v28 = *(_DWORD *)(v149 + 84);
  }
  else {
    unsigned int v28 = v27;
  }
  if (v152 <= 0x7FFFFFFE) {
    unsigned int v29 = 2147483646;
  }
  else {
    unsigned int v29 = v152;
  }
  if (v28 <= v29) {
    unsigned int v30 = v29;
  }
  else {
    unsigned int v30 = v28;
  }
  if (v30 <= 0x7FFFFFFF) {
    int v31 = 0x7FFFFFFF;
  }
  else {
    int v31 = v30;
  }
  int v112 = v31;
  if (((v155 + ((v22 + v153) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 24 > v21) {
    unint64_t v21 = ((v155 + ((v22 + v153) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v32 = ((v20 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v32 > v21) {
    unint64_t v21 = v32;
  }
  uint64_t v33 = 16;
  if (v21 > 0x10) {
    uint64_t v33 = v21;
  }
  unsigned int v34 = *((unsigned __int8 *)a1 + v33);
  uint64_t v35 = v33 & 0xFFFFFFF8;
  if (v34 >= 4 && v35 != 0) {
    unsigned int v34 = *a1 + 4;
  }
  uint64_t v37 = ~v147;
  uint64_t v39 = ~v150;
  uint64_t v148 = ~(v5 | 7);
  uint64_t v151 = ~v5;
  uint64_t v40 = ~v13;
  uint64_t v41 = ~v12;
  uint64_t v42 = ~v22;
  switch(v34)
  {
    case 1u:
      uint64_t v38 = ~v159;
      uint64_t v141 = v39;
      unint64_t v145 = v143 + 16;
      uint64_t v127 = *(void (**)(void))(v149 + 8);
      v127();
      unint64_t v67 = ((unint64_t)a1 + v137) & v42;
      if (v23 == v112)
      {
        int v68 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v149 + 48))(v67, v23, AssociatedTypeWitness);
        uint64_t v70 = v131;
        uint64_t v69 = v132;
        uint64_t v71 = v130;
        uint64_t v72 = AssociatedTypeWitness;
LABEL_56:
        if (!v68) {
          goto LABEL_86;
        }
        goto LABEL_98;
      }
      unint64_t v88 = (v120 + v67) & v37;
      unint64_t v89 = (v110 + v88) & v38;
      if (v27 != v112)
      {
        unint64_t v91 = v89 + v119;
        uint64_t v70 = v131;
        uint64_t v69 = v132;
        if ((v30 & 0x80000000) == 0)
        {
          unint64_t v92 = *(void *)(v91 + 8);
          if (v92 >= 0xFFFFFFFF) {
            LODWORD(v92) = -1;
          }
          uint64_t v72 = AssociatedTypeWitness;
          uint64_t v71 = v130;
          if (v92 == -1) {
            goto LABEL_86;
          }
          goto LABEL_98;
        }
        uint64_t v95 = (v136 + ((v158 + v91) & v148)) & v151;
        uint64_t v72 = AssociatedTypeWitness;
        uint64_t v71 = v130;
        if (v152 < 0x7FFFFFFE)
        {
          unint64_t v105 = *(void *)(((v135 + ((v134 + v95) & v151)) & 0xFFFFFFFFFFFFFFF8) + 8);
          if (v105 >= 0xFFFFFFFF) {
            LODWORD(v105) = -1;
          }
          if ((v105 + 1) < 2) {
            goto LABEL_87;
          }
          goto LABEL_98;
        }
        int v68 = (*(uint64_t (**)(uint64_t))(v131 + 48))(v95);
        goto LABEL_56;
      }
      if (v24 == v27)
      {
        int v90 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v157 + 48))((v110 + v88) & ~v159, v24, v118);
      }
      else
      {
        uint64_t v93 = (unint64_t *)((v117 + v89) & 0xFFFFFFFFFFFFFFF8);
        if (v26 <= 0x7FFFFFFE)
        {
          unint64_t v94 = *v93;
          if (v94 >= 0xFFFFFFFF) {
            LODWORD(v94) = -1;
          }
          uint64_t v70 = v131;
          uint64_t v69 = v132;
          uint64_t v72 = AssociatedTypeWitness;
          uint64_t v71 = v130;
          if ((v94 + 1) < 2) {
            goto LABEL_87;
          }
          goto LABEL_98;
        }
        int v90 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v156 + 48))(((unint64_t)v93 + v115) & v141, v25, v116);
      }
      uint64_t v70 = v131;
      uint64_t v69 = v132;
      uint64_t v72 = AssociatedTypeWitness;
      uint64_t v71 = v130;
      if (!v90)
      {
LABEL_86:
        unint64_t v88 = (v120 + v67) & v37;
        unint64_t v89 = (v110 + v88) & v38;
LABEL_87:
        ((void (*)(unint64_t, uint64_t))v127)(v67, v72);
        ((void (*)(unint64_t, uint64_t))v127)(v88, v72);
        (*(void (**)(unint64_t, uint64_t))(v157 + 8))(v89, v118);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v156 + 8))((v115 + ((v117 + v89) & 0xFFFFFFFFFFFFFFF8)) & v141, v116);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v96 = (v158 + v89 + v119) & v148;
        uint64_t v97 = *(void (**)(unint64_t, uint64_t))(v70 + 8);
        v97((v136 + v96) & v151, v69);
        unint64_t v98 = (v134 + ((v136 + v96) & v151)) & v151;
        v97(v98, v69);
        swift_bridgeObjectRelease();
        unint64_t v99 = (v133
             + ((((((v135 + v98) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v151;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v70 + 48))(v99, 1, v69)) {
          v97(v99, v69);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v100 = (uint64_t *)((((((v71 + v99) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v101 = v100[1];
        if ((v101 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v100, v101);
        }
        swift_bridgeObjectRelease();
        unint64_t v64 = v145 + v96;
        unint64_t v102 = *(void **)(v145 + v96 + 16);
        LODWORD(v103) = -1;
        if ((unint64_t)v102 < 0xFFFFFFFF) {
          uint64_t v103 = *(void *)(v145 + v96 + 16);
        }
        if ((int)v103 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v64 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_97;
      }
LABEL_98:
      return swift_bridgeObjectRelease();
    case 2u:
      unint64_t v146 = v143 + 16;
      uint64_t v73 = v16;
      uint64_t v74 = *(void (**)(void))(v122 + 8);
      unint64_t v75 = v19;
      uint64_t v139 = v41;
      uint64_t v142 = v18;
      uint64_t v76 = v17;
      uint64_t v77 = v40;
      v74();
      unint64_t v78 = ((unint64_t)a1 + v73) & ~v9;
      ((void (*)(unint64_t, uint64_t))v74)(v78, v124);
      unint64_t v79 = (v121 + v78) & v77;
      (*(void (**)(unint64_t, uint64_t))(v123 + 8))(v79, v125);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v126 + 8))((v142 + ((v76 + v79) & 0xFFFFFFFFFFFFFFF8)) & v139, v128);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v80 = (v158 + v75 + v79) & v148;
      uint64_t v81 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
      v81((v136 + v80) & v151, v132);
      uint64_t v82 = (v134 + ((v136 + v80) & v151)) & v151;
      v81(v82, v132);
      swift_bridgeObjectRelease();
      unint64_t v83 = (v133 + ((((((v135 + v82) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v151;
      if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v131 + 48))(v83, 1, v132)) {
        v81(v83, v132);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v84 = (uint64_t *)((((((v130 + v83) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v85 = v84[1];
      if ((v85 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v84, v85);
      }
      swift_bridgeObjectRelease();
      unint64_t v64 = v80 + v146;
      id v86 = *(void **)(v80 + v146 + 16);
      LODWORD(v87) = -1;
      if ((unint64_t)v86 < 0xFFFFFFFF) {
        uint64_t v87 = *(void *)(v64 + 16);
      }
      if ((int)v87 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v64 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_97;
    case 3u:
      goto LABEL_98;
    default:
      uint64_t v106 = ~v14;
      uint64_t v107 = ~v9;
      uint64_t v108 = v40;
      uint64_t v138 = v41;
      uint64_t v109 = v16;
      uint64_t v111 = v17;
      uint64_t v140 = v18;
      unint64_t v113 = v19;
      unint64_t v144 = v143 + 16;
      uint64_t v43 = *(void (**)(void))(v149 + 8);
      uint64_t v44 = v39;
      v43();
      unint64_t v45 = ((unint64_t)a1 + v120) & v37;
      ((void (*)(unint64_t, uint64_t))v43)(v45, AssociatedTypeWitness);
      unint64_t v46 = (v45 + v153 + v159) & ~v159;
      (*(void (**)(unint64_t, uint64_t))(v157 + 8))(v46, v118);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v156 + 8))((v115 + ((v117 + v46) & 0xFFFFFFFFFFFFFFF8)) & v44, v116);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v47 = (v158 + v119 + v46) & v148;
      uint64_t v48 = *(void (**)(unint64_t, uint64_t))(v131 + 8);
      v48((v136 + v47) & v151, v132);
      unint64_t v49 = (v134 + ((v136 + v47) & v151)) & v151;
      v48(v49, v132);
      swift_bridgeObjectRelease();
      unint64_t v50 = (v133 + ((((((v135 + v49) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v151;
      long long v160 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v131 + 48);
      if (!v160(v50, 1, v132)) {
        v48(v50, v132);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v51 = (uint64_t *)((((((v130 + v50) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v52 = v51[1];
      if ((v52 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v51, v52);
      }
      swift_bridgeObjectRelease();
      unint64_t v53 = v144 + v47;
      uint64_t v54 = *(void **)(v144 + v47 + 16);
      LODWORD(v55) = -1;
      if ((unint64_t)v54 < 0xFFFFFFFF) {
        uint64_t v55 = *(void *)(v53 + 16);
      }
      if ((int)v55 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v53 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      sub_24D466534(*(void *)((((v53 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v53 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      unint64_t v56 = ((unint64_t)a1 + v114) & v106;
      unint64_t v57 = *(void (**)(unint64_t, uint64_t))(v122 + 8);
      v57(v56, v124);
      v57((v109 + v56) & v107, v124);
      unint64_t v58 = (v121 + ((v109 + v56) & v107)) & v108;
      (*(void (**)(unint64_t, uint64_t))(v123 + 8))(v58, v125);
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v126 + 8))((v140 + ((v111 + v58) & 0xFFFFFFFFFFFFFFF8)) & v138, v128);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v59 = (v158 + v58 + v113) & v148;
      v48((v136 + v59) & v151, v132);
      uint64_t v60 = (v134 + ((v136 + v59) & v151)) & v151;
      v48(v60, v132);
      swift_bridgeObjectRelease();
      unint64_t v61 = (v133 + ((((((v135 + v60) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v151;
      if (!v160(v61, 1, v132)) {
        v48(v61, v132);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v62 = (uint64_t *)((((((v130 + v61) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v63 = v62[1];
      if ((v63 & 0x3000000000000000) == 0) {
        sub_24D400DCC(*v62, v63);
      }
      swift_bridgeObjectRelease();
      unint64_t v64 = v59 + v144;
      unint64_t v65 = *(void **)(v59 + v144 + 16);
      LODWORD(v66) = -1;
      if ((unint64_t)v65 < 0xFFFFFFFF) {
        uint64_t v66 = *(void *)(v64 + 16);
      }
      if ((int)v66 - 1 < 0)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (*(void *)(v64 + 192))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_97:
      sub_24D466534(*(void *)((((v64 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v64 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
      goto LABEL_98;
  }
}

void *sub_24D96B9C8(void *a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v492 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v486 = *(unsigned __int8 *)(v492 + 80);
  uint64_t v500 = *(void *)(v492 + 64);
  uint64_t v466 = v500 + v486;
  uint64_t v461 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v461 - 8);
  uint64_t v505 = v2;
  int v3 = *(_DWORD *)(v2 + 80) & 0xF8;
  uint64_t v459 = swift_getAssociatedTypeWitness();
  uint64_t v503 = *(void *)(v459 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v503 + 80);
  uint64_t v514 = v3 | v4 | 7;
  uint64_t v454 = v500 + v514;
  uint64_t v460 = *(void *)(v2 + 64) + 7;
  uint64_t v458 = v4 + 8;
  uint64_t v490 = v4;
  uint64_t v457 = *(void *)(v503 + 64) + 7;
  unint64_t v462 = ((((v457 + ((v4 + 8 + (v460 & 0xFFFFFFFFFFFFFFF8)) & ~v4)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v510 = (v7 | 7) + 16;
  uint64_t v479 = v5;
  uint64_t v480 = v7 + 12;
  size_t v8 = *(void *)(v6 + 64);
  uint64_t v478 = v8 + v7;
  size_t v441 = v8 + 12;
  uint64_t v475 = v7 + 10;
  uint64_t v473 = v6;
  unsigned int v494 = *(_DWORD *)(v6 + 84);
  size_t v481 = v8;
  if (v494) {
    size_t v9 = *(void *)(*(void *)(v5 - 8) + 64);
  }
  else {
    size_t v9 = v8 + 1;
  }
  size_t __n = v9;
  size_t v476 = v9 + 7;
  unint64_t v448 = (v7
        + 10
        + ((((((v8 + 12 + ((v8 + v7 + ((v7 + 12) & ~v7)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7;
  unint64_t v482 = (((((((((v9 + 7 + v448) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v477 = v482 + 16;
  uint64_t v451 = (v510 + v462 + ((v500 + v514 + ((v500 + v486) & ~v486)) & ~v514)) & ~(v7 | 7);
  size_t v497 = ((((v451 + v482 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v463 = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(v463 - 8);
  uint64_t v468 = v10;
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v464 = v13;
  uint64_t v465 = v12;
  int v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v469 = *(void *)(v15 - 8);
  uint64_t v471 = v15;
  uint64_t v16 = *(unsigned __int8 *)(v469 + 80);
  uint64_t v17 = v14 | v16 | 7;
  uint64_t v18 = v11 | v7 | v17;
  size_t v447 = v497 + v18;
  uint64_t v19 = *(void *)(v10 + 64);
  uint64_t v20 = v19 + v11;
  uint64_t v484 = v11;
  uint64_t v467 = v19 + v17;
  uint64_t v21 = *(void *)(v13 + 64) + 7;
  uint64_t v22 = v16 + 8;
  unint64_t v23 = ((((*(void *)(v469 + 64) + 7 + ((v16 + 8 + (v21 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v24 = (v482 + ((v510 + v23 + ((v19 + v17 + ((v19 + v11) & ~v11)) & ~v17)) & ~(v7 | 7)) + 327) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = ((((v25 + ((v497 + v18) & ~v18) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v27 = v514 | v486 | v7;
  uint64_t v28 = v27 + v500;
  uint64_t v29 = *(unsigned int *)(v492 + 84);
  uint64_t v30 = *(unsigned int *)(v2 + 84);
  unsigned int v443 = *(_DWORD *)(v503 + 84);
  if (v30 <= v443) {
    unsigned int v31 = *(_DWORD *)(v503 + 84);
  }
  else {
    unsigned int v31 = *(_DWORD *)(v2 + 84);
  }
  if (v31 <= 0x7FFFFFFE) {
    unsigned int v32 = 2147483646;
  }
  else {
    unsigned int v32 = v31;
  }
  if (v32 <= v29) {
    unsigned int v33 = *(_DWORD *)(v492 + 84);
  }
  else {
    unsigned int v33 = v32;
  }
  if (v494 <= 0x7FFFFFFE) {
    unsigned int v34 = 2147483646;
  }
  else {
    unsigned int v34 = v494;
  }
  if (v33 <= v34) {
    unsigned int v35 = v34;
  }
  else {
    unsigned int v35 = v33;
  }
  if (v35 <= 0x7FFFFFFF) {
    int v36 = 0x7FFFFFFF;
  }
  else {
    int v36 = v35;
  }
  int v445 = v36;
  if (((v497 + (v28 & ~v27)) & 0xFFFFFFFFFFFFFFF8) + 24 > v26) {
    unint64_t v26 = ((v497 + (v28 & ~v27)) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v37 = ((v24 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v37 > v26) {
    unint64_t v26 = v37;
  }
  if (v26 <= 0x10) {
    uint64_t v38 = 16;
  }
  else {
    uint64_t v38 = v26;
  }
  unsigned int v39 = *(unsigned __int8 *)(a2 + v38);
  if (v39 >= 4 && (v38 & 0xFFFFFFF8) != 0) {
    unsigned int v39 = *(_DWORD *)a2 + 4;
  }
  uint64_t v487 = ~v486;
  uint64_t v41 = ~v514;
  uint64_t v483 = ~v490;
  uint64_t v491 = ~(v7 | 7);
  uint64_t v42 = ~v7;
  uint64_t v43 = ~v18;
  uint64_t v44 = ~v484;
  uint64_t v45 = ~v17;
  uint64_t v46 = ~v16;
  unint64_t v47 = v25 + 16;
  uint64_t v48 = ~v27;
  switch(v39)
  {
    case 1u:
      uint64_t v501 = ~v514;
      uint64_t v516 = v42;
      uint64_t v485 = v38;
      size_t v470 = *(void (**)(char *, unint64_t, uint64_t))(v492 + 16);
      ((void (*)(void *))v470)(a1);
      id v86 = (char *)(((unint64_t)a1 + v28) & v48);
      unint64_t v87 = (v28 + a2) & v48;
      if (v29 == v445)
      {
        int v88 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v492 + 48))(v87, v29, AssociatedTypeWitness);
        unint64_t v89 = a1;
        uint64_t v90 = AssociatedTypeWitness;
        uint64_t v91 = v466;
      }
      else
      {
        uint64_t v91 = v466;
        unint64_t v133 = (v466 + v87) & v487;
        unint64_t v134 = (v454 + v133) & v501;
        if (v32 == v445)
        {
          if (v30 == v32)
          {
            int v88 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v505 + 48))((v454 + v133) & v501, v30, v461);
            unint64_t v89 = a1;
          }
          else
          {
            v344 = (unint64_t *)((v460 + v134) & 0xFFFFFFFFFFFFFFF8);
            unint64_t v89 = a1;
            if (v31 <= 0x7FFFFFFE)
            {
              unint64_t v345 = *v344;
              if (v345 >= 0xFFFFFFFF) {
                LODWORD(v345) = -1;
              }
              uint64_t v90 = AssociatedTypeWitness;
              if ((v345 + 1) >= 2) {
                goto LABEL_99;
              }
              goto LABEL_102;
            }
            int v88 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v503 + 48))(((unint64_t)v344 + v458) & v483, v443, v459);
          }
        }
        else
        {
          unint64_t v221 = v134 + v462;
          unint64_t v89 = a1;
          if ((v35 & 0x80000000) != 0)
          {
            uint64_t v346 = (v480 + ((v510 + v221) & v491)) & v516;
            uint64_t v90 = AssociatedTypeWitness;
            if (v494 < 0x7FFFFFFE)
            {
              unint64_t v438 = *(void *)(((v441 + ((v478 + v346) & v516)) & 0xFFFFFFFFFFFFFFF8) + 8);
              if (v438 >= 0xFFFFFFFF) {
                LODWORD(v438) = -1;
              }
              if ((v438 + 1) >= 2) {
                goto LABEL_99;
              }
              goto LABEL_102;
            }
            int v88 = (*(uint64_t (**)(uint64_t))(v473 + 48))(v346);
            goto LABEL_98;
          }
          unint64_t v222 = *(void *)(v221 + 8);
          if (v222 >= 0xFFFFFFFF) {
            LODWORD(v222) = -1;
          }
          int v88 = v222 + 1;
        }
        uint64_t v90 = AssociatedTypeWitness;
      }
LABEL_98:
      if (v88)
      {
LABEL_99:
        memcpy(v86, (const void *)v87, v497);
LABEL_100:
        size_t v347 = __n;
LABEL_117:
        unint64_t v434 = ((((v451
                 + ((((((((((v448 + v347 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 19) & 0xFFFFFFFFFFFFFFF8)
                   + 25) & 0xFFFFFFFFFFFFFFF8)
                 + 327) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 16;
        unint64_t v435 = (unint64_t)&v86[v434];
        unint64_t v436 = v434 + v87;
        *(unsigned char *)unint64_t v435 = *(unsigned char *)v436;
        v435 &= 0xFFFFFFFFFFFFFFF8;
        v436 &= 0xFFFFFFFFFFFFFFF8;
        *(void *)(v435 + 8) = *(void *)(v436 + 8);
        *(void *)(v435 + 16) = *(void *)(v436 + 16);
        char v132 = 1;
        goto LABEL_118;
      }
      unint64_t v133 = (v91 + v87) & v487;
      unint64_t v134 = (v454 + v133) & v501;
LABEL_102:
      unint64_t v502 = v87;
      v470(v86, v87, v90);
      uint64_t v509 = v86;
      unint64_t v348 = (unint64_t)&v86[v91] & v487;
      v470((char *)v348, v133, v90);
      unint64_t v349 = (v454 + v348) & v87;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v505 + 16))(v349, v134, v461);
      uint64_t v350 = (void *)((v460 + v349) & 0xFFFFFFFFFFFFFFF8);
      v351 = (void *)((v460 + v134) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v350 = *v351;
      unint64_t v352 = ((unint64_t)v350 + v458) & v483;
      unint64_t v353 = ((unint64_t)v351 + v458) & v483;
      unint64_t v354 = *(void (**)(unint64_t, unint64_t, uint64_t))(v503 + 16);
      swift_bridgeObjectRetain();
      v354(v352, v353, v459);
      v355 = (void *)((v457 + v353) & 0xFFFFFFFFFFFFFFF8);
      v356 = (void *)((v457 + v352) & 0xFFFFFFFFFFFFFFF8);
      void *v356 = *v355;
      unint64_t v357 = (void *)(((unint64_t)v356 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v358 = (void *)(((unint64_t)v355 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v357 = *v358;
      v357[1] = v358[1];
      v359 = (void *)(v349 + v462);
      void *v359 = *(void *)(v134 + v462);
      v359[1] = *(void *)(v134 + v462 + 8);
      unint64_t v360 = (v510 + v349 + v462) & v491;
      unint64_t v361 = (v510 + v134 + v462) & v491;
      *(unsigned char *)unint64_t v360 = *(unsigned char *)v361;
      uint64_t v362 = v360 | 4;
      int v363 = *(_DWORD *)(v361 | 4);
      *(unsigned char *)(v362 + 4) = *(unsigned char *)((v361 | 4) + 4);
      *(_DWORD *)uint64_t v362 = v363;
      *(_WORD *)(v360 + 10) = *(_WORD *)(v361 + 0xA);
      unint64_t v512 = v360;
      unint64_t v364 = (v480 + v360) & v516;
      unint64_t v506 = v361;
      unint64_t v365 = (v480 + v361) & v516;
      unint64_t v366 = *(void (**)(unint64_t, unint64_t, uint64_t))(v473 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v366(v364, v365, v479);
      unint64_t v367 = (v478 + v365) & v516;
      unint64_t v504 = (void (*)(void *, const void *, uint64_t))v366;
      v366((v478 + v364) & v516, v367, v479);
      size_t v347 = v481;
      int v368 = (unsigned char *)(((v478 + v364) & v516) + v481);
      *int v368 = *(unsigned char *)(v367 + v481);
      v368[1] = *(unsigned char *)(v367 + v481 + 1);
      v368[2] = *(unsigned char *)(v367 + v481 + 2);
      v368[3] = *(unsigned char *)(v367 + v481 + 3);
      v368[4] = *(unsigned char *)(v367 + v481 + 4);
      unint64_t v369 = (unint64_t)(v368 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v370 = (v367 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v369 = *(void *)v370;
      *(void *)(v369 + 8) = *(void *)(v370 + 8);
      *(unsigned char *)(v369 + 16) = *(unsigned char *)(v370 + 16);
      *(unsigned char *)(v369 + 17) = *(unsigned char *)(v370 + 17);
      *(unsigned char *)(v369 + 18) = *(unsigned char *)(v370 + 18);
      *(unsigned char *)(v369 + 19) = *(unsigned char *)(v370 + 19);
      unint64_t v371 = (v369 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v372 = (v370 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v371 = *(void *)v372;
      *(unsigned char *)(v371 + 8) = *(unsigned char *)(v372 + 8);
      *(unsigned char *)(v371 + 9) = *(unsigned char *)(v372 + 9);
      *(unsigned char *)(v371 + 10) = *(unsigned char *)(v372 + 10);
      *(unsigned char *)(v371 + 11) = *(unsigned char *)(v372 + 11);
      *(unsigned char *)(v371 + 12) = *(unsigned char *)(v372 + 12);
      v373 = (void *)((v370 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v374 = (void *)((v369 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v374 = *v373;
      unint64_t v375 = ((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v376 = ((unint64_t)v373 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v375 = *(void *)v376;
      *(unsigned char *)(v375 + 8) = *(unsigned char *)(v376 + 8);
      *(unsigned char *)(v375 + 9) = *(unsigned char *)(v376 + 9);
      unint64_t v377 = (void *)((v475 + v375) & v516);
      v378 = (const void *)((v475 + v376) & v516);
      v379 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v473 + 48);
      swift_bridgeObjectRetain();
      if (v379(v378, 1, v479))
      {
        memcpy(v377, v378, __n);
      }
      else
      {
        v504(v377, v378, v479);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v473 + 56))(v377, 0, 1, v479);
      }
      unsigned int v380 = v494;
      unint64_t v381 = (void *)(((unint64_t)v377 + v476) & 0xFFFFFFFFFFFFFFF8);
      v382 = (void *)(((unint64_t)v378 + v476) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v381 = *v382;
      unint64_t v383 = ((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v384 = ((unint64_t)v382 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v385 = *(void *)v384;
      *(unsigned char *)(v383 + 8) = *(unsigned char *)(v384 + 8);
      *(void *)unint64_t v383 = v385;
      v386 = (void *)(((unint64_t)v381 + 31) & 0xFFFFFFFFFFFFFFF8);
      v387 = (void *)(((unint64_t)v382 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v386 = *v387;
      unint64_t v388 = ((unint64_t)v386 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v389 = (uint64_t *)(((unint64_t)v387 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v390 = v389[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v390 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v388 = *(_OWORD *)v389;
      }
      else
      {
        uint64_t v391 = *v389;
        sub_24D3F9C18(*v389, v390);
        *(void *)unint64_t v388 = v391;
        *(void *)(v388 + 8) = v390;
      }
      unint64_t v392 = (v388 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v393 = ((unint64_t)v389 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v394 = *(void *)v393;
      *(unsigned char *)(v392 + 8) = *(unsigned char *)(v393 + 8);
      *(void *)unint64_t v392 = v394;
      *(unsigned char *)(v392 + 9) = *(unsigned char *)(v393 + 9);
      unint64_t v395 = (v392 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v396 = (v393 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v397 = *(_DWORD *)v396;
      *(unsigned char *)(v395 + 4) = *(unsigned char *)(v396 + 4);
      *(_DWORD *)unint64_t v395 = v397;
      unint64_t v398 = (void *)((v392 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v399 = (void *)((v393 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v398 = *v399;
      v398[1] = v399[1];
      unint64_t v400 = v477 + v512;
      unint64_t v401 = (long long *)(v477 + v506);
      unint64_t v402 = *(void *)(v477 + v506 + 16);
      if (v402 >= 0xFFFFFFFF) {
        LODWORD(v402) = -1;
      }
      int v403 = v402 - 1;
      swift_bridgeObjectRetain();
      if (v403 < 0)
      {
        *(void *)unint64_t v400 = *(void *)v401;
        *(unsigned char *)(v400 + 8) = *((unsigned char *)v401 + 8);
        *(unsigned char *)(v400 + 9) = *((unsigned char *)v401 + 9);
        long long v416 = (void *)*((void *)v401 + 2);
        id v417 = v416;
        *(void *)(v400 + 16) = v416;
        long long v418 = (void *)*((void *)v401 + 3);
        id v419 = v418;
        *(void *)(v400 + 24) = v418;
        *(unsigned char *)(v400 + 32) = *((unsigned char *)v401 + 32);
        *(unsigned char *)(v400 + 33) = *((unsigned char *)v401 + 33);
        *(unsigned char *)(v400 + 34) = *((unsigned char *)v401 + 34);
        *(void *)(v400 + 40) = *((void *)v401 + 5);
        *(void *)(v400 + 48) = *((void *)v401 + 6);
        *(void *)(v400 + 56) = *((void *)v401 + 7);
        *(void *)(v400 + 64) = *((void *)v401 + 8);
        *(unsigned char *)(v400 + 72) = *((unsigned char *)v401 + 72);
        *(void *)(v400 + 80) = *((void *)v401 + 10);
        *(void *)(v400 + 88) = *((void *)v401 + 11);
        uint64_t v520 = (void *)*((void *)v401 + 12);
        *(void *)(v400 + 96) = v520;
        *(unsigned char *)(v400 + 104) = *((unsigned char *)v401 + 104);
        *(unsigned char *)(v400 + 105) = *((unsigned char *)v401 + 105);
        *(void *)(v400 + 112) = *((void *)v401 + 14);
        *(void *)(v400 + 120) = *((void *)v401 + 15);
        *(void *)(v400 + 128) = *((void *)v401 + 16);
        *(void *)(v400 + 136) = *((void *)v401 + 17);
        *(void *)(v400 + 144) = *((void *)v401 + 18);
        *(void *)(v400 + 152) = *((void *)v401 + 19);
        *(void *)(v400 + 160) = *((void *)v401 + 20);
        *(void *)(v400 + 168) = *((void *)v401 + 21);
        *(unsigned char *)(v400 + 176) = *((unsigned char *)v401 + 176);
        *(void *)(v400 + 184) = *((void *)v401 + 23);
        uint64_t v420 = *((void *)v401 + 24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v421 = v520;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v420)
        {
          *(void *)(v400 + 192) = v420;
          *(void *)(v400 + 200) = *((void *)v401 + 25);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v400 + 192) = v401[12];
        }
        unint64_t v89 = a1;
        size_t v347 = v481;
        unsigned int v380 = v494;
        *(void *)(v400 + 208) = *((void *)v401 + 26);
        *(void *)(v400 + 216) = *((void *)v401 + 27);
        *(void *)(v400 + 224) = *((void *)v401 + 28);
        *(void *)(v400 + 232) = *((void *)v401 + 29);
        *(void *)(v400 + 240) = *((void *)v401 + 30);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v404 = *v401;
        long long v405 = v401[1];
        long long v406 = v401[3];
        *(_OWORD *)(v400 + 32) = v401[2];
        *(_OWORD *)(v400 + 48) = v406;
        *(_OWORD *)unint64_t v400 = v404;
        *(_OWORD *)(v400 + 16) = v405;
        long long v407 = v401[4];
        long long v408 = v401[5];
        long long v409 = v401[7];
        *(_OWORD *)(v400 + 96) = v401[6];
        *(_OWORD *)(v400 + 112) = v409;
        *(_OWORD *)(v400 + 64) = v407;
        *(_OWORD *)(v400 + 80) = v408;
        long long v410 = v401[8];
        long long v411 = v401[9];
        long long v412 = v401[11];
        *(_OWORD *)(v400 + 160) = v401[10];
        *(_OWORD *)(v400 + 176) = v412;
        *(_OWORD *)(v400 + 128) = v410;
        *(_OWORD *)(v400 + 144) = v411;
        long long v413 = v401[12];
        long long v414 = v401[13];
        long long v415 = v401[14];
        *(void *)(v400 + 240) = *((void *)v401 + 30);
        *(_OWORD *)(v400 + 208) = v414;
        *(_OWORD *)(v400 + 224) = v415;
        *(_OWORD *)(v400 + 192) = v413;
      }
      id v422 = (_OWORD *)((v400 + 255) & 0xFFFFFFFFFFFFFFF8);
      v423 = (long long *)(((unint64_t)v401 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v424 = *v423;
      *(_OWORD *)((char *)v422 + 9) = *(long long *)((char *)v423 + 9);
      *id v422 = v424;
      unint64_t v425 = (v400 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v426 = ((unint64_t)v401 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v427 = *(_OWORD *)v426;
      *(unsigned char *)(v425 + 16) = *(unsigned char *)(v426 + 16);
      *(_OWORD *)unint64_t v425 = v427;
      v428 = (void *)((v400 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v429 = ((unint64_t)v401 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v430 = *(void *)v429;
      v429 += 15;
      void *v428 = v430;
      unint64_t v431 = (void *)(((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v432 = *(void *)(v429 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v433 = *(void *)((v429 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v432, v433);
      *unint64_t v431 = v432;
      v431[1] = v433;
      id v86 = v509;
      unint64_t v87 = v502;
      if (v380) {
        goto LABEL_117;
      }
      goto LABEL_100;
    case 2u:
      unint64_t v499 = v47;
      uint64_t v485 = v38;
      unint64_t v92 = *(void (**)(unint64_t, uint64_t, uint64_t))(v468 + 16);
      uint64_t v517 = v42;
      unint64_t v496 = v23;
      uint64_t v453 = v22;
      uint64_t v456 = *(void *)(*(void *)(v15 - 8) + 64) + 7;
      uint64_t v93 = v21;
      uint64_t v450 = v46;
      uint64_t v94 = v45;
      uint64_t v95 = v44;
      ((void (*)(void *))v92)(a1);
      unint64_t v96 = ((unint64_t)a1 + v20) & v95;
      uint64_t v97 = (v20 + a2) & v95;
      v92(v96, v97, v463);
      unint64_t v98 = (v467 + v96) & v94;
      uint64_t v99 = (v467 + v97) & v94;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v464 + 16))(v98, v99, v465);
      unint64_t v100 = (void *)((v93 + v98) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v101 = (void *)((v93 + v99) & 0xFFFFFFFFFFFFFFF8);
      void *v100 = *v101;
      unint64_t v102 = ((unint64_t)v100 + v453) & v450;
      unint64_t v103 = ((unint64_t)v101 + v453) & v450;
      uint64_t v104 = *(void (**)(unint64_t, unint64_t, uint64_t))(v469 + 16);
      swift_bridgeObjectRetain();
      v104(v102, v103, v471);
      unint64_t v105 = (void *)((v456 + v103) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v106 = (void *)((v456 + v102) & 0xFFFFFFFFFFFFFFF8);
      void *v106 = *v105;
      uint64_t v107 = (void *)(((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v108 = (void *)(((unint64_t)v105 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v107 = *v108;
      v107[1] = v108[1];
      uint64_t v109 = (void *)(v496 + v98);
      *uint64_t v109 = *(void *)(v496 + v99);
      v109[1] = *(void *)(v496 + v99 + 8);
      uint64_t v110 = (v510 + v496 + v98) & v491;
      uint64_t v111 = (v510 + v496 + v99) & v491;
      *(unsigned char *)uint64_t v110 = *(unsigned char *)v111;
      uint64_t v112 = v110 | 4;
      int v113 = *(_DWORD *)(v111 | 4);
      *(unsigned char *)(v112 + 4) = *(unsigned char *)((v111 | 4) + 4);
      *(_DWORD *)uint64_t v112 = v113;
      *(_WORD *)(v110 + 10) = *(_WORD *)(v111 + 0xA);
      uint64_t v511 = v110;
      uint64_t v114 = (v480 + v110) & v517;
      uint64_t v115 = (v480 + v111) & v517;
      uint64_t v116 = *(void (**)(uint64_t, uint64_t, uint64_t))(v473 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v116(v114, v115, v479);
      uint64_t v117 = (v478 + v114) & v517;
      uint64_t v118 = (v478 + v115) & v517;
      v116(v117, v118, v479);
      unint64_t v119 = (unsigned char *)(v117 + v481);
      *unint64_t v119 = *(unsigned char *)(v118 + v481);
      v119[1] = *(unsigned char *)(v118 + v481 + 1);
      void v119[2] = *(unsigned char *)(v118 + v481 + 2);
      v119[3] = *(unsigned char *)(v118 + v481 + 3);
      v119[4] = *(unsigned char *)(v118 + v481 + 4);
      unint64_t v120 = (v117 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v121 = (v118 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v120 = *(void *)v121;
      *(void *)(v120 + 8) = *(void *)(v121 + 8);
      *(unsigned char *)(v120 + 16) = *(unsigned char *)(v121 + 16);
      *(unsigned char *)(v120 + 17) = *(unsigned char *)(v121 + 17);
      *(unsigned char *)(v120 + 18) = *(unsigned char *)(v121 + 18);
      *(unsigned char *)(v120 + 19) = *(unsigned char *)(v121 + 19);
      unint64_t v122 = (v120 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v123 = (v121 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v122 = *(void *)v123;
      *(unsigned char *)(v122 + 8) = *(unsigned char *)(v123 + 8);
      *(unsigned char *)(v122 + 9) = *(unsigned char *)(v123 + 9);
      *(unsigned char *)(v122 + 10) = *(unsigned char *)(v123 + 10);
      *(unsigned char *)(v122 + 11) = *(unsigned char *)(v123 + 11);
      *(unsigned char *)(v122 + 12) = *(unsigned char *)(v123 + 12);
      uint64_t v124 = (void *)((v121 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v125 = (void *)((v120 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v125 = *v124;
      unint64_t v126 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v127 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v126 = *(void *)v127;
      *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
      *(unsigned char *)(v126 + 9) = *(unsigned char *)(v127 + 9);
      uint64_t v128 = (void *)((v475 + v126) & v517);
      unint64_t v129 = (const void *)((v475 + v127) & v517);
      uint64_t v130 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v473 + 48);
      swift_bridgeObjectRetain();
      if (v130(v129, 1, v479))
      {
        memcpy(v128, v129, __n);
      }
      else
      {
        v116((uint64_t)v128, (uint64_t)v129, v479);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v473 + 56))(v128, 0, 1, v479);
      }
      uint64_t v135 = (void *)(((unint64_t)v128 + v476) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v136 = (void *)(((unint64_t)v129 + v476) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v135 = *v136;
      unint64_t v137 = ((unint64_t)v135 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v138 = ((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v139 = *(void *)v138;
      *(unsigned char *)(v137 + 8) = *(unsigned char *)(v138 + 8);
      *(void *)unint64_t v137 = v139;
      uint64_t v140 = (void *)(((unint64_t)v135 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v141 = (void *)(((unint64_t)v136 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v140 = *v141;
      unint64_t v142 = ((unint64_t)v140 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v143 = (uint64_t *)(((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v144 = v143[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v144 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v142 = *(_OWORD *)v143;
      }
      else
      {
        uint64_t v145 = *v143;
        sub_24D3F9C18(*v143, v144);
        *(void *)unint64_t v142 = v145;
        *(void *)(v142 + 8) = v144;
      }
      unint64_t v146 = (v142 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v147 = ((unint64_t)v143 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v148 = *(void *)v147;
      *(unsigned char *)(v146 + 8) = *(unsigned char *)(v147 + 8);
      *(void *)unint64_t v146 = v148;
      *(unsigned char *)(v146 + 9) = *(unsigned char *)(v147 + 9);
      unint64_t v149 = (v146 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v150 = (v147 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v151 = *(_DWORD *)v150;
      *(unsigned char *)(v149 + 4) = *(unsigned char *)(v150 + 4);
      *(_DWORD *)unint64_t v149 = v151;
      unsigned int v152 = (void *)((v146 + 25) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v153 = (void *)((v147 + 25) & 0xFFFFFFFFFFFFFFF8);
      void *v152 = *v153;
      v152[1] = v153[1];
      unint64_t v154 = v511 + v477;
      unint64_t v155 = v111 + v477;
      unint64_t v156 = *(void *)(v111 + v477 + 16);
      if (v156 >= 0xFFFFFFFF) {
        LODWORD(v156) = -1;
      }
      int v157 = v156 - 1;
      swift_bridgeObjectRetain();
      if (v157 < 0)
      {
        *(void *)unint64_t v154 = *(void *)v155;
        *(unsigned char *)(v154 + 8) = *(unsigned char *)(v155 + 8);
        *(unsigned char *)(v154 + 9) = *(unsigned char *)(v155 + 9);
        long long v170 = *(void **)(v155 + 16);
        id v171 = v170;
        *(void *)(v154 + 16) = v170;
        unint64_t v172 = *(void **)(v155 + 24);
        id v173 = v172;
        *(void *)(v154 + 24) = v172;
        *(unsigned char *)(v154 + 32) = *(unsigned char *)(v155 + 32);
        *(unsigned char *)(v154 + 33) = *(unsigned char *)(v155 + 33);
        *(unsigned char *)(v154 + 34) = *(unsigned char *)(v155 + 34);
        *(void *)(v154 + 40) = *(void *)(v155 + 40);
        *(void *)(v154 + 48) = *(void *)(v155 + 48);
        *(void *)(v154 + 56) = *(void *)(v155 + 56);
        *(void *)(v154 + 64) = *(void *)(v155 + 64);
        *(unsigned char *)(v154 + 72) = *(unsigned char *)(v155 + 72);
        *(void *)(v154 + 80) = *(void *)(v155 + 80);
        *(void *)(v154 + 88) = *(void *)(v155 + 88);
        unint64_t v518 = *(void **)(v155 + 96);
        *(void *)(v154 + 96) = v518;
        *(unsigned char *)(v154 + 104) = *(unsigned char *)(v155 + 104);
        *(unsigned char *)(v154 + 105) = *(unsigned char *)(v155 + 105);
        *(void *)(v154 + 112) = *(void *)(v155 + 112);
        *(void *)(v154 + 120) = *(void *)(v155 + 120);
        *(void *)(v154 + 128) = *(void *)(v155 + 128);
        *(void *)(v154 + 136) = *(void *)(v155 + 136);
        *(void *)(v154 + 144) = *(void *)(v155 + 144);
        *(void *)(v154 + 152) = *(void *)(v155 + 152);
        *(void *)(v154 + 160) = *(void *)(v155 + 160);
        *(void *)(v154 + 168) = *(void *)(v155 + 168);
        *(unsigned char *)(v154 + 176) = *(unsigned char *)(v155 + 176);
        *(void *)(v154 + 184) = *(void *)(v155 + 184);
        uint64_t v174 = *(void *)(v155 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v175 = v518;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v174)
        {
          *(void *)(v154 + 192) = v174;
          *(void *)(v154 + 200) = *(void *)(v155 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v154 + 192) = *(_OWORD *)(v155 + 192);
        }
        *(void *)(v154 + 208) = *(void *)(v155 + 208);
        *(void *)(v154 + 216) = *(void *)(v155 + 216);
        *(void *)(v154 + 224) = *(void *)(v155 + 224);
        *(void *)(v154 + 232) = *(void *)(v155 + 232);
        *(void *)(v154 + 240) = *(void *)(v155 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v158 = *(_OWORD *)v155;
        long long v159 = *(_OWORD *)(v155 + 16);
        long long v160 = *(_OWORD *)(v155 + 48);
        *(_OWORD *)(v154 + 32) = *(_OWORD *)(v155 + 32);
        *(_OWORD *)(v154 + 48) = v160;
        *(_OWORD *)unint64_t v154 = v158;
        *(_OWORD *)(v154 + 16) = v159;
        long long v161 = *(_OWORD *)(v155 + 64);
        long long v162 = *(_OWORD *)(v155 + 80);
        long long v163 = *(_OWORD *)(v155 + 112);
        *(_OWORD *)(v154 + 96) = *(_OWORD *)(v155 + 96);
        *(_OWORD *)(v154 + 112) = v163;
        *(_OWORD *)(v154 + 64) = v161;
        *(_OWORD *)(v154 + 80) = v162;
        long long v164 = *(_OWORD *)(v155 + 128);
        long long v165 = *(_OWORD *)(v155 + 144);
        long long v166 = *(_OWORD *)(v155 + 176);
        *(_OWORD *)(v154 + 160) = *(_OWORD *)(v155 + 160);
        *(_OWORD *)(v154 + 176) = v166;
        *(_OWORD *)(v154 + 128) = v164;
        *(_OWORD *)(v154 + 144) = v165;
        long long v167 = *(_OWORD *)(v155 + 192);
        long long v168 = *(_OWORD *)(v155 + 208);
        long long v169 = *(_OWORD *)(v155 + 224);
        *(void *)(v154 + 240) = *(void *)(v155 + 240);
        *(_OWORD *)(v154 + 208) = v168;
        *(_OWORD *)(v154 + 224) = v169;
        *(_OWORD *)(v154 + 192) = v167;
      }
      id v223 = (_OWORD *)((v154 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v224 = (long long *)((v155 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v225 = *v224;
      *(_OWORD *)((char *)v223 + 9) = *(long long *)((char *)v224 + 9);
      _OWORD *v223 = v225;
      unint64_t v226 = (v154 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v227 = (v155 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v228 = *(_OWORD *)v227;
      *(unsigned char *)(v226 + 16) = *(unsigned char *)(v227 + 16);
      *(_OWORD *)unint64_t v226 = v228;
      unint64_t v229 = (void *)((v154 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v230 = (v155 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v231 = *(void *)v230;
      v230 += 15;
      *unint64_t v229 = v231;
      uint64_t v232 = (void *)(((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v233 = *(void *)(v230 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v234 = *(void *)((v230 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v233, v234);
      *uint64_t v232 = v233;
      v232[1] = v234;
      unint64_t v89 = a1;
      *((unsigned char *)a1 + v499) = *(unsigned char *)(v499 + a2);
      unint64_t v235 = ((unint64_t)a1 + v499) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v236 = (v499 + a2) & 0xFFFFFFFFFFFFFFF8;
      *(void *)(v235 + 8) = *(void *)(v236 + 8);
      *(void *)(v235 + 16) = *(void *)(v236 + 16);
      char v132 = 2;
      goto LABEL_118;
    case 3u:
      uint64_t v131 = *(void *)(a2 + 8);
      unint64_t v89 = a1;
      *a1 = *(void *)a2;
      a1[1] = v131;
      char v132 = 3;
      goto LABEL_119;
    default:
      uint64_t v439 = v43;
      uint64_t v440 = ~v484;
      uint64_t v442 = v45;
      uint64_t v444 = v20;
      uint64_t v449 = v46;
      uint64_t v452 = v22;
      uint64_t v446 = v21;
      uint64_t v455 = *(void *)(*(void *)(v15 - 8) + 64) + 7;
      unint64_t v495 = v23;
      unint64_t v498 = v47;
      uint64_t v485 = v38;
      unint64_t v49 = *(void (**)(unint64_t, uint64_t, uint64_t))(v492 + 16);
      uint64_t v50 = v42;
      ((void (*)(void *))v49)(a1);
      unint64_t v51 = ((unint64_t)a1 + v466) & v487;
      uint64_t v52 = (v466 + a2) & v487;
      v49(v51, v52, AssociatedTypeWitness);
      unint64_t v53 = (v51 + v500 + v514) & v41;
      uint64_t v54 = (v52 + v500 + v514) & v41;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v505 + 16))(v53, v54, v461);
      uint64_t v55 = (void *)((v460 + v53) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v56 = (void *)((v460 + v54) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v55 = *v56;
      unint64_t v57 = ((unint64_t)v55 + v458) & v483;
      unint64_t v58 = ((unint64_t)v56 + v458) & v483;
      uint64_t v59 = *(void (**)(unint64_t, unint64_t, uint64_t))(v503 + 16);
      swift_bridgeObjectRetain();
      v59(v57, v58, v459);
      uint64_t v60 = (void *)((v457 + v58) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v61 = (void *)((v457 + v57) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v61 = *v60;
      uint64_t v62 = (void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v63 = (void *)(((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v62 = *v63;
      v62[1] = v63[1];
      unint64_t v64 = (void *)(v462 + v53);
      *unint64_t v64 = *(void *)(v462 + v54);
      v64[1] = *(void *)(v462 + v54 + 8);
      unint64_t v65 = (v510 + v462 + v53) & v491;
      unint64_t v66 = (v510 + v462 + v54) & v491;
      *(unsigned char *)unint64_t v65 = *(unsigned char *)v66;
      uint64_t v67 = v65 | 4;
      int v68 = *(_DWORD *)(v66 | 4);
      *(unsigned char *)(v67 + 4) = *(unsigned char *)((v66 | 4) + 4);
      *(_DWORD *)uint64_t v67 = v68;
      *(_WORD *)(v65 + 10) = *(_WORD *)(v66 + 0xA);
      unint64_t v69 = (v480 + v65) & v50;
      unint64_t v70 = (v480 + v66) & v50;
      uint64_t v71 = *(void (**)(unint64_t, unint64_t, uint64_t))(v473 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v69, v70, v479);
      unint64_t v72 = (v478 + v69) & v50;
      unint64_t v73 = (v478 + v70) & v50;
      v71(v72, v73, v479);
      uint64_t v74 = (unsigned char *)(v72 + v481);
      *uint64_t v74 = *(unsigned char *)(v73 + v481);
      v74[1] = *(unsigned char *)(v73 + v481 + 1);
      v74[2] = *(unsigned char *)(v73 + v481 + 2);
      v74[3] = *(unsigned char *)(v73 + v481 + 3);
      v74[4] = *(unsigned char *)(v73 + v481 + 4);
      unint64_t v75 = (v72 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v76 = (v73 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v75 = *(void *)v76;
      *(void *)(v75 + 8) = *(void *)(v76 + 8);
      *(unsigned char *)(v75 + 16) = *(unsigned char *)(v76 + 16);
      *(unsigned char *)(v75 + 17) = *(unsigned char *)(v76 + 17);
      *(unsigned char *)(v75 + 18) = *(unsigned char *)(v76 + 18);
      *(unsigned char *)(v75 + 19) = *(unsigned char *)(v76 + 19);
      unint64_t v77 = (v75 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v78 = (v76 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v77 = *(void *)v78;
      *(unsigned char *)(v77 + 8) = *(unsigned char *)(v78 + 8);
      *(unsigned char *)(v77 + 9) = *(unsigned char *)(v78 + 9);
      *(unsigned char *)(v77 + 10) = *(unsigned char *)(v78 + 10);
      *(unsigned char *)(v77 + 11) = *(unsigned char *)(v78 + 11);
      *(unsigned char *)(v77 + 12) = *(unsigned char *)(v78 + 12);
      unint64_t v79 = (void *)((v76 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v80 = (void *)((v75 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v80 = *v79;
      unint64_t v81 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v82 = ((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v81 = *(void *)v82;
      *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
      *(unsigned char *)(v81 + 9) = *(unsigned char *)(v82 + 9);
      unint64_t v83 = (void *)((v475 + v81) & v50);
      uint64_t v515 = v50;
      id v84 = (const void *)((v475 + v82) & v50);
      unint64_t v85 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v473 + 48);
      swift_bridgeObjectRetain();
      uint64_t v493 = v85;
      if (v85(v84, 1, v479))
      {
        memcpy(v83, v84, __n);
      }
      else
      {
        v71((unint64_t)v83, (unint64_t)v84, v479);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v473 + 56))(v83, 0, 1, v479);
      }
      id v176 = a1;
      uint64_t v177 = (void *)(((unint64_t)v83 + v476) & 0xFFFFFFFFFFFFFFF8);
      id v178 = (void *)(((unint64_t)v84 + v476) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v177 = *v178;
      unint64_t v179 = ((unint64_t)v177 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v180 = ((unint64_t)v178 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v181 = *(void *)v180;
      *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
      *(void *)unint64_t v179 = v181;
      unint64_t v182 = (void *)(((unint64_t)v177 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v183 = (void *)(((unint64_t)v178 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v182 = *v183;
      unint64_t v184 = ((unint64_t)v182 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v185 = (uint64_t *)(((unint64_t)v183 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v186 = v185[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v186 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v184 = *(_OWORD *)v185;
      }
      else
      {
        uint64_t v187 = *v185;
        sub_24D3F9C18(*v185, v186);
        *(void *)unint64_t v184 = v187;
        *(void *)(v184 + 8) = v186;
      }
      unint64_t v188 = (v184 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v189 = ((unint64_t)v185 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v190 = *(void *)v189;
      *(unsigned char *)(v188 + 8) = *(unsigned char *)(v189 + 8);
      *(void *)unint64_t v188 = v190;
      *(unsigned char *)(v188 + 9) = *(unsigned char *)(v189 + 9);
      unint64_t v191 = (v188 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v192 = (v189 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v193 = *(_DWORD *)v192;
      *(unsigned char *)(v191 + 4) = *(unsigned char *)(v192 + 4);
      *(_DWORD *)unint64_t v191 = v193;
      unint64_t v194 = (void *)((v188 + 25) & 0xFFFFFFFFFFFFFFF8);
      int v195 = (void *)((v189 + 25) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v194 = *v195;
      v194[1] = v195[1];
      unint64_t v196 = v477 + v65;
      unint64_t v197 = v477 + v66;
      unint64_t v198 = *(void *)(v477 + v66 + 16);
      if (v198 >= 0xFFFFFFFF) {
        LODWORD(v198) = -1;
      }
      int v199 = v198 - 1;
      swift_bridgeObjectRetain();
      if (v199 < 0)
      {
        *(void *)unint64_t v196 = *(void *)v197;
        *(unsigned char *)(v196 + 8) = *(unsigned char *)(v197 + 8);
        *(unsigned char *)(v196 + 9) = *(unsigned char *)(v197 + 9);
        uint64_t v215 = *(void **)(v197 + 16);
        id v216 = v215;
        *(void *)(v196 + 16) = v215;
        size_t v217 = *(void **)(v197 + 24);
        id v218 = v217;
        *(void *)(v196 + 24) = v217;
        *(unsigned char *)(v196 + 32) = *(unsigned char *)(v197 + 32);
        *(unsigned char *)(v196 + 33) = *(unsigned char *)(v197 + 33);
        *(unsigned char *)(v196 + 34) = *(unsigned char *)(v197 + 34);
        *(void *)(v196 + 40) = *(void *)(v197 + 40);
        *(void *)(v196 + 48) = *(void *)(v197 + 48);
        *(void *)(v196 + 56) = *(void *)(v197 + 56);
        *(void *)(v196 + 64) = *(void *)(v197 + 64);
        *(unsigned char *)(v196 + 72) = *(unsigned char *)(v197 + 72);
        *(void *)(v196 + 80) = *(void *)(v197 + 80);
        *(void *)(v196 + 88) = *(void *)(v197 + 88);
        int v488 = *(void **)(v197 + 96);
        *(void *)(v196 + 96) = v488;
        *(unsigned char *)(v196 + 104) = *(unsigned char *)(v197 + 104);
        *(unsigned char *)(v196 + 105) = *(unsigned char *)(v197 + 105);
        *(void *)(v196 + 112) = *(void *)(v197 + 112);
        *(void *)(v196 + 120) = *(void *)(v197 + 120);
        *(void *)(v196 + 128) = *(void *)(v197 + 128);
        *(void *)(v196 + 136) = *(void *)(v197 + 136);
        *(void *)(v196 + 144) = *(void *)(v197 + 144);
        *(void *)(v196 + 152) = *(void *)(v197 + 152);
        *(void *)(v196 + 160) = *(void *)(v197 + 160);
        *(void *)(v196 + 168) = *(void *)(v197 + 168);
        *(unsigned char *)(v196 + 176) = *(unsigned char *)(v197 + 176);
        *(void *)(v196 + 184) = *(void *)(v197 + 184);
        uint64_t v219 = *(void *)(v197 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v220 = v488;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v219)
        {
          *(void *)(v196 + 192) = v219;
          *(void *)(v196 + 200) = *(void *)(v197 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v196 + 192) = *(_OWORD *)(v197 + 192);
        }
        id v176 = a1;
        uint64_t v213 = v464;
        uint64_t v212 = v465;
        uint64_t v214 = v463;
        *(void *)(v196 + 208) = *(void *)(v197 + 208);
        *(void *)(v196 + 216) = *(void *)(v197 + 216);
        *(void *)(v196 + 224) = *(void *)(v197 + 224);
        *(void *)(v196 + 232) = *(void *)(v197 + 232);
        *(void *)(v196 + 240) = *(void *)(v197 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v200 = *(_OWORD *)v197;
        long long v201 = *(_OWORD *)(v197 + 16);
        long long v202 = *(_OWORD *)(v197 + 48);
        *(_OWORD *)(v196 + 32) = *(_OWORD *)(v197 + 32);
        *(_OWORD *)(v196 + 48) = v202;
        *(_OWORD *)unint64_t v196 = v200;
        *(_OWORD *)(v196 + 16) = v201;
        long long v203 = *(_OWORD *)(v197 + 64);
        long long v204 = *(_OWORD *)(v197 + 80);
        long long v205 = *(_OWORD *)(v197 + 112);
        *(_OWORD *)(v196 + 96) = *(_OWORD *)(v197 + 96);
        *(_OWORD *)(v196 + 112) = v205;
        *(_OWORD *)(v196 + 64) = v203;
        *(_OWORD *)(v196 + 80) = v204;
        long long v206 = *(_OWORD *)(v197 + 128);
        long long v207 = *(_OWORD *)(v197 + 144);
        long long v208 = *(_OWORD *)(v197 + 176);
        *(_OWORD *)(v196 + 160) = *(_OWORD *)(v197 + 160);
        *(_OWORD *)(v196 + 176) = v208;
        *(_OWORD *)(v196 + 128) = v206;
        *(_OWORD *)(v196 + 144) = v207;
        long long v209 = *(_OWORD *)(v197 + 192);
        long long v210 = *(_OWORD *)(v197 + 208);
        long long v211 = *(_OWORD *)(v197 + 224);
        *(void *)(v196 + 240) = *(void *)(v197 + 240);
        *(_OWORD *)(v196 + 208) = v210;
        *(_OWORD *)(v196 + 224) = v211;
        *(_OWORD *)(v196 + 192) = v209;
        uint64_t v213 = v464;
        uint64_t v212 = v465;
        uint64_t v214 = v463;
      }
      unint64_t v237 = (_OWORD *)((v196 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v238 = (long long *)((v197 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v239 = *v238;
      *(_OWORD *)((char *)v237 + 9) = *(long long *)((char *)v238 + 9);
      *unint64_t v237 = v239;
      unint64_t v240 = (v196 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v241 = (v197 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v242 = *(_OWORD *)v241;
      *(unsigned char *)(v240 + 16) = *(unsigned char *)(v241 + 16);
      *(_OWORD *)unint64_t v240 = v242;
      long long v243 = (void *)((v196 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v244 = (v197 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v245 = *(void *)v244;
      v244 += 15;
      *long long v243 = v245;
      long long v246 = (void *)(((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v247 = *(void *)(v244 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v248 = *(void *)((v244 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v247, v248);
      *long long v246 = v247;
      v246[1] = v248;
      uint64_t v249 = v176;
      size_t v250 = (v447 + a2) & v439;
      uint64_t v251 = *(void (**)(unint64_t, size_t, uint64_t))(v468 + 16);
      v251(((unint64_t)v176 + v447) & v439, v250, v214);
      unint64_t v508 = ((unint64_t)v176 + v447) & v439;
      unint64_t v252 = (v444 + v508) & v440;
      size_t v489 = v250;
      size_t v253 = (v444 + v250) & v440;
      v251(v252, v253, v214);
      uint64_t v254 = (v467 + v252) & v442;
      uint64_t v255 = (v467 + v253) & v442;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v213 + 16))(v254, v255, v212);
      unint64_t v256 = (void *)((v446 + v254) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v257 = (void *)((v446 + v255) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v256 = *v257;
      unint64_t v258 = ((unint64_t)v256 + v452) & v449;
      unint64_t v259 = ((unint64_t)v257 + v452) & v449;
      uint64_t v260 = *(void (**)(unint64_t, unint64_t, uint64_t))(v469 + 16);
      swift_bridgeObjectRetain();
      v260(v258, v259, v471);
      unint64_t v261 = (void *)((v455 + v258) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v262 = (void *)((v455 + v259) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v261 = *v262;
      unint64_t v263 = (void *)(((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v264 = (void *)(((unint64_t)v262 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v263 = *v264;
      v263[1] = v264[1];
      v265 = (void *)(v254 + v495);
      void *v265 = *(void *)(v255 + v495);
      v265[1] = *(void *)(v255 + v495 + 8);
      uint64_t v266 = (v510 + v254 + v495) & v491;
      uint64_t v267 = (v510 + v255 + v495) & v491;
      *(unsigned char *)uint64_t v266 = *(unsigned char *)v267;
      uint64_t v268 = v266 | 4;
      int v269 = *(_DWORD *)(v267 | 4);
      *(unsigned char *)(v268 + 4) = *(unsigned char *)((v267 | 4) + 4);
      *(_DWORD *)uint64_t v268 = v269;
      *(_WORD *)(v266 + 10) = *(_WORD *)(v267 + 0xA);
      uint64_t v270 = (v480 + v266) & v515;
      uint64_t v271 = (v480 + v267) & v515;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v270, v271, v479);
      uint64_t v272 = (v478 + v270) & v515;
      uint64_t v273 = (v478 + v271) & v515;
      v71(v272, v273, v479);
      uint64_t v274 = (unsigned char *)(v272 + v481);
      *uint64_t v274 = *(unsigned char *)(v273 + v481);
      v274[1] = *(unsigned char *)(v273 + v481 + 1);
      v274[2] = *(unsigned char *)(v273 + v481 + 2);
      v274[3] = *(unsigned char *)(v273 + v481 + 3);
      v274[4] = *(unsigned char *)(v273 + v481 + 4);
      unint64_t v275 = (v272 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v276 = (v273 + v481 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v275 = *(void *)v276;
      *(void *)(v275 + 8) = *(void *)(v276 + 8);
      *(unsigned char *)(v275 + 16) = *(unsigned char *)(v276 + 16);
      *(unsigned char *)(v275 + 17) = *(unsigned char *)(v276 + 17);
      *(unsigned char *)(v275 + 18) = *(unsigned char *)(v276 + 18);
      *(unsigned char *)(v275 + 19) = *(unsigned char *)(v276 + 19);
      unint64_t v277 = (v275 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v278 = (v276 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v277 = *(void *)v278;
      *(unsigned char *)(v277 + 8) = *(unsigned char *)(v278 + 8);
      *(unsigned char *)(v277 + 9) = *(unsigned char *)(v278 + 9);
      *(unsigned char *)(v277 + 10) = *(unsigned char *)(v278 + 10);
      *(unsigned char *)(v277 + 11) = *(unsigned char *)(v278 + 11);
      *(unsigned char *)(v277 + 12) = *(unsigned char *)(v278 + 12);
      unint64_t v279 = (void *)((v275 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v280 = (void *)((v276 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v279 = *v280;
      unint64_t v281 = ((unint64_t)v279 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v282 = ((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v281 = *(void *)v282;
      *(unsigned char *)(v281 + 8) = *(unsigned char *)(v282 + 8);
      *(unsigned char *)(v281 + 9) = *(unsigned char *)(v282 + 9);
      uint64_t v283 = (void *)((v475 + v281) & v515);
      uint64_t v284 = (const void *)((v475 + v282) & v515);
      swift_bridgeObjectRetain();
      if (v493(v284, 1, v479))
      {
        memcpy(v283, v284, __n);
      }
      else
      {
        v71((unint64_t)v283, (unint64_t)v284, v479);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v473 + 56))(v283, 0, 1, v479);
      }
      unint64_t v89 = v249;
      unint64_t v285 = (void *)(((unint64_t)v283 + v476) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v286 = (void *)(((unint64_t)v284 + v476) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v285 = *v286;
      unint64_t v287 = ((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v288 = ((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v289 = *(void *)v288;
      *(unsigned char *)(v287 + 8) = *(unsigned char *)(v288 + 8);
      *(void *)unint64_t v287 = v289;
      uint64_t v290 = (void *)(((unint64_t)v285 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v291 = (void *)(((unint64_t)v286 + 31) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v290 = *v291;
      unint64_t v292 = ((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v293 = (uint64_t *)(((unint64_t)v291 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v294 = v293[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((v294 & 0x3000000000000000) != 0)
      {
        *(_OWORD *)unint64_t v292 = *(_OWORD *)v293;
      }
      else
      {
        uint64_t v295 = *v293;
        sub_24D3F9C18(*v293, v294);
        *(void *)unint64_t v292 = v295;
        *(void *)(v292 + 8) = v294;
      }
      unint64_t v296 = (v292 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v297 = ((unint64_t)v293 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v298 = *(void *)v297;
      *(unsigned char *)(v296 + 8) = *(unsigned char *)(v297 + 8);
      *(void *)unint64_t v296 = v298;
      *(unsigned char *)(v296 + 9) = *(unsigned char *)(v297 + 9);
      unint64_t v299 = (v296 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v300 = (v297 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      int v301 = *(_DWORD *)v300;
      *(unsigned char *)(v299 + 4) = *(unsigned char *)(v300 + 4);
      *(_DWORD *)unint64_t v299 = v301;
      uint64_t v302 = (void *)((v296 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v303 = (void *)((v297 + 25) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v302 = *v303;
      v302[1] = v303[1];
      unint64_t v304 = v266 + v477;
      unint64_t v305 = v267 + v477;
      unint64_t v306 = *(void *)(v267 + v477 + 16);
      if (v306 >= 0xFFFFFFFF) {
        LODWORD(v306) = -1;
      }
      int v307 = v306 - 1;
      swift_bridgeObjectRetain();
      if (v307 < 0)
      {
        *(void *)unint64_t v304 = *(void *)v305;
        *(unsigned char *)(v304 + 8) = *(unsigned char *)(v305 + 8);
        *(unsigned char *)(v304 + 9) = *(unsigned char *)(v305 + 9);
        long long v322 = *(void **)(v305 + 16);
        id v323 = v322;
        *(void *)(v304 + 16) = v322;
        unint64_t v324 = *(void **)(v305 + 24);
        id v325 = v324;
        *(void *)(v304 + 24) = v324;
        *(unsigned char *)(v304 + 32) = *(unsigned char *)(v305 + 32);
        *(unsigned char *)(v304 + 33) = *(unsigned char *)(v305 + 33);
        *(unsigned char *)(v304 + 34) = *(unsigned char *)(v305 + 34);
        *(void *)(v304 + 40) = *(void *)(v305 + 40);
        *(void *)(v304 + 48) = *(void *)(v305 + 48);
        *(void *)(v304 + 56) = *(void *)(v305 + 56);
        *(void *)(v304 + 64) = *(void *)(v305 + 64);
        *(unsigned char *)(v304 + 72) = *(unsigned char *)(v305 + 72);
        *(void *)(v304 + 80) = *(void *)(v305 + 80);
        *(void *)(v304 + 88) = *(void *)(v305 + 88);
        v519 = *(void **)(v305 + 96);
        *(void *)(v304 + 96) = v519;
        *(unsigned char *)(v304 + 104) = *(unsigned char *)(v305 + 104);
        *(unsigned char *)(v304 + 105) = *(unsigned char *)(v305 + 105);
        *(void *)(v304 + 112) = *(void *)(v305 + 112);
        *(void *)(v304 + 120) = *(void *)(v305 + 120);
        *(void *)(v304 + 128) = *(void *)(v305 + 128);
        *(void *)(v304 + 136) = *(void *)(v305 + 136);
        *(void *)(v304 + 144) = *(void *)(v305 + 144);
        *(void *)(v304 + 152) = *(void *)(v305 + 152);
        *(void *)(v304 + 160) = *(void *)(v305 + 160);
        *(void *)(v304 + 168) = *(void *)(v305 + 168);
        *(unsigned char *)(v304 + 176) = *(unsigned char *)(v305 + 176);
        *(void *)(v304 + 184) = *(void *)(v305 + 184);
        uint64_t v326 = *(void *)(v305 + 192);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        id v327 = v519;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v326)
        {
          *(void *)(v304 + 192) = v326;
          *(void *)(v304 + 200) = *(void *)(v305 + 200);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          *(_OWORD *)(v304 + 192) = *(_OWORD *)(v305 + 192);
        }
        unint64_t v89 = a1;
        unint64_t v320 = v508;
        size_t v321 = v489;
        *(void *)(v304 + 208) = *(void *)(v305 + 208);
        *(void *)(v304 + 216) = *(void *)(v305 + 216);
        *(void *)(v304 + 224) = *(void *)(v305 + 224);
        *(void *)(v304 + 232) = *(void *)(v305 + 232);
        *(void *)(v304 + 240) = *(void *)(v305 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v308 = *(_OWORD *)v305;
        long long v309 = *(_OWORD *)(v305 + 16);
        long long v310 = *(_OWORD *)(v305 + 48);
        *(_OWORD *)(v304 + 32) = *(_OWORD *)(v305 + 32);
        *(_OWORD *)(v304 + 48) = v310;
        *(_OWORD *)unint64_t v304 = v308;
        *(_OWORD *)(v304 + 16) = v309;
        long long v311 = *(_OWORD *)(v305 + 64);
        long long v312 = *(_OWORD *)(v305 + 80);
        long long v313 = *(_OWORD *)(v305 + 112);
        *(_OWORD *)(v304 + 96) = *(_OWORD *)(v305 + 96);
        *(_OWORD *)(v304 + 112) = v313;
        *(_OWORD *)(v304 + 64) = v311;
        *(_OWORD *)(v304 + 80) = v312;
        long long v314 = *(_OWORD *)(v305 + 128);
        long long v315 = *(_OWORD *)(v305 + 144);
        long long v316 = *(_OWORD *)(v305 + 176);
        *(_OWORD *)(v304 + 160) = *(_OWORD *)(v305 + 160);
        *(_OWORD *)(v304 + 176) = v316;
        *(_OWORD *)(v304 + 128) = v314;
        *(_OWORD *)(v304 + 144) = v315;
        long long v317 = *(_OWORD *)(v305 + 192);
        long long v318 = *(_OWORD *)(v305 + 208);
        long long v319 = *(_OWORD *)(v305 + 224);
        *(void *)(v304 + 240) = *(void *)(v305 + 240);
        *(_OWORD *)(v304 + 208) = v318;
        *(_OWORD *)(v304 + 224) = v319;
        *(_OWORD *)(v304 + 192) = v317;
        unint64_t v320 = v508;
        size_t v321 = v489;
      }
      v328 = (_OWORD *)((v304 + 255) & 0xFFFFFFFFFFFFFFF8);
      id v329 = (long long *)((v305 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v330 = *v329;
      *(_OWORD *)((char *)v328 + 9) = *(long long *)((char *)v329 + 9);
      _OWORD *v328 = v330;
      unint64_t v331 = (v304 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v332 = (v305 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v333 = *(_OWORD *)v332;
      *(unsigned char *)(v331 + 16) = *(unsigned char *)(v332 + 16);
      *(_OWORD *)unint64_t v331 = v333;
      long long v334 = (void *)((v304 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v335 = (v305 + 311) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v336 = *(void *)v335;
      v335 += 15;
      *long long v334 = v336;
      long long v337 = (void *)(((unint64_t)v334 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v338 = *(void *)(v335 & 0xFFFFFFFFFFFFFFF8);
      unint64_t v339 = *(void *)((v335 & 0xFFFFFFFFFFFFFFF8) + 8);
      sub_24D5203A8(v338, v339);
      char v132 = 0;
      *long long v337 = v338;
      v337[1] = v339;
      uint64_t v340 = (void *)((v320 + v498) & 0xFFFFFFFFFFFFFFF8);
      v341 = (void *)((v321 + v498) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v340 = *v341;
      uint64_t v342 = (void *)(((unint64_t)v340 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v343 = (void *)(((unint64_t)v341 + 15) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v342 = *v343;
      v342[1] = v343[1];
LABEL_118:
      uint64_t v38 = v485;
LABEL_119:
      *((unsigned char *)v89 + v38) = v132;
      swift_bridgeObjectRetain();
      return v89;
  }
}

char *sub_24D96E008(char *a1, char *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v536 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v510 = *(unsigned __int8 *)(v536 + 80);
    uint64_t v522 = *(void *)(v536 + 64);
    uint64_t v512 = v522 + v510;
    uint64_t v488 = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(v488 - 8);
    uint64_t v538 = v3;
    v540 = v2;
    int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
    uint64_t v486 = swift_getAssociatedTypeWitness();
    uint64_t v532 = *(void *)(v486 - 8);
    uint64_t v5 = *(unsigned __int8 *)(v532 + 80);
    uint64_t v518 = v4 | v5 | 7;
    uint64_t v481 = v522 + v518;
    uint64_t v487 = *(void *)(v3 + 64) + 7;
    uint64_t v485 = v5 + 8;
    uint64_t v534 = v5;
    uint64_t v482 = *(void *)(v532 + 64) + 7;
    unint64_t v489 = ((((v482 + ((v5 + 8 + (v487 & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v6 = sub_24DCC8CE8();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
    uint64_t v9 = v8 | 7;
    uint64_t v541 = v6;
    uint64_t v542 = (v8 | 7) + 16;
    uint64_t v533 = v8 + 12;
    size_t v10 = *(void *)(v7 + 64);
    uint64_t v531 = v10 + v8;
    size_t v492 = v10 + 12;
    uint64_t v527 = v7;
    uint64_t v528 = v8 + 10;
    unsigned int v513 = *(_DWORD *)(v7 + 84);
    size_t v493 = v10;
    if (v513) {
      size_t v11 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    else {
      size_t v11 = v10 + 1;
    }
    size_t __n = v11;
    size_t v529 = v11 + 7;
    unint64_t v471 = (v8
          + 10
          + ((((((v10 + 12 + ((v10 + v8 + ((v8 + 12) & ~v8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8;
    unint64_t v515 = (((((((((v11 + 7 + v471) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v530 = v515 + 16;
    uint64_t v472 = (v542 + v489 + ((v522 + v518 + ((v522 + v510) & ~v510)) & ~v518)) & ~(v8 | 7);
    size_t v517 = ((((v472 + v515 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v12 = swift_getAssociatedTypeWitness();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v500 = v13;
    uint64_t v501 = v12;
    uint64_t v14 = *(unsigned __int8 *)(v13 + 80);
    uint64_t v15 = swift_getAssociatedTypeWitness();
    uint64_t v16 = *(void *)(v15 - 8);
    uint64_t v502 = v16;
    uint64_t v503 = v15;
    int v17 = *(_DWORD *)(v16 + 80) & 0xF8;
    uint64_t v18 = v536;
    uint64_t v19 = swift_getAssociatedTypeWitness();
    uint64_t v20 = v14;
    uint64_t v507 = v19;
    uint64_t v505 = *(void *)(v19 - 8);
    uint64_t v21 = *(unsigned __int8 *)(v505 + 80);
    int v22 = v17 | v21;
    uint64_t v2 = (char *)v540;
    uint64_t v23 = v22 | 7u;
    uint64_t v24 = v14 | v8 | v23;
    size_t v480 = v517 + v24;
    uint64_t v25 = v13;
    uint64_t v26 = v518;
    uint64_t v27 = *(void *)(v25 + 64);
    uint64_t v496 = v27 + v14;
    uint64_t v497 = v27 + v23;
    uint64_t v498 = *(void *)(v16 + 64) + 7;
    uint64_t v499 = v21 + 8;
    uint64_t v504 = *(void *)(v505 + 64) + 7;
    unint64_t v506 = ((((v504 + ((v21 + 8 + (v498 & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unint64_t v28 = (v515 + ((v542 + v506 + ((v27 + v23 + ((v27 + v14) & ~v14)) & ~v23)) & ~v9) + 327) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = ((((v29 + ((v517 + v24) & ~v24) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v31 = v518 | v510 | v8;
    uint64_t v477 = v31 + v522;
    if (*(_DWORD *)(v3 + 84) <= *(_DWORD *)(v532 + 84)) {
      unsigned int v32 = *(_DWORD *)(v532 + 84);
    }
    else {
      unsigned int v32 = *(_DWORD *)(v3 + 84);
    }
    unsigned int v467 = v32;
    if (v32 <= 0x7FFFFFFE) {
      unsigned int v32 = 2147483646;
    }
    unsigned int v470 = v32;
    if (v32 <= *(_DWORD *)(v536 + 84)) {
      unsigned int v32 = *(_DWORD *)(v536 + 84);
    }
    if (v513 <= 0x7FFFFFFE) {
      unsigned int v33 = 2147483646;
    }
    else {
      unsigned int v33 = v513;
    }
    if (v32 <= v33) {
      unsigned int v32 = v33;
    }
    unsigned int v468 = v32;
    if (v32 <= 0x7FFFFFFF) {
      int v34 = 0x7FFFFFFF;
    }
    else {
      int v34 = v32;
    }
    if (((v517 + (v477 & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 24 > v30) {
      unint64_t v30 = ((v517 + (v477 & ~v31)) & 0xFFFFFFFFFFFFFFF8) + 24;
    }
    unint64_t v35 = ((v28 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v35 > v30) {
      unint64_t v30 = v35;
    }
    if (v30 <= 0x10) {
      uint64_t v36 = 16;
    }
    else {
      uint64_t v36 = v30;
    }
    unsigned int v37 = *((unsigned __int8 *)v540 + v36);
    uint64_t v38 = v36 & 0xFFFFFFF8;
    if (v37 >= 4 && v38 != 0) {
      unsigned int v37 = *v540 + 4;
    }
    int v476 = v34;
    int v478 = *(_DWORD *)(v536 + 84);
    int v469 = *(_DWORD *)(v3 + 84);
    uint64_t v509 = ~v510;
    uint64_t v511 = ~v518;
    uint64_t v484 = ~v534;
    uint64_t v40 = ~v9;
    uint64_t v535 = ~v8;
    uint64_t v479 = ~v24;
    uint64_t v494 = ~v20;
    uint64_t v495 = ~v23;
    uint64_t v41 = ~v21;
    uint64_t v475 = ~v31;
    uint64_t v516 = v36;
    unint64_t v508 = v29 + 16;
    switch(v37)
    {
      case 1u:
        uint64_t v473 = v36 & 0xFFFFFFF8;
        uint64_t v490 = v40;
        unint64_t v65 = *(void (**)(_DWORD *, uint64_t))(v536 + 8);
        v65((char *)v540, AssociatedTypeWitness);
        unint64_t v66 = ((unint64_t)v540 + v477) & v475;
        if (v478 == v476)
        {
          int v67 = (*(uint64_t (**)(unint64_t))(v536 + 48))(((unint64_t)v540 + v477) & v475);
          goto LABEL_56;
        }
        unint64_t v68 = (v512 + v66) & v509;
        unint64_t v69 = (v481 + v68) & v511;
        if (v470 == v476)
        {
          if (v469 == v470)
          {
            int v67 = (*(uint64_t (**)(unint64_t))(v538 + 48))((v481 + v68) & v511);
            goto LABEL_56;
          }
          unint64_t v370 = (unint64_t *)((v487 + v69) & 0xFFFFFFFFFFFFFFF8);
          if (v467 <= 0x7FFFFFFE)
          {
            unint64_t v371 = *v370;
            goto LABEL_183;
          }
          int v67 = (*(uint64_t (**)(unint64_t))(v532 + 48))(((unint64_t)v370 + v485) & v484);
        }
        else
        {
          unint64_t v249 = v69 + v489;
          if ((v468 & 0x80000000) == 0)
          {
            unint64_t v250 = *(void *)(v249 + 8);
            if (v250 >= 0xFFFFFFFF) {
              LODWORD(v250) = -1;
            }
            if (v250 == -1)
            {
LABEL_57:
              unint64_t v68 = (v512 + v66) & v509;
              unint64_t v69 = (v481 + v68) & v511;
LABEL_58:
              v65((_DWORD *)v66, AssociatedTypeWitness);
              v65((_DWORD *)v68, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v538 + 8))(v69, v488);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v532 + 8))((v485 + ((v487 + v69) & 0xFFFFFFFFFFFFFFF8)) & v484, v486);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v70 = (v542 + v69 + v489) & v490;
              uint64_t v71 = *(void (**)(unint64_t, uint64_t))(v527 + 8);
              v71((v533 + v70) & v535, v541);
              unint64_t v72 = (v531 + ((v533 + v70) & v535)) & v535;
              v71(v72, v541);
              swift_bridgeObjectRelease();
              unint64_t v73 = (v528
                   + ((((((v492 + v72) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v535;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v527 + 48))(v73, 1, v541)) {
                v71(v73, v541);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v74 = (uint64_t *)((((((v529 + v73) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v75 = v74[1];
              if ((v75 & 0x3000000000000000) == 0) {
                sub_24D400DCC(*v74, v75);
              }
              swift_bridgeObjectRelease();
              unint64_t v76 = v530 + v70;
              unint64_t v77 = *(void **)(v76 + 16);
              LODWORD(v78) = -1;
              if ((unint64_t)v77 < 0xFFFFFFFF) {
                uint64_t v78 = *(void *)(v76 + 16);
              }
              uint64_t v36 = v516;
              if ((int)v78 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v76 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_24D466534(*(void *)((((v76 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v76 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_69:
            uint64_t v40 = v490;
            uint64_t v18 = v536;
            uint64_t v38 = v473;
LABEL_81:
            swift_bridgeObjectRelease();
            unsigned int v90 = a2[v36];
            if (v38) {
              BOOL v91 = v90 >= 4;
            }
            else {
              BOOL v91 = 0;
            }
            if (v91) {
              unsigned int v90 = *(_DWORD *)a2 + 4;
            }
            switch(v90)
            {
              case 1u:
                unint64_t v126 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
                v126(v2, a2, AssociatedTypeWitness);
                unint64_t v127 = (char *)((unint64_t)&v2[v477] & v475);
                uint64_t v128 = (char *)((unint64_t)&a2[v477] & v475);
                uint64_t v523 = v127;
                if (v478 == v476)
                {
                  int v129 = (*(uint64_t (**)(char *))(v18 + 48))(v128);
LABEL_160:
                  if (v129)
                  {
LABEL_161:
                    memcpy(v127, v128, v517);
LABEL_162:
                    size_t v376 = __n;
LABEL_179:
                    unint64_t v463 = ((((v472
                             + ((((((((((v471 + v376 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                                 + 19) & 0xFFFFFFFFFFFFFFF8)
                               + 25) & 0xFFFFFFFFFFFFFFF8)
                             + 327) & 0xFFFFFFFFFFFFFFF8)
                           + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 16;
                    unint64_t v464 = (unint64_t)&v523[v463];
                    unint64_t v465 = (unint64_t)&v128[v463];
                    *(unsigned char *)unint64_t v464 = *(unsigned char *)v465;
                    v464 &= 0xFFFFFFFFFFFFFFF8;
                    v465 &= 0xFFFFFFFFFFFFFFF8;
                    *(void *)(v464 + 8) = *(void *)(v465 + 8);
                    *(void *)(v464 + 16) = *(void *)(v465 + 16);
                    char v164 = 1;
LABEL_180:
                    v2[v36] = v164;
                    swift_bridgeObjectRetain();
                    return v2;
                  }
                  unint64_t v165 = (unint64_t)&v128[v512] & v509;
                  unint64_t v166 = (v481 + v165) & v511;
LABEL_164:
                  v126(v127, v128, AssociatedTypeWitness);
                  v126((char *)((unint64_t)&v127[v512] & v509), (char *)v165, AssociatedTypeWitness);
                  unint64_t v377 = (v481 + ((unint64_t)&v127[v512] & v509)) & v511;
                  (*(void (**)(unint64_t, unint64_t, uint64_t))(v538 + 16))(v377, v166, v488);
                  v378 = (void *)((v487 + v377) & 0xFFFFFFFFFFFFFFF8);
                  v379 = (void *)((v487 + v166) & 0xFFFFFFFFFFFFFFF8);
                  void *v378 = *v379;
                  unint64_t v380 = ((unint64_t)v378 + v485) & v484;
                  unint64_t v381 = ((unint64_t)v379 + v485) & v484;
                  v382 = *(void (**)(unint64_t, unint64_t, uint64_t))(v532 + 16);
                  swift_bridgeObjectRetain();
                  v382(v380, v381, v486);
                  unint64_t v383 = (void *)((v482 + v381) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v384 = (void *)((v482 + v380) & 0xFFFFFFFFFFFFFFF8);
                  *unint64_t v384 = *v383;
                  uint64_t v385 = (void *)(((unint64_t)v384 + 15) & 0xFFFFFFFFFFFFFFF8);
                  v386 = (void *)(((unint64_t)v383 + 15) & 0xFFFFFFFFFFFFFFF8);
                  *uint64_t v385 = *v386;
                  v385[1] = v386[1];
                  v387 = (void *)(v377 + v489);
                  void *v387 = *(void *)(v166 + v489);
                  v387[1] = *(void *)(v166 + v489 + 8);
                  unint64_t v388 = (v542 + v377 + v489) & v40;
                  unint64_t v389 = (v542 + v166 + v489) & v40;
                  *(unsigned char *)unint64_t v388 = *(unsigned char *)v389;
                  uint64_t v390 = v388 | 4;
                  int v391 = *(_DWORD *)(v389 | 4);
                  *(unsigned char *)(v390 + 4) = *(unsigned char *)((v389 | 4) + 4);
                  *(_DWORD *)uint64_t v390 = v391;
                  *(_WORD *)(v388 + 10) = *(_WORD *)(v389 + 0xA);
                  unint64_t v546 = v388;
                  unint64_t v392 = (v533 + v388) & v535;
                  unint64_t v539 = v389;
                  unint64_t v393 = (v533 + v389) & v535;
                  uint64_t v394 = *(void (**)(unint64_t, unint64_t, uint64_t))(v527 + 16);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  v394(v392, v393, v541);
                  unint64_t v395 = (v531 + v392) & v535;
                  unint64_t v396 = (v531 + v393) & v535;
                  v394(v395, v396, v541);
                  int v397 = (unsigned char *)(v395 + v493);
                  *int v397 = *(unsigned char *)(v396 + v493);
                  v397[1] = *(unsigned char *)(v396 + v493 + 1);
                  v397[2] = *(unsigned char *)(v396 + v493 + 2);
                  v397[3] = *(unsigned char *)(v396 + v493 + 3);
                  v397[4] = *(unsigned char *)(v396 + v493 + 4);
                  unint64_t v398 = (v395 + v493 + 12) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v399 = (v396 + v493 + 12) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v398 = *(void *)v399;
                  *(void *)(v398 + 8) = *(void *)(v399 + 8);
                  *(unsigned char *)(v398 + 16) = *(unsigned char *)(v399 + 16);
                  *(unsigned char *)(v398 + 17) = *(unsigned char *)(v399 + 17);
                  *(unsigned char *)(v398 + 18) = *(unsigned char *)(v399 + 18);
                  *(unsigned char *)(v398 + 19) = *(unsigned char *)(v399 + 19);
                  unint64_t v400 = (v398 + 27) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v401 = (v399 + 27) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v400 = *(void *)v401;
                  *(unsigned char *)(v400 + 8) = *(unsigned char *)(v401 + 8);
                  *(unsigned char *)(v400 + 9) = *(unsigned char *)(v401 + 9);
                  *(unsigned char *)(v400 + 10) = *(unsigned char *)(v401 + 10);
                  *(unsigned char *)(v400 + 11) = *(unsigned char *)(v401 + 11);
                  *(unsigned char *)(v400 + 12) = *(unsigned char *)(v401 + 12);
                  unint64_t v402 = (void *)((v399 + 47) & 0xFFFFFFFFFFFFFFF8);
                  int v403 = (void *)((v398 + 47) & 0xFFFFFFFFFFFFFFF8);
                  void *v403 = *v402;
                  unint64_t v404 = ((unint64_t)v403 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v405 = ((unint64_t)v402 + 15) & 0xFFFFFFFFFFFFFFF8;
                  *(void *)unint64_t v404 = *(void *)v405;
                  *(unsigned char *)(v404 + 8) = *(unsigned char *)(v405 + 8);
                  *(unsigned char *)(v404 + 9) = *(unsigned char *)(v405 + 9);
                  long long v406 = (void *)((v528 + v404) & v535);
                  long long v407 = (const void *)((v528 + v405) & v535);
                  long long v408 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v527 + 48);
                  swift_bridgeObjectRetain();
                  if (v408(v407, 1, v541))
                  {
                    memcpy(v406, v407, __n);
                  }
                  else
                  {
                    v394((unint64_t)v406, (unint64_t)v407, v541);
                    (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v406, 0, 1, v541);
                  }
                  long long v409 = (void *)(((unint64_t)v406 + v529) & 0xFFFFFFFFFFFFFFF8);
                  long long v410 = (void *)(((unint64_t)v407 + v529) & 0xFFFFFFFFFFFFFFF8);
                  *long long v409 = *v410;
                  unint64_t v411 = ((unint64_t)v409 + 15) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v412 = ((unint64_t)v410 + 15) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v413 = *(void *)v412;
                  *(unsigned char *)(v411 + 8) = *(unsigned char *)(v412 + 8);
                  *(void *)unint64_t v411 = v413;
                  long long v414 = (void *)(((unint64_t)v409 + 31) & 0xFFFFFFFFFFFFFFF8);
                  long long v415 = (void *)(((unint64_t)v410 + 31) & 0xFFFFFFFFFFFFFFF8);
                  *long long v414 = *v415;
                  unint64_t v416 = ((unint64_t)v414 + 15) & 0xFFFFFFFFFFFFFFF8;
                  id v417 = (uint64_t *)(((unint64_t)v415 + 15) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v418 = v417[1];
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if ((v418 & 0x3000000000000000) != 0)
                  {
                    *(_OWORD *)unint64_t v416 = *(_OWORD *)v417;
                  }
                  else
                  {
                    uint64_t v419 = *v417;
                    sub_24D3F9C18(*v417, v418);
                    *(void *)unint64_t v416 = v419;
                    *(void *)(v416 + 8) = v418;
                  }
                  unsigned int v420 = v513;
                  unint64_t v421 = (v416 + 19) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v422 = ((unint64_t)v417 + 19) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v423 = *(void *)v422;
                  *(unsigned char *)(v421 + 8) = *(unsigned char *)(v422 + 8);
                  *(void *)unint64_t v421 = v423;
                  *(unsigned char *)(v421 + 9) = *(unsigned char *)(v422 + 9);
                  unint64_t v424 = (v421 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  unint64_t v425 = (v422 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                  int v426 = *(_DWORD *)v425;
                  *(unsigned char *)(v424 + 4) = *(unsigned char *)(v425 + 4);
                  *(_DWORD *)unint64_t v424 = v426;
                  long long v427 = (void *)((v421 + 25) & 0xFFFFFFFFFFFFFFF8);
                  v428 = (void *)((v422 + 25) & 0xFFFFFFFFFFFFFFF8);
                  void *v427 = *v428;
                  v427[1] = v428[1];
                  unint64_t v429 = v530 + v546;
                  uint64_t v430 = (long long *)(v530 + v539);
                  unint64_t v431 = *(void *)(v530 + v539 + 16);
                  if (v431 >= 0xFFFFFFFF) {
                    LODWORD(v431) = -1;
                  }
                  int v432 = v431 - 1;
                  swift_bridgeObjectRetain();
                  if (v432 < 0)
                  {
                    *(void *)unint64_t v429 = *(void *)v430;
                    *(unsigned char *)(v429 + 8) = *((unsigned char *)v430 + 8);
                    *(unsigned char *)(v429 + 9) = *((unsigned char *)v430 + 9);
                    int v445 = (void *)*((void *)v430 + 2);
                    id v446 = v445;
                    *(void *)(v429 + 16) = v445;
                    size_t v447 = (void *)*((void *)v430 + 3);
                    id v448 = v447;
                    *(void *)(v429 + 24) = v447;
                    *(unsigned char *)(v429 + 32) = *((unsigned char *)v430 + 32);
                    *(unsigned char *)(v429 + 33) = *((unsigned char *)v430 + 33);
                    *(unsigned char *)(v429 + 34) = *((unsigned char *)v430 + 34);
                    *(void *)(v429 + 40) = *((void *)v430 + 5);
                    *(void *)(v429 + 48) = *((void *)v430 + 6);
                    *(void *)(v429 + 56) = *((void *)v430 + 7);
                    *(void *)(v429 + 64) = *((void *)v430 + 8);
                    *(unsigned char *)(v429 + 72) = *((unsigned char *)v430 + 72);
                    *(void *)(v429 + 80) = *((void *)v430 + 10);
                    *(void *)(v429 + 88) = *((void *)v430 + 11);
                    v547 = (void *)*((void *)v430 + 12);
                    *(void *)(v429 + 96) = v547;
                    *(unsigned char *)(v429 + 104) = *((unsigned char *)v430 + 104);
                    *(unsigned char *)(v429 + 105) = *((unsigned char *)v430 + 105);
                    *(void *)(v429 + 112) = *((void *)v430 + 14);
                    *(void *)(v429 + 120) = *((void *)v430 + 15);
                    *(void *)(v429 + 128) = *((void *)v430 + 16);
                    *(void *)(v429 + 136) = *((void *)v430 + 17);
                    *(void *)(v429 + 144) = *((void *)v430 + 18);
                    *(void *)(v429 + 152) = *((void *)v430 + 19);
                    *(void *)(v429 + 160) = *((void *)v430 + 20);
                    *(void *)(v429 + 168) = *((void *)v430 + 21);
                    *(unsigned char *)(v429 + 176) = *((unsigned char *)v430 + 176);
                    *(void *)(v429 + 184) = *((void *)v430 + 23);
                    uint64_t v449 = *((void *)v430 + 24);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    id v450 = v547;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    if (v449)
                    {
                      *(void *)(v429 + 192) = v449;
                      *(void *)(v429 + 200) = *((void *)v430 + 25);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                    }
                    else
                    {
                      *(_OWORD *)(v429 + 192) = v430[12];
                    }
                    uint64_t v2 = (char *)v540;
                    size_t v376 = v493;
                    unsigned int v420 = v513;
                    *(void *)(v429 + 208) = *((void *)v430 + 26);
                    *(void *)(v429 + 216) = *((void *)v430 + 27);
                    *(void *)(v429 + 224) = *((void *)v430 + 28);
                    *(void *)(v429 + 232) = *((void *)v430 + 29);
                    *(void *)(v429 + 240) = *((void *)v430 + 30);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    long long v433 = *v430;
                    long long v434 = v430[1];
                    long long v435 = v430[3];
                    *(_OWORD *)(v429 + 32) = v430[2];
                    *(_OWORD *)(v429 + 48) = v435;
                    *(_OWORD *)unint64_t v429 = v433;
                    *(_OWORD *)(v429 + 16) = v434;
                    long long v436 = v430[4];
                    long long v437 = v430[5];
                    long long v438 = v430[7];
                    *(_OWORD *)(v429 + 96) = v430[6];
                    *(_OWORD *)(v429 + 112) = v438;
                    *(_OWORD *)(v429 + 64) = v436;
                    *(_OWORD *)(v429 + 80) = v437;
                    long long v439 = v430[8];
                    long long v440 = v430[9];
                    long long v441 = v430[11];
                    *(_OWORD *)(v429 + 160) = v430[10];
                    *(_OWORD *)(v429 + 176) = v441;
                    *(_OWORD *)(v429 + 128) = v439;
                    *(_OWORD *)(v429 + 144) = v440;
                    long long v442 = v430[12];
                    long long v443 = v430[13];
                    long long v444 = v430[14];
                    *(void *)(v429 + 240) = *((void *)v430 + 30);
                    *(_OWORD *)(v429 + 208) = v443;
                    *(_OWORD *)(v429 + 224) = v444;
                    *(_OWORD *)(v429 + 192) = v442;
                    size_t v376 = v493;
                  }
                  uint64_t v451 = (_OWORD *)((v429 + 255) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v452 = (long long *)(((unint64_t)v430 + 255) & 0xFFFFFFFFFFFFFFF8);
                  long long v453 = *v452;
                  *(_OWORD *)((char *)v451 + 9) = *(long long *)((char *)v452 + 9);
                  *uint64_t v451 = v453;
                  unint64_t v454 = (v429 + 287) & 0xFFFFFFFFFFFFFFF8;
                  unint64_t v455 = ((unint64_t)v430 + 287) & 0xFFFFFFFFFFFFFFF8;
                  long long v456 = *(_OWORD *)v455;
                  *(unsigned char *)(v454 + 16) = *(unsigned char *)(v455 + 16);
                  *(_OWORD *)unint64_t v454 = v456;
                  uint64_t v457 = (void *)((v429 + 311) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v458 = ((unint64_t)v430 + 311) & 0xFFFFFFFFFFFFFFF8;
                  uint64_t v459 = *(void *)v458;
                  v458 += 15;
                  *uint64_t v457 = v459;
                  uint64_t v460 = (void *)(((unint64_t)v457 + 15) & 0xFFFFFFFFFFFFFFF8);
                  uint64_t v461 = *(void *)(v458 & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v462 = *(void *)((v458 & 0xFFFFFFFFFFFFFFF8) + 8);
                  sub_24D5203A8(v461, v462);
                  *uint64_t v460 = v461;
                  v460[1] = v462;
                  uint64_t v36 = v516;
                  uint64_t v128 = (char *)((unint64_t)&a2[v477] & v475);
                  if (v420) {
                    goto LABEL_179;
                  }
                  goto LABEL_162;
                }
                unint64_t v165 = (unint64_t)&v128[v512] & v509;
                unint64_t v166 = (v481 + v165) & v511;
                if (v470 == v476)
                {
                  if (v469 == v470)
                  {
                    int v129 = (*(uint64_t (**)(unint64_t))(v538 + 48))((v481 + v165) & v511);
                    goto LABEL_160;
                  }
                  unint64_t v372 = (unint64_t *)((v487 + v166) & 0xFFFFFFFFFFFFFFF8);
                  if (v467 > 0x7FFFFFFE)
                  {
                    int v129 = (*(uint64_t (**)(unint64_t))(v532 + 48))(((unint64_t)v372 + v485) & v484);
                    goto LABEL_160;
                  }
                  unint64_t v373 = *v372;
                }
                else
                {
                  unint64_t v251 = v166 + v489;
                  if ((v468 & 0x80000000) == 0)
                  {
                    unint64_t v252 = *(void *)(v251 + 8);
                    if (v252 >= 0xFFFFFFFF) {
                      LODWORD(v252) = -1;
                    }
                    int v129 = v252 + 1;
                    goto LABEL_160;
                  }
                  uint64_t v375 = (v533 + ((v542 + v251) & v40)) & v535;
                  if (v513 > 0x7FFFFFFD)
                  {
                    int v129 = (*(uint64_t (**)(uint64_t))(v527 + 48))(v375);
                    goto LABEL_160;
                  }
                  unint64_t v373 = *(void *)(((v492 + ((v531 + v375) & v535)) & 0xFFFFFFFFFFFFFFF8) + 8);
                }
                if (v373 >= 0xFFFFFFFF) {
                  LODWORD(v373) = -1;
                }
                if ((v373 + 1) >= 2) {
                  goto LABEL_161;
                }
                goto LABEL_164;
              case 2u:
                uint64_t v130 = *(void (**)(void *, void *, uint64_t))(v500 + 16);
                v130(v2, a2, v501);
                v130((void *)((unint64_t)&v2[v496] & v494), (void *)((unint64_t)&a2[v496] & v494), v501);
                unint64_t v131 = (v497 + ((unint64_t)&v2[v496] & v494)) & v495;
                unint64_t v132 = (v497 + ((unint64_t)&a2[v496] & v494)) & v495;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v502 + 16))(v131, v132, v503);
                unint64_t v133 = (void *)((v498 + v131) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v134 = (void *)((v498 + v132) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v133 = *v134;
                unint64_t v135 = ((unint64_t)v133 + v499) & v41;
                unint64_t v136 = ((unint64_t)v134 + v499) & v41;
                unint64_t v137 = *(void (**)(unint64_t, unint64_t, uint64_t))(v505 + 16);
                swift_bridgeObjectRetain();
                v137(v135, v136, v507);
                unint64_t v138 = (void *)((v504 + v136) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v139 = (void *)((v504 + v135) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v139 = *v138;
                uint64_t v140 = (void *)(((unint64_t)v139 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v141 = (void *)(((unint64_t)v138 + 15) & 0xFFFFFFFFFFFFFFF8);
                void *v140 = *v141;
                v140[1] = v141[1];
                unint64_t v142 = (void *)(v506 + v131);
                *unint64_t v142 = *(void *)(v506 + v132);
                v142[1] = *(void *)(v506 + v132 + 8);
                unint64_t v143 = (v542 + v506 + v131) & v40;
                unint64_t v144 = (v542 + v506 + v132) & v40;
                *(unsigned char *)unint64_t v143 = *(unsigned char *)v144;
                uint64_t v145 = v143 | 4;
                int v146 = *(_DWORD *)(v144 | 4);
                *(unsigned char *)(v145 + 4) = *(unsigned char *)((v144 | 4) + 4);
                *(_DWORD *)uint64_t v145 = v146;
                *(_WORD *)(v143 + 10) = *(_WORD *)(v144 + 0xA);
                unint64_t v543 = v143;
                unint64_t v147 = (v533 + v143) & v535;
                unint64_t v148 = (v533 + v144) & v535;
                unint64_t v149 = *(void (**)(unint64_t, unint64_t, uint64_t))(v527 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v149(v147, v148, v541);
                unint64_t v150 = (v531 + v147) & v535;
                unint64_t v151 = (v531 + v148) & v535;
                v149(v150, v151, v541);
                unsigned int v152 = (unsigned char *)(v150 + v493);
                unsigned char *v152 = *(unsigned char *)(v151 + v493);
                v152[1] = *(unsigned char *)(v151 + v493 + 1);
                v152[2] = *(unsigned char *)(v151 + v493 + 2);
                v152[3] = *(unsigned char *)(v151 + v493 + 3);
                v152[4] = *(unsigned char *)(v151 + v493 + 4);
                unint64_t v153 = (v150 + v493 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v154 = (v151 + v493 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v153 = *(void *)v154;
                *(void *)(v153 + 8) = *(void *)(v154 + 8);
                *(unsigned char *)(v153 + 16) = *(unsigned char *)(v154 + 16);
                *(unsigned char *)(v153 + 17) = *(unsigned char *)(v154 + 17);
                *(unsigned char *)(v153 + 18) = *(unsigned char *)(v154 + 18);
                *(unsigned char *)(v153 + 19) = *(unsigned char *)(v154 + 19);
                unint64_t v155 = (v153 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v156 = (v154 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v155 = *(void *)v156;
                *(unsigned char *)(v155 + 8) = *(unsigned char *)(v156 + 8);
                *(unsigned char *)(v155 + 9) = *(unsigned char *)(v156 + 9);
                *(unsigned char *)(v155 + 10) = *(unsigned char *)(v156 + 10);
                *(unsigned char *)(v155 + 11) = *(unsigned char *)(v156 + 11);
                *(unsigned char *)(v155 + 12) = *(unsigned char *)(v156 + 12);
                int v157 = (void *)((v154 + 47) & 0xFFFFFFFFFFFFFFF8);
                long long v158 = (void *)((v153 + 47) & 0xFFFFFFFFFFFFFFF8);
                *long long v158 = *v157;
                unint64_t v159 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v160 = ((unint64_t)v157 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v159 = *(void *)v160;
                *(unsigned char *)(v159 + 8) = *(unsigned char *)(v160 + 8);
                *(unsigned char *)(v159 + 9) = *(unsigned char *)(v160 + 9);
                long long v161 = (void *)((v528 + v159) & v535);
                long long v162 = (const void *)((v528 + v160) & v535);
                long long v163 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v527 + 48);
                swift_bridgeObjectRetain();
                if (v163(v162, 1, v541))
                {
                  memcpy(v161, v162, __n);
                }
                else
                {
                  v149((unint64_t)v161, (unint64_t)v162, v541);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v161, 0, 1, v541);
                }
                long long v167 = (void *)(((unint64_t)v161 + v529) & 0xFFFFFFFFFFFFFFF8);
                long long v168 = (void *)(((unint64_t)v162 + v529) & 0xFFFFFFFFFFFFFFF8);
                *long long v167 = *v168;
                unint64_t v169 = ((unint64_t)v167 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v170 = ((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v171 = *(void *)v170;
                *(unsigned char *)(v169 + 8) = *(unsigned char *)(v170 + 8);
                *(void *)unint64_t v169 = v171;
                unint64_t v172 = (void *)(((unint64_t)v167 + 31) & 0xFFFFFFFFFFFFFFF8);
                id v173 = (void *)(((unint64_t)v168 + 31) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v172 = *v173;
                unint64_t v174 = ((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8;
                id v175 = (uint64_t *)(((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v176 = v175[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if ((v176 & 0x3000000000000000) != 0)
                {
                  *(_OWORD *)unint64_t v174 = *(_OWORD *)v175;
                }
                else
                {
                  uint64_t v177 = *v175;
                  sub_24D3F9C18(*v175, v176);
                  *(void *)unint64_t v174 = v177;
                  *(void *)(v174 + 8) = v176;
                }
                unint64_t v178 = (v174 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v179 = ((unint64_t)v175 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v180 = *(void *)v179;
                *(unsigned char *)(v178 + 8) = *(unsigned char *)(v179 + 8);
                *(void *)unint64_t v178 = v180;
                *(unsigned char *)(v178 + 9) = *(unsigned char *)(v179 + 9);
                unint64_t v181 = (v178 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v182 = (v179 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                int v183 = *(_DWORD *)v182;
                *(unsigned char *)(v181 + 4) = *(unsigned char *)(v182 + 4);
                *(_DWORD *)unint64_t v181 = v183;
                unint64_t v184 = (void *)((v178 + 25) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v185 = (void *)((v179 + 25) & 0xFFFFFFFFFFFFFFF8);
                void *v184 = *v185;
                v184[1] = v185[1];
                unint64_t v186 = v543 + v530;
                unint64_t v187 = v144 + v530;
                unint64_t v188 = *(void *)(v144 + v530 + 16);
                if (v188 >= 0xFFFFFFFF) {
                  LODWORD(v188) = -1;
                }
                int v189 = v188 - 1;
                swift_bridgeObjectRetain();
                if (v189 < 0)
                {
                  *(void *)unint64_t v186 = *(void *)v187;
                  *(unsigned char *)(v186 + 8) = *(unsigned char *)(v187 + 8);
                  *(unsigned char *)(v186 + 9) = *(unsigned char *)(v187 + 9);
                  long long v202 = *(void **)(v187 + 16);
                  id v203 = v202;
                  *(void *)(v186 + 16) = v202;
                  long long v204 = *(void **)(v187 + 24);
                  id v205 = v204;
                  *(void *)(v186 + 24) = v204;
                  *(unsigned char *)(v186 + 32) = *(unsigned char *)(v187 + 32);
                  *(unsigned char *)(v186 + 33) = *(unsigned char *)(v187 + 33);
                  *(unsigned char *)(v186 + 34) = *(unsigned char *)(v187 + 34);
                  *(void *)(v186 + 40) = *(void *)(v187 + 40);
                  *(void *)(v186 + 48) = *(void *)(v187 + 48);
                  *(void *)(v186 + 56) = *(void *)(v187 + 56);
                  *(void *)(v186 + 64) = *(void *)(v187 + 64);
                  *(unsigned char *)(v186 + 72) = *(unsigned char *)(v187 + 72);
                  *(void *)(v186 + 80) = *(void *)(v187 + 80);
                  *(void *)(v186 + 88) = *(void *)(v187 + 88);
                  v544 = *(void **)(v187 + 96);
                  *(void *)(v186 + 96) = v544;
                  *(unsigned char *)(v186 + 104) = *(unsigned char *)(v187 + 104);
                  *(unsigned char *)(v186 + 105) = *(unsigned char *)(v187 + 105);
                  *(void *)(v186 + 112) = *(void *)(v187 + 112);
                  *(void *)(v186 + 120) = *(void *)(v187 + 120);
                  *(void *)(v186 + 128) = *(void *)(v187 + 128);
                  *(void *)(v186 + 136) = *(void *)(v187 + 136);
                  *(void *)(v186 + 144) = *(void *)(v187 + 144);
                  *(void *)(v186 + 152) = *(void *)(v187 + 152);
                  *(void *)(v186 + 160) = *(void *)(v187 + 160);
                  *(void *)(v186 + 168) = *(void *)(v187 + 168);
                  *(unsigned char *)(v186 + 176) = *(unsigned char *)(v187 + 176);
                  *(void *)(v186 + 184) = *(void *)(v187 + 184);
                  uint64_t v206 = *(void *)(v187 + 192);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v207 = v544;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v206)
                  {
                    *(void *)(v186 + 192) = v206;
                    *(void *)(v186 + 200) = *(void *)(v187 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v186 + 192) = *(_OWORD *)(v187 + 192);
                  }
                  uint64_t v2 = (char *)v540;
                  uint64_t v36 = v516;
                  *(void *)(v186 + 208) = *(void *)(v187 + 208);
                  *(void *)(v186 + 216) = *(void *)(v187 + 216);
                  *(void *)(v186 + 224) = *(void *)(v187 + 224);
                  *(void *)(v186 + 232) = *(void *)(v187 + 232);
                  *(void *)(v186 + 240) = *(void *)(v187 + 240);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v190 = *(_OWORD *)v187;
                  long long v191 = *(_OWORD *)(v187 + 16);
                  long long v192 = *(_OWORD *)(v187 + 48);
                  *(_OWORD *)(v186 + 32) = *(_OWORD *)(v187 + 32);
                  *(_OWORD *)(v186 + 48) = v192;
                  *(_OWORD *)unint64_t v186 = v190;
                  *(_OWORD *)(v186 + 16) = v191;
                  long long v193 = *(_OWORD *)(v187 + 64);
                  long long v194 = *(_OWORD *)(v187 + 80);
                  long long v195 = *(_OWORD *)(v187 + 112);
                  *(_OWORD *)(v186 + 96) = *(_OWORD *)(v187 + 96);
                  *(_OWORD *)(v186 + 112) = v195;
                  *(_OWORD *)(v186 + 64) = v193;
                  *(_OWORD *)(v186 + 80) = v194;
                  long long v196 = *(_OWORD *)(v187 + 128);
                  long long v197 = *(_OWORD *)(v187 + 144);
                  long long v198 = *(_OWORD *)(v187 + 176);
                  *(_OWORD *)(v186 + 160) = *(_OWORD *)(v187 + 160);
                  *(_OWORD *)(v186 + 176) = v198;
                  *(_OWORD *)(v186 + 128) = v196;
                  *(_OWORD *)(v186 + 144) = v197;
                  long long v199 = *(_OWORD *)(v187 + 192);
                  long long v200 = *(_OWORD *)(v187 + 208);
                  long long v201 = *(_OWORD *)(v187 + 224);
                  *(void *)(v186 + 240) = *(void *)(v187 + 240);
                  *(_OWORD *)(v186 + 208) = v200;
                  *(_OWORD *)(v186 + 224) = v201;
                  *(_OWORD *)(v186 + 192) = v199;
                  uint64_t v36 = v516;
                }
                size_t v253 = (_OWORD *)((v186 + 255) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v254 = (long long *)((v187 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v255 = *v254;
                *(_OWORD *)((char *)v253 + 9) = *(long long *)((char *)v254 + 9);
                *size_t v253 = v255;
                unint64_t v256 = (v186 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v257 = (v187 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v258 = *(_OWORD *)v257;
                *(unsigned char *)(v256 + 16) = *(unsigned char *)(v257 + 16);
                *(_OWORD *)unint64_t v256 = v258;
                unint64_t v259 = (void *)((v186 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v260 = (v187 + 311) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v261 = *(void *)v260;
                v260 += 15;
                *unint64_t v259 = v261;
                unint64_t v262 = (void *)(((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v263 = *(void *)(v260 & 0xFFFFFFFFFFFFFFF8);
                unint64_t v264 = *(void *)((v260 & 0xFFFFFFFFFFFFFFF8) + 8);
                sub_24D5203A8(v263, v264);
                *unint64_t v262 = v263;
                v262[1] = v264;
                v2[v508] = a2[v508];
                unint64_t v265 = (unint64_t)&v2[v508] & 0xFFFFFFFFFFFFFFF8;
                unint64_t v266 = (unint64_t)&a2[v508] & 0xFFFFFFFFFFFFFFF8;
                *(void *)(v265 + 8) = *(void *)(v266 + 8);
                *(void *)(v265 + 16) = *(void *)(v266 + 16);
                char v164 = 2;
                goto LABEL_180;
              case 3u:
                *(void *)uint64_t v2 = *(void *)a2;
                *((void *)v2 + 1) = *((void *)a2 + 1);
                char v164 = 3;
                goto LABEL_180;
              default:
                unint64_t v92 = *(void (**)(void *, void *, uint64_t))(v18 + 16);
                v92(v2, a2, AssociatedTypeWitness);
                v92((void *)((unint64_t)&v2[v512] & v509), (void *)((unint64_t)&a2[v512] & v509), AssociatedTypeWitness);
                unint64_t v93 = (((unint64_t)&v2[v512] & v509) + v522 + v26) & v511;
                unint64_t v94 = (((unint64_t)&a2[v512] & v509) + v522 + v26) & v511;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v538 + 16))(v93, v94, v488);
                uint64_t v95 = (void *)((v487 + v93) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v96 = (void *)((v487 + v94) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v95 = *v96;
                unint64_t v97 = ((unint64_t)v95 + v485) & v484;
                unint64_t v98 = ((unint64_t)v96 + v485) & v484;
                uint64_t v99 = *(void (**)(unint64_t, unint64_t, uint64_t))(v532 + 16);
                swift_bridgeObjectRetain();
                v99(v97, v98, v486);
                unint64_t v100 = (void *)((v482 + v98) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v101 = (void *)((v482 + v97) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v101 = *v100;
                unint64_t v102 = (void *)(((unint64_t)v101 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v103 = (void *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v102 = *v103;
                v102[1] = v103[1];
                uint64_t v104 = (void *)(v489 + v93);
                *uint64_t v104 = *(void *)(v489 + v94);
                v104[1] = *(void *)(v489 + v94 + 8);
                unint64_t v105 = (v542 + v489 + v93) & v40;
                uint64_t v491 = v40;
                unint64_t v106 = (v542 + v489 + v94) & v40;
                *(unsigned char *)unint64_t v105 = *(unsigned char *)v106;
                uint64_t v107 = v105 | 4;
                int v108 = *(_DWORD *)(v106 | 4);
                *(unsigned char *)(v107 + 4) = *(unsigned char *)((v106 | 4) + 4);
                *(_DWORD *)uint64_t v107 = v108;
                *(_WORD *)(v105 + 10) = *(_WORD *)(v106 + 10);
                unint64_t v519 = v105;
                unint64_t v109 = (v533 + v105) & v535;
                unint64_t v110 = (v533 + v106) & v535;
                uint64_t v111 = *(void (**)(unint64_t, unint64_t, uint64_t))(v527 + 16);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v111(v109, v110, v541);
                unint64_t v112 = (v531 + v109) & v535;
                unint64_t v113 = (v531 + v110) & v535;
                v111(v112, v113, v541);
                uint64_t v114 = (unsigned char *)(v112 + v493);
                *uint64_t v114 = *(unsigned char *)(v113 + v493);
                v114[1] = *(unsigned char *)(v113 + v493 + 1);
                v114[2] = *(unsigned char *)(v113 + v493 + 2);
                v114[3] = *(unsigned char *)(v113 + v493 + 3);
                v114[4] = *(unsigned char *)(v113 + v493 + 4);
                unint64_t v115 = (v112 + v493 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v116 = (v113 + v493 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v115 = *(void *)v116;
                *(void *)(v115 + 8) = *(void *)(v116 + 8);
                *(unsigned char *)(v115 + 16) = *(unsigned char *)(v116 + 16);
                *(unsigned char *)(v115 + 17) = *(unsigned char *)(v116 + 17);
                *(unsigned char *)(v115 + 18) = *(unsigned char *)(v116 + 18);
                *(unsigned char *)(v115 + 19) = *(unsigned char *)(v116 + 19);
                unint64_t v117 = (v115 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v118 = (v116 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v117 = *(void *)v118;
                *(unsigned char *)(v117 + 8) = *(unsigned char *)(v118 + 8);
                *(unsigned char *)(v117 + 9) = *(unsigned char *)(v118 + 9);
                *(unsigned char *)(v117 + 10) = *(unsigned char *)(v118 + 10);
                *(unsigned char *)(v117 + 11) = *(unsigned char *)(v118 + 11);
                *(unsigned char *)(v117 + 12) = *(unsigned char *)(v118 + 12);
                unint64_t v119 = (void *)((v116 + 47) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v120 = (void *)((v115 + 47) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v120 = *v119;
                unint64_t v121 = ((unint64_t)v120 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v122 = ((unint64_t)v119 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v121 = *(void *)v122;
                *(unsigned char *)(v121 + 8) = *(unsigned char *)(v122 + 8);
                *(unsigned char *)(v121 + 9) = *(unsigned char *)(v122 + 9);
                unint64_t v123 = (void *)((v528 + v121) & v535);
                uint64_t v124 = (const void *)((v528 + v122) & v535);
                uint64_t v125 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v527 + 48);
                swift_bridgeObjectRetain();
                v537 = v111;
                if (v125(v124, 1, v541))
                {
                  memcpy(v123, v124, __n);
                }
                else
                {
                  v111((unint64_t)v123, (unint64_t)v124, v541);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v123, 0, 1, v541);
                }
                long long v208 = (void *)(((unint64_t)v123 + v529) & 0xFFFFFFFFFFFFFFF8);
                long long v209 = (void *)(((unint64_t)v124 + v529) & 0xFFFFFFFFFFFFFFF8);
                void *v208 = *v209;
                unint64_t v210 = ((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v211 = ((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v212 = *(void *)v211;
                *(unsigned char *)(v210 + 8) = *(unsigned char *)(v211 + 8);
                *(void *)unint64_t v210 = v212;
                uint64_t v213 = (void *)(((unint64_t)v208 + 31) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v214 = (void *)(((unint64_t)v209 + 31) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v213 = *v214;
                unint64_t v215 = ((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8;
                id v216 = (uint64_t *)(((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v217 = v216[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if ((v217 & 0x3000000000000000) != 0)
                {
                  *(_OWORD *)unint64_t v215 = *(_OWORD *)v216;
                }
                else
                {
                  uint64_t v218 = *v216;
                  sub_24D3F9C18(*v216, v217);
                  *(void *)unint64_t v215 = v218;
                  *(void *)(v215 + 8) = v217;
                }
                unint64_t v219 = (v215 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v220 = ((unint64_t)v216 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v221 = *(void *)v220;
                *(unsigned char *)(v219 + 8) = *(unsigned char *)(v220 + 8);
                *(void *)unint64_t v219 = v221;
                *(unsigned char *)(v219 + 9) = *(unsigned char *)(v220 + 9);
                unint64_t v222 = (v219 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v223 = (v220 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                int v224 = *(_DWORD *)v223;
                *(unsigned char *)(v222 + 4) = *(unsigned char *)(v223 + 4);
                *(_DWORD *)unint64_t v222 = v224;
                long long v225 = (void *)((v219 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v226 = (void *)((v220 + 25) & 0xFFFFFFFFFFFFFFF8);
                *long long v225 = *v226;
                v225[1] = v226[1];
                unint64_t v227 = v530 + v519;
                unint64_t v228 = v530 + v106;
                unint64_t v229 = *(void *)(v530 + v106 + 16);
                if (v229 >= 0xFFFFFFFF) {
                  LODWORD(v229) = -1;
                }
                int v230 = v229 - 1;
                swift_bridgeObjectRetain();
                uint64_t v524 = v125;
                if (v230 < 0)
                {
                  *(void *)unint64_t v227 = *(void *)v228;
                  *(unsigned char *)(v227 + 8) = *(unsigned char *)(v228 + 8);
                  *(unsigned char *)(v227 + 9) = *(unsigned char *)(v228 + 9);
                  long long v243 = *(void **)(v228 + 16);
                  id v244 = v243;
                  *(void *)(v227 + 16) = v243;
                  uint64_t v245 = *(void **)(v228 + 24);
                  id v246 = v245;
                  *(void *)(v227 + 24) = v245;
                  *(unsigned char *)(v227 + 32) = *(unsigned char *)(v228 + 32);
                  *(unsigned char *)(v227 + 33) = *(unsigned char *)(v228 + 33);
                  *(unsigned char *)(v227 + 34) = *(unsigned char *)(v228 + 34);
                  *(void *)(v227 + 40) = *(void *)(v228 + 40);
                  *(void *)(v227 + 48) = *(void *)(v228 + 48);
                  *(void *)(v227 + 56) = *(void *)(v228 + 56);
                  *(void *)(v227 + 64) = *(void *)(v228 + 64);
                  *(unsigned char *)(v227 + 72) = *(unsigned char *)(v228 + 72);
                  *(void *)(v227 + 80) = *(void *)(v228 + 80);
                  *(void *)(v227 + 88) = *(void *)(v228 + 88);
                  uint64_t v520 = *(void **)(v228 + 96);
                  *(void *)(v227 + 96) = v520;
                  *(unsigned char *)(v227 + 104) = *(unsigned char *)(v228 + 104);
                  *(unsigned char *)(v227 + 105) = *(unsigned char *)(v228 + 105);
                  *(void *)(v227 + 112) = *(void *)(v228 + 112);
                  *(void *)(v227 + 120) = *(void *)(v228 + 120);
                  *(void *)(v227 + 128) = *(void *)(v228 + 128);
                  *(void *)(v227 + 136) = *(void *)(v228 + 136);
                  *(void *)(v227 + 144) = *(void *)(v228 + 144);
                  *(void *)(v227 + 152) = *(void *)(v228 + 152);
                  *(void *)(v227 + 160) = *(void *)(v228 + 160);
                  *(void *)(v227 + 168) = *(void *)(v228 + 168);
                  *(unsigned char *)(v227 + 176) = *(unsigned char *)(v228 + 176);
                  *(void *)(v227 + 184) = *(void *)(v228 + 184);
                  uint64_t v247 = *(void *)(v228 + 192);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v248 = v520;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v247)
                  {
                    *(void *)(v227 + 192) = v247;
                    *(void *)(v227 + 200) = *(void *)(v228 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v227 + 192) = *(_OWORD *)(v228 + 192);
                  }
                  uint64_t v2 = (char *)v540;
                  *(void *)(v227 + 208) = *(void *)(v228 + 208);
                  *(void *)(v227 + 216) = *(void *)(v228 + 216);
                  *(void *)(v227 + 224) = *(void *)(v228 + 224);
                  *(void *)(v227 + 232) = *(void *)(v228 + 232);
                  *(void *)(v227 + 240) = *(void *)(v228 + 240);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v231 = *(_OWORD *)v228;
                  long long v232 = *(_OWORD *)(v228 + 16);
                  long long v233 = *(_OWORD *)(v228 + 48);
                  *(_OWORD *)(v227 + 32) = *(_OWORD *)(v228 + 32);
                  *(_OWORD *)(v227 + 48) = v233;
                  *(_OWORD *)unint64_t v227 = v231;
                  *(_OWORD *)(v227 + 16) = v232;
                  long long v234 = *(_OWORD *)(v228 + 64);
                  long long v235 = *(_OWORD *)(v228 + 80);
                  long long v236 = *(_OWORD *)(v228 + 112);
                  *(_OWORD *)(v227 + 96) = *(_OWORD *)(v228 + 96);
                  *(_OWORD *)(v227 + 112) = v236;
                  *(_OWORD *)(v227 + 64) = v234;
                  *(_OWORD *)(v227 + 80) = v235;
                  long long v237 = *(_OWORD *)(v228 + 128);
                  long long v238 = *(_OWORD *)(v228 + 144);
                  long long v239 = *(_OWORD *)(v228 + 176);
                  *(_OWORD *)(v227 + 160) = *(_OWORD *)(v228 + 160);
                  *(_OWORD *)(v227 + 176) = v239;
                  *(_OWORD *)(v227 + 128) = v237;
                  *(_OWORD *)(v227 + 144) = v238;
                  long long v240 = *(_OWORD *)(v228 + 192);
                  long long v241 = *(_OWORD *)(v228 + 208);
                  long long v242 = *(_OWORD *)(v228 + 224);
                  *(void *)(v227 + 240) = *(void *)(v228 + 240);
                  *(_OWORD *)(v227 + 208) = v241;
                  *(_OWORD *)(v227 + 224) = v242;
                  *(_OWORD *)(v227 + 192) = v240;
                }
                uint64_t v267 = (_OWORD *)((v227 + 255) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v268 = (long long *)((v228 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v269 = *v268;
                *(_OWORD *)((char *)v267 + 9) = *(long long *)((char *)v268 + 9);
                _OWORD *v267 = v269;
                unint64_t v270 = (v227 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v271 = (v228 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v272 = *(_OWORD *)v271;
                *(unsigned char *)(v270 + 16) = *(unsigned char *)(v271 + 16);
                *(_OWORD *)unint64_t v270 = v272;
                uint64_t v273 = (void *)((v227 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v274 = (v228 + 311) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v275 = *(void *)v274;
                v274 += 15;
                *uint64_t v273 = v275;
                unint64_t v276 = (void *)(((unint64_t)v273 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v277 = *(void *)(v274 & 0xFFFFFFFFFFFFFFF8);
                unint64_t v278 = *(void *)((v274 & 0xFFFFFFFFFFFFFFF8) + 8);
                sub_24D5203A8(v277, v278);
                *unint64_t v276 = v277;
                v276[1] = v278;
                size_t v279 = (unint64_t)&a2[v480] & v479;
                unint64_t v280 = *(void (**)(unint64_t, size_t, uint64_t))(v500 + 16);
                v280((unint64_t)&v2[v480] & v479, v279, v501);
                unint64_t v526 = (unint64_t)&v2[v480] & v479;
                size_t v521 = v279;
                size_t v281 = (v496 + v279) & v494;
                v280((v496 + v526) & v494, v281, v501);
                unint64_t v282 = (v497 + ((v496 + v526) & v494)) & v495;
                uint64_t v283 = (v497 + v281) & v495;
                (*(void (**)(unint64_t, uint64_t, uint64_t))(v502 + 16))(v282, v283, v503);
                uint64_t v284 = (void *)((v498 + v282) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v285 = (void *)((v498 + v283) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v284 = *v285;
                unint64_t v286 = ((unint64_t)v284 + v499) & v41;
                unint64_t v287 = ((unint64_t)v285 + v499) & v41;
                unint64_t v288 = *(void (**)(unint64_t, unint64_t, uint64_t))(v505 + 16);
                swift_bridgeObjectRetain();
                v288(v286, v287, v507);
                uint64_t v289 = (void *)((v504 + v286) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v290 = (void *)((v504 + v287) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v289 = *v290;
                unint64_t v291 = (void *)(((unint64_t)v289 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v292 = (void *)(((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v291 = *v292;
                v291[1] = v292[1];
                uint64_t v293 = (void *)(v282 + v506);
                *uint64_t v293 = *(void *)(v283 + v506);
                v293[1] = *(void *)(v283 + v506 + 8);
                unint64_t v294 = (v542 + v282 + v506) & v491;
                unint64_t v295 = (v542 + v283 + v506) & v491;
                *(unsigned char *)unint64_t v294 = *(unsigned char *)v295;
                uint64_t v296 = v294 | 4;
                int v297 = *(_DWORD *)(v295 | 4);
                *(unsigned char *)(v296 + 4) = *(unsigned char *)((v295 | 4) + 4);
                *(_DWORD *)uint64_t v296 = v297;
                *(_WORD *)(v294 + 10) = *(_WORD *)(v295 + 0xA);
                unint64_t v298 = (v533 + v294) & v535;
                unint64_t v299 = (v533 + v295) & v535;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v537(v298, v299, v541);
                unint64_t v300 = (v531 + v298) & v535;
                unint64_t v301 = (v531 + v299) & v535;
                v537(v300, v301, v541);
                uint64_t v302 = (unsigned char *)(v300 + v493);
                *uint64_t v302 = *(unsigned char *)(v301 + v493);
                v302[1] = *(unsigned char *)(v301 + v493 + 1);
                v302[2] = *(unsigned char *)(v301 + v493 + 2);
                v302[3] = *(unsigned char *)(v301 + v493 + 3);
                v302[4] = *(unsigned char *)(v301 + v493 + 4);
                unint64_t v303 = (v300 + v493 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v304 = (v301 + v493 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v303 = *(void *)v304;
                *(void *)(v303 + 8) = *(void *)(v304 + 8);
                *(unsigned char *)(v303 + 16) = *(unsigned char *)(v304 + 16);
                *(unsigned char *)(v303 + 17) = *(unsigned char *)(v304 + 17);
                *(unsigned char *)(v303 + 18) = *(unsigned char *)(v304 + 18);
                *(unsigned char *)(v303 + 19) = *(unsigned char *)(v304 + 19);
                unint64_t v305 = (v303 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v306 = (v304 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v305 = *(void *)v306;
                *(unsigned char *)(v305 + 8) = *(unsigned char *)(v306 + 8);
                *(unsigned char *)(v305 + 9) = *(unsigned char *)(v306 + 9);
                *(unsigned char *)(v305 + 10) = *(unsigned char *)(v306 + 10);
                *(unsigned char *)(v305 + 11) = *(unsigned char *)(v306 + 11);
                *(unsigned char *)(v305 + 12) = *(unsigned char *)(v306 + 12);
                int v307 = (void *)((v303 + 47) & 0xFFFFFFFFFFFFFFF8);
                long long v308 = (void *)((v304 + 47) & 0xFFFFFFFFFFFFFFF8);
                void *v307 = *v308;
                unint64_t v309 = ((unint64_t)v307 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v310 = ((unint64_t)v308 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v309 = *(void *)v310;
                *(unsigned char *)(v309 + 8) = *(unsigned char *)(v310 + 8);
                *(unsigned char *)(v309 + 9) = *(unsigned char *)(v310 + 9);
                long long v311 = (void *)((v528 + v309) & v535);
                long long v312 = (const void *)((v528 + v310) & v535);
                swift_bridgeObjectRetain();
                if (v524(v312, 1, v541))
                {
                  memcpy(v311, v312, __n);
                }
                else
                {
                  v537((unint64_t)v311, (unint64_t)v312, v541);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v527 + 56))(v311, 0, 1, v541);
                }
                long long v313 = (void *)(((unint64_t)v311 + v529) & 0xFFFFFFFFFFFFFFF8);
                long long v314 = (void *)(((unint64_t)v312 + v529) & 0xFFFFFFFFFFFFFFF8);
                *long long v313 = *v314;
                unint64_t v315 = ((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v316 = ((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v317 = *(void *)v316;
                *(unsigned char *)(v315 + 8) = *(unsigned char *)(v316 + 8);
                *(void *)unint64_t v315 = v317;
                long long v318 = (void *)(((unint64_t)v313 + 31) & 0xFFFFFFFFFFFFFFF8);
                long long v319 = (void *)(((unint64_t)v314 + 31) & 0xFFFFFFFFFFFFFFF8);
                *long long v318 = *v319;
                unint64_t v320 = ((unint64_t)v318 + 15) & 0xFFFFFFFFFFFFFFF8;
                size_t v321 = (uint64_t *)(((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v322 = v321[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if ((v322 & 0x3000000000000000) != 0)
                {
                  *(_OWORD *)unint64_t v320 = *(_OWORD *)v321;
                }
                else
                {
                  uint64_t v323 = *v321;
                  sub_24D3F9C18(*v321, v322);
                  *(void *)unint64_t v320 = v323;
                  *(void *)(v320 + 8) = v322;
                }
                unint64_t v324 = (v320 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v325 = ((unint64_t)v321 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v326 = *(void *)v325;
                *(unsigned char *)(v324 + 8) = *(unsigned char *)(v325 + 8);
                *(void *)unint64_t v324 = v326;
                *(unsigned char *)(v324 + 9) = *(unsigned char *)(v325 + 9);
                unint64_t v327 = (v324 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v328 = (v325 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                int v329 = *(_DWORD *)v328;
                *(unsigned char *)(v327 + 4) = *(unsigned char *)(v328 + 4);
                *(_DWORD *)unint64_t v327 = v329;
                long long v330 = (void *)((v324 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v331 = (void *)((v325 + 25) & 0xFFFFFFFFFFFFFFF8);
                *long long v330 = *v331;
                v330[1] = v331[1];
                unint64_t v332 = v294 + v530;
                unint64_t v333 = v295 + v530;
                unint64_t v334 = *(void *)(v295 + v530 + 16);
                if (v334 >= 0xFFFFFFFF) {
                  LODWORD(v334) = -1;
                }
                int v335 = v334 - 1;
                swift_bridgeObjectRetain();
                if (v335 < 0)
                {
                  *(void *)unint64_t v332 = *(void *)v333;
                  *(unsigned char *)(v332 + 8) = *(unsigned char *)(v333 + 8);
                  *(unsigned char *)(v332 + 9) = *(unsigned char *)(v333 + 9);
                  unint64_t v348 = *(void **)(v333 + 16);
                  id v349 = v348;
                  *(void *)(v332 + 16) = v348;
                  uint64_t v350 = *(void **)(v333 + 24);
                  id v351 = v350;
                  *(void *)(v332 + 24) = v350;
                  *(unsigned char *)(v332 + 32) = *(unsigned char *)(v333 + 32);
                  *(unsigned char *)(v332 + 33) = *(unsigned char *)(v333 + 33);
                  *(unsigned char *)(v332 + 34) = *(unsigned char *)(v333 + 34);
                  *(void *)(v332 + 40) = *(void *)(v333 + 40);
                  *(void *)(v332 + 48) = *(void *)(v333 + 48);
                  *(void *)(v332 + 56) = *(void *)(v333 + 56);
                  *(void *)(v332 + 64) = *(void *)(v333 + 64);
                  *(unsigned char *)(v332 + 72) = *(unsigned char *)(v333 + 72);
                  *(void *)(v332 + 80) = *(void *)(v333 + 80);
                  *(void *)(v332 + 88) = *(void *)(v333 + 88);
                  v545 = *(void **)(v333 + 96);
                  *(void *)(v332 + 96) = v545;
                  *(unsigned char *)(v332 + 104) = *(unsigned char *)(v333 + 104);
                  *(unsigned char *)(v332 + 105) = *(unsigned char *)(v333 + 105);
                  *(void *)(v332 + 112) = *(void *)(v333 + 112);
                  *(void *)(v332 + 120) = *(void *)(v333 + 120);
                  *(void *)(v332 + 128) = *(void *)(v333 + 128);
                  *(void *)(v332 + 136) = *(void *)(v333 + 136);
                  *(void *)(v332 + 144) = *(void *)(v333 + 144);
                  *(void *)(v332 + 152) = *(void *)(v333 + 152);
                  *(void *)(v332 + 160) = *(void *)(v333 + 160);
                  *(void *)(v332 + 168) = *(void *)(v333 + 168);
                  *(unsigned char *)(v332 + 176) = *(unsigned char *)(v333 + 176);
                  *(void *)(v332 + 184) = *(void *)(v333 + 184);
                  uint64_t v352 = *(void *)(v333 + 192);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  id v353 = v545;
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  if (v352)
                  {
                    *(void *)(v332 + 192) = v352;
                    *(void *)(v332 + 200) = *(void *)(v333 + 200);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                  else
                  {
                    *(_OWORD *)(v332 + 192) = *(_OWORD *)(v333 + 192);
                  }
                  uint64_t v2 = (char *)v540;
                  *(void *)(v332 + 208) = *(void *)(v333 + 208);
                  *(void *)(v332 + 216) = *(void *)(v333 + 216);
                  *(void *)(v332 + 224) = *(void *)(v333 + 224);
                  *(void *)(v332 + 232) = *(void *)(v333 + 232);
                  *(void *)(v332 + 240) = *(void *)(v333 + 240);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                }
                else
                {
                  long long v336 = *(_OWORD *)v333;
                  long long v337 = *(_OWORD *)(v333 + 16);
                  long long v338 = *(_OWORD *)(v333 + 48);
                  *(_OWORD *)(v332 + 32) = *(_OWORD *)(v333 + 32);
                  *(_OWORD *)(v332 + 48) = v338;
                  *(_OWORD *)unint64_t v332 = v336;
                  *(_OWORD *)(v332 + 16) = v337;
                  long long v339 = *(_OWORD *)(v333 + 64);
                  long long v340 = *(_OWORD *)(v333 + 80);
                  long long v341 = *(_OWORD *)(v333 + 112);
                  *(_OWORD *)(v332 + 96) = *(_OWORD *)(v333 + 96);
                  *(_OWORD *)(v332 + 112) = v341;
                  *(_OWORD *)(v332 + 64) = v339;
                  *(_OWORD *)(v332 + 80) = v340;
                  long long v342 = *(_OWORD *)(v333 + 128);
                  long long v343 = *(_OWORD *)(v333 + 144);
                  long long v344 = *(_OWORD *)(v333 + 176);
                  *(_OWORD *)(v332 + 160) = *(_OWORD *)(v333 + 160);
                  *(_OWORD *)(v332 + 176) = v344;
                  *(_OWORD *)(v332 + 128) = v342;
                  *(_OWORD *)(v332 + 144) = v343;
                  long long v345 = *(_OWORD *)(v333 + 192);
                  long long v346 = *(_OWORD *)(v333 + 208);
                  long long v347 = *(_OWORD *)(v333 + 224);
                  *(void *)(v332 + 240) = *(void *)(v333 + 240);
                  *(_OWORD *)(v332 + 208) = v346;
                  *(_OWORD *)(v332 + 224) = v347;
                  *(_OWORD *)(v332 + 192) = v345;
                  uint64_t v2 = (char *)v540;
                }
                unint64_t v354 = (_OWORD *)((v332 + 255) & 0xFFFFFFFFFFFFFFF8);
                v355 = (long long *)((v333 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v356 = *v355;
                *(_OWORD *)((char *)v354 + 9) = *(long long *)((char *)v355 + 9);
                *unint64_t v354 = v356;
                unint64_t v357 = (v332 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v358 = (v333 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v359 = *(_OWORD *)v358;
                *(unsigned char *)(v357 + 16) = *(unsigned char *)(v358 + 16);
                *(_OWORD *)unint64_t v357 = v359;
                unint64_t v360 = (void *)((v332 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v361 = (v333 + 311) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v362 = *(void *)v361;
                v361 += 15;
                void *v360 = v362;
                int v363 = (void *)(((unint64_t)v360 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v364 = *(void *)(v361 & 0xFFFFFFFFFFFFFFF8);
                unint64_t v365 = *(void *)((v361 & 0xFFFFFFFFFFFFFFF8) + 8);
                sub_24D5203A8(v364, v365);
                char v164 = 0;
                void *v363 = v364;
                v363[1] = v365;
                unint64_t v366 = (void *)((v526 + v508) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v367 = (void *)((v521 + v508) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v366 = *v367;
                int v368 = (void *)(((unint64_t)v366 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v369 = (void *)(((unint64_t)v367 + 15) & 0xFFFFFFFFFFFFFFF8);
                *int v368 = *v369;
                v368[1] = v369[1];
                uint64_t v36 = v516;
                goto LABEL_180;
            }
          }
          uint64_t v374 = (v533 + ((v542 + v249) & v490)) & v535;
          if (v513 <= 0x7FFFFFFD)
          {
            unint64_t v371 = *(void *)(((v492 + ((v531 + v374) & v535)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_183:
            if (v371 >= 0xFFFFFFFF) {
              LODWORD(v371) = -1;
            }
            if ((v371 + 1) < 2) {
              goto LABEL_58;
            }
            goto LABEL_69;
          }
          int v67 = (*(uint64_t (**)(uint64_t))(v527 + 48))(v374);
        }
LABEL_56:
        if (v67) {
          goto LABEL_69;
        }
        goto LABEL_57;
      case 2u:
        uint64_t v474 = v36 & 0xFFFFFFF8;
        unint64_t v79 = *(void (**)(_DWORD *, uint64_t))(v500 + 8);
        v79((char *)v540, v501);
        v79((_DWORD *)(((unint64_t)v540 + v496) & v494), v501);
        unint64_t v80 = (v497 + (((unint64_t)v540 + v496) & v494)) & v495;
        (*(void (**)(unint64_t, uint64_t))(v502 + 8))(v80, v503);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v505 + 8))((v499 + ((v498 + v80) & 0xFFFFFFFFFFFFFFF8)) & v41, v507);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v81 = (v542 + v506 + v80) & v40;
        unint64_t v82 = *(void (**)(unint64_t, uint64_t))(v527 + 8);
        v82((v533 + v81) & v535, v541);
        unint64_t v83 = (v531 + ((v533 + v81) & v535)) & v535;
        v82(v83, v541);
        swift_bridgeObjectRelease();
        unint64_t v84 = (v528
             + ((((((v492 + v83) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v535;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v527 + 48))(v84, 1, v541)) {
          v82(v84, v541);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v85 = (uint64_t *)((((((v529 + v84) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v86 = v85[1];
        if ((v86 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v85, v86);
        }
        swift_bridgeObjectRelease();
        unint64_t v87 = v81 + v530;
        int v88 = *(void **)(v87 + 16);
        LODWORD(v89) = -1;
        if ((unint64_t)v88 < 0xFFFFFFFF) {
          uint64_t v89 = *(void *)(v87 + 16);
        }
        uint64_t v36 = v516;
        uint64_t v18 = v536;
        uint64_t v26 = v518;
        uint64_t v38 = v474;
        if ((int)v89 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v87 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v87 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v87 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        goto LABEL_81;
      case 3u:
        goto LABEL_81;
      default:
        uint64_t v42 = *(void (**)(_DWORD *, uint64_t))(v536 + 8);
        v42((char *)v540, AssociatedTypeWitness);
        v42((_DWORD *)(((unint64_t)v540 + v512) & v509), AssociatedTypeWitness);
        unint64_t v43 = ((((unint64_t)v540 + v512) & v509) + v522 + v518) & v511;
        (*(void (**)(unint64_t, uint64_t))(v538 + 8))(v43, v488);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v532 + 8))((v485 + ((v487 + v43) & 0xFFFFFFFFFFFFFFF8)) & v484, v486);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v44 = (v542 + v489 + v43) & v40;
        uint64_t v45 = *(void (**)(unint64_t, uint64_t))(v527 + 8);
        v45((v533 + v44) & v535, v541);
        unint64_t v46 = (v531 + ((v533 + v44) & v535)) & v535;
        v45(v46, v541);
        swift_bridgeObjectRelease();
        unint64_t v47 = (v528
             + ((((((v492 + v46) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v535;
        uint64_t v48 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v527 + 48);
        if (!v48(v47, 1, v541)) {
          v45(v47, v541);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v49 = (uint64_t *)((((((v529 + v47) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v50 = v49[1];
        if ((v50 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v49, v50);
        }
        swift_bridgeObjectRelease();
        unint64_t v51 = v530 + v44;
        uint64_t v52 = *(void **)(v530 + v44 + 16);
        LODWORD(v53) = -1;
        if ((unint64_t)v52 < 0xFFFFFFFF) {
          uint64_t v53 = *(void *)(v51 + 16);
        }
        if ((int)v53 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v51 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v51 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v51 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v54 = *(void (**)(unint64_t, uint64_t))(v500 + 8);
        v54(((unint64_t)v540 + v480) & v479, v501);
        unint64_t v55 = (v496 + (((unint64_t)v540 + v480) & v479)) & v494;
        v54(v55, v501);
        unint64_t v56 = (v497 + v55) & v495;
        (*(void (**)(unint64_t, uint64_t))(v502 + 8))(v56, v503);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v505 + 8))((v499 + ((v498 + v56) & 0xFFFFFFFFFFFFFFF8)) & v41, v507);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v57 = (v542 + v56 + v506) & v40;
        v45((v533 + v57) & v535, v541);
        unint64_t v58 = (v531 + ((v533 + v57) & v535)) & v535;
        v45(v58, v541);
        swift_bridgeObjectRelease();
        unint64_t v59 = (v528
             + ((((((v492 + v58) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v535;
        if (!v48(v59, 1, v541)) {
          v45(v59, v541);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v60 = (uint64_t *)((((((v529 + v59) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v61 = v60[1];
        if ((v61 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v60, v61);
        }
        swift_bridgeObjectRelease();
        unint64_t v62 = v57 + v530;
        unint64_t v63 = *(void **)(v57 + v530 + 16);
        LODWORD(v64) = -1;
        if ((unint64_t)v63 < 0xFFFFFFFF) {
          uint64_t v64 = *(void *)(v62 + 16);
        }
        uint64_t v2 = (char *)v540;
        uint64_t v18 = v536;
        uint64_t v26 = v518;
        if ((int)v64 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v62 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v62 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v62 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v38 = v36 & 0xFFFFFFF8;
        goto LABEL_81;
    }
  }
  return v2;
}

_OWORD *sub_24D9712B8(_OWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v389 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v382 = *(unsigned __int8 *)(v389 + 80);
  uint64_t v393 = *(void *)(v389 + 64);
  uint64_t v363 = v393 + v382;
  uint64_t v353 = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(v353 - 8);
  uint64_t v398 = v2;
  int v3 = *(_DWORD *)(v2 + 80) & 0xF8;
  uint64_t v351 = swift_getAssociatedTypeWitness();
  uint64_t v397 = *(void *)(v351 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v397 + 80);
  uint64_t v404 = v3 | v4 | 7;
  uint64_t v346 = v393 + v404;
  uint64_t v352 = *(void *)(v2 + 64) + 7;
  uint64_t v350 = v4 + 8;
  uint64_t v384 = v4;
  uint64_t v349 = *(void *)(v397 + 64) + 7;
  unint64_t v354 = ((((v349 + ((v4 + 8 + (v352 & 0xFFFFFFFFFFFFFFF8)) & ~v4)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v367 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v367 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v6 | 7;
  uint64_t v403 = (v6 | 7) + 16;
  uint64_t v372 = v6 + 12;
  size_t v8 = *(void *)(v5 + 64);
  uint64_t v371 = v8 + v6;
  size_t v335 = v8 + 12;
  uint64_t v368 = v5;
  uint64_t v369 = v6 + 10;
  unsigned int v386 = *(_DWORD *)(v5 + 84);
  size_t v373 = v8;
  if (v386) {
    size_t v9 = *(void *)(*(void *)(v367 - 8) + 64);
  }
  else {
    size_t v9 = v8 + 1;
  }
  size_t __n = v9;
  size_t v370 = v9 + 7;
  unint64_t v339 = (v6
        + 10
        + ((((((v8 + 12 + ((v8 + v6 + ((v6 + 12) & ~v6)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v6;
  unint64_t v374 = (((((((((v9 + 7 + v339) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v364 = v374 + 16;
  uint64_t v342 = (v403 + v354 + ((v393 + v404 + ((v393 + v382) & ~v382)) & ~v404)) & ~(v6 | 7);
  size_t v390 = ((((v342 + v374 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v356 = v11;
  uint64_t v357 = v10;
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v358 = v14;
  uint64_t v359 = v13;
  int v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v361 = *(void *)(v16 - 8);
  uint64_t v362 = v16;
  uint64_t v17 = *(unsigned __int8 *)(v361 + 80);
  uint64_t v18 = v15 | v17 | 7;
  uint64_t v19 = v12 | v6 | v18;
  size_t v345 = v390 + v19;
  uint64_t v20 = *(void *)(v11 + 64);
  uint64_t v21 = v20 + v12;
  uint64_t v378 = v12;
  uint64_t v355 = v20 + v18;
  uint64_t v22 = *(void *)(v14 + 64) + 7;
  uint64_t v23 = v17 + 8;
  unint64_t v24 = ((((*(void *)(v361 + 64) + 7 + ((v17 + 8 + (v22 & 0xFFFFFFFFFFFFFFF8)) & ~v17)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v25 = (v374 + ((v403 + v24 + ((v20 + v18 + ((v20 + v12) & ~v12)) & ~v18)) & ~v7) + 327) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v27 = ((((v26 + ((v390 + v19) & ~v19) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v28 = v404 | v382 | v6;
  uint64_t v29 = v28 + v393;
  uint64_t v30 = *(unsigned int *)(v389 + 84);
  uint64_t v31 = *(unsigned int *)(v2 + 84);
  unsigned int v337 = *(_DWORD *)(v397 + 84);
  if (v31 <= v337) {
    unsigned int v32 = *(_DWORD *)(v397 + 84);
  }
  else {
    unsigned int v32 = *(_DWORD *)(v2 + 84);
  }
  if (v32 <= 0x7FFFFFFE) {
    unsigned int v33 = 2147483646;
  }
  else {
    unsigned int v33 = v32;
  }
  if (v33 <= v30) {
    unsigned int v34 = *(_DWORD *)(v389 + 84);
  }
  else {
    unsigned int v34 = v33;
  }
  if (v386 <= 0x7FFFFFFE) {
    unsigned int v35 = 2147483646;
  }
  else {
    unsigned int v35 = v386;
  }
  if (v34 <= v35) {
    unsigned int v36 = v35;
  }
  else {
    unsigned int v36 = v34;
  }
  if (v36 <= 0x7FFFFFFF) {
    int v37 = 0x7FFFFFFF;
  }
  else {
    int v37 = v36;
  }
  int v375 = v37;
  if (((v390 + (v29 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 24 > v27) {
    unint64_t v27 = ((v390 + (v29 & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v38 = ((v25 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v38 > v27) {
    unint64_t v27 = v38;
  }
  if (v27 <= 0x10) {
    uint64_t v39 = 16;
  }
  else {
    uint64_t v39 = v27;
  }
  unsigned int v40 = *((unsigned __int8 *)a2 + v39);
  if (v40 >= 4 && (v39 & 0xFFFFFFF8) != 0) {
    unsigned int v40 = *a2 + 4;
  }
  uint64_t v383 = ~v382;
  uint64_t v42 = ~v404;
  uint64_t v43 = ~v384;
  uint64_t v385 = ~v7;
  uint64_t v44 = ~v6;
  uint64_t v45 = ~v19;
  uint64_t v46 = ~v378;
  uint64_t v47 = ~v18;
  uint64_t v48 = ~v17;
  unint64_t v49 = v26 + 16;
  uint64_t v50 = ~v28;
  switch(v40)
  {
    case 1u:
      uint64_t v395 = ~v404;
      uint64_t v405 = v44;
      uint64_t v380 = v39;
      unint64_t v360 = *(void (**)(char *, char *, uint64_t))(v389 + 32);
      ((void (*)(_OWORD *))v360)(a1);
      unint64_t v82 = (char *)(((unint64_t)a1 + v29) & v50);
      unint64_t v83 = (char *)(((unint64_t)a2 + v29) & v50);
      if (v30 == v375)
      {
        int v84 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v389 + 48))(v83, v30, AssociatedTypeWitness);
        uint64_t v52 = a1;
        uint64_t v85 = v367;
        uint64_t v86 = v368;
        uint64_t v87 = AssociatedTypeWitness;
        goto LABEL_57;
      }
      unint64_t v120 = (unint64_t)&v83[v363] & v383;
      unint64_t v121 = (v346 + v120) & v395;
      if (v33 == v375)
      {
        if (v31 != v33)
        {
          int v329 = (unint64_t *)((v352 + v121) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v87 = AssociatedTypeWitness;
          if (v32 <= 0x7FFFFFFE)
          {
            unint64_t v330 = *v329;
            if (v330 >= 0xFFFFFFFF) {
              LODWORD(v330) = -1;
            }
            uint64_t v52 = a1;
            uint64_t v85 = v367;
            uint64_t v86 = v368;
            if ((v330 + 1) >= 2) {
              goto LABEL_58;
            }
            goto LABEL_61;
          }
          int v84 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v397 + 48))(((unint64_t)v329 + v350) & v43, v337, v351);
          uint64_t v52 = a1;
          uint64_t v85 = v367;
          uint64_t v86 = v368;
LABEL_57:
          if (v84)
          {
LABEL_58:
            memcpy(v82, v83, v390);
            uint64_t v39 = v380;
            unint64_t v261 = v339;
            uint64_t v260 = v342;
LABEL_59:
            size_t v262 = __n;
LABEL_65:
            unint64_t v325 = ((((v260
                     + ((((((((((v261 + v262 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                         + 19) & 0xFFFFFFFFFFFFFFF8)
                       + 25) & 0xFFFFFFFFFFFFFFF8)
                     + 327) & 0xFFFFFFFFFFFFFFF8)
                   + 15) & 0xFFFFFFFFFFFFFFF8)
                 + 16;
            unint64_t v326 = (unint64_t)&v82[v325];
            unint64_t v327 = (unint64_t)&v83[v325];
            *(unsigned char *)unint64_t v326 = *(unsigned char *)v327;
            *(_OWORD *)((v326 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v327 & 0xFFFFFFFFFFFFFFF8) + 8);
            char v119 = 1;
            goto LABEL_66;
          }
          unint64_t v120 = (unint64_t)&v83[v363] & v383;
          unint64_t v121 = (v346 + v120) & v395;
LABEL_61:
          unint64_t v396 = v121;
          unint64_t v401 = v83;
          unint64_t v263 = v121;
          v360(v82, v83, v87);
          uint64_t v264 = v43;
          v360((char *)((unint64_t)&v82[v363] & v383), (char *)v120, v87);
          unint64_t v265 = (v346 + ((unint64_t)&v82[v363] & v383)) & v263;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v398 + 32))(v265, v396, v353);
          unint64_t v266 = (void *)((v352 + v265) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v267 = (void *)((v352 + v396) & 0xFFFFFFFFFFFFFFF8);
          void *v266 = *v267;
          unint64_t v268 = ((unint64_t)v266 + v350) & v264;
          unint64_t v269 = ((unint64_t)v267 + v350) & v264;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v397 + 32))(v268, v269, v351);
          unint64_t v270 = (void *)((v349 + v268) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v271 = (void *)((v349 + v269) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v270 = *v271;
          *(_OWORD *)(((unint64_t)v270 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v271 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v265 + v354) = *(_OWORD *)(v396 + v354);
          unint64_t v272 = (v403 + v265 + v354) & v385;
          unint64_t v273 = (v403 + v396 + v354) & v385;
          *(unsigned char *)unint64_t v272 = *(unsigned char *)v273;
          uint64_t v274 = v272 | 4;
          int v275 = *(_DWORD *)(v273 | 4);
          *(unsigned char *)(v274 + 4) = *(unsigned char *)((v273 | 4) + 4);
          *(_DWORD *)uint64_t v274 = v275;
          *(_WORD *)(v272 + 10) = *(_WORD *)(v273 + 0xA);
          unint64_t v276 = *(void (**)(unint64_t, unint64_t, uint64_t))(v86 + 32);
          v276((v372 + v272) & v405, (v372 + v273) & v405, v85);
          unint64_t v277 = (v371 + ((v372 + v272) & v405)) & v405;
          unint64_t v278 = (v371 + ((v372 + v273) & v405)) & v405;
          v276(v277, v278, v85);
          size_t v279 = (unsigned char *)(v277 + v373);
          *size_t v279 = *(unsigned char *)(v278 + v373);
          v279[1] = *(unsigned char *)(v278 + v373 + 1);
          v279[2] = *(unsigned char *)(v278 + v373 + 2);
          v279[3] = *(unsigned char *)(v278 + v373 + 3);
          v279[4] = *(unsigned char *)(v278 + v373 + 4);
          unint64_t v280 = (v277 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v281 = (v278 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v280 = *(_OWORD *)v281;
          *(unsigned char *)(v280 + 16) = *(unsigned char *)(v281 + 16);
          *(unsigned char *)(v280 + 17) = *(unsigned char *)(v281 + 17);
          *(unsigned char *)(v280 + 18) = *(unsigned char *)(v281 + 18);
          *(unsigned char *)(v280 + 19) = *(unsigned char *)(v281 + 19);
          unint64_t v282 = (v280 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v283 = (v281 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v282 = *(void *)v283;
          *(unsigned char *)(v282 + 8) = *(unsigned char *)(v283 + 8);
          *(unsigned char *)(v282 + 9) = *(unsigned char *)(v283 + 9);
          *(unsigned char *)(v282 + 10) = *(unsigned char *)(v283 + 10);
          *(unsigned char *)(v282 + 11) = *(unsigned char *)(v283 + 11);
          *(unsigned char *)(v282 + 12) = *(unsigned char *)(v283 + 12);
          uint64_t v284 = (void *)((v281 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v285 = (void *)((v280 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v285 = *v284;
          unint64_t v286 = ((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v287 = ((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v286 = *(void *)v287;
          *(unsigned char *)(v286 + 8) = *(unsigned char *)(v287 + 8);
          *(unsigned char *)(v286 + 9) = *(unsigned char *)(v287 + 9);
          unint64_t v288 = (void *)((v369 + v286) & v405);
          uint64_t v289 = (const void *)((v369 + v287) & v405);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v86 + 48))(v289, 1, v85))
          {
            memcpy(v288, v289, __n);
          }
          else
          {
            v276((unint64_t)v288, (unint64_t)v289, v85);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v86 + 56))(v288, 0, 1, v85);
          }
          uint64_t v39 = v380;
          size_t v262 = v373;
          unint64_t v261 = v339;
          uint64_t v260 = v342;
          uint64_t v52 = a1;
          uint64_t v290 = (void *)(((unint64_t)v288 + v370) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v291 = (void *)(((unint64_t)v289 + v370) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v290 = *v291;
          unint64_t v292 = ((unint64_t)v290 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v293 = ((unint64_t)v291 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v294 = *(void *)v293;
          *(unsigned char *)(v292 + 8) = *(unsigned char *)(v293 + 8);
          *(void *)unint64_t v292 = v294;
          unint64_t v295 = (void *)(((unint64_t)v290 + 31) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v296 = (void *)(((unint64_t)v291 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v295 = *v296;
          int v297 = (_OWORD *)(((unint64_t)v295 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v298 = (_OWORD *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v297 = *v298;
          unint64_t v299 = ((unint64_t)v297 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v300 = ((unint64_t)v298 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v301 = *(void *)v300;
          *(unsigned char *)(v299 + 8) = *(unsigned char *)(v300 + 8);
          *(void *)unint64_t v299 = v301;
          *(unsigned char *)(v299 + 9) = *(unsigned char *)(v300 + 9);
          unint64_t v302 = (v299 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v303 = (v300 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v294) = *(_DWORD *)v303;
          *(unsigned char *)(v302 + 4) = *(unsigned char *)(v303 + 4);
          *(_DWORD *)unint64_t v302 = v294;
          *(_OWORD *)((v299 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v300 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v304 = v364 + v272;
          long long v305 = *(_OWORD *)(v364 + v273 + 112);
          long long v307 = *(_OWORD *)(v364 + v273 + 64);
          long long v306 = *(_OWORD *)(v364 + v273 + 80);
          *(_OWORD *)(v304 + 96) = *(_OWORD *)(v364 + v273 + 96);
          *(_OWORD *)(v304 + 112) = v305;
          *(_OWORD *)(v304 + 64) = v307;
          *(_OWORD *)(v304 + 80) = v306;
          long long v308 = *(_OWORD *)(v364 + v273 + 176);
          long long v310 = *(_OWORD *)(v364 + v273 + 128);
          long long v309 = *(_OWORD *)(v364 + v273 + 144);
          *(_OWORD *)(v304 + 160) = *(_OWORD *)(v364 + v273 + 160);
          *(_OWORD *)(v304 + 176) = v308;
          *(_OWORD *)(v304 + 128) = v310;
          *(_OWORD *)(v304 + 144) = v309;
          long long v312 = *(_OWORD *)(v364 + v273 + 208);
          long long v311 = *(_OWORD *)(v364 + v273 + 224);
          long long v313 = *(_OWORD *)(v364 + v273 + 192);
          *(void *)(v304 + 240) = *(void *)(v364 + v273 + 240);
          *(_OWORD *)(v304 + 208) = v312;
          *(_OWORD *)(v304 + 224) = v311;
          *(_OWORD *)(v304 + 192) = v313;
          long long v314 = *(_OWORD *)(v364 + v273);
          long long v315 = *(_OWORD *)(v364 + v273 + 16);
          long long v316 = *(_OWORD *)(v364 + v273 + 48);
          *(_OWORD *)(v304 + 32) = *(_OWORD *)(v364 + v273 + 32);
          *(_OWORD *)(v304 + 48) = v316;
          *(_OWORD *)unint64_t v304 = v314;
          *(_OWORD *)(v304 + 16) = v315;
          uint64_t v317 = (_OWORD *)((v364 + v272 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v318 = (long long *)((v364 + v273 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v319 = *v318;
          *(_OWORD *)((char *)v317 + 9) = *(long long *)((char *)v318 + 9);
          *uint64_t v317 = v319;
          unint64_t v320 = (v364 + v272 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v321 = (v364 + v273 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v322 = *(_OWORD *)v321;
          *(unsigned char *)(v320 + 16) = *(unsigned char *)(v321 + 16);
          *(_OWORD *)unint64_t v320 = v322;
          uint64_t v323 = (void *)((v364 + v272 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v324 = (void *)((v364 + v273 + 311) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v323 = *v324;
          *(_OWORD *)(((unint64_t)v323 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v324 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v83 = v401;
          if (v386) {
            goto LABEL_65;
          }
          goto LABEL_59;
        }
        int v84 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v398 + 48))((v346 + v120) & v395, v31, v353);
        uint64_t v52 = a1;
        uint64_t v85 = v367;
        uint64_t v86 = v368;
      }
      else
      {
        unint64_t v258 = v121 + v354;
        uint64_t v85 = v367;
        uint64_t v86 = v368;
        if ((v36 & 0x80000000) != 0)
        {
          uint64_t v52 = a1;
          uint64_t v331 = (v372 + ((v403 + v258) & v385)) & v405;
          uint64_t v87 = AssociatedTypeWitness;
          if (v386 < 0x7FFFFFFE)
          {
            unint64_t v332 = *(void *)(((v335 + ((v371 + v331) & v405)) & 0xFFFFFFFFFFFFFFF8) + 8);
            if (v332 >= 0xFFFFFFFF) {
              LODWORD(v332) = -1;
            }
            if ((v332 + 1) >= 2) {
              goto LABEL_58;
            }
            goto LABEL_61;
          }
          int v84 = (*(uint64_t (**)(uint64_t))(v368 + 48))(v331);
          goto LABEL_57;
        }
        unint64_t v259 = *(void *)(v258 + 8);
        if (v259 >= 0xFFFFFFFF) {
          LODWORD(v259) = -1;
        }
        int v84 = v259 + 1;
        uint64_t v52 = a1;
      }
      uint64_t v87 = AssociatedTypeWitness;
      goto LABEL_57;
    case 2u:
      unint64_t v341 = v49;
      uint64_t v406 = v44;
      uint64_t v381 = v39;
      int v88 = *(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 32);
      unint64_t v392 = v24;
      uint64_t v388 = *(void *)(*(void *)(v16 - 8) + 64) + 7;
      uint64_t v377 = v23;
      uint64_t v348 = v22;
      uint64_t v344 = v48;
      uint64_t v89 = v47;
      uint64_t v90 = v46;
      ((void (*)(_OWORD *))v88)(a1);
      unint64_t v91 = ((unint64_t)a1 + v21) & v90;
      unint64_t v92 = ((unint64_t)a2 + v21) & v90;
      v88(v91, v92, v357);
      unint64_t v93 = (v355 + v91) & v89;
      unint64_t v94 = (v355 + v92) & v89;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v358 + 32))(v93, v94, v359);
      uint64_t v95 = (void *)((v348 + v93) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v96 = (void *)((v348 + v94) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v95 = *v96;
      unint64_t v97 = ((unint64_t)v95 + v377) & v344;
      unint64_t v98 = ((unint64_t)v96 + v377) & v344;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v361 + 32))(v97, v98, v362);
      uint64_t v99 = (void *)((v388 + v97) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v100 = (void *)((v388 + v98) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v99 = *v100;
      *(_OWORD *)(((unint64_t)v99 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v392 + v93) = *(_OWORD *)(v392 + v94);
      uint64_t v101 = (v403 + v392 + v93) & v385;
      uint64_t v102 = (v403 + v392 + v94) & v385;
      *(unsigned char *)uint64_t v101 = *(unsigned char *)v102;
      uint64_t v103 = v101 | 4;
      int v104 = *(_DWORD *)(v102 | 4);
      *(unsigned char *)(v103 + 4) = *(unsigned char *)((v102 | 4) + 4);
      *(_DWORD *)uint64_t v103 = v104;
      *(_WORD *)(v101 + 10) = *(_WORD *)(v102 + 0xA);
      unint64_t v105 = *(void (**)(uint64_t, uint64_t, uint64_t))(v368 + 32);
      v105((v372 + v101) & v406, (v372 + v102) & v406, v367);
      uint64_t v106 = (v371 + ((v372 + v101) & v406)) & v406;
      uint64_t v107 = (v371 + ((v372 + v102) & v406)) & v406;
      v105(v106, v107, v367);
      int v108 = (unsigned char *)(v106 + v373);
      *int v108 = *(unsigned char *)(v107 + v373);
      v108[1] = *(unsigned char *)(v107 + v373 + 1);
      v108[2] = *(unsigned char *)(v107 + v373 + 2);
      v108[3] = *(unsigned char *)(v107 + v373 + 3);
      v108[4] = *(unsigned char *)(v107 + v373 + 4);
      unint64_t v109 = (v106 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v110 = (v107 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v109 = *(_OWORD *)v110;
      *(unsigned char *)(v109 + 16) = *(unsigned char *)(v110 + 16);
      *(unsigned char *)(v109 + 17) = *(unsigned char *)(v110 + 17);
      *(unsigned char *)(v109 + 18) = *(unsigned char *)(v110 + 18);
      *(unsigned char *)(v109 + 19) = *(unsigned char *)(v110 + 19);
      unint64_t v111 = (v109 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v112 = (v110 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v111 = *(void *)v112;
      *(unsigned char *)(v111 + 8) = *(unsigned char *)(v112 + 8);
      *(unsigned char *)(v111 + 9) = *(unsigned char *)(v112 + 9);
      *(unsigned char *)(v111 + 10) = *(unsigned char *)(v112 + 10);
      *(unsigned char *)(v111 + 11) = *(unsigned char *)(v112 + 11);
      *(unsigned char *)(v111 + 12) = *(unsigned char *)(v112 + 12);
      unint64_t v113 = (void *)((v110 + 47) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v114 = (void *)((v109 + 47) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v114 = *v113;
      unint64_t v115 = ((unint64_t)v114 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v116 = ((unint64_t)v113 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v115 = *(void *)v116;
      *(unsigned char *)(v115 + 8) = *(unsigned char *)(v116 + 8);
      *(unsigned char *)(v115 + 9) = *(unsigned char *)(v116 + 9);
      unint64_t v117 = (void *)((v369 + v115) & v44);
      unint64_t v118 = (const void *)((v369 + v116) & v44);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v368 + 48))(v118, 1, v367))
      {
        memcpy(v117, v118, __n);
      }
      else
      {
        v105((uint64_t)v117, (uint64_t)v118, v367);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v368 + 56))(v117, 0, 1, v367);
      }
      unint64_t v122 = (void *)(((unint64_t)v117 + v370) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v123 = (void *)(((unint64_t)v118 + v370) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v122 = *v123;
      unint64_t v124 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v125 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v126 = *(void *)v125;
      *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
      *(void *)unint64_t v124 = v126;
      unint64_t v127 = (void *)(((unint64_t)v123 + 31) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v128 = (void *)(((unint64_t)v122 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v128 = *v127;
      int v129 = (_OWORD *)(((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v130 = (_OWORD *)(((unint64_t)v127 + 15) & 0xFFFFFFFFFFFFFFF8);
      *int v129 = *v130;
      unint64_t v131 = ((unint64_t)v129 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v132 = ((unint64_t)v130 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v133 = *(void *)v132;
      *(unsigned char *)(v131 + 8) = *(unsigned char *)(v132 + 8);
      *(void *)unint64_t v131 = v133;
      *(unsigned char *)(v131 + 9) = *(unsigned char *)(v132 + 9);
      unint64_t v134 = (v131 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v135 = (v132 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v126) = *(_DWORD *)v135;
      *(unsigned char *)(v134 + 4) = *(unsigned char *)(v135 + 4);
      *(_DWORD *)unint64_t v134 = v126;
      *(_OWORD *)((v131 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v132 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v136 = v101 + v364;
      long long v137 = *(_OWORD *)(v102 + v364 + 112);
      long long v139 = *(_OWORD *)(v102 + v364 + 64);
      long long v138 = *(_OWORD *)(v102 + v364 + 80);
      *(_OWORD *)(v136 + 96) = *(_OWORD *)(v102 + v364 + 96);
      *(_OWORD *)(v136 + 112) = v137;
      *(_OWORD *)(v136 + 64) = v139;
      *(_OWORD *)(v136 + 80) = v138;
      long long v140 = *(_OWORD *)(v102 + v364 + 176);
      long long v142 = *(_OWORD *)(v102 + v364 + 128);
      long long v141 = *(_OWORD *)(v102 + v364 + 144);
      *(_OWORD *)(v136 + 160) = *(_OWORD *)(v102 + v364 + 160);
      *(_OWORD *)(v136 + 176) = v140;
      *(_OWORD *)(v136 + 128) = v142;
      *(_OWORD *)(v136 + 144) = v141;
      long long v144 = *(_OWORD *)(v102 + v364 + 208);
      long long v143 = *(_OWORD *)(v102 + v364 + 224);
      long long v145 = *(_OWORD *)(v102 + v364 + 192);
      *(void *)(v136 + 240) = *(void *)(v102 + v364 + 240);
      *(_OWORD *)(v136 + 208) = v144;
      *(_OWORD *)(v136 + 224) = v143;
      *(_OWORD *)(v136 + 192) = v145;
      long long v146 = *(_OWORD *)(v102 + v364);
      long long v147 = *(_OWORD *)(v102 + v364 + 16);
      long long v148 = *(_OWORD *)(v102 + v364 + 48);
      *(_OWORD *)(v136 + 32) = *(_OWORD *)(v102 + v364 + 32);
      *(_OWORD *)(v136 + 48) = v148;
      *(_OWORD *)unint64_t v136 = v146;
      *(_OWORD *)(v136 + 16) = v147;
      unint64_t v149 = (_OWORD *)((v101 + v364 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v150 = (long long *)((v102 + v364 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v151 = *v150;
      *(_OWORD *)((char *)v149 + 9) = *(long long *)((char *)v150 + 9);
      *unint64_t v149 = v151;
      unint64_t v152 = (v101 + v364 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v153 = (v102 + v364 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v154 = *(_OWORD *)v153;
      *(unsigned char *)(v152 + 16) = *(unsigned char *)(v153 + 16);
      *(_OWORD *)unint64_t v152 = v154;
      unint64_t v155 = (void *)((v101 + v364 + 311) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v156 = (void *)((v102 + v364 + 311) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v155 = *v156;
      *(_OWORD *)(((unint64_t)v155 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v156 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v52 = a1;
      unint64_t v157 = (unint64_t)a1 + v341;
      *(unsigned char *)unint64_t v157 = *((unsigned char *)a2 + v341);
      *(_OWORD *)((v157 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((((unint64_t)a2 + v341) & 0xFFFFFFFFFFFFFFF8)
                                                                 + 8);
      char v119 = 2;
      uint64_t v39 = v381;
      goto LABEL_66;
    case 3u:
      uint64_t v52 = a1;
      *a1 = *(_OWORD *)a2;
      char v119 = 3;
      goto LABEL_66;
    default:
      uint64_t v333 = v45;
      uint64_t v334 = ~v378;
      uint64_t v336 = v47;
      uint64_t v338 = v21;
      uint64_t v343 = v48;
      uint64_t v347 = v22;
      uint64_t v376 = v23;
      uint64_t v387 = *(void *)(*(void *)(v16 - 8) + 64) + 7;
      unint64_t v391 = v24;
      unint64_t v340 = v49;
      uint64_t v379 = v39;
      unint64_t v51 = *(void (**)(unint64_t, unint64_t, uint64_t))(v389 + 32);
      uint64_t v52 = a1;
      ((void (*)(_OWORD *))v51)(a1);
      uint64_t v53 = v43;
      unint64_t v54 = ((unint64_t)a1 + v363) & v383;
      unint64_t v55 = ((unint64_t)a2 + v363) & v383;
      v51(v54, v55, AssociatedTypeWitness);
      unint64_t v56 = (v54 + v393 + v404) & v42;
      unint64_t v57 = (v55 + v393 + v404) & v42;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v398 + 32))(v56, v57, v353);
      unint64_t v58 = (void *)((v352 + v56) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v59 = (void *)((v352 + v57) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v58 = *v59;
      unint64_t v60 = ((unint64_t)v58 + v350) & v53;
      unint64_t v61 = ((unint64_t)v59 + v350) & v53;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v397 + 32))(v60, v61, v351);
      unint64_t v62 = (void *)((v349 + v60) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v63 = (void *)((v349 + v61) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v62 = *v63;
      *(_OWORD *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v63 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v354 + v56) = *(_OWORD *)(v354 + v57);
      unint64_t v64 = (v403 + v354 + v56) & v385;
      unint64_t v65 = (v403 + v354 + v57) & v385;
      *(unsigned char *)unint64_t v64 = *(unsigned char *)v65;
      uint64_t v66 = v64 | 4;
      int v67 = *(_DWORD *)(v65 | 4);
      *(unsigned char *)(v66 + 4) = *(unsigned char *)((v65 | 4) + 4);
      *(_DWORD *)uint64_t v66 = v67;
      *(_WORD *)(v64 + 10) = *(_WORD *)(v65 + 0xA);
      unint64_t v68 = *(void (**)(unint64_t, unint64_t, uint64_t))(v368 + 32);
      v68((v372 + v64) & v44, (v372 + v65) & v44, v367);
      unint64_t v69 = (v371 + ((v372 + v64) & v44)) & v44;
      unint64_t v70 = (v371 + ((v372 + v65) & v44)) & v44;
      v68(v69, v70, v367);
      uint64_t v71 = (unsigned char *)(v69 + v373);
      unsigned char *v71 = *(unsigned char *)(v70 + v373);
      v71[1] = *(unsigned char *)(v70 + v373 + 1);
      v71[2] = *(unsigned char *)(v70 + v373 + 2);
      v71[3] = *(unsigned char *)(v70 + v373 + 3);
      v71[4] = *(unsigned char *)(v70 + v373 + 4);
      unint64_t v72 = (v69 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v73 = (v70 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v72 = *(_OWORD *)v73;
      *(unsigned char *)(v72 + 16) = *(unsigned char *)(v73 + 16);
      *(unsigned char *)(v72 + 17) = *(unsigned char *)(v73 + 17);
      *(unsigned char *)(v72 + 18) = *(unsigned char *)(v73 + 18);
      *(unsigned char *)(v72 + 19) = *(unsigned char *)(v73 + 19);
      unint64_t v74 = (v72 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v75 = (v73 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v74 = *(void *)v75;
      *(unsigned char *)(v74 + 8) = *(unsigned char *)(v75 + 8);
      *(unsigned char *)(v74 + 9) = *(unsigned char *)(v75 + 9);
      *(unsigned char *)(v74 + 10) = *(unsigned char *)(v75 + 10);
      *(unsigned char *)(v74 + 11) = *(unsigned char *)(v75 + 11);
      *(unsigned char *)(v74 + 12) = *(unsigned char *)(v75 + 12);
      unint64_t v76 = (void *)((v73 + 47) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v77 = (void *)((v72 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v77 = *v76;
      unint64_t v78 = ((unint64_t)v77 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v79 = ((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v78 = *(void *)v79;
      *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
      *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
      unint64_t v80 = (void *)((v369 + v78) & v44);
      unint64_t v81 = (const void *)((v369 + v79) & v44);
      uint64_t v394 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v368 + 48);
      if (v394(v81, 1, v367))
      {
        memcpy(v80, v81, __n);
      }
      else
      {
        v68((unint64_t)v80, (unint64_t)v81, v367);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v368 + 56))(v80, 0, 1, v367);
      }
      long long v158 = (void *)(((unint64_t)v80 + v370) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v159 = (void *)(((unint64_t)v81 + v370) & 0xFFFFFFFFFFFFFFF8);
      *long long v158 = *v159;
      unint64_t v160 = ((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v161 = ((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v162 = *(void *)v161;
      *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
      *(void *)unint64_t v160 = v162;
      long long v163 = (void *)(((unint64_t)v158 + 31) & 0xFFFFFFFFFFFFFFF8);
      char v164 = (void *)(((unint64_t)v159 + 31) & 0xFFFFFFFFFFFFFFF8);
      *long long v163 = *v164;
      unint64_t v165 = (_OWORD *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v166 = (_OWORD *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v165 = *v166;
      unint64_t v167 = ((unint64_t)v165 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v168 = ((unint64_t)v166 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v169 = *(void *)v168;
      *(unsigned char *)(v167 + 8) = *(unsigned char *)(v168 + 8);
      *(void *)unint64_t v167 = v169;
      *(unsigned char *)(v167 + 9) = *(unsigned char *)(v168 + 9);
      unint64_t v170 = (v167 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v171 = (v168 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v162) = *(_DWORD *)v171;
      *(unsigned char *)(v170 + 4) = *(unsigned char *)(v171 + 4);
      *(_DWORD *)unint64_t v170 = v162;
      *(_OWORD *)((v167 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v168 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v172 = v364 + v64;
      long long v173 = *(_OWORD *)(v364 + v65 + 112);
      long long v175 = *(_OWORD *)(v364 + v65 + 64);
      long long v174 = *(_OWORD *)(v364 + v65 + 80);
      *(_OWORD *)(v172 + 96) = *(_OWORD *)(v364 + v65 + 96);
      *(_OWORD *)(v172 + 112) = v173;
      *(_OWORD *)(v172 + 64) = v175;
      *(_OWORD *)(v172 + 80) = v174;
      long long v176 = *(_OWORD *)(v364 + v65 + 176);
      long long v178 = *(_OWORD *)(v364 + v65 + 128);
      long long v177 = *(_OWORD *)(v364 + v65 + 144);
      *(_OWORD *)(v172 + 160) = *(_OWORD *)(v364 + v65 + 160);
      *(_OWORD *)(v172 + 176) = v176;
      *(_OWORD *)(v172 + 128) = v178;
      *(_OWORD *)(v172 + 144) = v177;
      long long v180 = *(_OWORD *)(v364 + v65 + 208);
      long long v179 = *(_OWORD *)(v364 + v65 + 224);
      long long v181 = *(_OWORD *)(v364 + v65 + 192);
      *(void *)(v172 + 240) = *(void *)(v364 + v65 + 240);
      *(_OWORD *)(v172 + 208) = v180;
      *(_OWORD *)(v172 + 224) = v179;
      *(_OWORD *)(v172 + 192) = v181;
      long long v182 = *(_OWORD *)(v364 + v65);
      long long v183 = *(_OWORD *)(v364 + v65 + 16);
      long long v184 = *(_OWORD *)(v364 + v65 + 48);
      *(_OWORD *)(v172 + 32) = *(_OWORD *)(v364 + v65 + 32);
      *(_OWORD *)(v172 + 48) = v184;
      *(_OWORD *)unint64_t v172 = v182;
      *(_OWORD *)(v172 + 16) = v183;
      uint64_t v185 = (_OWORD *)((v364 + v64 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v186 = (long long *)((v364 + v65 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v187 = *v186;
      *(_OWORD *)((char *)v185 + 9) = *(long long *)((char *)v186 + 9);
      _OWORD *v185 = v187;
      unint64_t v188 = (v364 + v64 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v189 = (v364 + v65 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v190 = *(_OWORD *)v189;
      *(unsigned char *)(v188 + 16) = *(unsigned char *)(v189 + 16);
      *(_OWORD *)unint64_t v188 = v190;
      long long v191 = (void *)((v364 + v64 + 311) & 0xFFFFFFFFFFFFFFF8);
      long long v192 = (void *)((v364 + v65 + 311) & 0xFFFFFFFFFFFFFFF8);
      *long long v191 = *v192;
      *(_OWORD *)(((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v193 = ((unint64_t)a2 + v345) & v333;
      long long v194 = *(void (**)(unint64_t, unint64_t, uint64_t))(v356 + 32);
      v194(((unint64_t)a1 + v345) & v333, v193, v357);
      unint64_t v400 = ((unint64_t)a1 + v345) & v333;
      unint64_t v195 = (v338 + v400) & v334;
      v194(v195, (v338 + v193) & v334, v357);
      unint64_t v196 = (v355 + v195) & v336;
      unint64_t v197 = (v355 + ((v338 + v193) & v334)) & v336;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v358 + 32))(v196, v197, v359);
      long long v198 = (void *)((v347 + v196) & 0xFFFFFFFFFFFFFFF8);
      long long v199 = (void *)((v347 + v197) & 0xFFFFFFFFFFFFFFF8);
      *long long v198 = *v199;
      unint64_t v200 = ((unint64_t)v198 + v376) & v343;
      unint64_t v201 = ((unint64_t)v199 + v376) & v343;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v361 + 32))(v200, v201, v362);
      long long v202 = (void *)((v387 + v200) & 0xFFFFFFFFFFFFFFF8);
      id v203 = (void *)((v387 + v201) & 0xFFFFFFFFFFFFFFF8);
      *long long v202 = *v203;
      *(_OWORD *)(((unint64_t)v202 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8);
      *(_OWORD *)(v196 + v391) = *(_OWORD *)(v197 + v391);
      uint64_t v204 = (v403 + v196 + v391) & v385;
      uint64_t v205 = (v403 + v197 + v391) & v385;
      *(unsigned char *)uint64_t v204 = *(unsigned char *)v205;
      uint64_t v206 = v204 | 4;
      int v207 = *(_DWORD *)(v205 | 4);
      *(unsigned char *)(v206 + 4) = *(unsigned char *)((v205 | 4) + 4);
      *(_DWORD *)uint64_t v206 = v207;
      *(_WORD *)(v204 + 10) = *(_WORD *)(v205 + 0xA);
      v68((v372 + v204) & v44, (v372 + v205) & v44, v367);
      uint64_t v208 = (v371 + ((v372 + v204) & v44)) & v44;
      uint64_t v209 = (v371 + ((v372 + v205) & v44)) & v44;
      v68(v208, v209, v367);
      unint64_t v210 = (unsigned char *)(v208 + v373);
      *unint64_t v210 = *(unsigned char *)(v209 + v373);
      v210[1] = *(unsigned char *)(v209 + v373 + 1);
      v210[2] = *(unsigned char *)(v209 + v373 + 2);
      v210[3] = *(unsigned char *)(v209 + v373 + 3);
      v210[4] = *(unsigned char *)(v209 + v373 + 4);
      unint64_t v211 = (v208 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v212 = (v209 + v373 + 12) & 0xFFFFFFFFFFFFFFF8;
      *(_OWORD *)unint64_t v211 = *(_OWORD *)v212;
      *(unsigned char *)(v211 + 16) = *(unsigned char *)(v212 + 16);
      *(unsigned char *)(v211 + 17) = *(unsigned char *)(v212 + 17);
      *(unsigned char *)(v211 + 18) = *(unsigned char *)(v212 + 18);
      *(unsigned char *)(v211 + 19) = *(unsigned char *)(v212 + 19);
      unint64_t v213 = (v211 + 27) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v214 = (v212 + 27) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v213 = *(void *)v214;
      *(unsigned char *)(v213 + 8) = *(unsigned char *)(v214 + 8);
      *(unsigned char *)(v213 + 9) = *(unsigned char *)(v214 + 9);
      *(unsigned char *)(v213 + 10) = *(unsigned char *)(v214 + 10);
      *(unsigned char *)(v213 + 11) = *(unsigned char *)(v214 + 11);
      *(unsigned char *)(v213 + 12) = *(unsigned char *)(v214 + 12);
      unint64_t v215 = (void *)((v211 + 47) & 0xFFFFFFFFFFFFFFF8);
      id v216 = (void *)((v212 + 47) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v215 = *v216;
      unint64_t v217 = ((unint64_t)v215 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v218 = ((unint64_t)v216 + 15) & 0xFFFFFFFFFFFFFFF8;
      *(void *)unint64_t v217 = *(void *)v218;
      *(unsigned char *)(v217 + 8) = *(unsigned char *)(v218 + 8);
      *(unsigned char *)(v217 + 9) = *(unsigned char *)(v218 + 9);
      unint64_t v219 = (void *)((v369 + v217) & v44);
      unint64_t v220 = (const void *)((v369 + v218) & v44);
      if (v394(v220, 1, v367))
      {
        memcpy(v219, v220, __n);
      }
      else
      {
        v68((unint64_t)v219, (unint64_t)v220, v367);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v368 + 56))(v219, 0, 1, v367);
      }
      uint64_t v39 = v379;
      char v119 = 0;
      uint64_t v221 = (void *)(((unint64_t)v219 + v370) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v222 = (void *)(((unint64_t)v220 + v370) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v221 = *v222;
      unint64_t v223 = ((unint64_t)v221 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v224 = ((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v225 = *(void *)v224;
      *(unsigned char *)(v223 + 8) = *(unsigned char *)(v224 + 8);
      *(void *)unint64_t v223 = v225;
      unint64_t v226 = (void *)(((unint64_t)v221 + 31) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v227 = (void *)(((unint64_t)v222 + 31) & 0xFFFFFFFFFFFFFFF8);
      void *v226 = *v227;
      unint64_t v228 = (_OWORD *)(((unint64_t)v226 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v229 = (_OWORD *)(((unint64_t)v227 + 15) & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v228 = *v229;
      unint64_t v230 = ((unint64_t)v228 + 19) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v231 = ((unint64_t)v229 + 19) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v232 = *(void *)v231;
      *(unsigned char *)(v230 + 8) = *(unsigned char *)(v231 + 8);
      *(void *)unint64_t v230 = v232;
      *(unsigned char *)(v230 + 9) = *(unsigned char *)(v231 + 9);
      unint64_t v233 = (v230 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      unint64_t v234 = (v231 + 13) & 0xFFFFFFFFFFFFFFFCLL;
      LODWORD(v225) = *(_DWORD *)v234;
      *(unsigned char *)(v233 + 4) = *(unsigned char *)(v234 + 4);
      *(_DWORD *)unint64_t v233 = v225;
      *(_OWORD *)((v230 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v231 + 25) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v235 = v204 + v364;
      long long v236 = *(_OWORD *)(v205 + v364 + 112);
      long long v238 = *(_OWORD *)(v205 + v364 + 64);
      long long v237 = *(_OWORD *)(v205 + v364 + 80);
      *(_OWORD *)(v235 + 96) = *(_OWORD *)(v205 + v364 + 96);
      *(_OWORD *)(v235 + 112) = v236;
      *(_OWORD *)(v235 + 64) = v238;
      *(_OWORD *)(v235 + 80) = v237;
      long long v239 = *(_OWORD *)(v205 + v364 + 176);
      long long v241 = *(_OWORD *)(v205 + v364 + 128);
      long long v240 = *(_OWORD *)(v205 + v364 + 144);
      *(_OWORD *)(v235 + 160) = *(_OWORD *)(v205 + v364 + 160);
      *(_OWORD *)(v235 + 176) = v239;
      *(_OWORD *)(v235 + 128) = v241;
      *(_OWORD *)(v235 + 144) = v240;
      long long v243 = *(_OWORD *)(v205 + v364 + 208);
      long long v242 = *(_OWORD *)(v205 + v364 + 224);
      long long v244 = *(_OWORD *)(v205 + v364 + 192);
      *(void *)(v235 + 240) = *(void *)(v205 + v364 + 240);
      *(_OWORD *)(v235 + 208) = v243;
      *(_OWORD *)(v235 + 224) = v242;
      *(_OWORD *)(v235 + 192) = v244;
      long long v245 = *(_OWORD *)(v205 + v364);
      long long v246 = *(_OWORD *)(v205 + v364 + 16);
      long long v247 = *(_OWORD *)(v205 + v364 + 48);
      *(_OWORD *)(v235 + 32) = *(_OWORD *)(v205 + v364 + 32);
      *(_OWORD *)(v235 + 48) = v247;
      *(_OWORD *)unint64_t v235 = v245;
      *(_OWORD *)(v235 + 16) = v246;
      id v248 = (_OWORD *)((v204 + v364 + 255) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v249 = (long long *)((v205 + v364 + 255) & 0xFFFFFFFFFFFFFFF8);
      long long v250 = *v249;
      *(_OWORD *)((char *)v248 + 9) = *(long long *)((char *)v249 + 9);
      *id v248 = v250;
      unint64_t v251 = (v204 + v364 + 287) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v252 = (v205 + v364 + 287) & 0xFFFFFFFFFFFFFFF8;
      long long v253 = *(_OWORD *)v252;
      *(unsigned char *)(v251 + 16) = *(unsigned char *)(v252 + 16);
      *(_OWORD *)unint64_t v251 = v253;
      uint64_t v254 = (void *)((v204 + v364 + 311) & 0xFFFFFFFFFFFFFFF8);
      long long v255 = (void *)((v205 + v364 + 311) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v254 = *v255;
      *(_OWORD *)(((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v256 = (void *)((v400 + v340) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v257 = (void *)((v193 + v340) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v256 = *v257;
      *(_OWORD *)(((unint64_t)v256 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v257 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_66:
      *((unsigned char *)v52 + v39) = v119;
      return v52;
  }
}

char *sub_24D972F94(char *a1, char *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v444 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v434 = *(void *)(v444 + 64);
    uint64_t v427 = *(unsigned __int8 *)(v444 + 80);
    uint64_t v429 = v434 + v427;
    uint64_t v407 = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(v407 - 8);
    uint64_t v445 = v3;
    id v448 = v2;
    int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
    uint64_t v405 = swift_getAssociatedTypeWitness();
    uint64_t v440 = *(void *)(v405 - 8);
    uint64_t v5 = *(unsigned __int8 *)(v440 + 80);
    uint64_t v449 = v4 | v5 | 7;
    uint64_t v394 = v434 + v449;
    uint64_t v406 = *(void *)(v3 + 64) + 7;
    uint64_t v404 = v5 + 8;
    uint64_t v441 = v5;
    uint64_t v401 = *(void *)(v440 + 64) + 7;
    unint64_t v408 = ((((v401 + ((v5 + 8 + (v406 & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v446 = sub_24DCC8CE8();
    uint64_t v6 = *(void *)(v446 - 8);
    uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = v7 | 7;
    uint64_t v452 = (v7 | 7) + 16;
    uint64_t v443 = v7 + 12;
    size_t v9 = *(void *)(v6 + 64);
    uint64_t v439 = v9 + v7;
    size_t v409 = v9 + 12;
    uint64_t v436 = v7 + 10;
    uint64_t v430 = v6;
    unsigned int v431 = *(_DWORD *)(v6 + 84);
    size_t v410 = v9;
    if (v431) {
      size_t v10 = *(void *)(*(void *)(v446 - 8) + 64);
    }
    else {
      size_t v10 = v9 + 1;
    }
    size_t __n = v10;
    size_t v437 = v10 + 7;
    unint64_t v381 = (v7
          + 10
          + ((((((v9 + 12 + ((v9 + v7 + ((v7 + 12) & ~v7)) & ~v7)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v7;
    unint64_t v425 = (((((((((v10 + 7 + v381) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v438 = v425 + 16;
    uint64_t v382 = (v452 + v408 + ((v434 + v449 + ((v434 + v427) & ~v427)) & ~v449)) & ~(v7 | 7);
    size_t v432 = ((((v382 + v425 + 16 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v11 = swift_getAssociatedTypeWitness();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v417 = v12;
    uint64_t v418 = v11;
    uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
    uint64_t v421 = swift_getAssociatedTypeWitness();
    uint64_t v14 = *(void *)(v421 - 8);
    uint64_t v419 = v14;
    int v15 = *(_DWORD *)(v14 + 80) & 0xF8;
    uint64_t v16 = swift_getAssociatedTypeWitness();
    uint64_t v17 = v13;
    uint64_t v18 = v427;
    uint64_t v423 = *(void *)(v16 - 8);
    uint64_t v424 = v16;
    uint64_t v19 = *(unsigned __int8 *)(v423 + 80);
    int v20 = v15 | v19;
    uint64_t v2 = (char *)v448;
    uint64_t v21 = v20 | 7u;
    uint64_t v22 = v13 | v7 | v21;
    size_t v393 = v432 + v22;
    uint64_t v23 = *(void *)(v12 + 64);
    uint64_t v413 = v23 + v13;
    uint64_t v414 = v23 + v21;
    uint64_t v24 = v14;
    uint64_t v25 = v444;
    uint64_t v415 = *(void *)(v24 + 64) + 7;
    uint64_t v416 = v19 + 8;
    uint64_t v420 = *(void *)(v423 + 64) + 7;
    unint64_t v422 = ((((v420 + ((v19 + 8 + (v415 & 0xFFFFFFFFFFFFFFF8)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unint64_t v26 = (v425 + ((v452 + v422 + ((v23 + v21 + ((v23 + v13) & ~v13)) & ~v21)) & ~v8) + 327) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v26 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v28 = ((((v27 + ((v432 + v22) & ~v22) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v29 = v449 | v427 | v7;
    uint64_t v390 = v29 + v434;
    unsigned int v377 = *(_DWORD *)(v440 + 84);
    if (*(_DWORD *)(v3 + 84) <= v377) {
      unsigned int v30 = *(_DWORD *)(v440 + 84);
    }
    else {
      unsigned int v30 = *(_DWORD *)(v3 + 84);
    }
    unsigned int v378 = v30;
    if (v30 <= 0x7FFFFFFE) {
      unsigned int v30 = 2147483646;
    }
    unsigned int v383 = v30;
    if (v30 <= *(_DWORD *)(v444 + 84)) {
      unsigned int v30 = *(_DWORD *)(v444 + 84);
    }
    if (v431 <= 0x7FFFFFFE) {
      unsigned int v31 = 2147483646;
    }
    else {
      unsigned int v31 = v431;
    }
    if (v30 <= v31) {
      unsigned int v30 = v31;
    }
    unsigned int v379 = v30;
    if (v30 <= 0x7FFFFFFF) {
      int v32 = 0x7FFFFFFF;
    }
    else {
      int v32 = v30;
    }
    if (((v432 + (v390 & ~v29)) & 0xFFFFFFFFFFFFFFF8) + 24 > v28) {
      unint64_t v28 = ((v432 + (v390 & ~v29)) & 0xFFFFFFFFFFFFFFF8) + 24;
    }
    unint64_t v33 = ((v26 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v33 > v28) {
      unint64_t v28 = v33;
    }
    if (v28 <= 0x10) {
      uint64_t v34 = 16;
    }
    else {
      uint64_t v34 = v28;
    }
    unsigned int v35 = *((unsigned __int8 *)v448 + v34);
    uint64_t v36 = v34 & 0xFFFFFFF8;
    if (v35 >= 4 && v36 != 0) {
      unsigned int v35 = *v448 + 4;
    }
    int v389 = v32;
    int v391 = *(_DWORD *)(v444 + 84);
    int v380 = *(_DWORD *)(v3 + 84);
    uint64_t v38 = ~v427;
    uint64_t v428 = ~v449;
    uint64_t v403 = ~v441;
    uint64_t v442 = ~v8;
    uint64_t v39 = ~v7;
    uint64_t v392 = ~v22;
    uint64_t v411 = ~v17;
    uint64_t v412 = ~v21;
    uint64_t v426 = ~v19;
    unint64_t v40 = v27 + 16;
    uint64_t v388 = ~v29;
    uint64_t v41 = AssociatedTypeWitness;
    switch(v35)
    {
      case 1u:
        unint64_t v65 = *(void (**)(_DWORD *, uint64_t))(v444 + 8);
        v65((char *)v448, AssociatedTypeWitness);
        unint64_t v66 = ((unint64_t)v448 + v390) & v388;
        uint64_t v396 = v38;
        if (v391 == v389)
        {
          int v67 = *(uint64_t (**)(unint64_t))(v444 + 48);
          unint64_t v68 = ((unint64_t)v448 + v390) & v388;
          goto LABEL_56;
        }
        unint64_t v70 = (v429 + v66) & v38;
        unint64_t v71 = (v394 + v70) & v428;
        if (v383 == v389)
        {
          if (v380 == v383)
          {
            int v67 = *(uint64_t (**)(unint64_t))(v445 + 48);
            unint64_t v68 = (v394 + v70) & v428;
            goto LABEL_56;
          }
          unint64_t v302 = (unint64_t *)((v406 + v71) & 0xFFFFFFFFFFFFFFF8);
          if (v378 <= 0x7FFFFFFE)
          {
            unint64_t v303 = *v302;
            goto LABEL_138;
          }
          unint64_t v68 = ((unint64_t)v302 + v404) & v403;
          int v67 = *(uint64_t (**)(unint64_t))(v440 + 48);
        }
        else
        {
          unint64_t v298 = v71 + v408;
          if ((v379 & 0x80000000) == 0)
          {
            unint64_t v299 = *(void *)(v298 + 8);
            if (v299 >= 0xFFFFFFFF) {
              LODWORD(v299) = -1;
            }
            if (v299 == -1)
            {
LABEL_57:
              unint64_t v70 = (v429 + v66) & v396;
              unint64_t v71 = (v394 + v70) & v428;
LABEL_58:
              v65((_DWORD *)v66, AssociatedTypeWitness);
              v65((_DWORD *)v70, AssociatedTypeWitness);
              (*(void (**)(unint64_t, uint64_t))(v445 + 8))(v71, v407);
              swift_bridgeObjectRelease();
              (*(void (**)(unint64_t, uint64_t))(v440 + 8))((v404 + ((v406 + v71) & 0xFFFFFFFFFFFFFFF8)) & v403, v405);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v72 = (v452 + v71 + v408) & v442;
              unint64_t v73 = (v443 + v72) & v39;
              uint64_t v74 = v39;
              unint64_t v75 = *(void (**)(unint64_t, uint64_t))(v430 + 8);
              v75(v73, v446);
              unint64_t v76 = (v439 + v73) & v74;
              v75(v76, v446);
              swift_bridgeObjectRelease();
              uint64_t v376 = v74;
              unint64_t v77 = (v436
                   + ((((((v409 + v76) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v74;
              if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v430 + 48))(v77, 1, v446)) {
                v75(v77, v446);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v78 = (uint64_t *)((((((v437 + v77) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
              unint64_t v79 = v78[1];
              if ((v79 & 0x3000000000000000) == 0) {
                sub_24D400DCC(*v78, v79);
              }
              swift_bridgeObjectRelease();
              unint64_t v80 = v438 + v72;
              unint64_t v81 = *(void **)(v80 + 16);
              LODWORD(v82) = -1;
              if ((unint64_t)v81 < 0xFFFFFFFF) {
                uint64_t v82 = *(void *)(v80 + 16);
              }
              uint64_t v39 = v376;
              uint64_t v41 = AssociatedTypeWitness;
              uint64_t v36 = v34 & 0xFFFFFFF8;
              if ((int)v82 - 1 < 0)
              {

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*(void *)(v80 + 192))
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              sub_24D466534(*(void *)((((v80 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v80 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
            }
LABEL_69:
            uint64_t v25 = v444;
            uint64_t v38 = v396;
LABEL_81:
            swift_bridgeObjectRelease();
            unsigned int v97 = a2[v34];
            if (v36) {
              BOOL v98 = v97 >= 4;
            }
            else {
              BOOL v98 = 0;
            }
            if (v98) {
              unsigned int v97 = *(_DWORD *)a2 + 4;
            }
            switch(v97)
            {
              case 1u:
                int v129 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
                v129(v2, a2, v41);
                uint64_t v451 = (char *)((unint64_t)&v2[v390] & v388);
                uint64_t v130 = (char *)((unint64_t)&a2[v390] & v388);
                if (v391 == v389)
                {
                  unint64_t v131 = v451;
                  if (!(*(unsigned int (**)(unint64_t))(v25 + 48))((unint64_t)&a2[v390] & v388)) {
                    goto LABEL_131;
                  }
                  goto LABEL_146;
                }
                unint64_t v160 = (unint64_t)&v130[v429] & v38;
                unint64_t v161 = (v394 + v160) & v428;
                if (v383 == v389)
                {
                  if (v380 == v383)
                  {
                    unint64_t v131 = v451;
                    if (!(*(unsigned int (**)(unint64_t))(v445 + 48))((v394 + v160) & v428)) {
                      goto LABEL_131;
                    }
                    goto LABEL_146;
                  }
                  unint64_t v304 = (unint64_t *)((v406 + v161) & 0xFFFFFFFFFFFFFFF8);
                  unint64_t v131 = v451;
                  if (v378 <= 0x7FFFFFFE)
                  {
                    unint64_t v305 = *v304;
                    goto LABEL_143;
                  }
                  int v307 = (*(uint64_t (**)(unint64_t, void, uint64_t))(v440 + 48))(((unint64_t)v304 + v404) & v403, v377, v405);
                }
                else
                {
                  unint64_t v300 = v161 + v408;
                  if ((v379 & 0x80000000) == 0)
                  {
                    unint64_t v301 = *(void *)(v300 + 8);
                    if (v301 >= 0xFFFFFFFF) {
                      LODWORD(v301) = -1;
                    }
                    unint64_t v131 = v451;
                    if (v301 == -1) {
                      goto LABEL_131;
                    }
                    goto LABEL_146;
                  }
                  unint64_t v131 = v451;
                  uint64_t v306 = (v443 + ((v452 + v300) & v442)) & v39;
                  if (v431 <= 0x7FFFFFFD)
                  {
                    unint64_t v305 = *(void *)(((v409 + ((v439 + v306) & v39)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_143:
                    if (v305 >= 0xFFFFFFFF) {
                      LODWORD(v305) = -1;
                    }
                    if ((v305 + 1) < 2)
                    {
LABEL_132:
                      uint64_t v400 = v34;
                      v129(v131, v130, v41);
                      unint64_t v308 = (unint64_t)&v131[v429] & v38;
                      v129((char *)v308, (char *)v160, v41);
                      unint64_t v309 = (v394 + v308) & v428;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v445 + 32))(v309, v161, v407);
                      long long v310 = (void *)((v406 + v309) & 0xFFFFFFFFFFFFFFF8);
                      long long v311 = (void *)((v406 + v161) & 0xFFFFFFFFFFFFFFF8);
                      *long long v310 = *v311;
                      unint64_t v312 = ((unint64_t)v310 + v404) & v403;
                      unint64_t v313 = ((unint64_t)v311 + v404) & v403;
                      (*(void (**)(unint64_t, unint64_t, uint64_t))(v440 + 32))(v312, v313, v405);
                      long long v314 = (void *)((v401 + v312) & 0xFFFFFFFFFFFFFFF8);
                      long long v315 = (void *)((v401 + v313) & 0xFFFFFFFFFFFFFFF8);
                      *long long v314 = *v315;
                      *(_OWORD *)(((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v315 + 15) & 0xFFFFFFFFFFFFFFF8);
                      *(_OWORD *)(v309 + v408) = *(_OWORD *)(v161 + v408);
                      unint64_t v316 = (v452 + v309 + v408) & v442;
                      unint64_t v317 = (v452 + v161 + v408) & v442;
                      *(unsigned char *)unint64_t v316 = *(unsigned char *)v317;
                      uint64_t v318 = v316 | 4;
                      int v319 = *(_DWORD *)(v317 | 4);
                      *(unsigned char *)(v318 + 4) = *(unsigned char *)((v317 | 4) + 4);
                      *(_DWORD *)uint64_t v318 = v319;
                      *(_WORD *)(v316 + 10) = *(_WORD *)(v317 + 0xA);
                      unint64_t v320 = *(void (**)(unint64_t, unint64_t, uint64_t))(v430 + 32);
                      v320((v443 + v316) & v39, (v443 + v317) & v39, v446);
                      unint64_t v321 = (v439 + ((v443 + v316) & v39)) & v39;
                      unint64_t v322 = (v439 + ((v443 + v317) & v39)) & v39;
                      v320(v321, v322, v446);
                      uint64_t v323 = (unsigned char *)(v321 + v410);
                      *uint64_t v323 = *(unsigned char *)(v322 + v410);
                      v323[1] = *(unsigned char *)(v322 + v410 + 1);
                      v323[2] = *(unsigned char *)(v322 + v410 + 2);
                      v323[3] = *(unsigned char *)(v322 + v410 + 3);
                      v323[4] = *(unsigned char *)(v322 + v410 + 4);
                      unint64_t v324 = (v321 + v410 + 12) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v325 = (v322 + v410 + 12) & 0xFFFFFFFFFFFFFFF8;
                      *(_OWORD *)unint64_t v324 = *(_OWORD *)v325;
                      *(unsigned char *)(v324 + 16) = *(unsigned char *)(v325 + 16);
                      *(unsigned char *)(v324 + 17) = *(unsigned char *)(v325 + 17);
                      *(unsigned char *)(v324 + 18) = *(unsigned char *)(v325 + 18);
                      *(unsigned char *)(v324 + 19) = *(unsigned char *)(v325 + 19);
                      unint64_t v326 = (v324 + 27) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v327 = (v325 + 27) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v326 = *(void *)v327;
                      *(unsigned char *)(v326 + 8) = *(unsigned char *)(v327 + 8);
                      *(unsigned char *)(v326 + 9) = *(unsigned char *)(v327 + 9);
                      *(unsigned char *)(v326 + 10) = *(unsigned char *)(v327 + 10);
                      *(unsigned char *)(v326 + 11) = *(unsigned char *)(v327 + 11);
                      *(unsigned char *)(v326 + 12) = *(unsigned char *)(v327 + 12);
                      unint64_t v328 = (void *)((v325 + 47) & 0xFFFFFFFFFFFFFFF8);
                      int v329 = (void *)((v324 + 47) & 0xFFFFFFFFFFFFFFF8);
                      *int v329 = *v328;
                      unint64_t v330 = ((unint64_t)v329 + 15) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v331 = ((unint64_t)v328 + 15) & 0xFFFFFFFFFFFFFFF8;
                      *(void *)unint64_t v330 = *(void *)v331;
                      *(unsigned char *)(v330 + 8) = *(unsigned char *)(v331 + 8);
                      *(unsigned char *)(v330 + 9) = *(unsigned char *)(v331 + 9);
                      unint64_t v332 = (void *)((v436 + v330) & v39);
                      uint64_t v333 = (const void *)((v436 + v331) & v39);
                      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v430 + 48))(v333, 1, v446))
                      {
                        memcpy(v332, v333, __n);
                      }
                      else
                      {
                        v320((unint64_t)v332, (unint64_t)v333, v446);
                        (*(void (**)(void *, void, uint64_t, uint64_t))(v430 + 56))(v332, 0, 1, v446);
                      }
                      uint64_t v34 = v400;
                      size_t v334 = v410;
                      unint64_t v336 = v381;
                      uint64_t v335 = v382;
                      unsigned int v337 = (void *)(((unint64_t)v332 + v437) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v338 = (void *)(((unint64_t)v333 + v437) & 0xFFFFFFFFFFFFFFF8);
                      *unsigned int v337 = *v338;
                      unint64_t v339 = ((unint64_t)v337 + 15) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v340 = ((unint64_t)v338 + 15) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v341 = *(void *)v340;
                      *(unsigned char *)(v339 + 8) = *(unsigned char *)(v340 + 8);
                      *(void *)unint64_t v339 = v341;
                      uint64_t v342 = (void *)(((unint64_t)v337 + 31) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v343 = (void *)(((unint64_t)v338 + 31) & 0xFFFFFFFFFFFFFFF8);
                      *uint64_t v342 = *v343;
                      uint64_t v344 = (_OWORD *)(((unint64_t)v342 + 15) & 0xFFFFFFFFFFFFFFF8);
                      size_t v345 = (_OWORD *)(((unint64_t)v343 + 15) & 0xFFFFFFFFFFFFFFF8);
                      _OWORD *v344 = *v345;
                      unint64_t v346 = ((unint64_t)v344 + 19) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v347 = ((unint64_t)v345 + 19) & 0xFFFFFFFFFFFFFFF8;
                      uint64_t v348 = *(void *)v347;
                      *(unsigned char *)(v346 + 8) = *(unsigned char *)(v347 + 8);
                      *(void *)unint64_t v346 = v348;
                      *(unsigned char *)(v346 + 9) = *(unsigned char *)(v347 + 9);
                      unint64_t v349 = (v346 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      unint64_t v350 = (v347 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                      LODWORD(v341) = *(_DWORD *)v350;
                      *(unsigned char *)(v349 + 4) = *(unsigned char *)(v350 + 4);
                      *(_DWORD *)unint64_t v349 = v341;
                      *(_OWORD *)((v346 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v347 + 25) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v351 = v438 + v316;
                      long long v352 = *(_OWORD *)(v438 + v317 + 112);
                      long long v354 = *(_OWORD *)(v438 + v317 + 64);
                      long long v353 = *(_OWORD *)(v438 + v317 + 80);
                      *(_OWORD *)(v351 + 96) = *(_OWORD *)(v438 + v317 + 96);
                      *(_OWORD *)(v351 + 112) = v352;
                      *(_OWORD *)(v351 + 64) = v354;
                      *(_OWORD *)(v351 + 80) = v353;
                      long long v355 = *(_OWORD *)(v438 + v317 + 176);
                      long long v357 = *(_OWORD *)(v438 + v317 + 128);
                      long long v356 = *(_OWORD *)(v438 + v317 + 144);
                      *(_OWORD *)(v351 + 160) = *(_OWORD *)(v438 + v317 + 160);
                      *(_OWORD *)(v351 + 176) = v355;
                      *(_OWORD *)(v351 + 128) = v357;
                      *(_OWORD *)(v351 + 144) = v356;
                      long long v359 = *(_OWORD *)(v438 + v317 + 208);
                      long long v358 = *(_OWORD *)(v438 + v317 + 224);
                      long long v360 = *(_OWORD *)(v438 + v317 + 192);
                      *(void *)(v351 + 240) = *(void *)(v438 + v317 + 240);
                      *(_OWORD *)(v351 + 208) = v359;
                      *(_OWORD *)(v351 + 224) = v358;
                      *(_OWORD *)(v351 + 192) = v360;
                      long long v361 = *(_OWORD *)(v438 + v317);
                      long long v362 = *(_OWORD *)(v438 + v317 + 16);
                      long long v363 = *(_OWORD *)(v438 + v317 + 48);
                      *(_OWORD *)(v351 + 32) = *(_OWORD *)(v438 + v317 + 32);
                      *(_OWORD *)(v351 + 48) = v363;
                      *(_OWORD *)unint64_t v351 = v361;
                      *(_OWORD *)(v351 + 16) = v362;
                      unint64_t v364 = (_OWORD *)((v438 + v316 + 255) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v365 = (long long *)((v438 + v317 + 255) & 0xFFFFFFFFFFFFFFF8);
                      long long v366 = *v365;
                      *(_OWORD *)((char *)v364 + 9) = *(long long *)((char *)v365 + 9);
                      _OWORD *v364 = v366;
                      unint64_t v367 = (v438 + v316 + 287) & 0xFFFFFFFFFFFFFFF8;
                      unint64_t v368 = (v438 + v317 + 287) & 0xFFFFFFFFFFFFFFF8;
                      long long v369 = *(_OWORD *)v368;
                      *(unsigned char *)(v367 + 16) = *(unsigned char *)(v368 + 16);
                      *(_OWORD *)unint64_t v367 = v369;
                      size_t v370 = (void *)((v438 + v316 + 311) & 0xFFFFFFFFFFFFFFF8);
                      uint64_t v371 = (void *)((v438 + v317 + 311) & 0xFFFFFFFFFFFFFFF8);
                      *size_t v370 = *v371;
                      *(_OWORD *)(((unint64_t)v370 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v371 + 15) & 0xFFFFFFFFFFFFFFF8);
                      unint64_t v131 = v451;
                      if (v431) {
                        goto LABEL_148;
                      }
                      goto LABEL_147;
                    }
                    goto LABEL_146;
                  }
                  int v307 = (*(uint64_t (**)(uint64_t, void, uint64_t))(v430 + 48))(v306, v431, v446);
                }
                if (!v307)
                {
LABEL_131:
                  unint64_t v160 = (unint64_t)&v130[v429] & v38;
                  unint64_t v161 = (v394 + v160) & v428;
                  goto LABEL_132;
                }
LABEL_146:
                memcpy(v131, v130, v432);
                unint64_t v336 = v381;
                uint64_t v335 = v382;
LABEL_147:
                size_t v334 = __n;
LABEL_148:
                unint64_t v372 = ((((v335
                         + ((((((((((v336 + v334 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
                             + 19) & 0xFFFFFFFFFFFFFFF8)
                           + 25) & 0xFFFFFFFFFFFFFFF8)
                         + 327) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)
                     + 16;
                unint64_t v373 = (unint64_t)&v131[v372];
                unint64_t v374 = (unint64_t)&v130[v372];
                *(unsigned char *)unint64_t v373 = *(unsigned char *)v374;
                *(_OWORD *)((v373 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)((v374 & 0xFFFFFFFFFFFFFFF8) + 8);
                char v159 = 1;
                uint64_t v2 = (char *)v448;
LABEL_149:
                v2[v34] = v159;
                return v2;
              case 2u:
                unint64_t v387 = v40;
                uint64_t v399 = v34;
                unint64_t v132 = *(void (**)(_OWORD *, _DWORD *, uint64_t))(v417 + 32);
                v132(v2, a2, v418);
                v132((_OWORD *)((unint64_t)&v2[v413] & v411), (_DWORD *)((unint64_t)&a2[v413] & v411), v418);
                unint64_t v133 = (v414 + ((unint64_t)&v2[v413] & v411)) & v412;
                unint64_t v134 = (v414 + ((unint64_t)&a2[v413] & v411)) & v412;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v419 + 32))(v133, v134, v421);
                unint64_t v135 = (void *)((v415 + v133) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v136 = (void *)((v415 + v134) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v135 = *v136;
                unint64_t v137 = ((unint64_t)v135 + v416) & v426;
                unint64_t v138 = ((unint64_t)v136 + v416) & v426;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v423 + 32))(v137, v138, v424);
                long long v139 = (void *)((v420 + v137) & 0xFFFFFFFFFFFFFFF8);
                long long v140 = (void *)((v420 + v138) & 0xFFFFFFFFFFFFFFF8);
                *long long v139 = *v140;
                *(_OWORD *)(((unint64_t)v139 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v140
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *(_OWORD *)(v422 + v133) = *(_OWORD *)(v422 + v134);
                unint64_t v141 = (v452 + v422 + v133) & v442;
                unint64_t v142 = (v452 + v422 + v134) & v442;
                *(unsigned char *)unint64_t v141 = *(unsigned char *)v142;
                uint64_t v143 = v141 | 4;
                int v144 = *(_DWORD *)(v142 | 4);
                *(unsigned char *)(v143 + 4) = *(unsigned char *)((v142 | 4) + 4);
                *(_DWORD *)uint64_t v143 = v144;
                *(_WORD *)(v141 + 10) = *(_WORD *)(v142 + 0xA);
                long long v145 = *(void (**)(unint64_t, unint64_t, uint64_t))(v430 + 32);
                v145((v443 + v141) & v39, (v443 + v142) & v39, v446);
                unint64_t v146 = (v439 + ((v443 + v141) & v39)) & v39;
                unint64_t v147 = (v439 + ((v443 + v142) & v39)) & v39;
                v145(v146, v147, v446);
                long long v148 = (unsigned char *)(v146 + v410);
                *long long v148 = *(unsigned char *)(v147 + v410);
                v148[1] = *(unsigned char *)(v147 + v410 + 1);
                v148[2] = *(unsigned char *)(v147 + v410 + 2);
                v148[3] = *(unsigned char *)(v147 + v410 + 3);
                v148[4] = *(unsigned char *)(v147 + v410 + 4);
                unint64_t v149 = (v146 + v410 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v150 = (v147 + v410 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)unint64_t v149 = *(_OWORD *)v150;
                *(unsigned char *)(v149 + 16) = *(unsigned char *)(v150 + 16);
                *(unsigned char *)(v149 + 17) = *(unsigned char *)(v150 + 17);
                *(unsigned char *)(v149 + 18) = *(unsigned char *)(v150 + 18);
                *(unsigned char *)(v149 + 19) = *(unsigned char *)(v150 + 19);
                unint64_t v151 = (v149 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v152 = (v150 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v151 = *(void *)v152;
                *(unsigned char *)(v151 + 8) = *(unsigned char *)(v152 + 8);
                *(unsigned char *)(v151 + 9) = *(unsigned char *)(v152 + 9);
                *(unsigned char *)(v151 + 10) = *(unsigned char *)(v152 + 10);
                *(unsigned char *)(v151 + 11) = *(unsigned char *)(v152 + 11);
                *(unsigned char *)(v151 + 12) = *(unsigned char *)(v152 + 12);
                unint64_t v153 = (void *)((v150 + 47) & 0xFFFFFFFFFFFFFFF8);
                long long v154 = (void *)((v149 + 47) & 0xFFFFFFFFFFFFFFF8);
                *long long v154 = *v153;
                unint64_t v155 = ((unint64_t)v154 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v156 = ((unint64_t)v153 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v155 = *(void *)v156;
                *(unsigned char *)(v155 + 8) = *(unsigned char *)(v156 + 8);
                *(unsigned char *)(v155 + 9) = *(unsigned char *)(v156 + 9);
                unint64_t v157 = (void *)((v436 + v155) & v39);
                long long v158 = (const void *)((v436 + v156) & v39);
                if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v430 + 48))(v158, 1, v446))
                {
                  memcpy(v157, v158, __n);
                }
                else
                {
                  v145((unint64_t)v157, (unint64_t)v158, v446);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v430 + 56))(v157, 0, 1, v446);
                }
                uint64_t v34 = v399;
                uint64_t v162 = (void *)(((unint64_t)v157 + v437) & 0xFFFFFFFFFFFFFFF8);
                long long v163 = (void *)(((unint64_t)v158 + v437) & 0xFFFFFFFFFFFFFFF8);
                void *v162 = *v163;
                unint64_t v164 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v165 = ((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v166 = *(void *)v165;
                *(unsigned char *)(v164 + 8) = *(unsigned char *)(v165 + 8);
                *(void *)unint64_t v164 = v166;
                unint64_t v167 = (void *)(((unint64_t)v163 + 31) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v168 = (void *)(((unint64_t)v162 + 31) & 0xFFFFFFFFFFFFFFF8);
                void *v168 = *v167;
                uint64_t v169 = (_OWORD *)(((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v170 = (_OWORD *)(((unint64_t)v167 + 15) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v169 = *v170;
                unint64_t v171 = ((unint64_t)v169 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v172 = ((unint64_t)v170 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v173 = *(void *)v172;
                *(unsigned char *)(v171 + 8) = *(unsigned char *)(v172 + 8);
                *(void *)unint64_t v171 = v173;
                *(unsigned char *)(v171 + 9) = *(unsigned char *)(v172 + 9);
                unint64_t v174 = (v171 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v175 = (v172 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                LODWORD(v166) = *(_DWORD *)v175;
                *(unsigned char *)(v174 + 4) = *(unsigned char *)(v175 + 4);
                *(_DWORD *)unint64_t v174 = v166;
                *(_OWORD *)((v171 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v172 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v176 = v141 + v438;
                long long v177 = *(_OWORD *)(v142 + v438 + 112);
                long long v179 = *(_OWORD *)(v142 + v438 + 64);
                long long v178 = *(_OWORD *)(v142 + v438 + 80);
                *(_OWORD *)(v176 + 96) = *(_OWORD *)(v142 + v438 + 96);
                *(_OWORD *)(v176 + 112) = v177;
                *(_OWORD *)(v176 + 64) = v179;
                *(_OWORD *)(v176 + 80) = v178;
                long long v180 = *(_OWORD *)(v142 + v438 + 176);
                long long v182 = *(_OWORD *)(v142 + v438 + 128);
                long long v181 = *(_OWORD *)(v142 + v438 + 144);
                *(_OWORD *)(v176 + 160) = *(_OWORD *)(v142 + v438 + 160);
                *(_OWORD *)(v176 + 176) = v180;
                *(_OWORD *)(v176 + 128) = v182;
                *(_OWORD *)(v176 + 144) = v181;
                long long v184 = *(_OWORD *)(v142 + v438 + 208);
                long long v183 = *(_OWORD *)(v142 + v438 + 224);
                long long v185 = *(_OWORD *)(v142 + v438 + 192);
                *(void *)(v176 + 240) = *(void *)(v142 + v438 + 240);
                *(_OWORD *)(v176 + 208) = v184;
                *(_OWORD *)(v176 + 224) = v183;
                *(_OWORD *)(v176 + 192) = v185;
                long long v186 = *(_OWORD *)(v142 + v438);
                long long v187 = *(_OWORD *)(v142 + v438 + 16);
                long long v188 = *(_OWORD *)(v142 + v438 + 48);
                *(_OWORD *)(v176 + 32) = *(_OWORD *)(v142 + v438 + 32);
                *(_OWORD *)(v176 + 48) = v188;
                *(_OWORD *)unint64_t v176 = v186;
                *(_OWORD *)(v176 + 16) = v187;
                unint64_t v189 = (_OWORD *)((v141 + v438 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v190 = (long long *)((v142 + v438 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v191 = *v190;
                *(_OWORD *)((char *)v189 + 9) = *(long long *)((char *)v190 + 9);
                *unint64_t v189 = v191;
                unint64_t v192 = (v141 + v438 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v193 = (v142 + v438 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v194 = *(_OWORD *)v193;
                *(unsigned char *)(v192 + 16) = *(unsigned char *)(v193 + 16);
                *(_OWORD *)unint64_t v192 = v194;
                unint64_t v195 = (void *)((v141 + v438 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v196 = (void *)((v142 + v438 + 311) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v195 = *v196;
                *(_OWORD *)(((unint64_t)v195 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v196
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v197 = (unint64_t)&v2[v387];
                *(unsigned char *)unint64_t v197 = a2[v387];
                *(_OWORD *)((v197 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_OWORD *)(((unint64_t)&a2[v387] & 0xFFFFFFFFFFFFFFF8)
                                                                           + 8);
                char v159 = 2;
                goto LABEL_149;
              case 3u:
                *(_OWORD *)uint64_t v2 = *(_OWORD *)a2;
                char v159 = 3;
                goto LABEL_149;
              default:
                unint64_t v386 = v40;
                uint64_t v398 = v34;
                uint64_t v99 = *(void (**)(_OWORD *, _DWORD *, uint64_t))(v25 + 32);
                v99(v2, a2, v41);
                unint64_t v100 = (unint64_t)&v2[v429] & v38;
                unint64_t v101 = (unint64_t)&a2[v429] & v38;
                v99((_OWORD *)v100, (_DWORD *)v101, v41);
                unint64_t v102 = (v100 + v434 + v449) & v428;
                unint64_t v103 = (v101 + v434 + v449) & v428;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v445 + 32))(v102, v103, v407);
                int v104 = (void *)((v406 + v102) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v105 = (void *)((v406 + v103) & 0xFFFFFFFFFFFFFFF8);
                *int v104 = *v105;
                unint64_t v106 = ((unint64_t)v104 + v404) & v403;
                unint64_t v107 = ((unint64_t)v105 + v404) & v403;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v440 + 32))(v106, v107, v405);
                int v108 = (void *)((v401 + v106) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v109 = (void *)((v401 + v107) & 0xFFFFFFFFFFFFFFF8);
                *int v108 = *v109;
                *(_OWORD *)(((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v109
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *(_OWORD *)(v408 + v102) = *(_OWORD *)(v408 + v103);
                unint64_t v110 = (v452 + v408 + v102) & v442;
                unint64_t v111 = (v452 + v408 + v103) & v442;
                *(unsigned char *)unint64_t v110 = *(unsigned char *)v111;
                uint64_t v112 = v110 | 4;
                int v113 = *(_DWORD *)(v111 | 4);
                *(unsigned char *)(v112 + 4) = *(unsigned char *)((v111 | 4) + 4);
                *(_DWORD *)uint64_t v112 = v113;
                *(_WORD *)(v110 + 10) = *(_WORD *)(v111 + 0xA);
                uint64_t v114 = *(void (**)(unint64_t, unint64_t, uint64_t))(v430 + 32);
                uint64_t v115 = v446;
                v114((v443 + v110) & v39, (v443 + v111) & v39, v446);
                unint64_t v116 = (v439 + ((v443 + v110) & v39)) & v39;
                unint64_t v117 = (v439 + ((v443 + v111) & v39)) & v39;
                v114(v116, v117, v446);
                unint64_t v118 = (unsigned char *)(v116 + v410);
                unsigned char *v118 = *(unsigned char *)(v117 + v410);
                v118[1] = *(unsigned char *)(v117 + v410 + 1);
                v118[2] = *(unsigned char *)(v117 + v410 + 2);
                v118[3] = *(unsigned char *)(v117 + v410 + 3);
                v118[4] = *(unsigned char *)(v117 + v410 + 4);
                unint64_t v119 = (v116 + v410 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v120 = (v117 + v410 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)unint64_t v119 = *(_OWORD *)v120;
                *(unsigned char *)(v119 + 16) = *(unsigned char *)(v120 + 16);
                *(unsigned char *)(v119 + 17) = *(unsigned char *)(v120 + 17);
                *(unsigned char *)(v119 + 18) = *(unsigned char *)(v120 + 18);
                *(unsigned char *)(v119 + 19) = *(unsigned char *)(v120 + 19);
                unint64_t v121 = (v119 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v122 = (v120 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v121 = *(void *)v122;
                *(unsigned char *)(v121 + 8) = *(unsigned char *)(v122 + 8);
                *(unsigned char *)(v121 + 9) = *(unsigned char *)(v122 + 9);
                *(unsigned char *)(v121 + 10) = *(unsigned char *)(v122 + 10);
                *(unsigned char *)(v121 + 11) = *(unsigned char *)(v122 + 11);
                *(unsigned char *)(v121 + 12) = *(unsigned char *)(v122 + 12);
                unint64_t v123 = (void *)((v120 + 47) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v124 = (void *)((v119 + 47) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v124 = *v123;
                unint64_t v125 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v126 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v125 = *(void *)v126;
                *(unsigned char *)(v125 + 8) = *(unsigned char *)(v126 + 8);
                *(unsigned char *)(v125 + 9) = *(unsigned char *)(v126 + 9);
                unint64_t v127 = (void *)((v436 + v125) & v39);
                uint64_t v128 = (const void *)((v436 + v126) & v39);
                id v450 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v430 + 48);
                if (v450(v128, 1, v446))
                {
                  memcpy(v127, v128, __n);
                }
                else
                {
                  v114((unint64_t)v127, (unint64_t)v128, v446);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v430 + 56))(v127, 0, 1, v446);
                }
                long long v198 = (void *)(((unint64_t)v127 + v437) & 0xFFFFFFFFFFFFFFF8);
                long long v199 = (void *)(((unint64_t)v128 + v437) & 0xFFFFFFFFFFFFFFF8);
                *long long v198 = *v199;
                unint64_t v200 = ((unint64_t)v198 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v201 = ((unint64_t)v199 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v202 = *(void *)v201;
                *(unsigned char *)(v200 + 8) = *(unsigned char *)(v201 + 8);
                *(void *)unint64_t v200 = v202;
                id v203 = (void *)(((unint64_t)v198 + 31) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v204 = (void *)(((unint64_t)v199 + 31) & 0xFFFFFFFFFFFFFFF8);
                *id v203 = *v204;
                uint64_t v205 = (_OWORD *)(((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v206 = (_OWORD *)(((unint64_t)v204 + 15) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v205 = *v206;
                unint64_t v207 = ((unint64_t)v205 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v208 = ((unint64_t)v206 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v209 = *(void *)v208;
                *(unsigned char *)(v207 + 8) = *(unsigned char *)(v208 + 8);
                *(void *)unint64_t v207 = v209;
                *(unsigned char *)(v207 + 9) = *(unsigned char *)(v208 + 9);
                unint64_t v210 = (v207 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v211 = (v208 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                LODWORD(v202) = *(_DWORD *)v211;
                *(unsigned char *)(v210 + 4) = *(unsigned char *)(v211 + 4);
                *(_DWORD *)unint64_t v210 = v202;
                *(_OWORD *)((v207 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v208 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v212 = v438 + v110;
                long long v213 = *(_OWORD *)(v438 + v111 + 112);
                long long v215 = *(_OWORD *)(v438 + v111 + 64);
                long long v214 = *(_OWORD *)(v438 + v111 + 80);
                *(_OWORD *)(v212 + 96) = *(_OWORD *)(v438 + v111 + 96);
                *(_OWORD *)(v212 + 112) = v213;
                *(_OWORD *)(v212 + 64) = v215;
                *(_OWORD *)(v212 + 80) = v214;
                long long v216 = *(_OWORD *)(v438 + v111 + 176);
                long long v218 = *(_OWORD *)(v438 + v111 + 128);
                long long v217 = *(_OWORD *)(v438 + v111 + 144);
                *(_OWORD *)(v212 + 160) = *(_OWORD *)(v438 + v111 + 160);
                *(_OWORD *)(v212 + 176) = v216;
                *(_OWORD *)(v212 + 128) = v218;
                *(_OWORD *)(v212 + 144) = v217;
                long long v220 = *(_OWORD *)(v438 + v111 + 208);
                long long v219 = *(_OWORD *)(v438 + v111 + 224);
                long long v221 = *(_OWORD *)(v438 + v111 + 192);
                *(void *)(v212 + 240) = *(void *)(v438 + v111 + 240);
                *(_OWORD *)(v212 + 208) = v220;
                *(_OWORD *)(v212 + 224) = v219;
                *(_OWORD *)(v212 + 192) = v221;
                long long v222 = *(_OWORD *)(v438 + v111);
                long long v223 = *(_OWORD *)(v438 + v111 + 16);
                long long v224 = *(_OWORD *)(v438 + v111 + 48);
                *(_OWORD *)(v212 + 32) = *(_OWORD *)(v438 + v111 + 32);
                *(_OWORD *)(v212 + 48) = v224;
                *(_OWORD *)unint64_t v212 = v222;
                *(_OWORD *)(v212 + 16) = v223;
                uint64_t v225 = (_OWORD *)((v438 + v110 + 255) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v226 = (long long *)((v438 + v111 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v227 = *v226;
                *(_OWORD *)((char *)v225 + 9) = *(long long *)((char *)v226 + 9);
                *uint64_t v225 = v227;
                unint64_t v228 = (v438 + v110 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v229 = (v438 + v111 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v230 = *(_OWORD *)v229;
                *(unsigned char *)(v228 + 16) = *(unsigned char *)(v229 + 16);
                *(_OWORD *)unint64_t v228 = v230;
                unint64_t v231 = (void *)((v438 + v110 + 311) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v232 = (void *)((v438 + v111 + 311) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v231 = *v232;
                *(_OWORD *)(((unint64_t)v231 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v232
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v233 = (unint64_t)&v2[v393] & v392;
                unint64_t v234 = *(void (**)(unint64_t, unint64_t, uint64_t))(v417 + 32);
                v234(v233, (unint64_t)&a2[v393] & v392, v418);
                unint64_t v447 = (unint64_t)&a2[v393] & v392;
                unint64_t v235 = (v413 + v447) & v411;
                v234((v413 + v233) & v411, v235, v418);
                unint64_t v236 = (v414 + ((v413 + v233) & v411)) & v412;
                unint64_t v237 = (v414 + v235) & v412;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v419 + 32))(v236, v237, v421);
                long long v238 = (void *)((v415 + v236) & 0xFFFFFFFFFFFFFFF8);
                long long v239 = (void *)((v415 + v237) & 0xFFFFFFFFFFFFFFF8);
                *long long v238 = *v239;
                unint64_t v240 = ((unint64_t)v238 + v416) & v426;
                unint64_t v241 = ((unint64_t)v239 + v416) & v426;
                (*(void (**)(unint64_t, unint64_t, uint64_t))(v423 + 32))(v240, v241, v424);
                long long v242 = (void *)((v420 + v240) & 0xFFFFFFFFFFFFFFF8);
                long long v243 = (void *)((v420 + v241) & 0xFFFFFFFFFFFFFFF8);
                void *v242 = *v243;
                *(_OWORD *)(((unint64_t)v242 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v243
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                *(_OWORD *)(v236 + v422) = *(_OWORD *)(v237 + v422);
                unint64_t v244 = (v452 + v236 + v422) & v442;
                unint64_t v245 = (v452 + v237 + v422) & v442;
                *(unsigned char *)unint64_t v244 = *(unsigned char *)v245;
                uint64_t v246 = v244 | 4;
                int v247 = *(_DWORD *)(v245 | 4);
                *(unsigned char *)(v246 + 4) = *(unsigned char *)((v245 | 4) + 4);
                *(_DWORD *)uint64_t v246 = v247;
                *(_WORD *)(v244 + 10) = *(_WORD *)(v245 + 0xA);
                v114((v443 + v244) & v39, (v443 + v245) & v39, v115);
                unint64_t v248 = (v439 + ((v443 + v244) & v39)) & v39;
                unint64_t v249 = (v439 + ((v443 + v245) & v39)) & v39;
                v114(v248, v249, v115);
                long long v250 = (unsigned char *)(v248 + v410);
                *long long v250 = *(unsigned char *)(v249 + v410);
                v250[1] = *(unsigned char *)(v249 + v410 + 1);
                v250[2] = *(unsigned char *)(v249 + v410 + 2);
                v250[3] = *(unsigned char *)(v249 + v410 + 3);
                v250[4] = *(unsigned char *)(v249 + v410 + 4);
                unint64_t v251 = (v248 + v410 + 12) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v252 = (v249 + v410 + 12) & 0xFFFFFFFFFFFFFFF8;
                *(_OWORD *)unint64_t v251 = *(_OWORD *)v252;
                *(unsigned char *)(v251 + 16) = *(unsigned char *)(v252 + 16);
                *(unsigned char *)(v251 + 17) = *(unsigned char *)(v252 + 17);
                *(unsigned char *)(v251 + 18) = *(unsigned char *)(v252 + 18);
                *(unsigned char *)(v251 + 19) = *(unsigned char *)(v252 + 19);
                unint64_t v253 = (v251 + 27) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v254 = (v252 + 27) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v253 = *(void *)v254;
                *(unsigned char *)(v253 + 8) = *(unsigned char *)(v254 + 8);
                *(unsigned char *)(v253 + 9) = *(unsigned char *)(v254 + 9);
                *(unsigned char *)(v253 + 10) = *(unsigned char *)(v254 + 10);
                *(unsigned char *)(v253 + 11) = *(unsigned char *)(v254 + 11);
                *(unsigned char *)(v253 + 12) = *(unsigned char *)(v254 + 12);
                long long v255 = (void *)((v251 + 47) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v256 = (void *)((v252 + 47) & 0xFFFFFFFFFFFFFFF8);
                void *v255 = *v256;
                unint64_t v257 = ((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v258 = ((unint64_t)v256 + 15) & 0xFFFFFFFFFFFFFFF8;
                *(void *)unint64_t v257 = *(void *)v258;
                *(unsigned char *)(v257 + 8) = *(unsigned char *)(v258 + 8);
                *(unsigned char *)(v257 + 9) = *(unsigned char *)(v258 + 9);
                unint64_t v259 = (void *)((v436 + v257) & v39);
                uint64_t v260 = (const void *)((v436 + v258) & v39);
                if (v450(v260, 1, v115))
                {
                  memcpy(v259, v260, __n);
                }
                else
                {
                  v114((unint64_t)v259, (unint64_t)v260, v115);
                  (*(void (**)(void *, void, uint64_t, uint64_t))(v430 + 56))(v259, 0, 1, v115);
                }
                uint64_t v2 = (char *)v448;
                char v159 = 0;
                unint64_t v261 = (void *)(((unint64_t)v259 + v437) & 0xFFFFFFFFFFFFFFF8);
                size_t v262 = (void *)(((unint64_t)v260 + v437) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v261 = *v262;
                unint64_t v263 = ((unint64_t)v261 + 15) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v264 = ((unint64_t)v262 + 15) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v265 = *(void *)v264;
                *(unsigned char *)(v263 + 8) = *(unsigned char *)(v264 + 8);
                *(void *)unint64_t v263 = v265;
                unint64_t v266 = (void *)(((unint64_t)v261 + 31) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v267 = (void *)(((unint64_t)v262 + 31) & 0xFFFFFFFFFFFFFFF8);
                void *v266 = *v267;
                unint64_t v268 = (_OWORD *)(((unint64_t)v266 + 15) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v269 = (_OWORD *)(((unint64_t)v267 + 15) & 0xFFFFFFFFFFFFFFF8);
                *unint64_t v268 = *v269;
                unint64_t v270 = ((unint64_t)v268 + 19) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v271 = ((unint64_t)v269 + 19) & 0xFFFFFFFFFFFFFFF8;
                uint64_t v272 = *(void *)v271;
                *(unsigned char *)(v270 + 8) = *(unsigned char *)(v271 + 8);
                *(void *)unint64_t v270 = v272;
                *(unsigned char *)(v270 + 9) = *(unsigned char *)(v271 + 9);
                unint64_t v273 = (v270 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                unint64_t v274 = (v271 + 13) & 0xFFFFFFFFFFFFFFFCLL;
                LODWORD(v265) = *(_DWORD *)v274;
                *(unsigned char *)(v273 + 4) = *(unsigned char *)(v274 + 4);
                *(_DWORD *)unint64_t v273 = v265;
                *(_OWORD *)((v270 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v271 + 25) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v275 = v244 + v438;
                long long v276 = *(_OWORD *)(v245 + v438 + 112);
                long long v278 = *(_OWORD *)(v245 + v438 + 64);
                long long v277 = *(_OWORD *)(v245 + v438 + 80);
                *(_OWORD *)(v275 + 96) = *(_OWORD *)(v245 + v438 + 96);
                *(_OWORD *)(v275 + 112) = v276;
                *(_OWORD *)(v275 + 64) = v278;
                *(_OWORD *)(v275 + 80) = v277;
                long long v279 = *(_OWORD *)(v245 + v438 + 176);
                long long v281 = *(_OWORD *)(v245 + v438 + 128);
                long long v280 = *(_OWORD *)(v245 + v438 + 144);
                *(_OWORD *)(v275 + 160) = *(_OWORD *)(v245 + v438 + 160);
                *(_OWORD *)(v275 + 176) = v279;
                *(_OWORD *)(v275 + 128) = v281;
                *(_OWORD *)(v275 + 144) = v280;
                long long v283 = *(_OWORD *)(v245 + v438 + 208);
                long long v282 = *(_OWORD *)(v245 + v438 + 224);
                long long v284 = *(_OWORD *)(v245 + v438 + 192);
                *(void *)(v275 + 240) = *(void *)(v245 + v438 + 240);
                *(_OWORD *)(v275 + 208) = v283;
                *(_OWORD *)(v275 + 224) = v282;
                *(_OWORD *)(v275 + 192) = v284;
                long long v285 = *(_OWORD *)(v245 + v438);
                long long v286 = *(_OWORD *)(v245 + v438 + 16);
                long long v287 = *(_OWORD *)(v245 + v438 + 48);
                *(_OWORD *)(v275 + 32) = *(_OWORD *)(v245 + v438 + 32);
                *(_OWORD *)(v275 + 48) = v287;
                *(_OWORD *)unint64_t v275 = v285;
                *(_OWORD *)(v275 + 16) = v286;
                unint64_t v288 = (_OWORD *)((v244 + v438 + 255) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v289 = (long long *)((v245 + v438 + 255) & 0xFFFFFFFFFFFFFFF8);
                long long v290 = *v289;
                *(_OWORD *)((char *)v288 + 9) = *(long long *)((char *)v289 + 9);
                *unint64_t v288 = v290;
                unint64_t v291 = (v244 + v438 + 287) & 0xFFFFFFFFFFFFFFF8;
                unint64_t v292 = (v245 + v438 + 287) & 0xFFFFFFFFFFFFFFF8;
                long long v293 = *(_OWORD *)v292;
                *(unsigned char *)(v291 + 16) = *(unsigned char *)(v292 + 16);
                *(_OWORD *)unint64_t v291 = v293;
                uint64_t v294 = (void *)((v244 + v438 + 311) & 0xFFFFFFFFFFFFFFF8);
                unint64_t v295 = (void *)((v245 + v438 + 311) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v294 = *v295;
                *(_OWORD *)(((unint64_t)v294 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v295
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v296 = (void *)((v233 + v386) & 0xFFFFFFFFFFFFFFF8);
                int v297 = (void *)((v447 + v386) & 0xFFFFFFFFFFFFFFF8);
                *uint64_t v296 = *v297;
                *(_OWORD *)(((unint64_t)v296 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v297
                                                                                               + 15) & 0xFFFFFFFFFFFFFFF8);
                uint64_t v34 = v398;
                goto LABEL_149;
            }
          }
          unint64_t v68 = (v443 + ((v452 + v298) & v442)) & v39;
          if (v431 <= 0x7FFFFFFD)
          {
            unint64_t v303 = *(void *)(((v409 + ((v439 + v68) & v39)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_138:
            if (v303 >= 0xFFFFFFFF) {
              LODWORD(v303) = -1;
            }
            if ((v303 + 1) < 2) {
              goto LABEL_58;
            }
            goto LABEL_69;
          }
          int v67 = *(uint64_t (**)(unint64_t))(v430 + 48);
        }
LABEL_56:
        int v69 = v67(v68);
        unint64_t v66 = ((unint64_t)v448 + v390) & v388;
        if (v69) {
          goto LABEL_69;
        }
        goto LABEL_57;
      case 2u:
        uint64_t v397 = ~v18;
        unint64_t v385 = v27 + 16;
        unint64_t v83 = *(void (**)(_DWORD *, uint64_t))(v417 + 8);
        v83((char *)v448, v418);
        v83((_DWORD *)(((unint64_t)v448 + v413) & v411), v418);
        unint64_t v84 = (v414 + (((unint64_t)v448 + v413) & v411)) & v412;
        (*(void (**)(unint64_t, uint64_t))(v419 + 8))(v84, v421);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v423 + 8))((v416 + ((v415 + v84) & 0xFFFFFFFFFFFFFFF8)) & v426, v424);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v85 = (v452 + v422 + v84) & v442;
        unint64_t v86 = (v443 + v85) & v39;
        uint64_t v87 = v39;
        int v88 = *(void (**)(unint64_t, uint64_t))(v430 + 8);
        v88(v86, v446);
        unint64_t v89 = (v439 + v86) & v87;
        v88(v89, v446);
        swift_bridgeObjectRelease();
        uint64_t v90 = v87;
        unint64_t v91 = (v436
             + ((((((v409 + v89) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v87;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v430 + 48))(v91, 1, v446)) {
          v88(v91, v446);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v92 = (uint64_t *)((((((v437 + v91) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v93 = v92[1];
        if ((v93 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v92, v93);
        }
        swift_bridgeObjectRelease();
        unint64_t v94 = v85 + v438;
        uint64_t v95 = *(void **)(v94 + 16);
        LODWORD(v96) = -1;
        if ((unint64_t)v95 < 0xFFFFFFFF) {
          uint64_t v96 = *(void *)(v94 + 16);
        }
        uint64_t v39 = v90;
        unint64_t v40 = v385;
        uint64_t v41 = AssociatedTypeWitness;
        uint64_t v25 = v444;
        uint64_t v38 = v397;
        uint64_t v36 = v34 & 0xFFFFFFF8;
        if ((int)v96 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v94 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v94 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v94 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        goto LABEL_81;
      case 3u:
        goto LABEL_81;
      default:
        uint64_t v42 = *(void (**)(_DWORD *, uint64_t))(v444 + 8);
        v42((char *)v448, AssociatedTypeWitness);
        uint64_t v395 = v38;
        v42((_DWORD *)(((unint64_t)v448 + v429) & v38), AssociatedTypeWitness);
        unint64_t v43 = ((((unint64_t)v448 + v429) & v38) + v434 + v449) & v428;
        (*(void (**)(unint64_t, uint64_t))(v445 + 8))(v43, v407);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v440 + 8))((v404 + ((v406 + v43) & 0xFFFFFFFFFFFFFFF8)) & v403, v405);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v44 = (v452 + v408 + v43) & v442;
        unint64_t v45 = (v443 + v44) & v39;
        uint64_t v46 = *(void (**)(unint64_t, uint64_t))(v430 + 8);
        v46(v45, v446);
        unint64_t v47 = (v439 + v45) & v39;
        v46(v47, v446);
        swift_bridgeObjectRelease();
        unint64_t v48 = (v436
             + ((((((v409 + v47) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v39;
        uint64_t v384 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v430 + 48);
        if (!v384(v48, 1, v446)) {
          v46(v48, v446);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v49 = (uint64_t *)((((((v437 + v48) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v50 = v49[1];
        if ((v50 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v49, v50);
        }
        swift_bridgeObjectRelease();
        unint64_t v51 = v438 + v44;
        uint64_t v52 = *(void **)(v51 + 16);
        LODWORD(v53) = -1;
        if ((unint64_t)v52 < 0xFFFFFFFF) {
          uint64_t v53 = *(void *)(v51 + 16);
        }
        if ((int)v53 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v51 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v51 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v51 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v54 = *(void (**)(unint64_t, uint64_t))(v417 + 8);
        v54(((unint64_t)v448 + v393) & v392, v418);
        unint64_t v55 = (v413 + (((unint64_t)v448 + v393) & v392)) & v411;
        v54(v55, v418);
        unint64_t v56 = (v414 + v55) & v412;
        (*(void (**)(unint64_t, uint64_t))(v419 + 8))(v56, v421);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v423 + 8))((v416 + ((v415 + v56) & 0xFFFFFFFFFFFFFFF8)) & v426, v424);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v57 = (v452 + v56 + v422) & v442;
        v46((v443 + v57) & v39, v446);
        unint64_t v58 = (v439 + ((v443 + v57) & v39)) & v39;
        v46(v58, v446);
        swift_bridgeObjectRelease();
        unint64_t v59 = (v436
             + ((((((v409 + v58) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v39;
        if (!v384(v59, 1, v446)) {
          v46(v59, v446);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v60 = (uint64_t *)((((((v437 + v59) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v61 = v60[1];
        uint64_t v36 = v34 & 0xFFFFFFF8;
        if ((v61 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v60, v61);
        }
        swift_bridgeObjectRelease();
        unint64_t v62 = v57 + v438;
        unint64_t v63 = *(void **)(v62 + 16);
        LODWORD(v64) = -1;
        if ((unint64_t)v63 < 0xFFFFFFFF) {
          uint64_t v64 = *(void *)(v62 + 16);
        }
        uint64_t v2 = (char *)v448;
        uint64_t v38 = v395;
        uint64_t v41 = AssociatedTypeWitness;
        if ((int)v64 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v62 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v62 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v62 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        uint64_t v25 = v444;
        goto LABEL_81;
    }
  }
  return v2;
}

uint64_t sub_24D9758F4(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v39 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v40 = *(void *)(v2 + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v37 = v4 | v6 | 7;
  unint64_t v7 = (((*(void *)(v5 + 64) + ((v6 + ((*(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  unint64_t v35 = *(_DWORD *)(v8 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v36 = (((((v40 + v39) & ~v39) + v40 + v37) & ~v37) + v9 + 16 + v7 + 16) & v35;
  uint64_t v10 = *(void *)(v8 + 64);
  int v34 = *(_DWORD *)(v8 + 84);
  uint64_t v11 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  LODWORD(v7) = *(_DWORD *)(v13 + 80);
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  unint64_t v16 = v7 & 0xF8 | v15 | 7;
  unint64_t v17 = v12 | v9 | v16;
  unint64_t v18 = (((((*(void *)(v11 + 64) + v12) & ~v12) + *(void *)(v11 + 64) + v16) & ~v16)
       + v9
       + 16
       + ((((*(void *)(v14 + 64) + ((v15 + ((*(void *)(v13 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v15) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & v35;
  if (v34) {
    uint64_t v19 = v10;
  }
  else {
    uint64_t v19 = v10 + 1;
  }
  unint64_t v20 = ((((((((((v19
                + ((v9
                  + ((((((v10 + ((v10 + v9 + ((v9 + 12) & ~v9)) & ~v9) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v9)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v21 = ((((v20 + v36) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v22 = (v20 + v18) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = ((v21 + (((v37 | v39 | v9) + v40) & ~(v37 | v39 | v9))) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v23 <= ((((((v21 + v17) & ~v17) + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    unint64_t v23 = ((((((v21 + v17) & ~v17) + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  unint64_t v24 = ((v22 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v24 <= v23) {
    unint64_t v24 = v23;
  }
  if (v24 <= 0x10) {
    unint64_t v24 = 16;
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_30;
  }
  uint64_t v25 = v24 | 1;
  char v26 = 8 * (v24 | 1);
  if ((v24 | 1) <= 3)
  {
    unsigned int v29 = (a2 + ~(-1 << v26) - 252) >> v26;
    if (v29 > 0xFFFE)
    {
      int v27 = *(_DWORD *)((char *)a1 + v25);
      if (!v27) {
        goto LABEL_30;
      }
      goto LABEL_21;
    }
    if (v29 > 0xFE)
    {
      int v27 = *(unsigned __int16 *)((char *)a1 + v25);
      if (!*(unsigned __int16 *)((char *)a1 + v25)) {
        goto LABEL_30;
      }
      goto LABEL_21;
    }
    if (!v29)
    {
LABEL_30:
      unsigned int v32 = *((unsigned __int8 *)a1 + v24);
      if (v32 >= 4) {
        return (v32 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v27 = *((unsigned __int8 *)a1 + v25);
  if (!*((unsigned char *)a1 + v25)) {
    goto LABEL_30;
  }
LABEL_21:
  int v30 = (v27 - 1) << v26;
  if (v25 > 3)
  {
    int v30 = 0;
    LODWORD(v25) = 4;
  }
  switch((int)v25)
  {
    case 2:
      int v31 = *a1;
      break;
    case 3:
      int v31 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
      break;
    case 4:
      int v31 = *(_DWORD *)a1;
      break;
    default:
      int v31 = *(unsigned __int8 *)a1;
      break;
  }
  return (v31 | v30) + 253;
}

void sub_24D975EF4(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v38 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v39 = *(void *)(v3 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v36 = v5 | v7 | 7;
  unint64_t v8 = (((*(void *)(v6 + 64) + ((v7 + ((*(void *)(v4 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  unint64_t v35 = *(_DWORD *)(v9 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(void *)(v9 + 64);
  int v34 = *(_DWORD *)(v9 + 84);
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v15 = *(_DWORD *)(v14 + 80);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v15 & 0xF8 | v17 | 7;
  uint64_t v19 = v13 | v10 | v18;
  unint64_t v20 = (((((*(void *)(v12 + 64) + v13) & ~v13) + *(void *)(v12 + 64) + v18) & ~v18)
       + v10
       + 16
       + ((((*(void *)(v16 + 64) + ((v17 + ((*(void *)(v14 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16) & v35;
  if (v34) {
    uint64_t v21 = v11;
  }
  else {
    uint64_t v21 = v11 + 1;
  }
  unint64_t v22 = ((((((((((v21
                + ((v10
                  + ((((((v11 + ((v11 + v10 + ((v10 + 12) & ~v10)) & ~v10) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v10)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v23 = ((((v22 + ((((((v39 + v38) & ~v38) + v39 + v36) & ~v36) + v10 + 16 + v8 + 16) & v35)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v24 = (v22 + v20) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = ((v23 + (((v36 | v38 | v10) + v39) & ~(v36 | v38 | v10))) & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v25 <= ((((((v23 + v19) & ~v19) + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16)
    unint64_t v25 = ((((((v23 + v19) & ~v19) + ((v24 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
  unint64_t v26 = ((v24 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v26 <= v25) {
    unint64_t v26 = v25;
  }
  if (v26 <= 0x10) {
    unint64_t v26 = 16;
  }
  size_t v27 = v26 | 1;
  if (a3 < 0xFD)
  {
    int v29 = 0;
    unint64_t v28 = a1;
  }
  else
  {
    unint64_t v28 = a1;
    if (v27 <= 3)
    {
      unsigned int v32 = (a3 + ~(-1 << (8 * v27)) - 252) >> (8 * v27);
      if (v32 > 0xFFFE)
      {
        int v29 = 4;
      }
      else if (v32 >= 0xFF)
      {
        int v29 = 2;
      }
      else
      {
        int v29 = v32 != 0;
      }
    }
    else
    {
      int v29 = 1;
    }
  }
  if (a2 > 0xFC)
  {
    unsigned int v30 = a2 - 253;
    if (v27 < 4)
    {
      int v31 = (v30 >> (8 * v27)) + 1;
      int v33 = v30 & ~(-1 << (8 * v27));
      bzero(v28, v27);
      if (v27 == 1)
      {
        unsigned char *v28 = v33;
      }
      else
      {
        *(_WORD *)unint64_t v28 = v33;
        void v28[2] = BYTE2(v33);
      }
    }
    else
    {
      bzero(v28, v26 | 1);
      *(_DWORD *)unint64_t v28 = v30;
      int v31 = 1;
    }
    switch(v29)
    {
      case 1:
        v28[v27] = v31;
        break;
      case 2:
        *(_WORD *)&v28[v27] = v31;
        break;
      case 3:
LABEL_38:
        __break(1u);
        JUMPOUT(0x24D976560);
      case 4:
        *(_DWORD *)&v28[v27] = v31;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v29)
    {
      case 1:
        v28[v27] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      case 2:
        *(_WORD *)&v28[v27] = 0;
        goto LABEL_27;
      case 3:
        goto LABEL_38;
      case 4:
        *(_DWORD *)&v28[v27] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_28;
      default:
LABEL_27:
        if (a2) {
LABEL_28:
        }
          v28[v26] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_24D976588(_DWORD *a1)
{
  uint64_t v1 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v28 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v29 = *(void *)(v1 + 64);
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v3 = *(_DWORD *)(v2 + 80) & 0xF8;
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v27 = v3 | v5 | 7;
  unint64_t v6 = (((*(void *)(v4 + 64) + ((v5 + ((*(void *)(v2 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v5) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v8 = *(_DWORD *)(v7 + 80);
  unint64_t v26 = *(_DWORD *)(v7 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v7 + 64);
  if (*(_DWORD *)(v7 + 84)) {
    uint64_t v10 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v10 = v9 + 1;
  }
  unint64_t v11 = ((((((((((v10
                + ((v8
                  + ((((((v9 + ((v9 + v8 + ((v8 + 12) & ~v8)) & ~v8) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v8)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v25 = ((((v11 + ((((((v29 + v28) & ~v28) + v29 + v27) & ~v27) + v8 + 16 + v6 + 16) & v26)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v12 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v13 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v15 = *(_DWORD *)(v14 + 80) & 0xF8;
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v15 | v17 | 7;
  unint64_t v19 = (v11
       + ((((((*(void *)(v12 + 64) + v13) & ~v13) + *(void *)(v12 + 64) + v18) & ~v18)
         + v8
         + 16
         + ((((*(void *)(v16 + 64) + ((v17 + ((*(void *)(v14 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & v26)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = ((((((v25 + (v13 | v8 | v18)) & ~(v13 | v8 | v18)) + ((v19 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (((v25 + (((v27 | v28 | v8) + v29) & ~(v27 | v28 | v8))) & 0xFFFFFFFFFFFFFFF8) + 24 > v20) {
    unint64_t v20 = ((v25 + (((v27 | v28 | v8) + v29) & ~(v27 | v28 | v8))) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v21 = ((v19 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v21 <= v20) {
    unint64_t v21 = v20;
  }
  if (v21 <= 0x10) {
    unint64_t v21 = 16;
  }
  uint64_t result = *((unsigned __int8 *)a1 + v21);
  uint64_t v23 = v21 & 0xFFFFFFF8;
  if (result >= 4 && v23 != 0) {
    return (*a1 + 4);
  }
  return result;
}

void sub_24D976A8C(_DWORD *a1, unsigned int a2)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v28 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v29 = *(void *)(v2 + 64);
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v27 = v4 | v6 | 7;
  unint64_t v7 = (((*(void *)(v5 + 64) + ((v6 + ((*(void *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6) + 7) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  unint64_t v26 = *(_DWORD *)(v8 + 80) & 0xF8 ^ 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = (((((v29 + v28) & ~v28) + v29 + v27) & ~v27) + v9 + 16 + v7 + 16) & v26;
  uint64_t v11 = *(void *)(v8 + 64);
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v12 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v12 = v11 + 1;
  }
  unint64_t v13 = ((((((((((v12
                + ((v9
                  + ((((((v11 + ((v11 + v9 + ((v9 + 12) & ~v9)) & ~v9) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)
                  + 10) & ~v9)
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 327;
  unint64_t v25 = ((((v13 + v10) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v14 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  uint64_t v16 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  int v17 = *(_DWORD *)(v16 + 80) & 0xF8;
  uint64_t v18 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v19 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = v17 | v19 | 7;
  unint64_t v21 = (v13
       + ((((((*(void *)(v14 + 64) + v15) & ~v15) + *(void *)(v14 + 64) + v20) & ~v20)
         + v9
         + 16
         + ((((*(void *)(v18 + 64) + ((v19 + ((*(void *)(v16 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v19) + 7) & 0xFFFFFFFFFFFFFFF8)
           + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16) & v26)) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = ((((((v25 + (v15 | v9 | v20)) & ~(v15 | v9 | v20)) + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (((v25 + (((v27 | v28 | v9) + v29) & ~(v27 | v28 | v9))) & 0xFFFFFFFFFFFFFFF8) + 24 > v22) {
    unint64_t v22 = ((v25 + (((v27 | v28 | v9) + v29) & ~(v27 | v28 | v9))) & 0xFFFFFFFFFFFFFFF8) + 24;
  }
  unint64_t v23 = ((v21 + 39) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v23 <= v22) {
    unint64_t v23 = v22;
  }
  if (v23 <= 0x10) {
    size_t v24 = 16;
  }
  else {
    size_t v24 = v23;
  }
  if (a2 > 3)
  {
    *((unsigned char *)a1 + v24) = 4;
    bzero(a1, v24);
    *a1 = a2 - 4;
  }
  else
  {
    *((unsigned char *)a1 + v24) = a2;
  }
}

uint64_t type metadata accessor for ItemChange()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D976FBC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v38 = (char *)&v35 - v5;
  uint64_t v6 = type metadata accessor for SnapshotItem();
  uint64_t v40 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v35 - v10;
  uint64_t v11 = type metadata accessor for SnapshotItem();
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v16, v2, a1);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 1:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v35 - 32, "  isRecursive reason ");
      uint64_t v41 = AssociatedTypeWitness;
      uint64_t v35 = v11;
      uint64_t v42 = sub_24DCCA3F8();
      unint64_t v43 = (ValueMetadata *)MEMORY[0x263F8D4F8];
      uint64_t v44 = MEMORY[0x263F8D310];
      uint64_t TupleTypeMetadata = swift_getTupleTypeMetadata();
      uint64_t v40 = *(void *)&v16[*(int *)(TupleTypeMetadata + 80)];
      uint64_t v29 = v38;
      uint64_t v30 = v39;
      (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v38, v16, AssociatedTypeWitness);
      uint64_t v41 = 0;
      uint64_t v42 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getAssociatedConformanceWitness();
      sub_24DCCADC8();
      int v31 = &v16[*(int *)(TupleTypeMetadata + 48)];
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v27 = v41;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v29, AssociatedTypeWitness);
      uint64_t v32 = sub_24DCCA3F8();
      (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
      break;
    case 2:
      swift_getTupleTypeMetadata3();
      uint64_t v33 = v40;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v9, v16, v6);
      uint64_t v41 = 0;
      uint64_t v42 = 0xE000000000000000;
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v33 + 8))(v9, v6);
      goto LABEL_6;
    case 3:
      uint64_t v41 = 0x79687728656E6F6ELL;
      uint64_t v42 = 0xE90000000000003ALL;
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
LABEL_6:
      uint64_t v27 = v41;
      break;
    default:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v35 - 48, "oldItem newItem diffs reason ");
      uint64_t v19 = v11;
      uint64_t v41 = v11;
      uint64_t v42 = v6;
      uint64_t v20 = v6;
      unint64_t v43 = &type metadata for Fields;
      uint64_t v44 = MEMORY[0x263F8D310];
      unint64_t v21 = (int *)swift_getTupleTypeMetadata();
      unint64_t v22 = &v16[v21[12]];
      uint64_t v23 = *(void *)&v16[v21[16]];
      uint64_t v39 = *(void *)&v16[v21[20]];
      uint64_t v24 = v36;
      (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v14, v16, v19);
      uint64_t v25 = v40;
      unint64_t v26 = v37;
      (*(void (**)(char *, char *, uint64_t))(v40 + 32))(v37, v22, v20);
      uint64_t v41 = 0;
      uint64_t v42 = 0xE000000000000000;
      sub_24DCCA728();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      swift_getWitnessTable();
      sub_24DCCADC8();
      sub_24DCC9968();
      sub_24D97C4E0(v23);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t v27 = v41;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v20);
      (*(void (**)(char *, uint64_t))(v24 + 8))(v14, v19);
      break;
  }
  return v27;
}

unint64_t sub_24D9778D4(unsigned __int8 a1)
{
  int v1 = a1 - 28;
  unint64_t result = 25705;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x695F746E65726170;
      break;
    case 2:
      unint64_t result = 0x656D616E656C6966;
      break;
    case 3:
      unint64_t result = 0x656C69665F736676;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    case 5:
      unint64_t result = 0x5F746E65746E6F63;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      sub_24DBBA7C4(105);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      unint64_t result = 0x617461646174656DLL;
      break;
  }
  return result;
}

uint64_t sub_24D977A3C(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      uint64_t result = sub_24DCCB008();
      break;
    default:
      sub_24DCCB008();
      sub_24DBBA7C4(a2);
      sub_24DCC98F8();
      uint64_t result = swift_bridgeObjectRelease();
      break;
  }
  return result;
}

uint64_t sub_24D977B2C(char a1)
{
  switch(a1)
  {
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      sub_24DCCB008();
      break;
    default:
      sub_24DCCB008();
      sub_24DBBA7C4(a1);
      sub_24DCC98F8();
      swift_bridgeObjectRelease();
      break;
  }
  return sub_24DCCB048();
}

uint64_t sub_24D977C40()
{
  return sub_24D977B2C(*v0);
}

uint64_t sub_24D977C48(uint64_t a1)
{
  return sub_24D977A3C(a1, *v1);
}

uint64_t sub_24D977C50()
{
  int v1 = *v0;
  sub_24DCCAFF8();
  switch(v1)
  {
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      sub_24DCCB008();
      break;
    default:
      sub_24DCCB008();
      sub_24DBBA7C4(v1);
      sub_24DCC98F8();
      swift_bridgeObjectRelease();
      break;
  }
  return sub_24DCCB048();
}

unint64_t sub_24D977D5C()
{
  return sub_24D9778D4(*v0);
}

uint64_t sub_24D977D64(char *a1, char *a2)
{
  return sub_24D9797D0(*a1, *a2);
}

uint64_t sub_24D977D70()
{
  sub_24D786EC8();
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DC0);
  unint64_t v1 = sub_24D979938();
  sub_24D7854B0((void (*)(char *, char *))sub_24D3F2FA4, 0, v0, (uint64_t)&type metadata for SnapshotItemSQLFields, MEMORY[0x263F8E628], v1, MEMORY[0x263F8E658], v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = sub_24DCC9C88();
  swift_bridgeObjectRelease();
  uint64_t v6 = v3;
  swift_getAssociatedTypeWitness();
  if (swift_dynamicCastMetatype())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DE8);
    swift_getWitnessTable();
    sub_24DCC9CF8();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DE8);
    sub_24DCC9D08();
  }
  type metadata accessor for VFSItem(0);
  if (!swift_dynamicCastMetatype())
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DE8);
    swift_getWitnessTable();
    uint64_t v4 = sub_24DCCA7F8();
    swift_bridgeObjectRelease();
    uint64_t v6 = v4;
  }
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ItemStateVersion();
  if (!swift_dynamicCastMetatype())
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197DE8);
    sub_24DCC9D08();
  }
  return v6;
}

uint64_t sub_24D978024(unsigned __int8 *a1)
{
  int v1 = *a1;
  if ((v1 - 28) > 6)
  {
    if (sub_24DBBA7C4(v1) == 0x756F635F6B6E696CLL && v3 == 0xEA0000000000746ELL)
    {
      swift_bridgeObjectRelease();
      char v2 = 0;
    }
    else
    {
      char v5 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      char v2 = v5 ^ 1;
    }
  }
  else
  {
    char v2 = 1;
  }
  return v2 & 1;
}

uint64_t sub_24D9780DC(char a1, void *a2, int *a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v29 - v10;
  switch(a1)
  {
    case 28:
    case 29:
      swift_getAssociatedTypeWitness();
      uint64_t v12 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 32);
      uint64_t v14 = swift_checkMetadataState();
      return v13(a2, v14, v12);
    case 30:
      uint64_t v17 = (uint64_t *)(v3 + a3[11]);
      uint64_t v18 = *v17;
      uint64_t v19 = v17[1];
      uint64_t v32 = MEMORY[0x263F8D310];
      uint64_t v29 = v18;
      uint64_t v30 = v19;
      swift_bridgeObjectRetain_n();
      uint64_t v20 = sub_24D3E3EB4((uint64_t)&v29);
      uint64_t v22 = v21;
      sub_24D3E3E54((uint64_t)&v29);
      if (!v22)
      {
        sub_24DCCA978();
        __break(1u);
        JUMPOUT(0x24D978520);
      }
      swift_bridgeObjectRelease();
      return v20;
    case 31:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v3 + a3[10], AssociatedTypeWitness);
      swift_dynamicCast();
      uint64_t v23 = (void *)sub_24DCCB088();
      id v16 = objc_msgSend(a2, sel_bindObjectParameter_, v23);

      goto LABEL_7;
    case 32:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v3 + a3[10], AssociatedTypeWitness);
      swift_dynamicCast();
      id v16 = objc_msgSend(a2, sel_bindUnsignedIntegerParameter_, v30);
LABEL_7:
      uint64_t v20 = sub_24DCC97E8();

      return v20;
    case 33:
      uint64_t v24 = *(uint64_t (**)(void *, uint64_t))(*(void *)(swift_getAssociatedConformanceWitness() + 32) + 32);
      return v24(a2, AssociatedTypeWitness);
    case 34:
      uint64_t v25 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v27 = swift_getAssociatedConformanceWitness();
      uint64_t v29 = AssociatedTypeWitness;
      uint64_t v30 = v25;
      uint64_t v31 = AssociatedConformanceWitness;
      uint64_t v32 = v27;
      type metadata accessor for FileItemVersion();
      return (*(uint64_t (**)(void *, uint64_t))(*(void *)(v27 + 32) + 32))(a2, v25);
    default:
      uint64_t v20 = v3 + a3[12];
      uint64_t v15 = sub_24DBB8E00(a1, a2);
      if (v4) {
        return v20;
      }
      return v15;
  }
}

void sub_24D97853C(id a1@<X1>, char a2@<W0>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  switch(a2)
  {
    case 28:
    case 29:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      goto LABEL_9;
    case 30:
      a4[3] = (uint64_t)&type metadata for Filename;
      id v11 = objc_msgSend(a1, sel_stringAtIndex_, a3);
      uint64_t v12 = sub_24DCC97E8();
      uint64_t v14 = v13;

      *a4 = v12;
      a4[1] = v14;
      break;
    case 31:
      uint64_t v15 = (uint64_t)objc_msgSend(a1, sel_longLongAtIndex_, a3);
      a4[3] = MEMORY[0x263F8E970];
      if (v15 < 0)
      {
        sub_24DCCA968();
        __break(1u);
        JUMPOUT(0x24D9787E0);
      }
      *a4 = v15;
      break;
    case 32:
      unsigned int v10 = objc_msgSend(a1, sel_unsignedIntAtIndex_, a3);
      a4[3] = MEMORY[0x263F8E8F8];
      *(_DWORD *)a4 = v10;
      break;
    case 33:
    case 34:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v9 = *(void *)(swift_getAssociatedConformanceWitness() + 32);
LABEL_9:
      id v16 = *(void (**)(id, uint64_t, uint64_t, uint64_t))(v9 + 16);
      a4[3] = AssociatedTypeWitness;
      __swift_allocate_boxed_opaque_existential_0(a4);
      v16(a1, a3, AssociatedTypeWitness, v9);
      if (v4) {
        __swift_deallocate_boxed_opaque_existential_0((uint64_t)a4);
      }
      break;
    default:
      sub_24DBB94F4(a2, a1, a3, (uint64_t)a4);
      break;
  }
}

uint64_t sub_24D9787FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v125[33] = a1;
  uint64_t v90 = a6;
  uint64_t AssociatedTypeWitness = (ValueMetadata *)swift_getAssociatedTypeWitness();
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v120 = AssociatedTypeWitness;
  uint64_t v121 = v11;
  uint64_t v94 = swift_getAssociatedConformanceWitness();
  uint64_t v95 = AssociatedConformanceWitness;
  unint64_t v122 = AssociatedConformanceWitness;
  uint64_t v123 = v94;
  uint64_t v13 = type metadata accessor for FileItemVersion();
  uint64_t v92 = *(void *)(v13 - 8);
  uint64_t v93 = v13;
  MEMORY[0x270FA5388](v13);
  unint64_t v101 = (char *)v89 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v100 = *(void *)(v15 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v98 = (uint64_t)v89 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v102 = (uint64_t)v89 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v109 = (uint64_t)v89 - v20;
  v89[1] = a4;
  uint64_t v91 = a2;
  uint64_t v21 = swift_getAssociatedConformanceWitness();
  uint64_t v107 = v15;
  uint64_t v97 = v21;
  uint64_t v108 = type metadata accessor for ItemStateVersion();
  uint64_t v22 = MEMORY[0x270FA5388](v108);
  uint64_t v96 = (uint64_t)v89 - v23;
  uint64_t v113 = v11;
  uint64_t v104 = *(void *)(v11 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  unint64_t v105 = (char *)v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v99 = (char *)v89 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  unint64_t v103 = (char *)v89 - v29;
  unint64_t v116 = AssociatedTypeWitness;
  Description = (void (**)(char *, char *, void))AssociatedTypeWitness[-1].Description;
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v112 = (char *)v89 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  unint64_t v106 = (char *)v89 - v33;
  MEMORY[0x270FA5388](v32);
  unint64_t v110 = (char *)v89 - v34;
  unint64_t v35 = sub_24D979994();
  unint64_t v120 = &_s9SQLFieldsON_3;
  uint64_t v121 = a3;
  unint64_t v122 = v35;
  uint64_t v123 = a5;
  uint64_t v36 = type metadata accessor for SQLCodableAccessorWrapper();
  uint64_t v37 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)v89 - v38;
  uint64_t v40 = type metadata accessor for ItemMetadata();
  uint64_t v41 = MEMORY[0x270FA5388](v40 - 8);
  unint64_t v43 = (char *)v89 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)v89 - v44;
  uint64_t v115 = a3;
  uint64_t v114 = a5;
  sub_24DA6D8E4((uint64_t)sub_24D3F2FA4, 0, a3, (uint64_t)&_s9SQLFieldsON_3, a5, v35, (uint64_t)v39);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = (uint64_t)v117;
  sub_24DBB9B88(v36, WitnessTable, (uint64_t)v45);
  if (v47) {
    return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  }
  unint64_t v117 = v43;
  unint64_t v50 = v112;
  uint64_t v49 = v113;
  (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
  uint64_t v51 = (uint64_t)v116;
  uint64_t v52 = swift_dynamicCastMetatype();
  v89[0] = (uint64_t)v45;
  if (v52)
  {
    LOBYTE(v119) = 31;
    uint64_t v53 = MEMORY[0x263F8E970];
    uint64_t v55 = v114;
    uint64_t v54 = v115;
    sub_24D71B65C(v115, MEMORY[0x263F8E970]);
    sub_24DA6D460((uint64_t)&v119, v53, v54, v53, v55);
    uint64_t v56 = v124[0];
    char v118 = 32;
    uint64_t v57 = MEMORY[0x263F8E8F8];
    sub_24D71B65C(v54, MEMORY[0x263F8E8F8]);
    sub_24DA6D460((uint64_t)&v118, v57, v54, v57, v55);
    uint64_t v58 = v119;
    uint64_t v59 = (uint64_t)v117;
    sub_24D409F80(v89[0], (uint64_t)v117);
    unint64_t v120 = (ValueMetadata *)sub_24D3FCAB4(v56, v58, v59);
    LODWORD(v121) = v60;
    unint64_t v122 = v61;
    LOBYTE(v123) = v62 & 1;
    unint64_t v63 = v106;
    uint64_t v64 = v116;
    swift_dynamicCast();
    ((void (**)(char *, char *, ValueMetadata *))Description)[4](v110, v63, v64);
  }
  else
  {
    LOBYTE(v120) = 33;
    uint64_t v65 = v114;
    uint64_t v66 = v115;
    uint64_t v67 = sub_24D71B65C(v115, v51);
    sub_24DA6D460((uint64_t)&v120, v67, v66, v51, v65);
    Description[4](v110, v50, v51);
  }
  uint64_t v68 = v49;
  if (swift_dynamicCastMetatype())
  {
    LOBYTE(v120) = 29;
    uint64_t v69 = v114;
    uint64_t v70 = v115;
    sub_24DA6D460((uint64_t)&v120, v107, v115, v107, v114);
    LOBYTE(v124[0]) = 30;
    sub_24D71B65C(v70, (uint64_t)&type metadata for Filename);
    sub_24DA6D460((uint64_t)v124, (uint64_t)&type metadata for Filename, v70, (uint64_t)&type metadata for Filename, v69);
    uint64_t v74 = v107;
    sub_24D958F08(v109, (uint64_t)v120, v121, v107, v96);
    unint64_t v75 = v99;
    swift_dynamicCast();
  }
  else
  {
    LOBYTE(v120) = 34;
    uint64_t v71 = v114;
    uint64_t v72 = v115;
    uint64_t v73 = sub_24D71B65C(v115, v49);
    unint64_t v75 = v105;
    sub_24DA6D460((uint64_t)&v120, v73, v72, v68, v71);
    uint64_t v74 = v107;
  }
  (*(void (**)(char *, char *, uint64_t))(v104 + 32))(v103, v75, v68);
  LOBYTE(v120) = 28;
  uint64_t v77 = v114;
  uint64_t v76 = v115;
  uint64_t v78 = sub_24D71B65C(v115, v74);
  sub_24DA6D460((uint64_t)&v120, v78, v76, v74, v77);
  uint64_t v79 = (uint64_t)v101;
  LOBYTE(v120) = 29;
  sub_24DA6D460((uint64_t)&v120, v78, v115, v74, v77);
  uint64_t v80 = (uint64_t)v106;
  uint64_t v81 = (uint64_t)v116;
  ((void (**)(char *, char *, ValueMetadata *))Description)[2](v106, v110, v116);
  uint64_t v82 = (uint64_t)v99;
  (*(void (**)(char *, char *, uint64_t))(v104 + 16))(v99, v103, v68);
  sub_24DB33528(v80, 0, v82, 0, 0, 0, v81, v68, v79);
  LOBYTE(v119) = 30;
  uint64_t v83 = v115;
  sub_24D71B65C(v115, (uint64_t)&type metadata for Filename);
  sub_24DA6D460((uint64_t)&v119, (uint64_t)&type metadata for Filename, v83, (uint64_t)&type metadata for Filename, v77);
  uint64_t v84 = v124[0];
  uint64_t v85 = v124[1];
  uint64_t v86 = v89[0];
  uint64_t v87 = (uint64_t)v117;
  sub_24D409F80(v89[0], (uint64_t)v117);
  sub_24D414684((uint64_t)&v120);
  sub_24D5013B0((uint64_t)&v120, (uint64_t)v125);
  double v88 = sub_24D97CD94(v102, v98, v79, v84, v85, v87, (uint64_t)v125, v90);
  (*(void (**)(char *, uint64_t, double))(v104 + 8))(v103, v68, v88);
  ((void (*)(char *, ValueMetadata *))Description[1])(v110, v116);
  return sub_24D409FE4(v86);
}

uint64_t sub_24D9793D8(char *a1, void *a2, int *a3)
{
  return sub_24D9780DC(*a1, a2, a3);
}

void sub_24D9793F4(char *a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
}

uint64_t sub_24D979418@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_24D9787FC(a1, *(void *)(a4 + 16), a2, *(void *)(a4 + 24), a3, a5);
}

uint64_t sub_24D97943C(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_24D97947C()
{
  unint64_t result = qword_26B193460;
  if (!qword_26B193460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193460);
  }
  return result;
}

uint64_t sub_24D9794D0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D977D70();
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SnapshotItemSQLFields(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xDE)
  {
    unsigned int v2 = a2 + 34;
    if (a2 + 34 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 34;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 34;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D9795B0);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 34;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 0x1C) {
    unsigned int v8 = v7 - 27;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 8) {
    return v8 - 7;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for SnapshotItemSQLFields(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 34;
  if (a3 + 34 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xDE) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xDD)
  {
    unsigned int v7 = ((a2 - 222) >> 8) + 1;
    *uint64_t result = a2 + 34;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x24D979698);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 34;
        break;
    }
  }
  return result;
}

uint64_t sub_24D9796C0(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 0x1C) {
    return v1 - 27;
  }
  else {
    return 0;
  }
}

unsigned char *sub_24D9796D4(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 27;
  }
  return result;
}

ValueMetadata *type metadata accessor for SnapshotItemSQLFields()
{
  return &type metadata for SnapshotItemSQLFields;
}

unint64_t sub_24D9796F8()
{
  unint64_t result = qword_26B199808;
  if (!qword_26B199808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199808);
  }
  return result;
}

unint64_t sub_24D97974C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24D97977C();
  unint64_t result = sub_24D9048D8();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24D97977C()
{
  unint64_t result = qword_26B193458;
  if (!qword_26B193458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B193458);
  }
  return result;
}

uint64_t sub_24D9797D0(char a1, char a2)
{
  switch(a1)
  {
    case 28:
      if (a2 != 28) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 29:
      if (a2 == 29) {
        goto LABEL_9;
      }
      goto LABEL_15;
    case 30:
      if (a2 != 30) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 31:
      if (a2 != 31) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 32:
      if (a2 != 32) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 33:
      if (a2 != 33) {
        goto LABEL_15;
      }
      goto LABEL_9;
    case 34:
      if (a2 != 34) {
        goto LABEL_15;
      }
LABEL_9:
      uint64_t result = 1;
      break;
    default:
      if ((a2 - 28) < 7u)
      {
LABEL_15:
        uint64_t result = 0;
      }
      else
      {
        unint64_t v3 = sub_24DBBA7C4(a1);
        uint64_t v5 = v4;
        if (v3 == sub_24DBBA7C4(a2) && v5 == v6)
        {
          swift_bridgeObjectRelease_n();
          uint64_t result = 1;
        }
        else
        {
          char v8 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = v8 & 1;
        }
      }
      break;
  }
  return result;
}

unint64_t sub_24D979938()
{
  unint64_t result = qword_26986FD70;
  if (!qword_26986FD70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B197DC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FD70);
  }
  return result;
}

unint64_t sub_24D979994()
{
  unint64_t result = qword_26B1929D8;
  if (!qword_26B1929D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B1929D8);
  }
  return result;
}

uint64_t sub_24D9799E8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D979A30(uint64_t a1)
{
  *(void *)(swift_allocObject() + 16) = a1;
  return sub_24D580378();
}

uint64_t sub_24D979A6C(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return sub_24D580378();
}

unint64_t sub_24D979A74(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(v2 + 16);
  unint64_t v7 = sub_24D9882B4(a1);
  char v8 = *(uint64_t (**)(unint64_t, unint64_t))(*(void *)v6 + 128);
  swift_retain();
  unint64_t v9 = v7;
  uint64_t v10 = v4;
  uint64_t v11 = v8(v9, a2);
  swift_release();
  if (!v10)
  {
    a2 = sub_24D9882B4(v11);
    swift_retain();
    swift_release();
  }
  return a2;
}

uint64_t sub_24D979BBC(char a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = v1[2];
  if (a1 == 2) {
    uint64_t v5 = 2;
  }
  else {
    uint64_t v5 = (a1 & 1) == 0;
  }
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(*(void *)v4 + 144))(v5);
  if (!v2)
  {
    uint64_t v23 = v6;
    MEMORY[0x270FA5388](v6);
    uint64_t v7 = v3[69];
    uint64_t v15 = v3[68];
    uint64_t v16 = v7;
    uint64_t v8 = v3[71];
    uint64_t v17 = v3[70];
    uint64_t v18 = v8;
    type metadata accessor for SchedulableJob();
    uint64_t v9 = sub_24DCC9D48();
    uint64_t v19 = v15;
    uint64_t v20 = v7;
    uint64_t v21 = v17;
    uint64_t v22 = v8;
    uint64_t v10 = type metadata accessor for SchedulableJob();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v4 = sub_24D7854B0((void (*)(char *, char *))sub_24D97A868, (uint64_t)&v14, v9, v10, MEMORY[0x263F8E628], WitnessTable, MEMORY[0x263F8E658], v12);
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_24D979D5C(char a1, uint64_t a2, uint64_t a3, char a4)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, void))(**(void **)(v4 + 16) + 152))(a1 & 1, a2, a3, a4 & 1);
}

uint64_t sub_24D979DA8(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(**(void **)(v3 + 16) + 168))(a1, a2, a3 & 1);
}

uint64_t sub_24D979DF0(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(**(void **)(v3 + 16) + 160))(a1, a2, a3 & 1);
}

uint64_t sub_24D979E38()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 184))() & 1;
}

uint64_t sub_24D979E80()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 248))();
}

uint64_t sub_24D979EC4()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 256))();
}

uint64_t sub_24D979F10()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 216))() & 1;
}

uint64_t sub_24D979F58()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 208))() & 1;
}

uint64_t sub_24D979FA0()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 232))() & 1;
}

uint64_t sub_24D979FE8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 224))() & 1;
}

uint64_t sub_24D97A030()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 272))();
}

uint64_t sub_24D97A07C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 264))();
}

uint64_t sub_24D97A0C8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 288))() & 1;
}

uint64_t sub_24D97A118()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 280))() & 1;
}

uint64_t sub_24D97A168(uint64_t a1, char a2)
{
  return (*(uint64_t (**)(uint64_t, BOOL))(**(void **)(v2 + 16) + 240))(a1, (a2 & 1) == 0) & 1;
}

uint64_t sub_24D97A1B8(char a1)
{
  return (*(uint64_t (**)(BOOL))(**(void **)(v1 + 16) + 296))((a1 & 1) == 0) & 1;
}

uint64_t sub_24D97A210()
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 312))();
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_24D97A268()
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 304))();
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_24D97A2C0()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 320))() & 1;
}

uint64_t sub_24D97A310()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 328))() & 1;
}

uint64_t sub_24D97A360()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 344))();
}

uint64_t sub_24D97A3AC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 336))();
}

uint64_t sub_24D97A3F8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 360))();
}

uint64_t sub_24D97A444()
{
  return sub_24D97A4A8();
}

uint64_t sub_24D97A45C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 376))();
}

uint64_t sub_24D97A4A8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 352))();
}

uint64_t sub_24D97A4F4()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 392))();
}

uint64_t sub_24D97A540()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 384))();
}

uint64_t sub_24D97A58C()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 400))() & 1;
}

uint64_t sub_24D97A5DC()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 408))();
}

uint64_t sub_24D97A628(uint64_t a1, char a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(**(void **)(v2 + 16) + 432))(a1, a2 & 1);
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_24D97A688(uint64_t a1, char a2)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(**(void **)(v2 + 16) + 440))(a1, a2 & 1);
  if (v3) {
    return v5;
  }
  return result;
}

uint64_t sub_24D97A6E8()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 456))();
}

uint64_t sub_24D97A738()
{
  return (*(uint64_t (**)(void))(**(void **)(v0 + 16) + 448))();
}

uint64_t sub_24D97A788(char a1)
{
  return (*(uint64_t (**)(void))(**(void **)(v1 + 16) + 496))(a1 & 1);
}

uint64_t sub_24D97A7D8()
{
  uint64_t v0 = sub_24D580378();
  swift_release();
  return v0;
}

uint64_t sub_24D97A808()
{
  sub_24D580378();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SwappedJobRegistry()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D97A868@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_24D57EF08();
  *a1 = result;
  return result;
}

uint64_t sub_24D97A8A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D97A904(uint64_t a1)
{
  sub_24D97C4E0(a1);
  sub_24DCC9968();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D97A940(uint64_t a1)
{
  return sub_24D97A970(a1, (void (*)(void))sub_24D82C458);
}

uint64_t sub_24D97A958(uint64_t a1)
{
  return sub_24D97A970(a1, (void (*)(void))sub_24D82BF20);
}

uint64_t sub_24D97A970(uint64_t a1, void (*a2)(void))
{
  a2();
  sub_24DCC9968();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D97A9C4(int *a1)
{
  sub_24D5013B0(v1 + a1[13], (uint64_t)v29);
  sub_24D5013B0((uint64_t)v29, (uint64_t)v30);
  if (sub_24D3F0D40((uint64_t)v30) != 1)
  {
    long long v25 = v30[12];
    long long v26 = v30[13];
    long long v27 = v30[14];
    uint64_t v28 = v31;
    long long v21 = v30[8];
    long long v22 = v30[9];
    long long v23 = v30[10];
    long long v24 = v30[11];
    long long v17 = v30[4];
    long long v18 = v30[5];
    long long v19 = v30[6];
    long long v20 = v30[7];
    long long v13 = v30[0];
    long long v14 = v30[1];
    long long v15 = v30[2];
    long long v16 = v30[3];
    sub_24DA12208();
    strcpy((char *)v12, " nsattr:");
    BYTE1(v12[1]) = 0;
    WORD1(v12[1]) = 0;
    HIDWORD(v12[1]) = -402653184;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + a1[14] + 24) & 1) == 0)
  {
    sub_24DBB3EB4();
    v12[0] = 0x3A63657220;
    v12[1] = 0xE500000000000000;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  if ((*(unsigned char *)(v1 + a1[15] + 16) & 1) == 0)
  {
    sub_24DBB3FEC();
    v12[0] = 0x3A63657220;
    v12[1] = 0xE500000000000000;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  uint64_t v3 = *(void *)(v1 + a1[16]);
  if (v3)
  {
    strcpy((char *)v12, " unsupported:");
    HIWORD(v12[1]) = -4864;
    sub_24D97C4E0(v3);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
  }
  uint64_t v4 = (uint64_t *)(v1 + a1[17]);
  uint64_t v5 = *v4;
  unint64_t v6 = (unint64_t)v4[1] >> 62;
  if (!v6)
  {
    uint64_t v7 = 1852270888;
    goto LABEL_13;
  }
  if (v6 == 1)
  {
    uint64_t v7 = 1886221352;
LABEL_13:
    v12[0] = v7 & 0xFFFF0000FFFFFFFFLL | 0x3A00000000;
    sub_24D7CE9A0(v5);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_24D98BCC4((uint64_t)a1, WitnessTable);
  sub_24DCCA728();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  sub_24DCC9968();
  sub_24DCCADC8();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  uint64_t v9 = (void *)sub_24DCC97B8();
  id v10 = objc_msgSend(v9, sel_fp_obfuscatedFilename);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D4E6FA0();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for FileItemVersion();
  swift_getWitnessTable();
  sub_24DCCADC8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_24D97AFF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v47 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1);
  uint64_t v42 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v38 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v13 = (char *)&v37 - v12;
  long long v14 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v15 = a4 + v14[13];
  sub_24D414684((uint64_t)v49);
  uint64_t v44 = v15;
  sub_24D5013B0((uint64_t)v49, v15);
  uint64_t v16 = a4 + v14[14];
  *(void *)uint64_t v16 = 0;
  *(void *)(v16 + 8) = 0;
  *(void *)(v16 + 16) = 0;
  *(unsigned char *)(v16 + 24) = 1;
  unint64_t v43 = v14;
  uint64_t v17 = a4 + v14[15];
  *(void *)uint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  *(unsigned char *)(v17 + 16) = 1;
  long long v18 = *(void (**)(uint64_t, uint64_t))(a3 + 64);
  uint64_t v45 = a4;
  uint64_t v41 = a1;
  v18(a2, a3);
  v18(a2, a3);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  LOBYTE(a4) = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 72))(AssociatedTypeWitness, AssociatedConformanceWitness);
  long long v20 = *(void (**)(char *, uint64_t))(v46 + 8);
  uint64_t v39 = AssociatedTypeWitness;
  v46 += 8;
  v20(v13, AssociatedTypeWitness);
  uint64_t v21 = v41;
  long long v22 = v42;
  (*(void (**)(void))(v47 + 16))();
  uint64_t v40 = v18;
  if (a4)
  {
    long long v23 = *(void (**)(char *, uint64_t))(v47 + 8);
    v23(v22, a2);
  }
  else
  {
    uint64_t v37 = v20;
    long long v24 = v38;
    v18(a2, a3);
    uint64_t v25 = v39;
    char v26 = (*(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 64))(v39, AssociatedConformanceWitness);
    v37(v24, v25);
    long long v23 = *(void (**)(char *, uint64_t))(v47 + 8);
    v23(v22, a2);
    if ((v26 & 1) == 0)
    {
      uint64_t v28 = v43;
      uint64_t v27 = v45;
      (*(void (**)(uint64_t, uint64_t))(a3 + 72))(a2, a3);
      goto LABEL_6;
    }
  }
  uint64_t v27 = v45;
  uint64_t v28 = v43;
  v40(a2, a3);
LABEL_6:
  (*(void (**)(uint64_t, uint64_t))(a3 + 112))(a2, a3);
  uint64_t v29 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 80))(a2, a3);
  uint64_t v30 = (uint64_t *)(v27 + v28[11]);
  *uint64_t v30 = v29;
  v30[1] = v31;
  (*(void (**)(uint64_t, uint64_t))(a3 + 104))(a2, a3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a3 + 120))(v48, a2, a3);
  sub_24D733474((uint64_t)v48, v44);
  *(void *)(v27 + v28[16]) = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 136))(a2, a3);
  uint64_t v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 144))(a2, a3);
  uint64_t v34 = v33;
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v23)(v21, a2);
  uint64_t v36 = (uint64_t *)(v27 + v28[17]);
  *uint64_t v36 = v32;
  v36[1] = v34;
  return result;
}

unint64_t sub_24D97B4C8(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, 0, 0);
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40) {
        break;
      }
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      switch(v3)
      {
        case 1:
          unint64_t v6 = 0xEE00736567616B63;
          unint64_t v5 = 0x61705F7463697665;
          break;
        case 2:
          unint64_t v6 = 0x800000024DD0C6B0;
          unint64_t v5 = 0xD000000000000015;
          break;
        case 4:
          unint64_t v5 = 0xD00000000000001ALL;
          unint64_t v6 = 0x800000024DD0C690;
          break;
        default:
          goto LABEL_13;
      }
LABEL_14:
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_24D3E4C28(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
      if (!v1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
        sub_24D43E3F0();
        unint64_t v1 = sub_24DCC9708();
        swift_release();
        return v1;
      }
    }
LABEL_13:
    sub_24D4E3A40();
    sub_24DCC9A48();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    unint64_t v5 = 30768;
    unint64_t v6 = 0xE200000000000000;
    goto LABEL_14;
  }
  return v1;
}

uint64_t sub_24D97B6C4(unint64_t a1)
{
  if (!a1) {
    return 0;
  }
  unint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_24D3E4C28(0, 0, 0);
  do
  {
    unint64_t v2 = __clz(__rbit64(v1));
    if (v2 >= 0x40)
    {
LABEL_16:
      sub_24D4E3A40();
      sub_24DCC9A48();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v6 = 30768;
      unint64_t v5 = 0xE200000000000000;
    }
    else
    {
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      unint64_t v5 = 0xE500000000000000;
      uint64_t v6 = 0x7964616572;
      switch(v3)
      {
        case 1:
          break;
        case 2:
          unint64_t v5 = 0xE900000000000065;
          uint64_t v6 = 0x7669737275636572;
          break;
        case 3:
        case 5:
        case 6:
        case 7:
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 17:
        case 18:
        case 19:
        case 20:
        case 21:
        case 22:
        case 23:
        case 24:
        case 25:
        case 26:
        case 27:
        case 28:
        case 29:
        case 30:
        case 31:
        case 33:
        case 34:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 46:
        case 47:
        case 48:
        case 49:
        case 50:
        case 51:
        case 52:
        case 53:
        case 54:
        case 55:
        case 56:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
          goto LABEL_16;
        case 4:
          unint64_t v5 = 0xE800000000000000;
          uint64_t v6 = 0x7974706D45746F6ELL;
          break;
        case 8:
          unint64_t v5 = 0xE700000000000000;
          uint64_t v6 = 0x676E696E6E7572;
          break;
        case 16:
          unint64_t v5 = 0xE700000000000000;
          uint64_t v6 = 0x6465726F6E6769;
          break;
        case 32:
          unint64_t v5 = 0xED0000646574656CLL;
          uint64_t v6 = 0x6544746E65726170;
          break;
        case 64:
          unint64_t v5 = 0xE800000000000000;
          uint64_t v6 = 0x64657463656A6572;
          break;
        default:
          if (v3 != 128) {
            goto LABEL_16;
          }
          unint64_t v5 = 0xED00006576697372;
          uint64_t v6 = 0x75636552797A616CLL;
          break;
      }
    }
    unint64_t v8 = *(void *)(v12 + 16);
    unint64_t v7 = *(void *)(v12 + 24);
    if (v8 >= v7 >> 1) {
      sub_24D3E4C28(v7 > 1, v8 + 1, 1);
    }
    *(void *)(v12 + 16) = v8 + 1;
    uint64_t v9 = v12 + 16 * v8;
    *(void *)(v9 + 32) = v6;
    *(void *)(v9 + 40) = v5;
  }
  while (v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D43E3F0();
  uint64_t v10 = sub_24DCC9708();
  swift_release();
  return v10;
}

uint64_t sub_24D97BA50(unint64_t a1)
{
  return sub_24D97C768(a1, sub_24DB2B420, (void (*)(uint64_t))sub_24D4E3A40);
}

uint64_t sub_24D97BA84(unint64_t a1)
{
  if (!a1) {
    return 0;
  }
  unint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x263F8EE78];
  sub_24D3E4C28(0, 0, 0);
  do
  {
    unint64_t v2 = __clz(__rbit64(v1));
    if (v2 >= 0x40)
    {
LABEL_11:
      sub_24D4E3A40();
      sub_24DCC9A48();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      unint64_t v6 = 30768;
      unint64_t v5 = 0xE200000000000000;
    }
    else
    {
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      unint64_t v5 = 0xEB000000006B636FLL;
      unint64_t v6 = 0x6C46646572616873;
      switch(v3)
      {
        case 1:
          break;
        case 2:
          unint64_t v5 = 0xEE006B636F6C4665;
          unint64_t v6 = 0x766973756C637865;
          break;
        case 4:
          unint64_t v5 = 0xEA00000000006465;
          unint64_t v6 = 0x73756150636E7973;
          break;
        case 8:
          unint64_t v5 = 0x800000024DD134B0;
          unint64_t v6 = 0xD000000000000020;
          break;
        default:
          goto LABEL_11;
      }
    }
    unint64_t v8 = *(void *)(v12 + 16);
    unint64_t v7 = *(void *)(v12 + 24);
    if (v8 >= v7 >> 1) {
      sub_24D3E4C28(v7 > 1, v8 + 1, 1);
    }
    *(void *)(v12 + 16) = v8 + 1;
    uint64_t v9 = v12 + 16 * v8;
    *(void *)(v9 + 32) = v6;
    *(void *)(v9 + 40) = v5;
  }
  while (v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D43E3F0();
  uint64_t v10 = sub_24DCC9708();
  swift_release();
  return v10;
}

unint64_t sub_24D97BCC8(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, 0, 0);
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40) {
        break;
      }
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      if (v3 == 1)
      {
        unint64_t v6 = 0xD000000000000014;
        unint64_t v5 = 0x800000024DD13490;
      }
      else
      {
        if (v3 != 2) {
          break;
        }
        unint64_t v5 = 0x800000024DD13470;
        unint64_t v6 = 0xD000000000000010;
      }
LABEL_12:
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_24D3E4C28(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      if (!v1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
        sub_24D43E3F0();
        unint64_t v1 = sub_24DCC9708();
        swift_release();
        return v1;
      }
    }
    sub_24D4E3A40();
    sub_24DCC9A48();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    unint64_t v6 = 30768;
    unint64_t v5 = 0xE200000000000000;
    goto LABEL_12;
  }
  return v1;
}

unint64_t sub_24D97BE98(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, 0, 0);
    do
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40)
      {
LABEL_15:
        sub_24D4E3A40();
        sub_24DCC9A48();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        unint64_t v6 = 30768;
        unint64_t v5 = 0xE200000000000000;
      }
      else
      {
        uint64_t v3 = 1 << v2;
        if ((v3 & v1) != 0) {
          uint64_t v4 = ~v3;
        }
        else {
          uint64_t v4 = -1;
        }
        v1 &= v4;
        unint64_t v5 = 0xE700000000000000;
        unint64_t v6 = 0x676E696E6E6970;
        switch(v3)
        {
          case 1:
            break;
          case 2:
            unint64_t v5 = 0xEB00000000657669;
            goto LABEL_14;
          case 4:
            unint64_t v5 = 0xEE007963696C6F70;
            unint64_t v6 = 0x20746E65746E6F63;
            break;
          case 8:
            unint64_t v5 = 0xEE00747365757165;
            unint64_t v6 = 0x7220746365726964;
            break;
          case 16:
            unint64_t v5 = 0x800000024DD13450;
            unint64_t v6 = 0xD00000000000001ALL;
            break;
          case 32:
            unint64_t v6 = 0xD000000000000027;
            unint64_t v5 = 0x800000024DD13420;
            break;
          case 64:
            unint64_t v5 = 0xEF74657320657669;
LABEL_14:
            unint64_t v6 = 0x74616C7563657073;
            break;
          default:
            goto LABEL_15;
        }
      }
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_24D3E4C28(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
    }
    while (v1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
    sub_24D43E3F0();
    unint64_t v1 = sub_24DCC9708();
    swift_release();
  }
  return v1;
}

uint64_t sub_24D97C214(unint64_t a1)
{
  return sub_24D97C768(a1, (uint64_t (*)(uint64_t))sub_24D8043F4, (void (*)(uint64_t))sub_24D822450);
}

unint64_t sub_24D97C248(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, 0, 0);
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40) {
        break;
      }
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      switch(v3)
      {
        case 1:
          unint64_t v5 = 0xD000000000000025;
          unint64_t v6 = 0x800000024DD08610;
          break;
        case 2:
          unint64_t v6 = 0x800000024DD085F0;
          unint64_t v5 = 0xD000000000000012;
          break;
        case 4:
          unint64_t v5 = 0xD000000000000028;
          unint64_t v6 = 0x800000024DD085C0;
          break;
        default:
          goto LABEL_13;
      }
LABEL_14:
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_24D3E4C28(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
      if (!v1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
        sub_24D43E3F0();
        unint64_t v1 = sub_24DCC9708();
        swift_release();
        return v1;
      }
    }
LABEL_13:
    sub_24D822450();
    sub_24DCC9A48();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    unint64_t v5 = 30768;
    unint64_t v6 = 0xE200000000000000;
    goto LABEL_14;
  }
  return v1;
}

uint64_t sub_24D97C444(unint64_t a1)
{
  return sub_24D97C768(a1, (uint64_t (*)(uint64_t))sub_24D804AF4, (void (*)(uint64_t))sub_24D822450);
}

uint64_t sub_24D97C478(unint64_t a1)
{
  return sub_24D97C768(a1, (uint64_t (*)(uint64_t))sub_24D8050E0, (void (*)(uint64_t))sub_24D821AEC);
}

uint64_t sub_24D97C4AC(unint64_t a1)
{
  return sub_24D97C768(a1, sub_24D9C051C, (void (*)(uint64_t))sub_24D821AEC);
}

uint64_t sub_24D97C4E0(uint64_t a1)
{
  if (qword_26B199AA0 != -1) {
    swift_once();
  }
  if ((qword_26B1A24C8 & a1) == qword_26B1A24C8) {
    uint64_t v2 = 7105633;
  }
  else {
    uint64_t v2 = 0;
  }
  if ((qword_26B1A24C8 & a1) == qword_26B1A24C8) {
    unint64_t v3 = 0xE300000000000000;
  }
  else {
    unint64_t v3 = 0xE000000000000000;
  }
  if ((qword_26B1A24C8 & a1) == qword_26B1A24C8) {
    uint64_t v4 = ~qword_26B1A24C8;
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & a1;
  if ((v4 & a1) != 0)
  {
    uint64_t v17 = v2;
    uint64_t v18 = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, 0, 0);
    do
    {
      unint64_t v6 = __clz(__rbit64(v5));
      uint64_t v7 = v5 & ~(1 << v6);
      if (((1 << v6) & v5) == 0) {
        uint64_t v7 = v5;
      }
      if (v6 >= 0x40) {
        uint64_t v8 = 0;
      }
      else {
        uint64_t v8 = 1 << v6;
      }
      if (v6 < 0x40) {
        unint64_t v5 = v7;
      }
      uint64_t v9 = sub_24DA2651C(v8);
      if (v10)
      {
        uint64_t v11 = v9;
        unint64_t v12 = v10;
      }
      else
      {
        sub_24D4E3A40();
        sub_24DCC9A48();
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v11 = 30768;
        unint64_t v12 = 0xE200000000000000;
      }
      unint64_t v14 = *(void *)(v18 + 16);
      unint64_t v13 = *(void *)(v18 + 24);
      if (v14 >= v13 >> 1) {
        sub_24D3E4C28(v13 > 1, v14 + 1, 1);
      }
      *(void *)(v18 + 16) = v14 + 1;
      uint64_t v15 = v18 + 16 * v14;
      *(void *)(v15 + 32) = v11;
      *(void *)(v15 + 40) = v12;
    }
    while (v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
    sub_24D43E3F0();
    uint64_t v2 = sub_24DCC9708();
    swift_release();
    if ((v3 & 0x300000000000000) != 0)
    {
      swift_bridgeObjectRetain();
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v17;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  return v2;
}

uint64_t sub_24D97C734(unint64_t a1)
{
  return sub_24D97C768(a1, sub_24D803878, (void (*)(uint64_t))sub_24D821AEC);
}

uint64_t sub_24D97C768(unint64_t a1, uint64_t (*a2)(uint64_t), void (*a3)(uint64_t))
{
  if (!a1) {
    return 0;
  }
  unint64_t v5 = a1;
  uint64_t v18 = MEMORY[0x263F8EE78];
  sub_24D3E4C28(0, 0, 0);
  do
  {
    unint64_t v6 = __clz(__rbit64(v5));
    uint64_t v7 = v5 & ~(1 << v6);
    if (((1 << v6) & v5) == 0) {
      uint64_t v7 = v5;
    }
    if (v6 >= 0x40) {
      uint64_t v8 = 0;
    }
    else {
      uint64_t v8 = 1 << v6;
    }
    if (v6 < 0x40) {
      unint64_t v5 = v7;
    }
    uint64_t v9 = a2(v8);
    if (v10)
    {
      uint64_t v11 = v9;
      unint64_t v12 = v10;
    }
    else
    {
      a3(v9);
      sub_24DCC9A48();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v11 = 30768;
      unint64_t v12 = 0xE200000000000000;
    }
    unint64_t v14 = *(void *)(v18 + 16);
    unint64_t v13 = *(void *)(v18 + 24);
    if (v14 >= v13 >> 1) {
      sub_24D3E4C28(v13 > 1, v14 + 1, 1);
    }
    *(void *)(v18 + 16) = v14 + 1;
    uint64_t v15 = v18 + 16 * v14;
    *(void *)(v15 + 32) = v11;
    *(void *)(v15 + 40) = v12;
  }
  while (v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D43E3F0();
  uint64_t v16 = sub_24DCC9708();
  swift_release();
  return v16;
}

unint64_t sub_24D97C90C(unint64_t a1)
{
  unint64_t v1 = a1;
  if (a1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24D3E4C28(0, 0, 0);
    while (1)
    {
      unint64_t v2 = __clz(__rbit64(v1));
      if (v2 >= 0x40) {
        break;
      }
      uint64_t v3 = 1 << v2;
      if ((v3 & v1) != 0) {
        uint64_t v4 = ~v3;
      }
      else {
        uint64_t v4 = -1;
      }
      v1 &= v4;
      if (v3 <= 127)
      {
        unint64_t v5 = 0xE800000000000000;
        unint64_t v6 = 0x73746E65746E6F63;
        switch(v3)
        {
          case 1:
            goto LABEL_29;
          case 2:
            unint64_t v6 = 0x656D616E656C6966;
            break;
          case 4:
            unint64_t v6 = 0x4449746E65726170;
            break;
          case 8:
            unint64_t v5 = 0xEC00000065746144;
            unint64_t v6 = 0x646573557473616CLL;
            break;
          case 16:
            unint64_t v5 = 0xE700000000000000;
            unint64_t v6 = 0x61746144676174;
            break;
          case 32:
            unint64_t v5 = 0xEC0000006B6E6152;
            unint64_t v6 = 0x657469726F766166;
            break;
          case 64:
            unint64_t v5 = 0xE500000000000000;
            unint64_t v6 = 0x656D697463;
            break;
          default:
            goto LABEL_28;
        }
        goto LABEL_29;
      }
      if (v3 > 1023)
      {
        switch(v3)
        {
          case 0x400:
            unint64_t v5 = 0xEE00726F74616572;
            unint64_t v6 = 0x43646E4165707974;
            break;
          case 0x40000000:
            unint64_t v5 = 0xE700000000000000;
            unint64_t v6 = 0x64656873617274;
            break;
          case 0x80000000:
            unint64_t v5 = 0x800000024DD134E0;
            unint64_t v6 = 0xD000000000000013;
            break;
          default:
            goto LABEL_28;
        }
      }
      else
      {
        switch(v3)
        {
          case 128:
            unint64_t v6 = 0x656D69746DLL;
            unint64_t v5 = 0xE500000000000000;
            break;
          case 256:
            unint64_t v5 = 0xEF7367616C466D65;
            unint64_t v6 = 0x74737953656C6966;
            break;
          case 512:
            unint64_t v5 = 0xE600000000000000;
            unint64_t v6 = 0x737274746178;
            break;
          default:
            goto LABEL_28;
        }
      }
LABEL_29:
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_24D3E4C28(v7 > 1, v8 + 1, 1);
      }
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v6;
      *(void *)(v9 + 40) = v5;
      if (!v1)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
        sub_24D43E3F0();
        unint64_t v1 = sub_24DCC9708();
        swift_release();
        return v1;
      }
    }
LABEL_28:
    sub_24D821AEC();
    sub_24DCC9A48();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    unint64_t v6 = 30768;
    unint64_t v5 = 0xE200000000000000;
    goto LABEL_29;
  }
  return v1;
}

uint64_t sub_24D97CD54(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_24D97D9A0(a1);
  return v2;
}

double sub_24D97CD94@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v11 = (int *)type metadata accessor for SnapshotItem();
  uint64_t v26 = a8 + v11[13];
  uint64_t v12 = a8 + v11[14];
  *(void *)uint64_t v12 = 0;
  *(void *)(v12 + 8) = 0;
  *(void *)(v12 + 16) = 0;
  *(unsigned char *)(v12 + 24) = 1;
  uint64_t v13 = a8 + v11[15];
  *(void *)uint64_t v13 = 0;
  *(void *)(v13 + 8) = 0;
  *(unsigned char *)(v13 + 16) = 1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  v16(a8, a1, AssociatedTypeWitness);
  v16(a8 + v11[9], a2, AssociatedTypeWitness);
  uint64_t v22 = a8 + v11[10];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v17 = type metadata accessor for FileItemVersion();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v22, a3, v17);
  long long v19 = (void *)(a8 + v11[11]);
  void *v19 = a4;
  v19[1] = a5;
  sub_24D409F80(a6, a8 + v11[12]);
  sub_24D5013B0(a7, v26);
  sub_24D409FE4(a6);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a3, v17);
  long long v20 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v20(a2, AssociatedTypeWitness);
  v20(a1, AssociatedTypeWitness);
  *(void *)(a8 + v11[16]) = 0;
  double result = 0.0;
  *(_OWORD *)(a8 + v11[17]) = xmmword_24DCD5EE0;
  return result;
}

uint64_t sub_24D97D058@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t sub_24D97D0D4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);

  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t sub_24D97D154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t sub_24D97D1D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);

  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*sub_24D97D260())()
{
  return nullsub_1;
}

uint64_t sub_24D97D284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_24D97D39C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = type metadata accessor for FileItemVersion();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_24D97D4B4())()
{
  return nullsub_1;
}

uint64_t sub_24D97D4D8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_24D97D510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (void *)(v3 + *(int *)(a3 + 44));
  uint64_t result = swift_bridgeObjectRelease();
  *unint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_24D97D550())()
{
  return nullsub_1;
}

uint64_t sub_24D97D574@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D409F80(v2 + *(int *)(a1 + 48), a2);
}

uint64_t sub_24D97D584(uint64_t a1, uint64_t a2)
{
  return sub_24D5F7F00(a1, v2 + *(int *)(a2 + 48));
}

uint64_t (*sub_24D97D590())()
{
  return nullsub_1;
}

uint64_t sub_24D97D5B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D97DB58(v2 + *(int *)(a1 + 52), a2);
}

uint64_t sub_24D97D5C4(uint64_t a1, uint64_t a2)
{
  return sub_24D733474(a1, v2 + *(int *)(a2 + 52));
}

uint64_t (*sub_24D97D5D0())()
{
  return nullsub_1;
}

uint64_t sub_24D97D5F4(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 64));
}

uint64_t sub_24D97D600(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + *(int *)(a2 + 64)) = result;
  return result;
}

uint64_t (*sub_24D97D60C())()
{
  return nullsub_1;
}

uint64_t sub_24D97D630(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 68);
  uint64_t v3 = *(void *)v2;
  sub_24D5203A8(*(void *)v2, *(void *)(v2 + 8));
  return v3;
}

uint64_t sub_24D97D66C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = v3 + *(int *)(a3 + 68);
  uint64_t result = sub_24D466534(*(void *)v6, *(void *)(v6 + 8));
  *(void *)uint64_t v6 = a1;
  *(void *)(v6 + 8) = a2;
  return result;
}

uint64_t (*sub_24D97D6AC())()
{
  return nullsub_1;
}

uint64_t sub_24D97D6D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void *)(a2 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v23 - v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a2) == 1)
  {
    long long v19 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v19(a1, v8);
    v19((uint64_t)v12, v8);
    uint64_t v20 = type metadata accessor for SnapshotItem();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a4, 1, 1, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v12, a2);
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, a2);
    sub_24D97AFF8((uint64_t)v16, a2, a3, a4);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, a2);
    uint64_t v22 = type metadata accessor for SnapshotItem();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a4, 0, 1, v22);
  }
}

uint64_t sub_24D97D9A0(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  uint64_t v4 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(v3, a1, v4);
  return v1;
}

uint64_t sub_24D97DA4C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for SnapshotItem();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_24D97DAE8()
{
  sub_24D97DA4C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SnapshotItem()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D97DB58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B197970);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D97DBC0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24D97DBDC()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24D97DBF8()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_24D97DC14(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_24D97DC50()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    swift_getAssociatedConformanceWitness();
    uint64_t result = type metadata accessor for FileItemVersion();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for ItemMetadata();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_24D97DE4C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v135 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  int v3 = *(_DWORD *)(v2 + 80);
  uint64_t v4 = v3;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v128 = v6;
  uint64_t v129 = v5;
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v132 = swift_getAssociatedTypeWitness();
  uint64_t v130 = *(void *)(v132 - 8);
  int v8 = *(_DWORD *)(v130 + 80);
  uint64_t v9 = v8;
  uint64_t v10 = v7 & 0xF8 | v8 | 7u;
  uint64_t v11 = *(void *)(v6 + 64);
  uint64_t v12 = *(void *)(v130 + 64);
  uint64_t v133 = sub_24DCC8CE8();
  uint64_t v13 = *(void *)(v133 - 8);
  unint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = *(void *)(v13 + 64);
  if (*(_DWORD *)(v13 + 84)) {
    size_t v16 = *(void *)(v13 + 64);
  }
  else {
    size_t v16 = v15 + 1;
  }
  unint64_t v17 = v10 | v3 | v14;
  if (v17 != 7
    || ((v7 | v3 | v8 | *(_DWORD *)(v13 + 80)) & 0x100000) != 0
    || (uint64_t v18 = v135 + v3,
        uint64_t v19 = v11 + 7,
        uint64_t v20 = v9 + 8,
        unint64_t v21 = ((((v12 + 7 + ((v9 + 8 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
            + 16,
        (((((((v14 | 7) + 16 + ((v135 + ((v135 + v4) & ~v4) + v10) & ~v10) + v21) & ~(v14 | 7))
          + ((((((((((v16
                    + 7
                    + ((v14
                      + 10
                      + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                        + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                  + 31) & 0xFFFFFFFFFFFFFFF8)
                + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 16
          + 311) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16 > 0x18))
  {
    uint64_t v57 = *a2;
    *a1 = *a2;
    uint64_t v58 = v57 + ((v17 + 16) & ~v17);
    swift_retain();
  }
  else
  {
    size_t v126 = v16 + 7;
    unint64_t v127 = ((((((((((v16
                   + 7
                   + ((v14
                     + 10
                     + ((((((v15 + ((v15 + v14 + ((v14 + 12) & ~v14)) & ~v14) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                       + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v14)) & 0xFFFFFFFFFFFFFFF8)
                 + 31) & 0xFFFFFFFFFFFFFFF8)
               + 15) & 0xFFFFFFFFFFFFFFF8)
             + 19) & 0xFFFFFFFFFFFFFFF8)
           + 25) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v22 = ~v4;
    size_t __n = v16;
    uint64_t v115 = ~v9;
    uint64_t v119 = ~(v14 | 7);
    uint64_t v122 = ~v14;
    uint64_t v23 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16);
    uint64_t v124 = *(void *)(v13 + 64);
    unint64_t v120 = v14 + 12;
    unint64_t v117 = v21;
    uint64_t v118 = (v14 | 7) + 16;
    uint64_t v121 = *(void *)(v133 - 8);
    unint64_t v125 = v14 + 10;
    uint64_t v123 = v15 + v14;
    uint64_t v116 = v12 + 7;
    uint64_t v114 = v20;
    v23(a1, a2, AssociatedTypeWitness);
    v23((uint64_t *)(((unint64_t)a1 + v18) & v22), (uint64_t *)(((unint64_t)a2 + v18) & v22), AssociatedTypeWitness);
    unint64_t v24 = ((((unint64_t)a1 + v18) & ~v4) + v135 + v10) & ~v10;
    unint64_t v25 = ((((unint64_t)a2 + v18) & v22) + v135 + v10) & ~v10;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 16))(v24, v25, v129);
    uint64_t v26 = (void *)((v19 + v24) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v27 = (void *)((v19 + v25) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v26 = *v27;
    unint64_t v28 = ((unint64_t)v26 + v114) & v115;
    unint64_t v29 = ((unint64_t)v27 + v114) & v115;
    uint64_t v30 = *(void (**)(unint64_t, unint64_t, uint64_t))(v130 + 16);
    swift_bridgeObjectRetain();
    v30(v28, v29, v132);
    uint64_t v31 = (void *)((v116 + v29) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void *)((v116 + v28) & 0xFFFFFFFFFFFFFFF8);
    void *v32 = *v31;
    uint64_t v33 = (void *)(((unint64_t)v32 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = (void *)(((unint64_t)v31 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v33 = *v34;
    v33[1] = v34[1];
    unint64_t v35 = (void *)(v117 + v24);
    *unint64_t v35 = *(void *)(v117 + v25);
    v35[1] = *(void *)(v117 + v25 + 8);
    uint64_t v36 = (v118 + v117 + v24) & v119;
    uint64_t v37 = (v118 + v117 + v25) & v119;
    *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
    uint64_t v38 = v36 | 4;
    int v39 = *(_DWORD *)(v37 | 4);
    *(unsigned char *)(v38 + 4) = *(unsigned char *)((v37 | 4) + 4);
    *(_DWORD *)uint64_t v38 = v39;
    *(_WORD *)(v36 + 10) = *(_WORD *)(v37 + 0xA);
    uint64_t v40 = (v120 + v36) & v122;
    uint64_t v41 = (v120 + v37) & v122;
    uint64_t v42 = *(void (**)(uint64_t, uint64_t, uint64_t))(v121 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v42(v40, v41, v133);
    uint64_t v43 = (v123 + v40) & v122;
    uint64_t v44 = (v123 + v41) & v122;
    v42(v43, v44, v133);
    uint64_t v45 = (unsigned char *)(v43 + v124);
    *uint64_t v45 = *(unsigned char *)(v44 + v124);
    v45[1] = *(unsigned char *)(v44 + v124 + 1);
    v45[2] = *(unsigned char *)(v44 + v124 + 2);
    v45[3] = *(unsigned char *)(v44 + v124 + 3);
    v45[4] = *(unsigned char *)(v44 + v124 + 4);
    unint64_t v46 = (v43 + v124 + 12) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v47 = (v44 + v124 + 12) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v46 = *(void *)v47;
    *(void *)(v46 + 8) = *(void *)(v47 + 8);
    *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
    *(unsigned char *)(v46 + 17) = *(unsigned char *)(v47 + 17);
    *(unsigned char *)(v46 + 18) = *(unsigned char *)(v47 + 18);
    *(unsigned char *)(v46 + 19) = *(unsigned char *)(v47 + 19);
    unint64_t v48 = (v46 + 27) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v49 = (v47 + 27) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v48 = *(void *)v49;
    *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
    *(unsigned char *)(v48 + 9) = *(unsigned char *)(v49 + 9);
    *(unsigned char *)(v48 + 10) = *(unsigned char *)(v49 + 10);
    *(unsigned char *)(v48 + 11) = *(unsigned char *)(v49 + 11);
    *(unsigned char *)(v48 + 12) = *(unsigned char *)(v49 + 12);
    unint64_t v50 = (void *)((v47 + 47) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v51 = (void *)((v46 + 47) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v51 = *v50;
    unint64_t v52 = ((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v53 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v52 = *(void *)v53;
    *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
    *(unsigned char *)(v52 + 9) = *(unsigned char *)(v53 + 9);
    uint64_t v54 = (void *)((v125 + v52) & v122);
    uint64_t v55 = (const void *)((v125 + v53) & v122);
    uint64_t v56 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v121 + 48);
    swift_bridgeObjectRetain();
    if (v56(v55, 1, v133))
    {
      memcpy(v54, v55, __n);
    }
    else
    {
      v42((uint64_t)v54, (uint64_t)v55, v133);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v121 + 56))(v54, 0, 1, v133);
    }
    uint64_t v59 = (void *)(((unint64_t)v54 + v126) & 0xFFFFFFFFFFFFFFF8);
    int v60 = (void *)(((unint64_t)v55 + v126) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v59 = *v60;
    unint64_t v61 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v62 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v63 = *(void *)v62;
    *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
    *(void *)unint64_t v61 = v63;
    uint64_t v64 = (void *)(((unint64_t)v59 + 31) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v65 = (void *)(((unint64_t)v60 + 31) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v64 = *v65;
    unint64_t v66 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v67 = (uint64_t *)(((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v68 = v67[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v68 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v66 = *(_OWORD *)v67;
    }
    else
    {
      uint64_t v69 = *v67;
      sub_24D3F9C18(*v67, v68);
      *(void *)unint64_t v66 = v69;
      *(void *)(v66 + 8) = v68;
    }
    unint64_t v70 = (v66 + 19) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v71 = ((unint64_t)v67 + 19) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v72 = *(void *)v71;
    *(unsigned char *)(v70 + 8) = *(unsigned char *)(v71 + 8);
    *(void *)unint64_t v70 = v72;
    *(unsigned char *)(v70 + 9) = *(unsigned char *)(v71 + 9);
    unint64_t v73 = (v70 + 13) & 0xFFFFFFFFFFFFFFFCLL;
    unint64_t v74 = (v71 + 13) & 0xFFFFFFFFFFFFFFFCLL;
    int v75 = *(_DWORD *)v74;
    *(unsigned char *)(v73 + 4) = *(unsigned char *)(v74 + 4);
    *(_DWORD *)unint64_t v73 = v75;
    uint64_t v76 = (void *)((v70 + 25) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v77 = (void *)((v71 + 25) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v76 = *v77;
    v76[1] = v77[1];
    unint64_t v78 = v127 + v36;
    unint64_t v79 = v127 + v37;
    unint64_t v80 = *(void *)(v127 + v37 + 16);
    if (v80 >= 0xFFFFFFFF) {
      LODWORD(v80) = -1;
    }
    int v81 = v80 - 1;
    swift_bridgeObjectRetain();
    if (v81 < 0)
    {
      *(void *)unint64_t v78 = *(void *)v79;
      *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
      *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
      uint64_t v94 = *(void **)(v79 + 16);
      id v95 = v94;
      *(void *)(v78 + 16) = v94;
      uint64_t v96 = *(void **)(v79 + 24);
      id v97 = v96;
      *(void *)(v78 + 24) = v96;
      *(unsigned char *)(v78 + 32) = *(unsigned char *)(v79 + 32);
      *(unsigned char *)(v78 + 33) = *(unsigned char *)(v79 + 33);
      *(unsigned char *)(v78 + 34) = *(unsigned char *)(v79 + 34);
      *(void *)(v78 + 40) = *(void *)(v79 + 40);
      *(void *)(v78 + 48) = *(void *)(v79 + 48);
      *(void *)(v78 + 56) = *(void *)(v79 + 56);
      *(void *)(v78 + 64) = *(void *)(v79 + 64);
      *(unsigned char *)(v78 + 72) = *(unsigned char *)(v79 + 72);
      *(void *)(v78 + 80) = *(void *)(v79 + 80);
      *(void *)(v78 + 88) = *(void *)(v79 + 88);
      unint64_t v136 = *(void **)(v79 + 96);
      *(void *)(v78 + 96) = v136;
      *(unsigned char *)(v78 + 104) = *(unsigned char *)(v79 + 104);
      *(unsigned char *)(v78 + 105) = *(unsigned char *)(v79 + 105);
      *(void *)(v78 + 112) = *(void *)(v79 + 112);
      *(void *)(v78 + 120) = *(void *)(v79 + 120);
      *(void *)(v78 + 128) = *(void *)(v79 + 128);
      *(void *)(v78 + 136) = *(void *)(v79 + 136);
      *(void *)(v78 + 144) = *(void *)(v79 + 144);
      *(void *)(v78 + 152) = *(void *)(v79 + 152);
      *(void *)(v78 + 160) = *(void *)(v79 + 160);
      *(void *)(v78 + 168) = *(void *)(v79 + 168);
      *(unsigned char *)(v78 + 176) = *(unsigned char *)(v79 + 176);
      *(void *)(v78 + 184) = *(void *)(v79 + 184);
      uint64_t v98 = *(void *)(v79 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v99 = v136;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v98)
      {
        *(void *)(v78 + 192) = v98;
        *(void *)(v78 + 200) = *(void *)(v79 + 200);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *(_OWORD *)(v78 + 192) = *(_OWORD *)(v79 + 192);
      }
      *(void *)(v78 + 208) = *(void *)(v79 + 208);
      *(void *)(v78 + 216) = *(void *)(v79 + 216);
      *(void *)(v78 + 224) = *(void *)(v79 + 224);
      *(void *)(v78 + 232) = *(void *)(v79 + 232);
      *(void *)(v78 + 240) = *(void *)(v79 + 240);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      long long v82 = *(_OWORD *)v79;
      long long v83 = *(_OWORD *)(v79 + 16);
      long long v84 = *(_OWORD *)(v79 + 48);
      *(_OWORD *)(v78 + 32) = *(_OWORD *)(v79 + 32);
      *(_OWORD *)(v78 + 48) = v84;
      *(_OWORD *)unint64_t v78 = v82;
      *(_OWORD *)(v78 + 16) = v83;
      long long v85 = *(_OWORD *)(v79 + 64);
      long long v86 = *(_OWORD *)(v79 + 80);
      long long v87 = *(_OWORD *)(v79 + 112);
      *(_OWORD *)(v78 + 96) = *(_OWORD *)(v79 + 96);
      *(_OWORD *)(v78 + 112) = v87;
      *(_OWORD *)(v78 + 64) = v85;
      *(_OWORD *)(v78 + 80) = v86;
      long long v88 = *(_OWORD *)(v79 + 128);
      long long v89 = *(_OWORD *)(v79 + 144);
      long long v90 = *(_OWORD *)(v79 + 176);
      *(_OWORD *)(v78 + 160) = *(_OWORD *)(v79 + 160);
      *(_OWORD *)(v78 + 176) = v90;
      *(_OWORD *)(v78 + 128) = v88;
      *(_OWORD *)(v78 + 144) = v89;
      long long v91 = *(_OWORD *)(v79 + 192);
      long long v92 = *(_OWORD *)(v79 + 208);
      long long v93 = *(_OWORD *)(v79 + 224);
      *(void *)(v78 + 240) = *(void *)(v79 + 240);
      *(_OWORD *)(v78 + 208) = v92;
      *(_OWORD *)(v78 + 224) = v93;
      *(_OWORD *)(v78 + 192) = v91;
    }
    uint64_t v100 = (_OWORD *)((v78 + 255) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v101 = (long long *)((v79 + 255) & 0xFFFFFFFFFFFFFFF8);
    long long v102 = *v101;
    *(_OWORD *)((char *)v100 + 9) = *(long long *)((char *)v101 + 9);
    _OWORD *v100 = v102;
    unint64_t v103 = (v78 + 287) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v104 = (v79 + 287) & 0xFFFFFFFFFFFFFFF8;
    long long v105 = *(_OWORD *)v104;
    *(unsigned char *)(v103 + 16) = *(unsigned char *)(v104 + 16);
    *(_OWORD *)unint64_t v103 = v105;
    unint64_t v106 = (void *)((v78 + 311) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v107 = (v79 + 311) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v108 = *(void *)v107;
    v107 += 15;
    void *v106 = v108;
    uint64_t v109 = (void *)(((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v110 = *(void *)(v107 & 0xFFFFFFFFFFFFFFF8);
    unint64_t v111 = *(void *)((v107 & 0xFFFFFFFFFFFFFFF8) + 8);
    sub_24D5203A8(v110, v111);
    *uint64_t v109 = v110;
    v109[1] = v111;
    return a1;
  }
  return (uint64_t *)v58;
}

uint64_t sub_24D97E8B4(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = v3 + 8;
  v4(a1, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 56);
  unint64_t v7 = (v6 + a1 + *(unsigned __int8 *)(v5 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 72);
  v4(v7, AssociatedTypeWitness);
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  LODWORD(v5) = *(_DWORD *)(v9 + 80) & 0xF8;
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (v7 + v6 + (v5 | v12 | 7)) & ~(unint64_t)(v5 | v12 | 7);
  (*(void (**)(unint64_t, uint64_t))(v9 + 8))(v13, v8);
  uint64_t v14 = *(void *)(v9 + 64) + 7;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v11 + 8))((v12 + 8 + ((v14 + v13) & 0xFFFFFFFFFFFFFFF8)) & ~v12, v10);
  uint64_t v15 = *(void *)(v11 + 64) + 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v16 = v13
      + ((((v15 + ((v12 + 8 + (v14 & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  swift_bridgeObjectRelease();
  uint64_t v17 = sub_24DCC8CE8();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = v18;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v36 = (v16 + (v20 | 7) + 32) & ~(v20 | 7);
  unint64_t v21 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
  v21((v20 + 12 + v36) & ~v20, v17);
  uint64_t v22 = *(void *)(v18 + 64);
  uint64_t v23 = (v22 + v20 + ((v20 + 12 + v36) & ~v20)) & ~v20;
  v21(v23, v17);
  swift_bridgeObjectRelease();
  unint64_t v24 = (v20
       + 10
       + ((((((v22 + 12 + v23) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v20;
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v19 + 48))(v24, 1, v17)) {
    v21(v24, v17);
  }
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v25 = v22;
  }
  else {
    uint64_t v25 = v22 + 1;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v26 = (uint64_t *)((((((v24 + v25 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = v26[1];
  if ((v27 & 0x3000000000000000) == 0) {
    sub_24D400DCC(*v26, v27);
  }
  swift_bridgeObjectRelease();
  unint64_t v28 = v36
      + ((((((((((((v20
                  + 10
                  + ((((((v22 + 12 + ((v22 + v20 + ((v20 + 12) & ~v20)) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v20)
                + v25
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v29 = v28 + 16;
  uint64_t v30 = *(void **)(v28 + 32);
  int v31 = -1;
  if ((unint64_t)v30 < 0xFFFFFFFF) {
    int v31 = (int)v30;
  }
  if (v31 - 1 < 0)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v29 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v32 = (uint64_t *)((((v29 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v33 = *v32;
  unint64_t v34 = v32[1];

  return sub_24D466534(v33, v34);
}

uint64_t sub_24D97ED6C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v120 = *(void *)(v7 + 48);
  uint64_t v123 = a1;
  uint64_t v8 = *(unsigned __int8 *)(v7 + 64);
  uint64_t v9 = (v120 + v8 + a1) & ~v8;
  uint64_t v10 = (v120 + v8 + a2) & ~v8;
  v6(v9, v10, AssociatedTypeWitness);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 | v16 | 7;
  uint64_t v18 = (v120 + v17 + v9) & ~v17;
  uint64_t v19 = (v120 + v17 + v10) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v18, v19, v11);
  uint64_t v20 = *(void *)(v12 + 64) + 7;
  unint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v21 = *v22;
  uint64_t v23 = ((unint64_t)v21 + v16 + 8) & ~v16;
  uint64_t v24 = ((unint64_t)v22 + v16 + 8) & ~v16;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16);
  swift_bridgeObjectRetain();
  v25(v23, v24, v14);
  uint64_t v26 = *(void *)(v15 + 64) + 7;
  unint64_t v27 = (void *)((v26 + v23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v28 = (void *)((v26 + v24) & 0xFFFFFFFFFFFFFFF8);
  void *v27 = *v28;
  unint64_t v29 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v30 = (void *)(((unint64_t)v28 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v29 = *v30;
  v29[1] = v30[1];
  unint64_t v31 = ((((v26 + ((v16 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v32 = (void *)(v31 + v18);
  unint64_t v33 = v31 + v19;
  void *v32 = *(void *)(v31 + v19);
  v32[1] = *(void *)(v31 + v19 + 8);
  uint64_t v34 = sub_24DCC8CE8();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = v35;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = (v37 | 7) + 16;
  uint64_t v39 = ((unint64_t)v32 + v38) & ~(v37 | 7);
  uint64_t v40 = (v38 + v33) & ~(v37 | 7);
  *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
  char v41 = *(unsigned char *)(v40 + 8);
  *(_DWORD *)(v39 + 4) = *(_DWORD *)(v40 + 4);
  *(unsigned char *)(v39 + 8) = v41;
  *(_WORD *)(v39 + 10) = *(_WORD *)(v40 + 0xA);
  uint64_t v119 = v40;
  uint64_t v121 = v39;
  uint64_t v42 = (v37 + 12 + v39) & ~v37;
  uint64_t v43 = (v37 + 12 + v40) & ~v37;
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v42, v43, v34);
  size_t v45 = *(void *)(v35 + 64);
  uint64_t v46 = v45 + v37 + v43;
  uint64_t v47 = v34;
  uint64_t v48 = v46 & ~v37;
  v44((v45 + v37 + v42) & ~v37, v48, v47);
  unint64_t v49 = (unsigned char *)(((v45 + v37 + v42) & ~v37) + v45);
  *unint64_t v49 = *(unsigned char *)(v48 + v45);
  v49[1] = *(unsigned char *)(v48 + v45 + 1);
  v49[2] = *(unsigned char *)(v48 + v45 + 2);
  v49[3] = *(unsigned char *)(v48 + v45 + 3);
  v49[4] = *(unsigned char *)(v48 + v45 + 4);
  unint64_t v50 = (unint64_t)(v49 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v48 + v45 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v50 = *(void *)v51;
  *(void *)(v50 + 8) = *(void *)(v51 + 8);
  *(unsigned char *)(v50 + 16) = *(unsigned char *)(v51 + 16);
  *(unsigned char *)(v50 + 17) = *(unsigned char *)(v51 + 17);
  *(unsigned char *)(v50 + 18) = *(unsigned char *)(v51 + 18);
  *(unsigned char *)(v50 + 19) = *(unsigned char *)(v51 + 19);
  unint64_t v52 = (v50 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = (v51 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  *(unsigned char *)(v52 + 9) = *(unsigned char *)(v53 + 9);
  *(unsigned char *)(v52 + 10) = *(unsigned char *)(v53 + 10);
  *(unsigned char *)(v52 + 11) = *(unsigned char *)(v53 + 11);
  *(unsigned char *)(v52 + 12) = *(unsigned char *)(v53 + 12);
  uint64_t v54 = (void *)((v50 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v55 = (void *)((v51 + 47) & 0xFFFFFFFFFFFFFFF8);
  void *v54 = *v55;
  unint64_t v56 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v57 = ((unint64_t)v55 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v56 = *(void *)v57;
  *(unsigned char *)(v56 + 8) = *(unsigned char *)(v57 + 8);
  *(unsigned char *)(v56 + 9) = *(unsigned char *)(v57 + 9);
  uint64_t v58 = (void *)((v37 + 10 + v56) & ~v37);
  uint64_t v59 = (const void *)((v37 + 10 + v57) & ~v37);
  int v60 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v36 + 48);
  swift_bridgeObjectRetain();
  if (v60(v59, 1, v47))
  {
    int v61 = *(_DWORD *)(v36 + 84);
    if (v61) {
      size_t v62 = v45;
    }
    else {
      size_t v62 = v45 + 1;
    }
    memcpy(v58, v59, v62);
  }
  else
  {
    v44((uint64_t)v58, (uint64_t)v59, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v58, 0, 1, v47);
    int v61 = *(_DWORD *)(v36 + 84);
  }
  if (v61) {
    size_t v63 = v45;
  }
  else {
    size_t v63 = v45 + 1;
  }
  uint64_t v64 = (void *)(((unint64_t)v58 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v65 = (void *)(((unint64_t)v59 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v64 = *v65;
  unint64_t v66 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v67 = ((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v68 = *(void *)v67;
  *(unsigned char *)(v66 + 8) = *(unsigned char *)(v67 + 8);
  *(void *)unint64_t v66 = v68;
  uint64_t v69 = (void *)(((unint64_t)v64 + 31) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v70 = (void *)(((unint64_t)v65 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v69 = *v70;
  unint64_t v71 = ((unint64_t)v69 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v72 = (uint64_t *)(((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v73 = v72[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((v73 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v71 = *(_OWORD *)v72;
  }
  else
  {
    uint64_t v74 = *v72;
    sub_24D3F9C18(*v72, v73);
    *(void *)unint64_t v71 = v74;
    *(void *)(v71 + 8) = v73;
  }
  unint64_t v75 = (v71 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = ((unint64_t)v72 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v77 = *(void *)v76;
  *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
  *(void *)unint64_t v75 = v77;
  *(unsigned char *)(v75 + 9) = *(unsigned char *)(v76 + 9);
  unint64_t v78 = (v75 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v79 = (v76 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v80 = *(_DWORD *)v79;
  *(unsigned char *)(v78 + 4) = *(unsigned char *)(v79 + 4);
  *(_DWORD *)unint64_t v78 = v80;
  int v81 = (void *)((v75 + 25) & 0xFFFFFFFFFFFFFFF8);
  long long v82 = (void *)((v76 + 25) & 0xFFFFFFFFFFFFFFF8);
  *int v81 = *v82;
  v81[1] = v82[1];
  unint64_t v83 = ((((((((((((v37
                  + 10
                  + ((((((v45 + ((((v37 + 12) | v37) + v45) & ~v37) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v37)
                + v63
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v84 = v83 + v121;
  unint64_t v85 = v83 + v119;
  unint64_t v86 = *(void *)(v83 + v119 + 16);
  if (v86 >= 0xFFFFFFFF) {
    LODWORD(v86) = -1;
  }
  int v87 = v86 - 1;
  swift_bridgeObjectRetain();
  if (v87 < 0)
  {
    *(void *)unint64_t v84 = *(void *)v85;
    *(unsigned char *)(v84 + 8) = *(unsigned char *)(v85 + 8);
    *(unsigned char *)(v84 + 9) = *(unsigned char *)(v85 + 9);
    uint64_t v100 = *(void **)(v85 + 16);
    id v101 = v100;
    *(void *)(v84 + 16) = v100;
    long long v102 = *(void **)(v85 + 24);
    id v103 = v102;
    *(void *)(v84 + 24) = v102;
    *(unsigned char *)(v84 + 32) = *(unsigned char *)(v85 + 32);
    *(unsigned char *)(v84 + 33) = *(unsigned char *)(v85 + 33);
    *(unsigned char *)(v84 + 34) = *(unsigned char *)(v85 + 34);
    *(void *)(v84 + 40) = *(void *)(v85 + 40);
    *(void *)(v84 + 48) = *(void *)(v85 + 48);
    *(void *)(v84 + 56) = *(void *)(v85 + 56);
    *(void *)(v84 + 64) = *(void *)(v85 + 64);
    *(unsigned char *)(v84 + 72) = *(unsigned char *)(v85 + 72);
    *(void *)(v84 + 80) = *(void *)(v85 + 80);
    *(void *)(v84 + 88) = *(void *)(v85 + 88);
    uint64_t v122 = *(void **)(v85 + 96);
    *(void *)(v84 + 96) = v122;
    *(unsigned char *)(v84 + 104) = *(unsigned char *)(v85 + 104);
    *(unsigned char *)(v84 + 105) = *(unsigned char *)(v85 + 105);
    *(void *)(v84 + 112) = *(void *)(v85 + 112);
    *(void *)(v84 + 120) = *(void *)(v85 + 120);
    *(void *)(v84 + 128) = *(void *)(v85 + 128);
    *(void *)(v84 + 136) = *(void *)(v85 + 136);
    *(void *)(v84 + 144) = *(void *)(v85 + 144);
    *(void *)(v84 + 152) = *(void *)(v85 + 152);
    *(void *)(v84 + 160) = *(void *)(v85 + 160);
    *(void *)(v84 + 168) = *(void *)(v85 + 168);
    *(unsigned char *)(v84 + 176) = *(unsigned char *)(v85 + 176);
    *(void *)(v84 + 184) = *(void *)(v85 + 184);
    uint64_t v104 = *(void *)(v85 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v105 = v122;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v104)
    {
      *(void *)(v84 + 192) = v104;
      *(void *)(v84 + 200) = *(void *)(v85 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      *(_OWORD *)(v84 + 192) = *(_OWORD *)(v85 + 192);
    }
    *(void *)(v84 + 208) = *(void *)(v85 + 208);
    *(void *)(v84 + 216) = *(void *)(v85 + 216);
    *(void *)(v84 + 224) = *(void *)(v85 + 224);
    *(void *)(v84 + 232) = *(void *)(v85 + 232);
    *(void *)(v84 + 240) = *(void *)(v85 + 240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v88 = *(_OWORD *)v85;
    long long v89 = *(_OWORD *)(v85 + 16);
    long long v90 = *(_OWORD *)(v85 + 48);
    *(_OWORD *)(v84 + 32) = *(_OWORD *)(v85 + 32);
    *(_OWORD *)(v84 + 48) = v90;
    *(_OWORD *)unint64_t v84 = v88;
    *(_OWORD *)(v84 + 16) = v89;
    long long v91 = *(_OWORD *)(v85 + 64);
    long long v92 = *(_OWORD *)(v85 + 80);
    long long v93 = *(_OWORD *)(v85 + 112);
    *(_OWORD *)(v84 + 96) = *(_OWORD *)(v85 + 96);
    *(_OWORD *)(v84 + 112) = v93;
    *(_OWORD *)(v84 + 64) = v91;
    *(_OWORD *)(v84 + 80) = v92;
    long long v94 = *(_OWORD *)(v85 + 128);
    long long v95 = *(_OWORD *)(v85 + 144);
    long long v96 = *(_OWORD *)(v85 + 176);
    *(_OWORD *)(v84 + 160) = *(_OWORD *)(v85 + 160);
    *(_OWORD *)(v84 + 176) = v96;
    *(_OWORD *)(v84 + 128) = v94;
    *(_OWORD *)(v84 + 144) = v95;
    long long v97 = *(_OWORD *)(v85 + 192);
    long long v98 = *(_OWORD *)(v85 + 208);
    long long v99 = *(_OWORD *)(v85 + 224);
    *(void *)(v84 + 240) = *(void *)(v85 + 240);
    *(_OWORD *)(v84 + 208) = v98;
    *(_OWORD *)(v84 + 224) = v99;
    *(_OWORD *)(v84 + 192) = v97;
  }
  unint64_t v106 = (_OWORD *)((v84 + 255) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v107 = (long long *)((v85 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v108 = *v107;
  *(_OWORD *)((char *)v106 + 9) = *(long long *)((char *)v107 + 9);
  _OWORD *v106 = v108;
  unint64_t v109 = (v84 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v110 = (v85 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v111 = *(_OWORD *)v110;
  *(unsigned char *)(v109 + 16) = *(unsigned char *)(v110 + 16);
  *(_OWORD *)unint64_t v109 = v111;
  uint64_t v112 = (void *)((v84 + 311) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v113 = (v85 + 311) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v114 = *(void *)v113;
  v113 += 15;
  *uint64_t v112 = v114;
  uint64_t v115 = (void *)(((unint64_t)v112 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v116 = *(void *)(v113 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v117 = *(void *)((v113 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_24D5203A8(v116, v117);
  *uint64_t v115 = v116;
  v115[1] = v117;
  return v123;
}

uint64_t sub_24D97F690(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 56);
  uint64_t v140 = a1;
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v6(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  int v14 = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = v14 | v17 | 7;
  uint64_t v19 = v8 + v18;
  uint64_t v20 = (v8 + v18 + v10) & ~v18;
  uint64_t v21 = (v19 + v11) & ~v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 24))(v20, v21, v12);
  uint64_t v22 = *(void *)(v13 + 64) + 7;
  uint64_t v23 = (void *)((v22 + v20) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v24 = (void *)((v22 + v21) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v23 = *v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v25 = ((unint64_t)v23 + v17 + 8) & ~v17;
  (*(void (**)(uint64_t, unint64_t, uint64_t))(v16 + 24))(v25, ((unint64_t)v24 + v17 + 8) & ~v17, v15);
  uint64_t v26 = *(void *)(v16 + 64) + 7;
  unint64_t v27 = (void *)((v26 + v25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v28 = (v26 + (((unint64_t)v24 + v17 + 8) & ~v17)) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = *(void *)v28;
  v28 += 15;
  void *v27 = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = (void *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v30 = *(void *)(v28 & 0xFFFFFFFFFFFFFFF8);
  v30[1] = *(void *)((v28 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v31 = ((((v26 + ((v17 + 8 + (v22 & 0xFFFFFFFFFFFFFFF8)) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v32 = (void *)(v31 + v20);
  unint64_t v33 = v31 + v21;
  void *v32 = *(void *)(v31 + v21);
  v32[1] = *(void *)(v31 + v21 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_24DCC8CE8();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = v35;
  uint64_t v37 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v38 = (v37 | 7) + 16;
  uint64_t v39 = ((unint64_t)v32 + v38) & ~(v37 | 7);
  uint64_t v40 = (v38 + v33) & ~(v37 | 7);
  *(unsigned char *)uint64_t v39 = *(unsigned char *)v40;
  char v41 = *(unsigned char *)(v40 + 8);
  *(_DWORD *)(v39 + 4) = *(_DWORD *)(v40 + 4);
  *(unsigned char *)(v39 + 8) = v41;
  *(_WORD *)(v39 + 10) = *(_WORD *)(v40 + 0xA);
  uint64_t v141 = v40;
  uint64_t v142 = v39;
  uint64_t v42 = (v37 + 12 + v39) & ~v37;
  uint64_t v43 = (v37 + 12 + v40) & ~v37;
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v35 + 24);
  v44(v42, v43, v34);
  size_t v45 = *(void *)(v35 + 64);
  uint64_t v46 = (v45 + v37 + v42) & ~v37;
  long long v139 = (void (*)(void *, const void *, uint64_t))v44;
  v44(v46, (v45 + v37 + v43) & ~v37, v34);
  uint64_t v47 = (unsigned char *)(v46 + v45);
  uint64_t v48 = (unsigned char *)(((v45 + v37 + v43) & ~v37) + v45);
  *uint64_t v47 = *v48;
  v47[1] = v48[1];
  v47[2] = v48[2];
  v47[3] = v48[3];
  v47[4] = v48[4];
  unint64_t v49 = (v46 + v45 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v50 = (unint64_t)(v48 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v49 = *(void *)v50;
  *(void *)(v49 + 8) = *(void *)(v50 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v49 + 16) = *(unsigned char *)(v50 + 16);
  *(unsigned char *)(v49 + 17) = *(unsigned char *)(v50 + 17);
  *(unsigned char *)(v49 + 18) = *(unsigned char *)(v50 + 18);
  *(unsigned char *)(v49 + 19) = *(unsigned char *)(v50 + 19);
  unint64_t v51 = (v49 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v52 = (v50 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v51 = *(void *)v52;
  *(unsigned char *)(v51 + 8) = *(unsigned char *)(v52 + 8);
  *(unsigned char *)(v51 + 9) = *(unsigned char *)(v52 + 9);
  *(unsigned char *)(v51 + 10) = *(unsigned char *)(v52 + 10);
  *(unsigned char *)(v51 + 11) = *(unsigned char *)(v52 + 11);
  *(unsigned char *)(v51 + 12) = *(unsigned char *)(v52 + 12);
  unint64_t v53 = (void *)((v49 + 47) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v54 = (void *)((v50 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v53 = *v54;
  unint64_t v55 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v56 = ((unint64_t)v54 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v55 = *(void *)v56;
  *(unsigned char *)(v55 + 8) = *(unsigned char *)(v56 + 8);
  *(unsigned char *)(v55 + 9) = *(unsigned char *)(v56 + 9);
  unint64_t v57 = (void *)((v37 + 10 + v55) & ~v37);
  uint64_t v58 = (void *)((v37 + 10 + v56) & ~v37);
  uint64_t v59 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v36 + 48);
  LODWORD(v50) = v59(v57, 1, v34);
  int v60 = v59(v58, 1, v34);
  if (v50)
  {
    if (!v60)
    {
      (*(void (**)(void *, void *, uint64_t))(v36 + 16))(v57, v58, v34);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v36 + 56))(v57, 0, 1, v34);
      goto LABEL_12;
    }
    int v61 = *(_DWORD *)(v36 + 84);
  }
  else
  {
    if (!v60)
    {
      v139(v57, v58, v34);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v36 + 8))(v57, v34);
    int v61 = *(_DWORD *)(v36 + 84);
  }
  if (v61) {
    size_t v62 = v45;
  }
  else {
    size_t v62 = v45 + 1;
  }
  memcpy(v57, v58, v62);
LABEL_12:
  if (*(_DWORD *)(v36 + 84)) {
    size_t v63 = v45;
  }
  else {
    size_t v63 = v45 + 1;
  }
  uint64_t v64 = (uint64_t)v57 + v63 + 7;
  uint64_t v65 = (void *)(((unint64_t)v58 + v63 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v66 = (v64 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v64 & 0xFFFFFFFFFFFFFFF8) = *v65;
  unint64_t v67 = (v64 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v68 = v66 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v69 = ((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = *(void *)v69;
  *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
  *(void *)unint64_t v68 = v70;
  unint64_t v71 = (void *)(((unint64_t)v65 + 31) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v67 & 0xFFFFFFFFFFFFFFF8) = *v71;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v72 = (uint64_t *)(((v67 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v73 = (uint64_t *)(((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v74 = v72[1];
  unint64_t v75 = v73[1];
  uint64_t v76 = v75 & 0x3000000000000000;
  if ((v74 & 0x3000000000000000) != 0)
  {
    if (!v76)
    {
      uint64_t v77 = *v73;
      sub_24D3F9C18(*v73, v75);
      *uint64_t v72 = v77;
      v72[1] = v75;
      goto LABEL_21;
    }
    goto LABEL_20;
  }
  if (v76)
  {
    sub_24D400DCC(*v72, v74);
LABEL_20:
    *(_OWORD *)uint64_t v72 = *(_OWORD *)v73;
    goto LABEL_21;
  }
  uint64_t v112 = *v73;
  sub_24D3F9C18(*v73, v75);
  uint64_t v113 = *v72;
  unint64_t v114 = v72[1];
  *uint64_t v72 = v112;
  v72[1] = v75;
  sub_24D400DCC(v113, v114);
LABEL_21:
  unint64_t v78 = ((unint64_t)v72 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v79 = ((unint64_t)v73 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v80 = *(void *)v79;
  *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
  *(void *)unint64_t v78 = v80;
  *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
  unint64_t v81 = (v78 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v82 = (v79 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v83 = *(_DWORD *)v82;
  *(unsigned char *)(v81 + 4) = *(unsigned char *)(v82 + 4);
  *(_DWORD *)unint64_t v81 = v83;
  unint64_t v84 = (void *)((v78 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v85 = (void *)((v79 + 25) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v84 = *v85;
  v84[1] = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v89 = ((((((((((((v37
                  + 10
                  + ((((((v45 + ((((v37 + 12) | v37) + v45) & ~v37) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v37)
                + v63
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v86 = v89 + v142;
  unint64_t v87 = v89 + v141;
  long long v88 = *(void **)(v89 + v142 + 16);
  LODWORD(v89) = -1;
  if ((unint64_t)v88 >= 0xFFFFFFFF) {
    int v90 = -1;
  }
  else {
    int v90 = (int)v88;
  }
  int v91 = v90 - 1;
  if (*(void *)(v87 + 16) < 0xFFFFFFFFuLL) {
    unint64_t v89 = *(void *)(v87 + 16);
  }
  int v92 = v89 - 1;
  if (v91 < 0)
  {
    if ((v92 & 0x80000000) == 0)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v86 + 192))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_34;
    }
    *(void *)unint64_t v86 = *(void *)v87;
    *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
    *(unsigned char *)(v86 + 9) = *(unsigned char *)(v87 + 9);
    uint64_t v115 = *(void **)(v87 + 16);
    id v116 = v115;
    *(void *)(v86 + 16) = v115;

    unint64_t v117 = *(void **)(v86 + 24);
    uint64_t v118 = *(void **)(v87 + 24);
    id v119 = v118;
    *(void *)(v86 + 24) = v118;

    *(unsigned char *)(v86 + 32) = *(unsigned char *)(v87 + 32);
    *(unsigned char *)(v86 + 33) = *(unsigned char *)(v87 + 33);
    *(unsigned char *)(v86 + 34) = *(unsigned char *)(v87 + 34);
    *(void *)(v86 + 40) = *(void *)(v87 + 40);
    *(void *)(v86 + 48) = *(void *)(v87 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 56) = *(void *)(v87 + 56);
    *(void *)(v86 + 64) = *(void *)(v87 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v86 + 72) = *(unsigned char *)(v87 + 72);
    *(void *)(v86 + 80) = *(void *)(v87 + 80);
    *(void *)(v86 + 88) = *(void *)(v87 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v120 = *(void **)(v86 + 96);
    uint64_t v121 = *(void **)(v87 + 96);
    *(void *)(v86 + 96) = v121;
    id v122 = v121;

    *(unsigned char *)(v86 + 104) = *(unsigned char *)(v87 + 104);
    *(unsigned char *)(v86 + 105) = *(unsigned char *)(v87 + 105);
    *(void *)(v86 + 112) = *(void *)(v87 + 112);
    *(void *)(v86 + 120) = *(void *)(v87 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 128) = *(void *)(v87 + 128);
    *(void *)(v86 + 136) = *(void *)(v87 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 144) = *(void *)(v87 + 144);
    *(void *)(v86 + 152) = *(void *)(v87 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(v86 + 160) = *(void *)(v87 + 160);
    *(void *)(v86 + 168) = *(void *)(v87 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)(v86 + 176) = *(unsigned char *)(v87 + 176);
    *(void *)(v86 + 184) = *(void *)(v87 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v123 = *(void *)(v87 + 192);
    if (*(void *)(v86 + 192))
    {
      if (v123)
      {
        *(void *)(v86 + 192) = v123;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v86 + 200) = *(void *)(v87 + 200);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
LABEL_45:
        uint64_t v111 = v140;
        *(void *)(v86 + 208) = *(void *)(v87 + 208);
        *(void *)(v86 + 216) = *(void *)(v87 + 216);
        *(void *)(v86 + 224) = *(void *)(v87 + 224);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(void *)(v86 + 232) = *(void *)(v87 + 232);
        *(void *)(v86 + 240) = *(void *)(v87 + 240);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
      sub_24D5F9A0C(v86 + 192);
    }
    else if (v123)
    {
      *(void *)(v86 + 192) = v123;
      *(void *)(v86 + 200) = *(void *)(v87 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_45;
    }
    *(_OWORD *)(v86 + 192) = *(_OWORD *)(v87 + 192);
    goto LABEL_45;
  }
  if ((v92 & 0x80000000) == 0)
  {
LABEL_34:
    long long v99 = *(_OWORD *)v87;
    long long v100 = *(_OWORD *)(v87 + 16);
    long long v101 = *(_OWORD *)(v87 + 48);
    *(_OWORD *)(v86 + 32) = *(_OWORD *)(v87 + 32);
    *(_OWORD *)(v86 + 48) = v101;
    *(_OWORD *)unint64_t v86 = v99;
    *(_OWORD *)(v86 + 16) = v100;
    long long v102 = *(_OWORD *)(v87 + 64);
    long long v103 = *(_OWORD *)(v87 + 80);
    long long v104 = *(_OWORD *)(v87 + 112);
    *(_OWORD *)(v86 + 96) = *(_OWORD *)(v87 + 96);
    *(_OWORD *)(v86 + 112) = v104;
    *(_OWORD *)(v86 + 64) = v102;
    *(_OWORD *)(v86 + 80) = v103;
    long long v105 = *(_OWORD *)(v87 + 128);
    long long v106 = *(_OWORD *)(v87 + 144);
    long long v107 = *(_OWORD *)(v87 + 176);
    *(_OWORD *)(v86 + 160) = *(_OWORD *)(v87 + 160);
    *(_OWORD *)(v86 + 176) = v107;
    *(_OWORD *)(v86 + 128) = v105;
    *(_OWORD *)(v86 + 144) = v106;
    long long v108 = *(_OWORD *)(v87 + 192);
    long long v109 = *(_OWORD *)(v87 + 208);
    long long v110 = *(_OWORD *)(v87 + 224);
    *(void *)(v86 + 240) = *(void *)(v87 + 240);
    *(_OWORD *)(v86 + 208) = v109;
    *(_OWORD *)(v86 + 224) = v110;
    *(_OWORD *)(v86 + 192) = v108;
    uint64_t v111 = v140;
    goto LABEL_46;
  }
  *(void *)unint64_t v86 = *(void *)v87;
  *(unsigned char *)(v86 + 8) = *(unsigned char *)(v87 + 8);
  *(unsigned char *)(v86 + 9) = *(unsigned char *)(v87 + 9);
  long long v93 = *(void **)(v87 + 16);
  id v94 = v93;
  *(void *)(v86 + 16) = v93;
  long long v95 = *(void **)(v87 + 24);
  id v96 = v95;
  *(void *)(v86 + 24) = v95;
  *(unsigned char *)(v86 + 32) = *(unsigned char *)(v87 + 32);
  *(unsigned char *)(v86 + 33) = *(unsigned char *)(v87 + 33);
  *(unsigned char *)(v86 + 34) = *(unsigned char *)(v87 + 34);
  *(void *)(v86 + 40) = *(void *)(v87 + 40);
  *(void *)(v86 + 48) = *(void *)(v87 + 48);
  *(void *)(v86 + 56) = *(void *)(v87 + 56);
  *(void *)(v86 + 64) = *(void *)(v87 + 64);
  *(unsigned char *)(v86 + 72) = *(unsigned char *)(v87 + 72);
  *(void *)(v86 + 80) = *(void *)(v87 + 80);
  *(void *)(v86 + 88) = *(void *)(v87 + 88);
  uint64_t v143 = *(void **)(v87 + 96);
  *(void *)(v86 + 96) = v143;
  *(unsigned char *)(v86 + 104) = *(unsigned char *)(v87 + 104);
  *(unsigned char *)(v86 + 105) = *(unsigned char *)(v87 + 105);
  *(void *)(v86 + 112) = *(void *)(v87 + 112);
  *(void *)(v86 + 120) = *(void *)(v87 + 120);
  *(void *)(v86 + 128) = *(void *)(v87 + 128);
  *(void *)(v86 + 136) = *(void *)(v87 + 136);
  *(void *)(v86 + 144) = *(void *)(v87 + 144);
  *(void *)(v86 + 152) = *(void *)(v87 + 152);
  *(void *)(v86 + 160) = *(void *)(v87 + 160);
  *(void *)(v86 + 168) = *(void *)(v87 + 168);
  *(unsigned char *)(v86 + 176) = *(unsigned char *)(v87 + 176);
  *(void *)(v86 + 184) = *(void *)(v87 + 184);
  uint64_t v97 = *(void *)(v87 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v98 = v143;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v97)
  {
    *(void *)(v86 + 192) = v97;
    *(void *)(v86 + 200) = *(void *)(v87 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(v86 + 192) = *(_OWORD *)(v87 + 192);
  }
  uint64_t v111 = v140;
  *(void *)(v86 + 208) = *(void *)(v87 + 208);
  *(void *)(v86 + 216) = *(void *)(v87 + 216);
  *(void *)(v86 + 224) = *(void *)(v87 + 224);
  *(void *)(v86 + 232) = *(void *)(v87 + 232);
  *(void *)(v86 + 240) = *(void *)(v87 + 240);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_46:
  uint64_t v124 = (_OWORD *)((v86 + 255) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v125 = (long long *)((v87 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v126 = *v125;
  *(_OWORD *)((char *)v124 + 9) = *(long long *)((char *)v125 + 9);
  *uint64_t v124 = v126;
  unint64_t v127 = (v86 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v128 = (v87 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v129 = *(_OWORD *)v128;
  *(unsigned char *)(v127 + 16) = *(unsigned char *)(v128 + 16);
  *(_OWORD *)unint64_t v127 = v129;
  uint64_t v130 = (void *)((v86 + 311) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v131 = (v87 + 311) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v132 = *(void *)v131;
  v131 += 15;
  void *v130 = v132;
  uint64_t v133 = (uint64_t *)(((unint64_t)v130 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v134 = *(void *)(v131 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v135 = *(void *)((v131 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_24D5203A8(v134, v135);
  uint64_t v136 = *v133;
  unint64_t v137 = v133[1];
  *uint64_t v133 = v134;
  v133[1] = v135;
  sub_24D466534(v136, v137);
  return v111;
}

uint64_t sub_24D98039C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 48);
  uint64_t v99 = a1;
  uint64_t v10 = (v8 + v9 + a1) & ~v9;
  uint64_t v11 = (v8 + v9 + a2) & ~v9;
  v6(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  LODWORD(v7) = *(_DWORD *)(v13 + 80) & 0xF8;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v7 | v16 | 7;
  uint64_t v18 = (v8 + v17 + v10) & ~v17;
  uint64_t v19 = (v8 + v17 + v11) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v18, v19, v12);
  uint64_t v20 = *(void *)(v13 + 64) + 7;
  uint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  uint64_t v23 = ((unint64_t)v21 + v16 + 8) & ~v16;
  uint64_t v24 = ((unint64_t)v22 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v23, v24, v14);
  uint64_t v25 = *(void *)(v15 + 64) + 7;
  uint64_t v26 = (void *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (void *)((v25 + v24) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v26 = *v27;
  *(_OWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v27 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v28 = ((((v25 + ((v16 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v29 = v28 + v18;
  uint64_t v30 = (_OWORD *)(v28 + v19);
  *(_OWORD *)(v28 + v18) = *v30;
  uint64_t v31 = sub_24DCC8CE8();
  uint64_t v32 = *(void *)(v31 - 8);
  uint64_t v33 = v32;
  uint64_t v34 = *(unsigned __int8 *)(v32 + 80);
  uint64_t v35 = (v34 | 7) + 16;
  uint64_t v36 = (v35 + v29) & ~(v34 | 7);
  uint64_t v37 = ((unint64_t)v30 + v35) & ~(v34 | 7);
  *(unsigned char *)uint64_t v36 = *(unsigned char *)v37;
  char v38 = *(unsigned char *)(v37 + 8);
  *(_DWORD *)(v36 + 4) = *(_DWORD *)(v37 + 4);
  *(unsigned char *)(v36 + 8) = v38;
  *(_WORD *)(v36 + 10) = *(_WORD *)(v37 + 0xA);
  uint64_t v98 = v36;
  uint64_t v39 = (v34 + 12 + v36) & ~v34;
  uint64_t v97 = v37;
  uint64_t v40 = (v34 + 12 + v37) & ~v34;
  char v41 = *(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 32);
  v41(v39, v40, v31);
  size_t v42 = *(void *)(v32 + 64);
  uint64_t v43 = (v42 + v34 + v39) & ~v34;
  uint64_t v44 = (v42 + v34 + v40) & ~v34;
  v41(v43, v44, v31);
  size_t v45 = (unsigned char *)(v43 + v42);
  *size_t v45 = *(unsigned char *)(v44 + v42);
  v45[1] = *(unsigned char *)(v44 + v42 + 1);
  v45[2] = *(unsigned char *)(v44 + v42 + 2);
  v45[3] = *(unsigned char *)(v44 + v42 + 3);
  v45[4] = *(unsigned char *)(v44 + v42 + 4);
  unint64_t v46 = (v43 + v42 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (v44 + v42 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(_OWORD *)unint64_t v46 = *(_OWORD *)v47;
  *(unsigned char *)(v46 + 16) = *(unsigned char *)(v47 + 16);
  *(unsigned char *)(v46 + 17) = *(unsigned char *)(v47 + 17);
  *(unsigned char *)(v46 + 18) = *(unsigned char *)(v47 + 18);
  *(unsigned char *)(v46 + 19) = *(unsigned char *)(v47 + 19);
  unint64_t v48 = (v46 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = (v47 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v48 = *(void *)v49;
  *(unsigned char *)(v48 + 8) = *(unsigned char *)(v49 + 8);
  *(unsigned char *)(v48 + 9) = *(unsigned char *)(v49 + 9);
  *(unsigned char *)(v48 + 10) = *(unsigned char *)(v49 + 10);
  *(unsigned char *)(v48 + 11) = *(unsigned char *)(v49 + 11);
  *(unsigned char *)(v48 + 12) = *(unsigned char *)(v49 + 12);
  unint64_t v50 = (void *)((v46 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v51 = (void *)((v47 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v50 = *v51;
  unint64_t v52 = ((unint64_t)v50 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v53 = ((unint64_t)v51 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v52 = *(void *)v53;
  *(unsigned char *)(v52 + 8) = *(unsigned char *)(v53 + 8);
  *(unsigned char *)(v52 + 9) = *(unsigned char *)(v53 + 9);
  uint64_t v54 = (void *)((v34 + 10 + v52) & ~v34);
  unint64_t v55 = (const void *)((v34 + 10 + v53) & ~v34);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v55, 1, v31))
  {
    int v56 = *(_DWORD *)(v33 + 84);
    if (v56) {
      size_t v57 = v42;
    }
    else {
      size_t v57 = v42 + 1;
    }
    memcpy(v54, v55, v57);
  }
  else
  {
    v41((uint64_t)v54, (uint64_t)v55, v31);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v33 + 56))(v54, 0, 1, v31);
    int v56 = *(_DWORD *)(v33 + 84);
  }
  if (v56) {
    size_t v58 = v42;
  }
  else {
    size_t v58 = v42 + 1;
  }
  uint64_t v59 = (void *)(((unint64_t)v55 + v58 + 7) & 0xFFFFFFFFFFFFFFF8);
  int v60 = (void *)(((unint64_t)v54 + v58 + 7) & 0xFFFFFFFFFFFFFFF8);
  void *v60 = *v59;
  unint64_t v61 = ((unint64_t)v60 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v62 = ((unint64_t)v59 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v63 = *(void *)v62;
  *(unsigned char *)(v61 + 8) = *(unsigned char *)(v62 + 8);
  *(void *)unint64_t v61 = v63;
  uint64_t v64 = (void *)(((unint64_t)v60 + 31) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v65 = (void *)(((unint64_t)v59 + 31) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v64 = *v65;
  unint64_t v66 = (_OWORD *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v67 = (_OWORD *)(((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v66 = *v67;
  unint64_t v68 = ((unint64_t)v66 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v69 = ((unint64_t)v67 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v70 = *(void *)v69;
  *(unsigned char *)(v68 + 8) = *(unsigned char *)(v69 + 8);
  *(void *)unint64_t v68 = v70;
  *(unsigned char *)(v68 + 9) = *(unsigned char *)(v69 + 9);
  unint64_t v71 = (v68 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v72 = (v69 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  LODWORD(v63) = *(_DWORD *)v72;
  *(unsigned char *)(v71 + 4) = *(unsigned char *)(v72 + 4);
  *(_DWORD *)unint64_t v71 = v63;
  *(_OWORD *)((v68 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v69 + 25) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v73 = ((((((((((((v34
                  + 10
                  + ((((((v42 + ((((v34 + 12) | v34) + v42) & ~v34) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v34)
                + v58
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v74 = v73 + v98;
  unint64_t v75 = v73 + v97;
  long long v76 = *(_OWORD *)(v75 + 112);
  long long v78 = *(_OWORD *)(v75 + 64);
  long long v77 = *(_OWORD *)(v75 + 80);
  *(_OWORD *)(v74 + 96) = *(_OWORD *)(v75 + 96);
  *(_OWORD *)(v74 + 112) = v76;
  *(_OWORD *)(v74 + 64) = v78;
  *(_OWORD *)(v74 + 80) = v77;
  long long v79 = *(_OWORD *)(v75 + 176);
  long long v81 = *(_OWORD *)(v75 + 128);
  long long v80 = *(_OWORD *)(v75 + 144);
  *(_OWORD *)(v74 + 160) = *(_OWORD *)(v75 + 160);
  *(_OWORD *)(v74 + 176) = v79;
  *(_OWORD *)(v74 + 128) = v81;
  *(_OWORD *)(v74 + 144) = v80;
  long long v83 = *(_OWORD *)(v75 + 208);
  long long v82 = *(_OWORD *)(v75 + 224);
  long long v84 = *(_OWORD *)(v75 + 192);
  *(void *)(v74 + 240) = *(void *)(v75 + 240);
  *(_OWORD *)(v74 + 208) = v83;
  *(_OWORD *)(v74 + 224) = v82;
  *(_OWORD *)(v74 + 192) = v84;
  long long v85 = *(_OWORD *)v75;
  long long v86 = *(_OWORD *)(v75 + 16);
  long long v87 = *(_OWORD *)(v75 + 48);
  *(_OWORD *)(v74 + 32) = *(_OWORD *)(v75 + 32);
  *(_OWORD *)(v74 + 48) = v87;
  *(_OWORD *)unint64_t v74 = v85;
  *(_OWORD *)(v74 + 16) = v86;
  long long v88 = (_OWORD *)((v74 + 255) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v89 = (long long *)((v75 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v90 = *v89;
  *(_OWORD *)((char *)v88 + 9) = *(long long *)((char *)v89 + 9);
  *long long v88 = v90;
  unint64_t v91 = (v74 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v92 = (v75 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v93 = *(_OWORD *)v92;
  *(unsigned char *)(v91 + 16) = *(unsigned char *)(v92 + 16);
  *(_OWORD *)unint64_t v91 = v93;
  id v94 = (void *)((v74 + 311) & 0xFFFFFFFFFFFFFFF8);
  long long v95 = (void *)((v75 + 311) & 0xFFFFFFFFFFFFFFF8);
  *id v94 = *v95;
  *(_OWORD *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v95 + 15) & 0xFFFFFFFFFFFFFFF8);
  return v99;
}

uint64_t sub_24D980A5C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v120 = *(void *)(v7 + 24);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 40);
  uint64_t v118 = a1;
  uint64_t v9 = (v120 + v8 + a1) & ~v8;
  uint64_t v10 = (v120 + v8 + a2) & ~v8;
  v6(v9, v10, AssociatedTypeWitness);
  uint64_t v11 = swift_getAssociatedTypeWitness();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(_DWORD *)(v12 + 80) & 0xF8;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(unsigned __int8 *)(v15 + 80);
  uint64_t v17 = v13 | v16 | 7;
  uint64_t v18 = (v120 + v17 + v9) & ~v17;
  uint64_t v19 = (v120 + v17 + v10) & ~v17;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 40))(v18, v19, v11);
  uint64_t v20 = *(void *)(v12 + 64) + 7;
  uint64_t v21 = (void *)((v20 + v18) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v22 = (void *)((v20 + v19) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v21 = *v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = ((unint64_t)v21 + v16 + 8) & ~v16;
  uint64_t v24 = ((unint64_t)v22 + v16 + 8) & ~v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 40))(v23, v24, v14);
  uint64_t v25 = *(void *)(v15 + 64) + 7;
  uint64_t v26 = (void *)((v25 + v23) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v27 = (v25 + v24) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = *(void *)v27;
  v27 += 15;
  *uint64_t v26 = v28;
  swift_bridgeObjectRelease();
  unint64_t v29 = (void *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v29 = *(void *)(v27 & 0xFFFFFFFFFFFFFFF8);
  v29[1] = *(void *)((v27 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRelease();
  unint64_t v30 = ((((v25 + ((v16 + 8 + (v20 & 0xFFFFFFFFFFFFFFF8)) & ~v16)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v31 = (void *)(v30 + v18);
  unint64_t v32 = v30 + v19;
  void *v31 = *(void *)(v30 + v19);
  v31[1] = *(void *)(v30 + v19 + 8);
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_24DCC8CE8();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = v34;
  uint64_t v36 = *(unsigned __int8 *)(v34 + 80);
  uint64_t v37 = (v36 | 7) + 16;
  uint64_t v38 = ((unint64_t)v31 + v37) & ~(v36 | 7);
  uint64_t v39 = (v37 + v32) & ~(v36 | 7);
  *(unsigned char *)uint64_t v38 = *(unsigned char *)v39;
  char v40 = *(unsigned char *)(v39 + 8);
  *(_DWORD *)(v38 + 4) = *(_DWORD *)(v39 + 4);
  *(unsigned char *)(v38 + 8) = v40;
  *(_WORD *)(v38 + 10) = *(_WORD *)(v39 + 0xA);
  uint64_t v119 = v39;
  uint64_t v121 = v38;
  uint64_t v41 = (v36 + 12 + v38) & ~v36;
  uint64_t v42 = (v36 + 12 + v39) & ~v36;
  uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 40);
  v43(v41, v42, v33);
  size_t v44 = *(void *)(v34 + 64);
  uint64_t v45 = (v44 + v36 + v41) & ~v36;
  uint64_t v46 = (v44 + v36 + v42) & ~v36;
  unint64_t v117 = (void (*)(void *, const void *, uint64_t))v43;
  v43(v45, v46, v33);
  unint64_t v47 = (unsigned char *)(v45 + v44);
  *unint64_t v47 = *(unsigned char *)(v46 + v44);
  v47[1] = *(unsigned char *)(v46 + v44 + 1);
  v47[2] = *(unsigned char *)(v46 + v44 + 2);
  v47[3] = *(unsigned char *)(v46 + v44 + 3);
  v47[4] = *(unsigned char *)(v46 + v44 + 4);
  unint64_t v48 = (v45 + v44 + 12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v49 = (v46 + v44 + 12) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v48 = *(void *)v49;
  *(void *)(v48 + 8) = *(void *)(v49 + 8);
  swift_bridgeObjectRelease();
  *(unsigned char *)(v48 + 16) = *(unsigned char *)(v49 + 16);
  *(unsigned char *)(v48 + 17) = *(unsigned char *)(v49 + 17);
  *(unsigned char *)(v48 + 18) = *(unsigned char *)(v49 + 18);
  *(unsigned char *)(v48 + 19) = *(unsigned char *)(v49 + 19);
  unint64_t v50 = (v48 + 27) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v51 = (v49 + 27) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v50 = *(void *)v51;
  *(unsigned char *)(v50 + 8) = *(unsigned char *)(v51 + 8);
  *(unsigned char *)(v50 + 9) = *(unsigned char *)(v51 + 9);
  *(unsigned char *)(v50 + 10) = *(unsigned char *)(v51 + 10);
  *(unsigned char *)(v50 + 11) = *(unsigned char *)(v51 + 11);
  *(unsigned char *)(v50 + 12) = *(unsigned char *)(v51 + 12);
  unint64_t v52 = (void *)((v48 + 47) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v53 = (void *)((v49 + 47) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v52 = *v53;
  unint64_t v54 = ((unint64_t)v52 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v55 = ((unint64_t)v53 + 15) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v54 = *(void *)v55;
  *(unsigned char *)(v54 + 8) = *(unsigned char *)(v55 + 8);
  *(unsigned char *)(v54 + 9) = *(unsigned char *)(v55 + 9);
  int v56 = (void *)((v36 + 10 + v54) & ~v36);
  size_t v57 = (void *)((v36 + 10 + v55) & ~v36);
  size_t v58 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  LODWORD(v42) = v58(v56, 1, v33);
  int v59 = v58(v57, 1, v33);
  if (v42)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 32))(v56, v57, v33);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v35 + 56))(v56, 0, 1, v33);
      goto LABEL_12;
    }
    int v60 = *(_DWORD *)(v35 + 84);
  }
  else
  {
    if (!v59)
    {
      v117(v56, v57, v33);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v35 + 8))(v56, v33);
    int v60 = *(_DWORD *)(v35 + 84);
  }
  if (v60) {
    size_t v61 = v44;
  }
  else {
    size_t v61 = v44 + 1;
  }
  memcpy(v56, v57, v61);
LABEL_12:
  if (*(_DWORD *)(v35 + 84)) {
    size_t v62 = v44;
  }
  else {
    size_t v62 = v44 + 1;
  }
  uint64_t v63 = (uint64_t)v56 + v62 + 7;
  uint64_t v64 = (void *)(((unint64_t)v57 + v62 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v65 = (v63 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)(v63 & 0xFFFFFFFFFFFFFFF8) = *v64;
  unint64_t v66 = (v63 & 0xFFFFFFFFFFFFFFF8) + 31;
  swift_bridgeObjectRelease();
  unint64_t v67 = v65 & 0xFFFFFFFFFFFFFFF8;
  unint64_t v68 = ((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v69 = *(void *)v68;
  *(unsigned char *)(v67 + 8) = *(unsigned char *)(v68 + 8);
  *(void *)unint64_t v67 = v69;
  uint64_t v70 = (void *)(((unint64_t)v64 + 31) & 0xFFFFFFFFFFFFFFF8);
  *(void *)(v66 & 0xFFFFFFFFFFFFFFF8) = *v70;
  swift_bridgeObjectRelease();
  unint64_t v71 = (uint64_t *)(((v66 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v72 = ((unint64_t)v70 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v73 = v71[1];
  if ((v73 & 0x3000000000000000) != 0) {
    goto LABEL_18;
  }
  uint64_t v74 = *(void *)(v72 + 8);
  if ((v74 & 0x3000000000000000) != 0)
  {
    sub_24D400DCC(*v71, v73);
LABEL_18:
    *(_OWORD *)unint64_t v71 = *(_OWORD *)v72;
    goto LABEL_19;
  }
  uint64_t v113 = *v71;
  uint64_t *v71 = *(void *)v72;
  v71[1] = v74;
  sub_24D400DCC(v113, v73);
LABEL_19:
  unint64_t v75 = ((unint64_t)v71 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v76 = (v72 + 19) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v77 = *(void *)v76;
  *(unsigned char *)(v75 + 8) = *(unsigned char *)(v76 + 8);
  *(void *)unint64_t v75 = v77;
  *(unsigned char *)(v75 + 9) = *(unsigned char *)(v76 + 9);
  unint64_t v78 = (v75 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  unint64_t v79 = (v76 + 13) & 0xFFFFFFFFFFFFFFFCLL;
  int v80 = *(_DWORD *)v79;
  *(unsigned char *)(v78 + 4) = *(unsigned char *)(v79 + 4);
  *(_DWORD *)unint64_t v78 = v80;
  long long v81 = (void *)((v75 + 25) & 0xFFFFFFFFFFFFFFF8);
  long long v82 = (void *)((v76 + 25) & 0xFFFFFFFFFFFFFFF8);
  *long long v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRelease();
  unint64_t v83 = ((((((((((((v36
                  + 10
                  + ((((((v44 + ((((v36 + 12) | v36) + v44) & ~v36) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v36)
                + v62
                + 7) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v84 = v83 + v121;
  unint64_t v85 = v83 + v119;
  long long v86 = *(void **)(v83 + v121 + 16);
  int v87 = -1;
  if ((unint64_t)v86 < 0xFFFFFFFF) {
    int v87 = (int)v86;
  }
  if (v87 - 1 >= 0) {
    goto LABEL_28;
  }
  unint64_t v88 = *(void *)(v85 + 16);
  if (v88 >= 0xFFFFFFFF) {
    LODWORD(v88) = -1;
  }
  if ((int)v88 - 1 < 0)
  {
    *(void *)unint64_t v84 = *(void *)v85;
    *(unsigned char *)(v84 + 8) = *(unsigned char *)(v85 + 8);
    *(unsigned char *)(v84 + 9) = *(unsigned char *)(v85 + 9);
    *(void *)(v84 + 16) = *(void *)(v85 + 16);

    unint64_t v114 = *(void **)(v84 + 24);
    *(void *)(v84 + 24) = *(void *)(v85 + 24);

    *(unsigned char *)(v84 + 32) = *(unsigned char *)(v85 + 32);
    *(unsigned char *)(v84 + 33) = *(unsigned char *)(v85 + 33);
    *(unsigned char *)(v84 + 34) = *(unsigned char *)(v85 + 34);
    *(void *)(v84 + 40) = *(void *)(v85 + 40);
    *(void *)(v84 + 48) = *(void *)(v85 + 48);
    swift_bridgeObjectRelease();
    *(void *)(v84 + 56) = *(void *)(v85 + 56);
    *(void *)(v84 + 64) = *(void *)(v85 + 64);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v84 + 72) = *(unsigned char *)(v85 + 72);
    *(void *)(v84 + 80) = *(void *)(v85 + 80);
    *(void *)(v84 + 88) = *(void *)(v85 + 88);
    swift_bridgeObjectRelease();
    uint64_t v115 = *(void **)(v84 + 96);
    *(void *)(v84 + 96) = *(void *)(v85 + 96);

    *(unsigned char *)(v84 + 104) = *(unsigned char *)(v85 + 104);
    *(unsigned char *)(v84 + 105) = *(unsigned char *)(v85 + 105);
    *(void *)(v84 + 112) = *(void *)(v85 + 112);
    *(void *)(v84 + 120) = *(void *)(v85 + 120);
    swift_bridgeObjectRelease();
    *(void *)(v84 + 128) = *(void *)(v85 + 128);
    *(void *)(v84 + 136) = *(void *)(v85 + 136);
    swift_bridgeObjectRelease();
    *(void *)(v84 + 144) = *(void *)(v85 + 144);
    *(void *)(v84 + 152) = *(void *)(v85 + 152);
    swift_bridgeObjectRelease();
    *(void *)(v84 + 160) = *(void *)(v85 + 160);
    *(void *)(v84 + 168) = *(void *)(v85 + 168);
    swift_bridgeObjectRelease();
    *(unsigned char *)(v84 + 176) = *(unsigned char *)(v85 + 176);
    *(void *)(v84 + 184) = *(void *)(v85 + 184);
    swift_bridgeObjectRelease();
    uint64_t v116 = *(void *)(v85 + 192);
    if (*(void *)(v84 + 192))
    {
      if (v116)
      {
        *(void *)(v84 + 192) = v116;
        swift_bridgeObjectRelease();
        *(void *)(v84 + 200) = *(void *)(v85 + 200);
        swift_bridgeObjectRelease();
LABEL_36:
        *(void *)(v84 + 208) = *(void *)(v85 + 208);
        *(void *)(v84 + 216) = *(void *)(v85 + 216);
        *(void *)(v84 + 224) = *(void *)(v85 + 224);
        swift_bridgeObjectRelease();
        *(void *)(v84 + 232) = *(void *)(v85 + 232);
        *(void *)(v84 + 240) = *(void *)(v85 + 240);
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      sub_24D5F9A0C(v84 + 192);
    }
    *(_OWORD *)(v84 + 192) = *(_OWORD *)(v85 + 192);
    goto LABEL_36;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v84 + 192))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_28:
  long long v89 = *(_OWORD *)v85;
  long long v90 = *(_OWORD *)(v85 + 16);
  long long v91 = *(_OWORD *)(v85 + 48);
  *(_OWORD *)(v84 + 32) = *(_OWORD *)(v85 + 32);
  *(_OWORD *)(v84 + 48) = v91;
  *(_OWORD *)unint64_t v84 = v89;
  *(_OWORD *)(v84 + 16) = v90;
  long long v92 = *(_OWORD *)(v85 + 64);
  long long v93 = *(_OWORD *)(v85 + 80);
  long long v94 = *(_OWORD *)(v85 + 112);
  *(_OWORD *)(v84 + 96) = *(_OWORD *)(v85 + 96);
  *(_OWORD *)(v84 + 112) = v94;
  *(_OWORD *)(v84 + 64) = v92;
  *(_OWORD *)(v84 + 80) = v93;
  long long v95 = *(_OWORD *)(v85 + 128);
  long long v96 = *(_OWORD *)(v85 + 144);
  long long v97 = *(_OWORD *)(v85 + 176);
  *(_OWORD *)(v84 + 160) = *(_OWORD *)(v85 + 160);
  *(_OWORD *)(v84 + 176) = v97;
  *(_OWORD *)(v84 + 128) = v95;
  *(_OWORD *)(v84 + 144) = v96;
  long long v98 = *(_OWORD *)(v85 + 192);
  long long v99 = *(_OWORD *)(v85 + 208);
  long long v100 = *(_OWORD *)(v85 + 224);
  *(void *)(v84 + 240) = *(void *)(v85 + 240);
  *(_OWORD *)(v84 + 208) = v99;
  *(_OWORD *)(v84 + 224) = v100;
  *(_OWORD *)(v84 + 192) = v98;
LABEL_29:
  long long v101 = (_OWORD *)((v84 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v102 = (long long *)((v85 + 255) & 0xFFFFFFFFFFFFFFF8);
  long long v103 = *v102;
  *(_OWORD *)((char *)v101 + 9) = *(long long *)((char *)v102 + 9);
  *long long v101 = v103;
  unint64_t v104 = (v84 + 287) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v105 = (v85 + 287) & 0xFFFFFFFFFFFFFFF8;
  long long v106 = *(_OWORD *)v105;
  *(unsigned char *)(v104 + 16) = *(unsigned char *)(v105 + 16);
  *(_OWORD *)unint64_t v104 = v106;
  long long v107 = (void *)((v84 + 311) & 0xFFFFFFFFFFFFFFF8);
  long long v108 = (void *)((v85 + 311) & 0xFFFFFFFFFFFFFFF8);
  *long long v107 = *v108;
  long long v109 = (uint64_t *)(((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v110 = *v109;
  unint64_t v111 = v109[1];
  *(_OWORD *)long long v109 = *(_OWORD *)(((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8);
  sub_24D466534(v110, v111);
  return v118;
}

uint64_t sub_24D9814A8(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v52 = v2;
  unsigned int v3 = *(_DWORD *)(v2 + 84);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v55 = v4;
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v54 = v6;
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  unsigned int v49 = v5;
  if (v5 > v7) {
    unsigned int v7 = v5;
  }
  unsigned int v48 = v7;
  if (v7 <= 0x7FFFFFFE) {
    unsigned int v8 = 2147483646;
  }
  else {
    unsigned int v8 = v7;
  }
  if (v8 <= v3) {
    unsigned int v9 = v3;
  }
  else {
    unsigned int v9 = v8;
  }
  uint64_t v10 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= 0x7FFFFFFE) {
    unsigned int v13 = 2147483646;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(void *)(v2 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v16 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v17 = *(void *)(v4 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v19 = *(void *)(v10 + 64);
  if (v9 <= v13) {
    unsigned int v20 = v13;
  }
  else {
    unsigned int v20 = v9;
  }
  if (v20 <= 0x7FFFFFFF) {
    unsigned int v21 = 0x7FFFFFFF;
  }
  else {
    unsigned int v21 = v20;
  }
  uint64_t v22 = 7;
  if (!v12) {
    uint64_t v22 = 8;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v23 = v14 + v15;
  uint64_t v24 = *(_DWORD *)(v4 + 80) & 0xF8 | v16 | 7;
  unint64_t v25 = ((((*(void *)(v6 + 64) + ((v16 + 8 + ((v17 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v26 = v18 | 7;
  uint64_t v27 = (v18 | 7) + 16;
  uint64_t v28 = v18 + 12;
  uint64_t v29 = v19 + v18;
  uint64_t v30 = v19 + 12;
  if (v21 < a2)
  {
    unint64_t v31 = ((((((v27 + ((v14 + (v23 & ~v15) + v24) & ~v24) + v25) & ~v26)
            + ((((((((((v22
                      + v19
                      + ((v18
                        + ((((((v30 + ((v29 + (v28 & ~v18)) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                          + 15) & 0xFFFFFFFFFFFFFFF8)
                        + 10) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
                    + 31) & 0xFFFFFFFFFFFFFFF8)
                  + 15) & 0xFFFFFFFFFFFFFFF8)
                + 19) & 0xFFFFFFFFFFFFFFF8)
              + 25) & 0xFFFFFFFFFFFFFFF8)
            + 327) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    if ((v31 & 0xFFFFFFF8) != 0) {
      unsigned int v32 = 2;
    }
    else {
      unsigned int v32 = a2 - v21 + 1;
    }
    if (v32 >= 0x10000) {
      unsigned int v33 = 4;
    }
    else {
      unsigned int v33 = 2;
    }
    if (v32 < 0x100) {
      unsigned int v33 = 1;
    }
    if (v32 >= 2) {
      uint64_t v34 = v33;
    }
    else {
      uint64_t v34 = 0;
    }
    switch(v34)
    {
      case 1:
        int v35 = *((unsigned __int8 *)a1 + v31);
        if (!*((unsigned char *)a1 + v31)) {
          break;
        }
        goto LABEL_38;
      case 2:
        int v35 = *(unsigned __int16 *)((char *)a1 + v31);
        if (*(_WORD *)((char *)a1 + v31)) {
          goto LABEL_38;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D981A44);
      case 4:
        int v35 = *(_DWORD *)((char *)a1 + v31);
        if (!v35) {
          break;
        }
LABEL_38:
        int v37 = v35 - 1;
        if ((v31 & 0xFFFFFFF8) != 0)
        {
          int v37 = 0;
          int v38 = *a1;
        }
        else
        {
          int v38 = 0;
        }
        return v21 + (v38 | v37) + 1;
      default:
        break;
    }
  }
  if (v3 == v21)
  {
    uint64_t v39 = *(uint64_t (**)(_DWORD *, void, uint64_t))(v52 + 48);
    return v39(a1, v3, AssociatedTypeWitness);
  }
  uint64_t v40 = ((((unint64_t)a1 + v23) & ~v15) + v14 + v24) & ~v24;
  if (v8 == v21)
  {
    if (v49 == v8)
    {
      uint64_t v41 = *(uint64_t (**)(uint64_t))(v55 + 48);
LABEL_61:
      return v41(v40);
    }
    size_t v44 = (unint64_t *)((v17 + 7 + v40) & 0xFFFFFFFFFFFFFFF8);
    if (v48 > 0x7FFFFFFE)
    {
      uint64_t v40 = ((unint64_t)v44 + v16 + 8) & ~v16;
      uint64_t v41 = *(uint64_t (**)(uint64_t))(v54 + 48);
      goto LABEL_61;
    }
    unint64_t v45 = *v44;
    goto LABEL_65;
  }
  unint64_t v42 = v25 + v40;
  if ((v20 & 0x80000000) != 0)
  {
    uint64_t v46 = (v28 + ((v27 + v42) & ~v26)) & ~v18;
    if (v12 < 0x7FFFFFFE)
    {
      unint64_t v45 = *(void *)(((v30 + ((v29 + v46) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 8);
LABEL_65:
      if (v45 >= 0xFFFFFFFF) {
        LODWORD(v45) = -1;
      }
      if ((v45 + 1) >= 2) {
        return v45;
      }
      else {
        return 0;
      }
    }
    unint64_t v47 = *(uint64_t (**)(uint64_t))(v11 + 48);
    return v47(v46);
  }
  else
  {
    unint64_t v43 = *(void *)(v42 + 8);
    if (v43 >= 0xFFFFFFFF) {
      LODWORD(v43) = -1;
    }
    return (v43 + 1);
  }
}

void sub_24D981A58(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v54 = v3;
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v53 = v5;
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v52 = v7;
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v48 = v6;
  if (v6 > v8) {
    unsigned int v8 = v6;
  }
  unsigned int v47 = v8;
  if (v8 <= 0x7FFFFFFE) {
    unsigned int v9 = 2147483646;
  }
  else {
    unsigned int v9 = v8;
  }
  if (v9 <= v4) {
    unsigned int v10 = v4;
  }
  else {
    unsigned int v10 = v9;
  }
  uint64_t v11 = *(void *)(sub_24DCC8CE8() - 8);
  uint64_t v12 = v11;
  unsigned int v13 = *(_DWORD *)(v11 + 84);
  if (v13 <= 0x7FFFFFFE) {
    unsigned int v14 = 2147483646;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  uint64_t v15 = *(void *)(v3 + 64);
  uint64_t v16 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v17 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = *(void *)(v7 + 64);
  uint64_t v19 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v20 = *(void *)(v11 + 64);
  if (v10 <= v14) {
    unsigned int v21 = v14;
  }
  else {
    unsigned int v21 = v10;
  }
  if (v21 <= 0x7FFFFFFF) {
    unsigned int v22 = 0x7FFFFFFF;
  }
  else {
    unsigned int v22 = v21;
  }
  uint64_t v23 = v15 + v16;
  uint64_t v24 = *(_DWORD *)(v5 + 80) & 0xF8 | v17 | 7;
  uint64_t v25 = *(void *)(v5 + 64) + 7;
  uint64_t v26 = v17 + 8;
  unint64_t v27 = ((((v18 + ((v17 + 8 + (v25 & 0xFFFFFFFFFFFFFFF8)) & ~v17) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  uint64_t v28 = (v19 | 7) + 16;
  uint64_t v29 = v20 + v19;
  uint64_t v30 = v20 + 12;
  unint64_t v31 = (v19
       + ((((((v20 + 12 + ((v20 + v19 + ((v19 + 12) & ~v19)) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 10) & ~v19;
  if (!v13) {
    ++v20;
  }
  size_t v32 = ((((((v28 + ((v15 + ((v15 + v16) & ~v16) + v24) & ~v24) + v27) & ~(v19 | 7))
          + ((((((((((v20 + v31 + 7) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 19) & 0xFFFFFFFFFFFFFFF8)
            + 25) & 0xFFFFFFFFFFFFFFF8)
          + 327) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v22 >= a3)
  {
    int v34 = 0;
  }
  else
  {
    if (((((((v28
             + ((v15 + ((v15 + v16) & ~v16) + v24) & ~v24)
             + v27) & ~(v19 | 7))
           + ((((((((((v20 + v31 + 7) & 0xFFFFFFF8) + 31) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) + 19) & 0xFFFFFFF8)
             + 25) & 0xFFFFFFF8)
           + 327) & 0xFFFFFFF8)
         + 15) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v33 = a3 - v22 + 1;
    else {
      unsigned int v33 = 2;
    }
    if (v33 >= 0x10000) {
      int v34 = 4;
    }
    else {
      int v34 = 2;
    }
    if (v33 < 0x100) {
      int v34 = 1;
    }
    if (v33 < 2) {
      int v34 = 0;
    }
  }
  if (a2 > v22)
  {
    if (v32) {
      int v35 = 1;
    }
    else {
      int v35 = a2 - v22;
    }
    if (v32)
    {
      unsigned int v36 = ~v22 + a2;
      bzero(a1, v32);
      *a1 = v36;
    }
    switch(v34)
    {
      case 1:
        *((unsigned char *)a1 + v32) = v35;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v32) = v35;
        return;
      case 3:
        goto LABEL_75;
      case 4:
        *(unsigned int *)((char *)a1 + v32) = v35;
        return;
      default:
        return;
    }
  }
  uint64_t v37 = ~v16;
  uint64_t v38 = ~v17;
  uint64_t v39 = ~v19;
  uint64_t v40 = a1;
  switch(v34)
  {
    case 1:
      *((unsigned char *)a1 + v32) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 2:
      *(_WORD *)((char *)a1 + v32) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_48;
    case 3:
LABEL_75:
      __break(1u);
      JUMPOUT(0x24D98202CLL);
    case 4:
      *(unsigned int *)((char *)a1 + v32) = 0;
      goto LABEL_47;
    default:
LABEL_47:
      if (!a2) {
        return;
      }
LABEL_48:
      if (v4 == v22)
      {
        uint64_t v41 = *(void (**)(_DWORD *))(v54 + 56);
LABEL_50:
        v41(v40);
        return;
      }
      uint64_t v40 = (_DWORD *)(((((unint64_t)a1 + v23) & v37) + v15 + v24) & ~v24);
      if (v9 == v22)
      {
        if (v48 == v9)
        {
          uint64_t v41 = *(void (**)(_DWORD *))(v53 + 56);
        }
        else
        {
          unint64_t v43 = (void *)(((unint64_t)v40 + v25) & 0xFFFFFFFFFFFFFFF8);
          if (v47 <= 0x7FFFFFFE)
          {
            if (a2 > 0x7FFFFFFE)
            {
              *unint64_t v43 = 0;
              *(_DWORD *)unint64_t v43 = a2 - 0x7FFFFFFF;
            }
            else
            {
              *unint64_t v43 = a2;
            }
            return;
          }
          uint64_t v40 = (_DWORD *)(((unint64_t)v43 + v26) & v38);
          uint64_t v41 = *(void (**)(_DWORD *))(v52 + 56);
        }
        goto LABEL_50;
      }
      unint64_t v42 = (void *)((char *)v40 + v27);
      if ((v21 & 0x80000000) != 0)
      {
        uint64_t v44 = (v19 + 12 + (((unint64_t)v42 + v28) & ~(v19 | 7))) & v39;
        if (v13 < 0x7FFFFFFE)
        {
          uint64_t v46 = (void *)((v30 + ((v29 + v44) & v39)) & 0xFFFFFFFFFFFFFFF8);
          if (a2 > 0x7FFFFFFE)
          {
            *uint64_t v46 = 0;
            v46[1] = 0;
            *(_DWORD *)uint64_t v46 = a2 - 0x7FFFFFFF;
          }
          else
          {
            v46[1] = a2;
          }
        }
        else
        {
          unint64_t v45 = *(void (**)(uint64_t))(v12 + 56);
          v45(v44);
        }
      }
      else if ((a2 & 0x80000000) != 0)
      {
        *unint64_t v42 = a2 ^ 0x80000000;
        v42[1] = 0;
      }
      else
      {
        v42[1] = a2 - 1;
      }
      return;
  }
}

uint64_t sub_24D982054()
{
  uint64_t result = type metadata accessor for SnapshotItem();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for SnapshotItemObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D982100(void *a1, void *a2)
{
  id v3 = objc_msgSend(a1, sel_etag);
  uint64_t v4 = sub_24DCC97E8();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(a2, sel_etag);
  uint64_t v8 = sub_24DCC97E8();
  uint64_t v10 = v9;

  if (v4 == v8 && v6 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

uint64_t sub_24D9821C8(uint64_t a1)
{
  sub_24D3E45F4(a1, (uint64_t)v13);
  if (!v14)
  {
    sub_24D3E3E54((uint64_t)v13);
    goto LABEL_7;
  }
  sub_24D9822F0();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_7:
    char v10 = 0;
    return v10 & 1;
  }
  id v2 = objc_msgSend(v1, sel_etag);
  uint64_t v3 = sub_24DCC97E8();
  uint64_t v5 = v4;

  id v6 = objc_msgSend(v12, sel_etag);
  uint64_t v7 = sub_24DCC97E8();
  uint64_t v9 = v8;

  if (v3 == v7 && v5 == v9) {
    char v10 = 1;
  }
  else {
    char v10 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v10 & 1;
}

unint64_t sub_24D9822F0()
{
  unint64_t result = qword_26986FD78;
  if (!qword_26986FD78)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26986FD78);
  }
  return result;
}

uint64_t sub_24D982330(void *a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    id v4 = a1;
    swift_unknownObjectRetain();
    sub_24DCCA528();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v8, 0, sizeof(v8));
    id v5 = a1;
  }
  char v6 = sub_24D9821C8((uint64_t)v8);

  sub_24D3E3E54((uint64_t)v8);
  return v6 & 1;
}

uint64_t sub_24D9823A8(void *a1)
{
  id v1 = a1;
  id v2 = objc_msgSend(v1, sel_etag);
  sub_24DCC97E8();

  uint64_t v3 = sub_24DCC9A28();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_24D98241C()
{
  id v1 = objc_msgSend(v0, sel_etag);
  sub_24DCC97E8();

  uint64_t v2 = sub_24DCC9A28();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_24D982488()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D982504()
{
  sub_24D98339C();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_24D9825BC()
{
  return 0;
}

uint64_t sub_24D9825D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56);

  return v3(a1, 1, 1, AssociatedTypeWitness);
}

void sub_24D982680()
{
}

void sub_24D9826DC()
{
}

uint64_t sub_24D9826EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReconciliationID();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v5 = v2;
  uint64_t v6 = *(int *)(TupleTypeMetadata2 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, &v1[*(void *)(v5 + 576)], AssociatedTypeWitness);
  swift_storeEnumTagMultiPayload();
  *(unsigned char *)(a1 + v6) = sub_24DB1702C();
  uint64_t v7 = type metadata accessor for ThrottlingKey();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(a1, 0, 1, v7);
}

uint64_t sub_24D9828F8()
{
  return 0;
}

uint64_t sub_24D9829D4()
{
  uint64_t v3 = (*(uint64_t (**)(void))(*(void *)v0 + 176))();
  uint64_t v1 = sub_24DCC9968();
  (*(void (**)(uint64_t))(*(void *)v0 + 456))(v1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return v3;
}

uint64_t sub_24D982AC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24DCC8CE8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + 48) & 1) == 0)
  {
    uint64_t v6 = *(void *)(v1 + 40);
    uint64_t v28 = 0x6574726174732820;
    unint64_t v29 = 0xEA00000000002064;
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v8 = v7;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    double v9 = v8 * 1000000000.0;
    if ((~COERCE__INT64(v8 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v9 > -9.22337204e18)
      {
        if (v9 < 9.22337204e18)
        {
          sub_24D9AC244((uint64_t)v9, v6);
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          sub_24DCC9968();
          goto LABEL_6;
        }
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_18;
  }
LABEL_6:
  uint64_t v28 = 0;
  unint64_t v29 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  uint64_t v31 = 60;
  unint64_t v32 = 0xE100000000000000;
  swift_beginAccess();
  sub_24D73C78C(v1 + 56, (uint64_t)&v28);
  uint64_t v10 = v30;
  sub_24D73C7F4((uint64_t)&v28);
  if (!v10) {
    goto LABEL_9;
  }
  v27[0] = 0;
  v27[1] = 0xE000000000000000;
  sub_24D73C78C(v1 + 56, (uint64_t)&v28);
  uint64_t v11 = v30;
  if (!v30)
  {
LABEL_19:
    __break(1u);
    JUMPOUT(0x24D983058);
  }
  char v12 = __swift_project_boxed_opaque_existential_1(&v28, v30);
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v13 + 16))(v15);
  sub_24DCCADC8();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
LABEL_9:
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v16 = *(void **)(v1 + 96);
  uint64_t v17 = *(void **)(v1 + 104);
  char v18 = *(unsigned char *)(v1 + 112);
  switch(v18)
  {
    case 1:
      if (v16) {
        goto LABEL_11;
      }
      break;
    case 2:
      swift_retain();
      break;
    case 3:
      id v19 = v16;
      break;
    case 4:
      break;
    default:
LABEL_11:
      swift_retain();
      break;
  }
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D3E380C(v16, v17, v18);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D9829D4();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24D97C4AC(*(void *)(v1 + 136));
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v21 = v31;
  unint64_t v20 = v32;
  uint64_t v28 = 0x3A646568637320;
  unint64_t v29 = 0xE700000000000000;
  uint64_t v31 = sub_24D7C000C(*(void *)(v1 + 120));
  unint64_t v32 = v22;
  sub_24DCC9968();
  sub_24DCC9E38();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(void **)(v1 + 96);
  uint64_t v24 = *(void **)(v1 + 104);
  char v25 = *(unsigned char *)(v1 + 112);
  sub_24D3F1C98(v23, v24, v25);
  sub_24DC0F228(v23, v24, v25);
  sub_24D3E380C(v23, v24, v25);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v28 = v21;
  unint64_t v29 = v20;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v28;
}

uint64_t sub_24D98306C@<X0>(uint64_t a1@<X8>)
{
  return sub_24D983084(a1);
}

uint64_t sub_24D983084@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ReconciliationID();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_24D9831F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for TestingOperation();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_24D983288(char a1)
{
  *(void *)(v1 + 16) = 0;
  swift_release();
  if (*(void *)(v1 + 24))
  {
    swift_retain();
    char v3 = sub_24D575C30();
    swift_release();
    a1 |= v3;
  }
  return a1 & 1;
}

void sub_24D9832E8()
{
}

uint64_t sub_24D983344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)(v3 + 16) = 0u;
  *(_OWORD *)(v3 + 32) = 0u;
  *(unsigned char *)(v3 + 48) = 1;
  *(_OWORD *)(v3 + 56) = 0u;
  *(_OWORD *)(v3 + 72) = 0u;
  *(void *)(v3 + 88) = 0;
  *(_OWORD *)(v3 + 96) = xmmword_24DCD38E0;
  *(unsigned char *)(v3 + 112) = 0;
  *(void *)(v3 + 120) = a1;
  *(void *)(v3 + 128) = a2;
  *(void *)(v3 + 136) = a3;
  if ((a3 & 0x8000) != 0) {
    sub_24D8F94C4(0x200000);
  }
  return v3;
}

uint64_t sub_24D98339C()
{
  swift_release();
  swift_release();
  swift_release();
  sub_24D73C7F4(v0 + 56);
  sub_24D3E380C(*(void **)(v0 + 96), *(id *)(v0 + 104), *(unsigned char *)(v0 + 112));
  return v0;
}

void sub_24D9833E0()
{
}

void sub_24D98343C()
{
}

void sub_24D983498()
{
}

uint64_t sub_24D9834F4@<X0>(uint64_t a1@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = type metadata accessor for ThrottlingKey();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_24D983660()
{
  sub_24D98339C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Job()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D9836AC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D983754()
{
  return sub_24D982AC4();
}

uint64_t sub_24D983778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_allocObject();
  uint64_t v8 = sub_24D983960(a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return v8;
}

uint64_t sub_24D98383C()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);

  return v3(v1, AssociatedTypeWitness);
}

uint64_t sub_24D9838F0()
{
  sub_24D982504();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ItemJob()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D983960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = v4 + *(void *)(*(void *)v4 + 576);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v9, a1, AssociatedTypeWitness);

  return sub_24D983344(a2, a3, a4);
}

uint64_t sub_24D983A48()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 112);
  if (v1 == 2) {
    sub_24DA84748((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/Job.swift", 97, v1, 152);
  }
  uint64_t v2 = *(void **)(v0 + 96);
  uint64_t v3 = *(void **)(v0 + 104);
  *(void *)(v0 + 96) = 0;
  *(void *)(v0 + 104) = 0;
  *(unsigned char *)(v0 + 112) = 4;
  sub_24D3E380C(v2, v3, v1);
  return v0;
}

uint64_t sub_24D983A98(uint64_t a1)
{
  if (*(unsigned char *)(v1 + 112))
  {
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(v1 + 96);
    uint64_t v2 = *(void **)(v1 + 104);
    *(void *)(v1 + 96) = v3 & ~a1;
    *(unsigned char *)(v1 + 112) = 0;
    swift_retain();
    sub_24D3E380C((void *)v3, v2, 0);
    return v1;
  }
  return result;
}

uint64_t sub_24D983B44()
{
  return sub_24D91B49C();
}

uint64_t sub_24D983B5C(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if ((a2 & 0x100) == 0)
  {
    if ((a4 & 0x100) == 0)
    {
      if ((_BYTE)a2)
      {
        if (a2 == 1)
        {
          if (a4 != 1 || a1 != a3) {
            return 0;
          }
        }
        else if (a1)
        {
          if (a4 != 2 || a3 != (void *)1) {
            return 0;
          }
        }
        else if (a4 != 2 || a3)
        {
          return 0;
        }
      }
      else if ((_BYTE)a4 || a1 != a3)
      {
        return 0;
      }
      return 1;
    }
    return 0;
  }
  if ((a4 & 0x100) == 0) {
    return 0;
  }
  uint64_t v10 = sub_24DCC97E8();
  uint64_t v12 = v11;
  if (v10 == sub_24DCC97E8() && v12 == v13)
  {
    uint64_t v8 = 1;
    sub_24D4018B8(a1, a2, 1);
    sub_24D4018B8(a1, a2, 1);
    sub_24D4018B8(a3, a4, 1);
    swift_bridgeObjectRelease_n();
    sub_24D40160C(a3, a4, 1);

    sub_24D40160C(a1, a2, 1);
    return v8;
  }
  char v14 = sub_24DCCAE28();
  sub_24D4018B8(a1, a2, 1);
  sub_24D4018B8(a1, a2, 1);
  sub_24D4018B8(a3, a4, 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D40160C(a3, a4, 1);

  sub_24D40160C(a1, a2, 1);
  return v14 & 1;
}

uint64_t sub_24D983D38(void *a1, uint64_t a2, void *a3, uint64_t a4)
{
  if ((a2 & 0x100) != 0)
  {
    if ((a4 & 0x100) != 0)
    {
      if ((_BYTE)a2)
      {
        if (a2 == 1)
        {
          if (a4 == 1 && a1 == a3) {
            return 1;
          }
        }
        else if (a1)
        {
          if (a4 == 2 && a3 == (void *)1) {
            return 1;
          }
        }
        else if (a4 == 2 && !a3)
        {
          return 1;
        }
      }
      else if (!(_BYTE)a4 && a1 == a3)
      {
        return 1;
      }
    }
    return 0;
  }
  if ((a4 & 0x100) != 0) {
    return 0;
  }
  uint64_t v8 = sub_24DCC97E8();
  uint64_t v10 = v9;
  if (v8 != sub_24DCC97E8() || v10 != v11)
  {
    char v13 = sub_24DCCAE28();
    sub_24D4E4B98(a1, a2, 0);
    sub_24D4E4B98(a1, a2, 0);
    sub_24D4E4B98(a3, a4, 0);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D5135B0(a3, a4, 0);

    sub_24D5135B0(a1, a2, 0);
    return v13 & 1;
  }
  sub_24D4E4B98(a1, a2, 0);
  sub_24D4E4B98(a1, a2, 0);
  sub_24D4E4B98(a3, a4, 0);
  swift_bridgeObjectRelease_n();
  sub_24D5135B0(a3, a4, 0);

  sub_24D5135B0(a1, a2, 0);
  return 1;
}

uint64_t sub_24D983F10(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24DCCA838();
    uint64_t v4 = (unsigned __int8 *)(a1 + 48);
    do
    {
      unsigned int v5 = *v4;
      v4 += 24;
      id v6 = objc_allocWithZone(MEMORY[0x263F05510]);
      swift_bridgeObjectRetain();
      double v7 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_initWithLabel_color_, v7, v5);

      sub_24DCCA808();
      sub_24DCCA848();
      sub_24DCCA858();
      sub_24DCCA818();
      --v1;
    }
    while (v1);
    uint64_t v2 = v9;
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_24D984024(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_24DCCAE28(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (unint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_24DCCAE28() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_24D9840EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  unint64_t v3 = (unsigned __int8 *)(a2 + 48);
  for (unint64_t i = (unsigned __int8 *)(a1 + 48); ; i += 24)
  {
    uint64_t v40 = v2;
    uint64_t v6 = *((void *)i - 2);
    unint64_t v5 = *((void *)i - 1);
    uint64_t v8 = *((void *)v3 - 2);
    unint64_t v7 = *((void *)v3 - 1);
    int v41 = *v3;
    int v42 = *i;
    if ((v5 & 0x2000000000000000) != 0) {
      uint64_t v9 = HIBYTE(v5) & 0xF;
    }
    else {
      uint64_t v9 = v6 & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    if (!v9)
    {
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_24DCC9A58();
    uint64_t v12 = v11;
    swift_bridgeObjectRelease();
    if (v10 == 12565487 && v12 == 0xA300000000000000) {
      break;
    }
    char v13 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_16;
    }
LABEL_18:
    swift_bridgeObjectRetain();
    unint64_t v23 = v5;
LABEL_19:
    if ((v7 & 0x2000000000000000) != 0) {
      uint64_t v24 = HIBYTE(v7) & 0xF;
    }
    else {
      uint64_t v24 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (!v24)
    {
LABEL_30:
      swift_bridgeObjectRetain();
      unint64_t v38 = v7;
      if (v6 != v8) {
        goto LABEL_32;
      }
      goto LABEL_31;
    }
    swift_bridgeObjectRetain();
    uint64_t v25 = sub_24DCC9A58();
    uint64_t v27 = v26;
    swift_bridgeObjectRelease();
    if (v25 == 12565487 && v27 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v28 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if ((v28 & 1) == 0) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_24DCC9918();
    if (4 * v24 < result >> 14) {
      goto LABEL_39;
    }
    uint64_t v29 = sub_24DCC9A78();
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v36 = MEMORY[0x253327950](v29, v31, v33, v35);
    unint64_t v38 = v37;
    swift_bridgeObjectRelease();
    if (v6 != v36) {
      goto LABEL_32;
    }
LABEL_31:
    if (v23 == v38)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      if (v42 != v41) {
        return 0;
      }
      goto LABEL_6;
    }
LABEL_32:
    char v39 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t result = 0;
    if ((v39 & 1) == 0 || v42 != v41) {
      return result;
    }
LABEL_6:
    v3 += 24;
    uint64_t v2 = v40 - 1;
    if (v40 == 1) {
      return 1;
    }
  }
  swift_bridgeObjectRelease();
LABEL_16:
  swift_bridgeObjectRetain();
  unint64_t result = sub_24DCC9918();
  if (4 * v9 >= result >> 14)
  {
    uint64_t v15 = sub_24DCC9A78();
    uint64_t v17 = v16;
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    swift_bridgeObjectRelease();
    uint64_t v6 = MEMORY[0x253327950](v15, v17, v19, v21);
    unint64_t v23 = v22;
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  __break(1u);
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_24D9844A8(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)((unint64_t)a1 >> 62);
  if ((unint64_t)a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    if (v6 == v22) {
      goto LABEL_5;
    }
    return 0;
  }
  if (v6 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return 0;
  }
LABEL_5:
  if (!v6) {
    return 1;
  }
  uint64_t v7 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a1 < 0) {
    uint64_t v7 = a1;
  }
  if (v5) {
    uint64_t v8 = v7;
  }
  uint64_t v9 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v10 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  if (a2 < 0) {
    uint64_t v9 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v10 = v9;
  }
  if (v8 == v10) {
    return 1;
  }
  if (v6 < 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  unint64_t v23 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
LABEL_42:
    uint64_t result = MEMORY[0x253328820](0, a1);
    goto LABEL_19;
  }
  if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_44;
  }
  uint64_t result = (uint64_t)*(id *)(a1 + 32);
LABEL_19:
  unint64_t v5 = (void *)result;
  unint64_t v2 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
LABEL_44:
    id v12 = (id)MEMORY[0x253328820](0, a2);
LABEL_22:
    char v13 = v12;
    sub_24D3FB6F8(0, &qword_26B194098);
    char v14 = sub_24DCCA398();

    if (v14)
    {
      uint64_t v15 = 1 - v6;
      for (uint64_t i = 5; ; ++i)
      {
        uint64_t v6 = v15 + i == 5;
        if (v15 + i == 5) {
          return v6;
        }
        unint64_t v20 = i - 4;
        if (v23)
        {
          id v21 = (id)MEMORY[0x253328820](i - 4, a1);
          if (v2) {
            goto LABEL_24;
          }
        }
        else
        {
          if (v20 >= *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
LABEL_40:
            __break(1u);
            goto LABEL_41;
          }
          id v21 = *(id *)(a1 + 8 * i);
          if (v2)
          {
LABEL_24:
            id v17 = (id)MEMORY[0x253328820](i - 4, a2);
            goto LABEL_25;
          }
        }
        if (v20 >= *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_40;
        }
        id v17 = *(id *)(a2 + 8 * i);
LABEL_25:
        uint64_t v18 = v17;
        char v19 = sub_24DCCA398();

        if ((v19 & 1) == 0) {
          return v6;
        }
      }
    }
    return 0;
  }
  if (*(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v12 = *(id *)(a2 + 32);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D984728(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC8A58();
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v28 - v8;
  uint64_t v10 = *(void *)(a1 + 16);
  if (v10 == *(void *)(a2 + 16))
  {
    if (!v10 || a1 == a2)
    {
      char v23 = 1;
    }
    else
    {
      uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
      char v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
      uint64_t v12 = v6 + 16;
      uint64_t v31 = v7;
      uint64_t v32 = v13;
      uint64_t v14 = (v11 + 32) & ~v11;
      uint64_t v15 = *(void *)(v12 + 56);
      uint64_t v33 = v12;
      uint64_t v29 = v15;
      uint64_t v30 = (void (**)(char *, uint64_t))(v12 - 8);
      uint64_t v16 = v10 - 1;
      id v17 = v7;
      do
      {
        uint64_t v18 = a1;
        char v19 = v9;
        unint64_t v20 = v9;
        id v21 = v32;
        v32(v19, a1 + v14, v4);
        uint64_t v22 = a2;
        v21(v17, a2 + v14, v4);
        uint64_t v9 = v20;
        sub_24D987AD8(&qword_26B1949E0, MEMORY[0x263F06EA8]);
        char v23 = sub_24DCC9798();
        uint64_t v24 = *v30;
        (*v30)(v17, v4);
        v24(v20, v4);
        BOOL v26 = v16-- != 0;
        if ((v23 & 1) == 0) {
          break;
        }
        v14 += v29;
        a2 = v22;
        a1 = v18;
      }
      while (v26);
    }
  }
  else
  {
    char v23 = 0;
  }
  return v23 & 1;
}

uint64_t sub_24D984948(uint64_t a1, uint64_t a2)
{
  __s1[2] = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    while (1)
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v5 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v7 = *v4;
      unint64_t v9 = *v3 >> 62;
      v3 += 2;
      v4 += 2;
      uint64_t v10 = 0;
      switch(v9)
      {
        case 1uLL:
          if (__OFSUB__(HIDWORD(v6), v6))
          {
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            __break(1u);
LABEL_127:
            __break(1u);
LABEL_128:
            __break(1u);
LABEL_129:
            __break(1u);
LABEL_130:
            __break(1u);
LABEL_131:
            __break(1u);
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            __break(1u);
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
          }
          uint64_t v10 = HIDWORD(v6) - (int)v6;
LABEL_13:
          sub_24D3F9C18(v6, v5);
          break;
        case 2uLL:
          uint64_t v12 = *(void *)(v6 + 16);
          uint64_t v11 = *(void *)(v6 + 24);
          uint64_t v10 = v11 - v12;
          if (!__OFSUB__(v11, v12)) {
            goto LABEL_13;
          }
          goto LABEL_124;
        case 3uLL:
          break;
        default:
          uint64_t v10 = BYTE6(v5);
          break;
      }
      unint64_t v13 = v7 >> 62;
      switch(v7 >> 62)
      {
        case 1uLL:
          LODWORD(v14) = HIDWORD(v8) - v8;
          if (__OFSUB__(HIDWORD(v8), v8)) {
            goto LABEL_125;
          }
          uint64_t v14 = (int)v14;
LABEL_19:
          if (v10 != v14) {
            goto LABEL_121;
          }
          if (v10 < 1)
          {
LABEL_6:
            sub_24D400DCC(v6, v5);
          }
          else
          {
            switch((int)v9)
            {
              case 1:
                unint64_t v76 = v3;
                if ((int)v6 > v6 >> 32) {
                  goto LABEL_127;
                }
                sub_24D3F9C18(v8, v7);
                char v23 = (char *)sub_24DCC84D8();
                if (!v23) {
                  goto LABEL_33;
                }
                uint64_t v24 = sub_24DCC84F8();
                if (__OFSUB__((int)v6, v24)) {
                  goto LABEL_129;
                }
                v23 += (int)v6 - v24;
LABEL_33:
                sub_24DCC84E8();
                if (!v13)
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v23) {
                    goto LABEL_157;
                  }
                  size_t v41 = BYTE6(v7);
                  uint64_t v40 = __s1;
                  char v39 = v23;
LABEL_103:
                  int v29 = memcmp(v39, v40, v41);
                  goto LABEL_104;
                }
                if (v13 == 1)
                {
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_138;
                  }
                  swift_retain();
                  uint64_t v25 = (char *)sub_24DCC84D8();
                  if (v25)
                  {
                    uint64_t v26 = sub_24DCC84F8();
                    if (__OFSUB__((int)v8, v26)) {
                      goto LABEL_145;
                    }
                    v25 += (int)v8 - v26;
                  }
                  uint64_t v27 = sub_24DCC84E8();
                  if (v27 >= (v8 >> 32) - (int)v8) {
                    size_t v28 = (v8 >> 32) - (int)v8;
                  }
                  else {
                    size_t v28 = v27;
                  }
                  if (!v23) {
                    goto LABEL_147;
                  }
                  if (!v25) {
                    goto LABEL_148;
                  }
                  int v29 = memcmp(v23, v25, v28);
                  sub_24D400DCC(v8, v7);
                  goto LABEL_72;
                }
                uint64_t v67 = *(void *)(v8 + 16);
                uint64_t v74 = *(char **)(v8 + 24);
                swift_retain();
                swift_retain();
                uint64_t v68 = sub_24DCC84D8();
                if (v68)
                {
                  uint64_t v69 = sub_24DCC84F8();
                  if (__OFSUB__(v67, v69)) {
                    goto LABEL_144;
                  }
                  v68 += v67 - v69;
                }
                if (__OFSUB__(v74, v67)) {
                  goto LABEL_139;
                }
                uint64_t v70 = sub_24DCC84E8();
                if (v70 >= (uint64_t)&v74[-v67]) {
                  unint64_t v71 = &v74[-v67];
                }
                else {
                  unint64_t v71 = (char *)v70;
                }
                int v56 = v23;
                unint64_t v3 = v76;
                if (!v23) {
                  goto LABEL_158;
                }
                if (!v68) {
                  goto LABEL_159;
                }
                size_t v55 = (size_t)v71;
                size_t v57 = (const void *)v68;
LABEL_116:
                int v58 = memcmp(v56, v57, v55);
                swift_release();
                goto LABEL_117;
              case 2:
                uint64_t v77 = v3;
                uint64_t v30 = *(void *)(v6 + 16);
                sub_24D3F9C18(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v31 = sub_24DCC84D8();
                if (v31)
                {
                  uint64_t v32 = v31;
                  uint64_t v33 = sub_24DCC84F8();
                  if (__OFSUB__(v30, v33)) {
                    goto LABEL_128;
                  }
                  unint64_t v73 = (void *)(v32 + v30 - v33);
                }
                else
                {
                  unint64_t v73 = 0;
                }
                sub_24DCC84E8();
                unint64_t v3 = v77;
                if (v13)
                {
                  if (v13 == 1)
                  {
                    if (v8 >> 32 < (int)v8) {
                      goto LABEL_134;
                    }
                    swift_retain();
                    int v42 = (char *)sub_24DCC84D8();
                    if (v42)
                    {
                      uint64_t v43 = sub_24DCC84F8();
                      if (__OFSUB__((int)v8, v43)) {
                        goto LABEL_143;
                      }
                      v42 += (int)v8 - v43;
                    }
                    uint64_t v44 = sub_24DCC84E8();
                    if (v44 >= (v8 >> 32) - (int)v8) {
                      size_t v45 = (v8 >> 32) - (int)v8;
                    }
                    else {
                      size_t v45 = v44;
                    }
                    if (!v73) {
                      goto LABEL_150;
                    }
                    unint64_t v3 = v77;
                    if (!v42) {
                      goto LABEL_151;
                    }
                    int v29 = memcmp(v73, v42, v45);
                    sub_24D400DCC(v8, v7);
                    swift_release();
                    swift_release();
LABEL_72:
                    sub_24D400DCC(v8, v7);
LABEL_104:
                    sub_24D400DCC(v6, v5);
                    if (v29) {
                      return 0;
                    }
                  }
                  else
                  {
                    uint64_t v60 = *(void *)(v8 + 16);
                    uint64_t v59 = *(void *)(v8 + 24);
                    swift_retain();
                    swift_retain();
                    size_t v61 = (char *)sub_24DCC84D8();
                    if (v61)
                    {
                      uint64_t v62 = sub_24DCC84F8();
                      if (__OFSUB__(v60, v62)) {
                        goto LABEL_142;
                      }
                      v61 += v60 - v62;
                    }
                    BOOL v17 = __OFSUB__(v59, v60);
                    int64_t v63 = v59 - v60;
                    if (v17) {
                      goto LABEL_137;
                    }
                    uint64_t v64 = sub_24DCC84E8();
                    if (v64 >= v63) {
                      size_t v65 = v63;
                    }
                    else {
                      size_t v65 = v64;
                    }
                    unint64_t v3 = v77;
                    if (!v73) {
                      goto LABEL_155;
                    }
                    if (!v61) {
                      goto LABEL_156;
                    }
                    int v66 = memcmp(v73, v61, v65);
                    swift_release();
                    swift_release();
                    swift_release();
                    swift_release();
                    sub_24D400DCC(v8, v7);
                    sub_24D400DCC(v6, v5);
                    if (v66) {
                      return 0;
                    }
                  }
                }
                else
                {
                  __s1[0] = v8;
                  LOWORD(__s1[1]) = v7;
                  BYTE2(__s1[1]) = BYTE2(v7);
                  BYTE3(__s1[1]) = BYTE3(v7);
                  BYTE4(__s1[1]) = BYTE4(v7);
                  BYTE5(__s1[1]) = BYTE5(v7);
                  if (!v73) {
                    goto LABEL_154;
                  }
                  int v58 = memcmp(v73, __s1, BYTE6(v7));
                  swift_release();
LABEL_117:
                  swift_release();
                  sub_24D400DCC(v8, v7);
                  sub_24D400DCC(v6, v5);
                  if (v58) {
                    return 0;
                  }
                }
                break;
              case 3:
                memset(__s1, 0, 14);
                if (!v13) {
                  goto LABEL_58;
                }
                unint64_t v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_131;
                  }
                  sub_24D3F9C18(v8, v7);
                  uint64_t v34 = sub_24DCC84D8();
                  if (!v34) {
                    goto LABEL_149;
                  }
                  uint64_t v20 = v34;
                  uint64_t v35 = sub_24DCC84F8();
                  uint64_t v22 = (int)v8 - v35;
                  if (__OFSUB__((int)v8, v35)) {
                    goto LABEL_133;
                  }
LABEL_53:
                  uint64_t v36 = sub_24DCC84E8();
                  if (v36 >= v18) {
                    size_t v37 = v18;
                  }
                  else {
                    size_t v37 = v36;
                  }
                  int v38 = memcmp(__s1, (const void *)(v20 + v22), v37);
                  sub_24D400DCC(v8, v7);
                  sub_24D400DCC(v6, v5);
                  unint64_t v3 = v75;
                  if (v38) {
                    return 0;
                  }
                  break;
                }
                uint64_t v52 = *(void *)(v8 + 16);
                uint64_t v53 = *(void *)(v8 + 24);
                sub_24D3F9C18(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_24DCC84D8();
                if (v48)
                {
                  uint64_t v54 = sub_24DCC84F8();
                  if (__OFSUB__(v52, v54)) {
                    goto LABEL_141;
                  }
                  v48 += v52 - v54;
                }
                BOOL v17 = __OFSUB__(v53, v52);
                int64_t v50 = v53 - v52;
                if (v17) {
                  goto LABEL_136;
                }
                uint64_t v51 = sub_24DCC84E8();
                unint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_153;
                }
LABEL_84:
                if (v51 >= v50) {
                  size_t v55 = v50;
                }
                else {
                  size_t v55 = v51;
                }
                int v56 = __s1;
                size_t v57 = (const void *)v48;
                goto LABEL_116;
              default:
                __s1[0] = v6;
                LOWORD(__s1[1]) = v5;
                BYTE2(__s1[1]) = BYTE2(v5);
                BYTE3(__s1[1]) = BYTE3(v5);
                BYTE4(__s1[1]) = BYTE4(v5);
                BYTE5(__s1[1]) = BYTE5(v5);
                if (!v13)
                {
LABEL_58:
                  uint64_t v78 = v8;
                  __int16 v79 = v7;
                  char v80 = BYTE2(v7);
                  char v81 = BYTE3(v7);
                  char v82 = BYTE4(v7);
                  char v83 = BYTE5(v7);
                  sub_24D3F9C18(v8, v7);
                  char v39 = __s1;
                  uint64_t v40 = &v78;
                  size_t v41 = BYTE6(v7);
                  goto LABEL_103;
                }
                unint64_t v75 = v3;
                if (v13 == 1)
                {
                  uint64_t v18 = (v8 >> 32) - (int)v8;
                  if (v8 >> 32 < (int)v8) {
                    goto LABEL_130;
                  }
                  sub_24D3F9C18(v8, v7);
                  uint64_t v19 = sub_24DCC84D8();
                  if (!v19)
                  {
                    sub_24DCC84E8();
                    __break(1u);
LABEL_147:
                    __break(1u);
LABEL_148:
                    __break(1u);
LABEL_149:
                    sub_24DCC84E8();
                    __break(1u);
LABEL_150:
                    __break(1u);
LABEL_151:
                    __break(1u);
LABEL_152:
                    __break(1u);
LABEL_153:
                    __break(1u);
LABEL_154:
                    __break(1u);
LABEL_155:
                    __break(1u);
LABEL_156:
                    __break(1u);
LABEL_157:
                    __break(1u);
LABEL_158:
                    __break(1u);
LABEL_159:
                    __break(1u);
                    JUMPOUT(0x24D985280);
                  }
                  uint64_t v20 = v19;
                  uint64_t v21 = sub_24DCC84F8();
                  uint64_t v22 = (int)v8 - v21;
                  if (__OFSUB__((int)v8, v21)) {
                    goto LABEL_132;
                  }
                  goto LABEL_53;
                }
                uint64_t v46 = *(void *)(v8 + 16);
                uint64_t v47 = *(void *)(v8 + 24);
                sub_24D3F9C18(v8, v7);
                swift_retain();
                swift_retain();
                uint64_t v48 = sub_24DCC84D8();
                if (v48)
                {
                  uint64_t v49 = sub_24DCC84F8();
                  if (__OFSUB__(v46, v49)) {
                    goto LABEL_140;
                  }
                  v48 += v46 - v49;
                }
                BOOL v17 = __OFSUB__(v47, v46);
                int64_t v50 = v47 - v46;
                if (v17) {
                  goto LABEL_135;
                }
                uint64_t v51 = sub_24DCC84E8();
                unint64_t v3 = v75;
                if (!v48) {
                  goto LABEL_152;
                }
                goto LABEL_84;
            }
          }
          if (!--v2) {
            return 1;
          }
          break;
        case 2uLL:
          uint64_t v16 = *(void *)(v8 + 16);
          uint64_t v15 = *(void *)(v8 + 24);
          BOOL v17 = __OFSUB__(v15, v16);
          uint64_t v14 = v15 - v16;
          if (!v17) {
            goto LABEL_19;
          }
          goto LABEL_126;
        case 3uLL:
          if (!v10) {
            goto LABEL_6;
          }
          sub_24D3F9C18(v8, v7);
LABEL_121:
          sub_24D400DCC(v6, v5);
          return 0;
        default:
          uint64_t v14 = BYTE6(v7);
          goto LABEL_19;
      }
    }
  }
  return 1;
}

uint64_t sub_24D9852B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    unint64_t v3 = (unsigned char *)(a1 + 41);
    uint64_t v4 = (unsigned char *)(a2 + 41);
    do
    {
      uint64_t v6 = *(void **)(v3 - 9);
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *(void **)(v4 - 9);
      uint64_t v9 = *(v4 - 1);
      if (*v3)
      {
        if ((*v4 & 1) == 0) {
          return 0;
        }
        uint64_t v10 = sub_24DCC97E8();
        uint64_t v12 = v11;
        BOOL v14 = v10 == sub_24DCC97E8() && v12 == v13;
        char v5 = v14 ? 1 : sub_24DCCAE28();
        sub_24D4018B8(v6, v7, 1);
        sub_24D4018B8(v6, v7, 1);
        sub_24D4018B8(v8, v9, 1);
        sub_24D4018B8(v6, v7, 1);
        sub_24D4018B8(v8, v9, 1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_24D40160C(v8, v9, 1);

        sub_24D40160C(v6, v7, 1);
        sub_24D40160C(v8, v9, 1);
        sub_24D40160C(v6, v7, 1);
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      else
      {
        if (*v4) {
          return 0;
        }
        if (*(v3 - 1))
        {
          if (v7 == 1)
          {
            uint64_t result = 0;
            if (v9 != 1 || v6 != v8) {
              return result;
            }
          }
          else
          {
            uint64_t result = 0;
            if (v6)
            {
              if (v9 != 2 || v8 != (void *)1) {
                return result;
              }
            }
            else if (v9 != 2 || v8)
            {
              return result;
            }
          }
        }
        else
        {
          uint64_t result = 0;
          if (*(v4 - 1) || v6 != v8) {
            return result;
          }
        }
      }
      v3 += 16;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_24D9854A8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    if (*(void *)(a1 + 32) == *(void *)(a2 + 32) && *(_DWORD *)(a1 + 40) == *(_DWORD *)(a2 + 40))
    {
      uint64_t v4 = (_DWORD *)(a1 + 72);
      char v5 = (_DWORD *)(a2 + 72);
      do
      {
        char v6 = *((unsigned char *)v5 - 16);
        if (*(unsigned char *)(v4 - 4))
        {
          if (!*((unsigned char *)v5 - 16)) {
            return 0;
          }
        }
        else
        {
          if (*((void *)v4 - 3) != *((void *)v5 - 3)) {
            char v6 = 1;
          }
          if (v6) {
            return 0;
          }
        }
        if (!--v2) {
          return 1;
        }
        int v7 = *v4;
        uint64_t v8 = *((void *)v4 - 1);
        v4 += 8;
        uint64_t v9 = *((void *)v5 - 1);
        int v11 = *v5;
        v5 += 8;
        int v10 = v11;
      }
      while (v8 == v9 && v7 == v10);
    }
    return 0;
  }
  return 1;
}

unint64_t sub_24D985548(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  unint64_t v3 = (unint64_t *)(a2 + 56);
  for (uint64_t i = (unint64_t *)(a1 + 56); ; i += 4)
  {
    uint64_t v6 = *(i - 3);
    uint64_t v8 = *(i - 1);
    unint64_t v7 = *i;
    uint64_t v9 = *(v3 - 3);
    int v10 = *((unsigned __int8 *)v3 - 16);
    uint64_t v12 = *(v3 - 1);
    unint64_t v11 = *v3;
    if (*((unsigned char *)i - 16))
    {
      if (*((unsigned char *)i - 16) == 1)
      {
        if (v10 != 1 || v6 != v9) {
          return 0;
        }
      }
      else if (v6)
      {
        if (v10 != 2 || v9 != 1) {
          return 0;
        }
      }
      else if (v10 != 2 || v9 != 0)
      {
        return 0;
      }
    }
    else
    {
      if (*((unsigned char *)v3 - 16)) {
        BOOL v14 = 0;
      }
      else {
        BOOL v14 = v6 == v9;
      }
      if (!v14) {
        return 0;
      }
    }
    uint64_t v47 = v2;
    if ((v7 & 0x2000000000000000) != 0) {
      uint64_t v17 = HIBYTE(v7) & 0xF;
    }
    else {
      uint64_t v17 = v8 & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    if (!v17)
    {
      swift_bridgeObjectRetain();
      goto LABEL_41;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_24DCC9A58();
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    if (v18 == 12565487 && v20 == 0xA300000000000000) {
      break;
    }
    char v21 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v21) {
      goto LABEL_39;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    unint64_t v31 = v7;
LABEL_42:
    if ((v11 & 0x2000000000000000) != 0) {
      uint64_t v32 = HIBYTE(v11) & 0xF;
    }
    else {
      uint64_t v32 = v12 & 0xFFFFFFFFFFFFLL;
    }
    if (!v32)
    {
LABEL_53:
      swift_bridgeObjectRetain();
      unint64_t v46 = v11;
      if (v8 != v12) {
        goto LABEL_5;
      }
      goto LABEL_54;
    }
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_24DCC9A58();
    uint64_t v35 = v34;
    swift_bridgeObjectRelease();
    if (v33 == 12565487 && v35 == 0xA300000000000000)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v36 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0) {
        goto LABEL_53;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t result = sub_24DCC9918();
    if (4 * v32 < result >> 14) {
      goto LABEL_59;
    }
    uint64_t v37 = sub_24DCC9A78();
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    swift_bridgeObjectRelease();
    uint64_t v44 = MEMORY[0x253327950](v37, v39, v41, v43);
    unint64_t v46 = v45;
    swift_bridgeObjectRelease();
    if (v8 != v44)
    {
LABEL_5:
      char v5 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v5 & 1) == 0) {
        return 0;
      }
      goto LABEL_6;
    }
LABEL_54:
    if (v31 != v46) {
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
LABEL_6:
    v3 += 4;
    uint64_t v2 = v47 - 1;
    if (v47 == 1) {
      return 1;
    }
  }
  swift_bridgeObjectRelease();
LABEL_39:
  swift_bridgeObjectRetain();
  unint64_t result = sub_24DCC9918();
  if (4 * v17 >= result >> 14)
  {
    uint64_t v23 = sub_24DCC9A78();
    uint64_t v25 = v24;
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    swift_bridgeObjectRelease();
    uint64_t v8 = MEMORY[0x253327950](v23, v25, v27, v29);
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    goto LABEL_42;
  }
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

BOOL sub_24D985934(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  if (v2 == 1) {
    return 1;
  }
  uint64_t v4 = v2 - 2;
  char v5 = a1 + 5;
  uint64_t v6 = a2 + 5;
  do
  {
    uint64_t v8 = *v5++;
    uint64_t v7 = v8;
    uint64_t v10 = *v6++;
    uint64_t v9 = v10;
    BOOL v12 = v4-- != 0;
    BOOL result = v7 == v9;
  }
  while (v7 == v9 && v12);
  return result;
}

uint64_t sub_24D9859A8(uint64_t a1)
{
  sub_24D983F10(a1);
  sub_24D3FB6F8(0, &qword_26986E8F8);
  uint64_t v1 = (void *)sub_24DCC9C18();
  swift_bridgeObjectRelease();
  id v2 = (id)FPGetTagsDataForTags();

  uint64_t v3 = sub_24DCC8B68();
  return v3;
}

uint64_t sub_24D985A38(uint64_t a1)
{
  sub_24D433858(a1, (uint64_t)v4);
  uint64_t v2 = sub_24DCCAFC8();
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

uint64_t sub_24D985A98()
{
  return sub_24DCCAFD8();
}

uint64_t sub_24D985AB0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  sub_24D433858(a1, (uint64_t)v7);
  char v5 = sub_24DCCAFC8();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1(a1);
  if (!v2) {
    *a2 = v5;
  }
  return result;
}

uint64_t sub_24D985B18()
{
  return sub_24DCCAFD8();
}

uint64_t sub_24D985B34()
{
  return sub_24DCCB018();
}

uint64_t sub_24D985B5C()
{
  return sub_24DCCB048();
}

uint64_t sub_24D985BA4()
{
  return sub_24DCCB018();
}

uint64_t sub_24D985BD0()
{
  return sub_24DCCB048();
}

uint64_t sub_24D985C14(unsigned __int8 a1)
{
  int v1 = a1;
  uint64_t result = 0x3E656E6F6E3CLL;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      uint64_t result = 2036691559;
      break;
    case 2:
      uint64_t result = 0x6E65657267;
      break;
    case 3:
      uint64_t result = 0x656C70727570;
      break;
    case 4:
      uint64_t result = 1702194274;
      break;
    case 5:
      uint64_t result = 0x776F6C6C6579;
      break;
    case 6:
      uint64_t result = 6579570;
      break;
    case 7:
      uint64_t result = 0x65676E61726FLL;
      break;
    default:
      uint64_t result = 0x6E776F6E6B6E753CLL;
      break;
  }
  return result;
}

uint64_t sub_24D985D08()
{
  return sub_24D985C14(*v0);
}

uint64_t sub_24D985D10()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = (void *)sub_24DCC97B8();
  id v1 = objc_msgSend(v0, sel_fp_obfuscatedFilename);

  uint64_t v2 = sub_24DCC97E8();
  swift_bridgeObjectRelease();

  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_24D985EBC()
{
  if (*v0) {
    return 0x726F6C6F63;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_24D985EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D986EC0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D985F14(uint64_t a1)
{
  unint64_t v2 = sub_24D986D1C();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D985F50(uint64_t a1)
{
  unint64_t v2 = sub_24D986D1C();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D985F8C(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  int v14 = a4;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FD80);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  unint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D986D1C();
  sub_24DCCB0D8();
  v13[0] = a2;
  v13[1] = a3;
  char v15 = 0;
  sub_24D4ED694();
  sub_24DCCACF8();
  if (!v4)
  {
    LOBYTE(v13[0]) = v14;
    char v15 = 1;
    type metadata accessor for fpfs_finder_color(0);
    sub_24D987AD8(&qword_26986FD90, type metadata accessor for fpfs_finder_color);
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_24D986160(void *a1)
{
  uint64_t result = sub_24D986F9C(a1);
  if (v1) {
    return v3;
  }
  return result;
}

uint64_t sub_24D986184@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24D986F9C(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(void *)(a2 + 8) = v5;
    *(unsigned char *)(a2 + 16) = v6;
  }
  return result;
}

uint64_t sub_24D9861B4(void *a1)
{
  return sub_24D985F8C(a1, *(void *)v1, *(void *)(v1 + 8), *(unsigned __int8 *)(v1 + 16));
}

BOOL sub_24D9861D4(uint64_t a1, uint64_t a2)
{
  return sub_24D986A98(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_24D9861F0()
{
  unsigned __int8 v1 = *(unsigned char *)(v0 + 16);
  swift_bridgeObjectRetain();
  uint64_t v2 = (void *)sub_24DCC97B8();
  id v3 = objc_msgSend(v2, sel_fp_obfuscatedFilename);

  uint64_t v4 = sub_24DCC97E8();
  swift_bridgeObjectRelease();

  sub_24DCC9968();
  sub_24D985C14(v1);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_24D9862B0(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 == 15) {
    return 0;
  }
  sub_24D3F9C18(a1, a2);
  uint64_t v5 = (void *)sub_24DCC8B28();
  id v6 = (id)FPGetTagsFromTagsData();

  if (v6)
  {
    sub_24D3FB6F8(0, &qword_26986E8F8);
    unint64_t v7 = sub_24DCC9C28();
  }
  else
  {
    unint64_t v7 = 0;
  }
  uint64_t v2 = sub_24D3FAB70(v7);
  sub_24D416034(a1, a2);
  swift_bridgeObjectRetain();
  sub_24D416034(a1, a2);
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v2;
}

uint64_t sub_24D98638C(uint64_t result, uint64_t a2)
{
  if (result)
  {
    if (*(void *)result)
    {
      uint64_t v2 = (void **)(a2 + 16);
      unsigned int v3 = *(unsigned __int8 *)(result + 8);
      sub_24DCC9988();
      sub_24D3F0EB8();
      uint64_t v4 = sub_24DCCA478();
      uint64_t v6 = v5;
      swift_bridgeObjectRelease();
      if (v3 <= 1) {
        char v7 = 1;
      }
      else {
        char v7 = v3;
      }
      swift_beginAccess();
      uint64_t v8 = *v2;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *uint64_t v2 = v8;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t v8 = sub_24DA158F0(0, v8[2] + 1, 1, v8);
        *uint64_t v2 = v8;
      }
      unint64_t v11 = v8[2];
      unint64_t v10 = v8[3];
      if (v11 >= v10 >> 1)
      {
        uint64_t v8 = sub_24DA158F0((void *)(v10 > 1), v11 + 1, 1, v8);
        *uint64_t v2 = v8;
      }
      _OWORD v8[2] = v11 + 1;
      BOOL v12 = &v8[3 * v11];
      void v12[4] = v4;
      v12[5] = v6;
      *((unsigned char *)v12 + 48) = v7;
      swift_endAccess();
      return 1;
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D9864FC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    sub_24D3E4C28(0, v1, 0);
    uint64_t v3 = a1 + 48;
    do
    {
      swift_bridgeObjectRetain_n();
      uint64_t v4 = (void *)sub_24DCC97B8();
      id v5 = objc_msgSend(v4, sel_fp_obfuscatedFilename);

      uint64_t v6 = sub_24DCC97E8();
      uint64_t v8 = v7;
      swift_bridgeObjectRelease();

      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v9 = v8;
      unint64_t v11 = *(void *)(v15 + 16);
      unint64_t v10 = *(void *)(v15 + 24);
      if (v11 >= v10 >> 1) {
        sub_24D3E4C28(v10 > 1, v11 + 1, 1);
      }
      v3 += 24;
      *(void *)(v15 + 16) = v11 + 1;
      uint64_t v12 = v15 + 16 * v11;
      *(void *)(v12 + 32) = v6;
      *(void *)(v12 + 40) = v9;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E00);
  sub_24D43E3F0();
  uint64_t v13 = sub_24DCC9708();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_24D986794()
{
  return 1936154996;
}

uint64_t sub_24D9867A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1936154996 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_24D98682C(uint64_t a1)
{
  unint64_t v2 = sub_24D9871D8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D986868(uint64_t a1)
{
  unint64_t v2 = sub_24D9871D8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D9868A4(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FD98);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9871D8();
  sub_24DCCB0D8();
  v9[1] = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986FDA8);
  sub_24D987A14(&qword_26986FDB0, (void (*)(void))sub_24D98722C);
  sub_24DCCACF8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void *sub_24D986A24(void *a1)
{
  return sub_24D987280(a1);
}

void *sub_24D986A3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_24D987280(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24D986A68(void *a1)
{
  return sub_24D9868A4(a1, *v1);
}

unint64_t sub_24D986A84(uint64_t *a1, uint64_t *a2)
{
  return sub_24D9840EC(*a1, *a2);
}

uint64_t sub_24D986A90()
{
  return sub_24D9864FC(*v0);
}

BOOL sub_24D986A98(uint64_t a1, unint64_t a2, char a3, uint64_t a4, unint64_t a5, char a6)
{
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_24D40114C(a1, a2);
  uint64_t v14 = v13;
  swift_bridgeObjectRelease();
  if (!v14) {
    goto LABEL_7;
  }
  if (v12 != 12565487 || v14 != 0xA300000000000000)
  {
    char v15 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_6;
    }
LABEL_7:
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
LABEL_6:
  swift_bridgeObjectRetain();
  unint64_t v16 = sub_24DCC9918();
  unint64_t v17 = sub_24D41824C(v16, a1, a2);
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  swift_bridgeObjectRelease();
  a1 = MEMORY[0x253327950](v17, v19, v21, v23);
  a2 = v24;
  swift_bridgeObjectRelease();
LABEL_8:
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_24D40114C(a4, a5);
  uint64_t v27 = v26;
  swift_bridgeObjectRelease();
  if (!v27) {
    goto LABEL_15;
  }
  if (v25 == 12565487 && v27 == 0xA300000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  char v28 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  if ((v28 & 1) == 0)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    if (a1 != a4) {
      goto LABEL_18;
    }
    goto LABEL_16;
  }
LABEL_13:
  swift_bridgeObjectRetain();
  unint64_t v29 = sub_24DCC9918();
  unint64_t v30 = sub_24D41824C(v29, a4, a5);
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  uint64_t v37 = MEMORY[0x253327950](v30, v32, v34, v36);
  a5 = v38;
  swift_bridgeObjectRelease();
  if (a1 != v37)
  {
LABEL_18:
    char v39 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    BOOL result = 0;
    if ((v39 & 1) == 0) {
      return result;
    }
    return a3 == a6;
  }
LABEL_16:
  if (a2 != a5) {
    goto LABEL_18;
  }
  swift_bridgeObjectRelease_n();
  return a3 == a6;
}

unint64_t sub_24D986D1C()
{
  unint64_t result = qword_26986FD88;
  if (!qword_26986FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FD88);
  }
  return result;
}

uint64_t sub_24D986D70(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v10 = *MEMORY[0x263EF8340];
  v8[6] = a1;
  v8[7] = a2;
  char v9 = a3;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = MEMORY[0x263F8EE78];
  uint64_t v4 = (uint64_t *)(v3 + 16);
  v8[4] = sub_24D987A0C;
  v8[5] = v3;
  v8[0] = MEMORY[0x263EF8330];
  v8[1] = 1107296256;
  _OWORD v8[2] = sub_24DCA7E34;
  v8[3] = &block_descriptor_22;
  uint64_t v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  fpfs_deserialize_tags();
  _Block_release(v5);
  swift_beginAccess();
  uint64_t v6 = *v4;
  if (*(void *)(v6 + 16)) {
    swift_bridgeObjectRetain();
  }
  else {
    uint64_t v6 = 0;
  }
  swift_release();
  return v6;
}

uint64_t sub_24D986EC0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6C6F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D986F9C(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FE10);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D986D1C();
  sub_24DCCB0B8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    char v10 = 0;
    sub_24D4ED88C();
    sub_24DCCAB98();
    uint64_t v7 = v11;
    type metadata accessor for fpfs_finder_color(0);
    char v10 = 1;
    sub_24D987AD8(&qword_26986FE18, type metadata accessor for fpfs_finder_color);
    swift_bridgeObjectRetain();
    sub_24DCCAB98();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_24D9871D8()
{
  unint64_t result = qword_26986FDA0;
  if (!qword_26986FDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FDA0);
  }
  return result;
}

unint64_t sub_24D98722C()
{
  unint64_t result = qword_26986FDB8;
  if (!qword_26986FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FDB8);
  }
  return result;
}

void *sub_24D987280(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FDF8);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9871D8();
  sub_24DCCB0B8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986FDA8);
    sub_24D987A14(&qword_26986FE00, (void (*)(void))sub_24D987A84);
    sub_24DCCAB98();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  return v7;
}

uint64_t sub_24D987428()
{
  return sub_24D987AD8(&qword_26986FDC0, type metadata accessor for fpfs_finder_color);
}

uint64_t sub_24D987474(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Tag(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for Tag(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for Tag(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Tag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tag()
{
  return &type metadata for Tag;
}

ValueMetadata *type metadata accessor for Tags()
{
  return &type metadata for Tags;
}

unsigned char *storeEnumTagSinglePayload for Tags.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24D987688);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Tags.CodingKeys()
{
  return &type metadata for Tags.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Tag.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D98778CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Tag.CodingKeys()
{
  return &type metadata for Tag.CodingKeys;
}

unint64_t sub_24D9877C8()
{
  unint64_t result = qword_26986FDC8;
  if (!qword_26986FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FDC8);
  }
  return result;
}

unint64_t sub_24D987820()
{
  unint64_t result = qword_26986FDD0;
  if (!qword_26986FDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FDD0);
  }
  return result;
}

unint64_t sub_24D987878()
{
  unint64_t result = qword_26986FDD8;
  if (!qword_26986FDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FDD8);
  }
  return result;
}

unint64_t sub_24D9878D0()
{
  unint64_t result = qword_26986FDE0;
  if (!qword_26986FDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FDE0);
  }
  return result;
}

unint64_t sub_24D987928()
{
  unint64_t result = qword_26986FDE8;
  if (!qword_26986FDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FDE8);
  }
  return result;
}

unint64_t sub_24D987980()
{
  unint64_t result = qword_26986FDF0;
  if (!qword_26986FDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FDF0);
  }
  return result;
}

uint64_t sub_24D9879D4()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D987A0C(uint64_t a1)
{
  return sub_24D98638C(a1, v1);
}

uint64_t sub_24D987A14(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26986FDA8);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24D987A84()
{
  unint64_t result = qword_26986FE08;
  if (!qword_26986FE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FE08);
  }
  return result;
}

uint64_t sub_24D987AD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_24D987B20(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t sub_24D987B54()
{
  return swift_release();
}

void *sub_24D987B60(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_24D987BA4(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_24D987BDC(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7F && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 127);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 6) | (2 * ((*(void *)a1 >> 57) & 0x38 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t sub_24D987C38(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7E)
  {
    *(void *)uint64_t result = a2 - 127;
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7F) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_24D987C88(void *a1)
{
  return *a1 >> 63;
}

void *sub_24D987C94(void *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_24D987CA4(uint64_t *result, uint64_t a2)
{
  *uint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

uint64_t type metadata accessor for FSOrFPJob()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D987CD0(uint64_t a1)
{
  return *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x78);
}

unint64_t sub_24D987CDC(uint64_t a1)
{
  unint64_t v1 = sub_24D9882B4(a1);
  swift_retain();
  return v1;
}

uint64_t sub_24D987D0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 & 0x7FFFFFFFFFFFFFFFLL) + 184))();
}

uint64_t sub_24D987D50()
{
  return 0;
}

void sub_24D987E64(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  if (*v3 < 0) {
    v4 &= ~0x8000000000000000;
  }
  uint64_t v5 = *(void **)(v4 + 96);
  unsigned int v6 = *(void **)(v4 + 104);
  *(void *)(v4 + 96) = a1;
  *(void *)(v4 + 104) = a2;
  char v7 = *(unsigned char *)(v4 + 112);
  *(unsigned char *)(v4 + 112) = a3;
  sub_24D3E380C(v5, v6, v7);
}

unint64_t sub_24D987E90(unint64_t a1)
{
  return a1 >> 63;
}

uint64_t sub_24D987E98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (a1 < 0) {
    uint64_t v3 = (a1 & 0x7FFFFFFFFFFFFFFFLL) + 56;
  }
  else {
    uint64_t v3 = a1 + 56;
  }
  swift_beginAccess();
  return sub_24D73C78C(v3, a2);
}

uint64_t sub_24D987EF4(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (*v1 < 0) {
    v3 &= ~0x8000000000000000;
  }
  swift_beginAccess();
  swift_retain();
  sub_24D5A3018(a1, v3 + 56);
  swift_endAccess();
  return swift_release();
}

uint64_t sub_24D987F6C()
{
  return sub_24DB1702C();
}

uint64_t sub_24D987F90(uint64_t a1)
{
  return *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x88);
}

uint64_t sub_24D987F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v7 = swift_getAssociatedConformanceWitness();
  uint64_t v21 = AssociatedTypeWitness;
  uint64_t v22 = v5;
  uint64_t v23 = AssociatedConformanceWitness;
  uint64_t v24 = v7;
  uint64_t v8 = (void *)type metadata accessor for ThrottlingKey();
  uint64_t v9 = sub_24DCCA3F8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v19 - v12;
  if ((a1 & 0x8000000000000000) == 0) {
    return (*(uint64_t (**)(uint64_t))(*(void *)a1 + 448))(v11);
  }
  uint64_t v20 = a2;
  (*(void (**)(uint64_t))(*(void *)(a1 & 0x7FFFFFFFFFFFFFFFLL) + 448))(v11);
  uint64_t v15 = *(v8 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, void *))(v15 + 48))(v13, 1, v8) == 1)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v13, v9);
    uint64_t v21 = v5;
    uint64_t v22 = AssociatedTypeWitness;
    uint64_t v23 = v7;
    uint64_t v24 = AssociatedConformanceWitness;
    uint64_t v16 = type metadata accessor for ThrottlingKey();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v20, 1, 1, v16);
  }
  else
  {
    uint64_t v17 = v20;
    sub_24DA7D1A4(v8, v20);
    (*(void (**)(char *, void *))(v15 + 8))(v13, v8);
    uint64_t v21 = v5;
    uint64_t v22 = AssociatedTypeWitness;
    uint64_t v23 = v7;
    uint64_t v24 = AssociatedConformanceWitness;
    uint64_t v18 = type metadata accessor for ThrottlingKey();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  }
}

uint64_t sub_24D9882A0()
{
  return sub_24D987D50();
}

unint64_t sub_24D9882B4(uint64_t a1)
{
  return a1 ^ 0x8000000000000000;
}

uint64_t sub_24D9882BC(uint64_t a1)
{
  return *(void *)((a1 & 0x7FFFFFFFFFFFFFFFLL) + 0x60);
}

void *sub_24D9882D0()
{
  return &unk_24DCE0CA0;
}

void *sub_24D9882DC()
{
  return &unk_24DCE0CA8;
}

void *sub_24D9882E8()
{
  return &unk_24DCE0CD8;
}

void *sub_24D9882F4()
{
  return &unk_24DCE0CB0;
}

void *sub_24D988300()
{
  return &unk_24DCE0CD0;
}

void *sub_24D98830C()
{
  return &unk_24DCE0CC8;
}

void *sub_24D988318()
{
  return &unk_24DCE0CE0;
}

void *sub_24D988324()
{
  return &unk_24DCE0CE8;
}

uint64_t sub_24D988330()
{
  return 8;
}

void *sub_24D988338()
{
  return &unk_24DCE0CB8;
}

uint64_t sub_24D988344()
{
  return 32;
}

void *sub_24D98834C()
{
  return &unk_24DCE0CC0;
}

uint64_t sub_24D988358()
{
  return 64;
}

uint64_t sub_24D988360()
{
  return 128;
}

uint64_t sub_24D988368()
{
  return 256;
}

uint64_t sub_24D988370()
{
  return 512;
}

uint64_t sub_24D988378()
{
  return 1024;
}

uint64_t sub_24D988380()
{
  return 2048;
}

void *sub_24D988388()
{
  return &unk_24DCE0CF0;
}

uint64_t sub_24D988394()
{
  return 4096;
}

unint64_t sub_24D98839C(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_24D9883CC();
  unint64_t result = sub_24D988420();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_24D9883CC()
{
  unint64_t result = qword_26986FE20;
  if (!qword_26986FE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FE20);
  }
  return result;
}

unint64_t sub_24D988420()
{
  unint64_t result = qword_26986FE28;
  if (!qword_26986FE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FE28);
  }
  return result;
}

unint64_t sub_24D988478()
{
  unint64_t result = qword_26986FE30;
  if (!qword_26986FE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FE30);
  }
  return result;
}

unint64_t sub_24D9884D0()
{
  unint64_t result = qword_26986FE38;
  if (!qword_26986FE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FE38);
  }
  return result;
}

unint64_t sub_24D988528()
{
  unint64_t result = qword_26986FE40;
  if (!qword_26986FE40)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26986FE48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FE40);
  }
  return result;
}

uint64_t sub_24D988584()
{
  return sub_24DA60570(*v0);
}

unint64_t sub_24D988590()
{
  unint64_t result = qword_26986FE50;
  if (!qword_26986FE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FE50);
  }
  return result;
}

unint64_t sub_24D9885E8()
{
  unint64_t result = qword_26986FE58;
  if (!qword_26986FE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FE58);
  }
  return result;
}

ValueMetadata *type metadata accessor for FileTreeLookupOptions()
{
  return &type metadata for FileTreeLookupOptions;
}

uint64_t sub_24D98864C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D988690()
{
  return sub_24D5E8D30();
}

uint64_t sub_24D988714()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    id v1 = (id)sub_24DA637A8();
    swift_release();
    return (uint64_t)v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D98875C()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = sub_24DA6384C();
    swift_retain();
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9887A4()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = sub_24DA38478();
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9887E8()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v1 = sub_24DA38480();
    swift_release();
    return v1 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D98882C()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 224))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D988890()
{
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9888B4()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 216))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D988918()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 232))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D98897C()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 240))(result);
    swift_release();
    return v1 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9889E0()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 272))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D988A4C()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 256))(result);
    swift_release();
    return v1 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D988AB8()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = (*(uint64_t (**)(uint64_t))(*(void *)result + 264))(result);
    swift_release();
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D988B24()
{
  uint64_t v1 = (void *)*v0;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = (*(uint64_t (**)(uint64_t))(*(void *)result + 248))(result);
    swift_release();
    uint64_t v16 = v3;
    uint64_t v5 = v1[73];
    uint64_t v6 = v1[74];
    uint64_t v7 = v1[75];
    *(void *)&long long v13 = v1[72];
    uint64_t v4 = v13;
    *((void *)&v13 + 1) = v5;
    uint64_t v14 = v6;
    uint64_t v15 = v7;
    type metadata accessor for FSOrFPJob();
    uint64_t v8 = sub_24DCCA6A8();
    uint64_t WitnessTable = swift_getWitnessTable();
    MEMORY[0x253327B80](&v11, v8, WitnessTable);
    uint64_t v10 = swift_release();
    uint64_t v16 = v11;
    MEMORY[0x270FA5388](v10);
    swift_getKeyPath();
    sub_24DCCA758();
    *(void *)&long long v13 = v5;
    *((void *)&v13 + 1) = v4;
    uint64_t v14 = v7;
    uint64_t v15 = v6;
    type metadata accessor for FSOrFPJob();
    swift_getWitnessTable();
    sub_24DCCAA48();
    swift_release();
    swift_release();
    long long v11 = v13;
    uint64_t v12 = v14;
    sub_24DCCA8B8();
    swift_getWitnessTable();
    return sub_24DCCA6B8();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D988D64@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  *a2 = sub_24D9882B4(*a1);

  return swift_retain();
}

uint64_t sub_24D988DB0()
{
  return swift_release();
}

uint64_t sub_24D988E10()
{
  return sub_24D989DAC((void (*)(void))sub_24DA30ACC);
}

uint64_t sub_24D988E28(char a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v3 = (*(uint64_t (**)(BOOL))(*(void *)result + 392))((a1 & 1) == 0);
    swift_release();
    return v3 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D988EA0(uint64_t a1, uint64_t a2, int a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v18 = a8;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a5;
    *(void *)(v17 + 24) = a6;
    swift_retain();
    sub_24DA2A928(a1, a2, a3, (a4 & 1) == 0, (uint64_t)sub_24D6EA5FC, v17, a7, v18, a9, a10);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_24D988FB8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, BOOL, void, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)result + 424))(a1, a2, a3, (a4 & 1) == 0, a5 & 1, a6, a7, a8, a9);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9890A0@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24DA2E61C(a1 & 1, a2, a3, a4, a5, a6, a7, a8);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989154(uint64_t a1, uint64_t a2, int a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24DA2E6C4(a1, a2, a3, a4, a5, a6, a7);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9891F8@<X0>(char *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_24DA3024C(a1, a2, a3, a4, a5, a6, a7);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9892A0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 576);
  uint64_t v2 = *(void *)(*(void *)v0 + 584);
  uint64_t v3 = *(void *)(*(void *)v0 + 592);
  uint64_t v4 = *(void *)(*(void *)v0 + 600);
  uint64_t v11 = v1;
  uint64_t v12 = v2;
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  uint64_t v5 = type metadata accessor for PersistenceTrigger();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (_OWORD *)((char *)&v11 - v7);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v11 = v2;
    uint64_t v12 = v1;
    uint64_t v13 = v4;
    uint64_t v14 = v3;
    uint64_t v10 = (void *)type metadata accessor for PersistenceTrigger();
    sub_24D55DE68(v10, v8);
    sub_24DA38760((uint64_t)v8);
    swift_release();
    return (*(uint64_t (**)(_OWORD *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989420(uint64_t a1, void *a2)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v5 = sub_24D9882B4(a1);
    swift_retain();
    sub_24DA388A4(v5, a2);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D9894D8()
{
  return sub_24D989DAC(sub_24DA39044);
}

uint64_t sub_24D9894F0()
{
  return sub_24D989DAC((void (*)(void))sub_24DA391CC);
}

uint64_t sub_24D989508()
{
  return sub_24D989DAC((void (*)(void))sub_24DA392C8);
}

uint64_t sub_24D989520()
{
  return sub_24D989DAC((void (*)(void))sub_24DA392F4);
}

uint64_t sub_24D989538(char a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v3 = sub_24DA63854(byte_24DCE101A[a1]);
    swift_retain();
    swift_release();
    return v3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989594(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, void, uint64_t, uint64_t, uint64_t))(*(void *)result + 464))(a1, a2 & 1, a3, a4, a5);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D98964C(uint64_t a1)
{
  return sub_24D98967C(a1, (uint64_t (*)(char *))sub_24DA398F0);
}

uint64_t sub_24D989664(uint64_t a1)
{
  return sub_24D98967C(a1, (uint64_t (*)(char *))sub_24DA398F8);
}

uint64_t sub_24D98967C(uint64_t a1, uint64_t (*a2)(char *))
{
  uint64_t v13 = a1;
  uint64_t v14 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v5 = swift_getAssociatedConformanceWitness();
  uint64_t v15 = AssociatedTypeWitness;
  uint64_t v16 = v3;
  uint64_t v17 = AssociatedConformanceWitness;
  uint64_t v18 = v5;
  uint64_t v6 = type metadata accessor for ReconciliationID();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v13 - v8;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v15 = v3;
    uint64_t v16 = AssociatedTypeWitness;
    uint64_t v17 = v5;
    uint64_t v18 = AssociatedConformanceWitness;
    uint64_t v11 = (int8x16_t *)type metadata accessor for ReconciliationID();
    sub_24D95FD44(v11, (uint64_t)v9);
    uint64_t v12 = v14(v9);
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989894(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)v2 + 576);
  uint64_t v5 = *(void *)(*(void *)v2 + 584);
  uint64_t v6 = *(void *)(*(void *)v2 + 592);
  uint64_t v7 = *(void *)(*(void *)v2 + 600);
  uint64_t v14 = v4;
  uint64_t v15 = v5;
  uint64_t v16 = v6;
  uint64_t v17 = v7;
  uint64_t v8 = type metadata accessor for TestingOperation();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v14 - v10;
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v14 = v5;
    uint64_t v15 = v4;
    uint64_t v16 = v7;
    uint64_t v17 = v6;
    uint64_t v13 = (void *)type metadata accessor for TestingOperation();
    sub_24DA02614(v13, (uint64_t)v11);
    sub_24DA39900((uint64_t)v11, a2);
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989A1C(uint64_t a1)
{
  return sub_24D989A4C(a1, (void (*)(unint64_t))sub_24DA39320);
}

uint64_t sub_24D989A34(uint64_t a1)
{
  return sub_24D989A4C(a1, (void (*)(unint64_t))sub_24DA394D0);
}

uint64_t sub_24D989A4C(uint64_t a1, void (*a2)(unint64_t))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v5 = sub_24D9882B4(a1);
    swift_retain();
    a2(v5);
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989B04(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    unint64_t v3 = sub_24D9882B4(a1);
    swift_retain();
    uint64_t v4 = sub_24DA39670(v3);
    swift_release();
    swift_release();
    unint64_t v5 = sub_24D9882B4(v4);
    swift_retain();
    swift_release();
    return v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989C00()
{
  return sub_24D989C30(sub_24DA3BEB4);
}

uint64_t sub_24D989C18()
{
  return sub_24D989C30(sub_24DA3BEC0);
}

uint64_t sub_24D989C30(uint64_t (*a1)(void))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v3 = a1();
    swift_release();
    return v3 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989C7C(uint64_t a1)
{
  return sub_24D989CAC(a1, sub_24DA3C12C);
}

uint64_t sub_24D989C94(uint64_t a1)
{
  return sub_24D989CAC(a1, sub_24DA3BECC);
}

uint64_t sub_24D989CAC(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    char v5 = a2(a1);
    swift_release();
    return v5 & 1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989D08()
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t))(*(void *)result + 552))(result);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989D7C()
{
  return sub_24D989DAC((void (*)(void))sub_24DA3C38C);
}

uint64_t sub_24D989D94()
{
  return sub_24D989DAC((void (*)(void))sub_24DA3C434);
}

uint64_t sub_24D989DAC(void (*a1)(void))
{
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a1();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D989DFC()
{
  return swift_weakDestroy();
}

uint64_t sub_24D989E04()
{
  uint64_t v0 = sub_24D6E809C();
  swift_weakDestroy();
  return v0;
}

uint64_t sub_24D989E34()
{
  sub_24D6E809C();
  swift_weakDestroy();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SwappedDatabase()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D989E94(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 600);
}

uint64_t sub_24D989E9C(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 592);
}

uint64_t sub_24D989EA4(uint64_t a1, uint64_t a2)
{
  return sub_24D98A188(a2);
}

uint64_t sub_24D989EC0(uint64_t a1, uint64_t a2)
{
  return sub_24D98A060(a2);
}

uint64_t sub_24D989EC8(uint64_t a1, uint64_t a2)
{
  return sub_24D98A2B0(a2);
}

void *sub_24D989ED0(uint64_t *a1)
{
  swift_weakInit();
  swift_weakAssign();
  type metadata accessor for SwappedReconciliationTable();
  uint64_t v2 = swift_retain();
  uint64_t v3 = sub_24D5B512C(v2);
  type metadata accessor for SwappedJobRegistry();
  uint64_t v4 = sub_24D979A30(a1[3]);
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v8 = a1[6];
  uint64_t v7 = a1[7];
  swift_retain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v9 = sub_24D6EA6FC(v3, v4, v5, v6, v8, v7);
  swift_release();
  return v9;
}

void *sub_24D98A024(uint64_t *a1)
{
  return sub_24D989ED0(a1);
}

uint64_t sub_24D98A060(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = sub_24DA38488();
  uint64_t result = swift_release();
  if (!v3) {
    return result;
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  unint64_t v5 = sub_24D9882B4(a1);
  uint64_t v6 = *(void (**)(uint64_t, unint64_t))(*(void *)v3 + 128);
  swift_retain();
  v6(v4, v5);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_24D98A188(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = sub_24DA38488();
  uint64_t result = swift_release();
  if (!v3) {
    return result;
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  unint64_t v5 = sub_24D9882B4(a1);
  uint64_t v6 = *(void (**)(uint64_t, unint64_t))(*(void *)v3 + 120);
  swift_retain();
  v6(v4, v5);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_24D98A2B0(uint64_t a1)
{
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v3 = sub_24DA38488();
  uint64_t result = swift_release();
  if (!v3) {
    return result;
  }
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v4 = result;
  unint64_t v5 = sub_24D9882B4(a1);
  uint64_t v6 = *(void (**)(uint64_t, unint64_t))(*(void *)v3 + 144);
  swift_retain();
  v6(v4, v5);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_24D98A3D8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D98A414()
{
  return 32;
}

__n128 sub_24D98A420(uint64_t a1, _OWORD *a2)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t sub_24D98A42C()
{
  return sub_24D988DB0();
}

BOOL sub_24D98A434(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    BOOL v5 = a4 == 1 && a1 == a3;
    BOOL v7 = a4 == 2 && a3 == 0;
    BOOL v9 = a4 == 2 && a3 == 1;
    if (!a1) {
      BOOL v9 = v7;
    }
    if (a2 == 1) {
      return v5;
    }
    else {
      return v9;
    }
  }
  else
  {
    return !a4 && a1 == a3;
  }
}

BOOL sub_24D98A48C(uint64_t a1, char a2)
{
  return !a1 && a2 == 2;
}

unint64_t sub_24D98A4A0(void *a1, uint64_t a2)
{
  unint64_t v3 = sub_24D3FAE2C(a1, a2);

  return v3;
}

uint64_t sub_24D98A4E8(unsigned __int8 a1, unsigned int *a2)
{
  int v3 = a1;
  sub_24D5B22F8((uint64_t)a2);
  if ((v3 - 1) <= 1) {
    return *(void *)a2;
  }
  uint64_t result = a2[4];
  if (!result) {
    return *(void *)a2;
  }
  return result;
}

BOOL sub_24D98A538(uint64_t a1, unsigned __int8 a2)
{
  return a2 > 1u && a1 != 0;
}

void *sub_24D98A54C()
{
  return &unk_24DCE1028;
}

uint64_t sub_24D98A558()
{
  return 5525065;
}

unint64_t sub_24D98A56C(unint64_t result, char a2)
{
  if (!a2) {
    return -(uint64_t)result;
  }
  if (a2 != 1) {
    return (unint64_t)(result != 0) << 63;
  }
  if ((result & 0x8000000000000000) != 0) {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D98A5A4(unint64_t a1)
{
  uint64_t v2 = sub_24DCC8288();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24DCC82A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 0x8000000000000000)
    {
      return 1;
    }
    else if ((a1 & 0x8000000000000000) != 0)
    {
      a1 = -(uint64_t)a1;
      if (HIDWORD(a1))
      {
        sub_24DCC8208();
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24D4A4604();
        sub_24DCC8808();
        BOOL v7 = (void *)sub_24DCC8128();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        swift_willThrow();

        return 0;
      }
    }
  }
  return a1;
}

uint64_t sub_24D98A750(void *a1, unint64_t a2, char a3)
{
  unint64_t v9 = a2;
  if (!a3) {
    goto LABEL_5;
  }
  if (a3 != 1)
  {
    unint64_t v9 = (unint64_t)(a2 != 0) << 63;
    goto LABEL_7;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_5:
    unint64_t v9 = -(uint64_t)a2;
  }
LABEL_7:
  id v10 = objc_msgSend(a1, sel_bindLongParameter_, v9, v6, v5, v4, v3, v7, v8);
  uint64_t v11 = sub_24DCC97E8();

  return v11;
}

unint64_t sub_24D98A7DC(sqlite3_value *a1)
{
  return sub_24D98B318(a1);
}

uint64_t sub_24D98A7F4(uint64_t a1)
{
  return sub_24D98B4C0(a1);
}

uint64_t sub_24D98A80C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 == 1 && a2 < 0) {
    __break(1u);
  }
  return sub_24DCC9F68();
}

unint64_t sub_24D98A854(void *a1, uint64_t a2)
{
  unint64_t v3 = sub_24D98B6AC(a1, a2);

  return v3;
}

uint64_t sub_24D98A89C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 == 1)
    {
      sub_24DCCB008();
      return sub_24DCCB038();
    }
    else
    {
      return sub_24DCCB008();
    }
  }
  else
  {
    sub_24DCCB008();
    return sub_24DCCB028();
  }
}

uint64_t sub_24D98A90C(uint64_t a1, char a2)
{
  if (a2)
  {
    sub_24DCCB008();
    if (a2 == 1) {
      sub_24DCCB038();
    }
  }
  else
  {
    sub_24DCCB008();
    sub_24DCCB028();
  }
  return sub_24DCCB048();
}

void sub_24D98A9A8(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 2;
}

void sub_24D98A9B8(uint64_t a1@<X8>)
{
  *(void *)a1 = 1;
  *(unsigned char *)(a1 + 8) = 2;
}

BOOL sub_24D98A9CC()
{
  return !*(void *)v0 && *(unsigned char *)(v0 + 8) == 2;
}

BOOL sub_24D98A9E4()
{
  return *(unsigned __int8 *)(v0 + 8) >= 2u && *(void *)v0 != 0;
}

uint64_t sub_24D98AA08()
{
  return sub_24D3D4384(*(void *)v0, *(unsigned char *)(v0 + 8));
}

unint64_t sub_24D98AA14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t result = sub_24D3D53F4(a1, a2);
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = v5;
  return result;
}

uint64_t sub_24D98AA40()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_24DCCAFF8();
  if (v1)
  {
    sub_24DCCB008();
    if (v1 == 1) {
      sub_24DCCB038();
    }
  }
  else
  {
    sub_24DCCB008();
    sub_24DCCB028();
  }
  return sub_24DCCB048();
}

uint64_t sub_24D98AADC()
{
  int v1 = *(unsigned __int8 *)(v0 + 8);
  sub_24DCCAFF8();
  if (v1)
  {
    sub_24DCCB008();
    if (v1 == 1) {
      sub_24DCCB038();
    }
  }
  else
  {
    sub_24DCCB008();
    sub_24DCCB028();
  }
  return sub_24DCCB048();
}

void sub_24D98AB74(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v6 = sub_24D3FAE2C(a1, a2);
  char v8 = v7;

  if (!v3)
  {
    *(void *)a3 = v6;
    *(unsigned char *)(a3 + 8) = v8;
  }
}

unint64_t sub_24D98ABCC@<X0>(sqlite3_value *a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t result = sub_24D98B318(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_24D98ABFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_24D98B4C0(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_24D98AC2C()
{
  if (*(unsigned char *)(v0 + 8) && *(unsigned char *)(v0 + 8) == 1 && (*(void *)v0 & 0x8000000000000000) != 0) {
    __break(1u);
  }
  return sub_24DCC9F68();
}

uint64_t sub_24D98AC78(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t a5)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    LODWORD(result) = 0;
    unsigned __int8 v14 = 0;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  if ((a4 & 0x2000000000000000) != 0)
  {
    v13[0] = a3;
    v13[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v11 = v13;
  }
  else if ((a3 & 0x1000000000000000) != 0)
  {
    uint64_t v11 = (void *)((a4 & 0xFFFFFFFFFFFFFFFLL) + 32);
  }
  else
  {
    uint64_t v11 = (void *)sub_24DCCA7E8();
  }
  uint64_t result = sub_24D98AD4C((uint64_t)v11, a1, a2, a3, a4, a5);
  if (!v5)
  {
    unsigned __int8 v14 = BYTE4(result) & 1;
    return result | ((unint64_t)v14 << 32) | (((a4 >> 60) & 1) << 40);
  }
  return result;
}

uint64_t sub_24D98AD4C(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_24DC73104(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_104;
  }
  uint64_t result = sub_24DCC99D8();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_24DC73104(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_24DC73104(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_100;
  }
  if (v17 < a3 >> 16)
  {
LABEL_101:
    __break(1u);
    goto LABEL_102;
  }
  uint64_t result = sub_24DCC99D8();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_99;
  }
  if (v18 < v15)
  {
LABEL_99:
    __break(1u);
LABEL_100:
    __break(1u);
    goto LABEL_101;
  }
  uint64_t v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    uint64_t v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v34 = a6 + 55;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v34 = 65;
        }
        if (a6 <= 10) {
          unsigned __int8 v35 = a6 + 48;
        }
        else {
          unsigned __int8 v35 = 58;
        }
        if (v19)
        {
          unsigned int v24 = 0;
          uint64_t v36 = v19 + 1;
          uint64_t v37 = result - 1;
          do
          {
            unsigned int v38 = *v36;
            if (v38 < 0x30 || v38 >= v35)
            {
              if (v38 < 0x41 || v38 >= v34)
              {
                unsigned int v29 = 0;
                unsigned __int8 v30 = 1;
                if (v38 < 0x61 || v38 >= v33) {
                  return v29 | ((unint64_t)v30 << 32);
                }
                char v39 = -87;
              }
              else
              {
                char v39 = -55;
              }
            }
            else
            {
              char v39 = -48;
            }
            unint64_t v40 = v24 * (unint64_t)a6;
            if ((v40 & 0xFFFFFFFF00000000) != 0) {
              goto LABEL_96;
            }
            unsigned __int8 v41 = v38 + v39;
            unsigned int v24 = v40 + v41;
            if (__CFADD__(v40, v41)) {
              goto LABEL_96;
            }
            ++v36;
            --v37;
          }
          while (v37);
LABEL_94:
          unsigned __int8 v30 = 0;
          unsigned int v29 = v24;
          return v29 | ((unint64_t)v30 << 32);
        }
        goto LABEL_95;
      }
      goto LABEL_96;
    }
    goto LABEL_103;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v42 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v43 = a6 + 55;
      }
      else
      {
        unsigned __int8 v42 = 97;
        unsigned __int8 v43 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v44 = a6 + 48;
      }
      else {
        unsigned __int8 v44 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        while (1)
        {
          unsigned int v45 = *v19;
          if (v45 < 0x30 || v45 >= v44)
          {
            if (v45 < 0x41 || v45 >= v43)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v45 < 0x61 || v45 >= v42) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v46 = -87;
            }
            else
            {
              char v46 = -55;
            }
          }
          else
          {
            char v46 = -48;
          }
          unint64_t v47 = v24 * (unint64_t)a6;
          if ((v47 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_96;
          }
          unsigned __int8 v48 = v45 + v46;
          unsigned int v24 = v47 + v48;
          if (__CFADD__(v47, v48)) {
            goto LABEL_96;
          }
          ++v19;
          if (!--result) {
            goto LABEL_94;
          }
        }
      }
      goto LABEL_95;
    }
LABEL_96:
    unsigned int v29 = 0;
    unsigned __int8 v30 = 1;
    return v29 | ((unint64_t)v30 << 32);
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v22 = a6 + 55;
      }
      else
      {
        unsigned __int8 v21 = 97;
        unsigned __int8 v22 = 65;
      }
      if (a6 <= 10) {
        unsigned __int8 v23 = a6 + 48;
      }
      else {
        unsigned __int8 v23 = 58;
      }
      if (v19)
      {
        unsigned int v24 = 0;
        uint64_t v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              unsigned int v29 = 0;
              unsigned __int8 v30 = 1;
              if (v27 < 0x61 || v27 >= v21) {
                return v29 | ((unint64_t)v30 << 32);
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          unint64_t v31 = v24 * (unint64_t)a6;
          if ((v31 & 0xFFFFFFFF00000000) != 0) {
            goto LABEL_96;
          }
          unsigned __int8 v32 = v27 + v28;
          unsigned int v24 = v31 - v32;
          if (v31 < v32) {
            goto LABEL_96;
          }
          ++v25;
          if (!--v26) {
            goto LABEL_94;
          }
        }
      }
LABEL_95:
      unsigned int v29 = 0;
      unsigned __int8 v30 = 0;
      return v29 | ((unint64_t)v30 << 32);
    }
    goto LABEL_96;
  }
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
  return result;
}

uint64_t sub_24D98B174(uint64_t a1)
{
  uint64_t v2 = sub_24DCC8288();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24DCC82A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    if (a1 == 0x8000000000000000)
    {
      return 1;
    }
    else if (a1 < 0)
    {
      a1 = -a1;
      if (HIDWORD(a1))
      {
        sub_24DCC8208();
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24D4A4604();
        sub_24DCC8808();
        a1 = (uint64_t)v6;
        sub_24DCC8128();
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        swift_willThrow();
      }
    }
  }
  return a1;
}

unint64_t sub_24D98B318(sqlite3_value *a1)
{
  uint64_t v2 = sub_24DCC8288();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v3 = sub_24DCC82A8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t result = sqlite3_value_int64(a1);
  if (result == 0x8000000000000000) {
    return 1;
  }
  if (result && (result & 0x8000000000000000) != 0)
  {
    unint64_t result = -(uint64_t)result;
    if (HIDWORD(result))
    {
      sub_24DCC8208();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4A4604();
      sub_24DCC8808();
      sub_24DCC8128();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      return swift_willThrow();
    }
  }
  return result;
}

uint64_t sub_24D98B4C0(uint64_t a1)
{
  uint64_t v4 = sub_24DCC8288();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_24DCC82A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_24D433858(a1, (uint64_t)v12);
  uint64_t v9 = sub_24DCC9F58();
  if (!v1)
  {
    uint64_t v2 = v9;
    if (v9 == 0x8000000000000000)
    {
      uint64_t v2 = 1;
    }
    else if (v9)
    {
      if (v9 < 0)
      {
        uint64_t v2 = -v9;
        if ((unint64_t)-v9 >> 32)
        {
          sub_24DCC8208();
          sub_24D5F77E0(MEMORY[0x263F8EE78]);
          sub_24D4A4604();
          sub_24DCC8808();
          sub_24DCC8128();
          (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
          swift_willThrow();
        }
      }
    }
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v2;
}

unint64_t sub_24D98B6AC(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC8288();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_24DCC82A8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t)objc_msgSend(a1, sel_longAtIndex_, a2);
  unint64_t v10 = v9 + 0x7FFFFFFFFFFFFFFFLL;
  if ((v9 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
    unint64_t v10 = v9;
  }
  if (v9 >= 1) {
    unint64_t result = 0x7FFFFFFF - v9;
  }
  else {
    unint64_t result = v10;
  }
  if (result == 0x8000000000000000) {
    return 1;
  }
  if (result && (result & 0x8000000000000000) != 0)
  {
    unint64_t result = -(uint64_t)result;
    if (HIDWORD(result))
    {
      sub_24DCC8208();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D4A4604();
      sub_24DCC8808();
      sub_24DCC8128();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_willThrow();
    }
  }
  return result;
}

unint64_t sub_24D98B88C(void *a1)
{
  a1[1] = sub_24D98B8CC();
  a1[2] = sub_24D5F80D4();
  a1[3] = sub_24D5F7FD8();
  unint64_t result = sub_24D58F648();
  a1[4] = result;
  return result;
}

unint64_t sub_24D98B8CC()
{
  unint64_t result = qword_26B197D88;
  if (!qword_26B197D88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B197D88);
  }
  return result;
}

unint64_t sub_24D98B924()
{
  unint64_t result = qword_26B199D18;
  if (!qword_26B199D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B199D18);
  }
  return result;
}

ValueMetadata *type metadata accessor for VFSItemID()
{
  return &type metadata for VFSItemID;
}

uint64_t sub_24D98B988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v11 = (char *)&v16 - v10;
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  uint64_t v14 = v13;
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  swift_getAssociatedConformanceWitness();
  return sub_24D958E58((uint64_t)v11, v12, v14, (uint64_t)v8, AssociatedTypeWitness, a3);
}

uint64_t sub_24D98BB1C(uint64_t a1)
{
  return sub_24D98BB34(a1);
}

uint64_t sub_24D98BB34(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v11 = MEMORY[0x263F8EE78];
    sub_24D7C6E90(0, v1, 0);
    uint64_t v2 = v11;
    uint64_t v4 = (unint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      sub_24D3F9C18(v5, *v4);
      unint64_t v8 = *(void *)(v11 + 16);
      unint64_t v7 = *(void *)(v11 + 24);
      if (v8 >= v7 >> 1) {
        sub_24D7C6E90(v7 > 1, v8 + 1, 1);
      }
      v4 += 8;
      *(void *)(v11 + 16) = v8 + 1;
      uint64_t v9 = v11 + 16 * v8;
      *(void *)(v9 + 32) = v5;
      *(void *)(v9 + 40) = v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24D98BC10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ItemMetadata();
  uint64_t v5 = v4 - 8;
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  uint64_t v8 = v7[*(int *)(v5 + 88)];
  sub_24D409FE4((uint64_t)v7);
  return v8;
}

uint64_t sub_24D98BCC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (unsigned __int8 *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  uint64_t v7 = *v6;
  sub_24D409FE4((uint64_t)v6);
  return v7;
}

uint64_t sub_24D98BD68(uint64_t result, char a2)
{
  if (a2) {
    *v2 |= result;
  }
  return result;
}

uint64_t sub_24D98BD7C()
{
  return 0;
}

uint64_t sub_24D98BD88(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v1;
}

uint64_t sub_24D98BDB4(uint64_t a1, uint64_t a2)
{
  *(void *)&long long v44 = swift_getAssociatedTypeWitness();
  *((void *)&v44 + 1) = swift_getAssociatedTypeWitness();
  *(void *)&long long v45 = swift_getAssociatedConformanceWitness();
  *((void *)&v45 + 1) = swift_getAssociatedConformanceWitness();
  uint64_t v4 = type metadata accessor for FileItemVersion();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)v29 - v5;
  uint64_t v6 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v36 = (char *)v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v10 = (char *)v29 - v9;
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(a2 + 120))(v41, a1, a2);
  sub_24D3F0BA0((uint64_t)v41, (uint64_t)v42, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v42) == 1)
  {
    uint64_t v34 = 0;
    unint64_t v11 = 0xE000000000000000;
  }
  else
  {
    long long v56 = v42[12];
    long long v57 = v42[13];
    long long v58 = v42[14];
    uint64_t v59 = v43;
    long long v52 = v42[8];
    long long v53 = v42[9];
    long long v54 = v42[10];
    long long v55 = v42[11];
    long long v48 = v42[4];
    long long v49 = v42[5];
    long long v50 = v42[6];
    long long v51 = v42[7];
    long long v44 = v42[0];
    long long v45 = v42[1];
    long long v46 = v42[2];
    long long v47 = v42[3];
    sub_24DA12208();
    sub_24D472A7C((uint64_t)v41);
    strcpy((char *)v40, " nsattr:");
    BYTE1(v40[1]) = 0;
    WORD1(v40[1]) = 0;
    HIDWORD(v40[1]) = -402653184;
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t v34 = v40[0];
    unint64_t v11 = v40[1];
  }
  unint64_t v35 = v11;
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t))(a2 + 136);
  if (v12(a1, a2))
  {
    strcpy((char *)v40, " unsupported:");
    HIWORD(v40[1]) = -4864;
    uint64_t v13 = v12(a1, a2);
    sub_24D97C4E0(v13);
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    uint64_t v31 = v40[0];
    unint64_t v14 = v40[1];
  }
  else
  {
    uint64_t v31 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  unint64_t v32 = v14;
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 144))(a1, a2);
  int v17 = v15;
  if (v16 >> 62)
  {
    if (v16 >> 62 != 1)
    {
      uint64_t v30 = 0;
      unint64_t v19 = 0xE000000000000000;
      goto LABEL_13;
    }
    sub_24D466534(v15, v16);
    uint64_t v18 = 1886221352;
  }
  else
  {
    sub_24D466534(v15, v16);
    uint64_t v18 = 1852270888;
  }
  v40[0] = v18 & 0xFFFF0000FFFFFFFFLL | 0x3A00000000;
  v40[1] = 0xE500000000000000;
  sub_24D7CE9A0(v17);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v30 = v40[0];
  unint64_t v19 = v40[1];
LABEL_13:
  v29[1] = v19;
  v40[0] = 0;
  v40[1] = 0xE000000000000000;
  sub_24DCCA728();
  sub_24DCC9968();
  (*(void (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  swift_getAssociatedConformanceWitness();
  sub_24DCCADC8();
  int v20 = *(void (**)(char *, uint64_t))(v33 + 8);
  v20(v10, AssociatedTypeWitness);
  sub_24DCC9968();
  (*(void (**)(uint64_t, uint64_t))(a2 + 72))(a1, a2);
  sub_24DCCADC8();
  v20(v10, AssociatedTypeWitness);
  sub_24DCC9968();
  (*(void (**)(uint64_t, uint64_t))(a2 + 80))(a1, a2);
  unsigned __int8 v21 = (void *)sub_24DCC97B8();
  id v22 = objc_msgSend(v21, sel_fp_obfuscatedFilename);

  sub_24DCC97E8();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v23 = (uint64_t)v36;
  (*(void (**)(uint64_t, uint64_t))(a2 + 104))(a1, a2);
  sub_24D4E6FA0();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24D409FE4(v23);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v25 = v40[0];
  uint64_t v24 = v40[1];
  v40[0] = 0;
  v40[1] = 0xE000000000000000;
  uint64_t v26 = v37;
  (*(void (**)(uint64_t, uint64_t))(a2 + 112))(a1, a2);
  uint64_t v27 = v39;
  swift_getWitnessTable();
  sub_24DCCADC8();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v27);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  v40[0] = v25;
  v40[1] = v24;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v40[0];
}

uint64_t sub_24D98C530(int a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2 >> 62)
  {
    if (a2 >> 62 == 1)
    {
      if (a4 >> 62 != 1) {
        return 0;
      }
      return a1 == a3;
    }
    if (a4 >> 62 == 2 && !a3 && a4 == 0x8000000000000000) {
      return 1;
    }
  }
  else if (!(a4 >> 62))
  {
    return a1 == a3;
  }
  return 0;
}

BOOL sub_24D98C590(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  unint64_t v3 = a2[1];
  uint64_t v4 = a1[1] >> 62;
  if (!v4)
  {
    if (v3 >> 62) {
      return 0;
    }
    return *a1 == v2;
  }
  if (v4 == 1)
  {
    if (v3 >> 62 != 1) {
      return 0;
    }
    return *a1 == v2;
  }
  return v3 >> 62 == 2 && v2 == 0 && v3 == 0x8000000000000000;
}

uint64_t sub_24D98C5F4(uint64_t a1)
{
  void (*v61)(void *__return_ptr, uint64_t);
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  char v67;
  char v68;
  int v69;
  char v70;
  char v71;
  uint64_t v72;
  char v73;
  char v74;
  int v75;
  char v76;
  char v77;
  int v78;
  char v79;
  char v80;
  int v81;
  char v82;
  char v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  char v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  char v105;
  char v106;
  int v107;
  char v108;
  char v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int v135;
  char v136;
  char v137;
  void *v138;
  void *v139;
  char v140;
  void *v141;
  void *v142;
  void *v143;
  void *v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char v158;
  char v159;
  char v160;
  char v161;
  char v162;
  char v163;
  char v164;
  char v165;
  uint64_t v166;
  void (*v167)(uint64_t, uint64_t);
  uint64_t v168;
  uint64_t v169;
  void (*v170)(uint64_t, uint64_t);
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void v192[31];
  void v193[31];
  void v194[31];
  void v195[31];
  void v196[31];
  void v197[31];
  void v198[31];
  void v199[31];
  void v200[31];
  void v201[31];
  void v202[31];
  void v203[31];
  void v204[31];
  void v205[31];
  void v206[31];
  void v207[31];
  void v208[31];
  void v209[31];
  void v210[31];
  void v211[31];
  void v212[31];
  void v213[31];
  void v214[31];
  void v215[31];
  void v216[31];
  void v217[31];
  void v218[31];
  void v219[31];
  void v220[31];
  void v221[31];
  void v222[31];
  void v223[31];
  void v224[31];
  void v225[31];
  void v226[31];
  void v227[31];
  void v228[31];
  void v229[31];
  void v230[31];
  void v231[31];
  void v232[31];
  void v233[31];
  void v234[31];
  void v235[31];
  void v236[31];
  void v237[31];
  void v238[31];
  void v239[31];
  void v240[31];
  void v241[31];
  _OWORD v242[15];
  uint64_t v243;
  long long v244;
  long long v245;
  long long v246;
  long long v247;
  long long v248;
  long long v249;
  long long v250;
  long long v251;
  long long v252;
  long long v253;
  long long v254;
  long long v255;
  long long v256;
  long long v257;
  long long v258;
  uint64_t v259;
  _OWORD v260[15];
  uint64_t v261;
  long long v262;
  long long v263;
  long long v264;
  long long v265;
  long long v266;
  long long v267;
  long long v268;
  long long v269;
  long long v270;
  long long v271;
  long long v272;
  long long v273;
  long long v274;
  long long v275;
  long long v276;
  uint64_t v277;
  void v278[31];
  void v279[31];
  unsigned char v280[192];
  void *v281;
  void *v282;
  unsigned char v283[192];
  void *v284;
  void *v285;
  void v286[31];
  void v287[31];
  unsigned char v288[248];
  unsigned char v289[248];
  void v290[31];
  void v291[31];
  void v292[31];
  void v293[31];
  void v294[31];
  void v295[31];
  void v296[31];
  void v297[31];
  unsigned char v298[248];
  unsigned char v299[248];
  unsigned char v300[248];
  unsigned char v301[248];
  void v302[31];
  void v303[31];
  unsigned char v304[248];
  unsigned char v305[248];
  void v306[31];
  void v307[31];
  void v308[31];
  void v309[31];
  unsigned char v310[248];
  unsigned char v311[248];
  unsigned char v312[248];
  unsigned char v313[248];
  unsigned char v314[248];
  unsigned char v315[248];
  _OWORD v316[15];
  uint64_t v317;
  long long v318;
  _OWORD v319[14];
  uint64_t v320;
  _OWORD v321[15];
  uint64_t v322;
  long long v323;
  _OWORD v324[14];
  uint64_t v325;
  _OWORD v326[15];
  uint64_t v327;
  long long v328;
  _OWORD v329[14];
  uint64_t v330;
  _OWORD v331[15];
  uint64_t v332;
  long long v333;
  _OWORD v334[14];
  uint64_t v335;
  unsigned char v336[248];
  unsigned char v337[248];
  unsigned char v338[248];
  unsigned char v339[248];
  void v340[31];
  void v341[31];
  id v342;
  id v343;
  id v344;
  id v345;
  char v346[8];
  char v347[8];
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353[3];

  uint64_t v2 = MEMORY[0x270FA5388](a1);
  long long v191 = v1;
  long long v185 = v4;
  long long v186 = v3;
  uint64_t v6 = v5;
  uint64_t v8 = v7;
  long long v187 = v2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  long long v188 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  long long v181 = (char *)&v166 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  long long v180 = (char *)&v166 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  unint64_t v174 = v13;
  long long v184 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  long long v177 = (char *)&v166 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v175 = (char *)&v166 - v16;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  unint64_t v176 = AssociatedConformanceWitness;
  long long v178 = AssociatedTypeWitness;
  long long v179 = swift_getAssociatedConformanceWitness();
  v341[0] = v13;
  v341[1] = AssociatedTypeWitness;
  v341[2] = AssociatedConformanceWitness;
  v341[3] = v179;
  uint64_t v173 = type metadata accessor for FileItemVersion();
  long long v182 = *(void *)(v173 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v173);
  unint64_t v172 = (char *)&v166 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  long long v183 = (char *)&v166 - v20;
  uint64_t v21 = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v22 = type metadata accessor for ItemState();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v166 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  char v28 = (char *)&v166 - v27;
  unint64_t v189 = v8;
  sub_24D98B988(v8, v21, (uint64_t)&v166 - v27);
  uint64_t v29 = v185;
  uint64_t v30 = v186;
  sub_24D98B988(v186, v185, (uint64_t)v26);
  uint64_t v31 = v30;
  uint64_t v32 = v29;
  uint64_t v33 = (*(uint64_t (**)(uint64_t, uint64_t))(v29 + 136))(v31, v29);
  unint64_t v171 = sub_24D958FB0((uint64_t)v26, v33, 0, v22);
  uint64_t v34 = *(void (**)(char *, uint64_t))(v23 + 8);
  v34(v26, v22);
  v34(v28, v22);
  long long v190 = v21;
  unint64_t v35 = *(void (**)(uint64_t, uint64_t))(v21 + 112);
  uint64_t v169 = v21 + 112;
  unint64_t v170 = v35;
  uint64_t v36 = v183;
  v35(v8, v21);
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v184 + 16);
  uint64_t v38 = v174;
  uint64_t v39 = v175;
  v37(v175, v36, v174);
  long long v182 = *(void *)(v182 + 8);
  uint64_t v40 = v173;
  ((void (*)(char *, uint64_t))v182)(v36, v173);
  unint64_t v167 = *(void (**)(uint64_t, uint64_t))(v32 + 112);
  unint64_t v168 = v32 + 112;
  unsigned __int8 v41 = v172;
  v167(v186, v32);
  unsigned __int8 v42 = v177;
  uint64_t v43 = v38;
  v37(v177, v41, v38);
  ((void (*)(char *, uint64_t))v182)(v41, v40);
  long long v44 = v39;
  long long v45 = v42;
  LOBYTE(v42) = sub_24DCC9798();
  long long v46 = *(void (**)(char *, uint64_t))(v184 + 8);
  v46(v45, v43);
  v46(v44, v43);
  uint64_t v47 = v171 | 8;
  if (v42) {
    uint64_t v47 = v171;
  }
  long long v184 = v47;
  long long v48 = v183;
  v170(v189, v190);
  uint64_t v49 = v40;
  long long v50 = &v48[*(int *)(v40 + 56)];
  long long v51 = *(void (**)(char *, char *, uint64_t))(v188 + 16);
  long long v52 = v180;
  uint64_t v53 = v178;
  v51(v180, v50, v178);
  long long v54 = v48;
  uint64_t v55 = v49;
  long long v56 = (void (*)(char *, uint64_t))v182;
  ((void (*)(char *, uint64_t))v182)(v54, v49);
  v167(v186, v185);
  long long v57 = v181;
  v51(v181, &v41[*(int *)(v55 + 56)], v53);
  v56(v41, v55);
  long long v58 = v57;
  LOBYTE(v57) = sub_24DCC9798();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v188 + 8);
  v59(v58, v53);
  v59(v52, v53);
  if (v57) {
    uint64_t v60 = v184;
  }
  else {
    uint64_t v60 = v184 | 0x20000000000;
  }
  size_t v61 = *(void (**)(void *__return_ptr, uint64_t))(v190 + 120);
  v61(v192, v189);
  sub_24D3F0BA0((uint64_t)v192, (uint64_t)v341, &qword_26B197970);
  uint64_t v62 = sub_24D3F0D40((uint64_t)v341);
  int64_t v63 = 0;
  if (v62 != 1)
  {
    int64_t v63 = v341[0];
    sub_24D472A7C((uint64_t)v192);
  }
  uint64_t v64 = v185;
  long long v188 = *(void *)(v185 + 120);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v193, v186, v185);
  sub_24D3F0BA0((uint64_t)v193, (uint64_t)v340, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v340) != 1)
  {
    size_t v65 = v340[0];
    sub_24D472A7C((uint64_t)v193);
    if (v62 != 1 && v63 == v65) {
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  if (v62 != 1) {
LABEL_13:
  }
    v60 |= 0x40000uLL;
LABEL_14:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v194, v189, v190);
  sub_24D3F0BA0((uint64_t)v194, (uint64_t)v339, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v339) == 1)
  {
    int v66 = 2;
  }
  else
  {
    uint64_t v67 = v339[8];
    sub_24D472A7C((uint64_t)v194);
    int v66 = v67 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v195, v186, v64);
  sub_24D3F0BA0((uint64_t)v195, (uint64_t)v338, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v338) != 1)
  {
    uint64_t v68 = v338[8];
    sub_24D472A7C((uint64_t)v195);
    if (v66 != 2 && (v68 & 1) == (v66 != 0)) {
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  if (v66 != 2) {
LABEL_22:
  }
    v60 |= 0x80000uLL;
LABEL_23:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v196, v189, v190);
  sub_24D3F0BA0((uint64_t)v196, (uint64_t)v337, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v337) == 1)
  {
    uint64_t v69 = 2;
  }
  else
  {
    uint64_t v70 = v337[9];
    sub_24D472A7C((uint64_t)v196);
    uint64_t v69 = v70 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v197, v186, v64);
  sub_24D3F0BA0((uint64_t)v197, (uint64_t)v336, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v336) == 1)
  {
    if (v69 == 2) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  unint64_t v71 = v336[9];
  sub_24D472A7C((uint64_t)v197);
  if (v69 == 2 || (v71 & 1) != (v69 != 0)) {
LABEL_31:
  }
    v60 |= 0x100000uLL;
LABEL_32:
  unint64_t v72 = v186;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v198, v189, v190);
  sub_24D3F0BA0((uint64_t)v198, (uint64_t)v331, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v331) == 1) {
    goto LABEL_35;
  }
  v334[11] = v331[12];
  v334[12] = v331[13];
  v334[13] = v331[14];
  uint64_t v335 = v332;
  v334[7] = v331[8];
  v334[8] = v331[9];
  v334[9] = v331[10];
  v334[10] = v331[11];
  v334[3] = v331[4];
  v334[4] = v331[5];
  v334[5] = v331[6];
  v334[6] = v331[7];
  uint64_t v333 = v331[0];
  v334[0] = v331[1];
  v334[1] = v331[2];
  v334[2] = v331[3];
  sub_24D3F0BA0((uint64_t)v334, (uint64_t)&v342, qword_26B19A060);
  sub_24D903F20(&v342);
  sub_24D472A7C((uint64_t)v198);
  sub_24D3F0BA0((uint64_t)&v342, (uint64_t)v353, qword_26B19A060);
  if (!v353[0])
  {
LABEL_35:
    unint64_t v73 = 0;
  }
  else
  {
    sub_24D903F4C(&v342);
    unint64_t v73 = 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v199, v72, v64);
  sub_24D3F0BA0((uint64_t)v199, (uint64_t)v326, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v326) != 1)
  {
    v329[11] = v326[12];
    v329[12] = v326[13];
    v329[13] = v326[14];
    unint64_t v330 = v327;
    v329[7] = v326[8];
    v329[8] = v326[9];
    v329[9] = v326[10];
    v329[10] = v326[11];
    v329[3] = v326[4];
    v329[4] = v326[5];
    v329[5] = v326[6];
    v329[6] = v326[7];
    unint64_t v328 = v326[0];
    v329[0] = v326[1];
    v329[1] = v326[2];
    v329[2] = v326[3];
    sub_24D3F0BA0((uint64_t)v329, (uint64_t)&v343, qword_26B19A060);
    sub_24D903F20(&v343);
    sub_24D472A7C((uint64_t)v199);
    sub_24D3F0BA0((uint64_t)&v343, (uint64_t)&v352, qword_26B19A060);
    if (v352)
    {
      sub_24D903F4C(&v343);
      if (v73) {
        goto LABEL_42;
      }
      goto LABEL_41;
    }
  }
  if (v73) {
LABEL_41:
  }
    v60 |= 0x200000uLL;
LABEL_42:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v200, v189, v190);
  sub_24D3F0BA0((uint64_t)v200, (uint64_t)v321, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v321) == 1) {
    goto LABEL_45;
  }
  v324[11] = v321[12];
  v324[12] = v321[13];
  v324[13] = v321[14];
  unint64_t v325 = v322;
  v324[7] = v321[8];
  v324[8] = v321[9];
  v324[9] = v321[10];
  v324[10] = v321[11];
  v324[3] = v321[4];
  v324[4] = v321[5];
  v324[5] = v321[6];
  v324[6] = v321[7];
  uint64_t v323 = v321[0];
  v324[0] = v321[1];
  v324[1] = v321[2];
  v324[2] = v321[3];
  sub_24D3F0BA0((uint64_t)v324 + 8, (uint64_t)&v344, qword_26B19A060);
  sub_24D903F20(&v344);
  sub_24D472A7C((uint64_t)v200);
  sub_24D3F0BA0((uint64_t)&v344, (uint64_t)&v351, qword_26B19A060);
  if (!v351)
  {
LABEL_45:
    uint64_t v74 = 0;
  }
  else
  {
    sub_24D903F4C(&v344);
    uint64_t v74 = 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v201, v72, v64);
  sub_24D3F0BA0((uint64_t)v201, (uint64_t)v316, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v316) == 1) {
    goto LABEL_50;
  }
  v319[11] = v316[12];
  v319[12] = v316[13];
  v319[13] = v316[14];
  unint64_t v320 = v317;
  v319[7] = v316[8];
  v319[8] = v316[9];
  v319[9] = v316[10];
  v319[10] = v316[11];
  v319[3] = v316[4];
  v319[4] = v316[5];
  v319[5] = v316[6];
  v319[6] = v316[7];
  uint64_t v318 = v316[0];
  v319[0] = v316[1];
  v319[1] = v316[2];
  v319[2] = v316[3];
  sub_24D3F0BA0((uint64_t)v319 + 8, (uint64_t)&v345, qword_26B19A060);
  sub_24D903F20(&v345);
  sub_24D472A7C((uint64_t)v201);
  sub_24D3F0BA0((uint64_t)&v345, (uint64_t)&v350, qword_26B19A060);
  if (!v350)
  {
LABEL_50:
    if ((v74 & 1) == 0) {
      goto LABEL_52;
    }
    goto LABEL_51;
  }
  sub_24D903F4C(&v345);
  if ((v74 & 1) == 0) {
LABEL_51:
  }
    v60 |= 0x400000uLL;
LABEL_52:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v202, v189, v190);
  sub_24D3F0BA0((uint64_t)v202, (uint64_t)v315, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v315) == 1)
  {
    unint64_t v75 = 2;
  }
  else
  {
    unint64_t v76 = v315[32];
    sub_24D472A7C((uint64_t)v202);
    unint64_t v75 = v76 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v203, v72, v64);
  sub_24D3F0BA0((uint64_t)v203, (uint64_t)v314, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v314) != 1)
  {
    uint64_t v77 = v314[32];
    sub_24D472A7C((uint64_t)v203);
    if (v75 != 2 && (v77 & 1) == (v75 != 0)) {
      goto LABEL_61;
    }
    goto LABEL_60;
  }
  if (v75 != 2) {
LABEL_60:
  }
    v60 |= 0x1000000uLL;
LABEL_61:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v204, v189, v190);
  sub_24D3F0BA0((uint64_t)v204, (uint64_t)v313, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v313) == 1)
  {
    uint64_t v78 = 2;
  }
  else
  {
    __int16 v79 = v313[33];
    sub_24D472A7C((uint64_t)v204);
    uint64_t v78 = v79 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v205, v72, v64);
  sub_24D3F0BA0((uint64_t)v205, (uint64_t)v312, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v312) != 1)
  {
    char v80 = v312[33];
    sub_24D472A7C((uint64_t)v205);
    if (v78 != 2 && (v80 & 1) == (v78 != 0)) {
      goto LABEL_70;
    }
    goto LABEL_69;
  }
  if (v78 != 2) {
LABEL_69:
  }
    v60 |= 0x2000000uLL;
LABEL_70:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v206, v189, v190);
  sub_24D3F0BA0((uint64_t)v206, (uint64_t)v311, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v311) == 1)
  {
    char v81 = 2;
  }
  else
  {
    char v82 = v311[34];
    sub_24D472A7C((uint64_t)v206);
    char v81 = v82 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v207, v72, v64);
  sub_24D3F0BA0((uint64_t)v207, (uint64_t)v310, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v310) != 1)
  {
    char v83 = v310[34];
    sub_24D472A7C((uint64_t)v207);
    if (v81 != 2 && (v83 & 1) == (v81 != 0)) {
      goto LABEL_79;
    }
    goto LABEL_78;
  }
  if (v81 != 2) {
LABEL_78:
  }
    v60 |= 0x4000000uLL;
LABEL_79:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v208, v189, v190);
  sub_24D3F0BA0((uint64_t)v208, (uint64_t)v309, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v309) == 1)
  {
    unint64_t v84 = 0;
    unint64_t v85 = 0;
  }
  else
  {
    unint64_t v84 = v309[5];
    unint64_t v85 = v309[6];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v208);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v209, v186, v64);
  sub_24D3F0BA0((uint64_t)v209, (uint64_t)v308, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v308) == 1)
  {
    if (!v85) {
      goto LABEL_94;
    }
    goto LABEL_92;
  }
  long long v86 = v308[5];
  int v87 = v308[6];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v209);
  if (!v85)
  {
    if (!v87)
    {
LABEL_94:
      unint64_t v88 = v185;
      goto LABEL_95;
    }
    goto LABEL_92;
  }
  if (!v87)
  {
LABEL_92:
    swift_bridgeObjectRelease();
    unint64_t v88 = v185;
LABEL_93:
    v60 |= 0x8000000uLL;
    goto LABEL_95;
  }
  if (v84 == v86 && v85 == v87)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v88 = v185;
    goto LABEL_95;
  }
  long long v158 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v88 = v185;
  if ((v158 & 1) == 0) {
    goto LABEL_93;
  }
LABEL_95:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v210, v189, v190);
  sub_24D3F0BA0((uint64_t)v210, (uint64_t)v307, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v307) == 1)
  {
    long long v89 = 0;
    long long v90 = 0;
  }
  else
  {
    long long v89 = v307[7];
    long long v90 = v307[8];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v210);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v211, v186, v88);
  sub_24D3F0BA0((uint64_t)v211, (uint64_t)v306, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v306) == 1)
  {
    if (!v90) {
      goto LABEL_110;
    }
    goto LABEL_108;
  }
  long long v91 = v306[7];
  long long v92 = v306[8];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v211);
  if (!v90)
  {
    if (!v92) {
      goto LABEL_110;
    }
LABEL_108:
    swift_bridgeObjectRelease();
    long long v93 = v185;
LABEL_109:
    v60 |= 0x10000000uLL;
    goto LABEL_111;
  }
  if (!v92) {
    goto LABEL_108;
  }
  if (v89 == v91 && v90 == v92)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_110:
    long long v93 = v185;
    goto LABEL_111;
  }
  char v159 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v93 = v185;
  if ((v159 & 1) == 0) {
    goto LABEL_109;
  }
LABEL_111:
  long long v94 = v186;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v212, v189, v190);
  sub_24D3F0BA0((uint64_t)v212, (uint64_t)v305, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v305) == 1)
  {
    long long v95 = 2;
  }
  else
  {
    long long v96 = v305[72];
    sub_24D472A7C((uint64_t)v212);
    long long v95 = v96 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v213, v94, v93);
  sub_24D3F0BA0((uint64_t)v213, (uint64_t)v304, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v304) != 1)
  {
    long long v97 = v304[72];
    sub_24D472A7C((uint64_t)v213);
    if (v95 != 2 && (v97 & 1) == (v95 != 0)) {
      goto LABEL_120;
    }
    goto LABEL_119;
  }
  if (v95 != 2) {
LABEL_119:
  }
    v60 |= 0x20000000uLL;
LABEL_120:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v214, v189, v190);
  sub_24D3F0BA0((uint64_t)v214, (uint64_t)v303, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v303) == 1)
  {
    long long v98 = 0;
    long long v99 = 0;
  }
  else
  {
    long long v98 = v303[10];
    long long v99 = v303[11];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v214);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v215, v186, v93);
  sub_24D3F0BA0((uint64_t)v215, (uint64_t)v302, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v302) == 1)
  {
    if (!v99) {
      goto LABEL_135;
    }
    goto LABEL_133;
  }
  long long v100 = v302[10];
  long long v101 = v302[11];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v215);
  if (!v99)
  {
    if (!v101) {
      goto LABEL_135;
    }
LABEL_133:
    swift_bridgeObjectRelease();
    long long v102 = v185;
LABEL_134:
    v60 |= 0x40000000uLL;
    goto LABEL_136;
  }
  if (!v101) {
    goto LABEL_133;
  }
  if (v98 == v100 && v99 == v101)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_135:
    long long v102 = v185;
    goto LABEL_136;
  }
  unint64_t v160 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v102 = v185;
  if ((v160 & 1) == 0) {
    goto LABEL_134;
  }
LABEL_136:
  long long v103 = v186;
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v216, v189, v190);
  sub_24D3F0BA0((uint64_t)v216, (uint64_t)v301, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v301) == 1)
  {
    unint64_t v104 = 2;
  }
  else
  {
    unint64_t v105 = v301[104];
    sub_24D472A7C((uint64_t)v216);
    unint64_t v104 = v105 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v217, v103, v102);
  sub_24D3F0BA0((uint64_t)v217, (uint64_t)v300, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v300) != 1)
  {
    long long v106 = v300[104];
    sub_24D472A7C((uint64_t)v217);
    if (v104 != 2 && (v106 & 1) == (v104 != 0)) {
      goto LABEL_145;
    }
    goto LABEL_144;
  }
  if (v104 != 2) {
LABEL_144:
  }
    v60 |= 0x80000000uLL;
LABEL_145:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v218, v189, v190);
  sub_24D3F0BA0((uint64_t)v218, (uint64_t)v299, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v299) == 1)
  {
    long long v107 = 2;
  }
  else
  {
    long long v108 = v299[105];
    sub_24D472A7C((uint64_t)v218);
    long long v107 = v108 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v219, v103, v102);
  sub_24D3F0BA0((uint64_t)v219, (uint64_t)v298, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v298) != 1)
  {
    long long v109 = v298[105];
    sub_24D472A7C((uint64_t)v219);
    if (v107 != 2 && (v109 & 1) == (v107 != 0)) {
      goto LABEL_154;
    }
    goto LABEL_153;
  }
  if (v107 != 2) {
LABEL_153:
  }
    v60 |= 0x100000000uLL;
LABEL_154:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v220, v189, v190);
  sub_24D3F0BA0((uint64_t)v220, (uint64_t)v297, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v297) == 1)
  {
    uint64_t v110 = 0;
    unint64_t v111 = 0;
  }
  else
  {
    uint64_t v110 = v297[14];
    unint64_t v111 = v297[15];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v220);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v221, v186, v102);
  sub_24D3F0BA0((uint64_t)v221, (uint64_t)v296, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v296) == 1)
  {
    if (!v111) {
      goto LABEL_169;
    }
    goto LABEL_167;
  }
  uint64_t v112 = v296[14];
  uint64_t v113 = v296[15];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v221);
  if (!v111)
  {
    if (!v113)
    {
LABEL_169:
      unint64_t v114 = v185;
      goto LABEL_170;
    }
    goto LABEL_167;
  }
  if (!v113)
  {
LABEL_167:
    swift_bridgeObjectRelease();
    unint64_t v114 = v185;
LABEL_168:
    v60 |= 0x200000000uLL;
    goto LABEL_170;
  }
  if (v110 == v112 && v111 == v113)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v114 = v185;
    goto LABEL_170;
  }
  unint64_t v161 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v114 = v185;
  if ((v161 & 1) == 0) {
    goto LABEL_168;
  }
LABEL_170:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v222, v189, v190);
  sub_24D3F0BA0((uint64_t)v222, (uint64_t)v295, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v295) == 1)
  {
    uint64_t v115 = 0;
    uint64_t v116 = 0;
  }
  else
  {
    uint64_t v115 = v295[16];
    uint64_t v116 = v295[17];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v222);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v223, v186, v114);
  sub_24D3F0BA0((uint64_t)v223, (uint64_t)v294, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v294) == 1)
  {
    if (!v116) {
      goto LABEL_185;
    }
    goto LABEL_183;
  }
  unint64_t v117 = v294[16];
  uint64_t v118 = v294[17];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v223);
  if (!v116)
  {
    if (!v118)
    {
LABEL_185:
      uint64_t v119 = v185;
      goto LABEL_186;
    }
    goto LABEL_183;
  }
  if (!v118)
  {
LABEL_183:
    swift_bridgeObjectRelease();
    uint64_t v119 = v185;
LABEL_184:
    v60 |= 0x400000000uLL;
    goto LABEL_186;
  }
  if (v115 == v117 && v116 == v118)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v119 = v185;
    goto LABEL_186;
  }
  uint64_t v162 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v119 = v185;
  if ((v162 & 1) == 0) {
    goto LABEL_184;
  }
LABEL_186:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v224, v189, v190);
  sub_24D3F0BA0((uint64_t)v224, (uint64_t)v293, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v293) == 1)
  {
    uint64_t v120 = 0;
    uint64_t v121 = 0;
  }
  else
  {
    uint64_t v120 = v293[18];
    uint64_t v121 = v293[19];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v224);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v225, v186, v119);
  sub_24D3F0BA0((uint64_t)v225, (uint64_t)v292, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v292) == 1)
  {
    if (!v121) {
      goto LABEL_201;
    }
    goto LABEL_199;
  }
  id v122 = v292[18];
  uint64_t v123 = v292[19];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v225);
  if (!v121)
  {
    if (!v123)
    {
LABEL_201:
      uint64_t v124 = v185;
      goto LABEL_202;
    }
    goto LABEL_199;
  }
  if (!v123)
  {
LABEL_199:
    swift_bridgeObjectRelease();
    uint64_t v124 = v185;
LABEL_200:
    v60 |= 0x800000000uLL;
    goto LABEL_202;
  }
  if (v120 == v122 && v121 == v123)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v124 = v185;
    goto LABEL_202;
  }
  long long v163 = sub_24DCCAE28();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v124 = v185;
  if ((v163 & 1) == 0) {
    goto LABEL_200;
  }
LABEL_202:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v226, v189, v190);
  sub_24D3F0BA0((uint64_t)v226, (uint64_t)v291, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v291) == 1)
  {
    unint64_t v125 = 0;
    long long v126 = 0;
  }
  else
  {
    unint64_t v125 = v291[20];
    long long v126 = v291[21];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v226);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v227, v186, v124);
  sub_24D3F0BA0((uint64_t)v227, (uint64_t)v290, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v290) == 1)
  {
    if (!v126) {
      goto LABEL_213;
    }
    goto LABEL_214;
  }
  unint64_t v127 = v290[20];
  unint64_t v128 = v290[21];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v227);
  if (v126)
  {
    if (!v128)
    {
LABEL_214:
      uint64_t v133 = v186;
LABEL_216:
      swift_bridgeObjectRelease();
      uint64_t v134 = v185;
LABEL_217:
      v60 |= 0x1000000000uLL;
      goto LABEL_218;
    }
    swift_bridgeObjectRetain();
    long long v129 = sub_24D4E3F38(v125, v126);
    unint64_t v131 = v130;
    if (v129 == sub_24D4E3F38(v127, v128) && v131 == v132)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
LABEL_213:
      uint64_t v134 = v185;
      uint64_t v133 = v186;
      goto LABEL_218;
    }
    unint64_t v164 = sub_24DCCAE28();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v134 = v185;
    uint64_t v133 = v186;
    if ((v164 & 1) == 0) {
      goto LABEL_217;
    }
  }
  else
  {
    uint64_t v133 = v186;
    if (v128) {
      goto LABEL_216;
    }
    uint64_t v134 = v185;
  }
LABEL_218:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v228, v189, v190);
  sub_24D3F0BA0((uint64_t)v228, (uint64_t)v289, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v289) == 1)
  {
    unint64_t v135 = 2;
  }
  else
  {
    uint64_t v136 = v289[176];
    sub_24D472A7C((uint64_t)v228);
    unint64_t v135 = v136 & 1;
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v229, v133, v134);
  sub_24D3F0BA0((uint64_t)v229, (uint64_t)v288, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v288) != 1)
  {
    unint64_t v137 = v288[176];
    sub_24D472A7C((uint64_t)v229);
    if (v135 != 2 && (v137 & 1) == (v135 != 0)) {
      goto LABEL_227;
    }
    goto LABEL_226;
  }
  if (v135 != 2) {
LABEL_226:
  }
    v60 |= 0x2000000000uLL;
LABEL_227:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v230, v189, v190);
  sub_24D3F0BA0((uint64_t)v230, (uint64_t)v287, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v287) == 1)
  {
    unint64_t v138 = 0;
  }
  else
  {
    unint64_t v138 = (void *)v287[23];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v230);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v231, v133, v134);
  sub_24D3F0BA0((uint64_t)v231, (uint64_t)v286, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v286) == 1)
  {
    if (!v138) {
      goto LABEL_241;
    }
    goto LABEL_239;
  }
  long long v139 = (void *)v286[23];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v231);
  if (!v138)
  {
    if (!v139) {
      goto LABEL_241;
    }
    goto LABEL_239;
  }
  if (!v139)
  {
LABEL_239:
    swift_bridgeObjectRelease();
    goto LABEL_240;
  }
  uint64_t v140 = sub_24D984024(v138, v139);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v140 & 1) == 0) {
LABEL_240:
  }
    v60 |= 0x4000000000uLL;
LABEL_241:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v232, v189, v190);
  sub_24D3F0BA0((uint64_t)v232, (uint64_t)v283, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v283) == 1)
  {
    uint64_t v141 = 0;
    uint64_t v142 = 0;
  }
  else
  {
    uint64_t v141 = v284;
    uint64_t v142 = v285;
    sub_24D40110C((uint64_t)v284);
    sub_24D472A7C((uint64_t)v232);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v233, v186, v134);
  sub_24D3F0BA0((uint64_t)v233, (uint64_t)v280, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v280) == 1)
  {
    if (!v141) {
      goto LABEL_258;
    }
LABEL_252:
    swift_bridgeObjectRelease();
LABEL_253:
    swift_bridgeObjectRelease();
LABEL_254:
    long long v145 = v185;
    goto LABEL_255;
  }
  uint64_t v143 = v281;
  int v144 = v282;
  sub_24D40110C((uint64_t)v281);
  sub_24D472A7C((uint64_t)v233);
  if (!v141)
  {
    if (!v143)
    {
LABEL_258:
      long long v145 = v185;
      goto LABEL_259;
    }
    sub_24D401324((uint64_t)v143);
    goto LABEL_254;
  }
  if (!v143) {
    goto LABEL_252;
  }
  if ((sub_24D984024(v141, v143) & 1) == 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D401324((uint64_t)v141);
    swift_bridgeObjectRelease();
    goto LABEL_253;
  }
  LODWORD(v184) = sub_24D984024(v142, v144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_24D401324((uint64_t)v141);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v145 = v185;
  if ((v184 & 1) == 0) {
LABEL_255:
  }
    v60 |= 0x8000000000uLL;
LABEL_259:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v234, v189, v190);
  sub_24D3F0BA0((uint64_t)v234, (uint64_t)v279, &qword_26B197970);
  unint64_t v146 = sub_24D3F0D40((uint64_t)v279);
  if (v146 == 1)
  {
    unint64_t v147 = 0;
  }
  else
  {
    unint64_t v147 = v279[26];
    sub_24D472A7C((uint64_t)v234);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v235, v186, v145);
  sub_24D3F0BA0((uint64_t)v235, (uint64_t)v278, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v278) == 1)
  {
    if (v146 == 1) {
      goto LABEL_268;
    }
    goto LABEL_267;
  }
  long long v148 = v278[26];
  sub_24D472A7C((uint64_t)v235);
  if (v146 == 1 || !sub_24D5EFCA4(v147, v148)) {
LABEL_267:
  }
    v60 |= 0x2000000000000uLL;
LABEL_268:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v236, v189, v190);
  sub_24D3F0BA0((uint64_t)v236, (uint64_t)v260, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v260) == 1) {
    goto LABEL_271;
  }
  unint64_t v274 = v260[12];
  unint64_t v275 = v260[13];
  long long v276 = v260[14];
  long long v277 = v261;
  unint64_t v270 = v260[8];
  unint64_t v271 = v260[9];
  uint64_t v272 = v260[10];
  unint64_t v273 = v260[11];
  unint64_t v266 = v260[4];
  uint64_t v267 = v260[5];
  unint64_t v268 = v260[6];
  unint64_t v269 = v260[7];
  size_t v262 = v260[0];
  unint64_t v263 = v260[1];
  unint64_t v264 = v260[2];
  uint64_t v265 = v260[3];
  sub_24D3F0BA0((uint64_t)&v276, (uint64_t)v346, &qword_26B19A008);
  sub_24D4C6AE4((uint64_t)v346);
  sub_24D472A7C((uint64_t)v236);
  sub_24D3F0BA0((uint64_t)v346, (uint64_t)&v349, &qword_26B19A008);
  if (!v349)
  {
LABEL_271:
    unint64_t v149 = 0;
  }
  else
  {
    unint64_t v149 = sub_24D98BB34(v349);
    sub_24D4C6A78((uint64_t)v346);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v237, v186, v145);
  sub_24D3F0BA0((uint64_t)v237, (uint64_t)v242, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v242) == 1) {
    goto LABEL_277;
  }
  unint64_t v256 = v242[12];
  unint64_t v257 = v242[13];
  unint64_t v258 = v242[14];
  unint64_t v259 = v243;
  unint64_t v252 = v242[8];
  unint64_t v253 = v242[9];
  unint64_t v254 = v242[10];
  long long v255 = v242[11];
  unint64_t v248 = v242[4];
  unint64_t v249 = v242[5];
  long long v250 = v242[6];
  unint64_t v251 = v242[7];
  unint64_t v244 = v242[0];
  unint64_t v245 = v242[1];
  uint64_t v246 = v242[2];
  int v247 = v242[3];
  sub_24D3F0BA0((uint64_t)&v258, (uint64_t)v347, &qword_26B19A008);
  sub_24D4C6AE4((uint64_t)v347);
  sub_24D472A7C((uint64_t)v237);
  sub_24D3F0BA0((uint64_t)v347, (uint64_t)&v348, &qword_26B19A008);
  if (!v348)
  {
LABEL_277:
    unint64_t v150 = 0;
    if (!v149)
    {
LABEL_275:
      if (!v150) {
        goto LABEL_283;
      }
      goto LABEL_281;
    }
  }
  else
  {
    unint64_t v150 = sub_24D98BB34(v348);
    sub_24D4C6A78((uint64_t)v347);
    if (!v149) {
      goto LABEL_275;
    }
  }
  if (!v150)
  {
LABEL_281:
    swift_bridgeObjectRelease();
    goto LABEL_282;
  }
  unint64_t v151 = swift_bridgeObjectRetain();
  unint64_t v152 = sub_24D984948(v151, v150);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  if ((v152 & 1) == 0) {
LABEL_282:
  }
    v60 |= 0x4000000000000uLL;
LABEL_283:
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v61)(v238, v189, v190);
  sub_24D3F0BA0((uint64_t)v238, (uint64_t)v241, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v241) == 1)
  {
    unint64_t v153 = 0;
    long long v154 = 0;
  }
  else
  {
    unint64_t v153 = v241[29];
    long long v154 = v241[30];
    swift_bridgeObjectRetain();
    sub_24D472A7C((uint64_t)v238);
  }
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v188)(v239, v186, v145);
  sub_24D3F0BA0((uint64_t)v239, (uint64_t)v240, &qword_26B197970);
  if (sub_24D3F0D40((uint64_t)v240) == 1)
  {
    if (!v154) {
      return v60;
    }
    goto LABEL_296;
  }
  unint64_t v155 = v240[29];
  unint64_t v156 = v240[30];
  swift_bridgeObjectRetain();
  sub_24D472A7C((uint64_t)v239);
  if (!v154)
  {
    if (!v156) {
      return v60;
    }
LABEL_296:
    swift_bridgeObjectRelease();
    return v60 | 0x8000000000000;
  }
  if (!v156) {
    goto LABEL_296;
  }
  if (v153 != v155 || v154 != v156)
  {
    unint64_t v165 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v165) {
      return v60;
    }
    return v60 | 0x8000000000000;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v60;
}

uint64_t type metadata accessor for TrackingContinuation()
{
  return self;
}

uint64_t *initializeBufferWithCopyOfBuffer for Syncability(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24D5203A8(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for Syncability(uint64_t a1)
{
  return sub_24D466534(*(void *)a1, *(void *)(a1 + 8));
}

uint64_t *assignWithCopy for Syncability(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  unint64_t v4 = a2[1];
  sub_24D5203A8(*a2, v4);
  uint64_t v5 = *a1;
  unint64_t v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_24D466534(v5, v6);
  return a1;
}

uint64_t *assignWithTake for Syncability(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_24D466534(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for Syncability(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = *(_DWORD *)(a1 + 4);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for Syncability(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (unint64_t)-a2 << 32;
      *(void *)(result + 8) = 0;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_24D98EE58(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 8) >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_24D98EE74(uint64_t result)
{
  *(void *)(result + 8) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void *sub_24D98EE84(void *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = result[1] & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
    *unint64_t result = *(unsigned int *)result;
    result[1] = v2;
  }
  else
  {
    *unint64_t result = (a2 - 2);
    result[1] = 0x8000000000000000;
  }
  return result;
}

ValueMetadata *type metadata accessor for Syncability()
{
  return &type metadata for Syncability;
}

void sub_24D98EEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
  uint64_t v11 = (void *)sub_24DCC9C18();
  if (a5) {
    uint64_t v12 = sub_24DCC8818();
  }
  else {
    uint64_t v12 = 0;
  }
  id v13 = (id)v12;
  (*(void (**)(uint64_t, void *, uint64_t, uint64_t, uint64_t))(a6 + 16))(a6, v11, a2, a3, a4);
}

void sub_24D98EF90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (a1)
  {
    sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
    uint64_t v5 = (void *)sub_24DCC9C18();
  }
  if (a2) {
    uint64_t v6 = sub_24DCC8818();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

void sub_24D98F03C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
  uint64_t v12 = (void *)sub_24DCC9C18();
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
  id v13 = (void *)sub_24DCC9C18();
  if (a6) {
    uint64_t v14 = sub_24DCC8818();
  }
  else {
    uint64_t v14 = 0;
  }
  id v15 = (id)v14;
  (*(void (**)(uint64_t, void *, void *, void, uint64_t, uint64_t))(a7 + 16))(a7, v12, v13, a3 & 1, a4, a5);
}

uint64_t sub_24D98F140(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

void sub_24D98F14C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, void *a6)
{
  uint64_t v10 = *(void (**)(uint64_t, void *, void *, void *, void *))(a1 + 32);
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
  uint64_t v11 = sub_24DCC9C28();
  swift_retain();
  id v15 = a3;
  id v12 = a4;
  id v13 = a5;
  id v14 = a6;
  v10(v11, a3, a4, a5, a6);
  swift_release();
  swift_bridgeObjectRelease();
}

void sub_24D98F248(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void sub_24D98F2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6, void *a7)
{
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, void *, void *, void *))(a1 + 32);
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
  uint64_t v12 = sub_24DCC9C28();
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
  uint64_t v13 = sub_24DCC9C28();
  swift_retain();
  id v16 = a5;
  id v14 = a6;
  id v15 = a7;
  v11(v12, v13, a4, a5, a6, a7);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
}

id sub_24D98F3FC()
{
  sub_24D98F5CC();
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FPFSSearchEnumerator();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24D98F578()
{
  return type metadata accessor for FPFSSearchEnumerator();
}

uint64_t type metadata accessor for FPFSSearchEnumerator()
{
  uint64_t result = qword_26986FEA8;
  if (!qword_26986FEA8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_24D98F5CC()
{
  uint64_t v1 = v0;
  if ((sub_24DBA2990(v1, (unsigned __int8 *)v1) & 1) == 0)
  {
    objc_super v2 = *(void (**)(uint64_t))&v1[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_keepAlive];
    if (v2)
    {
      uint64_t v3 = swift_retain();
      v2(v3);
      sub_24D43DD74((uint64_t)v2);
    }
    objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator], sel_invalidate);
    unint64_t v4 = &v1[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_backend];
    uint64_t v5 = MEMORY[0x25332B1A0](&v1[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_backend]);
    if (v5)
    {
      id v6 = (void *)v5;
      id v7 = (void *)MEMORY[0x25332B1A0](v5 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);

      if (v7)
      {
        id v8 = objc_msgSend(v7, sel_session);

        objc_msgSend(v8, sel_asyncUnregisterLifetimeExtensionForObject_, *(void *)&v1[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_lifetimeExtender]);
        swift_unknownObjectRelease();
      }
    }
    uint64_t v9 = MEMORY[0x25332B1A0](v4);
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      uint64_t v11 = (void *)MEMORY[0x25332B1A0](v9 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
      if (v11)
      {
        uint64_t v12 = v11;
        id v15 = objc_msgSend(v11, sel_log);
      }
      else
      {
        id v15 = 0;
      }
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v10;
      *(void *)(v13 + 24) = v1;
      id v14 = v10;
      sub_24D3E29E4(v15, (uint64_t)"enumeratorHasBeenInvalidated(_:)", 32, 2, (uint64_t)sub_24D4C5CEC, v13);

      swift_release();
    }
  }
}

uint64_t sub_24D98F87C(unint64_t a1, void *a2, void *a3, uint64_t a4, id a5, int a6, void *a7, void *a8, uint64_t (*a9)(unint64_t, void *, void *, uint64_t, id), uint64_t a10)
{
  id v14 = a3;
  unint64_t v15 = a1;
  id v16 = a9;
  if (a5)
  {
    id v17 = a5;
    id v18 = a7;
    id v19 = a8;
    id v20 = a5;
    id v21 = v18;
    id v22 = v19;
    id v23 = a5;
    uint64_t v24 = sub_24DCC9068();
    os_log_type_t v25 = sub_24DCCA128();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v65 = a4;
      uint64_t v26 = swift_slowAlloc();
      log = v24;
      uint64_t v27 = (void *)swift_slowAlloc();
      uint64_t v64 = swift_slowAlloc();
      uint64_t v72 = v64;
      *(_DWORD *)uint64_t v26 = 138412802;
      id v28 = v21;
      sub_24DCCA428();
      void *v27 = v21;

      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v29 = sub_24DA80EC4();
      sub_24D418FB4(v29, v30, &v72);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 22) = 2112;
      swift_getErrorValue();
      id v71 = sub_24DBA2828(v70);
      sub_24DCCA428();
      v27[1] = v71;

      _os_log_impl(&dword_24D3D0000, log, v25, "📖  %@: enumerating page %s failed: %@", (uint8_t *)v26, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v27, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v64, -1, -1);
      uint64_t v31 = v26;
      a4 = v65;
      MEMORY[0x25332B030](v31, -1, -1);
    }
    else
    {
    }
    unint64_t v15 = a1;
    id v14 = a3;
    uint64_t v32 = a2;
    id v33 = a5;
  }
  else
  {
    id v35 = a3;
    id v36 = a7;
    id v37 = a8;
    swift_bridgeObjectRetain_n();
    id v38 = a2;
    id v39 = v35;
    id v40 = v36;
    id v41 = v37;
    id v42 = v38;
    uint64_t v43 = sub_24DCC9068();
    os_log_type_t v44 = sub_24DCCA118();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v60 = v39;
      type = v43;
      uint64_t v66 = a4;
      uint64_t v45 = swift_slowAlloc();
      long long v46 = (void *)swift_slowAlloc();
      uint64_t v61 = swift_slowAlloc();
      uint64_t v72 = v61;
      *(_DWORD *)uint64_t v45 = 138413314;
      id v47 = v40;
      sub_24DCCA428();
      *long long v46 = v40;

      *(_WORD *)(v45 + 12) = 2080;
      uint64_t v48 = sub_24DA80EC4();
      sub_24D418FB4(v48, v49, &v72);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 22) = 2048;
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24DCCA9C8();
        swift_bridgeObjectRelease();
      }
      uint64_t v50 = 0x3E6C696E3CLL;
      swift_bridgeObjectRelease();
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 32) = 2080;
      if (a2)
      {
        uint64_t v51 = sub_24DA80EC4();
        unint64_t v53 = v52;
      }
      else
      {
        unint64_t v53 = 0xE500000000000000;
        uint64_t v51 = 0x3E6C696E3CLL;
      }
      sub_24D418FB4(v51, v53, &v72);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      *(_WORD *)(v45 + 42) = 2080;
      if (v14)
      {
        uint64_t v54 = sub_24DCC8B68();
        unint64_t v56 = v55;
        uint64_t v50 = sub_24DCC8AA8();
        unint64_t v58 = v57;
        sub_24D400DCC(v54, v56);
      }
      else
      {
        unint64_t v58 = 0xE500000000000000;
      }
      uint64_t v32 = a2;
      sub_24D418FB4(v50, v58, &v72);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, type, v44, "📖  %@: enumerating page %s done: %ld items next %s anchor:%s", (uint8_t *)v45, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v46, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v61, -1, -1);
      MEMORY[0x25332B030](v45, -1, -1);

      id v16 = a9;
      a4 = v66;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      uint64_t v32 = a2;
      id v16 = a9;
    }
    id v33 = 0;
  }
  return v16(v15, v32, v14, a4, v33);
}

uint64_t sub_24D98FF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  return a7(a1, a2, a3, a4, a5);
}

uint64_t sub_24D990288(uint64_t a1)
{
  uint64_t v3 = (void *)MEMORY[0x25332B1A0](v1 + OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_backend);
  if (v3)
  {
    unint64_t v4 = v3;
    if (objc_sync_enter(v4)) {
      sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v4);
    }
    uint64_t v5 = *(char **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs];
    swift_retain();
    if (objc_sync_exit(v4)) {
      sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v4);
    }

    if (v5)
    {

LABEL_7:
      MEMORY[0x270FA5388](v7);
      id v14 = v5;
      uint64_t v15 = a1;
      swift_retain();
      sub_24DB3FB00((uint64_t)"decorateItems(items:)", 21, 2, (uint64_t)sub_24D991258, (uint64_t)&v13, v8);
      swift_release();
      return swift_release();
    }
    MEMORY[0x270FA5388](v6);
    id v14 = v4;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B192AD8);
    sub_24DCCA208();

    uint64_t v5 = v17;
    if (v17) {
      goto LABEL_7;
    }
  }
  uint64_t v10 = sub_24DCC9068();
  os_log_type_t v11 = sub_24DCCA128();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl(&dword_24D3D0000, v10, v11, "backend or FPFS is invalidated, returning error", v12, 2u);
    MEMORY[0x25332B030](v12, -1, -1);
  }

  type metadata accessor for NSFileProviderError(0);
  uint64_t v16 = -1002;
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24D993778(&qword_26B193F20, type metadata accessor for NSFileProviderError);
  sub_24DCC8808();
  return swift_willThrow();
}

uint64_t sub_24D990560(unint64_t a1, unint64_t a2, char a3, void *a4, uint64_t a5, id a6, int a7, void *a8, uint64_t a9, unint64_t a10, uint64_t (*a11)(unint64_t, unint64_t, void, void *, uint64_t, id), uint64_t a12)
{
  id v13 = a6;
  unint64_t v15 = a2;
  id v17 = a11;
  if (a6)
  {
    id v18 = a6;
    id v19 = a8;
    sub_24D3F9C18(a9, a10);
    id v20 = v13;
    id v21 = v19;
    sub_24D3F9C18(a9, a10);
    id v22 = v13;
    id v23 = sub_24DCC9068();
    os_log_type_t v24 = sub_24DCCA128();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v59 = swift_slowAlloc();
      v70[0] = v59;
      *(_DWORD *)uint64_t v25 = 138412802;
      loga = v23;
      uint64_t v61 = v13;
      id v27 = v21;
      sub_24DCCA428();
      *uint64_t v26 = v21;

      *(_WORD *)(v25 + 12) = 2080;
      sub_24D3F9C18(a9, a10);
      uint64_t v28 = sub_24DCC8AA8();
      unint64_t v30 = v29;
      sub_24D400DCC(a9, a10);
      sub_24D418FB4(v28, v30, v70);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D400DCC(a9, a10);
      sub_24D400DCC(a9, a10);
      *(_WORD *)(v25 + 22) = 2112;
      swift_getErrorValue();
      id v69 = sub_24DBA2828(v68);
      sub_24DCCA428();
      v26[1] = v69;

      _os_log_impl(&dword_24D3D0000, loga, v24, "📖  %@: enumerating from change %s failed: %@", (uint8_t *)v25, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v26, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v59, -1, -1);
      MEMORY[0x25332B030](v25, -1, -1);

      return a11(a1, a2, a3 & 1, a4, a5, v61);
    }

    sub_24D400DCC(a9, a10);
    sub_24D400DCC(a9, a10);

    unint64_t v52 = a1;
    id v17 = a11;
    unint64_t v15 = a2;
    char v43 = a3;
    unint64_t v53 = a4;
  }
  else
  {
    id v32 = a8;
    sub_24D3F9C18(a9, a10);
    id v33 = a4;
    id v34 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24D3F9C18(a9, a10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v35 = v33;
    id v36 = sub_24DCC9068();
    os_log_type_t v60 = sub_24DCCA118();
    if (os_log_type_enabled(v36, v60))
    {
      unint64_t v56 = v36;
      os_log_t log = v35;
      uint64_t v65 = a4;
      uint64_t v37 = swift_slowAlloc();
      id v38 = (void *)swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      v70[0] = v55;
      *(_DWORD *)uint64_t v37 = 138413570;
      id v39 = v34;
      sub_24DCCA428();
      *id v38 = v34;

      *(_WORD *)(v37 + 12) = 2080;
      sub_24D3F9C18(a9, a10);
      uint64_t v40 = sub_24DCC8AA8();
      unint64_t v42 = v41;
      sub_24D400DCC(a9, a10);
      sub_24D418FB4(v40, v42, v70);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D400DCC(a9, a10);
      sub_24D400DCC(a9, a10);
      *(_WORD *)(v37 + 22) = 2048;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24DCCA9C8();
        swift_bridgeObjectRelease();
      }
      char v43 = a3;
      swift_bridgeObjectRelease();
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 32) = 2048;
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24DCCA9C8();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 42) = 2080;
      if (a3) {
        uint64_t v44 = 0x6F6D20736168202CLL;
      }
      else {
        uint64_t v44 = 0;
      }
      if (a3) {
        unint64_t v45 = 0xEA00000000006572;
      }
      else {
        unint64_t v45 = 0xE000000000000000;
      }
      sub_24D418FB4(v44, v45, v70);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 52) = 2080;
      if (v65)
      {
        uint64_t v46 = sub_24DCC8B68();
        unint64_t v48 = v47;
        uint64_t v49 = sub_24DCC8AA8();
        unint64_t v51 = v50;
        sub_24D400DCC(v46, v48);
      }
      else
      {
        unint64_t v51 = 0xE500000000000000;
        uint64_t v49 = 0x3E6C696E3CLL;
      }
      id v17 = a11;
      sub_24D418FB4(v49, v51, v70);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v56, v60, "📖  %@: enumerating from change %s done: %ld updated, %ld deleted%s, next anchor:%s", (uint8_t *)v37, 0x3Eu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v38, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v55, -1, -1);
      MEMORY[0x25332B030](v37, -1, -1);

      id v13 = 0;
      uint64_t v54 = a5;
      unint64_t v53 = v65;
      unint64_t v52 = a1;
      return v17(v52, v15, v43 & 1, v53, v54, v13);
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D400DCC(a9, a10);
    sub_24D400DCC(a9, a10);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    char v43 = a3;
    unint64_t v52 = a1;
    unint64_t v53 = a4;
  }
  uint64_t v54 = a5;
  return v17(v52, v15, v43 & 1, v53, v54, v13);
}

uint64_t sub_24D990D3C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t (*a8)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))
{
  return a8(a1, a2, a3 & 1, a4, a5, a6);
}

unint64_t sub_24D990FE4()
{
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_lifetimeExtender), sel_requestEffectivePID);
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0xD00000000000001ELL;
}

uint64_t sub_24D9910D0()
{
  uint64_t result = sub_24DCC9078();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24D9911A0()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_24D9911B0()
{
  uint64_t v0 = sub_24DCC97E8();
  uint64_t v2 = v1;
  if (v0 == sub_24DCC97E8() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_24DCCAE28();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_24D99123C@<X0>(void *a1@<X8>)
{
  return sub_24D609838(*(void *)(v1 + 16), a1);
}

uint64_t sub_24D991258()
{
  return sub_24D3DD900(*(void *)(v0 + 24), 0);
}

double sub_24D991284(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 416) = 0u;
  *(_OWORD *)(a1 + 432) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 448) = 1;
  *(_OWORD *)(a1 + 456) = 0u;
  *(_OWORD *)(a1 + 472) = 0u;
  *(_OWORD *)(a1 + 488) = 0u;
  *(_OWORD *)(a1 + 504) = 0u;
  *(_OWORD *)(a1 + 520) = 0u;
  *(_OWORD *)(a1 + 536) = 0u;
  *(_OWORD *)(a1 + 552) = 0u;
  *(_OWORD *)(a1 + 568) = 0u;
  *(_OWORD *)(a1 + 584) = 0u;
  *(_OWORD *)(a1 + 600) = 0u;
  *(_OWORD *)(a1 + 616) = 0u;
  *(_OWORD *)(a1 + 632) = 0u;
  *(_OWORD *)(a1 + 648) = 0u;
  *(_OWORD *)(a1 + 664) = 0u;
  *(_OWORD *)(a1 + 680) = 0u;
  *(_OWORD *)(a1 + 696) = 0u;
  *(_OWORD *)(a1 + 712) = 0u;
  *(_OWORD *)(a1 + 728) = 0u;
  *(_OWORD *)(a1 + 744) = 0u;
  *(_OWORD *)(a1 + 760) = 0u;
  *(_OWORD *)(a1 + 776) = 0u;
  *(_OWORD *)(a1 + 792) = 0u;
  *(_OWORD *)(a1 + 808) = 0u;
  *(_OWORD *)(a1 + 824) = 0u;
  *(void *)(a1 + 840) = 0;
  return result;
}

uint64_t sub_24D991304()
{
  return swift_deallocObject();
}

uint64_t sub_24D99133C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_24D991374()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

id sub_24D991384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v25 = a5;
  uint64_t v10 = sub_24DCC9078();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  id v14 = &v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_keepAlive];
  void *v14 = 0;
  v14[1] = 0;
  v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated] = 0;
  uint64_t v15 = OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_changedItemsByID;
  *(void *)&v5[v15] = sub_24D42FC68(MEMORY[0x263F8EE78]);
  *(void *)&v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_deletedItemsIDs] = MEMORY[0x263F8EE88];
  swift_unknownObjectWeakAssign();
  *(void *)&v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator] = a4;
  uint64_t v16 = (void *)MEMORY[0x25332B1A0](a3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  id v17 = v5;
  swift_unknownObjectRetain();
  if (!v16 || (id v18 = objc_msgSend(v16, sel_log), v16, !v18)) {
    id v19 = (id)fp_default_log();
  }
  sub_24DCC9088();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v17[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_logger], v13, v10);
  *(void *)&v17[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_observer] = a2;
  *(void *)&v17[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_lifetimeExtender] = a1;
  id v20 = v25;
  *(void *)&v17[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_searchIdentifier] = v25;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  id v21 = v20;

  id v22 = (objc_class *)type metadata accessor for FPFSSearchEnumerator();
  v26.receiver = v17;
  v26.super_class = v22;
  return objc_msgSendSuper2(&v26, sel_init);
}

void sub_24D9915B8(void *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a2;
  _Block_copy(a2);
  char v5 = a1;
  if (objc_sync_enter(v5)) {
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v5);
  }
  char v6 = v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  if (objc_sync_exit(v5)) {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v5);
  }

  if ((v6 & 1) != 0 || (uint64_t v7 = MEMORY[0x25332B1A0](&v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_backend])) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    void aBlock[6] = (id)-1002;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D993778(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    uint64_t v12 = (void *)sub_24DCC8818();
    ((void (**)(void, void, void *))a2)[2](a2, 0, v12);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)v7;
    uint64_t v9 = *(void **)&v5[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator];
    uint64_t v10 = (void *)swift_allocObject();
    void v10[2] = sub_24D4C7228;
    v10[3] = v4;
    aBlock[4] = sub_24D993A00;
    aBlock[5] = v10;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_24D98F248;
    aBlock[3] = &block_descriptor_62_0;
    uint64_t v11 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v9, sel_currentSyncAnchorWithCompletion_, v11);
    _Block_release(v11);
    swift_release();

    swift_unknownObjectRelease();
  }
}

void sub_24D991830(unint64_t a1, void *a2, void *a3, uint64_t a4, id a5, int a6, void *a7, void *a8, uint64_t a9)
{
  id v13 = a3;
  uint64_t v16 = a9;
  if (a5)
  {
    id v17 = a5;
    id v18 = a5;
    id v19 = a7;
    id v20 = a8;
    id v21 = a5;
    id v22 = v19;
    id v23 = v20;
    uint64_t v24 = sub_24DCC9068();
    os_log_type_t v25 = sub_24DCCA128();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v67 = a2;
      uint64_t v26 = swift_slowAlloc();
      id v69 = v13;
      id v27 = (void *)swift_slowAlloc();
      uint64_t v66 = swift_slowAlloc();
      uint64_t v73 = v66;
      *(_DWORD *)uint64_t v26 = 138412802;
      os_log_t log = v24;
      id v28 = v22;
      sub_24DCCA428();
      void *v27 = v22;

      *(_WORD *)(v26 + 12) = 2080;
      uint64_t v29 = sub_24DA80EC4();
      sub_24D418FB4(v29, v30, &v73);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 22) = 2112;
      swift_getErrorValue();
      id v72 = sub_24DBA2828(v71);
      sub_24DCCA428();
      v27[1] = v72;

      _os_log_impl(&dword_24D3D0000, log, v25, "📖  %@: enumerating page %s failed: %@", (uint8_t *)v26, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      uint64_t v31 = v27;
      id v13 = v69;
      MEMORY[0x25332B030](v31, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v66, -1, -1);
      uint64_t v32 = v26;
      a2 = v67;
      MEMORY[0x25332B030](v32, -1, -1);
    }
    else
    {
    }
  }
  else
  {
    id v33 = a3;
    id v34 = a7;
    id v35 = a8;
    swift_bridgeObjectRetain_n();
    id v36 = a2;
    id v37 = v33;
    id v38 = v34;
    id v39 = v35;
    id v40 = v36;
    unint64_t v41 = sub_24DCC9068();
    os_log_type_t v42 = sub_24DCCA118();
    if (os_log_type_enabled(v41, v42))
    {
      os_log_type_t v60 = v40;
      os_log_type_t v62 = v42;
      type = v41;
      uint64_t v68 = a2;
      uint64_t v43 = swift_slowAlloc();
      uint64_t v44 = (void *)swift_slowAlloc();
      uint64_t v63 = swift_slowAlloc();
      uint64_t v73 = v63;
      *(_DWORD *)uint64_t v43 = 138413314;
      id v45 = v38;
      sub_24DCCA428();
      uint64_t v61 = v44;
      *uint64_t v44 = v38;

      *(_WORD *)(v43 + 12) = 2080;
      uint64_t v46 = sub_24DA80EC4();
      sub_24D418FB4(v46, v47, &v73);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 22) = 2048;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24DCCA9C8();
        swift_bridgeObjectRelease();
      }
      uint64_t v48 = 0x3E6C696E3CLL;
      swift_bridgeObjectRelease();
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 32) = 2080;
      if (v68)
      {
        uint64_t v49 = sub_24DA80EC4();
        unint64_t v51 = v50;
      }
      else
      {
        unint64_t v51 = 0xE500000000000000;
        uint64_t v49 = 0x3E6C696E3CLL;
      }
      sub_24D418FB4(v49, v51, &v73);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 42) = 2080;
      id v13 = a3;
      if (a3)
      {
        uint64_t v52 = sub_24DCC8B68();
        unint64_t v54 = v53;
        uint64_t v48 = sub_24DCC8AA8();
        unint64_t v56 = v55;
        unint64_t v57 = v54;
        id v13 = a3;
        sub_24D400DCC(v52, v57);
      }
      else
      {
        unint64_t v56 = 0xE500000000000000;
      }
      sub_24D418FB4(v48, v56, &v73);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, type, v62, "📖  %@: enumerating page %s done: %ld items next %s anchor:%s", (uint8_t *)v43, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v61, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v63, -1, -1);
      MEMORY[0x25332B030](v43, -1, -1);

      a2 = v68;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      id v13 = a3;
    }
    uint64_t v16 = a9;
  }
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
  unint64_t v58 = (void *)sub_24DCC9C18();
  if (a5) {
    uint64_t v59 = (void *)sub_24DCC8818();
  }
  else {
    uint64_t v59 = 0;
  }
  (*(void (**)(uint64_t, void *, void *, void *, uint64_t, void *))(v16 + 16))(v16, v58, a2, v13, a4, v59);
}

uint64_t sub_24D991F24(void *a1, uint64_t a2, char *a3, const void *a4)
{
  uint64_t v63 = a2;
  uint64_t v7 = sub_24DCC9078();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v68 = &v56[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  id v13 = &v56[-v12];
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = &v56[-v14];
  uint64_t v66 = swift_allocObject();
  uint64_t v67 = v8;
  *(void *)(v66 + 16) = a4;
  uint64_t v65 = *(void (**)(unsigned char *, char *, uint64_t))(v8 + 16);
  v65(v15, &a3[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_logger], v7);
  uint64_t v16 = a3;
  id v17 = a1;
  id v18 = v16;
  id v19 = v17;
  uint64_t v64 = a4;
  _Block_copy(a4);
  id v69 = v15;
  id v20 = sub_24DCC9068();
  os_log_type_t v21 = sub_24DCCA118();
  int v22 = v21;
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v60 = v9;
    os_log_type_t v25 = (void *)v24;
    uint64_t v58 = v24;
    uint64_t v61 = swift_slowAlloc();
    aBlock[0] = v61;
    *(_DWORD *)uint64_t v23 = 138412546;
    os_log_t v59 = v20;
    uint64_t v62 = v7;
    uint64_t v71 = (uint64_t)v18;
    uint64_t v26 = v18;
    int v57 = v22;
    id v27 = v13;
    id v28 = v26;
    sub_24DCCA428();
    *os_log_type_t v25 = v18;
    uint64_t v9 = v60;

    id v13 = v27;
    *(_WORD *)(v23 + 12) = 2080;
    uint64_t v29 = sub_24DA80EC4();
    uint64_t v71 = sub_24D418FB4(v29, v30, aBlock);
    sub_24DCCA428();

    uint64_t v7 = v62;
    swift_bridgeObjectRelease();
    id v20 = v59;
    _os_log_impl(&dword_24D3D0000, v59, (os_log_type_t)v57, "📖  %@: enumerating page %s", (uint8_t *)v23, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    uint64_t v31 = v58;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v31, -1, -1);
    uint64_t v32 = v61;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v32, -1, -1);
    MEMORY[0x25332B030](v23, -1, -1);
  }
  else
  {
  }
  id v33 = v65;
  v65(v13, v69, v7);
  v33(v68, v13, v7);
  uint64_t v34 = v67;
  unint64_t v35 = (*(unsigned __int8 *)(v67 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80);
  unint64_t v36 = (v9 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v36 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v38 = swift_allocObject();
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v34 + 32))(v38 + v35, v13, v7);
  *(void *)(v38 + v36) = v18;
  *(void *)(v38 + v37) = v19;
  id v39 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + ((v37 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v40 = v66;
  *id v39 = sub_24D4C6BE8;
  v39[1] = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))v40;
  unint64_t v41 = v18;
  id v42 = v19;
  swift_retain();
  if (objc_sync_enter(v41)) {
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v41);
  }
  char v43 = v41[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  if (objc_sync_exit(v41)) {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v41);
  }

  if ((v43 & 1) != 0
    || (uint64_t v44 = MEMORY[0x25332B1A0](&v41[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_backend])) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    uint64_t v71 = -1002;
    unint64_t v50 = MEMORY[0x263F8EE78];
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D993778(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    unint64_t v51 = (void *)aBlock[0];
    uint64_t v52 = v64;
    _Block_copy(v64);
    unint64_t v53 = v68;
    sub_24D991830(v50, 0, 0, 0, v51, (int)v68, v41, v42, (uint64_t)v52);
    _Block_release(v52);
    swift_release();

    unint64_t v54 = *(void (**)(unsigned char *, uint64_t))(v34 + 8);
    v54(v53, v7);
    v54(v69, v7);
  }
  else
  {
    id v45 = (void *)v44;
    uint64_t v67 = *(void *)(v34 + 8);
    ((void (*)(unsigned char *, uint64_t))v67)(v68, v7);
    uint64_t v46 = *(void **)&v41[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator];
    unint64_t v47 = (void *)swift_allocObject();
    v47[2] = v41;
    v47[3] = sub_24D993890;
    v47[4] = v38;
    aBlock[4] = (uint64_t)sub_24D9939BC;
    aBlock[5] = (uint64_t)v47;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24D98F14C;
    aBlock[3] = (uint64_t)&block_descriptor_53;
    uint64_t v48 = _Block_copy(aBlock);
    uint64_t v49 = v41;
    swift_unknownObjectRetain();
    swift_retain();
    swift_release();
    objc_msgSend(v46, sel_enumerateItemsFromPage_suggestedPageSize_reply_, v42, v63, v48);
    _Block_release(v48);
    swift_release();

    swift_unknownObjectRelease();
    ((void (*)(char *, uint64_t))v67)(v69, v7);
  }
  return swift_release();
}

void sub_24D9925F0(unint64_t a1, unint64_t a2, char a3, void *a4, uint64_t a5, id a6, int a7, void *a8, uint64_t a9, unint64_t a10, uint64_t a11)
{
  id v12 = a6;
  if (a6)
  {
    id v17 = a6;
    id v18 = v12;
    id v19 = a8;
    sub_24D3F9C18(a9, a10);
    id v20 = v12;
    id v21 = v19;
    sub_24D3F9C18(a9, a10);
    int v22 = sub_24DCC9068();
    os_log_type_t v23 = sub_24DCCA128();
    if (os_log_type_enabled(v22, v23))
    {
      id v65 = v12;
      uint64_t v24 = swift_slowAlloc();
      os_log_type_t v25 = (void *)swift_slowAlloc();
      uint64_t v58 = swift_slowAlloc();
      v68[0] = v58;
      *(_DWORD *)uint64_t v24 = 138412802;
      id v26 = v21;
      sub_24DCCA428();
      *os_log_type_t v25 = v21;

      uint64_t v27 = a5;
      *(_WORD *)(v24 + 12) = 2080;
      sub_24D3F9C18(a9, a10);
      uint64_t v28 = sub_24DCC8AA8();
      unint64_t v30 = v29;
      sub_24D400DCC(a9, a10);
      sub_24D418FB4(v28, v30, v68);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D400DCC(a9, a10);
      sub_24D400DCC(a9, a10);
      *(_WORD *)(v24 + 22) = 2112;
      swift_getErrorValue();
      id v67 = sub_24DBA2828(v66);
      uint64_t v31 = a4;
      sub_24DCCA428();
      v25[1] = v67;

      _os_log_impl(&dword_24D3D0000, v22, v23, "📖  %@: enumerating from change %s failed: %@", (uint8_t *)v24, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v25, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v58, -1, -1);
      uint64_t v32 = v24;
      id v12 = v65;
      MEMORY[0x25332B030](v32, -1, -1);
    }
    else
    {

      sub_24D400DCC(a9, a10);
      sub_24D400DCC(a9, a10);

      uint64_t v31 = a4;
      uint64_t v27 = a5;
    }
  }
  else
  {
    id v33 = a8;
    sub_24D3F9C18(a9, a10);
    id v34 = a4;
    id v35 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24D3F9C18(a9, a10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v36 = v34;
    unint64_t v37 = sub_24DCC9068();
    os_log_type_t v59 = sub_24DCCA118();
    if (os_log_type_enabled(v37, v59))
    {
      type = v36;
      char v60 = a3;
      uint64_t v62 = a4;
      uint64_t v38 = swift_slowAlloc();
      id v39 = (void *)swift_slowAlloc();
      os_log_t log = (os_log_t)swift_slowAlloc();
      v68[0] = (uint64_t)log;
      *(_DWORD *)uint64_t v38 = 138413570;
      unint64_t v63 = a1;
      id v40 = v35;
      sub_24DCCA428();
      *id v39 = v35;

      *(_WORD *)(v38 + 12) = 2080;
      sub_24D3F9C18(a9, a10);
      uint64_t v41 = sub_24DCC8AA8();
      unint64_t v43 = v42;
      sub_24D400DCC(a9, a10);
      sub_24D418FB4(v41, v43, v68);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D400DCC(a9, a10);
      sub_24D400DCC(a9, a10);
      *(_WORD *)(v38 + 22) = 2048;
      if (v63 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24DCCA9C8();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 32) = 2048;
      uint64_t v31 = a4;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_24DCCA9C8();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 42) = 2080;
      if (v60) {
        uint64_t v44 = 0x6F6D20736168202CLL;
      }
      else {
        uint64_t v44 = 0;
      }
      if (v60) {
        unint64_t v45 = 0xEA00000000006572;
      }
      else {
        unint64_t v45 = 0xE000000000000000;
      }
      sub_24D418FB4(v44, v45, v68);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 52) = 2080;
      if (a4)
      {
        uint64_t v46 = sub_24DCC8B68();
        unint64_t v48 = v47;
        uint64_t v49 = sub_24DCC8AA8();
        unint64_t v51 = v50;
        unint64_t v52 = v48;
        uint64_t v31 = v62;
        sub_24D400DCC(v46, v52);
      }
      else
      {
        unint64_t v51 = 0xE500000000000000;
        uint64_t v49 = 0x3E6C696E3CLL;
      }
      sub_24D418FB4(v49, v51, v68);
      sub_24DCCA428();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v37, v59, "📖  %@: enumerating from change %s done: %ld updated, %ld deleted%s, next anchor:%s", (uint8_t *)v38, 0x3Eu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v39, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](log, -1, -1);
      MEMORY[0x25332B030](v38, -1, -1);

      uint64_t v27 = a5;
      id v12 = 0;
      a3 = v60;
    }
    else
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24D400DCC(a9, a10);
      sub_24D400DCC(a9, a10);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v27 = a5;
      id v12 = 0;
      uint64_t v31 = a4;
    }
  }
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
  unint64_t v53 = (void *)sub_24DCC9C18();
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
  unint64_t v54 = (void *)sub_24DCC9C18();
  if (v12) {
    unint64_t v55 = (void *)sub_24DCC8818();
  }
  else {
    unint64_t v55 = 0;
  }
  (*(void (**)(uint64_t, void *, void *, void, void *, uint64_t, void *))(a11 + 16))(a11, v53, v54, a3 & 1, v31, v27, v55);
}

uint64_t sub_24D992E30(uint64_t a1, unint64_t a2, uint64_t a3, char *a4, const void *a5)
{
  uint64_t v71 = a3;
  uint64_t v9 = sub_24DCC9078();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  unint64_t v76 = &v64[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v73 = &v64[-v14];
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = &v64[-v15];
  uint64_t v75 = swift_allocObject();
  *(void *)(v75 + 16) = a5;
  uint64_t v78 = v10;
  id v17 = *(void (**)(unsigned char *, char *, uint64_t))(v10 + 16);
  v17(v16, &a4[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_logger], v9);
  id v18 = a4;
  sub_24D3F9C18(a1, a2);
  id v19 = v18;
  sub_24D3F9C18(a1, a2);
  id v72 = a5;
  _Block_copy(a5);
  uint64_t v77 = v16;
  id v20 = sub_24DCC9068();
  os_log_type_t v21 = sub_24DCCA118();
  int v22 = v21;
  BOOL v23 = os_log_type_enabled(v20, v21);
  uint64_t v74 = v19;
  if (v23)
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v70 = v9;
    uint64_t v25 = v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v67 = v11;
    uint64_t v27 = (void *)v26;
    uint64_t v68 = swift_slowAlloc();
    aBlock[0] = v68;
    *(_DWORD *)uint64_t v25 = 138412546;
    os_log_t v66 = v20;
    uint64_t v80 = (uint64_t)v19;
    id v69 = v17;
    uint64_t v28 = v19;
    int v65 = v22;
    unint64_t v29 = v28;
    sub_24DCCA428();
    void *v27 = v19;
    unint64_t v30 = v27;
    uint64_t v11 = v67;

    *(_WORD *)(v25 + 12) = 2080;
    sub_24D3F9C18(a1, a2);
    uint64_t v31 = sub_24DCC8AA8();
    unint64_t v33 = v32;
    sub_24D400DCC(a1, a2);
    uint64_t v80 = sub_24D418FB4(v31, v33, aBlock);
    id v17 = v69;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D400DCC(a1, a2);
    sub_24D400DCC(a1, a2);
    os_log_t v34 = v66;
    _os_log_impl(&dword_24D3D0000, v66, (os_log_type_t)v65, "📖  %@: enumerating from change %s", (uint8_t *)v25, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v30, -1, -1);
    uint64_t v35 = v68;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v35, -1, -1);
    uint64_t v36 = v25;
    uint64_t v9 = v70;
    MEMORY[0x25332B030](v36, -1, -1);
  }
  else
  {

    sub_24D400DCC(a1, a2);
    sub_24D400DCC(a1, a2);
  }
  unint64_t v37 = v73;
  v17(v73, v77, v9);
  v17(v76, v37, v9);
  uint64_t v38 = v78;
  unint64_t v39 = (*(unsigned __int8 *)(v78 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  unint64_t v40 = (v11 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v40 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v42 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v42 + v39, v37, v9);
  unint64_t v43 = v74;
  *(void *)(v42 + v40) = v74;
  uint64_t v44 = (uint64_t *)(v42 + v41);
  *uint64_t v44 = a1;
  v44[1] = a2;
  unint64_t v45 = (void (**)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))(v42
                                                                                + ((v41 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v46 = v75;
  *unint64_t v45 = sub_24D4C6424;
  v45[1] = (void (*)(uint64_t, uint64_t, char, uint64_t, uint64_t, uint64_t))v46;
  unint64_t v47 = v43;
  sub_24D3F9C18(a1, a2);
  swift_retain();
  if (objc_sync_enter(v47)) {
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v47);
  }
  char v48 = v47[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_invalidated];
  if (objc_sync_exit(v47)) {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v47);
  }

  if ((v48 & 1) != 0
    || (uint64_t v49 = MEMORY[0x25332B1A0](&v47[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_backend])) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    uint64_t v80 = -1002;
    unint64_t v57 = MEMORY[0x263F8EE78];
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D993778(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    uint64_t v58 = (void *)aBlock[0];
    os_log_type_t v59 = v72;
    _Block_copy(v72);
    unint64_t v63 = a2;
    char v60 = v76;
    sub_24D9925F0(v57, v57, 0, 0, 0, v58, (int)v76, v47, a1, v63, (uint64_t)v59);
    _Block_release(v59);
    swift_release();

    uint64_t v61 = *(void (**)(unsigned char *, uint64_t))(v78 + 8);
    v61(v60, v9);
    v61(v77, v9);
  }
  else
  {
    unint64_t v50 = (void *)v49;
    unint64_t v51 = *(void (**)(unsigned char *, uint64_t))(v78 + 8);
    v51(v76, v9);
    unint64_t v52 = *(void **)&v47[OBJC_IVAR____TtC9libfssync20FPFSSearchEnumerator_extensionEnumerator];
    swift_unknownObjectRetain();
    unint64_t v53 = (void *)sub_24DCC8B28();
    unint64_t v54 = (void *)swift_allocObject();
    v54[2] = v47;
    v54[3] = sub_24D993648;
    v54[4] = v42;
    aBlock[4] = (uint64_t)sub_24D99374C;
    aBlock[5] = (uint64_t)v54;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_24D98F2D4;
    aBlock[3] = (uint64_t)&block_descriptor_23;
    unint64_t v55 = _Block_copy(aBlock);
    unint64_t v56 = v47;
    swift_retain();
    swift_release();
    objc_msgSend(v52, sel_enumerateChangesFromToken_suggestedBatchSize_reply_, v53, v71, v55);
    _Block_release(v55);
    swift_release();

    swift_unknownObjectRelease();
    v51(v77, v9);
  }
  return swift_release();
}

uint64_t sub_24D993574()
{
  uint64_t v1 = sub_24DCC9078();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  sub_24D400DCC(*(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D993648(unint64_t a1, unint64_t a2, char a3, void *a4, uint64_t a5, void *a6)
{
  uint64_t v13 = *(void *)(sub_24DCC9078() - 8);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v15 = (*(void *)(v13 + 64) + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D990560(a1, a2, a3, a4, a5, a6, (int)v6 + (int)v14, *(void **)(v6 + v15), *(void *)(v6 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v6 + ((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(uint64_t (**)(unint64_t, unint64_t, void, void *, uint64_t, id))(v6 + ((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v6 + ((((v15 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24D99374C(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_24D990D3C(a1, a2, a3, a4, a5, a6, *(void *)(v6 + 16), *(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v6 + 24));
}

uint64_t sub_24D993778(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D9937C0()
{
  uint64_t v1 = sub_24DCC9078();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D993890(unint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v11 = *(void *)(sub_24DCC9078() - 8);
  unint64_t v12 = (*(unsigned __int8 *)(v11 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v13 = (*(void *)(v11 + 64) + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D98F87C(a1, a2, a3, a4, a5, (int)v5 + (int)v12, *(void **)(v5 + v13), *(void **)(v5 + ((v13 + 15) & 0xFFFFFFFFFFFFFFF8)), *(uint64_t (**)(unint64_t, void *, void *, uint64_t, id))(v5+ ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8)+ 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v5 + ((((v13 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t objectdestroy_40Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D9939BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_24D98FF18(a1, a2, a3, a4, a5, *(void *)(v5 + 16), *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 24));
}

uint64_t sub_24D9939C8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D993A00()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D993A44@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for FPFSMaterializedSetAnchor();
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = sub_24DCC8B68();
  int v13 = v11;
  char v14 = BYTE6(v12);
  switch(v12 >> 62)
  {
    case 1uLL:
      unint64_t v15 = HIDWORD(v11);
      sub_24D400DCC(v11, v12);
      if (__OFSUB__(v15, v13))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        JUMPOUT(0x24D993DB0);
      }
      if (v15 == v13) {
        goto LABEL_12;
      }
      goto LABEL_9;
    case 2uLL:
      uint64_t v31 = v3;
      uint64_t v16 = a3;
      uint64_t v17 = a2;
      uint64_t v19 = *(void *)(v11 + 16);
      uint64_t v18 = *(void *)(v11 + 24);
      sub_24D400DCC(v11, v12);
      uint64_t v20 = v18 - v19;
      if (__OFSUB__(v18, v19)) {
        goto LABEL_18;
      }
      a2 = v17;
      a3 = v16;
      uint64_t v4 = v31;
      if (!v20)
      {
LABEL_12:

        uint64_t v26 = sub_24DCC8D88();
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 32))(a3, a2, v26);
LABEL_13:
        *(void *)(a3 + *(int *)(v8 + 20)) = 0;
        return result;
      }
LABEL_9:
      uint64_t v31 = a2;
      sub_24DCC86D8();
      swift_allocObject();
      sub_24DCC86C8();
      uint64_t v21 = sub_24DCC8B68();
      unint64_t v23 = v22;
      sub_24D99494C(&qword_26986FEB8, (void (*)(uint64_t))type metadata accessor for FPFSMaterializedSetAnchor);
      sub_24DCC86B8();
      if (v4)
      {
        sub_24D400DCC(v21, v23);

        swift_release();
        uint64_t v24 = sub_24DCC8D88();
        return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v24 - 8) + 8))(v31, v24);
      }
      sub_24D400DCC(v21, v23);
      uint64_t v27 = sub_24DCC8D88();
      sub_24D99494C(&qword_26B192370, MEMORY[0x263F07508]);
      uint64_t v28 = v31;
      char v29 = sub_24DCC9798();
      swift_release();

      if ((v29 & 1) == 0)
      {
        sub_24D993E0C((uint64_t)v10);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 32))(a3, v28, v27);
        goto LABEL_13;
      }
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v28, v27);
      return sub_24D993E68((uint64_t)v10, a3);
    case 3uLL:
      sub_24D400DCC(v11, v12);
      goto LABEL_12;
    default:
      sub_24D400DCC(v11, v12);
      if (!v14) {
        goto LABEL_12;
      }
      goto LABEL_9;
  }
}

uint64_t type metadata accessor for FPFSMaterializedSetAnchor()
{
  uint64_t result = qword_26986FEC0;
  if (!qword_26986FEC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_24D993E0C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for FPFSMaterializedSetAnchor();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_24D993E68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFSMaterializedSetAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t *sub_24D993ECC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24DCC8D88();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t sub_24D993F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24D994014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24D994090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24D99410C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_24D994188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D99419C);
}

uint64_t sub_24D99419C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC8D88();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_24D994208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D99421C);
}

uint64_t sub_24D99421C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC8D88();
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_24D99428C()
{
  uint64_t result = sub_24DCC8D88();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_24D994324(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FED0);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9948F8();
  sub_24DCCB0D8();
  v8[15] = 0;
  sub_24DCC8D88();
  sub_24D99494C((unint64_t *)&unk_26B192360, MEMORY[0x263F07508]);
  sub_24DCCACF8();
  if (!v1)
  {
    type metadata accessor for FPFSMaterializedSetAnchor();
    v8[14] = 1;
    sub_24DCCACD8();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_24D9944D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_24DCC8D88();
  uint64_t v22 = *(void *)(v4 - 8);
  uint64_t v23 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986FEE0);
  uint64_t v21 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FPFSMaterializedSetAnchor();
  MEMORY[0x270FA5388](v9);
  unint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24D9948F8();
  sub_24DCCB0B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v19 = v11;
  uint64_t v12 = v21;
  uint64_t v13 = v22;
  char v26 = 0;
  sub_24D99494C(&qword_26B192378, MEMORY[0x263F07508]);
  uint64_t v14 = v23;
  sub_24DCCAB98();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v6, v14);
  char v25 = 1;
  uint64_t v15 = sub_24DCCAB88();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v24);
  uint64_t v17 = (uint64_t)v19;
  uint64_t v16 = v20;
  *(void *)&v19[*(int *)(v9 + 20)] = v15;
  sub_24D994994(v17, v16);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_24D993E0C(v17);
}

uint64_t sub_24D9947FC()
{
  if (*v0) {
    return 0x726F68636E61;
  }
  else {
    return 0x444955556264;
  }
}

uint64_t sub_24D994828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D994C04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D994850(uint64_t a1)
{
  unint64_t v2 = sub_24D9948F8();

  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_24D99488C(uint64_t a1)
{
  unint64_t v2 = sub_24D9948F8();

  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_24D9948C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D9944D8(a1, a2);
}

uint64_t sub_24D9948E0(void *a1)
{
  return sub_24D994324(a1);
}

unint64_t sub_24D9948F8()
{
  unint64_t result = qword_26986FED8;
  if (!qword_26986FED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FED8);
  }
  return result;
}

uint64_t sub_24D99494C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_24D994994(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FPFSMaterializedSetAnchor();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for FPFSMaterializedSetAnchor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D994AC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPFSMaterializedSetAnchor.CodingKeys()
{
  return &type metadata for FPFSMaterializedSetAnchor.CodingKeys;
}

unint64_t sub_24D994B00()
{
  unint64_t result = qword_26986FEE8;
  if (!qword_26986FEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FEE8);
  }
  return result;
}

unint64_t sub_24D994B58()
{
  unint64_t result = qword_26986FEF0;
  if (!qword_26986FEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FEF0);
  }
  return result;
}

unint64_t sub_24D994BB0()
{
  unint64_t result = qword_26986FEF8;
  if (!qword_26986FEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986FEF8);
  }
  return result;
}

uint64_t sub_24D994C04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444955556264 && a2 == 0xE600000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F68636E61 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D994CE8()
{
  uint64_t result = type metadata accessor for SnapshotMutation();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SnapshotMutation();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_24D994DBC(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v672 = *(void *)(AssociatedTypeWitness - 8);
  int v702 = *(_DWORD *)(v672 + 80);
  uint64_t v636 = v2 + v702;
  uint64_t v638 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v638 - 8);
  uint64_t v647 = v3;
  int v699 = *(_DWORD *)(v3 + 80);
  uint64_t v641 = swift_getAssociatedTypeWitness();
  uint64_t v649 = *(void *)(v641 - 8);
  int v696 = *(_DWORD *)(v649 + 80);
  uint64_t v4 = v699 & 0xF8 | v696 | 7u;
  uint64_t v631 = v2 + v4;
  uint64_t v635 = *(void *)(v3 + 64) + 7;
  uint64_t v637 = v696 + 8;
  uint64_t v639 = *(void *)(v649 + 64) + 7;
  uint64_t v663 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v663 - 8);
  int v692 = *(_DWORD *)(v5 + 80);
  uint64_t v6 = v692 | 7;
  uint64_t v719 = v6 + 16;
  unint64_t v643 = ((((v639 + ((v637 + (v635 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v696)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v656 = v692 + 12;
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v657 = v7 + v692;
  uint64_t v658 = v7;
  uint64_t v659 = v692 + 10;
  uint64_t v651 = v5;
  if (*(_DWORD *)(v5 + 84)) {
    size_t v8 = *(void *)(*(void *)(v663 - 8) + 64);
  }
  else {
    size_t v8 = v7 + 1;
  }
  size_t __n = v8;
  size_t v660 = v8 + 7;
  unint64_t v680 = (((((((((v8
                + 7
                + ((v692
                  + 10
                  + ((((((v7
                        + ((v7
                          + v692
                          + ((v692 + 12) & ~(unint64_t)v692)) & ~(unint64_t)v692)
                        + 12) & 0xFFFFFFFFFFFFFFF8)
                      + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v692)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (((v680
        + 327
        + ((v6
          + 16
          + ((v2 + v4 + (v636 & ~(unint64_t)v702)) & ~v4)
          + ((((v639
              + ((v696 + 8 + (v635 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)v696)) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8)
      + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = ((v9 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v674 = v699 & 0xF8 | v696 | 7u;
  unint64_t v711 = v4 | v702 | (unint64_t)v692;
  unint64_t v629 = v9 + 16;
  unint64_t v630 = v9 + 16 + v711;
  unint64_t v632 = v9 + 23;
  unint64_t v11 = ((((v9 + 23 + (v630 & ~v711)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v12 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v652 = v2;
  if (v12 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v12 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v12 > v10) {
    unint64_t v10 = v12;
  }
  if (v10 > v11) {
    unint64_t v11 = v10;
  }
  unint64_t v677 = v11;
  unint64_t v709 = v11 | 1;
  uint64_t v664 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(*(void *)(v664 - 8) + 64);
  uint64_t v669 = *(void *)(v664 - 8);
  int v688 = *(_DWORD *)(v669 + 80);
  uint64_t v633 = v13 + v688;
  uint64_t v634 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v634 - 8);
  uint64_t v646 = v14;
  int v684 = *(_DWORD *)(v14 + 80);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = v14;
  int v17 = *(_DWORD *)(*(void *)(v15 - 8) + 80);
  uint64_t v18 = v17;
  uint64_t v19 = v684 & 0xF8 | v17 | 7u;
  uint64_t v20 = v13 + v19;
  uint64_t v21 = *(void *)(v16 + 64) + 7;
  uint64_t v22 = v17 + 8;
  unint64_t v23 = ((((*(void *)(*(void *)(v15 - 8) + 64) + 7 + ((v18 + 8 + (v21 & 0xFFFFFFFFFFFFFFF8)) & ~v18)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v24 = (((v680 + 327 + ((v719 + ((v13 + v19 + (v633 & ~(unint64_t)v688)) & ~v19) + v23) & ~v6)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = v24 + 23;
  unint64_t v26 = ((v24 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v27 = v24 + 16;
  uint64_t v28 = v688;
  uint64_t v29 = v19 | v688;
  uint64_t v30 = v29 | v692;
  unint64_t v31 = v27 + v30;
  unint64_t v32 = (v13 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v32 <= ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v32 = ((v13 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v32 > v26) {
    unint64_t v26 = v32;
  }
  if (v26 <= ((((v25 + ((v27 + v30) & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v33 = ((((v25 + ((v27 + v30) & ~v30)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v33 = v26;
  }
  if ((v33 | 1) <= v709) {
    uint64_t v34 = v709;
  }
  else {
    uint64_t v34 = v33 | 1;
  }
  if ((v29 | v711) != 7
    || ((v699 | v702 | v696 | v692 | v688 | v684 | v17) & 0x100000) != 0
    || (unint64_t)(v34 + 1) > 0x18)
  {
    uint64_t v42 = *(void *)a2;
    *a1 = *(void *)a2;
    unint64_t v40 = (void *)(v42 + (((v29 | v711) + 16) & ~(v29 | v711)));
    swift_retain();
  }
  else
  {
    uint64_t v35 = v692 | 7;
    uint64_t v36 = v13;
    unsigned int v37 = a2[v34];
    unsigned int v38 = v37 - 2;
    if (v37 < 2)
    {
      unint64_t v40 = a1;
    }
    else
    {
      if (v34 <= 3) {
        uint64_t v39 = v34;
      }
      else {
        uint64_t v39 = 4;
      }
      unint64_t v40 = a1;
      switch(v39)
      {
        case 1:
          int v41 = *a2;
          if (v34 < 4) {
            goto LABEL_35;
          }
          goto LABEL_37;
        case 2:
          int v41 = *(unsigned __int16 *)a2;
          if (v34 >= 4) {
            goto LABEL_37;
          }
          goto LABEL_35;
        case 3:
          int v41 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v34 < 4) {
            goto LABEL_35;
          }
          goto LABEL_37;
        case 4:
          int v41 = *(_DWORD *)a2;
          if (v34 < 4) {
LABEL_35:
          }
            unsigned int v37 = (v41 | (v38 << (8 * v34))) + 2;
          else {
LABEL_37:
          }
            unsigned int v37 = v41 + 2;
          break;
        default:
          break;
      }
    }
    unint64_t v710 = ~(unint64_t)v692;
    unint64_t v43 = v680 + 16;
    if (v37 == 1)
    {
      unsigned int v44 = a2[v33];
      if (v44 >= 6 && v33 != 0) {
        unsigned int v44 = *(_DWORD *)a2 + 6;
      }
      unint64_t v46 = ~(unint64_t)v688;
      uint64_t v47 = ~v18;
      uint64_t v48 = ~v30;
      switch(v44)
      {
        case 1u:
          uint64_t v644 = v48;
          unint64_t v667 = v31;
          uint64_t v673 = v20;
          unint64_t v679 = v25;
          unint64_t v682 = v33;
          unint64_t v707 = v43;
          uint64_t v714 = v34;
          long long v129 = *(void (**)(unint64_t, unint64_t, uint64_t))(v669 + 16);
          uint64_t v694 = v15;
          unint64_t v698 = v23;
          uint64_t v628 = *(void *)(*(void *)(v15 - 8) + 64) + 7;
          uint64_t v701 = *(void *)(v15 - 8);
          uint64_t v704 = ~v35;
          uint64_t v686 = v47;
          uint64_t v690 = v22;
          uint64_t v130 = v21;
          unint64_t v131 = v46;
          v129((unint64_t)v40, (unint64_t)a2, v664);
          unint64_t v132 = ((unint64_t)v40 + v633) & v131;
          unint64_t v650 = v131;
          unint64_t v133 = (unint64_t)&a2[v633] & v131;
          v648 = v129;
          v129(v132, v133, v664);
          unint64_t v134 = (v132 + v36 + v19) & ~v19;
          uint64_t v653 = ~v19;
          unint64_t v135 = (v133 + v36 + v19) & ~v19;
          v640 = *(void (**)(unint64_t, unint64_t, uint64_t))(v646 + 16);
          v640(v134, v135, v634);
          uint64_t v136 = (void *)((v130 + v134) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v675 = v130;
          unint64_t v137 = (void *)((v130 + v135) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v136 = *v137;
          unint64_t v138 = ((unint64_t)v136 + v690) & v686;
          unint64_t v139 = ((unint64_t)v137 + v690) & v686;
          uint64_t v140 = *(void (**)(unint64_t, unint64_t, uint64_t))(v701 + 16);
          swift_bridgeObjectRetain();
          v642 = v140;
          v140(v138, v139, v694);
          uint64_t v141 = (void *)((v628 + v139) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v142 = (void *)((v628 + v138) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v142 = *v141;
          uint64_t v143 = (void *)(((unint64_t)v142 + 15) & 0xFFFFFFFFFFFFFFF8);
          int v144 = (void *)(((unint64_t)v141 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v143 = *v144;
          v143[1] = v144[1];
          long long v145 = (void *)(v698 + v134);
          void *v145 = *(void *)(v698 + v135);
          v145[1] = *(void *)(v698 + v135 + 8);
          uint64_t v146 = (v719 + v698 + v134) & ~v35;
          uint64_t v147 = (v719 + v698 + v135) & ~v35;
          *(unsigned char *)uint64_t v146 = *(unsigned char *)v147;
          uint64_t v148 = v146 | 4;
          int v149 = *(_DWORD *)(v147 | 4);
          *(unsigned char *)(v148 + 4) = *(unsigned char *)((v147 | 4) + 4);
          *(_DWORD *)uint64_t v148 = v149;
          *(_WORD *)(v146 + 10) = *(_WORD *)(v147 + 0xA);
          unint64_t v150 = (v656 + v146) & v710;
          unint64_t v151 = (v656 + v147) & v710;
          unint64_t v152 = *(void (**)(unint64_t, unint64_t, uint64_t))(v651 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v152(v150, v151, v663);
          unint64_t v153 = (v657 + v150) & v710;
          unint64_t v154 = (v657 + v151) & v710;
          v152(v153, v154, v663);
          unint64_t v155 = (unsigned char *)(v153 + v658);
          *unint64_t v155 = *(unsigned char *)(v154 + v658);
          v155[1] = *(unsigned char *)(v154 + v658 + 1);
          v155[2] = *(unsigned char *)(v154 + v658 + 2);
          v155[3] = *(unsigned char *)(v154 + v658 + 3);
          v155[4] = *(unsigned char *)(v154 + v658 + 4);
          unint64_t v156 = (v153 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v157 = (v154 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v156 = *(void *)v157;
          *(void *)(v156 + 8) = *(void *)(v157 + 8);
          *(unsigned char *)(v156 + 16) = *(unsigned char *)(v157 + 16);
          *(unsigned char *)(v156 + 17) = *(unsigned char *)(v157 + 17);
          *(unsigned char *)(v156 + 18) = *(unsigned char *)(v157 + 18);
          *(unsigned char *)(v156 + 19) = *(unsigned char *)(v157 + 19);
          unint64_t v158 = (v156 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v159 = (v157 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v158 = *(void *)v159;
          *(unsigned char *)(v158 + 8) = *(unsigned char *)(v159 + 8);
          *(unsigned char *)(v158 + 9) = *(unsigned char *)(v159 + 9);
          *(unsigned char *)(v158 + 10) = *(unsigned char *)(v159 + 10);
          *(unsigned char *)(v158 + 11) = *(unsigned char *)(v159 + 11);
          *(unsigned char *)(v158 + 12) = *(unsigned char *)(v159 + 12);
          unint64_t v160 = (void *)((v157 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v161 = (void *)((v156 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v161 = *v160;
          unint64_t v162 = ((unint64_t)v161 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v163 = ((unint64_t)v160 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v162 = *(void *)v163;
          *(unsigned char *)(v162 + 8) = *(unsigned char *)(v163 + 8);
          *(unsigned char *)(v162 + 9) = *(unsigned char *)(v163 + 9);
          unint64_t v164 = (void *)((v659 + v162) & v710);
          unint64_t v165 = (const void *)((v659 + v163) & v710);
          uint64_t v166 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v651 + 48);
          swift_bridgeObjectRetain();
          v661 = v152;
          if (v166(v165, 1, v663))
          {
            memcpy(v164, v165, __n);
          }
          else
          {
            v152((unint64_t)v164, (unint64_t)v165, v663);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v651 + 56))(v164, 0, 1, v663);
          }
          long long v243 = (void *)(((unint64_t)v164 + v660) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v244 = (void *)(((unint64_t)v165 + v660) & 0xFFFFFFFFFFFFFFF8);
          *long long v243 = *v244;
          unint64_t v245 = ((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v246 = ((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v247 = *(void *)v246;
          *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
          *(void *)unint64_t v245 = v247;
          unint64_t v248 = (void *)(((unint64_t)v243 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v249 = (void *)(((unint64_t)v244 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v248 = *v249;
          unint64_t v250 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v251 = (uint64_t *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v252 = v251[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v253 = a1;
          if ((v252 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v250 = *(_OWORD *)v251;
          }
          else
          {
            uint64_t v317 = *v251;
            sub_24D3F9C18(*v251, v252);
            *(void *)unint64_t v250 = v317;
            *(void *)(v250 + 8) = v252;
          }
          unint64_t v318 = (v250 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v319 = ((unint64_t)v251 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v320 = *(void *)v319;
          *(unsigned char *)(v318 + 8) = *(unsigned char *)(v319 + 8);
          *(void *)unint64_t v318 = v320;
          *(unsigned char *)(v318 + 9) = *(unsigned char *)(v319 + 9);
          unint64_t v321 = (v318 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v322 = (v319 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v323 = *(_DWORD *)v322;
          *(unsigned char *)(v321 + 4) = *(unsigned char *)(v322 + 4);
          *(_DWORD *)unint64_t v321 = v323;
          unint64_t v324 = (void *)((v318 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v325 = (void *)((v319 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v324 = *v325;
          v324[1] = v325[1];
          unint64_t v326 = v146 + v707;
          unint64_t v327 = (long long *)(v147 + v707);
          unint64_t v328 = *((void *)v327 + 2);
          if (v328 >= 0xFFFFFFFF) {
            LODWORD(v328) = -1;
          }
          int v329 = v328 - 1;
          swift_bridgeObjectRetain();
          uint64_t v330 = v663;
          if (v329 < 0)
          {
            *(void *)unint64_t v326 = *(void *)v327;
            *(unsigned char *)(v326 + 8) = *((unsigned char *)v327 + 8);
            *(unsigned char *)(v326 + 9) = *((unsigned char *)v327 + 9);
            int v380 = (void *)*((void *)v327 + 2);
            id v381 = v380;
            *(void *)(v326 + 16) = v380;
            uint64_t v382 = (void *)*((void *)v327 + 3);
            id v383 = v382;
            *(void *)(v326 + 24) = v382;
            *(unsigned char *)(v326 + 32) = *((unsigned char *)v327 + 32);
            *(unsigned char *)(v326 + 33) = *((unsigned char *)v327 + 33);
            *(unsigned char *)(v326 + 34) = *((unsigned char *)v327 + 34);
            *(void *)(v326 + 40) = *((void *)v327 + 5);
            *(void *)(v326 + 48) = *((void *)v327 + 6);
            *(void *)(v326 + 56) = *((void *)v327 + 7);
            *(void *)(v326 + 64) = *((void *)v327 + 8);
            *(unsigned char *)(v326 + 72) = *((unsigned char *)v327 + 72);
            *(void *)(v326 + 80) = *((void *)v327 + 10);
            *(void *)(v326 + 88) = *((void *)v327 + 11);
            uint64_t v384 = (void *)*((void *)v327 + 12);
            *(void *)(v326 + 96) = v384;
            *(unsigned char *)(v326 + 104) = *((unsigned char *)v327 + 104);
            *(unsigned char *)(v326 + 105) = *((unsigned char *)v327 + 105);
            *(void *)(v326 + 112) = *((void *)v327 + 14);
            *(void *)(v326 + 120) = *((void *)v327 + 15);
            *(void *)(v326 + 128) = *((void *)v327 + 16);
            *(void *)(v326 + 136) = *((void *)v327 + 17);
            *(void *)(v326 + 144) = *((void *)v327 + 18);
            *(void *)(v326 + 152) = *((void *)v327 + 19);
            *(void *)(v326 + 160) = *((void *)v327 + 20);
            *(void *)(v326 + 168) = *((void *)v327 + 21);
            *(unsigned char *)(v326 + 176) = *((unsigned char *)v327 + 176);
            *(void *)(v326 + 184) = *((void *)v327 + 23);
            uint64_t v385 = *((void *)v327 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v386 = v384;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v385)
            {
              *(void *)(v326 + 192) = v385;
              *(void *)(v326 + 200) = *((void *)v327 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v326 + 192) = v327[12];
            }
            unint64_t v253 = a1;
            uint64_t v330 = v663;
            *(void *)(v326 + 208) = *((void *)v327 + 26);
            *(void *)(v326 + 216) = *((void *)v327 + 27);
            *(void *)(v326 + 224) = *((void *)v327 + 28);
            *(void *)(v326 + 232) = *((void *)v327 + 29);
            *(void *)(v326 + 240) = *((void *)v327 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v331 = *v327;
            long long v332 = v327[1];
            long long v333 = v327[3];
            *(_OWORD *)(v326 + 32) = v327[2];
            *(_OWORD *)(v326 + 48) = v333;
            *(_OWORD *)unint64_t v326 = v331;
            *(_OWORD *)(v326 + 16) = v332;
            long long v334 = v327[4];
            long long v335 = v327[5];
            long long v336 = v327[7];
            *(_OWORD *)(v326 + 96) = v327[6];
            *(_OWORD *)(v326 + 112) = v336;
            *(_OWORD *)(v326 + 64) = v334;
            *(_OWORD *)(v326 + 80) = v335;
            long long v337 = v327[8];
            long long v338 = v327[9];
            long long v339 = v327[11];
            *(_OWORD *)(v326 + 160) = v327[10];
            *(_OWORD *)(v326 + 176) = v339;
            *(_OWORD *)(v326 + 128) = v337;
            *(_OWORD *)(v326 + 144) = v338;
            long long v340 = v327[12];
            long long v341 = v327[13];
            long long v342 = v327[14];
            *(void *)(v326 + 240) = *((void *)v327 + 30);
            *(_OWORD *)(v326 + 208) = v341;
            *(_OWORD *)(v326 + 224) = v342;
            *(_OWORD *)(v326 + 192) = v340;
          }
          uint64_t v421 = (_OWORD *)((v326 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v422 = (long long *)(((unint64_t)v327 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v423 = *v422;
          *(_OWORD *)((char *)v421 + 9) = *(long long *)((char *)v422 + 9);
          _OWORD *v421 = v423;
          unint64_t v424 = (v326 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v425 = ((unint64_t)v327 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v426 = *(_OWORD *)v425;
          *(unsigned char *)(v424 + 16) = *(unsigned char *)(v425 + 16);
          *(_OWORD *)unint64_t v424 = v426;
          uint64_t v427 = (void *)((v326 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v428 = ((unint64_t)v327 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v429 = *(void *)v428;
          v428 += 15;
          void *v427 = v429;
          uint64_t v430 = (void *)(((unint64_t)v427 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v431 = *(void *)(v428 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v432 = *(void *)((v428 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v431, v432);
          *uint64_t v430 = v431;
          v430[1] = v432;
          unint64_t v433 = (unint64_t)&a2[v667] & v644;
          v648(((unint64_t)v253 + v667) & v644, v433, v664);
          unint64_t v716 = ((unint64_t)v253 + v667) & v644;
          unint64_t v434 = (v633 + v716) & v650;
          unint64_t v668 = v433;
          unint64_t v435 = (v633 + v433) & v650;
          v648(v434, v435, v664);
          uint64_t v436 = (v673 + v434) & v653;
          unint64_t v437 = (v673 + v435) & v653;
          v640(v436, v437, v634);
          unint64_t v438 = (void *)((v675 + v436) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v439 = (void *)((v675 + v437) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v438 = *v439;
          unint64_t v440 = ((unint64_t)v438 + v690) & v686;
          unint64_t v441 = ((unint64_t)v439 + v690) & v686;
          swift_bridgeObjectRetain();
          v642(v440, v441, v694);
          uint64_t v442 = (void *)((v628 + v440) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v443 = (void *)((v628 + v441) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v442 = *v443;
          uint64_t v444 = (void *)(((unint64_t)v442 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v445 = (void *)(((unint64_t)v443 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v444 = *v445;
          v444[1] = v445[1];
          uint64_t v446 = (void *)(v436 + v698);
          *uint64_t v446 = *(void *)(v437 + v698);
          v446[1] = *(void *)(v437 + v698 + 8);
          unint64_t v447 = (v719 + v436 + v698) & v704;
          unint64_t v448 = (v719 + v437 + v698) & v704;
          *(unsigned char *)unint64_t v447 = *(unsigned char *)v448;
          uint64_t v449 = v447 | 4;
          int v450 = *(_DWORD *)(v448 | 4);
          *(unsigned char *)(v449 + 4) = *(unsigned char *)((v448 | 4) + 4);
          *(_DWORD *)uint64_t v449 = v450;
          *(_WORD *)(v447 + 10) = *(_WORD *)(v448 + 0xA);
          unint64_t v451 = (v656 + v447) & v710;
          unint64_t v452 = (v656 + v448) & v710;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v661(v451, v452, v330);
          unint64_t v453 = (v657 + v451) & v710;
          unint64_t v454 = (v657 + v452) & v710;
          v661(v453, v454, v330);
          unint64_t v455 = (unsigned char *)(v453 + v658);
          *unint64_t v455 = *(unsigned char *)(v454 + v658);
          v455[1] = *(unsigned char *)(v454 + v658 + 1);
          v455[2] = *(unsigned char *)(v454 + v658 + 2);
          v455[3] = *(unsigned char *)(v454 + v658 + 3);
          v455[4] = *(unsigned char *)(v454 + v658 + 4);
          unint64_t v456 = (v453 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v457 = (v454 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v456 = *(void *)v457;
          *(void *)(v456 + 8) = *(void *)(v457 + 8);
          *(unsigned char *)(v456 + 16) = *(unsigned char *)(v457 + 16);
          *(unsigned char *)(v456 + 17) = *(unsigned char *)(v457 + 17);
          *(unsigned char *)(v456 + 18) = *(unsigned char *)(v457 + 18);
          *(unsigned char *)(v456 + 19) = *(unsigned char *)(v457 + 19);
          unint64_t v458 = (v456 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v459 = (v457 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v458 = *(void *)v459;
          *(unsigned char *)(v458 + 8) = *(unsigned char *)(v459 + 8);
          *(unsigned char *)(v458 + 9) = *(unsigned char *)(v459 + 9);
          *(unsigned char *)(v458 + 10) = *(unsigned char *)(v459 + 10);
          *(unsigned char *)(v458 + 11) = *(unsigned char *)(v459 + 11);
          *(unsigned char *)(v458 + 12) = *(unsigned char *)(v459 + 12);
          uint64_t v460 = (void *)((v456 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v461 = (void *)((v457 + 47) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v460 = *v461;
          unint64_t v462 = ((unint64_t)v460 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v463 = ((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v462 = *(void *)v463;
          *(unsigned char *)(v462 + 8) = *(unsigned char *)(v463 + 8);
          *(unsigned char *)(v462 + 9) = *(unsigned char *)(v463 + 9);
          unint64_t v464 = (void *)((v659 + v462) & v710);
          unint64_t v465 = (const void *)((v659 + v463) & v710);
          swift_bridgeObjectRetain();
          if (v166(v465, 1, v330))
          {
            memcpy(v464, v465, __n);
          }
          else
          {
            v661((unint64_t)v464, (unint64_t)v465, v330);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v651 + 56))(v464, 0, 1, v330);
          }
          unint64_t v33 = v682;
          uint64_t v466 = (void *)(((unint64_t)v464 + v660) & 0xFFFFFFFFFFFFFFF8);
          unsigned int v467 = (void *)(((unint64_t)v465 + v660) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v466 = *v467;
          unint64_t v468 = ((unint64_t)v466 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v469 = ((unint64_t)v467 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v470 = *(void *)v469;
          *(unsigned char *)(v468 + 8) = *(unsigned char *)(v469 + 8);
          *(void *)unint64_t v468 = v470;
          unint64_t v471 = (void *)(((unint64_t)v466 + 31) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v472 = (void *)(((unint64_t)v467 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v471 = *v472;
          unint64_t v473 = ((unint64_t)v471 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v474 = (uint64_t *)(((unint64_t)v472 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v475 = v474[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v475 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v473 = *(_OWORD *)v474;
          }
          else
          {
            uint64_t v476 = *v474;
            sub_24D3F9C18(*v474, v475);
            *(void *)unint64_t v473 = v476;
            *(void *)(v473 + 8) = v475;
          }
          unint64_t v477 = (v473 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v478 = ((unint64_t)v474 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v479 = *(void *)v478;
          *(unsigned char *)(v477 + 8) = *(unsigned char *)(v478 + 8);
          *(void *)unint64_t v477 = v479;
          *(unsigned char *)(v477 + 9) = *(unsigned char *)(v478 + 9);
          unint64_t v480 = (v477 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v481 = (v478 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v482 = *(_DWORD *)v481;
          *(unsigned char *)(v480 + 4) = *(unsigned char *)(v481 + 4);
          *(_DWORD *)unint64_t v480 = v482;
          uint64_t v483 = (void *)((v477 + 25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v484 = (void *)((v478 + 25) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v483 = *v484;
          v483[1] = v484[1];
          unint64_t v485 = v447 + v707;
          uint64_t v486 = (long long *)(v448 + v707);
          unint64_t v487 = *(void *)(v448 + v707 + 16);
          if (v487 >= 0xFFFFFFFF) {
            LODWORD(v487) = -1;
          }
          int v488 = v487 - 1;
          swift_bridgeObjectRetain();
          if (v488 < 0)
          {
            *(void *)unint64_t v485 = *(void *)v486;
            *(unsigned char *)(v485 + 8) = *((unsigned char *)v486 + 8);
            *(unsigned char *)(v485 + 9) = *((unsigned char *)v486 + 9);
            uint64_t v501 = (void *)*((void *)v486 + 2);
            id v502 = v501;
            *(void *)(v485 + 16) = v501;
            uint64_t v503 = (void *)*((void *)v486 + 3);
            id v504 = v503;
            *(void *)(v485 + 24) = v503;
            *(unsigned char *)(v485 + 32) = *((unsigned char *)v486 + 32);
            *(unsigned char *)(v485 + 33) = *((unsigned char *)v486 + 33);
            *(unsigned char *)(v485 + 34) = *((unsigned char *)v486 + 34);
            *(void *)(v485 + 40) = *((void *)v486 + 5);
            *(void *)(v485 + 48) = *((void *)v486 + 6);
            *(void *)(v485 + 56) = *((void *)v486 + 7);
            *(void *)(v485 + 64) = *((void *)v486 + 8);
            *(unsigned char *)(v485 + 72) = *((unsigned char *)v486 + 72);
            *(void *)(v485 + 80) = *((void *)v486 + 10);
            *(void *)(v485 + 88) = *((void *)v486 + 11);
            v724 = (void *)*((void *)v486 + 12);
            *(void *)(v485 + 96) = v724;
            *(unsigned char *)(v485 + 104) = *((unsigned char *)v486 + 104);
            *(unsigned char *)(v485 + 105) = *((unsigned char *)v486 + 105);
            *(void *)(v485 + 112) = *((void *)v486 + 14);
            *(void *)(v485 + 120) = *((void *)v486 + 15);
            *(void *)(v485 + 128) = *((void *)v486 + 16);
            *(void *)(v485 + 136) = *((void *)v486 + 17);
            *(void *)(v485 + 144) = *((void *)v486 + 18);
            *(void *)(v485 + 152) = *((void *)v486 + 19);
            *(void *)(v485 + 160) = *((void *)v486 + 20);
            *(void *)(v485 + 168) = *((void *)v486 + 21);
            *(unsigned char *)(v485 + 176) = *((unsigned char *)v486 + 176);
            *(void *)(v485 + 184) = *((void *)v486 + 23);
            uint64_t v505 = *((void *)v486 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v506 = v724;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v505)
            {
              *(void *)(v485 + 192) = v505;
              *(void *)(v485 + 200) = *((void *)v486 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v485 + 192) = v486[12];
            }
            unint64_t v40 = a1;
            unint64_t v33 = v682;
            *(void *)(v485 + 208) = *((void *)v486 + 26);
            *(void *)(v485 + 216) = *((void *)v486 + 27);
            *(void *)(v485 + 224) = *((void *)v486 + 28);
            *(void *)(v485 + 232) = *((void *)v486 + 29);
            *(void *)(v485 + 240) = *((void *)v486 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            unint64_t v40 = v253;
            long long v489 = *v486;
            long long v490 = v486[1];
            long long v491 = v486[3];
            *(_OWORD *)(v485 + 32) = v486[2];
            *(_OWORD *)(v485 + 48) = v491;
            *(_OWORD *)unint64_t v485 = v489;
            *(_OWORD *)(v485 + 16) = v490;
            long long v492 = v486[4];
            long long v493 = v486[5];
            long long v494 = v486[7];
            *(_OWORD *)(v485 + 96) = v486[6];
            *(_OWORD *)(v485 + 112) = v494;
            *(_OWORD *)(v485 + 64) = v492;
            *(_OWORD *)(v485 + 80) = v493;
            long long v495 = v486[8];
            long long v496 = v486[9];
            long long v497 = v486[11];
            *(_OWORD *)(v485 + 160) = v486[10];
            *(_OWORD *)(v485 + 176) = v497;
            *(_OWORD *)(v485 + 128) = v495;
            *(_OWORD *)(v485 + 144) = v496;
            long long v498 = v486[12];
            long long v499 = v486[13];
            long long v500 = v486[14];
            *(void *)(v485 + 240) = *((void *)v486 + 30);
            *(_OWORD *)(v485 + 208) = v499;
            *(_OWORD *)(v485 + 224) = v500;
            *(_OWORD *)(v485 + 192) = v498;
          }
          v594 = (_OWORD *)((v485 + 255) & 0xFFFFFFFFFFFFFFF8);
          v595 = (long long *)(((unint64_t)v486 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v596 = *v595;
          *(_OWORD *)((char *)v594 + 9) = *(long long *)((char *)v595 + 9);
          _OWORD *v594 = v596;
          unint64_t v597 = (v485 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v598 = ((unint64_t)v486 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v599 = *(_OWORD *)v598;
          *(unsigned char *)(v597 + 16) = *(unsigned char *)(v598 + 16);
          *(_OWORD *)unint64_t v597 = v599;
          v600 = (void *)((v485 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v601 = ((unint64_t)v486 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v602 = *(void *)v601;
          v601 += 15;
          void *v600 = v602;
          v603 = (void *)(((unint64_t)v600 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v604 = *(void *)(v601 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v605 = *(void *)((v601 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v604, v605);
          void *v603 = v604;
          v603[1] = v605;
          uint64_t v34 = v714;
          v606 = (void *)((v679 + v716) & 0xFFFFFFFFFFFFFFF8);
          v607 = (void *)((v679 + v668) & 0xFFFFFFFFFFFFFFF8);
          void *v606 = *v607;
          v608 = (void *)(((unint64_t)v606 + 15) & 0xFFFFFFFFFFFFFFF8);
          v609 = (void *)(((unint64_t)v607 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v608 = *v609;
          v608[1] = v609[1];
          char v169 = 1;
          break;
        case 2u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v669 + 16))(v40, a2, v664);
          *((unsigned char *)v40 + v36) = a2[v36];
          unint64_t v167 = ((unint64_t)v40 + v36) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v168 = (unint64_t)&a2[v36] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v167 + 8) = *(void *)(v168 + 8);
          *(void *)(v167 + 16) = *(void *)(v168 + 16);
          char v169 = 2;
          break;
        case 3u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v669 + 16))(v40, a2, v664);
          unint64_t v170 = (void *)(((unint64_t)v40 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v171 = (void *)((unint64_t)&a2[v36 + 7] & 0xFFFFFFFFFFFFFFF8);
          void *v170 = *v171;
          v170[1] = v171[1];
          char v169 = 3;
          break;
        case 4u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v669 + 16))(v40, a2, v664);
          *((unsigned char *)v40 + v36) = a2[v36];
          unint64_t v172 = ((unint64_t)v40 + v36) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v173 = (unint64_t)&a2[v36] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v172 + 8) = *(void *)(v173 + 8);
          *(void *)(v172 + 16) = *(void *)(v173 + 16);
          char v169 = 4;
          break;
        case 5u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v669 + 16))(v40, a2, v664);
          unint64_t v174 = (void *)(((unint64_t)v40 + v36 + 7) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v175 = (void *)((unint64_t)&a2[v36 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v174 = *v175;
          v174[1] = v175[1];
          char v169 = 5;
          break;
        default:
          unint64_t v678 = v27;
          unint64_t v681 = v33;
          unint64_t v705 = v43;
          uint64_t v712 = v34;
          uint64_t v627 = *(void *)(*(void *)(v15 - 8) + 64) + 7;
          uint64_t v49 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v669 + 16);
          uint64_t v693 = v15;
          unint64_t v697 = v23;
          uint64_t v700 = *(void *)(v15 - 8);
          uint64_t v685 = v47;
          uint64_t v689 = v22;
          uint64_t v50 = v21;
          uint64_t v51 = ~v28;
          v49(v40, a2, v664);
          unint64_t v52 = ((unint64_t)v40 + v633) & v51;
          unint64_t v53 = (unint64_t)&a2[v633] & v51;
          v49((void *)v52, (unsigned __int8 *)v53, v664);
          unint64_t v54 = (v52 + v36 + v19) & ~v19;
          unint64_t v55 = (v53 + v36 + v19) & ~v19;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v646 + 16))(v54, v55, v634);
          unint64_t v56 = (void *)((v50 + v54) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v57 = (void *)((v50 + v55) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v56 = *v57;
          unint64_t v58 = ((unint64_t)v56 + v689) & v685;
          unint64_t v59 = ((unint64_t)v57 + v689) & v685;
          char v60 = *(void (**)(unint64_t, unint64_t, uint64_t))(v700 + 16);
          swift_bridgeObjectRetain();
          v60(v58, v59, v693);
          uint64_t v61 = (void *)((v627 + v59) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v62 = (void *)((v627 + v58) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v62 = *v61;
          unint64_t v63 = (void *)(((unint64_t)v62 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v64 = (void *)(((unint64_t)v61 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v63 = *v64;
          v63[1] = v64[1];
          int v65 = (void *)(v697 + v54);
          *int v65 = *(void *)(v697 + v55);
          v65[1] = *(void *)(v697 + v55 + 8);
          uint64_t v66 = (v719 + v697 + v54) & ~v35;
          uint64_t v67 = (v719 + v697 + v55) & ~v35;
          *(unsigned char *)uint64_t v66 = *(unsigned char *)v67;
          uint64_t v68 = v66 | 4;
          int v69 = *(_DWORD *)(v67 | 4);
          *(unsigned char *)(v68 + 4) = *(unsigned char *)((v67 | 4) + 4);
          *(_DWORD *)uint64_t v68 = v69;
          *(_WORD *)(v66 + 10) = *(_WORD *)(v67 + 0xA);
          uint64_t v720 = v66;
          unint64_t v70 = (v656 + v66) & v710;
          uint64_t v703 = v67;
          unint64_t v71 = (v656 + v67) & v710;
          id v72 = *(void (**)(unint64_t, unint64_t, uint64_t))(v651 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v72(v70, v71, v663);
          unint64_t v73 = (v657 + v70) & v710;
          unint64_t v74 = (v657 + v71) & v710;
          v72(v73, v74, v663);
          uint64_t v75 = (unsigned char *)(v73 + v658);
          *uint64_t v75 = *(unsigned char *)(v74 + v658);
          v75[1] = *(unsigned char *)(v74 + v658 + 1);
          v75[2] = *(unsigned char *)(v74 + v658 + 2);
          v75[3] = *(unsigned char *)(v74 + v658 + 3);
          v75[4] = *(unsigned char *)(v74 + v658 + 4);
          unint64_t v76 = (v73 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v77 = (v74 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v76 = *(void *)v77;
          *(void *)(v76 + 8) = *(void *)(v77 + 8);
          *(unsigned char *)(v76 + 16) = *(unsigned char *)(v77 + 16);
          *(unsigned char *)(v76 + 17) = *(unsigned char *)(v77 + 17);
          *(unsigned char *)(v76 + 18) = *(unsigned char *)(v77 + 18);
          *(unsigned char *)(v76 + 19) = *(unsigned char *)(v77 + 19);
          unint64_t v78 = (v76 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v79 = (v77 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v78 = *(void *)v79;
          *(unsigned char *)(v78 + 8) = *(unsigned char *)(v79 + 8);
          *(unsigned char *)(v78 + 9) = *(unsigned char *)(v79 + 9);
          *(unsigned char *)(v78 + 10) = *(unsigned char *)(v79 + 10);
          *(unsigned char *)(v78 + 11) = *(unsigned char *)(v79 + 11);
          *(unsigned char *)(v78 + 12) = *(unsigned char *)(v79 + 12);
          uint64_t v80 = (void *)((v77 + 47) & 0xFFFFFFFFFFFFFFF8);
          char v81 = (void *)((v76 + 47) & 0xFFFFFFFFFFFFFFF8);
          *char v81 = *v80;
          unint64_t v82 = ((unint64_t)v81 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v83 = ((unint64_t)v80 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v82 = *(void *)v83;
          *(unsigned char *)(v82 + 8) = *(unsigned char *)(v83 + 8);
          *(unsigned char *)(v82 + 9) = *(unsigned char *)(v83 + 9);
          unint64_t v84 = (void *)((v659 + v82) & v710);
          unint64_t v85 = (const void *)((v659 + v83) & v710);
          long long v86 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v651 + 48);
          swift_bridgeObjectRetain();
          if (v86(v85, 1, v663))
          {
            memcpy(v84, v85, __n);
          }
          else
          {
            v72((unint64_t)v84, (unint64_t)v85, v663);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v651 + 56))(v84, 0, 1, v663);
          }
          long long v223 = (void *)(((unint64_t)v84 + v660) & 0xFFFFFFFFFFFFFFF8);
          long long v224 = (void *)(((unint64_t)v85 + v660) & 0xFFFFFFFFFFFFFFF8);
          void *v223 = *v224;
          unint64_t v225 = ((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v226 = ((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v227 = *(void *)v226;
          *(unsigned char *)(v225 + 8) = *(unsigned char *)(v226 + 8);
          *(void *)unint64_t v225 = v227;
          unint64_t v228 = (void *)(((unint64_t)v223 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v229 = (void *)(((unint64_t)v224 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v228 = *v229;
          unint64_t v230 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v231 = (uint64_t *)(((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v232 = v231[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v33 = v681;
          if ((v232 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v230 = *(_OWORD *)v231;
          }
          else
          {
            uint64_t v266 = *v231;
            sub_24D3F9C18(*v231, v232);
            *(void *)unint64_t v230 = v266;
            *(void *)(v230 + 8) = v232;
          }
          unint64_t v267 = (v230 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v268 = ((unint64_t)v231 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v269 = *(void *)v268;
          *(unsigned char *)(v267 + 8) = *(unsigned char *)(v268 + 8);
          *(void *)unint64_t v267 = v269;
          *(unsigned char *)(v267 + 9) = *(unsigned char *)(v268 + 9);
          unint64_t v270 = (v267 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v271 = (v268 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v272 = *(_DWORD *)v271;
          *(unsigned char *)(v270 + 4) = *(unsigned char *)(v271 + 4);
          *(_DWORD *)unint64_t v270 = v272;
          unint64_t v273 = (void *)((v267 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v274 = (void *)((v268 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v273 = *v274;
          v273[1] = v274[1];
          unint64_t v275 = v720 + v705;
          long long v276 = (long long *)(v703 + v705);
          unint64_t v277 = *(void *)(v703 + v705 + 16);
          if (v277 >= 0xFFFFFFFF) {
            LODWORD(v277) = -1;
          }
          int v278 = v277 - 1;
          swift_bridgeObjectRetain();
          if (v278 < 0)
          {
            *(void *)unint64_t v275 = *(void *)v276;
            *(unsigned char *)(v275 + 8) = *((unsigned char *)v276 + 8);
            *(unsigned char *)(v275 + 9) = *((unsigned char *)v276 + 9);
            unint64_t v368 = (void *)*((void *)v276 + 2);
            id v369 = v368;
            *(void *)(v275 + 16) = v368;
            size_t v370 = (void *)*((void *)v276 + 3);
            id v371 = v370;
            *(void *)(v275 + 24) = v370;
            *(unsigned char *)(v275 + 32) = *((unsigned char *)v276 + 32);
            *(unsigned char *)(v275 + 33) = *((unsigned char *)v276 + 33);
            *(unsigned char *)(v275 + 34) = *((unsigned char *)v276 + 34);
            *(void *)(v275 + 40) = *((void *)v276 + 5);
            *(void *)(v275 + 48) = *((void *)v276 + 6);
            *(void *)(v275 + 56) = *((void *)v276 + 7);
            *(void *)(v275 + 64) = *((void *)v276 + 8);
            *(unsigned char *)(v275 + 72) = *((unsigned char *)v276 + 72);
            *(void *)(v275 + 80) = *((void *)v276 + 10);
            *(void *)(v275 + 88) = *((void *)v276 + 11);
            v722 = (void *)*((void *)v276 + 12);
            *(void *)(v275 + 96) = v722;
            *(unsigned char *)(v275 + 104) = *((unsigned char *)v276 + 104);
            *(unsigned char *)(v275 + 105) = *((unsigned char *)v276 + 105);
            *(void *)(v275 + 112) = *((void *)v276 + 14);
            *(void *)(v275 + 120) = *((void *)v276 + 15);
            *(void *)(v275 + 128) = *((void *)v276 + 16);
            *(void *)(v275 + 136) = *((void *)v276 + 17);
            *(void *)(v275 + 144) = *((void *)v276 + 18);
            *(void *)(v275 + 152) = *((void *)v276 + 19);
            *(void *)(v275 + 160) = *((void *)v276 + 20);
            *(void *)(v275 + 168) = *((void *)v276 + 21);
            *(unsigned char *)(v275 + 176) = *((unsigned char *)v276 + 176);
            *(void *)(v275 + 184) = *((void *)v276 + 23);
            uint64_t v372 = *((void *)v276 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v373 = v722;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v372)
            {
              *(void *)(v275 + 192) = v372;
              *(void *)(v275 + 200) = *((void *)v276 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v275 + 192) = v276[12];
            }
            unint64_t v291 = v678;
            unint64_t v33 = v681;
            *(void *)(v275 + 208) = *((void *)v276 + 26);
            *(void *)(v275 + 216) = *((void *)v276 + 27);
            *(void *)(v275 + 224) = *((void *)v276 + 28);
            *(void *)(v275 + 232) = *((void *)v276 + 29);
            *(void *)(v275 + 240) = *((void *)v276 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v279 = *v276;
            long long v280 = v276[1];
            long long v281 = v276[3];
            *(_OWORD *)(v275 + 32) = v276[2];
            *(_OWORD *)(v275 + 48) = v281;
            *(_OWORD *)unint64_t v275 = v279;
            *(_OWORD *)(v275 + 16) = v280;
            long long v282 = v276[4];
            long long v283 = v276[5];
            long long v284 = v276[7];
            *(_OWORD *)(v275 + 96) = v276[6];
            *(_OWORD *)(v275 + 112) = v284;
            *(_OWORD *)(v275 + 64) = v282;
            *(_OWORD *)(v275 + 80) = v283;
            long long v285 = v276[8];
            long long v286 = v276[9];
            long long v287 = v276[11];
            *(_OWORD *)(v275 + 160) = v276[10];
            *(_OWORD *)(v275 + 176) = v287;
            *(_OWORD *)(v275 + 128) = v285;
            *(_OWORD *)(v275 + 144) = v286;
            long long v288 = v276[12];
            long long v289 = v276[13];
            long long v290 = v276[14];
            *(void *)(v275 + 240) = *((void *)v276 + 30);
            *(_OWORD *)(v275 + 208) = v289;
            *(_OWORD *)(v275 + 224) = v290;
            *(_OWORD *)(v275 + 192) = v288;
            unint64_t v291 = v678;
          }
          size_t v393 = (_OWORD *)((v275 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v394 = (long long *)(((unint64_t)v276 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v395 = *v394;
          *(_OWORD *)((char *)v393 + 9) = *(long long *)((char *)v394 + 9);
          *size_t v393 = v395;
          unint64_t v396 = (v275 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v397 = ((unint64_t)v276 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v398 = *(_OWORD *)v397;
          *(unsigned char *)(v396 + 16) = *(unsigned char *)(v397 + 16);
          *(_OWORD *)unint64_t v396 = v398;
          uint64_t v399 = (void *)((v275 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v400 = ((unint64_t)v276 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v401 = *(void *)v400;
          v400 += 15;
          *uint64_t v399 = v401;
          unint64_t v402 = (void *)(((unint64_t)v399 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v403 = *(void *)(v400 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v404 = *(void *)((v400 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v403, v404);
          char v169 = 0;
          *unint64_t v402 = v403;
          v402[1] = v404;
          unint64_t v40 = a1;
          uint64_t v405 = (void *)(((unint64_t)a1 + v291 + 7) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v406 = (void *)((unint64_t)&a2[v291 + 7] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v405 = *v406;
          v405[1] = v406[1];
          uint64_t v34 = v712;
          break;
      }
      *((unsigned char *)v40 + v33) = v169;
      swift_bridgeObjectRetain();
      *((unsigned char *)v40 + v34) = 1;
    }
    else
    {
      unint64_t v87 = v677;
      unsigned int v88 = a2[v677];
      if (v88 >= 6 && v677 != 0) {
        unsigned int v88 = *(_DWORD *)a2 + 6;
      }
      unint64_t v90 = ~(unint64_t)v702;
      uint64_t v91 = ~v674;
      unint64_t v92 = ~(unint64_t)v696;
      switch(v88)
      {
        case 1u:
          unint64_t v670 = ~v711;
          unint64_t v708 = v680 + 16;
          uint64_t v713 = v34;
          unint64_t v176 = v40;
          long long v177 = *(void (**)(unint64_t, unint64_t, uint64_t))(v672 + 16);
          v177((unint64_t)v176, (unint64_t)a2, AssociatedTypeWitness);
          unint64_t v178 = ((unint64_t)v176 + v636) & v90;
          v683 = v177;
          unint64_t v687 = ~(unint64_t)v702;
          unint64_t v179 = (unint64_t)&a2[v636] & v90;
          v177(v178, v179, AssociatedTypeWitness);
          unint64_t v180 = (v178 + v652 + v674) & v91;
          unint64_t v181 = (v179 + v652 + v674) & v91;
          v665 = *(void (**)(unint64_t, unint64_t, uint64_t))(v647 + 16);
          v665(v180, v181, v638);
          long long v182 = (void *)((v635 + v180) & 0xFFFFFFFFFFFFFFF8);
          long long v183 = (void *)((v635 + v181) & 0xFFFFFFFFFFFFFFF8);
          void *v182 = *v183;
          unint64_t v184 = ((unint64_t)v182 + v637) & v92;
          unint64_t v691 = ~(unint64_t)v696;
          unint64_t v185 = ((unint64_t)v183 + v637) & v92;
          long long v186 = *(void (**)(unint64_t, unint64_t, uint64_t))(v649 + 16);
          swift_bridgeObjectRetain();
          v676 = v186;
          v186(v184, v185, v641);
          long long v187 = (void *)((v639 + v185) & 0xFFFFFFFFFFFFFFF8);
          long long v188 = (void *)((v639 + v184) & 0xFFFFFFFFFFFFFFF8);
          *long long v188 = *v187;
          unint64_t v189 = (void *)(((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v190 = (void *)(((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v189 = *v190;
          v189[1] = v190[1];
          long long v191 = (void *)(v643 + v180);
          *long long v191 = *(void *)(v643 + v181);
          v191[1] = *(void *)(v643 + v181 + 8);
          unint64_t v192 = (v719 + v643 + v180) & ~v35;
          unint64_t v193 = (v719 + v643 + v181) & ~v35;
          *(unsigned char *)unint64_t v192 = *(unsigned char *)v193;
          uint64_t v194 = v192 | 4;
          int v195 = *(_DWORD *)(v193 | 4);
          *(unsigned char *)(v194 + 4) = *(unsigned char *)((v193 | 4) + 4);
          *(_DWORD *)uint64_t v194 = v195;
          *(_WORD *)(v192 + 10) = *(_WORD *)(v193 + 0xA);
          unint64_t v196 = v192;
          unint64_t v197 = (v656 + v192) & v710;
          unint64_t v654 = v193;
          unint64_t v198 = (v656 + v193) & v710;
          long long v199 = *(void (**)(unint64_t, unint64_t, uint64_t))(v651 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v199(v197, v198, v663);
          unint64_t v200 = (v657 + v197) & v710;
          unint64_t v201 = (v657 + v198) & v710;
          v199(v200, v201, v663);
          uint64_t v202 = (unsigned char *)(v200 + v658);
          *uint64_t v202 = *(unsigned char *)(v201 + v658);
          v202[1] = *(unsigned char *)(v201 + v658 + 1);
          v202[2] = *(unsigned char *)(v201 + v658 + 2);
          v202[3] = *(unsigned char *)(v201 + v658 + 3);
          v202[4] = *(unsigned char *)(v201 + v658 + 4);
          unint64_t v203 = (v200 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v204 = (v201 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v203 = *(void *)v204;
          *(void *)(v203 + 8) = *(void *)(v204 + 8);
          *(unsigned char *)(v203 + 16) = *(unsigned char *)(v204 + 16);
          *(unsigned char *)(v203 + 17) = *(unsigned char *)(v204 + 17);
          *(unsigned char *)(v203 + 18) = *(unsigned char *)(v204 + 18);
          *(unsigned char *)(v203 + 19) = *(unsigned char *)(v204 + 19);
          unint64_t v205 = (v203 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v206 = (v204 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v205 = *(void *)v206;
          *(unsigned char *)(v205 + 8) = *(unsigned char *)(v206 + 8);
          *(unsigned char *)(v205 + 9) = *(unsigned char *)(v206 + 9);
          *(unsigned char *)(v205 + 10) = *(unsigned char *)(v206 + 10);
          *(unsigned char *)(v205 + 11) = *(unsigned char *)(v206 + 11);
          *(unsigned char *)(v205 + 12) = *(unsigned char *)(v206 + 12);
          unint64_t v207 = (void *)((v204 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v208 = (void *)((v203 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v208 = *v207;
          unint64_t v209 = ((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v210 = ((unint64_t)v207 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v209 = *(void *)v210;
          *(unsigned char *)(v209 + 8) = *(unsigned char *)(v210 + 8);
          *(unsigned char *)(v209 + 9) = *(unsigned char *)(v210 + 9);
          unint64_t v211 = (void *)((v659 + v209) & v710);
          unint64_t v212 = (const void *)((v659 + v210) & v710);
          long long v213 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v651 + 48);
          swift_bridgeObjectRetain();
          v662 = v213;
          if (v213(v212, 1, v663))
          {
            memcpy(v211, v212, __n);
          }
          else
          {
            v199((unint64_t)v211, (unint64_t)v212, v663);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v651 + 56))(v211, 0, 1, v663);
          }
          unint64_t v254 = (void *)(((unint64_t)v211 + v660) & 0xFFFFFFFFFFFFFFF8);
          long long v255 = (void *)(((unint64_t)v212 + v660) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v254 = *v255;
          unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v257 = ((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v258 = *(void *)v257;
          *(unsigned char *)(v256 + 8) = *(unsigned char *)(v257 + 8);
          *(void *)unint64_t v256 = v258;
          unint64_t v259 = (void *)(((unint64_t)v254 + 31) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v260 = (void *)(((unint64_t)v255 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v259 = *v260;
          unint64_t v261 = ((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8;
          size_t v262 = (uint64_t *)(((unint64_t)v260 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v263 = v262[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v264 = ~v35;
          uint64_t v265 = a1;
          if ((v263 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v261 = *(_OWORD *)v262;
          }
          else
          {
            uint64_t v343 = *v262;
            sub_24D3F9C18(*v262, v263);
            *(void *)unint64_t v261 = v343;
            *(void *)(v261 + 8) = v263;
          }
          v695 = v199;
          unint64_t v344 = (v261 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v345 = ((unint64_t)v262 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v346 = *(void *)v345;
          *(unsigned char *)(v344 + 8) = *(unsigned char *)(v345 + 8);
          *(void *)unint64_t v344 = v346;
          *(unsigned char *)(v344 + 9) = *(unsigned char *)(v345 + 9);
          unint64_t v347 = (v344 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v348 = (v345 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v349 = *(_DWORD *)v348;
          *(unsigned char *)(v347 + 4) = *(unsigned char *)(v348 + 4);
          *(_DWORD *)unint64_t v347 = v349;
          unint64_t v350 = (void *)((v344 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v351 = (void *)((v345 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v350 = *v351;
          v350[1] = v351[1];
          unint64_t v352 = v708 + v196;
          long long v353 = (long long *)(v708 + v654);
          unint64_t v354 = *(void *)(v708 + v654 + 16);
          if (v354 >= 0xFFFFFFFF) {
            LODWORD(v354) = -1;
          }
          int v355 = v354 - 1;
          swift_bridgeObjectRetain();
          if (v355 < 0)
          {
            *(void *)unint64_t v352 = *(void *)v353;
            *(unsigned char *)(v352 + 8) = *((unsigned char *)v353 + 8);
            *(unsigned char *)(v352 + 9) = *((unsigned char *)v353 + 9);
            unint64_t v387 = (void *)*((void *)v353 + 2);
            id v388 = v387;
            *(void *)(v352 + 16) = v387;
            int v389 = (void *)*((void *)v353 + 3);
            id v390 = v389;
            *(void *)(v352 + 24) = v389;
            *(unsigned char *)(v352 + 32) = *((unsigned char *)v353 + 32);
            *(unsigned char *)(v352 + 33) = *((unsigned char *)v353 + 33);
            *(unsigned char *)(v352 + 34) = *((unsigned char *)v353 + 34);
            *(void *)(v352 + 40) = *((void *)v353 + 5);
            *(void *)(v352 + 48) = *((void *)v353 + 6);
            *(void *)(v352 + 56) = *((void *)v353 + 7);
            *(void *)(v352 + 64) = *((void *)v353 + 8);
            *(unsigned char *)(v352 + 72) = *((unsigned char *)v353 + 72);
            *(void *)(v352 + 80) = *((void *)v353 + 10);
            *(void *)(v352 + 88) = *((void *)v353 + 11);
            v655 = (void *)*((void *)v353 + 12);
            *(void *)(v352 + 96) = v655;
            *(unsigned char *)(v352 + 104) = *((unsigned char *)v353 + 104);
            *(unsigned char *)(v352 + 105) = *((unsigned char *)v353 + 105);
            *(void *)(v352 + 112) = *((void *)v353 + 14);
            *(void *)(v352 + 120) = *((void *)v353 + 15);
            *(void *)(v352 + 128) = *((void *)v353 + 16);
            *(void *)(v352 + 136) = *((void *)v353 + 17);
            *(void *)(v352 + 144) = *((void *)v353 + 18);
            *(void *)(v352 + 152) = *((void *)v353 + 19);
            *(void *)(v352 + 160) = *((void *)v353 + 20);
            *(void *)(v352 + 168) = *((void *)v353 + 21);
            *(unsigned char *)(v352 + 176) = *((unsigned char *)v353 + 176);
            *(void *)(v352 + 184) = *((void *)v353 + 23);
            uint64_t v391 = *((void *)v353 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v392 = v655;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v391)
            {
              *(void *)(v352 + 192) = v391;
              *(void *)(v352 + 200) = *((void *)v353 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v352 + 192) = v353[12];
            }
            uint64_t v265 = a1;
            uint64_t v264 = ~v35;
            *(void *)(v352 + 208) = *((void *)v353 + 26);
            *(void *)(v352 + 216) = *((void *)v353 + 27);
            *(void *)(v352 + 224) = *((void *)v353 + 28);
            *(void *)(v352 + 232) = *((void *)v353 + 29);
            *(void *)(v352 + 240) = *((void *)v353 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v356 = *v353;
            long long v357 = v353[1];
            long long v358 = v353[3];
            *(_OWORD *)(v352 + 32) = v353[2];
            *(_OWORD *)(v352 + 48) = v358;
            *(_OWORD *)unint64_t v352 = v356;
            *(_OWORD *)(v352 + 16) = v357;
            long long v359 = v353[4];
            long long v360 = v353[5];
            long long v361 = v353[7];
            *(_OWORD *)(v352 + 96) = v353[6];
            *(_OWORD *)(v352 + 112) = v361;
            *(_OWORD *)(v352 + 64) = v359;
            *(_OWORD *)(v352 + 80) = v360;
            long long v362 = v353[8];
            long long v363 = v353[9];
            long long v364 = v353[11];
            *(_OWORD *)(v352 + 160) = v353[10];
            *(_OWORD *)(v352 + 176) = v364;
            *(_OWORD *)(v352 + 128) = v362;
            *(_OWORD *)(v352 + 144) = v363;
            long long v365 = v353[12];
            long long v366 = v353[13];
            long long v367 = v353[14];
            *(void *)(v352 + 240) = *((void *)v353 + 30);
            *(_OWORD *)(v352 + 208) = v366;
            *(_OWORD *)(v352 + 224) = v367;
            *(_OWORD *)(v352 + 192) = v365;
          }
          uint64_t v507 = (_OWORD *)((v352 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v508 = (long long *)(((unint64_t)v353 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v509 = *v508;
          *(_OWORD *)((char *)v507 + 9) = *(long long *)((char *)v508 + 9);
          *uint64_t v507 = v509;
          unint64_t v510 = (v352 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v511 = ((unint64_t)v353 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v512 = *(_OWORD *)v511;
          *(unsigned char *)(v510 + 16) = *(unsigned char *)(v511 + 16);
          *(_OWORD *)unint64_t v510 = v512;
          unsigned int v513 = (void *)((v352 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v514 = ((unint64_t)v353 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v515 = *(void *)v514;
          v514 += 15;
          *unsigned int v513 = v515;
          uint64_t v516 = (void *)(((unint64_t)v513 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v517 = *(void *)(v514 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v518 = *(void *)((v514 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v517, v518);
          *uint64_t v516 = v517;
          v516[1] = v518;
          unint64_t v519 = v265;
          unint64_t v520 = (unint64_t)&a2[v630] & v670;
          v683(((unint64_t)v265 + v630) & v670, v520, AssociatedTypeWitness);
          unint64_t v717 = ((unint64_t)v265 + v630) & v670;
          unint64_t v521 = (v636 + v717) & v687;
          unint64_t v671 = v520;
          unint64_t v522 = (v636 + v520) & v687;
          v683(v521, v522, AssociatedTypeWitness);
          unint64_t v523 = (v631 + v521) & v91;
          unint64_t v524 = (v631 + v522) & v91;
          v665(v523, v524, v638);
          uint64_t v525 = (void *)((v635 + v523) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v526 = (void *)((v635 + v524) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v525 = *v526;
          unint64_t v527 = ((unint64_t)v525 + v637) & v691;
          unint64_t v528 = ((unint64_t)v526 + v637) & v691;
          swift_bridgeObjectRetain();
          v676(v527, v528, v641);
          size_t v529 = (void *)((v639 + v527) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v530 = (void *)((v639 + v528) & 0xFFFFFFFFFFFFFFF8);
          void *v529 = *v530;
          uint64_t v531 = (void *)(((unint64_t)v529 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v532 = (void *)(((unint64_t)v530 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v531 = *v532;
          v531[1] = v532[1];
          uint64_t v533 = (void *)(v523 + v643);
          *uint64_t v533 = *(void *)(v524 + v643);
          v533[1] = *(void *)(v524 + v643 + 8);
          unint64_t v534 = (v719 + v523 + v643) & v264;
          unint64_t v535 = (v719 + v524 + v643) & v264;
          *(unsigned char *)unint64_t v534 = *(unsigned char *)v535;
          uint64_t v536 = v534 | 4;
          int v537 = *(_DWORD *)(v535 | 4);
          *(unsigned char *)(v536 + 4) = *(unsigned char *)((v535 | 4) + 4);
          *(_DWORD *)uint64_t v536 = v537;
          *(_WORD *)(v534 + 10) = *(_WORD *)(v535 + 0xA);
          unint64_t v538 = (v656 + v534) & v710;
          unint64_t v539 = (v656 + v535) & v710;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v695(v538, v539, v663);
          unint64_t v540 = (v657 + v538) & v710;
          unint64_t v541 = (v657 + v539) & v710;
          v695(v540, v541, v663);
          uint64_t v542 = (unsigned char *)(v540 + v658);
          *uint64_t v542 = *(unsigned char *)(v541 + v658);
          v542[1] = *(unsigned char *)(v541 + v658 + 1);
          v542[2] = *(unsigned char *)(v541 + v658 + 2);
          v542[3] = *(unsigned char *)(v541 + v658 + 3);
          v542[4] = *(unsigned char *)(v541 + v658 + 4);
          unint64_t v543 = (v540 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v544 = (v541 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v543 = *(void *)v544;
          *(void *)(v543 + 8) = *(void *)(v544 + 8);
          *(unsigned char *)(v543 + 16) = *(unsigned char *)(v544 + 16);
          *(unsigned char *)(v543 + 17) = *(unsigned char *)(v544 + 17);
          *(unsigned char *)(v543 + 18) = *(unsigned char *)(v544 + 18);
          *(unsigned char *)(v543 + 19) = *(unsigned char *)(v544 + 19);
          unint64_t v545 = (v543 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v546 = (v544 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v545 = *(void *)v546;
          *(unsigned char *)(v545 + 8) = *(unsigned char *)(v546 + 8);
          *(unsigned char *)(v545 + 9) = *(unsigned char *)(v546 + 9);
          *(unsigned char *)(v545 + 10) = *(unsigned char *)(v546 + 10);
          *(unsigned char *)(v545 + 11) = *(unsigned char *)(v546 + 11);
          *(unsigned char *)(v545 + 12) = *(unsigned char *)(v546 + 12);
          v547 = (void *)((v543 + 47) & 0xFFFFFFFFFFFFFFF8);
          v548 = (void *)((v544 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v547 = *v548;
          unint64_t v549 = ((unint64_t)v547 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v550 = ((unint64_t)v548 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v549 = *(void *)v550;
          *(unsigned char *)(v549 + 8) = *(unsigned char *)(v550 + 8);
          *(unsigned char *)(v549 + 9) = *(unsigned char *)(v550 + 9);
          v551 = (void *)((v659 + v549) & v710);
          v552 = (const void *)((v659 + v550) & v710);
          swift_bridgeObjectRetain();
          if (v662(v552, 1, v663))
          {
            memcpy(v551, v552, __n);
          }
          else
          {
            v695((unint64_t)v551, (unint64_t)v552, v663);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v651 + 56))(v551, 0, 1, v663);
          }
          v553 = (void *)(((unint64_t)v551 + v660) & 0xFFFFFFFFFFFFFFF8);
          v554 = (void *)(((unint64_t)v552 + v660) & 0xFFFFFFFFFFFFFFF8);
          void *v553 = *v554;
          unint64_t v555 = ((unint64_t)v553 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v556 = ((unint64_t)v554 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v557 = *(void *)v556;
          *(unsigned char *)(v555 + 8) = *(unsigned char *)(v556 + 8);
          *(void *)unint64_t v555 = v557;
          v558 = (void *)(((unint64_t)v553 + 31) & 0xFFFFFFFFFFFFFFF8);
          v559 = (void *)(((unint64_t)v554 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v558 = *v559;
          unint64_t v560 = ((unint64_t)v558 + 15) & 0xFFFFFFFFFFFFFFF8;
          v561 = (uint64_t *)(((unint64_t)v559 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v562 = v561[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v562 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v560 = *(_OWORD *)v561;
          }
          else
          {
            uint64_t v563 = *v561;
            sub_24D3F9C18(*v561, v562);
            *(void *)unint64_t v560 = v563;
            *(void *)(v560 + 8) = v562;
          }
          unint64_t v564 = (v560 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v565 = ((unint64_t)v561 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v566 = *(void *)v565;
          *(unsigned char *)(v564 + 8) = *(unsigned char *)(v565 + 8);
          *(void *)unint64_t v564 = v566;
          *(unsigned char *)(v564 + 9) = *(unsigned char *)(v565 + 9);
          unint64_t v567 = (v564 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v568 = (v565 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v569 = *(_DWORD *)v568;
          *(unsigned char *)(v567 + 4) = *(unsigned char *)(v568 + 4);
          *(_DWORD *)unint64_t v567 = v569;
          v570 = (void *)((v564 + 25) & 0xFFFFFFFFFFFFFFF8);
          v571 = (void *)((v565 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v570 = *v571;
          v570[1] = v571[1];
          unint64_t v572 = v534 + v708;
          unint64_t v573 = v535 + v708;
          unint64_t v574 = *(void *)(v535 + v708 + 16);
          if (v574 >= 0xFFFFFFFF) {
            LODWORD(v574) = -1;
          }
          int v575 = v574 - 1;
          swift_bridgeObjectRetain();
          if (v575 < 0)
          {
            *(void *)unint64_t v572 = *(void *)v573;
            *(unsigned char *)(v572 + 8) = *(unsigned char *)(v573 + 8);
            *(unsigned char *)(v572 + 9) = *(unsigned char *)(v573 + 9);
            v588 = *(void **)(v573 + 16);
            id v589 = v588;
            *(void *)(v572 + 16) = v588;
            v590 = *(void **)(v573 + 24);
            id v591 = v590;
            *(void *)(v572 + 24) = v590;
            *(unsigned char *)(v572 + 32) = *(unsigned char *)(v573 + 32);
            *(unsigned char *)(v572 + 33) = *(unsigned char *)(v573 + 33);
            *(unsigned char *)(v572 + 34) = *(unsigned char *)(v573 + 34);
            *(void *)(v572 + 40) = *(void *)(v573 + 40);
            *(void *)(v572 + 48) = *(void *)(v573 + 48);
            *(void *)(v572 + 56) = *(void *)(v573 + 56);
            *(void *)(v572 + 64) = *(void *)(v573 + 64);
            *(unsigned char *)(v572 + 72) = *(unsigned char *)(v573 + 72);
            *(void *)(v572 + 80) = *(void *)(v573 + 80);
            *(void *)(v572 + 88) = *(void *)(v573 + 88);
            v725 = *(void **)(v573 + 96);
            *(void *)(v572 + 96) = v725;
            *(unsigned char *)(v572 + 104) = *(unsigned char *)(v573 + 104);
            *(unsigned char *)(v572 + 105) = *(unsigned char *)(v573 + 105);
            *(void *)(v572 + 112) = *(void *)(v573 + 112);
            *(void *)(v572 + 120) = *(void *)(v573 + 120);
            *(void *)(v572 + 128) = *(void *)(v573 + 128);
            *(void *)(v572 + 136) = *(void *)(v573 + 136);
            *(void *)(v572 + 144) = *(void *)(v573 + 144);
            *(void *)(v572 + 152) = *(void *)(v573 + 152);
            *(void *)(v572 + 160) = *(void *)(v573 + 160);
            *(void *)(v572 + 168) = *(void *)(v573 + 168);
            *(unsigned char *)(v572 + 176) = *(unsigned char *)(v573 + 176);
            *(void *)(v572 + 184) = *(void *)(v573 + 184);
            uint64_t v592 = *(void *)(v573 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v593 = v725;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v592)
            {
              *(void *)(v572 + 192) = v592;
              *(void *)(v572 + 200) = *(void *)(v573 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v572 + 192) = *(_OWORD *)(v573 + 192);
            }
            unint64_t v40 = a1;
            *(void *)(v572 + 208) = *(void *)(v573 + 208);
            *(void *)(v572 + 216) = *(void *)(v573 + 216);
            *(void *)(v572 + 224) = *(void *)(v573 + 224);
            *(void *)(v572 + 232) = *(void *)(v573 + 232);
            *(void *)(v572 + 240) = *(void *)(v573 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v576 = *(_OWORD *)v573;
            long long v577 = *(_OWORD *)(v573 + 16);
            long long v578 = *(_OWORD *)(v573 + 48);
            *(_OWORD *)(v572 + 32) = *(_OWORD *)(v573 + 32);
            *(_OWORD *)(v572 + 48) = v578;
            *(_OWORD *)unint64_t v572 = v576;
            *(_OWORD *)(v572 + 16) = v577;
            long long v579 = *(_OWORD *)(v573 + 64);
            long long v580 = *(_OWORD *)(v573 + 80);
            long long v581 = *(_OWORD *)(v573 + 112);
            *(_OWORD *)(v572 + 96) = *(_OWORD *)(v573 + 96);
            *(_OWORD *)(v572 + 112) = v581;
            *(_OWORD *)(v572 + 64) = v579;
            *(_OWORD *)(v572 + 80) = v580;
            long long v582 = *(_OWORD *)(v573 + 128);
            long long v583 = *(_OWORD *)(v573 + 144);
            long long v584 = *(_OWORD *)(v573 + 176);
            *(_OWORD *)(v572 + 160) = *(_OWORD *)(v573 + 160);
            *(_OWORD *)(v572 + 176) = v584;
            *(_OWORD *)(v572 + 128) = v582;
            *(_OWORD *)(v572 + 144) = v583;
            long long v585 = *(_OWORD *)(v573 + 192);
            long long v586 = *(_OWORD *)(v573 + 208);
            long long v587 = *(_OWORD *)(v573 + 224);
            *(void *)(v572 + 240) = *(void *)(v573 + 240);
            *(_OWORD *)(v572 + 208) = v586;
            *(_OWORD *)(v572 + 224) = v587;
            *(_OWORD *)(v572 + 192) = v585;
            unint64_t v40 = v519;
          }
          v610 = (_OWORD *)((v572 + 255) & 0xFFFFFFFFFFFFFFF8);
          v611 = (long long *)((v573 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v612 = *v611;
          *(_OWORD *)((char *)v610 + 9) = *(long long *)((char *)v611 + 9);
          _OWORD *v610 = v612;
          unint64_t v613 = (v572 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v614 = (v573 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v615 = *(_OWORD *)v614;
          *(unsigned char *)(v613 + 16) = *(unsigned char *)(v614 + 16);
          *(_OWORD *)unint64_t v613 = v615;
          v616 = (void *)((v572 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v617 = (v573 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v618 = *(void *)v617;
          v617 += 15;
          void *v616 = v618;
          v619 = (void *)(((unint64_t)v616 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v620 = *(void *)(v617 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v621 = *(void *)((v617 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v620, v621);
          void *v619 = v620;
          v619[1] = v621;
          v622 = (void *)((v632 + v717) & 0xFFFFFFFFFFFFFFF8);
          v623 = (void *)((v632 + v671) & 0xFFFFFFFFFFFFFFF8);
          void *v622 = *v623;
          v624 = (void *)(((unint64_t)v622 + 15) & 0xFFFFFFFFFFFFFFF8);
          v625 = (void *)(((unint64_t)v623 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v624 = *v625;
          v624[1] = v625[1];
          char v216 = 1;
          goto LABEL_148;
        case 2u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v672 + 16))(v40, a2, AssociatedTypeWitness);
          *((unsigned char *)v40 + v652) = a2[v652];
          unint64_t v214 = ((unint64_t)v40 + v652) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v215 = (unint64_t)&a2[v652] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v214 + 8) = *(void *)(v215 + 8);
          *(void *)(v214 + 16) = *(void *)(v215 + 16);
          char v216 = 2;
          break;
        case 3u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v672 + 16))(v40, a2, AssociatedTypeWitness);
          long long v217 = (void *)(((unint64_t)v40 + v652 + 7) & 0xFFFFFFFFFFFFFFF8);
          long long v218 = (void *)((unint64_t)&a2[v652 + 7] & 0xFFFFFFFFFFFFFFF8);
          void *v217 = *v218;
          v217[1] = v218[1];
          char v216 = 3;
          break;
        case 4u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v672 + 16))(v40, a2, AssociatedTypeWitness);
          *((unsigned char *)v40 + v652) = a2[v652];
          unint64_t v219 = ((unint64_t)v40 + v652) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v220 = (unint64_t)&a2[v652] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v219 + 8) = *(void *)(v220 + 8);
          *(void *)(v219 + 16) = *(void *)(v220 + 16);
          char v216 = 4;
          break;
        case 5u:
          (*(void (**)(void *, unsigned __int8 *, uint64_t))(v672 + 16))(v40, a2, AssociatedTypeWitness);
          long long v221 = (void *)(((unint64_t)v40 + v652 + 7) & 0xFFFFFFFFFFFFFFF8);
          long long v222 = (void *)((unint64_t)&a2[v652 + 7] & 0xFFFFFFFFFFFFFFF8);
          *long long v221 = *v222;
          v221[1] = v222[1];
          char v216 = 5;
          break;
        default:
          unint64_t v706 = v680 + 16;
          uint64_t v713 = v34;
          long long v93 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v672 + 16);
          v93(v40, a2, AssociatedTypeWitness);
          unint64_t v94 = ((unint64_t)v40 + v636) & v90;
          unint64_t v95 = (unint64_t)&a2[v636] & v90;
          v93((void *)v94, (unsigned __int8 *)v95, AssociatedTypeWitness);
          unint64_t v96 = (v94 + v652 + v674) & v91;
          unint64_t v97 = (v95 + v652 + v674) & v91;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v647 + 16))(v96, v97, v638);
          long long v98 = (void *)((v635 + v96) & 0xFFFFFFFFFFFFFFF8);
          long long v99 = (void *)((v635 + v97) & 0xFFFFFFFFFFFFFFF8);
          *long long v98 = *v99;
          unint64_t v100 = ((unint64_t)v98 + v637) & v92;
          unint64_t v101 = ((unint64_t)v99 + v637) & v92;
          long long v102 = *(void (**)(unint64_t, unint64_t, uint64_t))(v649 + 16);
          swift_bridgeObjectRetain();
          v102(v100, v101, v641);
          long long v103 = (void *)((v639 + v101) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v104 = (void *)((v639 + v100) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v104 = *v103;
          unint64_t v105 = (void *)(((unint64_t)v104 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v106 = (void *)(((unint64_t)v103 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v105 = *v106;
          v105[1] = v106[1];
          long long v107 = (void *)(v643 + v96);
          *long long v107 = *(void *)(v643 + v97);
          v107[1] = *(void *)(v643 + v97 + 8);
          unint64_t v108 = (v719 + v643 + v96) & ~v35;
          unint64_t v109 = (v719 + v643 + v97) & ~v35;
          *(unsigned char *)unint64_t v108 = *(unsigned char *)v109;
          uint64_t v110 = v108 | 4;
          int v111 = *(_DWORD *)(v109 | 4);
          *(unsigned char *)(v110 + 4) = *(unsigned char *)((v109 | 4) + 4);
          *(_DWORD *)uint64_t v110 = v111;
          *(_WORD *)(v108 + 10) = *(_WORD *)(v109 + 0xA);
          unint64_t v721 = v108;
          unint64_t v112 = (v656 + v108) & v710;
          unint64_t v113 = (v656 + v109) & v710;
          unint64_t v114 = *(void (**)(unint64_t, unint64_t, uint64_t))(v651 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v114(v112, v113, v663);
          unint64_t v115 = (v657 + v112) & v710;
          unint64_t v116 = (v657 + v113) & v710;
          v114(v115, v116, v663);
          unint64_t v117 = (unsigned char *)(v115 + v658);
          unsigned char *v117 = *(unsigned char *)(v116 + v658);
          v117[1] = *(unsigned char *)(v116 + v658 + 1);
          v117[2] = *(unsigned char *)(v116 + v658 + 2);
          v117[3] = *(unsigned char *)(v116 + v658 + 3);
          v117[4] = *(unsigned char *)(v116 + v658 + 4);
          unint64_t v118 = (v115 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v119 = (v116 + v658 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v118 = *(void *)v119;
          *(void *)(v118 + 8) = *(void *)(v119 + 8);
          *(unsigned char *)(v118 + 16) = *(unsigned char *)(v119 + 16);
          *(unsigned char *)(v118 + 17) = *(unsigned char *)(v119 + 17);
          *(unsigned char *)(v118 + 18) = *(unsigned char *)(v119 + 18);
          *(unsigned char *)(v118 + 19) = *(unsigned char *)(v119 + 19);
          unint64_t v120 = (v118 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v121 = (v119 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v120 = *(void *)v121;
          *(unsigned char *)(v120 + 8) = *(unsigned char *)(v121 + 8);
          *(unsigned char *)(v120 + 9) = *(unsigned char *)(v121 + 9);
          *(unsigned char *)(v120 + 10) = *(unsigned char *)(v121 + 10);
          *(unsigned char *)(v120 + 11) = *(unsigned char *)(v121 + 11);
          *(unsigned char *)(v120 + 12) = *(unsigned char *)(v121 + 12);
          id v122 = (void *)((v119 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v123 = (void *)((v118 + 47) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v123 = *v122;
          unint64_t v124 = ((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v125 = ((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v124 = *(void *)v125;
          *(unsigned char *)(v124 + 8) = *(unsigned char *)(v125 + 8);
          *(unsigned char *)(v124 + 9) = *(unsigned char *)(v125 + 9);
          long long v126 = (void *)((v659 + v124) & v710);
          unint64_t v127 = (const void *)((v659 + v125) & v710);
          unint64_t v128 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v651 + 48);
          swift_bridgeObjectRetain();
          if (v128(v127, 1, v663))
          {
            memcpy(v126, v127, __n);
          }
          else
          {
            v114((unint64_t)v126, (unint64_t)v127, v663);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v651 + 56))(v126, 0, 1, v663);
          }
          unint64_t v233 = (void *)(((unint64_t)v126 + v660) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v234 = (void *)(((unint64_t)v127 + v660) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v233 = *v234;
          unint64_t v235 = ((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v236 = ((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v237 = *(void *)v236;
          *(unsigned char *)(v235 + 8) = *(unsigned char *)(v236 + 8);
          *(void *)unint64_t v235 = v237;
          long long v238 = (void *)(((unint64_t)v233 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v239 = (void *)(((unint64_t)v234 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v238 = *v239;
          unint64_t v240 = ((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v241 = (uint64_t *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v242 = v241[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v242 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v240 = *(_OWORD *)v241;
          }
          else
          {
            uint64_t v292 = *v241;
            sub_24D3F9C18(*v241, v242);
            *(void *)unint64_t v240 = v292;
            *(void *)(v240 + 8) = v242;
          }
          unint64_t v293 = (v240 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v294 = ((unint64_t)v241 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v295 = *(void *)v294;
          *(unsigned char *)(v293 + 8) = *(unsigned char *)(v294 + 8);
          *(void *)unint64_t v293 = v295;
          *(unsigned char *)(v293 + 9) = *(unsigned char *)(v294 + 9);
          unint64_t v296 = (v293 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v297 = (v294 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v298 = *(_DWORD *)v297;
          *(unsigned char *)(v296 + 4) = *(unsigned char *)(v297 + 4);
          *(_DWORD *)unint64_t v296 = v298;
          unint64_t v299 = (void *)((v293 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v300 = (void *)((v294 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v299 = *v300;
          v299[1] = v300[1];
          unint64_t v301 = v706 + v721;
          unint64_t v302 = v706 + v109;
          unint64_t v303 = *(void *)(v706 + v109 + 16);
          if (v303 >= 0xFFFFFFFF) {
            LODWORD(v303) = -1;
          }
          int v304 = v303 - 1;
          swift_bridgeObjectRetain();
          if (v304 < 0)
          {
            *(void *)unint64_t v301 = *(void *)v302;
            *(unsigned char *)(v301 + 8) = *(unsigned char *)(v302 + 8);
            *(unsigned char *)(v301 + 9) = *(unsigned char *)(v302 + 9);
            unint64_t v374 = *(void **)(v302 + 16);
            id v375 = v374;
            *(void *)(v301 + 16) = v374;
            uint64_t v376 = *(void **)(v302 + 24);
            id v377 = v376;
            *(void *)(v301 + 24) = v376;
            *(unsigned char *)(v301 + 32) = *(unsigned char *)(v302 + 32);
            *(unsigned char *)(v301 + 33) = *(unsigned char *)(v302 + 33);
            *(unsigned char *)(v301 + 34) = *(unsigned char *)(v302 + 34);
            *(void *)(v301 + 40) = *(void *)(v302 + 40);
            *(void *)(v301 + 48) = *(void *)(v302 + 48);
            *(void *)(v301 + 56) = *(void *)(v302 + 56);
            *(void *)(v301 + 64) = *(void *)(v302 + 64);
            *(unsigned char *)(v301 + 72) = *(unsigned char *)(v302 + 72);
            *(void *)(v301 + 80) = *(void *)(v302 + 80);
            *(void *)(v301 + 88) = *(void *)(v302 + 88);
            v723 = *(void **)(v302 + 96);
            *(void *)(v301 + 96) = v723;
            *(unsigned char *)(v301 + 104) = *(unsigned char *)(v302 + 104);
            *(unsigned char *)(v301 + 105) = *(unsigned char *)(v302 + 105);
            *(void *)(v301 + 112) = *(void *)(v302 + 112);
            *(void *)(v301 + 120) = *(void *)(v302 + 120);
            *(void *)(v301 + 128) = *(void *)(v302 + 128);
            *(void *)(v301 + 136) = *(void *)(v302 + 136);
            *(void *)(v301 + 144) = *(void *)(v302 + 144);
            *(void *)(v301 + 152) = *(void *)(v302 + 152);
            *(void *)(v301 + 160) = *(void *)(v302 + 160);
            *(void *)(v301 + 168) = *(void *)(v302 + 168);
            *(unsigned char *)(v301 + 176) = *(unsigned char *)(v302 + 176);
            *(void *)(v301 + 184) = *(void *)(v302 + 184);
            uint64_t v378 = *(void *)(v302 + 192);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v379 = v723;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v378)
            {
              *(void *)(v301 + 192) = v378;
              *(void *)(v301 + 200) = *(void *)(v302 + 200);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v301 + 192) = *(_OWORD *)(v302 + 192);
            }
            *(void *)(v301 + 208) = *(void *)(v302 + 208);
            *(void *)(v301 + 216) = *(void *)(v302 + 216);
            *(void *)(v301 + 224) = *(void *)(v302 + 224);
            *(void *)(v301 + 232) = *(void *)(v302 + 232);
            *(void *)(v301 + 240) = *(void *)(v302 + 240);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v305 = *(_OWORD *)v302;
            long long v306 = *(_OWORD *)(v302 + 16);
            long long v307 = *(_OWORD *)(v302 + 48);
            *(_OWORD *)(v301 + 32) = *(_OWORD *)(v302 + 32);
            *(_OWORD *)(v301 + 48) = v307;
            *(_OWORD *)unint64_t v301 = v305;
            *(_OWORD *)(v301 + 16) = v306;
            long long v308 = *(_OWORD *)(v302 + 64);
            long long v309 = *(_OWORD *)(v302 + 80);
            long long v310 = *(_OWORD *)(v302 + 112);
            *(_OWORD *)(v301 + 96) = *(_OWORD *)(v302 + 96);
            *(_OWORD *)(v301 + 112) = v310;
            *(_OWORD *)(v301 + 64) = v308;
            *(_OWORD *)(v301 + 80) = v309;
            long long v311 = *(_OWORD *)(v302 + 128);
            long long v312 = *(_OWORD *)(v302 + 144);
            long long v313 = *(_OWORD *)(v302 + 176);
            *(_OWORD *)(v301 + 160) = *(_OWORD *)(v302 + 160);
            *(_OWORD *)(v301 + 176) = v313;
            *(_OWORD *)(v301 + 128) = v311;
            *(_OWORD *)(v301 + 144) = v312;
            long long v314 = *(_OWORD *)(v302 + 192);
            long long v315 = *(_OWORD *)(v302 + 208);
            long long v316 = *(_OWORD *)(v302 + 224);
            *(void *)(v301 + 240) = *(void *)(v302 + 240);
            *(_OWORD *)(v301 + 208) = v315;
            *(_OWORD *)(v301 + 224) = v316;
            *(_OWORD *)(v301 + 192) = v314;
          }
          uint64_t v407 = (_OWORD *)((v301 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v408 = (long long *)((v302 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v409 = *v408;
          *(_OWORD *)((char *)v407 + 9) = *(long long *)((char *)v408 + 9);
          *uint64_t v407 = v409;
          unint64_t v410 = (v301 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v411 = (v302 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v412 = *(_OWORD *)v411;
          *(unsigned char *)(v410 + 16) = *(unsigned char *)(v411 + 16);
          *(_OWORD *)unint64_t v410 = v412;
          uint64_t v413 = (void *)((v301 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v414 = (v302 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v415 = *(void *)v414;
          v414 += 15;
          *uint64_t v413 = v415;
          uint64_t v416 = (void *)(((unint64_t)v413 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v417 = *(void *)(v414 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v418 = *(void *)((v414 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v417, v418);
          char v216 = 0;
          *uint64_t v416 = v417;
          v416[1] = v418;
          unint64_t v40 = a1;
          uint64_t v419 = (void *)(((unint64_t)a1 + v629 + 7) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v420 = (void *)((unint64_t)&a2[v629 + 7] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v419 = *v420;
          v419[1] = v420[1];
LABEL_148:
          uint64_t v34 = v713;
          unint64_t v87 = v677;
          break;
      }
      *((unsigned char *)v40 + v87) = v216;
      swift_bridgeObjectRetain();
      *((unsigned char *)v40 + v34) = 0;
    }
  }
  return v40;
}

uint64_t sub_24D998474(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v179 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v2 = *(unsigned __int8 *)(v179 + 80);
  uint64_t v140 = v1 + v2;
  uint64_t v143 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v143 - 8);
  uint64_t v150 = v3;
  int v4 = *(_DWORD *)(v3 + 80) & 0xF8;
  uint64_t v145 = swift_getAssociatedTypeWitness();
  uint64_t v151 = *(void *)(v145 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v151 + 80);
  uint64_t v6 = v4 | v5 | 7;
  uint64_t v135 = v1 + v6;
  uint64_t v138 = *(void *)(v3 + 64) + 7;
  uint64_t v139 = v5 + 8;
  uint64_t v156 = v5;
  unint64_t v147 = ((((*(void *)(v151 + 64) + 7 + ((v5 + 8 + (v138 & 0xFFFFFFFFFFFFFFF8)) & ~v5)) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v153 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v153 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = v8 | 7;
  uint64_t v194 = (v8 | 7) + 16;
  uint64_t v164 = v8 + 12;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v165 = v10 + v8;
  uint64_t v166 = v10 + 12;
  unint64_t v11 = (v8
       + 10
       + ((((((v10 + 12 + ((v10 + v8 + ((v8 + 12) & ~v8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8;
  uint64_t v182 = v7;
  if (!*(_DWORD *)(v7 + 84)) {
    ++v10;
  }
  uint64_t v167 = v8 + 10;
  uint64_t v168 = v10 + 7;
  unint64_t v183 = (((((((((v10 + 7 + v11) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (((v183 + 327 + ((v194 + v147 + ((v1 + v6 + ((v1 + v2) & ~v2)) & ~v6)) & ~(v8 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v159 = v2;
  uint64_t v14 = v6 | v2 | v8;
  unint64_t v134 = v12 + 16 + v14;
  unint64_t v15 = ((((v12 + 23 + (v134 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v16 = (v1 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v160 = v1;
  if (v16 <= ((v1 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = ((v1 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 > v13) {
    unint64_t v13 = v16;
  }
  if (v13 > v15) {
    unint64_t v15 = v13;
  }
  unint64_t v154 = v15;
  uint64_t v155 = v6 | v2 | v8;
  unint64_t v188 = v15 | 1;
  uint64_t v169 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(*(void *)(v169 - 8) + 64);
  uint64_t v177 = *(void *)(v169 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v177 + 80);
  uint64_t v136 = v17 + v18;
  uint64_t v137 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v137 - 8);
  uint64_t v149 = v19;
  int v20 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = v19;
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v21 - 8) + 80);
  uint64_t v24 = v20 | v23 | 7;
  uint64_t v25 = *(void *)(v22 + 64) + 7;
  uint64_t v26 = v23 + 8;
  unint64_t v27 = ((((*(void *)(*(void *)(v21 - 8) + 64) + 7 + ((v23 + 8 + (v25 & 0xFFFFFFFFFFFFFFF8)) & ~v23)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = (((v183 + 327 + ((v194 + v27 + ((v17 + v24 + ((v17 + v18) & ~v18)) & ~v24)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 23;
  unint64_t v30 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v31 = v28 + 16;
  uint64_t v32 = v18 | v8 | v24;
  unint64_t v33 = v31 + v32;
  unint64_t v34 = (v17 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v34 <= ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v34 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v34 > v30) {
    unint64_t v30 = v34;
  }
  if (v30 <= ((((v29 + ((v31 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v30 = ((((v29 + ((v31 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  uint64_t v35 = v30 | 1;
  if ((v30 | 1) <= v188) {
    uint64_t v35 = v188;
  }
  unsigned int v36 = a1[v35];
  unsigned int v37 = v36 - 2;
  if (v36 < 2)
  {
    unint64_t v39 = v183;
  }
  else
  {
    if (v35 <= 3) {
      uint64_t v38 = v35;
    }
    else {
      uint64_t v38 = 4;
    }
    unint64_t v39 = v183;
    switch(v38)
    {
      case 1:
        int v40 = *a1;
        if (v35 < 4) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 2:
        int v40 = *(unsigned __int16 *)a1;
        if (v35 < 4) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 3:
        int v40 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v35 < 4) {
          goto LABEL_26;
        }
        goto LABEL_30;
      case 4:
        int v40 = *(_DWORD *)a1;
        if (v35 < 4) {
LABEL_26:
        }
          unsigned int v36 = (v40 | (v37 << (8 * v35))) + 2;
        else {
LABEL_30:
        }
          unsigned int v36 = v40 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v41 = ~v9;
  uint64_t v42 = ~v8;
  if (v36 == 1)
  {
    unsigned int v43 = a1[v30];
    if (v43 >= 6 && v30 != 0) {
      unsigned int v43 = *(_DWORD *)a1 + 6;
    }
    uint64_t v45 = ~v18;
    uint64_t v46 = ~v24;
    uint64_t v47 = ~v23;
    uint64_t v48 = ~v32;
    switch(v43)
    {
      case 1u:
        uint64_t v142 = v48;
        unint64_t v144 = v33;
        uint64_t v152 = v17 + v24;
        uint64_t v187 = v41;
        unint64_t v190 = v39 + 16;
        uint64_t v68 = *(void (**)(unsigned __int8 *, uint64_t))(v177 + 8);
        unint64_t v181 = v27;
        uint64_t v175 = v21;
        uint64_t v184 = v17;
        uint64_t v69 = *(void *)(v21 - 8);
        uint64_t v162 = v47;
        uint64_t v173 = v26;
        uint64_t v70 = v25;
        v68(a1, v169);
        uint64_t v148 = v45;
        unint64_t v71 = (unint64_t)&a1[v136] & v45;
        uint64_t v146 = (void (*)(unint64_t, uint64_t))v68;
        v68((unsigned __int8 *)v71, v169);
        unint64_t v72 = (v71 + v184 + v24) & v46;
        unint64_t v73 = *(void (**)(unint64_t, uint64_t))(v149 + 8);
        v73(v72, v137);
        uint64_t v158 = v70;
        uint64_t v74 = ~v8;
        swift_bridgeObjectRelease();
        uint64_t v141 = *(void (**)(unint64_t, uint64_t))(v69 + 8);
        v141((v173 + ((v70 + v72) & 0xFFFFFFFFFFFFFFF8)) & v162, v175);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v75 = (v194 + v181 + v72) & v187;
        uint64_t v76 = (v164 + v75) & v42;
        unint64_t v77 = *(void (**)(uint64_t, uint64_t))(v182 + 8);
        v77(v76, v153);
        uint64_t v78 = (v165 + v76) & v74;
        unint64_t v79 = (void (*)(unint64_t, uint64_t))v77;
        v77(v78, v153);
        swift_bridgeObjectRelease();
        uint64_t v185 = v74;
        unint64_t v80 = (v167
             + ((((((v166 + v78) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v74;
        char v81 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v182 + 48);
        if (!v81(v80, 1, v153)) {
          v79(v80, v153);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v82 = (uint64_t *)((((((v168 + v80) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v83 = v82[1];
        if ((v83 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v82, v83);
        }
        swift_bridgeObjectRelease();
        unint64_t v84 = v75 + v190;
        unint64_t v85 = *(void **)(v75 + v190 + 16);
        LODWORD(v86) = -1;
        if ((unint64_t)v85 < 0xFFFFFFFF) {
          uint64_t v86 = *(void *)(v84 + 16);
        }
        unint64_t v87 = (void (*)(uint64_t, uint64_t))v79;
        if ((int)v86 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v84 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v84 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v84 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v88 = (unint64_t)&a1[v144] & v142;
        v146(v88, v169);
        v146((v136 + v88) & v148, v169);
        unint64_t v89 = (v152 + ((v136 + v88) & v148)) & ~v24;
        v73(v89, v137);
        swift_bridgeObjectRelease();
        v141((v173 + ((v158 + v89) & 0xFFFFFFFFFFFFFFF8)) & v162, v175);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v90 = (v194 + v89 + v181) & v187;
        v87((v164 + v90) & v185, v153);
        uint64_t v91 = (v165 + ((v164 + v90) & v185)) & v185;
        v87(v91, v153);
        swift_bridgeObjectRelease();
        unint64_t v92 = (v167
             + ((((((v166 + v91) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v185;
        if (!v81(v92, 1, v153)) {
          v87(v92, v153);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v93 = (uint64_t *)((((((v168 + v92) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v94 = v93[1];
        if ((v94 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v93, v94);
        }
        swift_bridgeObjectRelease();
        unint64_t v65 = v90 + v190;
        unint64_t v95 = *(void **)(v65 + 16);
        LODWORD(v96) = -1;
        if ((unint64_t)v95 < 0xFFFFFFFF) {
          uint64_t v96 = *(void *)(v65 + 16);
        }
        if ((int)v96 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v65 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_59;
      case 2u:
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v177 + 8))(a1, v169);
        break;
      case 3u:
      case 5u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v177 + 8))(a1, v169);
        break;
      default:
        uint64_t v186 = v41;
        unint64_t v189 = v39 + 16;
        unint64_t v54 = *(void (**)(unsigned __int8 *, uint64_t))(v177 + 8);
        unint64_t v180 = v27;
        uint64_t v174 = v21;
        uint64_t v55 = v17;
        uint64_t v56 = *(void *)(v21 - 8);
        uint64_t v161 = v47;
        uint64_t v172 = v26;
        uint64_t v157 = v25;
        v54(a1, v169);
        unint64_t v57 = (unint64_t)&a1[v136] & v45;
        v54((unsigned __int8 *)v57, v169);
        unint64_t v58 = (v57 + v55 + v24) & v46;
        (*(void (**)(unint64_t, uint64_t))(v149 + 8))(v58, v137);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v56 + 8))((v172 + ((v157 + v58) & 0xFFFFFFFFFFFFFFF8)) & v161, v174);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = (v194 + v180 + v58) & v186;
        char v60 = *(void (**)(uint64_t, uint64_t))(v182 + 8);
        v60((v164 + v59) & ~v8, v153);
        uint64_t v61 = (v165 + ((v164 + v59) & ~v8)) & ~v8;
        v60(v61, v153);
        swift_bridgeObjectRelease();
        unint64_t v62 = (v167
             + ((((((v166 + v61) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v8;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v182 + 48))(v62, 1, v153)) {
          v60(v62, v153);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v63 = (uint64_t *)((((((v168 + v62) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v64 = v63[1];
        if ((v64 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v63, v64);
        }
        swift_bridgeObjectRelease();
        unint64_t v65 = v59 + v189;
        uint64_t v66 = *(void **)(v65 + 16);
        LODWORD(v67) = -1;
        if ((unint64_t)v66 < 0xFFFFFFFF) {
          uint64_t v67 = *(void *)(v65 + 16);
        }
        if ((int)v67 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v65 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_59:
        sub_24D466534(*(void *)((((v65 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v65 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        break;
    }
  }
  else
  {
    unsigned int v49 = a1[v154];
    if (v49 >= 6 && v154 != 0) {
      unsigned int v49 = *(_DWORD *)a1 + 6;
    }
    uint64_t v51 = ~v159;
    uint64_t v52 = ~v6;
    uint64_t v53 = ~v156;
    switch(v49)
    {
      case 1u:
        unint64_t v192 = v39 + 16;
        uint64_t v110 = *(void (**)(unsigned __int8 *, uint64_t))(v179 + 8);
        uint64_t v111 = v41;
        v110(a1, AssociatedTypeWitness);
        unint64_t v170 = (void (*)(unint64_t, uint64_t))v110;
        v110((unsigned __int8 *)((unint64_t)&a1[v140] & v51), AssociatedTypeWitness);
        unint64_t v112 = (((unint64_t)&a1[v140] & v51) + v160 + v6) & v52;
        unint64_t v176 = *(void (**)(unint64_t, uint64_t))(v150 + 8);
        v176(v112, v143);
        swift_bridgeObjectRelease();
        unint64_t v163 = *(void (**)(unint64_t, uint64_t))(v151 + 8);
        v163((v139 + ((v138 + v112) & 0xFFFFFFFFFFFFFFF8)) & v53, v145);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v113 = (v194 + v147 + v112) & v111;
        unint64_t v114 = *(void (**)(unint64_t, uint64_t))(v182 + 8);
        v114((v164 + v113) & v42, v153);
        unint64_t v115 = (v165 + ((v164 + v113) & v42)) & v42;
        unint64_t v178 = v114;
        v114(v115, v153);
        swift_bridgeObjectRelease();
        unint64_t v116 = (v167
              + ((((((v166 + v115) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v42;
        unint64_t v117 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v182 + 48);
        if (!v117(v116, 1, v153)) {
          v178(v116, v153);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v118 = (uint64_t *)((((((v168 + v116) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v119 = v118[1];
        if ((v119 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v118, v119);
        }
        swift_bridgeObjectRelease();
        unint64_t v120 = v192 + v113;
        unint64_t v121 = *(void **)(v120 + 16);
        LODWORD(v122) = -1;
        if ((unint64_t)v121 < 0xFFFFFFFF) {
          uint64_t v122 = *(void *)(v120 + 16);
        }
        if ((int)v122 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v120 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v120 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v120 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        unint64_t v123 = (unint64_t)&a1[v134] & ~v155;
        v170(v123, AssociatedTypeWitness);
        v170((v140 + v123) & v51, AssociatedTypeWitness);
        unint64_t v124 = (v135 + ((v140 + v123) & v51)) & v52;
        v176(v124, v143);
        swift_bridgeObjectRelease();
        v163((v139 + ((v138 + v124) & 0xFFFFFFFFFFFFFFF8)) & v53, v145);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v125 = (v194 + v124 + v147) & v111;
        v178((v164 + v125) & v42, v153);
        unint64_t v126 = (v165 + ((v164 + v125) & v42)) & v42;
        v178(v126, v153);
        swift_bridgeObjectRelease();
        unint64_t v127 = (v167
              + ((((((v166 + v126) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v42;
        if (!v117(v127, 1, v153)) {
          v178(v127, v153);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v128 = (uint64_t *)((((((v168 + v127) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v129 = v128[1];
        if ((v129 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v128, v129);
        }
        swift_bridgeObjectRelease();
        unint64_t v130 = v125 + v192;
        unint64_t v131 = *(void **)(v125 + v192 + 16);
        LODWORD(v132) = -1;
        if ((unint64_t)v131 < 0xFFFFFFFF) {
          uint64_t v132 = *(void *)(v130 + 16);
        }
        if ((int)v132 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v130 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v130 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v130 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        break;
      case 2u:
      case 4u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v179 + 8))(a1, AssociatedTypeWitness);
        break;
      case 3u:
      case 5u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v179 + 8))(a1, AssociatedTypeWitness);
        break;
      default:
        unint64_t v191 = v39 + 16;
        unint64_t v97 = *(void (**)(unsigned __int8 *, uint64_t))(v179 + 8);
        uint64_t v98 = v41;
        v97(a1, AssociatedTypeWitness);
        v97((unsigned __int8 *)((unint64_t)&a1[v140] & v51), AssociatedTypeWitness);
        unint64_t v99 = (((unint64_t)&a1[v140] & v51) + v160 + v6) & v52;
        (*(void (**)(unint64_t, uint64_t))(v150 + 8))(v99, v143);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v151 + 8))((v139 + ((v138 + v99) & 0xFFFFFFFFFFFFFFF8)) & v53, v145);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v100 = (v194 + v147 + v99) & v98;
        unint64_t v101 = (v164 + v100) & v42;
        long long v102 = *(void (**)(unint64_t, uint64_t))(v182 + 8);
        v102(v101, v153);
        unint64_t v103 = (v165 + v101) & v42;
        v102(v103, v153);
        swift_bridgeObjectRelease();
        unint64_t v104 = (v167
              + ((((((v166 + v103) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v42;
        if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v182 + 48))(v104, 1, v153)) {
          v102(v104, v153);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v105 = (uint64_t *)((((((v168 + v104) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v106 = v105[1];
        if ((v106 & 0x3000000000000000) == 0) {
          sub_24D400DCC(*v105, v106);
        }
        swift_bridgeObjectRelease();
        unint64_t v107 = v191 + v100;
        unint64_t v108 = *(void **)(v107 + 16);
        LODWORD(v109) = -1;
        if ((unint64_t)v108 < 0xFFFFFFFF) {
          uint64_t v109 = *(void *)(v107 + 16);
        }
        if ((int)v109 - 1 < 0)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v107 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)((((v107 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v107 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
        break;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D999D20(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v692 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v692 + 80);
  uint64_t v647 = v2 + v3;
  uint64_t v651 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v651 - 8);
  uint64_t v660 = v4;
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v655 = swift_getAssociatedTypeWitness();
  uint64_t v664 = *(void *)(v655 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v664 + 80);
  uint64_t v7 = v5 | v6 | 7;
  uint64_t v641 = v2 + v7;
  uint64_t v646 = *(void *)(v4 + 64) + 7;
  uint64_t v649 = v6 + 8;
  uint64_t v678 = v6;
  uint64_t v653 = *(void *)(v664 + 64) + 7;
  unint64_t v657 = ((((v653 + ((v6 + 8 + (v646 & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v685 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v685 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v711 = v9 | 7;
  uint64_t v725 = (v9 | 7) + 16;
  uint64_t v669 = v9 + 12;
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v670 = v10 + v9;
  uint64_t v671 = v10;
  uint64_t v672 = v9 + 10;
  uint64_t v665 = v8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v11 = *(void *)(*(void *)(v685 - 8) + 64);
  }
  else {
    size_t v11 = v10 + 1;
  }
  size_t __n = v11;
  size_t v673 = v11 + 7;
  unint64_t v716 = (((((((((v11
                + 7
                + ((v9
                  + 10
                  + ((((((v10 + ((v10 + v9 + ((v9 + 12) & ~v9)) & ~v9) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v701 = v7;
  unint64_t v12 = (((v716 + 327 + ((v725 + v657 + ((v2 + v7 + ((v2 + v3) & ~v3)) & ~v7)) & ~(v9 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v681 = v3;
  uint64_t v14 = v7 | v3 | v9;
  unint64_t v636 = v12 + 16;
  unint64_t v639 = v12 + 16 + v14;
  uint64_t v674 = v14;
  unint64_t v635 = v12 + 23;
  unint64_t v15 = ((((v12 + 23 + (v639 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v16 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v666 = v2;
  if (v16 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 > v13) {
    unint64_t v13 = v16;
  }
  if (v13 > v15) {
    unint64_t v15 = v13;
  }
  unint64_t v698 = v15;
  unint64_t v706 = v15 | 1;
  uint64_t v687 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(*(void *)(v687 - 8) + 64);
  uint64_t v696 = *(void *)(v687 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v696 + 80);
  uint64_t v643 = v17 + v18;
  uint64_t v644 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v644 - 8);
  uint64_t v662 = v19;
  int v20 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = v19;
  uint64_t v24 = v17;
  uint64_t v25 = *(unsigned __int8 *)(v22 + 80);
  uint64_t v26 = v20 | v25 | 7;
  uint64_t v27 = v17 + v26;
  uint64_t v28 = *(void *)(v23 + 64) + 7;
  uint64_t v29 = v25 + 8;
  unint64_t v30 = ((((*(void *)(v22 + 64) + 7 + ((v25 + 8 + (v28 & 0xFFFFFFFFFFFFFFF8)) & ~v25)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v31 = (((v716 + 327 + ((v725 + v30 + ((v17 + v26 + ((v17 + v18) & ~v18)) & ~v26)) & ~v711)) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = v31 + 23;
  unint64_t v33 = ((v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v34 = v31 + 16;
  uint64_t v35 = v18 | v9 | v26;
  unint64_t v36 = v34 + v35;
  unint64_t v37 = (v17 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v37 <= ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v37 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v37 > v33) {
    unint64_t v33 = v37;
  }
  if (v33 <= ((((v32 + ((v34 + v35) & ~v35)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v38 = ((((v32 + ((v34 + v35) & ~v35)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v38 = v33;
  }
  if ((v38 | 1) <= v706) {
    uint64_t v39 = v706;
  }
  else {
    uint64_t v39 = v38 | 1;
  }
  unsigned int v40 = a2[v39];
  unsigned int v41 = v40 - 2;
  if (v40 < 2)
  {
    uint64_t v43 = a1;
  }
  else
  {
    if (v39 <= 3) {
      uint64_t v42 = v39;
    }
    else {
      uint64_t v42 = 4;
    }
    uint64_t v43 = a1;
    switch(v42)
    {
      case 1:
        int v44 = *a2;
        if (v39 < 4) {
          goto LABEL_31;
        }
        goto LABEL_33;
      case 2:
        int v44 = *(unsigned __int16 *)a2;
        if (v39 >= 4) {
          goto LABEL_33;
        }
        goto LABEL_31;
      case 3:
        int v44 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v39 < 4) {
          goto LABEL_31;
        }
        goto LABEL_33;
      case 4:
        int v44 = *(_DWORD *)a2;
        if (v39 < 4) {
LABEL_31:
        }
          unsigned int v40 = (v44 | (v41 << (8 * v39))) + 2;
        else {
LABEL_33:
        }
          unsigned int v40 = v44 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v45 = ~v9;
  if (v40 == 1)
  {
    unsigned int v46 = a2[v38];
    if (v46 >= 6 && v38 != 0) {
      unsigned int v46 = *(_DWORD *)a2 + 6;
    }
    uint64_t v48 = ~v25;
    uint64_t v49 = ~v35;
    switch(v46)
    {
      case 1u:
        uint64_t v652 = v49;
        unint64_t v637 = v36;
        unint64_t v640 = v32;
        uint64_t v667 = v27;
        unint64_t v683 = v38;
        unint64_t v719 = v716 + 16;
        uint64_t v709 = v39;
        unint64_t v131 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v696 + 16);
        uint64_t v694 = v21;
        uint64_t v632 = *(void *)(*(void *)(v21 - 8) + 64) + 7;
        uint64_t v703 = *(void *)(v21 - 8);
        uint64_t v704 = ~v9;
        uint64_t v714 = ~v711;
        unint64_t v700 = v30;
        uint64_t v691 = v29;
        uint64_t v132 = v28;
        uint64_t v133 = v48;
        v131(v43, a2, v687);
        uint64_t v134 = (v643 + v43) & ~v18;
        uint64_t v656 = ~v18;
        unint64_t v135 = (unint64_t)&a2[v643] & ~v18;
        unint64_t v654 = (void (*)(unint64_t, unint64_t, uint64_t))v131;
        v131(v134, (unsigned __int8 *)v135, v687);
        uint64_t v136 = (v134 + v24 + v26) & ~v26;
        uint64_t v658 = ~v26;
        unint64_t v137 = (v135 + v24 + v26) & ~v26;
        v648 = *(void (**)(uint64_t, unint64_t, uint64_t))(v662 + 16);
        v648(v136, v137, v644);
        uint64_t v138 = (void *)((v132 + v136) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v676 = v132;
        uint64_t v139 = (void *)((v132 + v137) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v138 = *v139;
        unint64_t v140 = ((unint64_t)v138 + v691) & v133;
        unint64_t v141 = ((unint64_t)v139 + v691) & v133;
        uint64_t v142 = *(void (**)(unint64_t, unint64_t, uint64_t))(v703 + 16);
        swift_bridgeObjectRetain();
        unint64_t v650 = v142;
        v142(v140, v141, v694);
        uint64_t v143 = (void *)((v632 + v141) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v144 = (void *)((v632 + v140) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v144 = *v143;
        uint64_t v145 = (void *)(((unint64_t)v144 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v146 = (void *)(((unint64_t)v143 + 15) & 0xFFFFFFFFFFFFFFF8);
        void *v145 = *v146;
        v145[1] = v146[1];
        unint64_t v147 = (void *)(v700 + v136);
        void *v147 = *(void *)(v700 + v137);
        v147[1] = *(void *)(v700 + v137 + 8);
        uint64_t v148 = (v725 + v700 + v136) & v714;
        uint64_t v149 = (v725 + v700 + v137) & v714;
        *(unsigned char *)uint64_t v148 = *(unsigned char *)v149;
        uint64_t v150 = v148 | 4;
        int v151 = *(_DWORD *)(v149 | 4);
        *(unsigned char *)(v150 + 4) = *(unsigned char *)((v149 | 4) + 4);
        *(_DWORD *)uint64_t v150 = v151;
        *(_WORD *)(v148 + 10) = *(_WORD *)(v149 + 0xA);
        uint64_t v152 = (v669 + v148) & v704;
        uint64_t v153 = (v669 + v149) & v704;
        unint64_t v154 = *(void (**)(uint64_t, uint64_t, uint64_t))(v665 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v154(v152, v153, v685);
        uint64_t v155 = (v670 + v152) & v704;
        uint64_t v156 = (v670 + v153) & v704;
        v154(v155, v156, v685);
        uint64_t v157 = (unsigned char *)(v155 + v671);
        *uint64_t v157 = *(unsigned char *)(v156 + v671);
        v157[1] = *(unsigned char *)(v156 + v671 + 1);
        v157[2] = *(unsigned char *)(v156 + v671 + 2);
        v157[3] = *(unsigned char *)(v156 + v671 + 3);
        v157[4] = *(unsigned char *)(v156 + v671 + 4);
        unint64_t v158 = (v155 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v159 = (v156 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v158 = *(void *)v159;
        *(void *)(v158 + 8) = *(void *)(v159 + 8);
        *(unsigned char *)(v158 + 16) = *(unsigned char *)(v159 + 16);
        *(unsigned char *)(v158 + 17) = *(unsigned char *)(v159 + 17);
        *(unsigned char *)(v158 + 18) = *(unsigned char *)(v159 + 18);
        *(unsigned char *)(v158 + 19) = *(unsigned char *)(v159 + 19);
        unint64_t v160 = (v158 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v161 = (v159 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v160 = *(void *)v161;
        *(unsigned char *)(v160 + 8) = *(unsigned char *)(v161 + 8);
        *(unsigned char *)(v160 + 9) = *(unsigned char *)(v161 + 9);
        *(unsigned char *)(v160 + 10) = *(unsigned char *)(v161 + 10);
        *(unsigned char *)(v160 + 11) = *(unsigned char *)(v161 + 11);
        *(unsigned char *)(v160 + 12) = *(unsigned char *)(v161 + 12);
        uint64_t v162 = (void *)((v159 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v163 = (void *)((v158 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v163 = *v162;
        unint64_t v164 = ((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v165 = ((unint64_t)v162 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v164 = *(void *)v165;
        *(unsigned char *)(v164 + 8) = *(unsigned char *)(v165 + 8);
        *(unsigned char *)(v164 + 9) = *(unsigned char *)(v165 + 9);
        uint64_t v166 = (void *)((v672 + v164) & v704);
        uint64_t v167 = (const void *)((v672 + v165) & v704);
        uint64_t v168 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v665 + 48);
        swift_bridgeObjectRetain();
        v642 = v168;
        v661 = v154;
        if (v168(v167, 1, v685))
        {
          memcpy(v166, v167, __n);
        }
        else
        {
          v154((uint64_t)v166, (uint64_t)v167, v685);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v665 + 56))(v166, 0, 1, v685);
        }
        long long v243 = (void *)(((unint64_t)v166 + v673) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v244 = (void *)(((unint64_t)v167 + v673) & 0xFFFFFFFFFFFFFFF8);
        *long long v243 = *v244;
        unint64_t v245 = ((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v246 = ((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v247 = *(void *)v246;
        *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
        *(void *)unint64_t v245 = v247;
        unint64_t v248 = (void *)(((unint64_t)v243 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v249 = (void *)(((unint64_t)v244 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v248 = *v249;
        unint64_t v250 = ((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v251 = (uint64_t *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v252 = v251[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v43 = a1;
        if ((v252 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v250 = *(_OWORD *)v251;
        }
        else
        {
          uint64_t v316 = *v251;
          sub_24D3F9C18(*v251, v252);
          *(void *)unint64_t v250 = v316;
          *(void *)(v250 + 8) = v252;
        }
        unint64_t v317 = (v250 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v318 = ((unint64_t)v251 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v319 = *(void *)v318;
        *(unsigned char *)(v317 + 8) = *(unsigned char *)(v318 + 8);
        *(void *)unint64_t v317 = v319;
        *(unsigned char *)(v317 + 9) = *(unsigned char *)(v318 + 9);
        unint64_t v320 = (v317 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v321 = (v318 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v322 = *(_DWORD *)v321;
        *(unsigned char *)(v320 + 4) = *(unsigned char *)(v321 + 4);
        *(_DWORD *)unint64_t v320 = v322;
        int v323 = (void *)((v317 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v324 = (void *)((v318 + 25) & 0xFFFFFFFFFFFFFFF8);
        *int v323 = *v324;
        v323[1] = v324[1];
        unint64_t v325 = v148 + v719;
        unint64_t v326 = v149 + v719;
        unint64_t v327 = *(void *)(v326 + 16);
        if (v327 >= 0xFFFFFFFF) {
          LODWORD(v327) = -1;
        }
        int v328 = v327 - 1;
        swift_bridgeObjectRetain();
        uint64_t v329 = v685;
        if (v328 < 0)
        {
          *(void *)unint64_t v325 = *(void *)v326;
          *(unsigned char *)(v325 + 8) = *(unsigned char *)(v326 + 8);
          *(unsigned char *)(v325 + 9) = *(unsigned char *)(v326 + 9);
          id v381 = *(void **)(v326 + 16);
          id v382 = v381;
          *(void *)(v325 + 16) = v381;
          id v383 = *(void **)(v326 + 24);
          id v384 = v383;
          *(void *)(v325 + 24) = v383;
          *(unsigned char *)(v325 + 32) = *(unsigned char *)(v326 + 32);
          *(unsigned char *)(v325 + 33) = *(unsigned char *)(v326 + 33);
          *(unsigned char *)(v325 + 34) = *(unsigned char *)(v326 + 34);
          *(void *)(v325 + 40) = *(void *)(v326 + 40);
          *(void *)(v325 + 48) = *(void *)(v326 + 48);
          *(void *)(v325 + 56) = *(void *)(v326 + 56);
          *(void *)(v325 + 64) = *(void *)(v326 + 64);
          *(unsigned char *)(v325 + 72) = *(unsigned char *)(v326 + 72);
          *(void *)(v325 + 80) = *(void *)(v326 + 80);
          *(void *)(v325 + 88) = *(void *)(v326 + 88);
          uint64_t v385 = *(void **)(v326 + 96);
          *(void *)(v325 + 96) = v385;
          *(unsigned char *)(v325 + 104) = *(unsigned char *)(v326 + 104);
          *(unsigned char *)(v325 + 105) = *(unsigned char *)(v326 + 105);
          *(void *)(v325 + 112) = *(void *)(v326 + 112);
          *(void *)(v325 + 120) = *(void *)(v326 + 120);
          *(void *)(v325 + 128) = *(void *)(v326 + 128);
          *(void *)(v325 + 136) = *(void *)(v326 + 136);
          *(void *)(v325 + 144) = *(void *)(v326 + 144);
          *(void *)(v325 + 152) = *(void *)(v326 + 152);
          *(void *)(v325 + 160) = *(void *)(v326 + 160);
          *(void *)(v325 + 168) = *(void *)(v326 + 168);
          *(unsigned char *)(v325 + 176) = *(unsigned char *)(v326 + 176);
          *(void *)(v325 + 184) = *(void *)(v326 + 184);
          uint64_t v386 = *(void *)(v326 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v387 = v385;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v386)
          {
            *(void *)(v325 + 192) = v386;
            *(void *)(v325 + 200) = *(void *)(v326 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v325 + 192) = *(_OWORD *)(v326 + 192);
          }
          uint64_t v43 = a1;
          uint64_t v329 = v685;
          unint64_t v342 = v637;
          *(void *)(v325 + 208) = *(void *)(v326 + 208);
          *(void *)(v325 + 216) = *(void *)(v326 + 216);
          *(void *)(v325 + 224) = *(void *)(v326 + 224);
          *(void *)(v325 + 232) = *(void *)(v326 + 232);
          *(void *)(v325 + 240) = *(void *)(v326 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v330 = *(_OWORD *)v326;
          long long v331 = *(_OWORD *)(v326 + 16);
          long long v332 = *(_OWORD *)(v326 + 48);
          *(_OWORD *)(v325 + 32) = *(_OWORD *)(v326 + 32);
          *(_OWORD *)(v325 + 48) = v332;
          *(_OWORD *)unint64_t v325 = v330;
          *(_OWORD *)(v325 + 16) = v331;
          long long v333 = *(_OWORD *)(v326 + 64);
          long long v334 = *(_OWORD *)(v326 + 80);
          long long v335 = *(_OWORD *)(v326 + 112);
          *(_OWORD *)(v325 + 96) = *(_OWORD *)(v326 + 96);
          *(_OWORD *)(v325 + 112) = v335;
          *(_OWORD *)(v325 + 64) = v333;
          *(_OWORD *)(v325 + 80) = v334;
          long long v336 = *(_OWORD *)(v326 + 128);
          long long v337 = *(_OWORD *)(v326 + 144);
          long long v338 = *(_OWORD *)(v326 + 176);
          *(_OWORD *)(v325 + 160) = *(_OWORD *)(v326 + 160);
          *(_OWORD *)(v325 + 176) = v338;
          *(_OWORD *)(v325 + 128) = v336;
          *(_OWORD *)(v325 + 144) = v337;
          long long v339 = *(_OWORD *)(v326 + 192);
          long long v340 = *(_OWORD *)(v326 + 208);
          long long v341 = *(_OWORD *)(v326 + 224);
          *(void *)(v325 + 240) = *(void *)(v326 + 240);
          *(_OWORD *)(v325 + 208) = v340;
          *(_OWORD *)(v325 + 224) = v341;
          *(_OWORD *)(v325 + 192) = v339;
          unint64_t v342 = v637;
        }
        unint64_t v422 = (_OWORD *)((v325 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v423 = (long long *)((v326 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v424 = *v423;
        *(_OWORD *)((char *)v422 + 9) = *(long long *)((char *)v423 + 9);
        *unint64_t v422 = v424;
        unint64_t v425 = (v325 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v426 = (v326 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v427 = *(_OWORD *)v426;
        *(unsigned char *)(v425 + 16) = *(unsigned char *)(v426 + 16);
        *(_OWORD *)unint64_t v425 = v427;
        unint64_t v428 = (void *)((v325 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v429 = (v326 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v430 = *(void *)v429;
        v429 += 15;
        void *v428 = v430;
        uint64_t v431 = (void *)(((unint64_t)v428 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v432 = *(void *)(v429 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v433 = *(void *)((v429 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v432, v433);
        *uint64_t v431 = v432;
        v431[1] = v433;
        unint64_t v434 = (unint64_t)&a2[v342] & v652;
        v654((v342 + v43) & v652, v434, v687);
        uint64_t v722 = (v342 + v43) & v652;
        uint64_t v435 = (v643 + v722) & v656;
        unint64_t v686 = v434;
        unint64_t v436 = (v643 + v434) & v656;
        v654(v435, v436, v687);
        uint64_t v437 = (v667 + v435) & v658;
        unint64_t v438 = (v667 + v436) & v658;
        v648(v437, v438, v644);
        uint64_t v439 = (void *)((v676 + v437) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v440 = (void *)((v676 + v438) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v439 = *v440;
        unint64_t v441 = ((unint64_t)v439 + v691) & v133;
        unint64_t v442 = ((unint64_t)v440 + v691) & v133;
        swift_bridgeObjectRetain();
        v650(v441, v442, v694);
        uint64_t v443 = (void *)((v632 + v441) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v444 = (void *)((v632 + v442) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v443 = *v444;
        uint64_t v445 = (void *)(((unint64_t)v443 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v446 = (void *)(((unint64_t)v444 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v445 = *v446;
        v445[1] = v446[1];
        unint64_t v447 = (void *)(v437 + v700);
        *unint64_t v447 = *(void *)(v438 + v700);
        v447[1] = *(void *)(v438 + v700 + 8);
        uint64_t v448 = (v725 + v437 + v700) & v714;
        uint64_t v449 = (v725 + v438 + v700) & v714;
        *(unsigned char *)uint64_t v448 = *(unsigned char *)v449;
        uint64_t v450 = v448 | 4;
        int v451 = *(_DWORD *)(v449 | 4);
        *(unsigned char *)(v450 + 4) = *(unsigned char *)((v449 | 4) + 4);
        *(_DWORD *)uint64_t v450 = v451;
        *(_WORD *)(v448 + 10) = *(_WORD *)(v449 + 0xA);
        uint64_t v730 = v448;
        uint64_t v452 = (v669 + v448) & v704;
        uint64_t v453 = (v669 + v449) & v704;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v661(v452, v453, v329);
        uint64_t v454 = (v670 + v452) & v704;
        uint64_t v455 = (v670 + v453) & v704;
        v661(v454, v455, v329);
        unint64_t v456 = (unsigned char *)(v454 + v671);
        *unint64_t v456 = *(unsigned char *)(v455 + v671);
        v456[1] = *(unsigned char *)(v455 + v671 + 1);
        v456[2] = *(unsigned char *)(v455 + v671 + 2);
        v456[3] = *(unsigned char *)(v455 + v671 + 3);
        v456[4] = *(unsigned char *)(v455 + v671 + 4);
        unint64_t v457 = (v454 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v458 = (v455 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v457 = *(void *)v458;
        *(void *)(v457 + 8) = *(void *)(v458 + 8);
        *(unsigned char *)(v457 + 16) = *(unsigned char *)(v458 + 16);
        *(unsigned char *)(v457 + 17) = *(unsigned char *)(v458 + 17);
        *(unsigned char *)(v457 + 18) = *(unsigned char *)(v458 + 18);
        *(unsigned char *)(v457 + 19) = *(unsigned char *)(v458 + 19);
        unint64_t v459 = (v457 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v460 = (v458 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v459 = *(void *)v460;
        *(unsigned char *)(v459 + 8) = *(unsigned char *)(v460 + 8);
        *(unsigned char *)(v459 + 9) = *(unsigned char *)(v460 + 9);
        *(unsigned char *)(v459 + 10) = *(unsigned char *)(v460 + 10);
        *(unsigned char *)(v459 + 11) = *(unsigned char *)(v460 + 11);
        *(unsigned char *)(v459 + 12) = *(unsigned char *)(v460 + 12);
        uint64_t v461 = (void *)((v457 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v462 = (void *)((v458 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v461 = *v462;
        unint64_t v463 = ((unint64_t)v461 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v464 = ((unint64_t)v462 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v463 = *(void *)v464;
        *(unsigned char *)(v463 + 8) = *(unsigned char *)(v464 + 8);
        *(unsigned char *)(v463 + 9) = *(unsigned char *)(v464 + 9);
        unint64_t v465 = (void *)((v672 + v463) & v704);
        uint64_t v466 = (const void *)((v672 + v464) & v704);
        swift_bridgeObjectRetain();
        if (v642(v466, 1, v329))
        {
          memcpy(v465, v466, __n);
        }
        else
        {
          v661((uint64_t)v465, (uint64_t)v466, v329);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v665 + 56))(v465, 0, 1, v329);
        }
        unint64_t v467 = v683;
        unint64_t v468 = (void *)(((unint64_t)v465 + v673) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v469 = (void *)(((unint64_t)v466 + v673) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v468 = *v469;
        unint64_t v470 = ((unint64_t)v468 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v471 = ((unint64_t)v469 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v472 = *(void *)v471;
        *(unsigned char *)(v470 + 8) = *(unsigned char *)(v471 + 8);
        *(void *)unint64_t v470 = v472;
        unint64_t v473 = (void *)(((unint64_t)v468 + 31) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v474 = (void *)(((unint64_t)v469 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v473 = *v474;
        unint64_t v475 = ((unint64_t)v473 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v476 = (uint64_t *)(((unint64_t)v474 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v477 = v476[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v477 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v475 = *(_OWORD *)v476;
        }
        else
        {
          uint64_t v478 = *v476;
          sub_24D3F9C18(*v476, v477);
          *(void *)unint64_t v475 = v478;
          *(void *)(v475 + 8) = v477;
        }
        unint64_t v479 = (v475 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v480 = ((unint64_t)v476 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v481 = *(void *)v480;
        *(unsigned char *)(v479 + 8) = *(unsigned char *)(v480 + 8);
        *(void *)unint64_t v479 = v481;
        *(unsigned char *)(v479 + 9) = *(unsigned char *)(v480 + 9);
        unint64_t v482 = (v479 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v483 = (v480 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v484 = *(_DWORD *)v483;
        *(unsigned char *)(v482 + 4) = *(unsigned char *)(v483 + 4);
        *(_DWORD *)unint64_t v482 = v484;
        unint64_t v485 = (void *)((v479 + 25) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v486 = (void *)((v480 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v485 = *v486;
        v485[1] = v486[1];
        unint64_t v487 = v730 + v719;
        unint64_t v488 = v449 + v719;
        unint64_t v489 = *(void *)(v449 + v719 + 16);
        if (v489 >= 0xFFFFFFFF) {
          LODWORD(v489) = -1;
        }
        int v490 = v489 - 1;
        swift_bridgeObjectRetain();
        if (v490 < 0)
        {
          *(void *)unint64_t v487 = *(void *)v488;
          *(unsigned char *)(v487 + 8) = *(unsigned char *)(v488 + 8);
          *(unsigned char *)(v487 + 9) = *(unsigned char *)(v488 + 9);
          id v506 = *(void **)(v488 + 16);
          id v507 = v506;
          *(void *)(v487 + 16) = v506;
          unint64_t v508 = *(void **)(v488 + 24);
          id v509 = v508;
          *(void *)(v487 + 24) = v508;
          *(unsigned char *)(v487 + 32) = *(unsigned char *)(v488 + 32);
          *(unsigned char *)(v487 + 33) = *(unsigned char *)(v488 + 33);
          *(unsigned char *)(v487 + 34) = *(unsigned char *)(v488 + 34);
          *(void *)(v487 + 40) = *(void *)(v488 + 40);
          *(void *)(v487 + 48) = *(void *)(v488 + 48);
          *(void *)(v487 + 56) = *(void *)(v488 + 56);
          *(void *)(v487 + 64) = *(void *)(v488 + 64);
          *(unsigned char *)(v487 + 72) = *(unsigned char *)(v488 + 72);
          *(void *)(v487 + 80) = *(void *)(v488 + 80);
          *(void *)(v487 + 88) = *(void *)(v488 + 88);
          v731 = *(void **)(v488 + 96);
          *(void *)(v487 + 96) = v731;
          *(unsigned char *)(v487 + 104) = *(unsigned char *)(v488 + 104);
          *(unsigned char *)(v487 + 105) = *(unsigned char *)(v488 + 105);
          *(void *)(v487 + 112) = *(void *)(v488 + 112);
          *(void *)(v487 + 120) = *(void *)(v488 + 120);
          *(void *)(v487 + 128) = *(void *)(v488 + 128);
          *(void *)(v487 + 136) = *(void *)(v488 + 136);
          *(void *)(v487 + 144) = *(void *)(v488 + 144);
          *(void *)(v487 + 152) = *(void *)(v488 + 152);
          *(void *)(v487 + 160) = *(void *)(v488 + 160);
          *(void *)(v487 + 168) = *(void *)(v488 + 168);
          *(unsigned char *)(v487 + 176) = *(unsigned char *)(v488 + 176);
          *(void *)(v487 + 184) = *(void *)(v488 + 184);
          uint64_t v510 = *(void *)(v488 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v511 = v731;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v510)
          {
            *(void *)(v487 + 192) = v510;
            *(void *)(v487 + 200) = *(void *)(v488 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v487 + 192) = *(_OWORD *)(v488 + 192);
          }
          uint64_t v504 = v722;
          uint64_t v43 = a1;
          unint64_t v467 = v683;
          unint64_t v505 = v686;
          unint64_t v503 = v640;
          *(void *)(v487 + 208) = *(void *)(v488 + 208);
          *(void *)(v487 + 216) = *(void *)(v488 + 216);
          *(void *)(v487 + 224) = *(void *)(v488 + 224);
          *(void *)(v487 + 232) = *(void *)(v488 + 232);
          *(void *)(v487 + 240) = *(void *)(v488 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v491 = *(_OWORD *)v488;
          long long v492 = *(_OWORD *)(v488 + 16);
          long long v493 = *(_OWORD *)(v488 + 48);
          *(_OWORD *)(v487 + 32) = *(_OWORD *)(v488 + 32);
          *(_OWORD *)(v487 + 48) = v493;
          *(_OWORD *)unint64_t v487 = v491;
          *(_OWORD *)(v487 + 16) = v492;
          long long v494 = *(_OWORD *)(v488 + 64);
          long long v495 = *(_OWORD *)(v488 + 80);
          long long v496 = *(_OWORD *)(v488 + 112);
          *(_OWORD *)(v487 + 96) = *(_OWORD *)(v488 + 96);
          *(_OWORD *)(v487 + 112) = v496;
          *(_OWORD *)(v487 + 64) = v494;
          *(_OWORD *)(v487 + 80) = v495;
          long long v497 = *(_OWORD *)(v488 + 128);
          long long v498 = *(_OWORD *)(v488 + 144);
          long long v499 = *(_OWORD *)(v488 + 176);
          *(_OWORD *)(v487 + 160) = *(_OWORD *)(v488 + 160);
          *(_OWORD *)(v487 + 176) = v499;
          *(_OWORD *)(v487 + 128) = v497;
          *(_OWORD *)(v487 + 144) = v498;
          long long v500 = *(_OWORD *)(v488 + 192);
          long long v501 = *(_OWORD *)(v488 + 208);
          long long v502 = *(_OWORD *)(v488 + 224);
          *(void *)(v487 + 240) = *(void *)(v488 + 240);
          *(_OWORD *)(v487 + 208) = v501;
          *(_OWORD *)(v487 + 224) = v502;
          *(_OWORD *)(v487 + 192) = v500;
          unint64_t v503 = v640;
          uint64_t v504 = v722;
          unint64_t v505 = v686;
        }
        long long v599 = (_OWORD *)((v487 + 255) & 0xFFFFFFFFFFFFFFF8);
        v600 = (long long *)((v488 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v601 = *v600;
        *(_OWORD *)((char *)v599 + 9) = *(long long *)((char *)v600 + 9);
        *long long v599 = v601;
        unint64_t v602 = (v487 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v603 = (v488 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v604 = *(_OWORD *)v603;
        *(unsigned char *)(v602 + 16) = *(unsigned char *)(v603 + 16);
        *(_OWORD *)unint64_t v602 = v604;
        unint64_t v605 = (void *)((v487 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v606 = (v488 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v607 = *(void *)v606;
        v606 += 15;
        *unint64_t v605 = v607;
        v608 = (void *)(((unint64_t)v605 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v609 = *(void *)(v606 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v610 = *(void *)((v606 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v609, v610);
        void *v608 = v609;
        v608[1] = v610;
        v611 = (void *)((v503 + v505) & 0xFFFFFFFFFFFFFFF8);
        long long v612 = (void *)((v503 + v504) & 0xFFFFFFFFFFFFFFF8);
        *long long v612 = *v611;
        unint64_t v613 = (void *)(((unint64_t)v612 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v614 = (void *)(((unint64_t)v611 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v613 = *v614;
        v613[1] = v614[1];
        char v172 = 1;
        unint64_t v90 = v467;
        char v171 = 1;
        uint64_t v39 = v709;
        break;
      case 2u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v696 + 16))(v43, a2, v687);
        *(unsigned char *)(v24 + v43) = a2[v24];
        unint64_t v169 = (v24 + v43) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v170 = (unint64_t)&a2[v24] & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v169 + 8) = *(void *)(v170 + 8);
        *(void *)(v169 + 16) = *(void *)(v170 + 16);
        char v171 = 1;
        char v172 = 2;
        goto LABEL_57;
      case 3u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v696 + 16))(v43, a2, v687);
        uint64_t v173 = (void *)((v43 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v174 = (void *)((unint64_t)&a2[v24 + 7] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v173 = *v174;
        v173[1] = v174[1];
        char v171 = 1;
        char v172 = 3;
        goto LABEL_57;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v696 + 16))(v43, a2, v687);
        *(unsigned char *)(v24 + v43) = a2[v24];
        unint64_t v175 = (v24 + v43) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v176 = (unint64_t)&a2[v24] & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v175 + 8) = *(void *)(v176 + 8);
        *(void *)(v175 + 16) = *(void *)(v176 + 16);
        char v171 = 1;
        char v172 = 4;
        goto LABEL_57;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v696 + 16))(v43, a2, v687);
        uint64_t v177 = (void *)((v43 + v24 + 7) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v178 = (void *)((unint64_t)&a2[v24 + 7] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v177 = *v178;
        v177[1] = v178[1];
        char v171 = 1;
        char v172 = 5;
LABEL_57:
        unint64_t v90 = v38;
        break;
      default:
        unint64_t v675 = v34;
        unint64_t v682 = v38;
        unint64_t v717 = v716 + 16;
        uint64_t v707 = v39;
        uint64_t v631 = *(void *)(*(void *)(v21 - 8) + 64) + 7;
        uint64_t v50 = v24;
        uint64_t v51 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v696 + 16);
        uint64_t v690 = v29;
        uint64_t v693 = v21;
        uint64_t v52 = v43;
        uint64_t v702 = v22;
        uint64_t v712 = ~v711;
        unint64_t v699 = v30;
        uint64_t v53 = v43;
        uint64_t v54 = v28;
        uint64_t v679 = v48;
        v51(v52, a2, v687);
        uint64_t v55 = (v643 + v53) & ~v18;
        unint64_t v56 = (unint64_t)&a2[v643] & ~v18;
        v51(v55, (unsigned __int8 *)v56, v687);
        uint64_t v57 = (v55 + v50 + v26) & ~v26;
        unint64_t v58 = (v56 + v50 + v26) & ~v26;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v662 + 16))(v57, v58, v644);
        uint64_t v59 = (void *)((v54 + v57) & 0xFFFFFFFFFFFFFFF8);
        char v60 = (void *)((v54 + v58) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v59 = *v60;
        unint64_t v61 = ((unint64_t)v59 + v690) & v679;
        unint64_t v62 = ((unint64_t)v60 + v690) & v679;
        unint64_t v63 = *(void (**)(unint64_t, unint64_t, uint64_t))(v702 + 16);
        swift_bridgeObjectRetain();
        v63(v61, v62, v693);
        unint64_t v64 = (void *)((v631 + v62) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v65 = (void *)((v631 + v61) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v65 = *v64;
        uint64_t v66 = (void *)(((unint64_t)v65 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v67 = (void *)(((unint64_t)v64 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v66 = *v67;
        v66[1] = v67[1];
        uint64_t v68 = (void *)(v699 + v57);
        *uint64_t v68 = *(void *)(v699 + v58);
        v68[1] = *(void *)(v699 + v58 + 8);
        uint64_t v69 = (v725 + v699 + v57) & v712;
        uint64_t v70 = (v725 + v699 + v58) & v712;
        *(unsigned char *)uint64_t v69 = *(unsigned char *)v70;
        uint64_t v71 = v69 | 4;
        int v72 = *(_DWORD *)(v70 | 4);
        *(unsigned char *)(v71 + 4) = *(unsigned char *)((v70 | 4) + 4);
        *(_DWORD *)uint64_t v71 = v72;
        *(_WORD *)(v69 + 10) = *(_WORD *)(v70 + 0xA);
        uint64_t v726 = v69;
        uint64_t v73 = (v669 + v69) & v45;
        uint64_t v74 = (v669 + v70) & v45;
        uint64_t v75 = *(void (**)(uint64_t, uint64_t, uint64_t))(v665 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v75(v73, v74, v685);
        uint64_t v76 = (v670 + v73) & v45;
        uint64_t v77 = (v670 + v74) & v45;
        v75(v76, v77, v685);
        uint64_t v78 = (unsigned char *)(v76 + v671);
        *uint64_t v78 = *(unsigned char *)(v77 + v671);
        v78[1] = *(unsigned char *)(v77 + v671 + 1);
        v78[2] = *(unsigned char *)(v77 + v671 + 2);
        v78[3] = *(unsigned char *)(v77 + v671 + 3);
        v78[4] = *(unsigned char *)(v77 + v671 + 4);
        unint64_t v79 = (v76 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v80 = (v77 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v79 = *(void *)v80;
        *(void *)(v79 + 8) = *(void *)(v80 + 8);
        *(unsigned char *)(v79 + 16) = *(unsigned char *)(v80 + 16);
        *(unsigned char *)(v79 + 17) = *(unsigned char *)(v80 + 17);
        *(unsigned char *)(v79 + 18) = *(unsigned char *)(v80 + 18);
        *(unsigned char *)(v79 + 19) = *(unsigned char *)(v80 + 19);
        unint64_t v81 = (v79 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v82 = (v80 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v81 = *(void *)v82;
        *(unsigned char *)(v81 + 8) = *(unsigned char *)(v82 + 8);
        *(unsigned char *)(v81 + 9) = *(unsigned char *)(v82 + 9);
        *(unsigned char *)(v81 + 10) = *(unsigned char *)(v82 + 10);
        *(unsigned char *)(v81 + 11) = *(unsigned char *)(v82 + 11);
        *(unsigned char *)(v81 + 12) = *(unsigned char *)(v82 + 12);
        unint64_t v83 = (void *)((v80 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v84 = (void *)((v79 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v84 = *v83;
        unint64_t v85 = ((unint64_t)v84 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v86 = ((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v85 = *(void *)v86;
        *(unsigned char *)(v85 + 8) = *(unsigned char *)(v86 + 8);
        *(unsigned char *)(v85 + 9) = *(unsigned char *)(v86 + 9);
        unint64_t v87 = (void *)((v672 + v85) & v45);
        unint64_t v88 = (const void *)((v672 + v86) & v45);
        unint64_t v89 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v665 + 48);
        swift_bridgeObjectRetain();
        if (v89(v88, 1, v685))
        {
          memcpy(v87, v88, __n);
        }
        else
        {
          v75((uint64_t)v87, (uint64_t)v88, v685);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v665 + 56))(v87, 0, 1, v685);
        }
        long long v223 = (void *)(((unint64_t)v87 + v673) & 0xFFFFFFFFFFFFFFF8);
        long long v224 = (void *)(((unint64_t)v88 + v673) & 0xFFFFFFFFFFFFFFF8);
        void *v223 = *v224;
        unint64_t v225 = ((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v226 = ((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v227 = *(void *)v226;
        *(unsigned char *)(v225 + 8) = *(unsigned char *)(v226 + 8);
        *(void *)unint64_t v225 = v227;
        unint64_t v228 = (void *)(((unint64_t)v223 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v229 = (void *)(((unint64_t)v224 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v228 = *v229;
        unint64_t v230 = ((unint64_t)v228 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v231 = (uint64_t *)(((unint64_t)v229 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v232 = v231[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v232 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v230 = *(_OWORD *)v231;
        }
        else
        {
          uint64_t v264 = *v231;
          sub_24D3F9C18(*v231, v232);
          *(void *)unint64_t v230 = v264;
          *(void *)(v230 + 8) = v232;
        }
        unint64_t v265 = (v230 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v266 = ((unint64_t)v231 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v267 = *(void *)v266;
        *(unsigned char *)(v265 + 8) = *(unsigned char *)(v266 + 8);
        *(void *)unint64_t v265 = v267;
        *(unsigned char *)(v265 + 9) = *(unsigned char *)(v266 + 9);
        unint64_t v268 = (v265 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v269 = (v266 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v270 = *(_DWORD *)v269;
        *(unsigned char *)(v268 + 4) = *(unsigned char *)(v269 + 4);
        *(_DWORD *)unint64_t v268 = v270;
        unint64_t v271 = (void *)((v265 + 25) & 0xFFFFFFFFFFFFFFF8);
        int v272 = (void *)((v266 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v271 = *v272;
        v271[1] = v272[1];
        unint64_t v273 = v726 + v717;
        unint64_t v274 = v70 + v717;
        unint64_t v275 = *(void *)(v70 + v717 + 16);
        if (v275 >= 0xFFFFFFFF) {
          LODWORD(v275) = -1;
        }
        int v276 = v275 - 1;
        swift_bridgeObjectRetain();
        if (v276 < 0)
        {
          *(void *)unint64_t v273 = *(void *)v274;
          *(unsigned char *)(v273 + 8) = *(unsigned char *)(v274 + 8);
          *(unsigned char *)(v273 + 9) = *(unsigned char *)(v274 + 9);
          id v369 = *(void **)(v274 + 16);
          id v370 = v369;
          *(void *)(v273 + 16) = v369;
          id v371 = *(void **)(v274 + 24);
          id v372 = v371;
          *(void *)(v273 + 24) = v371;
          *(unsigned char *)(v273 + 32) = *(unsigned char *)(v274 + 32);
          *(unsigned char *)(v273 + 33) = *(unsigned char *)(v274 + 33);
          *(unsigned char *)(v273 + 34) = *(unsigned char *)(v274 + 34);
          *(void *)(v273 + 40) = *(void *)(v274 + 40);
          *(void *)(v273 + 48) = *(void *)(v274 + 48);
          *(void *)(v273 + 56) = *(void *)(v274 + 56);
          *(void *)(v273 + 64) = *(void *)(v274 + 64);
          *(unsigned char *)(v273 + 72) = *(unsigned char *)(v274 + 72);
          *(void *)(v273 + 80) = *(void *)(v274 + 80);
          *(void *)(v273 + 88) = *(void *)(v274 + 88);
          v728 = *(void **)(v274 + 96);
          *(void *)(v273 + 96) = v728;
          *(unsigned char *)(v273 + 104) = *(unsigned char *)(v274 + 104);
          *(unsigned char *)(v273 + 105) = *(unsigned char *)(v274 + 105);
          *(void *)(v273 + 112) = *(void *)(v274 + 112);
          *(void *)(v273 + 120) = *(void *)(v274 + 120);
          *(void *)(v273 + 128) = *(void *)(v274 + 128);
          *(void *)(v273 + 136) = *(void *)(v274 + 136);
          *(void *)(v273 + 144) = *(void *)(v274 + 144);
          *(void *)(v273 + 152) = *(void *)(v274 + 152);
          *(void *)(v273 + 160) = *(void *)(v274 + 160);
          *(void *)(v273 + 168) = *(void *)(v274 + 168);
          *(unsigned char *)(v273 + 176) = *(unsigned char *)(v274 + 176);
          *(void *)(v273 + 184) = *(void *)(v274 + 184);
          uint64_t v373 = *(void *)(v274 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v374 = v728;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v373)
          {
            *(void *)(v273 + 192) = v373;
            *(void *)(v273 + 200) = *(void *)(v274 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v273 + 192) = *(_OWORD *)(v274 + 192);
          }
          long long v289 = a2;
          *(void *)(v273 + 208) = *(void *)(v274 + 208);
          *(void *)(v273 + 216) = *(void *)(v274 + 216);
          *(void *)(v273 + 224) = *(void *)(v274 + 224);
          *(void *)(v273 + 232) = *(void *)(v274 + 232);
          *(void *)(v273 + 240) = *(void *)(v274 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v277 = *(_OWORD *)v274;
          long long v278 = *(_OWORD *)(v274 + 16);
          long long v279 = *(_OWORD *)(v274 + 48);
          *(_OWORD *)(v273 + 32) = *(_OWORD *)(v274 + 32);
          *(_OWORD *)(v273 + 48) = v279;
          *(_OWORD *)unint64_t v273 = v277;
          *(_OWORD *)(v273 + 16) = v278;
          long long v280 = *(_OWORD *)(v274 + 64);
          long long v281 = *(_OWORD *)(v274 + 80);
          long long v282 = *(_OWORD *)(v274 + 112);
          *(_OWORD *)(v273 + 96) = *(_OWORD *)(v274 + 96);
          *(_OWORD *)(v273 + 112) = v282;
          *(_OWORD *)(v273 + 64) = v280;
          *(_OWORD *)(v273 + 80) = v281;
          long long v283 = *(_OWORD *)(v274 + 128);
          long long v284 = *(_OWORD *)(v274 + 144);
          long long v285 = *(_OWORD *)(v274 + 176);
          *(_OWORD *)(v273 + 160) = *(_OWORD *)(v274 + 160);
          *(_OWORD *)(v273 + 176) = v285;
          *(_OWORD *)(v273 + 128) = v283;
          *(_OWORD *)(v273 + 144) = v284;
          long long v286 = *(_OWORD *)(v274 + 192);
          long long v287 = *(_OWORD *)(v274 + 208);
          long long v288 = *(_OWORD *)(v274 + 224);
          *(void *)(v273 + 240) = *(void *)(v274 + 240);
          *(_OWORD *)(v273 + 208) = v287;
          *(_OWORD *)(v273 + 224) = v288;
          *(_OWORD *)(v273 + 192) = v286;
          long long v289 = a2;
        }
        uint64_t v394 = (_OWORD *)((v273 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v395 = (long long *)((v274 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v396 = *v395;
        *(_OWORD *)((char *)v394 + 9) = *(long long *)((char *)v395 + 9);
        _OWORD *v394 = v396;
        unint64_t v397 = (v273 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v398 = (v274 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v399 = *(_OWORD *)v398;
        *(unsigned char *)(v397 + 16) = *(unsigned char *)(v398 + 16);
        *(_OWORD *)unint64_t v397 = v399;
        unint64_t v400 = (void *)((v273 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v401 = (v274 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v402 = *(void *)v401;
        v401 += 15;
        *unint64_t v400 = v402;
        uint64_t v403 = (void *)(((unint64_t)v400 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v404 = *(void *)(v401 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v405 = *(void *)((v401 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v404, v405);
        char v172 = 0;
        void *v403 = v404;
        v403[1] = v405;
        uint64_t v43 = a1;
        uint64_t v406 = (void *)((a1 + v675 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v407 = (void *)((unint64_t)&v289[v675 + 7] & 0xFFFFFFFFFFFFFFF8);
        void *v406 = *v407;
        v406[1] = v407[1];
        char v171 = 1;
        unint64_t v90 = v682;
        uint64_t v39 = v707;
        break;
    }
  }
  else
  {
    unint64_t v90 = v698;
    unsigned int v91 = a2[v698];
    if (v91 >= 6 && v698 != 0) {
      unsigned int v91 = *(_DWORD *)a2 + 6;
    }
    uint64_t v93 = ~v681;
    uint64_t v94 = ~v678;
    switch(v91)
    {
      case 1u:
        uint64_t v663 = ~v674;
        unint64_t v720 = v716 + 16;
        uint64_t v705 = v45;
        uint64_t v710 = v39;
        unint64_t v180 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v692 + 16);
        v180(v43, a2, AssociatedTypeWitness);
        uint64_t v181 = (v647 + v43) & v93;
        uint64_t v680 = ~v681;
        unint64_t v677 = (void (*)(unint64_t, unint64_t, uint64_t))v180;
        v180(v181, (unsigned __int8 *)((unint64_t)&a2[v647] & ~v681), AssociatedTypeWitness);
        uint64_t v182 = (v181 + v666 + v701) & ~v701;
        uint64_t v684 = ~v701;
        unint64_t v183 = (((unint64_t)&a2[v647] & v680) + v666 + v701) & ~v701;
        v645 = *(void (**)(uint64_t, unint64_t, uint64_t))(v660 + 16);
        v645(v182, v183, v651);
        uint64_t v184 = (void *)((v646 + v182) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v185 = (void *)((v646 + v183) & 0xFFFFFFFFFFFFFFF8);
        void *v184 = *v185;
        unint64_t v186 = ((unint64_t)v184 + v649) & v94;
        uint64_t v697 = v94;
        unint64_t v187 = ((unint64_t)v185 + v649) & v94;
        unint64_t v188 = *(void (**)(unint64_t, unint64_t, uint64_t))(v664 + 16);
        swift_bridgeObjectRetain();
        unint64_t v668 = v188;
        v188(v186, v187, v655);
        unint64_t v189 = (void *)((v653 + v187) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v190 = (void *)((v653 + v186) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v190 = *v189;
        unint64_t v191 = (void *)(((unint64_t)v190 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v192 = (void *)(((unint64_t)v189 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v191 = *v192;
        v191[1] = v192[1];
        unint64_t v193 = (void *)(v657 + v182);
        *unint64_t v193 = *(void *)(v657 + v183);
        v193[1] = *(void *)(v657 + v183 + 8);
        unint64_t v194 = (v725 + v657 + v182) & ~v711;
        uint64_t v715 = ~v711;
        unint64_t v195 = (v725 + v657 + v183) & v715;
        *(unsigned char *)unint64_t v194 = *(unsigned char *)v195;
        uint64_t v196 = v194 | 4;
        int v197 = *(_DWORD *)(v195 | 4);
        *(unsigned char *)(v196 + 4) = *(unsigned char *)((v195 | 4) + 4);
        *(_DWORD *)uint64_t v196 = v197;
        *(_WORD *)(v194 + 10) = *(_WORD *)(v195 + 0xA);
        unint64_t v633 = v194;
        unint64_t v198 = (v669 + v194) & v705;
        unint64_t v199 = (v669 + v195) & v705;
        unint64_t v200 = *(void (**)(unint64_t, unint64_t, uint64_t))(v665 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v200(v198, v199, v685);
        unint64_t v201 = (v670 + v198) & v705;
        unint64_t v202 = (v670 + v199) & v705;
        v200(v201, v202, v685);
        unint64_t v203 = (unsigned char *)(v201 + v671);
        *unint64_t v203 = *(unsigned char *)(v202 + v671);
        v203[1] = *(unsigned char *)(v202 + v671 + 1);
        v203[2] = *(unsigned char *)(v202 + v671 + 2);
        v203[3] = *(unsigned char *)(v202 + v671 + 3);
        v203[4] = *(unsigned char *)(v202 + v671 + 4);
        unint64_t v204 = (v201 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v205 = (v202 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v204 = *(void *)v205;
        *(void *)(v204 + 8) = *(void *)(v205 + 8);
        *(unsigned char *)(v204 + 16) = *(unsigned char *)(v205 + 16);
        *(unsigned char *)(v204 + 17) = *(unsigned char *)(v205 + 17);
        *(unsigned char *)(v204 + 18) = *(unsigned char *)(v205 + 18);
        *(unsigned char *)(v204 + 19) = *(unsigned char *)(v205 + 19);
        unint64_t v206 = (v204 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v207 = (v205 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v206 = *(void *)v207;
        *(unsigned char *)(v206 + 8) = *(unsigned char *)(v207 + 8);
        *(unsigned char *)(v206 + 9) = *(unsigned char *)(v207 + 9);
        *(unsigned char *)(v206 + 10) = *(unsigned char *)(v207 + 10);
        *(unsigned char *)(v206 + 11) = *(unsigned char *)(v207 + 11);
        *(unsigned char *)(v206 + 12) = *(unsigned char *)(v207 + 12);
        unint64_t v208 = (void *)((v205 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v209 = (void *)((v204 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v209 = *v208;
        unint64_t v210 = ((unint64_t)v209 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v211 = ((unint64_t)v208 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v210 = *(void *)v211;
        *(unsigned char *)(v210 + 8) = *(unsigned char *)(v211 + 8);
        *(unsigned char *)(v210 + 9) = *(unsigned char *)(v211 + 9);
        unint64_t v212 = (void *)((v672 + v210) & v705);
        long long v213 = (const void *)((v672 + v211) & v705);
        unint64_t v214 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v665 + 48);
        swift_bridgeObjectRetain();
        uint64_t v638 = v214;
        int v688 = v200;
        if (v214(v213, 1, v685))
        {
          memcpy(v212, v213, __n);
        }
        else
        {
          v200((unint64_t)v212, (unint64_t)v213, v685);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v665 + 56))(v212, 0, 1, v685);
        }
        unint64_t v253 = (void *)(((unint64_t)v212 + v673) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v254 = (void *)(((unint64_t)v213 + v673) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v253 = *v254;
        unint64_t v255 = ((unint64_t)v253 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v256 = ((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v257 = *(void *)v256;
        *(unsigned char *)(v255 + 8) = *(unsigned char *)(v256 + 8);
        *(void *)unint64_t v255 = v257;
        uint64_t v258 = (void *)(((unint64_t)v253 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v259 = (void *)(((unint64_t)v254 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v258 = *v259;
        unint64_t v260 = ((unint64_t)v258 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v261 = (uint64_t *)(((unint64_t)v259 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v262 = v261[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v263 = v94;
        if ((v262 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v260 = *(_OWORD *)v261;
        }
        else
        {
          uint64_t v343 = *v261;
          sub_24D3F9C18(*v261, v262);
          *(void *)unint64_t v260 = v343;
          *(void *)(v260 + 8) = v262;
        }
        unint64_t v344 = (v260 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v345 = ((unint64_t)v261 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v346 = *(void *)v345;
        *(unsigned char *)(v344 + 8) = *(unsigned char *)(v345 + 8);
        *(void *)unint64_t v344 = v346;
        *(unsigned char *)(v344 + 9) = *(unsigned char *)(v345 + 9);
        unint64_t v347 = (v344 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v348 = (v345 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v349 = *(_DWORD *)v348;
        *(unsigned char *)(v347 + 4) = *(unsigned char *)(v348 + 4);
        *(_DWORD *)unint64_t v347 = v349;
        unint64_t v350 = (void *)((v344 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v351 = (void *)((v345 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v350 = *v351;
        v350[1] = v351[1];
        unint64_t v352 = v720 + v633;
        unint64_t v353 = v720 + v195;
        unint64_t v354 = *(void *)(v720 + v195 + 16);
        if (v354 >= 0xFFFFFFFF) {
          LODWORD(v354) = -1;
        }
        int v355 = v354 - 1;
        swift_bridgeObjectRetain();
        if (v355 < 0)
        {
          *(void *)unint64_t v352 = *(void *)v353;
          *(unsigned char *)(v352 + 8) = *(unsigned char *)(v353 + 8);
          *(unsigned char *)(v352 + 9) = *(unsigned char *)(v353 + 9);
          id v388 = *(void **)(v353 + 16);
          id v389 = v388;
          *(void *)(v352 + 16) = v388;
          id v390 = *(void **)(v353 + 24);
          id v391 = v390;
          *(void *)(v352 + 24) = v390;
          *(unsigned char *)(v352 + 32) = *(unsigned char *)(v353 + 32);
          *(unsigned char *)(v352 + 33) = *(unsigned char *)(v353 + 33);
          *(unsigned char *)(v352 + 34) = *(unsigned char *)(v353 + 34);
          *(void *)(v352 + 40) = *(void *)(v353 + 40);
          *(void *)(v352 + 48) = *(void *)(v353 + 48);
          *(void *)(v352 + 56) = *(void *)(v353 + 56);
          *(void *)(v352 + 64) = *(void *)(v353 + 64);
          *(unsigned char *)(v352 + 72) = *(unsigned char *)(v353 + 72);
          *(void *)(v352 + 80) = *(void *)(v353 + 80);
          *(void *)(v352 + 88) = *(void *)(v353 + 88);
          uint64_t v634 = *(void **)(v353 + 96);
          *(void *)(v352 + 96) = v634;
          *(unsigned char *)(v352 + 104) = *(unsigned char *)(v353 + 104);
          *(unsigned char *)(v352 + 105) = *(unsigned char *)(v353 + 105);
          *(void *)(v352 + 112) = *(void *)(v353 + 112);
          *(void *)(v352 + 120) = *(void *)(v353 + 120);
          *(void *)(v352 + 128) = *(void *)(v353 + 128);
          *(void *)(v352 + 136) = *(void *)(v353 + 136);
          *(void *)(v352 + 144) = *(void *)(v353 + 144);
          *(void *)(v352 + 152) = *(void *)(v353 + 152);
          *(void *)(v352 + 160) = *(void *)(v353 + 160);
          *(void *)(v352 + 168) = *(void *)(v353 + 168);
          *(unsigned char *)(v352 + 176) = *(unsigned char *)(v353 + 176);
          *(void *)(v352 + 184) = *(void *)(v353 + 184);
          uint64_t v392 = *(void *)(v353 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v393 = v634;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v392)
          {
            *(void *)(v352 + 192) = v392;
            *(void *)(v352 + 200) = *(void *)(v353 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v352 + 192) = *(_OWORD *)(v353 + 192);
          }
          unint64_t v368 = a2;
          uint64_t v43 = a1;
          uint64_t v263 = v697;
          *(void *)(v352 + 208) = *(void *)(v353 + 208);
          *(void *)(v352 + 216) = *(void *)(v353 + 216);
          *(void *)(v352 + 224) = *(void *)(v353 + 224);
          *(void *)(v352 + 232) = *(void *)(v353 + 232);
          *(void *)(v352 + 240) = *(void *)(v353 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v356 = *(_OWORD *)v353;
          long long v357 = *(_OWORD *)(v353 + 16);
          long long v358 = *(_OWORD *)(v353 + 48);
          *(_OWORD *)(v352 + 32) = *(_OWORD *)(v353 + 32);
          *(_OWORD *)(v352 + 48) = v358;
          *(_OWORD *)unint64_t v352 = v356;
          *(_OWORD *)(v352 + 16) = v357;
          long long v359 = *(_OWORD *)(v353 + 64);
          long long v360 = *(_OWORD *)(v353 + 80);
          long long v361 = *(_OWORD *)(v353 + 112);
          *(_OWORD *)(v352 + 96) = *(_OWORD *)(v353 + 96);
          *(_OWORD *)(v352 + 112) = v361;
          *(_OWORD *)(v352 + 64) = v359;
          *(_OWORD *)(v352 + 80) = v360;
          long long v362 = *(_OWORD *)(v353 + 128);
          long long v363 = *(_OWORD *)(v353 + 144);
          long long v364 = *(_OWORD *)(v353 + 176);
          *(_OWORD *)(v352 + 160) = *(_OWORD *)(v353 + 160);
          *(_OWORD *)(v352 + 176) = v364;
          *(_OWORD *)(v352 + 128) = v362;
          *(_OWORD *)(v352 + 144) = v363;
          long long v365 = *(_OWORD *)(v353 + 192);
          long long v366 = *(_OWORD *)(v353 + 208);
          long long v367 = *(_OWORD *)(v353 + 224);
          *(void *)(v352 + 240) = *(void *)(v353 + 240);
          *(_OWORD *)(v352 + 208) = v366;
          *(_OWORD *)(v352 + 224) = v367;
          *(_OWORD *)(v352 + 192) = v365;
          unint64_t v368 = a2;
        }
        long long v512 = (_OWORD *)((v352 + 255) & 0xFFFFFFFFFFFFFFF8);
        unsigned int v513 = (long long *)((v353 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v514 = *v513;
        *(_OWORD *)((char *)v512 + 9) = *(long long *)((char *)v513 + 9);
        *long long v512 = v514;
        unint64_t v515 = (v352 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v516 = (v353 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v517 = *(_OWORD *)v516;
        *(unsigned char *)(v515 + 16) = *(unsigned char *)(v516 + 16);
        *(_OWORD *)unint64_t v515 = v517;
        unint64_t v518 = (void *)((v352 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v519 = (v353 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v520 = *(void *)v519;
        v519 += 15;
        *unint64_t v518 = v520;
        unint64_t v521 = (void *)(((unint64_t)v518 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v522 = *(void *)(v519 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v523 = *(void *)((v519 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v522, v523);
        *unint64_t v521 = v522;
        v521[1] = v523;
        v677((v639 + v43) & v663, (unint64_t)&v368[v639] & v663, AssociatedTypeWitness);
        uint64_t v695 = (v639 + v43) & v663;
        uint64_t v524 = (v647 + v695) & v680;
        unint64_t v723 = (unint64_t)&v368[v639] & v663;
        unint64_t v525 = (v647 + v723) & v680;
        v677(v524, v525, AssociatedTypeWitness);
        uint64_t v526 = (v641 + v524) & v684;
        uint64_t v527 = (v641 + v525) & v684;
        v645(v526, v527, v651);
        unint64_t v528 = (void *)((v646 + v526) & 0xFFFFFFFFFFFFFFF8);
        size_t v529 = (void *)((v646 + v527) & 0xFFFFFFFFFFFFFFF8);
        void *v528 = *v529;
        unint64_t v530 = ((unint64_t)v528 + v649) & v263;
        unint64_t v531 = ((unint64_t)v529 + v649) & v263;
        swift_bridgeObjectRetain();
        v668(v530, v531, v655);
        uint64_t v532 = (void *)((v653 + v530) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v533 = (void *)((v653 + v531) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v532 = *v533;
        unint64_t v534 = (void *)(((unint64_t)v532 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v535 = (void *)(((unint64_t)v533 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v534 = *v535;
        v534[1] = v535[1];
        uint64_t v536 = (void *)(v526 + v657);
        *uint64_t v536 = *(void *)(v527 + v657);
        v536[1] = *(void *)(v527 + v657 + 8);
        unint64_t v537 = (v725 + v526 + v657) & v715;
        unint64_t v538 = (v725 + v527 + v657) & v715;
        *(unsigned char *)unint64_t v537 = *(unsigned char *)v538;
        uint64_t v539 = v537 | 4;
        int v540 = *(_DWORD *)(v538 | 4);
        *(unsigned char *)(v539 + 4) = *(unsigned char *)((v538 | 4) + 4);
        *(_DWORD *)uint64_t v539 = v540;
        *(_WORD *)(v537 + 10) = *(_WORD *)(v538 + 0xA);
        unint64_t v541 = (v669 + v537) & v705;
        unint64_t v542 = (v669 + v538) & v705;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v688(v541, v542, v685);
        unint64_t v543 = (v670 + v541) & v705;
        unint64_t v544 = (v670 + v542) & v705;
        v688(v543, v544, v685);
        unint64_t v545 = (unsigned char *)(v543 + v671);
        unsigned char *v545 = *(unsigned char *)(v544 + v671);
        v545[1] = *(unsigned char *)(v544 + v671 + 1);
        v545[2] = *(unsigned char *)(v544 + v671 + 2);
        v545[3] = *(unsigned char *)(v544 + v671 + 3);
        v545[4] = *(unsigned char *)(v544 + v671 + 4);
        unint64_t v546 = (v543 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v547 = (v544 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v546 = *(void *)v547;
        *(void *)(v546 + 8) = *(void *)(v547 + 8);
        *(unsigned char *)(v546 + 16) = *(unsigned char *)(v547 + 16);
        *(unsigned char *)(v546 + 17) = *(unsigned char *)(v547 + 17);
        *(unsigned char *)(v546 + 18) = *(unsigned char *)(v547 + 18);
        *(unsigned char *)(v546 + 19) = *(unsigned char *)(v547 + 19);
        unint64_t v548 = (v546 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v549 = (v547 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v548 = *(void *)v549;
        *(unsigned char *)(v548 + 8) = *(unsigned char *)(v549 + 8);
        *(unsigned char *)(v548 + 9) = *(unsigned char *)(v549 + 9);
        *(unsigned char *)(v548 + 10) = *(unsigned char *)(v549 + 10);
        *(unsigned char *)(v548 + 11) = *(unsigned char *)(v549 + 11);
        *(unsigned char *)(v548 + 12) = *(unsigned char *)(v549 + 12);
        unint64_t v550 = (void *)((v546 + 47) & 0xFFFFFFFFFFFFFFF8);
        v551 = (void *)((v547 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v550 = *v551;
        unint64_t v552 = ((unint64_t)v550 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v553 = ((unint64_t)v551 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v552 = *(void *)v553;
        *(unsigned char *)(v552 + 8) = *(unsigned char *)(v553 + 8);
        *(unsigned char *)(v552 + 9) = *(unsigned char *)(v553 + 9);
        v554 = (void *)((v672 + v552) & v705);
        unint64_t v555 = (const void *)((v672 + v553) & v705);
        swift_bridgeObjectRetain();
        if (v638(v555, 1, v685))
        {
          memcpy(v554, v555, __n);
        }
        else
        {
          v688((unint64_t)v554, (unint64_t)v555, v685);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v665 + 56))(v554, 0, 1, v685);
        }
        unint64_t v556 = (void *)(((unint64_t)v554 + v673) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v557 = (void *)(((unint64_t)v555 + v673) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v556 = *v557;
        unint64_t v558 = ((unint64_t)v556 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v559 = ((unint64_t)v557 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v560 = *(void *)v559;
        *(unsigned char *)(v558 + 8) = *(unsigned char *)(v559 + 8);
        *(void *)unint64_t v558 = v560;
        v561 = (void *)(((unint64_t)v556 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v562 = (void *)(((unint64_t)v557 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v561 = *v562;
        unint64_t v563 = ((unint64_t)v561 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v564 = (uint64_t *)(((unint64_t)v562 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v565 = v564[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v565 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v563 = *(_OWORD *)v564;
        }
        else
        {
          uint64_t v566 = *v564;
          sub_24D3F9C18(*v564, v565);
          *(void *)unint64_t v563 = v566;
          *(void *)(v563 + 8) = v565;
        }
        unint64_t v567 = (v563 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v568 = ((unint64_t)v564 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v569 = *(void *)v568;
        *(unsigned char *)(v567 + 8) = *(unsigned char *)(v568 + 8);
        *(void *)unint64_t v567 = v569;
        *(unsigned char *)(v567 + 9) = *(unsigned char *)(v568 + 9);
        unint64_t v570 = (v567 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v571 = (v568 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v572 = *(_DWORD *)v571;
        *(unsigned char *)(v570 + 4) = *(unsigned char *)(v571 + 4);
        *(_DWORD *)unint64_t v570 = v572;
        unint64_t v573 = (void *)((v567 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v574 = (void *)((v568 + 25) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v573 = *v574;
        v573[1] = v574[1];
        unint64_t v575 = v537 + v720;
        unint64_t v576 = v538 + v720;
        unint64_t v577 = *(void *)(v538 + v720 + 16);
        if (v577 >= 0xFFFFFFFF) {
          LODWORD(v577) = -1;
        }
        int v578 = v577 - 1;
        swift_bridgeObjectRetain();
        if (v578 < 0)
        {
          *(void *)unint64_t v575 = *(void *)v576;
          *(unsigned char *)(v575 + 8) = *(unsigned char *)(v576 + 8);
          *(unsigned char *)(v575 + 9) = *(unsigned char *)(v576 + 9);
          id v593 = *(void **)(v576 + 16);
          id v594 = v593;
          *(void *)(v575 + 16) = v593;
          v595 = *(void **)(v576 + 24);
          id v596 = v595;
          *(void *)(v575 + 24) = v595;
          *(unsigned char *)(v575 + 32) = *(unsigned char *)(v576 + 32);
          *(unsigned char *)(v575 + 33) = *(unsigned char *)(v576 + 33);
          *(unsigned char *)(v575 + 34) = *(unsigned char *)(v576 + 34);
          *(void *)(v575 + 40) = *(void *)(v576 + 40);
          *(void *)(v575 + 48) = *(void *)(v576 + 48);
          *(void *)(v575 + 56) = *(void *)(v576 + 56);
          *(void *)(v575 + 64) = *(void *)(v576 + 64);
          *(unsigned char *)(v575 + 72) = *(unsigned char *)(v576 + 72);
          *(void *)(v575 + 80) = *(void *)(v576 + 80);
          *(void *)(v575 + 88) = *(void *)(v576 + 88);
          v732 = *(void **)(v576 + 96);
          *(void *)(v575 + 96) = v732;
          *(unsigned char *)(v575 + 104) = *(unsigned char *)(v576 + 104);
          *(unsigned char *)(v575 + 105) = *(unsigned char *)(v576 + 105);
          *(void *)(v575 + 112) = *(void *)(v576 + 112);
          *(void *)(v575 + 120) = *(void *)(v576 + 120);
          *(void *)(v575 + 128) = *(void *)(v576 + 128);
          *(void *)(v575 + 136) = *(void *)(v576 + 136);
          *(void *)(v575 + 144) = *(void *)(v576 + 144);
          *(void *)(v575 + 152) = *(void *)(v576 + 152);
          *(void *)(v575 + 160) = *(void *)(v576 + 160);
          *(void *)(v575 + 168) = *(void *)(v576 + 168);
          *(unsigned char *)(v575 + 176) = *(unsigned char *)(v576 + 176);
          *(void *)(v575 + 184) = *(void *)(v576 + 184);
          uint64_t v597 = *(void *)(v576 + 192);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v598 = v732;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v597)
          {
            *(void *)(v575 + 192) = v597;
            *(void *)(v575 + 200) = *(void *)(v576 + 200);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v575 + 192) = *(_OWORD *)(v576 + 192);
          }
          uint64_t v43 = a1;
          unint64_t v90 = v698;
          unint64_t v591 = v635;
          uint64_t v592 = v695;
          *(void *)(v575 + 208) = *(void *)(v576 + 208);
          *(void *)(v575 + 216) = *(void *)(v576 + 216);
          *(void *)(v575 + 224) = *(void *)(v576 + 224);
          *(void *)(v575 + 232) = *(void *)(v576 + 232);
          *(void *)(v575 + 240) = *(void *)(v576 + 240);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v579 = *(_OWORD *)v576;
          long long v580 = *(_OWORD *)(v576 + 16);
          long long v581 = *(_OWORD *)(v576 + 48);
          *(_OWORD *)(v575 + 32) = *(_OWORD *)(v576 + 32);
          *(_OWORD *)(v575 + 48) = v581;
          *(_OWORD *)unint64_t v575 = v579;
          *(_OWORD *)(v575 + 16) = v580;
          long long v582 = *(_OWORD *)(v576 + 64);
          long long v583 = *(_OWORD *)(v576 + 80);
          long long v584 = *(_OWORD *)(v576 + 112);
          *(_OWORD *)(v575 + 96) = *(_OWORD *)(v576 + 96);
          *(_OWORD *)(v575 + 112) = v584;
          *(_OWORD *)(v575 + 64) = v582;
          *(_OWORD *)(v575 + 80) = v583;
          long long v585 = *(_OWORD *)(v576 + 128);
          long long v586 = *(_OWORD *)(v576 + 144);
          long long v587 = *(_OWORD *)(v576 + 176);
          *(_OWORD *)(v575 + 160) = *(_OWORD *)(v576 + 160);
          *(_OWORD *)(v575 + 176) = v587;
          *(_OWORD *)(v575 + 128) = v585;
          *(_OWORD *)(v575 + 144) = v586;
          long long v588 = *(_OWORD *)(v576 + 192);
          long long v589 = *(_OWORD *)(v576 + 208);
          long long v590 = *(_OWORD *)(v576 + 224);
          *(void *)(v575 + 240) = *(void *)(v576 + 240);
          *(_OWORD *)(v575 + 208) = v589;
          *(_OWORD *)(v575 + 224) = v590;
          *(_OWORD *)(v575 + 192) = v588;
          unint64_t v90 = v698;
          unint64_t v591 = v635;
          uint64_t v592 = (v639 + v43) & v663;
        }
        long long v615 = (_OWORD *)((v575 + 255) & 0xFFFFFFFFFFFFFFF8);
        v616 = (long long *)((v576 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v617 = *v616;
        *(_OWORD *)((char *)v615 + 9) = *(long long *)((char *)v616 + 9);
        *long long v615 = v617;
        unint64_t v618 = (v575 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v619 = (v576 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v620 = *(_OWORD *)v619;
        *(unsigned char *)(v618 + 16) = *(unsigned char *)(v619 + 16);
        *(_OWORD *)unint64_t v618 = v620;
        unint64_t v621 = (void *)((v575 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v622 = (v576 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v623 = *(void *)v622;
        v622 += 15;
        *unint64_t v621 = v623;
        v624 = (void *)(((unint64_t)v621 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v625 = *(void *)(v622 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v626 = *(void *)((v622 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v625, v626);
        char v171 = 0;
        void *v624 = v625;
        v624[1] = v626;
        uint64_t v627 = (void *)((v591 + v592) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v628 = (void *)((v591 + v723) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v627 = *v628;
        unint64_t v629 = (void *)(((unint64_t)v627 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v630 = (void *)(((unint64_t)v628 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v629 = *v630;
        v629[1] = v630[1];
        char v172 = 1;
        uint64_t v39 = v710;
        break;
      case 2u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v692 + 16))(v43, a2, AssociatedTypeWitness);
        char v171 = 0;
        *(unsigned char *)(v666 + v43) = a2[v666];
        unint64_t v215 = (v666 + v43) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v216 = (unint64_t)&a2[v666] & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v215 + 8) = *(void *)(v216 + 8);
        *(void *)(v215 + 16) = *(void *)(v216 + 16);
        char v172 = 2;
        break;
      case 3u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v692 + 16))(v43, a2, AssociatedTypeWitness);
        char v171 = 0;
        long long v217 = (void *)((v43 + v666 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v218 = (void *)((unint64_t)&a2[v666 + 7] & 0xFFFFFFFFFFFFFFF8);
        void *v217 = *v218;
        v217[1] = v218[1];
        char v172 = 3;
        break;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v692 + 16))(v43, a2, AssociatedTypeWitness);
        char v171 = 0;
        *(unsigned char *)(v666 + v43) = a2[v666];
        unint64_t v219 = (v666 + v43) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v220 = (unint64_t)&a2[v666] & 0xFFFFFFFFFFFFFFF8;
        *(void *)(v219 + 8) = *(void *)(v220 + 8);
        *(void *)(v219 + 16) = *(void *)(v220 + 16);
        char v172 = 4;
        break;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v692 + 16))(v43, a2, AssociatedTypeWitness);
        char v171 = 0;
        long long v221 = (void *)((v43 + v666 + 7) & 0xFFFFFFFFFFFFFFF8);
        long long v222 = (void *)((unint64_t)&a2[v666 + 7] & 0xFFFFFFFFFFFFFFF8);
        *long long v221 = *v222;
        v221[1] = v222[1];
        char v172 = 5;
        break;
      default:
        uint64_t v713 = ~v711;
        unint64_t v718 = v716 + 16;
        uint64_t v708 = v39;
        unint64_t v95 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v692 + 16);
        v95(v43, a2, AssociatedTypeWitness);
        uint64_t v96 = (v647 + v43) & v93;
        unint64_t v97 = (unint64_t)&a2[v647] & ~v681;
        v95(v96, (unsigned __int8 *)v97, AssociatedTypeWitness);
        uint64_t v98 = (v96 + v666 + v701) & ~v701;
        unint64_t v99 = (v97 + v666 + v701) & ~v701;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v660 + 16))(v98, v99, v651);
        unint64_t v100 = (void *)((v646 + v98) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v101 = (void *)((v646 + v99) & 0xFFFFFFFFFFFFFFF8);
        void *v100 = *v101;
        unint64_t v102 = ((unint64_t)v100 + v649) & v94;
        unint64_t v103 = ((unint64_t)v101 + v649) & v94;
        unint64_t v104 = *(void (**)(unint64_t, unint64_t, uint64_t))(v664 + 16);
        swift_bridgeObjectRetain();
        v104(v102, v103, v655);
        unint64_t v105 = (void *)((v653 + v103) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v106 = (void *)((v653 + v102) & 0xFFFFFFFFFFFFFFF8);
        void *v106 = *v105;
        unint64_t v107 = (void *)(((unint64_t)v106 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v108 = (void *)(((unint64_t)v105 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v107 = *v108;
        v107[1] = v108[1];
        uint64_t v109 = (void *)(v657 + v98);
        *uint64_t v109 = *(void *)(v657 + v99);
        v109[1] = *(void *)(v657 + v99 + 8);
        unint64_t v110 = (v725 + v657 + v98) & v713;
        unint64_t v111 = (v725 + v657 + v99) & v713;
        *(unsigned char *)unint64_t v110 = *(unsigned char *)v111;
        uint64_t v112 = v110 | 4;
        int v113 = *(_DWORD *)(v111 | 4);
        *(unsigned char *)(v112 + 4) = *(unsigned char *)((v111 | 4) + 4);
        *(_DWORD *)uint64_t v112 = v113;
        *(_WORD *)(v110 + 10) = *(_WORD *)(v111 + 0xA);
        unint64_t v114 = (v669 + v110) & v45;
        unint64_t v727 = v111;
        unint64_t v115 = (v669 + v111) & v45;
        unint64_t v116 = *(void (**)(unint64_t, unint64_t, uint64_t))(v665 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v116(v114, v115, v685);
        unint64_t v117 = (v670 + v114) & v45;
        unint64_t v118 = (v670 + v115) & v45;
        v116(v117, v118, v685);
        unint64_t v119 = (unsigned char *)(v117 + v671);
        *unint64_t v119 = *(unsigned char *)(v118 + v671);
        v119[1] = *(unsigned char *)(v118 + v671 + 1);
        void v119[2] = *(unsigned char *)(v118 + v671 + 2);
        v119[3] = *(unsigned char *)(v118 + v671 + 3);
        v119[4] = *(unsigned char *)(v118 + v671 + 4);
        unint64_t v120 = (v117 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v121 = (v118 + v671 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v120 = *(void *)v121;
        *(void *)(v120 + 8) = *(void *)(v121 + 8);
        *(unsigned char *)(v120 + 16) = *(unsigned char *)(v121 + 16);
        *(unsigned char *)(v120 + 17) = *(unsigned char *)(v121 + 17);
        *(unsigned char *)(v120 + 18) = *(unsigned char *)(v121 + 18);
        *(unsigned char *)(v120 + 19) = *(unsigned char *)(v121 + 19);
        unint64_t v122 = (v120 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v123 = (v121 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v122 = *(void *)v123;
        *(unsigned char *)(v122 + 8) = *(unsigned char *)(v123 + 8);
        *(unsigned char *)(v122 + 9) = *(unsigned char *)(v123 + 9);
        *(unsigned char *)(v122 + 10) = *(unsigned char *)(v123 + 10);
        *(unsigned char *)(v122 + 11) = *(unsigned char *)(v123 + 11);
        *(unsigned char *)(v122 + 12) = *(unsigned char *)(v123 + 12);
        unint64_t v124 = (void *)((v121 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v125 = (void *)((v120 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v125 = *v124;
        unint64_t v126 = ((unint64_t)v125 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v127 = ((unint64_t)v124 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v126 = *(void *)v127;
        *(unsigned char *)(v126 + 8) = *(unsigned char *)(v127 + 8);
        *(unsigned char *)(v126 + 9) = *(unsigned char *)(v127 + 9);
        unint64_t v128 = (void *)((v672 + v126) & v45);
        unint64_t v129 = (const void *)((v672 + v127) & v45);
        unint64_t v130 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v665 + 48);
        swift_bridgeObjectRetain();
        if (v130(v129, 1, v685))
        {
          memcpy(v128, v129, __n);
        }
        else
        {
          v116((unint64_t)v128, (unint64_t)v129, v685);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v665 + 56))(v128, 0, 1, v685);
        }
        unint64_t v233 = (void *)(((unint64_t)v128 + v673) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v234 = (void *)(((unint64_t)v129 + v673) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v233 = *v234;
        unint64_t v235 = ((unint64_t)v233 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v236 = ((unint64_t)v234 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v237 = *(void *)v236;
        *(unsigned char *)(v235 + 8) = *(unsigned char *)(v236 + 8);
        *(void *)unint64_t v235 = v237;
        long long v238 = (void *)(((unint64_t)v233 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v239 = (void *)(((unint64_t)v234 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v238 = *v239;
        unint64_t v240 = ((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v241 = (uint64_t *)(((unint64_t)v239 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v242 = v241[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v242 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v240 = *(_OWORD *)v241;
        }
        else
        {
          uint64_t v290 = *v241;
          sub_24D3F9C18(*v241, v242);
          *(void *)unint64_t v240 = v290;
          *(void *)(v240 + 8) = v242;
        }
        unint64_t v291 = (v240 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v292 = ((unint64_t)v241 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v293 = *(void *)v292;
        *(unsigned char *)(v291 + 8) = *(unsigned char *)(v292 + 8);
        *(void *)unint64_t v291 = v293;
        *(unsigned char *)(v291 + 9) = *(unsigned char *)(v292 + 9);
        unint64_t v294 = (v291 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v295 = (v292 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        int v296 = *(_DWORD *)v295;
        *(unsigned char *)(v294 + 4) = *(unsigned char *)(v295 + 4);
        *(_DWORD *)unint64_t v294 = v296;
        unint64_t v297 = (void *)((v291 + 25) & 0xFFFFFFFFFFFFFFF8);
        int v298 = (void *)((v292 + 25) & 0xFFFFFFFFFFFFFFF8);
        void *v297 = *v298;
        v297[1] = v298[1];
        unint64_t v299 = v718 + v110;
        unint64_t v300 = (long long *)(v718 + v727);
        unint64_t v301 = *(void *)(v718 + v727 + 16);
        if (v301 >= 0xFFFFFFFF) {
          LODWORD(v301) = -1;
        }
        int v302 = v301 - 1;
        swift_bridgeObjectRetain();
        if (v302 < 0)
        {
          *(void *)unint64_t v299 = *(void *)v300;
          *(unsigned char *)(v299 + 8) = *((unsigned char *)v300 + 8);
          *(unsigned char *)(v299 + 9) = *((unsigned char *)v300 + 9);
          id v375 = (void *)*((void *)v300 + 2);
          id v376 = v375;
          *(void *)(v299 + 16) = v375;
          id v377 = (void *)*((void *)v300 + 3);
          id v378 = v377;
          *(void *)(v299 + 24) = v377;
          *(unsigned char *)(v299 + 32) = *((unsigned char *)v300 + 32);
          *(unsigned char *)(v299 + 33) = *((unsigned char *)v300 + 33);
          *(unsigned char *)(v299 + 34) = *((unsigned char *)v300 + 34);
          *(void *)(v299 + 40) = *((void *)v300 + 5);
          *(void *)(v299 + 48) = *((void *)v300 + 6);
          *(void *)(v299 + 56) = *((void *)v300 + 7);
          *(void *)(v299 + 64) = *((void *)v300 + 8);
          *(unsigned char *)(v299 + 72) = *((unsigned char *)v300 + 72);
          *(void *)(v299 + 80) = *((void *)v300 + 10);
          *(void *)(v299 + 88) = *((void *)v300 + 11);
          v729 = (void *)*((void *)v300 + 12);
          *(void *)(v299 + 96) = v729;
          *(unsigned char *)(v299 + 104) = *((unsigned char *)v300 + 104);
          *(unsigned char *)(v299 + 105) = *((unsigned char *)v300 + 105);
          *(void *)(v299 + 112) = *((void *)v300 + 14);
          *(void *)(v299 + 120) = *((void *)v300 + 15);
          *(void *)(v299 + 128) = *((void *)v300 + 16);
          *(void *)(v299 + 136) = *((void *)v300 + 17);
          *(void *)(v299 + 144) = *((void *)v300 + 18);
          *(void *)(v299 + 152) = *((void *)v300 + 19);
          *(void *)(v299 + 160) = *((void *)v300 + 20);
          *(void *)(v299 + 168) = *((void *)v300 + 21);
          *(unsigned char *)(v299 + 176) = *((unsigned char *)v300 + 176);
          *(void *)(v299 + 184) = *((void *)v300 + 23);
          uint64_t v379 = *((void *)v300 + 24);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          id v380 = v729;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if (v379)
          {
            *(void *)(v299 + 192) = v379;
            *(void *)(v299 + 200) = *((void *)v300 + 25);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            *(_OWORD *)(v299 + 192) = v300[12];
          }
          long long v315 = a2;
          unint64_t v90 = v698;
          *(void *)(v299 + 208) = *((void *)v300 + 26);
          *(void *)(v299 + 216) = *((void *)v300 + 27);
          *(void *)(v299 + 224) = *((void *)v300 + 28);
          *(void *)(v299 + 232) = *((void *)v300 + 29);
          *(void *)(v299 + 240) = *((void *)v300 + 30);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v303 = *v300;
          long long v304 = v300[1];
          long long v305 = v300[3];
          *(_OWORD *)(v299 + 32) = v300[2];
          *(_OWORD *)(v299 + 48) = v305;
          *(_OWORD *)unint64_t v299 = v303;
          *(_OWORD *)(v299 + 16) = v304;
          long long v306 = v300[4];
          long long v307 = v300[5];
          long long v308 = v300[7];
          *(_OWORD *)(v299 + 96) = v300[6];
          *(_OWORD *)(v299 + 112) = v308;
          *(_OWORD *)(v299 + 64) = v306;
          *(_OWORD *)(v299 + 80) = v307;
          long long v309 = v300[8];
          long long v310 = v300[9];
          long long v311 = v300[11];
          *(_OWORD *)(v299 + 160) = v300[10];
          *(_OWORD *)(v299 + 176) = v311;
          *(_OWORD *)(v299 + 128) = v309;
          *(_OWORD *)(v299 + 144) = v310;
          long long v312 = v300[12];
          long long v313 = v300[13];
          long long v314 = v300[14];
          *(void *)(v299 + 240) = *((void *)v300 + 30);
          *(_OWORD *)(v299 + 208) = v313;
          *(_OWORD *)(v299 + 224) = v314;
          *(_OWORD *)(v299 + 192) = v312;
          long long v315 = a2;
          unint64_t v90 = v698;
        }
        unint64_t v408 = (_OWORD *)((v299 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v409 = (long long *)(((unint64_t)v300 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v410 = *v409;
        *(_OWORD *)((char *)v408 + 9) = *(long long *)((char *)v409 + 9);
        *unint64_t v408 = v410;
        unint64_t v411 = (v299 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v412 = ((unint64_t)v300 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v413 = *(_OWORD *)v412;
        *(unsigned char *)(v411 + 16) = *(unsigned char *)(v412 + 16);
        *(_OWORD *)unint64_t v411 = v413;
        unint64_t v414 = (void *)((v299 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v415 = ((unint64_t)v300 + 311) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v416 = *(void *)v415;
        v415 += 15;
        *unint64_t v414 = v416;
        uint64_t v417 = (void *)(((unint64_t)v414 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v418 = *(void *)(v415 & 0xFFFFFFFFFFFFFFF8);
        unint64_t v419 = *(void *)((v415 & 0xFFFFFFFFFFFFFFF8) + 8);
        sub_24D5203A8(v418, v419);
        char v172 = 0;
        char v171 = 0;
        *uint64_t v417 = v418;
        v417[1] = v419;
        uint64_t v43 = a1;
        uint64_t v420 = (void *)((a1 + v636 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v421 = (void *)((unint64_t)&v315[v636 + 7] & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v420 = *v421;
        v420[1] = v421[1];
        uint64_t v39 = v708;
        break;
    }
  }
  *(unsigned char *)(v43 + v90) = v172;
  swift_bridgeObjectRetain();
  *(unsigned char *)(v43 + v39) = v171;
  return v43;
}

unsigned __int8 *sub_24D99D3AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v786 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = *(unsigned __int8 *)(v786 + 80);
    uint64_t v742 = v3 + v4;
    uint64_t v5 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v744 = v6;
    uint64_t v745 = v5;
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v747 = *(void *)(v8 - 8);
    uint64_t v749 = v8;
    uint64_t v9 = *(unsigned __int8 *)(v747 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v721 = v3 + v10;
    uint64_t v741 = *(void *)(v6 + 64) + 7;
    uint64_t v743 = v9 + 8;
    uint64_t v772 = v9;
    uint64_t v746 = *(void *)(v747 + 64) + 7;
    unint64_t v752 = ((((v746 + ((v9 + 8 + (v741 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v788 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v788 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v799 = (v12 | 7) + 16;
    uint64_t v758 = v12 + 12;
    uint64_t v13 = *(void *)(v11 + 64);
    uint64_t v759 = v13 + v12;
    uint64_t v724 = v13 + 12;
    uint64_t v760 = v12 + 10;
    uint64_t v754 = v13;
    uint64_t v755 = v11;
    if (*(_DWORD *)(v11 + 84)) {
      size_t v14 = *(void *)(*(void *)(v788 - 8) + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    size_t __n = v14;
    size_t v15 = v14 + 7;
    unint64_t v769 = (((((((((v15
                  + ((v12
                    + 10
                    + ((((((v13 + 12 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8;
    size_t v761 = v15;
    unint64_t v16 = (((v769 + 327 + ((v799 + v752 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = ((v16 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v778 = v4;
    uint64_t v793 = v10;
    uint64_t v18 = v10 | v4 | v12;
    unint64_t v719 = v16 + 16;
    unint64_t v720 = v16 + 16 + v18;
    uint64_t v766 = v18;
    unint64_t v722 = v16 + 23;
    unint64_t v19 = ((((v16 + 23 + (v720 & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v20 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v756 = v3;
    if (v20 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v20 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v20 > v17) {
      unint64_t v17 = v20;
    }
    if (v17 > v19) {
      unint64_t v19 = v17;
    }
    unint64_t v790 = v19;
    unint64_t v764 = v19 | 1;
    uint64_t v780 = swift_getAssociatedTypeWitness();
    uint64_t v21 = *(void *)(*(void *)(v780 - 8) + 64);
    uint64_t v782 = *(void *)(v780 - 8);
    uint64_t v22 = *(unsigned __int8 *)(v782 + 80);
    uint64_t v729 = v21 + v22;
    uint64_t v23 = swift_getAssociatedTypeWitness();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v732 = v24;
    uint64_t v733 = v23;
    int v25 = *(_DWORD *)(v24 + 80) & 0xF8;
    uint64_t v26 = swift_getAssociatedTypeWitness();
    uint64_t v27 = v12 | 7;
    uint64_t v735 = *(void *)(v26 - 8);
    uint64_t v737 = v26;
    uint64_t v28 = *(unsigned __int8 *)(v735 + 80);
    int v29 = v25 | v28;
    uint64_t v2 = a1;
    uint64_t v30 = v29 | 7u;
    uint64_t v718 = v21 + v30;
    uint64_t v730 = *(void *)(v24 + 64) + 7;
    uint64_t v731 = v28 + 8;
    uint64_t v734 = *(void *)(v735 + 64) + 7;
    unint64_t v31 = ((((v734 + ((v28 + 8 + (v730 & 0xFFFFFFFFFFFFFFF8)) & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
        + 16;
    unint64_t v32 = (((v769 + 327 + ((v799 + v31 + ((v21 + v30 + ((v21 + v22) & ~v22)) & ~v30)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v33 = v32 + 23;
    unint64_t v34 = ((v32 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v35 = v32 + 16;
    uint64_t v36 = v22 | v12 | v30;
    unint64_t v717 = v35;
    unint64_t v37 = v35 + v36;
    unint64_t v38 = (v21 & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v762 = v21;
    unint64_t v39 = ((((v33 + ((v35 + v36) & ~v36)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v38 <= ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v38 = ((v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v38 > v34) {
      unint64_t v34 = v38;
    }
    if (v34 <= v39) {
      unint64_t v40 = v39;
    }
    else {
      unint64_t v40 = v34;
    }
    if ((v40 | 1) <= v764) {
      uint64_t v41 = v764;
    }
    else {
      uint64_t v41 = v40 | 1;
    }
    unsigned int v42 = a1[v41];
    unsigned int v43 = v42 - 2;
    if (v42 >= 2)
    {
      if (v41 <= 3) {
        uint64_t v44 = v41;
      }
      else {
        uint64_t v44 = 4;
      }
      switch(v44)
      {
        case 1:
          int v45 = *a1;
          if (v41 < 4) {
            goto LABEL_33;
          }
          goto LABEL_34;
        case 2:
          int v45 = *(unsigned __int16 *)a1;
          if (v41 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 3:
          int v45 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v41 >= 4) {
            goto LABEL_34;
          }
          goto LABEL_33;
        case 4:
          int v45 = *(_DWORD *)a1;
          if (v41 < 4) {
LABEL_33:
          }
            v45 |= v43 << (8 * v41);
LABEL_34:
          unsigned int v42 = v45 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v726 = ~v778;
    uint64_t v727 = ~v793;
    uint64_t v728 = ~v772;
    uint64_t v779 = ~v12;
    unint64_t v46 = v769 + 16;
    uint64_t v47 = ~v766;
    uint64_t v725 = ~v22;
    uint64_t v767 = ~v30;
    uint64_t v770 = ~v28;
    uint64_t v716 = ~v36;
    uint64_t v765 = ~v27;
    if (v42 == 1)
    {
      unsigned int v48 = a1[v40];
      BOOL v49 = v48 < 6 || v40 == 0;
      uint64_t v50 = a2;
      if (!v49) {
        unsigned int v48 = *(_DWORD *)a1 + 6;
      }
      switch(v48)
      {
        case 1u:
          uint64_t v692 = v47;
          unint64_t v697 = v37;
          unint64_t v689 = v33;
          unint64_t v705 = v40;
          unint64_t v773 = v46;
          uint64_t v710 = v41;
          unint64_t v64 = ((((v734 + ((v28 + 8 + (v730 & 0xFFFFFFFFFFFFFFF8)) & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
              + 16;
          unint64_t v65 = *(void (**)(unsigned __int8 *, uint64_t))(v782 + 8);
          uint64_t v66 = ~v27;
          v65(a1, v780);
          uint64_t v687 = (void (*)(unint64_t, uint64_t))v65;
          v65((unsigned __int8 *)((unint64_t)&a1[v729] & v725), v780);
          unint64_t v67 = (((unint64_t)&a1[v729] & v725) + v762 + v30) & v767;
          uint64_t v685 = *(void (**)(unint64_t, uint64_t))(v732 + 8);
          v685(v67, v733);
          swift_bridgeObjectRelease();
          unint64_t v683 = *(void (**)(unint64_t, uint64_t))(v735 + 8);
          v683((v731 + ((v730 + v67) & 0xFFFFFFFFFFFFFFF8)) & v770, v737);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v702 = v64;
          swift_bridgeObjectRelease();
          unint64_t v68 = (v799 + v64 + v67) & v66;
          uint64_t v69 = *(void (**)(unint64_t, uint64_t))(v755 + 8);
          v69((v758 + v68) & v779, v788);
          unint64_t v70 = (v759 + ((v758 + v68) & v779)) & v779;
          v69(v70, v788);
          swift_bridgeObjectRelease();
          unint64_t v71 = (v760
               + ((((((v724 + v70) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v779;
          uint64_t v681 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v755 + 48);
          if (!v681(v71, 1, v788)) {
            v69(v71, v788);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v72 = (uint64_t *)((((((v761 + v71) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v73 = v72[1];
          if ((v73 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v72, v73);
          }
          swift_bridgeObjectRelease();
          unint64_t v74 = v68 + v46;
          uint64_t v75 = *(void **)(v74 + 16);
          LODWORD(v76) = -1;
          if ((unint64_t)v75 < 0xFFFFFFFF) {
            uint64_t v76 = *(void *)(v74 + 16);
          }
          if ((int)v76 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v74 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v74 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v74 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v65((unsigned __int8 *)((unint64_t)&a1[v697] & v716), v780);
          unint64_t v77 = (v729 + ((unint64_t)&a1[v697] & v716)) & v725;
          v687(v77, v780);
          unint64_t v78 = (v718 + v77) & v767;
          v685(v78, v733);
          swift_bridgeObjectRelease();
          v683((v731 + ((v730 + v78) & 0xFFFFFFFFFFFFFFF8)) & v770, v737);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v79 = (v799 + v78 + v702) & v765;
          v69((v758 + v79) & v779, v788);
          uint64_t v80 = (v759 + ((v758 + v79) & v779)) & v779;
          v69(v80, v788);
          swift_bridgeObjectRelease();
          unint64_t v81 = (v760
               + ((((((v724 + v80) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v779;
          if (!v681(v81, 1, v788)) {
            v69(v81, v788);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v82 = (uint64_t *)((((((v761 + v81) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v83 = v82[1];
          unint64_t v40 = v705;
          uint64_t v41 = v710;
          uint64_t v50 = a2;
          if ((v83 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v82, v83);
          }
          swift_bridgeObjectRelease();
          unint64_t v61 = v79 + v773;
          unint64_t v84 = *(void **)(v79 + v773 + 16);
          LODWORD(v85) = -1;
          if ((unint64_t)v84 < 0xFFFFFFFF) {
            uint64_t v85 = *(void *)(v61 + 16);
          }
          unint64_t v37 = v697;
          unint64_t v31 = v702;
          uint64_t v47 = v692;
          if ((int)v85 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v61 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_117;
        case 2u:
        case 4u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v782 + 8))(a1, v780);
          break;
        case 3u:
        case 5u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v782 + 8))(a1, v780);
          break;
        default:
          unint64_t v773 = v46;
          uint64_t v691 = v47;
          unint64_t v696 = v37;
          unint64_t v689 = v33;
          uint64_t v53 = *(void (**)(unsigned __int8 *, uint64_t))(v782 + 8);
          uint64_t v54 = ~v27;
          v53(a1, v780);
          v53((unsigned __int8 *)((unint64_t)&a1[v729] & v725), v780);
          unint64_t v55 = (((unint64_t)&a1[v729] & v725) + v762 + v30) & v767;
          (*(void (**)(unint64_t, uint64_t))(v732 + 8))(v55, v733);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v735 + 8))((v731 + ((v730 + v55) & 0xFFFFFFFFFFFFFFF8)) & v770, v737);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v701 = v31;
          swift_bridgeObjectRelease();
          unint64_t v709 = (v799 + v31 + v55) & v54;
          unint64_t v56 = *(void (**)(unint64_t, uint64_t))(v755 + 8);
          v56((v758 + v709) & v779, v788);
          unint64_t v57 = (v759 + ((v758 + v709) & v779)) & v779;
          v56(v57, v788);
          swift_bridgeObjectRelease();
          unint64_t v58 = (v760
               + ((((((v724 + v57) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v779;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v755 + 48))(v58, 1, v788)) {
            v56(v58, v788);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v59 = (uint64_t *)((((((v761 + v58) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v60 = v59[1];
          if ((v60 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v59, v60);
          }
          swift_bridgeObjectRelease();
          unint64_t v61 = v709 + v46;
          unint64_t v62 = *(void **)(v709 + v773 + 16);
          LODWORD(v63) = -1;
          if ((unint64_t)v62 < 0xFFFFFFFF) {
            uint64_t v63 = *(void *)(v61 + 16);
          }
          unint64_t v37 = v696;
          unint64_t v31 = v701;
          uint64_t v47 = v691;
          if ((int)v63 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v61 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_117;
      }
    }
    else
    {
      unsigned int v51 = a1[v790];
      BOOL v52 = v51 < 6 || v790 == 0;
      uint64_t v50 = a2;
      if (!v52) {
        unsigned int v51 = *(_DWORD *)a1 + 6;
      }
      switch(v51)
      {
        case 1u:
          uint64_t v694 = v47;
          unint64_t v699 = v37;
          unint64_t v706 = v40;
          unint64_t v689 = v33;
          unint64_t v773 = v46;
          uint64_t v96 = *(void (**)(unsigned __int8 *, uint64_t))(v786 + 8);
          uint64_t v97 = ~v27;
          v96(a1, AssociatedTypeWitness);
          int v688 = (void (*)(unint64_t, uint64_t))v96;
          v96((unsigned __int8 *)((unint64_t)&a1[v742] & v726), AssociatedTypeWitness);
          unint64_t v98 = (((unint64_t)&a1[v742] & v726) + v756 + v793) & v727;
          unint64_t v686 = *(void (**)(unint64_t, uint64_t))(v744 + 8);
          v686(v98, v745);
          swift_bridgeObjectRelease();
          uint64_t v684 = *(void (**)(unint64_t, uint64_t))(v747 + 8);
          v684((v743 + ((v741 + v98) & 0xFFFFFFFFFFFFFFF8)) & v728, v749);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v99 = (v799 + v752 + v98) & v97;
          unint64_t v100 = *(void (**)(unint64_t, uint64_t))(v755 + 8);
          v100((v758 + v99) & v779, v788);
          unint64_t v101 = (v759 + ((v758 + v99) & v779)) & v779;
          v100(v101, v788);
          swift_bridgeObjectRelease();
          unint64_t v102 = (v760
                + ((((((v724 + v101) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v779;
          unint64_t v682 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v755 + 48);
          if (!v682(v102, 1, v788)) {
            v100(v102, v788);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v103 = (uint64_t *)((((((v761 + v102) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v104 = v103[1];
          if ((v104 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v103, v104);
          }
          swift_bridgeObjectRelease();
          unint64_t v105 = v46 + v99;
          unint64_t v106 = *(void **)(v105 + 16);
          LODWORD(v107) = -1;
          if ((unint64_t)v106 < 0xFFFFFFFF) {
            uint64_t v107 = *(void *)(v105 + 16);
          }
          if ((int)v107 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v105 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v105 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v105 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v96((unsigned __int8 *)((unint64_t)&a1[v720] & v694), AssociatedTypeWitness);
          unint64_t v108 = (v742 + ((unint64_t)&a1[v720] & v694)) & v726;
          v688(v108, AssociatedTypeWitness);
          unint64_t v109 = (v721 + v108) & v727;
          v686(v109, v745);
          swift_bridgeObjectRelease();
          v684((v743 + ((v741 + v109) & 0xFFFFFFFFFFFFFFF8)) & v728, v749);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v110 = (v799 + v109 + v752) & v765;
          v100((v758 + v110) & v779, v788);
          unint64_t v111 = (v759 + ((v758 + v110) & v779)) & v779;
          v100(v111, v788);
          swift_bridgeObjectRelease();
          unint64_t v112 = (v760
                + ((((((v724 + v111) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v779;
          if (!v682(v112, 1, v788)) {
            v100(v112, v788);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v113 = (uint64_t *)((((((v761 + v112) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v114 = v113[1];
          unint64_t v40 = v706;
          uint64_t v50 = a2;
          unint64_t v37 = v699;
          if ((v114 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v113, v114);
          }
          swift_bridgeObjectRelease();
          unint64_t v61 = v110 + v773;
          unint64_t v115 = *(void **)(v110 + v773 + 16);
          LODWORD(v116) = -1;
          if ((unint64_t)v115 < 0xFFFFFFFF) {
            uint64_t v116 = *(void *)(v61 + 16);
          }
          uint64_t v47 = v694;
          if ((int)v116 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v61 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_117;
        case 2u:
        case 4u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v786 + 8))(a1, AssociatedTypeWitness);
          break;
        case 3u:
        case 5u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v786 + 8))(a1, AssociatedTypeWitness);
          break;
        default:
          unint64_t v773 = v46;
          uint64_t v693 = v47;
          unint64_t v698 = v37;
          unint64_t v703 = ((((v734 + ((v28 + 8 + (v730 & 0xFFFFFFFFFFFFFFF8)) & ~v28)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
               + 16;
          unint64_t v689 = v33;
          unint64_t v86 = *(void (**)(unsigned __int8 *, uint64_t))(v786 + 8);
          uint64_t v87 = ~v27;
          v86(a1, AssociatedTypeWitness);
          v86((unsigned __int8 *)((unint64_t)&a1[v742] & v726), AssociatedTypeWitness);
          unint64_t v88 = (((unint64_t)&a1[v742] & v726) + v756 + v793) & v727;
          (*(void (**)(unint64_t, uint64_t))(v744 + 8))(v88, v745);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v747 + 8))((v743 + ((v741 + v88) & 0xFFFFFFFFFFFFFFF8)) & v728, v749);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v711 = (v799 + v752 + v88) & v87;
          unint64_t v89 = *(void (**)(unint64_t, uint64_t))(v755 + 8);
          v89((v758 + v711) & v779, v788);
          unint64_t v90 = (v759 + ((v758 + v711) & v779)) & v779;
          v89(v90, v788);
          swift_bridgeObjectRelease();
          unint64_t v91 = (v760
               + ((((((v724 + v90) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v779;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v755 + 48))(v91, 1, v788)) {
            v89(v91, v788);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v92 = (uint64_t *)((((((v761 + v91) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v93 = v92[1];
          if ((v93 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v92, v93);
          }
          swift_bridgeObjectRelease();
          unint64_t v61 = v46 + v711;
          uint64_t v94 = *(void **)(v773 + v711 + 16);
          LODWORD(v95) = -1;
          if ((unint64_t)v94 < 0xFFFFFFFF) {
            uint64_t v95 = *(void *)(v61 + 16);
          }
          unint64_t v37 = v698;
          unint64_t v31 = v703;
          uint64_t v47 = v693;
          if ((int)v95 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v61 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_117:
          sub_24D466534(*(void *)((((v61 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v61 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          unint64_t v33 = v689;
          unint64_t v46 = v773;
          break;
      }
    }
    swift_bridgeObjectRelease();
    unsigned int v117 = v50[v41];
    unsigned int v118 = v117 - 2;
    if (v117 >= 2)
    {
      if (v41 <= 3) {
        uint64_t v119 = v41;
      }
      else {
        uint64_t v119 = 4;
      }
      switch(v119)
      {
        case 1:
          int v120 = *v50;
          if (v41 >= 4) {
            goto LABEL_139;
          }
          goto LABEL_126;
        case 2:
          int v120 = *(unsigned __int16 *)v50;
          if (v41 < 4) {
            goto LABEL_126;
          }
          goto LABEL_139;
        case 3:
          int v120 = *(unsigned __int16 *)v50 | (v50[2] << 16);
          if (v41 < 4) {
            goto LABEL_126;
          }
          goto LABEL_139;
        case 4:
          int v120 = *(_DWORD *)v50;
          if (v41 < 4)
          {
LABEL_126:
            unsigned int v117 = (v120 | (v118 << (8 * v41))) + 2;
            break;
          }
LABEL_139:
          if (v120 != -1) {
            goto LABEL_140;
          }
          goto LABEL_128;
        default:
          break;
      }
    }
    if (v117 == 1)
    {
LABEL_128:
      unsigned int v121 = v50[v40];
      if (v121 >= 6 && v40 != 0) {
        unsigned int v121 = *(_DWORD *)v50 + 6;
      }
      switch(v121)
      {
        case 1u:
          unint64_t v776 = v46;
          unint64_t v700 = v37;
          unint64_t v690 = v33;
          unint64_t v708 = v40;
          uint64_t v714 = v41;
          unint64_t v194 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v782 + 16);
          v194(a1, v50, v780);
          unint64_t v195 = v31;
          v787 = (void (*)(unint64_t, unint64_t, uint64_t))v194;
          v194((unsigned __int8 *)((unint64_t)&a1[v729] & v725), (unsigned __int8 *)((unint64_t)&v50[v729] & v725), v780);
          unint64_t v196 = (((unint64_t)&a1[v729] & v725) + v762 + v30) & v767;
          unint64_t v197 = (((unint64_t)&v50[v729] & v725) + v762 + v30) & v767;
          v763 = *(void (**)(unint64_t, unint64_t, uint64_t))(v732 + 16);
          v763(v196, v197, v733);
          unint64_t v198 = (void *)((v730 + v196) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v199 = (void *)((v730 + v197) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v198 = *v199;
          unint64_t v200 = ((unint64_t)v198 + v731) & v770;
          unint64_t v201 = ((unint64_t)v199 + v731) & v770;
          unint64_t v202 = *(void (**)(unint64_t, unint64_t, uint64_t))(v735 + 16);
          swift_bridgeObjectRetain();
          v785 = v202;
          v202(v200, v201, v737);
          unint64_t v203 = (void *)((v734 + v201) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v204 = (void *)((v734 + v200) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v204 = *v203;
          unint64_t v205 = (void *)(((unint64_t)v204 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v206 = (void *)(((unint64_t)v203 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v205 = *v206;
          v205[1] = v206[1];
          unint64_t v207 = (void *)(v195 + v196);
          unint64_t v704 = v195;
          void *v207 = *(void *)(v195 + v197);
          v207[1] = *(void *)(v195 + v197 + 8);
          uint64_t v208 = (v799 + v195 + v196) & v765;
          uint64_t v209 = (v799 + v195 + v197) & v765;
          *(unsigned char *)uint64_t v208 = *(unsigned char *)v209;
          uint64_t v210 = v208 | 4;
          int v211 = *(_DWORD *)(v209 | 4);
          *(unsigned char *)(v210 + 4) = *(unsigned char *)((v209 | 4) + 4);
          *(_DWORD *)uint64_t v210 = v211;
          *(_WORD *)(v208 + 10) = *(_WORD *)(v209 + 0xA);
          uint64_t v750 = v208;
          uint64_t v212 = (v758 + v208) & v779;
          uint64_t v748 = v209;
          uint64_t v213 = (v758 + v209) & v779;
          unint64_t v214 = *(void (**)(uint64_t, uint64_t, uint64_t))(v755 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v214(v212, v213, v788);
          uint64_t v215 = (v759 + v212) & v779;
          uint64_t v216 = (v759 + v213) & v779;
          v214(v215, v216, v788);
          long long v217 = (unsigned char *)(v215 + v754);
          unsigned char *v217 = *(unsigned char *)(v216 + v754);
          v217[1] = *(unsigned char *)(v216 + v754 + 1);
          v217[2] = *(unsigned char *)(v216 + v754 + 2);
          v217[3] = *(unsigned char *)(v216 + v754 + 3);
          v217[4] = *(unsigned char *)(v216 + v754 + 4);
          unint64_t v218 = (v215 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v219 = (v216 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v218 = *(void *)v219;
          *(void *)(v218 + 8) = *(void *)(v219 + 8);
          *(unsigned char *)(v218 + 16) = *(unsigned char *)(v219 + 16);
          *(unsigned char *)(v218 + 17) = *(unsigned char *)(v219 + 17);
          *(unsigned char *)(v218 + 18) = *(unsigned char *)(v219 + 18);
          *(unsigned char *)(v218 + 19) = *(unsigned char *)(v219 + 19);
          unint64_t v220 = (v218 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v221 = (v219 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v220 = *(void *)v221;
          *(unsigned char *)(v220 + 8) = *(unsigned char *)(v221 + 8);
          *(unsigned char *)(v220 + 9) = *(unsigned char *)(v221 + 9);
          *(unsigned char *)(v220 + 10) = *(unsigned char *)(v221 + 10);
          *(unsigned char *)(v220 + 11) = *(unsigned char *)(v221 + 11);
          *(unsigned char *)(v220 + 12) = *(unsigned char *)(v221 + 12);
          long long v222 = (void *)((v219 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v223 = (void *)((v218 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v223 = *v222;
          unint64_t v224 = ((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v225 = ((unint64_t)v222 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v224 = *(void *)v225;
          *(unsigned char *)(v224 + 8) = *(unsigned char *)(v225 + 8);
          *(unsigned char *)(v224 + 9) = *(unsigned char *)(v225 + 9);
          unint64_t v226 = (void *)((v760 + v224) & v779);
          uint64_t v227 = (const void *)((v760 + v225) & v779);
          unint64_t v228 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v755 + 48);
          swift_bridgeObjectRetain();
          v753 = v228;
          v791 = v214;
          if (v228(v227, 1, v788))
          {
            memcpy(v226, v227, __n);
          }
          else
          {
            v214((uint64_t)v226, (uint64_t)v227, v788);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v755 + 56))(v226, 0, 1, v788);
          }
          long long v303 = (void *)(((unint64_t)v226 + v761) & 0xFFFFFFFFFFFFFFF8);
          long long v304 = (void *)(((unint64_t)v227 + v761) & 0xFFFFFFFFFFFFFFF8);
          *long long v303 = *v304;
          unint64_t v305 = ((unint64_t)v303 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v306 = ((unint64_t)v304 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v307 = *(void *)v306;
          *(unsigned char *)(v305 + 8) = *(unsigned char *)(v306 + 8);
          *(void *)unint64_t v305 = v307;
          long long v308 = (void *)(((unint64_t)v303 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v309 = (void *)(((unint64_t)v304 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v308 = *v309;
          unint64_t v310 = ((unint64_t)v308 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v311 = (uint64_t *)(((unint64_t)v309 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v312 = v311[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v313 = v765;
          if ((v312 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v310 = *(_OWORD *)v311;
          }
          else
          {
            uint64_t v375 = *v311;
            sub_24D3F9C18(*v311, v312);
            *(void *)unint64_t v310 = v375;
            *(void *)(v310 + 8) = v312;
          }
          unint64_t v376 = (v310 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v377 = ((unint64_t)v311 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v378 = *(void *)v377;
          *(unsigned char *)(v376 + 8) = *(unsigned char *)(v377 + 8);
          *(void *)unint64_t v376 = v378;
          *(unsigned char *)(v376 + 9) = *(unsigned char *)(v377 + 9);
          unint64_t v379 = (v376 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v380 = (v377 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v381 = *(_DWORD *)v380;
          *(unsigned char *)(v379 + 4) = *(unsigned char *)(v380 + 4);
          *(_DWORD *)unint64_t v379 = v381;
          id v382 = (void *)((v376 + 25) & 0xFFFFFFFFFFFFFFF8);
          id v383 = (void *)((v377 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v382 = *v383;
          v382[1] = v383[1];
          unint64_t v384 = v750 + v776;
          uint64_t v385 = (long long *)(v748 + v776);
          unint64_t v386 = *(void *)(v748 + v776 + 16);
          if (v386 >= 0xFFFFFFFF) {
            LODWORD(v386) = -1;
          }
          int v387 = v386 - 1;
          swift_bridgeObjectRetain();
          if (v387 < 0)
          {
            *(void *)unint64_t v384 = *(void *)v385;
            *(unsigned char *)(v384 + 8) = *((unsigned char *)v385 + 8);
            *(unsigned char *)(v384 + 9) = *((unsigned char *)v385 + 9);
            unint64_t v438 = (void *)*((void *)v385 + 2);
            id v439 = v438;
            *(void *)(v384 + 16) = v438;
            unint64_t v440 = (void *)*((void *)v385 + 3);
            id v441 = v440;
            *(void *)(v384 + 24) = v440;
            *(unsigned char *)(v384 + 32) = *((unsigned char *)v385 + 32);
            *(unsigned char *)(v384 + 33) = *((unsigned char *)v385 + 33);
            *(unsigned char *)(v384 + 34) = *((unsigned char *)v385 + 34);
            *(void *)(v384 + 40) = *((void *)v385 + 5);
            *(void *)(v384 + 48) = *((void *)v385 + 6);
            *(void *)(v384 + 56) = *((void *)v385 + 7);
            *(void *)(v384 + 64) = *((void *)v385 + 8);
            *(unsigned char *)(v384 + 72) = *((unsigned char *)v385 + 72);
            *(void *)(v384 + 80) = *((void *)v385 + 10);
            *(void *)(v384 + 88) = *((void *)v385 + 11);
            v751 = (void *)*((void *)v385 + 12);
            *(void *)(v384 + 96) = v751;
            *(unsigned char *)(v384 + 104) = *((unsigned char *)v385 + 104);
            *(unsigned char *)(v384 + 105) = *((unsigned char *)v385 + 105);
            *(void *)(v384 + 112) = *((void *)v385 + 14);
            *(void *)(v384 + 120) = *((void *)v385 + 15);
            *(void *)(v384 + 128) = *((void *)v385 + 16);
            *(void *)(v384 + 136) = *((void *)v385 + 17);
            *(void *)(v384 + 144) = *((void *)v385 + 18);
            *(void *)(v384 + 152) = *((void *)v385 + 19);
            *(void *)(v384 + 160) = *((void *)v385 + 20);
            *(void *)(v384 + 168) = *((void *)v385 + 21);
            *(unsigned char *)(v384 + 176) = *((unsigned char *)v385 + 176);
            *(void *)(v384 + 184) = *((void *)v385 + 23);
            uint64_t v442 = *((void *)v385 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v443 = v751;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v442)
            {
              *(void *)(v384 + 192) = v442;
              *(void *)(v384 + 200) = *((void *)v385 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v384 + 192) = v385[12];
            }
            uint64_t v50 = a2;
            uint64_t v400 = v788;
            uint64_t v313 = v765;
            *(void *)(v384 + 208) = *((void *)v385 + 26);
            *(void *)(v384 + 216) = *((void *)v385 + 27);
            *(void *)(v384 + 224) = *((void *)v385 + 28);
            *(void *)(v384 + 232) = *((void *)v385 + 29);
            *(void *)(v384 + 240) = *((void *)v385 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v388 = *v385;
            long long v389 = v385[1];
            long long v390 = v385[3];
            *(_OWORD *)(v384 + 32) = v385[2];
            *(_OWORD *)(v384 + 48) = v390;
            *(_OWORD *)unint64_t v384 = v388;
            *(_OWORD *)(v384 + 16) = v389;
            long long v391 = v385[4];
            long long v392 = v385[5];
            long long v393 = v385[7];
            *(_OWORD *)(v384 + 96) = v385[6];
            *(_OWORD *)(v384 + 112) = v393;
            *(_OWORD *)(v384 + 64) = v391;
            *(_OWORD *)(v384 + 80) = v392;
            long long v394 = v385[8];
            long long v395 = v385[9];
            long long v396 = v385[11];
            *(_OWORD *)(v384 + 160) = v385[10];
            *(_OWORD *)(v384 + 176) = v396;
            *(_OWORD *)(v384 + 128) = v394;
            *(_OWORD *)(v384 + 144) = v395;
            long long v397 = v385[12];
            long long v398 = v385[13];
            long long v399 = v385[14];
            *(void *)(v384 + 240) = *((void *)v385 + 30);
            *(_OWORD *)(v384 + 208) = v398;
            *(_OWORD *)(v384 + 224) = v399;
            *(_OWORD *)(v384 + 192) = v397;
            uint64_t v400 = v788;
          }
          uint64_t v478 = (_OWORD *)((v384 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v479 = (long long *)(((unint64_t)v385 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v480 = *v479;
          *(_OWORD *)((char *)v478 + 9) = *(long long *)((char *)v479 + 9);
          *uint64_t v478 = v480;
          unint64_t v481 = (v384 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v482 = ((unint64_t)v385 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v483 = *(_OWORD *)v482;
          *(unsigned char *)(v481 + 16) = *(unsigned char *)(v482 + 16);
          *(_OWORD *)unint64_t v481 = v483;
          int v484 = (void *)((v384 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v485 = ((unint64_t)v385 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v486 = *(void *)v485;
          v485 += 15;
          *int v484 = v486;
          unint64_t v487 = (void *)(((unint64_t)v484 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v488 = *(void *)(v485 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v489 = *(void *)((v485 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v488, v489);
          *unint64_t v487 = v488;
          v487[1] = v489;
          uint64_t v2 = a1;
          v787((unint64_t)&a1[v700] & v716, (unint64_t)&v50[v700] & v716, v780);
          unint64_t v797 = (unint64_t)&a1[v700] & v716;
          unint64_t v490 = (v729 + v797) & v725;
          unint64_t v789 = (unint64_t)&v50[v700] & v716;
          unint64_t v491 = (v729 + v789) & v725;
          v787(v490, v491, v780);
          unint64_t v492 = (v718 + v490) & v767;
          unint64_t v493 = (v718 + v491) & v767;
          v763(v492, v493, v733);
          long long v494 = (void *)((v730 + v492) & 0xFFFFFFFFFFFFFFF8);
          long long v495 = (void *)((v730 + v493) & 0xFFFFFFFFFFFFFFF8);
          *long long v494 = *v495;
          unint64_t v496 = ((unint64_t)v494 + v731) & v770;
          unint64_t v497 = ((unint64_t)v495 + v731) & v770;
          swift_bridgeObjectRetain();
          v785(v496, v497, v737);
          long long v498 = (void *)((v734 + v496) & 0xFFFFFFFFFFFFFFF8);
          long long v499 = (void *)((v734 + v497) & 0xFFFFFFFFFFFFFFF8);
          *long long v498 = *v499;
          long long v500 = (void *)(((unint64_t)v498 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v501 = (void *)(((unint64_t)v499 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v500 = *v501;
          v500[1] = v501[1];
          long long v502 = (void *)(v492 + v704);
          *long long v502 = *(void *)(v493 + v704);
          v502[1] = *(void *)(v493 + v704 + 8);
          uint64_t v503 = (v799 + v492 + v704) & v313;
          uint64_t v504 = (v799 + v493 + v704) & v313;
          *(unsigned char *)uint64_t v503 = *(unsigned char *)v504;
          uint64_t v505 = v503 | 4;
          int v506 = *(_DWORD *)(v504 | 4);
          *(unsigned char *)(v505 + 4) = *(unsigned char *)((v504 | 4) + 4);
          *(_DWORD *)uint64_t v505 = v506;
          *(_WORD *)(v503 + 10) = *(_WORD *)(v504 + 10);
          uint64_t v507 = (v758 + v503) & v779;
          uint64_t v508 = (v758 + v504) & v779;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v791(v507, v508, v400);
          uint64_t v509 = (v759 + v507) & v779;
          uint64_t v510 = (v759 + v508) & v779;
          v791(v509, v510, v400);
          id v511 = (unsigned char *)(v509 + v754);
          unsigned char *v511 = *(unsigned char *)(v510 + v754);
          v511[1] = *(unsigned char *)(v510 + v754 + 1);
          v511[2] = *(unsigned char *)(v510 + v754 + 2);
          v511[3] = *(unsigned char *)(v510 + v754 + 3);
          v511[4] = *(unsigned char *)(v510 + v754 + 4);
          unint64_t v512 = (v509 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v513 = (v510 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v512 = *(void *)v513;
          *(void *)(v512 + 8) = *(void *)(v513 + 8);
          *(unsigned char *)(v512 + 16) = *(unsigned char *)(v513 + 16);
          *(unsigned char *)(v512 + 17) = *(unsigned char *)(v513 + 17);
          *(unsigned char *)(v512 + 18) = *(unsigned char *)(v513 + 18);
          *(unsigned char *)(v512 + 19) = *(unsigned char *)(v513 + 19);
          unint64_t v514 = (v512 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v515 = (v513 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v514 = *(void *)v515;
          *(unsigned char *)(v514 + 8) = *(unsigned char *)(v515 + 8);
          *(unsigned char *)(v514 + 9) = *(unsigned char *)(v515 + 9);
          *(unsigned char *)(v514 + 10) = *(unsigned char *)(v515 + 10);
          *(unsigned char *)(v514 + 11) = *(unsigned char *)(v515 + 11);
          *(unsigned char *)(v514 + 12) = *(unsigned char *)(v515 + 12);
          unint64_t v516 = (void *)((v512 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v517 = (void *)((v513 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v516 = *v517;
          unint64_t v518 = ((unint64_t)v516 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v519 = ((unint64_t)v517 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v518 = *(void *)v519;
          *(unsigned char *)(v518 + 8) = *(unsigned char *)(v519 + 8);
          *(unsigned char *)(v518 + 9) = *(unsigned char *)(v519 + 9);
          uint64_t v520 = (void *)((v760 + v518) & v779);
          unint64_t v521 = (const void *)((v760 + v519) & v779);
          swift_bridgeObjectRetain();
          if (v753(v521, 1, v400))
          {
            memcpy(v520, v521, __n);
          }
          else
          {
            v791((uint64_t)v520, (uint64_t)v521, v400);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v755 + 56))(v520, 0, 1, v400);
          }
          uint64_t v41 = v714;
          uint64_t v522 = (void *)(((unint64_t)v520 + v761) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v523 = (void *)(((unint64_t)v521 + v761) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v522 = *v523;
          unint64_t v524 = ((unint64_t)v522 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v525 = ((unint64_t)v523 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v526 = *(void *)v525;
          *(unsigned char *)(v524 + 8) = *(unsigned char *)(v525 + 8);
          *(void *)unint64_t v524 = v526;
          uint64_t v527 = (void *)(((unint64_t)v522 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v528 = (void *)(((unint64_t)v523 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v527 = *v528;
          unint64_t v529 = ((unint64_t)v527 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v530 = (uint64_t *)(((unint64_t)v528 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v531 = v530[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v531 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v529 = *(_OWORD *)v530;
          }
          else
          {
            uint64_t v532 = *v530;
            sub_24D3F9C18(*v530, v531);
            *(void *)unint64_t v529 = v532;
            *(void *)(v529 + 8) = v531;
          }
          unint64_t v533 = (v529 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v534 = ((unint64_t)v530 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v535 = *(void *)v534;
          *(unsigned char *)(v533 + 8) = *(unsigned char *)(v534 + 8);
          *(void *)unint64_t v533 = v535;
          *(unsigned char *)(v533 + 9) = *(unsigned char *)(v534 + 9);
          unint64_t v536 = (v533 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v537 = (v534 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v538 = *(_DWORD *)v537;
          *(unsigned char *)(v536 + 4) = *(unsigned char *)(v537 + 4);
          *(_DWORD *)unint64_t v536 = v538;
          uint64_t v539 = (void *)((v533 + 25) & 0xFFFFFFFFFFFFFFF8);
          int v540 = (void *)((v534 + 25) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v539 = *v540;
          v539[1] = v540[1];
          unint64_t v541 = v503 + v776;
          unint64_t v542 = (long long *)(v504 + v776);
          unint64_t v543 = *(void *)(v504 + v776 + 16);
          if (v543 >= 0xFFFFFFFF) {
            LODWORD(v543) = -1;
          }
          int v544 = v543 - 1;
          swift_bridgeObjectRetain();
          if (v544 < 0)
          {
            *(void *)unint64_t v541 = *(void *)v542;
            *(unsigned char *)(v541 + 8) = *((unsigned char *)v542 + 8);
            *(unsigned char *)(v541 + 9) = *((unsigned char *)v542 + 9);
            uint64_t v557 = (void *)*((void *)v542 + 2);
            id v558 = v557;
            *(void *)(v541 + 16) = v557;
            unint64_t v559 = (void *)*((void *)v542 + 3);
            id v560 = v559;
            *(void *)(v541 + 24) = v559;
            *(unsigned char *)(v541 + 32) = *((unsigned char *)v542 + 32);
            *(unsigned char *)(v541 + 33) = *((unsigned char *)v542 + 33);
            *(unsigned char *)(v541 + 34) = *((unsigned char *)v542 + 34);
            *(void *)(v541 + 40) = *((void *)v542 + 5);
            *(void *)(v541 + 48) = *((void *)v542 + 6);
            *(void *)(v541 + 56) = *((void *)v542 + 7);
            *(void *)(v541 + 64) = *((void *)v542 + 8);
            *(unsigned char *)(v541 + 72) = *((unsigned char *)v542 + 72);
            *(void *)(v541 + 80) = *((void *)v542 + 10);
            *(void *)(v541 + 88) = *((void *)v542 + 11);
            v804 = (void *)*((void *)v542 + 12);
            *(void *)(v541 + 96) = v804;
            *(unsigned char *)(v541 + 104) = *((unsigned char *)v542 + 104);
            *(unsigned char *)(v541 + 105) = *((unsigned char *)v542 + 105);
            *(void *)(v541 + 112) = *((void *)v542 + 14);
            *(void *)(v541 + 120) = *((void *)v542 + 15);
            *(void *)(v541 + 128) = *((void *)v542 + 16);
            *(void *)(v541 + 136) = *((void *)v542 + 17);
            *(void *)(v541 + 144) = *((void *)v542 + 18);
            *(void *)(v541 + 152) = *((void *)v542 + 19);
            *(void *)(v541 + 160) = *((void *)v542 + 20);
            *(void *)(v541 + 168) = *((void *)v542 + 21);
            *(unsigned char *)(v541 + 176) = *((unsigned char *)v542 + 176);
            *(void *)(v541 + 184) = *((void *)v542 + 23);
            uint64_t v561 = *((void *)v542 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v562 = v804;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v561)
            {
              *(void *)(v541 + 192) = v561;
              *(void *)(v541 + 200) = *((void *)v542 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v541 + 192) = v542[12];
            }
            uint64_t v2 = a1;
            uint64_t v41 = v714;
            *(void *)(v541 + 208) = *((void *)v542 + 26);
            *(void *)(v541 + 216) = *((void *)v542 + 27);
            *(void *)(v541 + 224) = *((void *)v542 + 28);
            *(void *)(v541 + 232) = *((void *)v542 + 29);
            *(void *)(v541 + 240) = *((void *)v542 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v545 = *v542;
            long long v546 = v542[1];
            long long v547 = v542[3];
            *(_OWORD *)(v541 + 32) = v542[2];
            *(_OWORD *)(v541 + 48) = v547;
            *(_OWORD *)unint64_t v541 = v545;
            *(_OWORD *)(v541 + 16) = v546;
            long long v548 = v542[4];
            long long v549 = v542[5];
            long long v550 = v542[7];
            *(_OWORD *)(v541 + 96) = v542[6];
            *(_OWORD *)(v541 + 112) = v550;
            *(_OWORD *)(v541 + 64) = v548;
            *(_OWORD *)(v541 + 80) = v549;
            long long v551 = v542[8];
            long long v552 = v542[9];
            long long v553 = v542[11];
            *(_OWORD *)(v541 + 160) = v542[10];
            *(_OWORD *)(v541 + 176) = v553;
            *(_OWORD *)(v541 + 128) = v551;
            *(_OWORD *)(v541 + 144) = v552;
            long long v554 = v542[12];
            long long v555 = v542[13];
            long long v556 = v542[14];
            *(void *)(v541 + 240) = *((void *)v542 + 30);
            *(_OWORD *)(v541 + 208) = v555;
            *(_OWORD *)(v541 + 224) = v556;
            *(_OWORD *)(v541 + 192) = v554;
          }
          v648 = (_OWORD *)((v541 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v649 = (long long *)(((unint64_t)v542 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v650 = *v649;
          *(_OWORD *)((char *)v648 + 9) = *(long long *)((char *)v649 + 9);
          _OWORD *v648 = v650;
          unint64_t v651 = (v541 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v652 = ((unint64_t)v542 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v653 = *(_OWORD *)v652;
          *(unsigned char *)(v651 + 16) = *(unsigned char *)(v652 + 16);
          *(_OWORD *)unint64_t v651 = v653;
          unint64_t v654 = (void *)((v541 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v655 = ((unint64_t)v542 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v656 = *(void *)v655;
          v655 += 15;
          *unint64_t v654 = v656;
          unint64_t v657 = (void *)(((unint64_t)v654 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v658 = *(void *)(v655 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v659 = *(void *)((v655 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v658, v659);
          *unint64_t v657 = v658;
          v657[1] = v659;
          uint64_t v660 = (void *)((v690 + v789) & 0xFFFFFFFFFFFFFFF8);
          v661 = (void *)((v690 + v797) & 0xFFFFFFFFFFFFFFF8);
          void *v661 = *v660;
          uint64_t v662 = (void *)(((unint64_t)v661 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v663 = (void *)(((unint64_t)v660 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v662 = *v663;
          v662[1] = v663[1];
          char v232 = 1;
          unint64_t v40 = v708;
          char v231 = 1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v782 + 16))(a1, v50, v780);
          a1[v762] = v50[v762];
          unint64_t v229 = (unint64_t)&a1[v762] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v230 = (unint64_t)&v50[v762] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v229 + 8) = *(void *)(v230 + 8);
          *(void *)(v229 + 16) = *(void *)(v230 + 16);
          char v231 = 1;
          char v232 = 2;
          break;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v782 + 16))(a1, v50, v780);
          unint64_t v233 = (void *)((unint64_t)&a1[v762 + 7] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v234 = (void *)((unint64_t)&v50[v762 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v233 = *v234;
          v233[1] = v234[1];
          char v231 = 1;
          char v232 = 3;
          break;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v782 + 16))(a1, v50, v780);
          a1[v762] = v50[v762];
          unint64_t v235 = (unint64_t)&a1[v762] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v236 = (unint64_t)&v50[v762] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v235 + 8) = *(void *)(v236 + 8);
          *(void *)(v235 + 16) = *(void *)(v236 + 16);
          char v231 = 1;
          char v232 = 4;
          break;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v782 + 16))(a1, v50, v780);
          uint64_t v237 = (void *)((unint64_t)&a1[v762 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v238 = (void *)((unint64_t)&v50[v762 + 7] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v237 = *v238;
          v237[1] = v238[1];
          char v231 = 1;
LABEL_160:
          char v232 = 5;
          break;
        default:
          unint64_t v707 = v40;
          unint64_t v774 = v46;
          uint64_t v712 = v41;
          unint64_t v123 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v782 + 16);
          v123(a1, v50, v780);
          unint64_t v124 = v31;
          v123((unsigned __int8 *)((unint64_t)&a1[v729] & v725), (unsigned __int8 *)((unint64_t)&v50[v729] & v725), v780);
          unint64_t v125 = (((unint64_t)&a1[v729] & v725) + v762 + v30) & v767;
          unint64_t v126 = (((unint64_t)&v50[v729] & v725) + v762 + v30) & v767;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v732 + 16))(v125, v126, v733);
          unint64_t v127 = (void *)((v730 + v125) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v128 = (void *)((v730 + v126) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v127 = *v128;
          unint64_t v129 = ((unint64_t)v127 + v731) & v770;
          unint64_t v130 = ((unint64_t)v128 + v731) & v770;
          unint64_t v131 = *(void (**)(unint64_t, unint64_t, uint64_t))(v735 + 16);
          swift_bridgeObjectRetain();
          v131(v129, v130, v737);
          uint64_t v132 = (void *)((v734 + v130) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v133 = (void *)((v734 + v129) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v133 = *v132;
          uint64_t v134 = (void *)(((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v135 = (void *)(((unint64_t)v132 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v134 = *v135;
          v134[1] = v135[1];
          uint64_t v136 = (void *)(v124 + v125);
          *uint64_t v136 = *(void *)(v124 + v126);
          v136[1] = *(void *)(v124 + v126 + 8);
          uint64_t v137 = (v799 + v124 + v125) & v765;
          uint64_t v138 = (v799 + v124 + v126) & v765;
          *(unsigned char *)uint64_t v137 = *(unsigned char *)v138;
          uint64_t v139 = v137 | 4;
          int v140 = *(_DWORD *)(v138 | 4);
          *(unsigned char *)(v139 + 4) = *(unsigned char *)((v138 | 4) + 4);
          *(_DWORD *)uint64_t v139 = v140;
          *(_WORD *)(v137 + 10) = *(_WORD *)(v138 + 0xA);
          uint64_t v800 = v137;
          uint64_t v141 = (v758 + v137) & v779;
          uint64_t v794 = v138;
          uint64_t v142 = (v758 + v138) & v779;
          uint64_t v143 = *(void (**)(uint64_t, uint64_t, uint64_t))(v755 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v143(v141, v142, v788);
          uint64_t v144 = (v759 + v141) & v779;
          uint64_t v145 = (v759 + v142) & v779;
          v143(v144, v145, v788);
          uint64_t v146 = (unsigned char *)(v144 + v754);
          *uint64_t v146 = *(unsigned char *)(v145 + v754);
          v146[1] = *(unsigned char *)(v145 + v754 + 1);
          v146[2] = *(unsigned char *)(v145 + v754 + 2);
          v146[3] = *(unsigned char *)(v145 + v754 + 3);
          v146[4] = *(unsigned char *)(v145 + v754 + 4);
          unint64_t v147 = (v144 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v148 = (v145 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v147 = *(void *)v148;
          *(void *)(v147 + 8) = *(void *)(v148 + 8);
          *(unsigned char *)(v147 + 16) = *(unsigned char *)(v148 + 16);
          *(unsigned char *)(v147 + 17) = *(unsigned char *)(v148 + 17);
          *(unsigned char *)(v147 + 18) = *(unsigned char *)(v148 + 18);
          *(unsigned char *)(v147 + 19) = *(unsigned char *)(v148 + 19);
          unint64_t v149 = (v147 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v150 = (v148 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v149 = *(void *)v150;
          *(unsigned char *)(v149 + 8) = *(unsigned char *)(v150 + 8);
          *(unsigned char *)(v149 + 9) = *(unsigned char *)(v150 + 9);
          *(unsigned char *)(v149 + 10) = *(unsigned char *)(v150 + 10);
          *(unsigned char *)(v149 + 11) = *(unsigned char *)(v150 + 11);
          *(unsigned char *)(v149 + 12) = *(unsigned char *)(v150 + 12);
          int v151 = (void *)((v148 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v152 = (void *)((v147 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v152 = *v151;
          unint64_t v153 = ((unint64_t)v152 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v154 = ((unint64_t)v151 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v153 = *(void *)v154;
          *(unsigned char *)(v153 + 8) = *(unsigned char *)(v154 + 8);
          *(unsigned char *)(v153 + 9) = *(unsigned char *)(v154 + 9);
          uint64_t v155 = (void *)((v760 + v153) & v779);
          uint64_t v156 = (const void *)((v760 + v154) & v779);
          uint64_t v157 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v755 + 48);
          swift_bridgeObjectRetain();
          if (v157(v156, 1, v788))
          {
            memcpy(v155, v156, __n);
          }
          else
          {
            v143((uint64_t)v155, (uint64_t)v156, v788);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v755 + 56))(v155, 0, 1, v788);
          }
          long long v281 = (void *)(((unint64_t)v155 + v761) & 0xFFFFFFFFFFFFFFF8);
          long long v282 = (void *)(((unint64_t)v156 + v761) & 0xFFFFFFFFFFFFFFF8);
          *long long v281 = *v282;
          unint64_t v283 = ((unint64_t)v281 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v284 = ((unint64_t)v282 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v285 = *(void *)v284;
          *(unsigned char *)(v283 + 8) = *(unsigned char *)(v284 + 8);
          *(void *)unint64_t v283 = v285;
          long long v286 = (void *)(((unint64_t)v281 + 31) & 0xFFFFFFFFFFFFFFF8);
          long long v287 = (void *)(((unint64_t)v282 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v286 = *v287;
          unint64_t v288 = ((unint64_t)v286 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v289 = (uint64_t *)(((unint64_t)v287 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v290 = v289[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          unint64_t v291 = a2;
          if ((v290 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v288 = *(_OWORD *)v289;
          }
          else
          {
            uint64_t v325 = *v289;
            sub_24D3F9C18(*v289, v290);
            *(void *)unint64_t v288 = v325;
            *(void *)(v288 + 8) = v290;
          }
          unint64_t v326 = (v288 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v327 = ((unint64_t)v289 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v328 = *(void *)v327;
          *(unsigned char *)(v326 + 8) = *(unsigned char *)(v327 + 8);
          *(void *)unint64_t v326 = v328;
          *(unsigned char *)(v326 + 9) = *(unsigned char *)(v327 + 9);
          unint64_t v329 = (v326 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v330 = (v327 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v331 = *(_DWORD *)v330;
          *(unsigned char *)(v329 + 4) = *(unsigned char *)(v330 + 4);
          *(_DWORD *)unint64_t v329 = v331;
          long long v332 = (void *)((v326 + 25) & 0xFFFFFFFFFFFFFFF8);
          long long v333 = (void *)((v327 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v332 = *v333;
          v332[1] = v333[1];
          unint64_t v334 = v800 + v774;
          long long v335 = (long long *)(v794 + v774);
          unint64_t v336 = *(void *)(v794 + v774 + 16);
          if (v336 >= 0xFFFFFFFF) {
            LODWORD(v336) = -1;
          }
          int v337 = v336 - 1;
          swift_bridgeObjectRetain();
          uint64_t v41 = v712;
          if (v337 < 0)
          {
            *(void *)unint64_t v334 = *(void *)v335;
            *(unsigned char *)(v334 + 8) = *((unsigned char *)v335 + 8);
            *(unsigned char *)(v334 + 9) = *((unsigned char *)v335 + 9);
            unint64_t v426 = (void *)*((void *)v335 + 2);
            id v427 = v426;
            *(void *)(v334 + 16) = v426;
            unint64_t v428 = (void *)*((void *)v335 + 3);
            id v429 = v428;
            *(void *)(v334 + 24) = v428;
            *(unsigned char *)(v334 + 32) = *((unsigned char *)v335 + 32);
            *(unsigned char *)(v334 + 33) = *((unsigned char *)v335 + 33);
            *(unsigned char *)(v334 + 34) = *((unsigned char *)v335 + 34);
            *(void *)(v334 + 40) = *((void *)v335 + 5);
            *(void *)(v334 + 48) = *((void *)v335 + 6);
            *(void *)(v334 + 56) = *((void *)v335 + 7);
            *(void *)(v334 + 64) = *((void *)v335 + 8);
            *(unsigned char *)(v334 + 72) = *((unsigned char *)v335 + 72);
            *(void *)(v334 + 80) = *((void *)v335 + 10);
            *(void *)(v334 + 88) = *((void *)v335 + 11);
            v802 = (void *)*((void *)v335 + 12);
            *(void *)(v334 + 96) = v802;
            *(unsigned char *)(v334 + 104) = *((unsigned char *)v335 + 104);
            *(unsigned char *)(v334 + 105) = *((unsigned char *)v335 + 105);
            *(void *)(v334 + 112) = *((void *)v335 + 14);
            *(void *)(v334 + 120) = *((void *)v335 + 15);
            *(void *)(v334 + 128) = *((void *)v335 + 16);
            *(void *)(v334 + 136) = *((void *)v335 + 17);
            *(void *)(v334 + 144) = *((void *)v335 + 18);
            *(void *)(v334 + 152) = *((void *)v335 + 19);
            *(void *)(v334 + 160) = *((void *)v335 + 20);
            *(void *)(v334 + 168) = *((void *)v335 + 21);
            *(unsigned char *)(v334 + 176) = *((unsigned char *)v335 + 176);
            *(void *)(v334 + 184) = *((void *)v335 + 23);
            uint64_t v430 = *((void *)v335 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v431 = v802;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v430)
            {
              *(void *)(v334 + 192) = v430;
              *(void *)(v334 + 200) = *((void *)v335 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v334 + 192) = v335[12];
            }
            uint64_t v2 = a1;
            uint64_t v41 = v712;
            unint64_t v291 = a2;
            *(void *)(v334 + 208) = *((void *)v335 + 26);
            *(void *)(v334 + 216) = *((void *)v335 + 27);
            *(void *)(v334 + 224) = *((void *)v335 + 28);
            *(void *)(v334 + 232) = *((void *)v335 + 29);
            *(void *)(v334 + 240) = *((void *)v335 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v338 = *v335;
            long long v339 = v335[1];
            long long v340 = v335[3];
            *(_OWORD *)(v334 + 32) = v335[2];
            *(_OWORD *)(v334 + 48) = v340;
            *(_OWORD *)unint64_t v334 = v338;
            *(_OWORD *)(v334 + 16) = v339;
            long long v341 = v335[4];
            long long v342 = v335[5];
            long long v343 = v335[7];
            *(_OWORD *)(v334 + 96) = v335[6];
            *(_OWORD *)(v334 + 112) = v343;
            *(_OWORD *)(v334 + 64) = v341;
            *(_OWORD *)(v334 + 80) = v342;
            long long v344 = v335[8];
            long long v345 = v335[9];
            long long v346 = v335[11];
            *(_OWORD *)(v334 + 160) = v335[10];
            *(_OWORD *)(v334 + 176) = v346;
            *(_OWORD *)(v334 + 128) = v344;
            *(_OWORD *)(v334 + 144) = v345;
            long long v347 = v335[12];
            long long v348 = v335[13];
            long long v349 = v335[14];
            *(void *)(v334 + 240) = *((void *)v335 + 30);
            *(_OWORD *)(v334 + 208) = v348;
            *(_OWORD *)(v334 + 224) = v349;
            *(_OWORD *)(v334 + 192) = v347;
          }
          uint64_t v450 = (_OWORD *)((v334 + 255) & 0xFFFFFFFFFFFFFFF8);
          int v451 = (long long *)(((unint64_t)v335 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v452 = *v451;
          *(_OWORD *)((char *)v450 + 9) = *(long long *)((char *)v451 + 9);
          *uint64_t v450 = v452;
          unint64_t v453 = (v334 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v454 = ((unint64_t)v335 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v455 = *(_OWORD *)v454;
          *(unsigned char *)(v453 + 16) = *(unsigned char *)(v454 + 16);
          *(_OWORD *)unint64_t v453 = v455;
          unint64_t v456 = (void *)((v334 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v457 = ((unint64_t)v335 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v458 = *(void *)v457;
          v457 += 15;
          *unint64_t v456 = v458;
          unint64_t v459 = (void *)(((unint64_t)v456 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v460 = *(void *)(v457 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v461 = *(void *)((v457 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v460, v461);
          char v232 = 0;
          *unint64_t v459 = v460;
          v459[1] = v461;
          unint64_t v462 = (void *)((unint64_t)&v2[v717 + 7] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v463 = (void *)((unint64_t)&v291[v717 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v462 = *v463;
          v462[1] = v463[1];
          char v231 = 1;
          unint64_t v40 = v707;
          break;
      }
    }
    else
    {
LABEL_140:
      unint64_t v40 = v790;
      unsigned int v158 = v50[v790];
      if (v158 >= 6 && v790 != 0) {
        unsigned int v158 = *(_DWORD *)v50 + 6;
      }
      switch(v158)
      {
        case 1u:
          unint64_t v777 = v46;
          uint64_t v695 = v47;
          uint64_t v715 = v41;
          long long v239 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v786 + 16);
          v239(a1, v50, AssociatedTypeWitness);
          v781 = (void (*)(unint64_t, unint64_t, uint64_t))v239;
          v239((unsigned __int8 *)((unint64_t)&a1[v742] & v726), (unsigned __int8 *)((unint64_t)&v50[v742] & v726), AssociatedTypeWitness);
          unint64_t v240 = (((unint64_t)&a1[v742] & v726) + v756 + v793) & v727;
          unint64_t v241 = (((unint64_t)&v50[v742] & v726) + v756 + v793) & v727;
          v768 = *(void (**)(unint64_t, unint64_t, uint64_t))(v744 + 16);
          v768(v240, v241, v745);
          unint64_t v242 = (void *)((v741 + v240) & 0xFFFFFFFFFFFFFFF8);
          long long v243 = (void *)((v741 + v241) & 0xFFFFFFFFFFFFFFF8);
          void *v242 = *v243;
          unint64_t v244 = ((unint64_t)v242 + v743) & v728;
          unint64_t v245 = ((unint64_t)v243 + v743) & v728;
          unint64_t v246 = *(void (**)(unint64_t, unint64_t, uint64_t))(v747 + 16);
          swift_bridgeObjectRetain();
          v771 = v246;
          v246(v244, v245, v749);
          uint64_t v247 = (void *)((v746 + v245) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v248 = (void *)((v746 + v244) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v248 = *v247;
          unint64_t v249 = (void *)(((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v250 = (void *)(((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v249 = *v250;
          v249[1] = v250[1];
          unint64_t v251 = (void *)(v752 + v240);
          void *v251 = *(void *)(v752 + v241);
          v251[1] = *(void *)(v752 + v241 + 8);
          unint64_t v252 = (v799 + v752 + v240) & v765;
          unint64_t v253 = (v799 + v752 + v241) & v765;
          *(unsigned char *)unint64_t v252 = *(unsigned char *)v253;
          uint64_t v254 = v252 | 4;
          int v255 = *(_DWORD *)(v253 | 4);
          *(unsigned char *)(v254 + 4) = *(unsigned char *)((v253 | 4) + 4);
          *(_DWORD *)uint64_t v254 = v255;
          *(_WORD *)(v252 + 10) = *(_WORD *)(v253 + 0xA);
          unint64_t v738 = v252;
          unint64_t v256 = (v758 + v252) & v779;
          unint64_t v736 = v253;
          unint64_t v257 = (v758 + v253) & v779;
          uint64_t v258 = *(void (**)(unint64_t, unint64_t, uint64_t))(v755 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v258(v256, v257, v788);
          unint64_t v259 = (v759 + v256) & v779;
          unint64_t v260 = (v759 + v257) & v779;
          v258(v259, v260, v788);
          unint64_t v261 = (unsigned char *)(v259 + v754);
          *unint64_t v261 = *(unsigned char *)(v260 + v754);
          v261[1] = *(unsigned char *)(v260 + v754 + 1);
          v261[2] = *(unsigned char *)(v260 + v754 + 2);
          v261[3] = *(unsigned char *)(v260 + v754 + 3);
          v261[4] = *(unsigned char *)(v260 + v754 + 4);
          unint64_t v262 = (v259 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v263 = (v260 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v262 = *(void *)v263;
          *(void *)(v262 + 8) = *(void *)(v263 + 8);
          *(unsigned char *)(v262 + 16) = *(unsigned char *)(v263 + 16);
          *(unsigned char *)(v262 + 17) = *(unsigned char *)(v263 + 17);
          *(unsigned char *)(v262 + 18) = *(unsigned char *)(v263 + 18);
          *(unsigned char *)(v262 + 19) = *(unsigned char *)(v263 + 19);
          unint64_t v264 = (v262 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v265 = (v263 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v264 = *(void *)v265;
          *(unsigned char *)(v264 + 8) = *(unsigned char *)(v265 + 8);
          *(unsigned char *)(v264 + 9) = *(unsigned char *)(v265 + 9);
          *(unsigned char *)(v264 + 10) = *(unsigned char *)(v265 + 10);
          *(unsigned char *)(v264 + 11) = *(unsigned char *)(v265 + 11);
          *(unsigned char *)(v264 + 12) = *(unsigned char *)(v265 + 12);
          unint64_t v266 = (void *)((v263 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v267 = (void *)((v262 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v267 = *v266;
          unint64_t v268 = ((unint64_t)v267 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v269 = ((unint64_t)v266 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v268 = *(void *)v269;
          *(unsigned char *)(v268 + 8) = *(unsigned char *)(v269 + 8);
          *(unsigned char *)(v268 + 9) = *(unsigned char *)(v269 + 9);
          int v270 = (void *)((v760 + v268) & v779);
          unint64_t v271 = (const void *)((v760 + v269) & v779);
          int v272 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v755 + 48);
          swift_bridgeObjectRetain();
          v757 = v272;
          v783 = v258;
          if (v272(v271, 1, v788))
          {
            memcpy(v270, v271, __n);
          }
          else
          {
            v258((unint64_t)v270, (unint64_t)v271, v788);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v755 + 56))(v270, 0, 1, v788);
          }
          long long v314 = (void *)(((unint64_t)v270 + v761) & 0xFFFFFFFFFFFFFFF8);
          long long v315 = (void *)(((unint64_t)v271 + v761) & 0xFFFFFFFFFFFFFFF8);
          *long long v314 = *v315;
          unint64_t v316 = ((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v317 = ((unint64_t)v315 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v318 = *(void *)v317;
          *(unsigned char *)(v316 + 8) = *(unsigned char *)(v317 + 8);
          *(void *)unint64_t v316 = v318;
          uint64_t v319 = (void *)(((unint64_t)v314 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v320 = (void *)(((unint64_t)v315 + 31) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v319 = *v320;
          unint64_t v321 = ((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8;
          int v322 = (uint64_t *)(((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v323 = v322[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v324 = v765;
          if ((v323 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v321 = *(_OWORD *)v322;
          }
          else
          {
            uint64_t v401 = *v322;
            sub_24D3F9C18(*v322, v323);
            *(void *)unint64_t v321 = v401;
            *(void *)(v321 + 8) = v323;
          }
          unint64_t v402 = (v321 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v403 = ((unint64_t)v322 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v404 = *(void *)v403;
          *(unsigned char *)(v402 + 8) = *(unsigned char *)(v403 + 8);
          *(void *)unint64_t v402 = v404;
          *(unsigned char *)(v402 + 9) = *(unsigned char *)(v403 + 9);
          unint64_t v405 = (v402 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v406 = (v403 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v407 = *(_DWORD *)v406;
          *(unsigned char *)(v405 + 4) = *(unsigned char *)(v406 + 4);
          *(_DWORD *)unint64_t v405 = v407;
          unint64_t v408 = (void *)((v402 + 25) & 0xFFFFFFFFFFFFFFF8);
          long long v409 = (void *)((v403 + 25) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v408 = *v409;
          v408[1] = v409[1];
          unint64_t v410 = v46 + v738;
          unint64_t v411 = (long long *)(v777 + v736);
          unint64_t v412 = *(void *)(v777 + v736 + 16);
          if (v412 >= 0xFFFFFFFF) {
            LODWORD(v412) = -1;
          }
          int v413 = v412 - 1;
          swift_bridgeObjectRetain();
          if (v413 < 0)
          {
            *(void *)unint64_t v410 = *(void *)v411;
            *(unsigned char *)(v410 + 8) = *((unsigned char *)v411 + 8);
            *(unsigned char *)(v410 + 9) = *((unsigned char *)v411 + 9);
            uint64_t v444 = (void *)*((void *)v411 + 2);
            id v445 = v444;
            *(void *)(v410 + 16) = v444;
            uint64_t v446 = (void *)*((void *)v411 + 3);
            id v447 = v446;
            *(void *)(v410 + 24) = v446;
            *(unsigned char *)(v410 + 32) = *((unsigned char *)v411 + 32);
            *(unsigned char *)(v410 + 33) = *((unsigned char *)v411 + 33);
            *(unsigned char *)(v410 + 34) = *((unsigned char *)v411 + 34);
            *(void *)(v410 + 40) = *((void *)v411 + 5);
            *(void *)(v410 + 48) = *((void *)v411 + 6);
            *(void *)(v410 + 56) = *((void *)v411 + 7);
            *(void *)(v410 + 64) = *((void *)v411 + 8);
            *(unsigned char *)(v410 + 72) = *((unsigned char *)v411 + 72);
            *(void *)(v410 + 80) = *((void *)v411 + 10);
            *(void *)(v410 + 88) = *((void *)v411 + 11);
            v739 = (void *)*((void *)v411 + 12);
            *(void *)(v410 + 96) = v739;
            *(unsigned char *)(v410 + 104) = *((unsigned char *)v411 + 104);
            *(unsigned char *)(v410 + 105) = *((unsigned char *)v411 + 105);
            *(void *)(v410 + 112) = *((void *)v411 + 14);
            *(void *)(v410 + 120) = *((void *)v411 + 15);
            *(void *)(v410 + 128) = *((void *)v411 + 16);
            *(void *)(v410 + 136) = *((void *)v411 + 17);
            *(void *)(v410 + 144) = *((void *)v411 + 18);
            *(void *)(v410 + 152) = *((void *)v411 + 19);
            *(void *)(v410 + 160) = *((void *)v411 + 20);
            *(void *)(v410 + 168) = *((void *)v411 + 21);
            *(unsigned char *)(v410 + 176) = *((unsigned char *)v411 + 176);
            *(void *)(v410 + 184) = *((void *)v411 + 23);
            uint64_t v448 = *((void *)v411 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v449 = v739;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v448)
            {
              *(void *)(v410 + 192) = v448;
              *(void *)(v410 + 200) = *((void *)v411 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v410 + 192) = v411[12];
            }
            uint64_t v2 = a1;
            uint64_t v50 = a2;
            uint64_t v324 = v765;
            *(void *)(v410 + 208) = *((void *)v411 + 26);
            *(void *)(v410 + 216) = *((void *)v411 + 27);
            *(void *)(v410 + 224) = *((void *)v411 + 28);
            *(void *)(v410 + 232) = *((void *)v411 + 29);
            *(void *)(v410 + 240) = *((void *)v411 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v414 = *v411;
            long long v415 = v411[1];
            long long v416 = v411[3];
            *(_OWORD *)(v410 + 32) = v411[2];
            *(_OWORD *)(v410 + 48) = v416;
            *(_OWORD *)unint64_t v410 = v414;
            *(_OWORD *)(v410 + 16) = v415;
            long long v417 = v411[4];
            long long v418 = v411[5];
            long long v419 = v411[7];
            *(_OWORD *)(v410 + 96) = v411[6];
            *(_OWORD *)(v410 + 112) = v419;
            *(_OWORD *)(v410 + 64) = v417;
            *(_OWORD *)(v410 + 80) = v418;
            long long v420 = v411[8];
            long long v421 = v411[9];
            long long v422 = v411[11];
            *(_OWORD *)(v410 + 160) = v411[10];
            *(_OWORD *)(v410 + 176) = v422;
            *(_OWORD *)(v410 + 128) = v420;
            *(_OWORD *)(v410 + 144) = v421;
            long long v423 = v411[12];
            long long v424 = v411[13];
            long long v425 = v411[14];
            *(void *)(v410 + 240) = *((void *)v411 + 30);
            *(_OWORD *)(v410 + 208) = v424;
            *(_OWORD *)(v410 + 224) = v425;
            *(_OWORD *)(v410 + 192) = v423;
          }
          unint64_t v563 = (_OWORD *)((v410 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v564 = (long long *)(((unint64_t)v411 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v565 = *v564;
          *(_OWORD *)((char *)v563 + 9) = *(long long *)((char *)v564 + 9);
          *unint64_t v563 = v565;
          unint64_t v566 = (v410 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v567 = ((unint64_t)v411 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v568 = *(_OWORD *)v567;
          *(unsigned char *)(v566 + 16) = *(unsigned char *)(v567 + 16);
          *(_OWORD *)unint64_t v566 = v568;
          uint64_t v569 = (void *)((v410 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v570 = ((unint64_t)v411 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v571 = *(void *)v570;
          v570 += 15;
          *uint64_t v569 = v571;
          int v572 = (void *)(((unint64_t)v569 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v573 = *(void *)(v570 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v574 = *(void *)((v570 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v573, v574);
          *int v572 = v573;
          v572[1] = v574;
          v781((unint64_t)&v2[v720] & v695, (unint64_t)&v50[v720] & v695, AssociatedTypeWitness);
          unint64_t v798 = (unint64_t)&v2[v720] & v695;
          unint64_t v575 = (v742 + v798) & v726;
          unint64_t v740 = (unint64_t)&v50[v720] & v695;
          unint64_t v576 = (v742 + v740) & v726;
          v781(v575, v576, AssociatedTypeWitness);
          uint64_t v577 = (v721 + v575) & v727;
          unint64_t v578 = (v721 + v576) & v727;
          v768(v577, v578, v745);
          long long v579 = (void *)((v741 + v577) & 0xFFFFFFFFFFFFFFF8);
          long long v580 = (void *)((v741 + v578) & 0xFFFFFFFFFFFFFFF8);
          *long long v579 = *v580;
          unint64_t v581 = ((unint64_t)v579 + v743) & v728;
          unint64_t v582 = ((unint64_t)v580 + v743) & v728;
          swift_bridgeObjectRetain();
          v771(v581, v582, v749);
          long long v583 = (void *)((v746 + v581) & 0xFFFFFFFFFFFFFFF8);
          long long v584 = (void *)((v746 + v582) & 0xFFFFFFFFFFFFFFF8);
          *long long v583 = *v584;
          long long v585 = (void *)(((unint64_t)v583 + 15) & 0xFFFFFFFFFFFFFFF8);
          long long v586 = (void *)(((unint64_t)v584 + 15) & 0xFFFFFFFFFFFFFFF8);
          *long long v585 = *v586;
          v585[1] = v586[1];
          long long v587 = (void *)(v577 + v752);
          *long long v587 = *(void *)(v578 + v752);
          v587[1] = *(void *)(v578 + v752 + 8);
          unint64_t v588 = (v799 + v577 + v752) & v324;
          unint64_t v589 = (v799 + v578 + v752) & v324;
          *(unsigned char *)unint64_t v588 = *(unsigned char *)v589;
          uint64_t v590 = v588 | 4;
          int v591 = *(_DWORD *)(v589 | 4);
          *(unsigned char *)(v590 + 4) = *(unsigned char *)((v589 | 4) + 4);
          *(_DWORD *)uint64_t v590 = v591;
          *(_WORD *)(v588 + 10) = *(_WORD *)(v589 + 0xA);
          unint64_t v592 = (v758 + v588) & v779;
          unint64_t v593 = (v758 + v589) & v779;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v783(v592, v593, v788);
          unint64_t v594 = (v759 + v592) & v779;
          unint64_t v595 = (v759 + v593) & v779;
          v783(v594, v595, v788);
          id v596 = (unsigned char *)(v594 + v754);
          *id v596 = *(unsigned char *)(v595 + v754);
          v596[1] = *(unsigned char *)(v595 + v754 + 1);
          v596[2] = *(unsigned char *)(v595 + v754 + 2);
          v596[3] = *(unsigned char *)(v595 + v754 + 3);
          v596[4] = *(unsigned char *)(v595 + v754 + 4);
          unint64_t v597 = (v594 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v598 = (v595 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v597 = *(void *)v598;
          *(void *)(v597 + 8) = *(void *)(v598 + 8);
          *(unsigned char *)(v597 + 16) = *(unsigned char *)(v598 + 16);
          *(unsigned char *)(v597 + 17) = *(unsigned char *)(v598 + 17);
          *(unsigned char *)(v597 + 18) = *(unsigned char *)(v598 + 18);
          *(unsigned char *)(v597 + 19) = *(unsigned char *)(v598 + 19);
          unint64_t v599 = (v597 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v600 = (v598 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v599 = *(void *)v600;
          *(unsigned char *)(v599 + 8) = *(unsigned char *)(v600 + 8);
          *(unsigned char *)(v599 + 9) = *(unsigned char *)(v600 + 9);
          *(unsigned char *)(v599 + 10) = *(unsigned char *)(v600 + 10);
          *(unsigned char *)(v599 + 11) = *(unsigned char *)(v600 + 11);
          *(unsigned char *)(v599 + 12) = *(unsigned char *)(v600 + 12);
          long long v601 = (void *)((v597 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v602 = (void *)((v598 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v601 = *v602;
          unint64_t v603 = ((unint64_t)v601 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v604 = ((unint64_t)v602 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v603 = *(void *)v604;
          *(unsigned char *)(v603 + 8) = *(unsigned char *)(v604 + 8);
          *(unsigned char *)(v603 + 9) = *(unsigned char *)(v604 + 9);
          unint64_t v605 = (void *)((v760 + v603) & v779);
          unint64_t v606 = (const void *)((v760 + v604) & v779);
          swift_bridgeObjectRetain();
          if (v757(v606, 1, v788))
          {
            memcpy(v605, v606, __n);
          }
          else
          {
            v783((unint64_t)v605, (unint64_t)v606, v788);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v755 + 56))(v605, 0, 1, v788);
          }
          uint64_t v607 = (void *)(((unint64_t)v605 + v761) & 0xFFFFFFFFFFFFFFF8);
          v608 = (void *)(((unint64_t)v606 + v761) & 0xFFFFFFFFFFFFFFF8);
          void *v607 = *v608;
          unint64_t v609 = ((unint64_t)v607 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v610 = ((unint64_t)v608 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v611 = *(void *)v610;
          *(unsigned char *)(v609 + 8) = *(unsigned char *)(v610 + 8);
          *(void *)unint64_t v609 = v611;
          long long v612 = (void *)(((unint64_t)v607 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v613 = (void *)(((unint64_t)v608 + 31) & 0xFFFFFFFFFFFFFFF8);
          *long long v612 = *v613;
          unint64_t v614 = ((unint64_t)v612 + 15) & 0xFFFFFFFFFFFFFFF8;
          long long v615 = (uint64_t *)(((unint64_t)v613 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v616 = v615[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((v616 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v614 = *(_OWORD *)v615;
          }
          else
          {
            uint64_t v617 = *v615;
            sub_24D3F9C18(*v615, v616);
            *(void *)unint64_t v614 = v617;
            *(void *)(v614 + 8) = v616;
          }
          unint64_t v618 = (v614 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v619 = ((unint64_t)v615 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v620 = *(void *)v619;
          *(unsigned char *)(v618 + 8) = *(unsigned char *)(v619 + 8);
          *(void *)unint64_t v618 = v620;
          *(unsigned char *)(v618 + 9) = *(unsigned char *)(v619 + 9);
          unint64_t v621 = (v618 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v622 = (v619 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v623 = *(_DWORD *)v622;
          *(unsigned char *)(v621 + 4) = *(unsigned char *)(v622 + 4);
          *(_DWORD *)unint64_t v621 = v623;
          v624 = (void *)((v618 + 25) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v625 = (void *)((v619 + 25) & 0xFFFFFFFFFFFFFFF8);
          void *v624 = *v625;
          v624[1] = v625[1];
          unint64_t v626 = v588 + v777;
          uint64_t v627 = (long long *)(v589 + v777);
          unint64_t v628 = *(void *)(v589 + v777 + 16);
          if (v628 >= 0xFFFFFFFF) {
            LODWORD(v628) = -1;
          }
          int v629 = v628 - 1;
          swift_bridgeObjectRetain();
          unint64_t v40 = v790;
          if (v629 < 0)
          {
            *(void *)unint64_t v626 = *(void *)v627;
            *(unsigned char *)(v626 + 8) = *((unsigned char *)v627 + 8);
            *(unsigned char *)(v626 + 9) = *((unsigned char *)v627 + 9);
            v642 = (void *)*((void *)v627 + 2);
            id v643 = v642;
            *(void *)(v626 + 16) = v642;
            uint64_t v644 = (void *)*((void *)v627 + 3);
            id v645 = v644;
            *(void *)(v626 + 24) = v644;
            *(unsigned char *)(v626 + 32) = *((unsigned char *)v627 + 32);
            *(unsigned char *)(v626 + 33) = *((unsigned char *)v627 + 33);
            *(unsigned char *)(v626 + 34) = *((unsigned char *)v627 + 34);
            *(void *)(v626 + 40) = *((void *)v627 + 5);
            *(void *)(v626 + 48) = *((void *)v627 + 6);
            *(void *)(v626 + 56) = *((void *)v627 + 7);
            *(void *)(v626 + 64) = *((void *)v627 + 8);
            *(unsigned char *)(v626 + 72) = *((unsigned char *)v627 + 72);
            *(void *)(v626 + 80) = *((void *)v627 + 10);
            *(void *)(v626 + 88) = *((void *)v627 + 11);
            v805 = (void *)*((void *)v627 + 12);
            *(void *)(v626 + 96) = v805;
            *(unsigned char *)(v626 + 104) = *((unsigned char *)v627 + 104);
            *(unsigned char *)(v626 + 105) = *((unsigned char *)v627 + 105);
            *(void *)(v626 + 112) = *((void *)v627 + 14);
            *(void *)(v626 + 120) = *((void *)v627 + 15);
            *(void *)(v626 + 128) = *((void *)v627 + 16);
            *(void *)(v626 + 136) = *((void *)v627 + 17);
            *(void *)(v626 + 144) = *((void *)v627 + 18);
            *(void *)(v626 + 152) = *((void *)v627 + 19);
            *(void *)(v626 + 160) = *((void *)v627 + 20);
            *(void *)(v626 + 168) = *((void *)v627 + 21);
            *(unsigned char *)(v626 + 176) = *((unsigned char *)v627 + 176);
            *(void *)(v626 + 184) = *((void *)v627 + 23);
            uint64_t v646 = *((void *)v627 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v647 = v805;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v646)
            {
              *(void *)(v626 + 192) = v646;
              *(void *)(v626 + 200) = *((void *)v627 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v626 + 192) = v627[12];
            }
            unint64_t v40 = v790;
            uint64_t v2 = a1;
            uint64_t v41 = v715;
            *(void *)(v626 + 208) = *((void *)v627 + 26);
            *(void *)(v626 + 216) = *((void *)v627 + 27);
            *(void *)(v626 + 224) = *((void *)v627 + 28);
            *(void *)(v626 + 232) = *((void *)v627 + 29);
            *(void *)(v626 + 240) = *((void *)v627 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v630 = *v627;
            long long v631 = v627[1];
            long long v632 = v627[3];
            *(_OWORD *)(v626 + 32) = v627[2];
            *(_OWORD *)(v626 + 48) = v632;
            *(_OWORD *)unint64_t v626 = v630;
            *(_OWORD *)(v626 + 16) = v631;
            long long v633 = v627[4];
            long long v634 = v627[5];
            long long v635 = v627[7];
            *(_OWORD *)(v626 + 96) = v627[6];
            *(_OWORD *)(v626 + 112) = v635;
            *(_OWORD *)(v626 + 64) = v633;
            *(_OWORD *)(v626 + 80) = v634;
            long long v636 = v627[8];
            long long v637 = v627[9];
            long long v638 = v627[11];
            *(_OWORD *)(v626 + 160) = v627[10];
            *(_OWORD *)(v626 + 176) = v638;
            *(_OWORD *)(v626 + 128) = v636;
            *(_OWORD *)(v626 + 144) = v637;
            long long v639 = v627[12];
            long long v640 = v627[13];
            long long v641 = v627[14];
            *(void *)(v626 + 240) = *((void *)v627 + 30);
            *(_OWORD *)(v626 + 208) = v640;
            *(_OWORD *)(v626 + 224) = v641;
            *(_OWORD *)(v626 + 192) = v639;
            uint64_t v41 = v715;
          }
          uint64_t v664 = (_OWORD *)((v626 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v665 = (long long *)(((unint64_t)v627 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v666 = *v665;
          *(_OWORD *)((char *)v664 + 9) = *(long long *)((char *)v665 + 9);
          *uint64_t v664 = v666;
          unint64_t v667 = (v626 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v668 = ((unint64_t)v627 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v669 = *(_OWORD *)v668;
          *(unsigned char *)(v667 + 16) = *(unsigned char *)(v668 + 16);
          *(_OWORD *)unint64_t v667 = v669;
          uint64_t v670 = (void *)((v626 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v671 = ((unint64_t)v627 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v672 = *(void *)v671;
          v671 += 15;
          *uint64_t v670 = v672;
          size_t v673 = (void *)(((unint64_t)v670 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v674 = *(void *)(v671 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v675 = *(void *)((v671 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v674, v675);
          char v231 = 0;
          *size_t v673 = v674;
          v673[1] = v675;
          uint64_t v676 = (void *)((v722 + v798) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v677 = (void *)((v722 + v740) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v676 = *v677;
          uint64_t v678 = (void *)(((unint64_t)v676 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v679 = (void *)(((unint64_t)v677 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v678 = *v679;
          v678[1] = v679[1];
          char v232 = 1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v786 + 16))(a1, v50, AssociatedTypeWitness);
          char v231 = 0;
          a1[v756] = v50[v756];
          unint64_t v273 = (unint64_t)&a1[v756] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v274 = (unint64_t)&v50[v756] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v273 + 8) = *(void *)(v274 + 8);
          *(void *)(v273 + 16) = *(void *)(v274 + 16);
          char v232 = 2;
          break;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v786 + 16))(a1, v50, AssociatedTypeWitness);
          char v231 = 0;
          unint64_t v275 = (void *)((unint64_t)&a1[v756 + 7] & 0xFFFFFFFFFFFFFFF8);
          int v276 = (void *)((unint64_t)&v50[v756 + 7] & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v275 = *v276;
          v275[1] = v276[1];
          char v232 = 3;
          break;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v786 + 16))(a1, v50, AssociatedTypeWitness);
          char v231 = 0;
          a1[v756] = v50[v756];
          unint64_t v277 = (unint64_t)&a1[v756] & 0xFFFFFFFFFFFFFFF8;
          unint64_t v278 = (unint64_t)&v50[v756] & 0xFFFFFFFFFFFFFFF8;
          *(void *)(v277 + 8) = *(void *)(v278 + 8);
          *(void *)(v277 + 16) = *(void *)(v278 + 16);
          char v232 = 4;
          break;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v786 + 16))(a1, v50, AssociatedTypeWitness);
          char v231 = 0;
          long long v279 = (void *)((unint64_t)&a1[v756 + 7] & 0xFFFFFFFFFFFFFFF8);
          long long v280 = (void *)((unint64_t)&v50[v756 + 7] & 0xFFFFFFFFFFFFFFF8);
          *long long v279 = *v280;
          v279[1] = v280[1];
          goto LABEL_160;
        default:
          unint64_t v775 = v46;
          uint64_t v713 = v41;
          unint64_t v160 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v786 + 16);
          v160(a1, v50, AssociatedTypeWitness);
          v160((unsigned __int8 *)((unint64_t)&a1[v742] & v726), (unsigned __int8 *)((unint64_t)&v50[v742] & v726), AssociatedTypeWitness);
          unint64_t v161 = (((unint64_t)&a1[v742] & v726) + v756 + v793) & v727;
          unint64_t v162 = (((unint64_t)&v50[v742] & v726) + v756 + v793) & v727;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v744 + 16))(v161, v162, v745);
          unint64_t v163 = (void *)((v741 + v161) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v164 = (void *)((v741 + v162) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v163 = *v164;
          unint64_t v165 = ((unint64_t)v163 + v743) & v728;
          unint64_t v166 = ((unint64_t)v164 + v743) & v728;
          uint64_t v167 = *(void (**)(unint64_t, unint64_t, uint64_t))(v747 + 16);
          swift_bridgeObjectRetain();
          v167(v165, v166, v749);
          uint64_t v168 = (void *)((v746 + v166) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v169 = (void *)((v746 + v165) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v169 = *v168;
          unint64_t v170 = (void *)(((unint64_t)v169 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v171 = (void *)(((unint64_t)v168 + 15) & 0xFFFFFFFFFFFFFFF8);
          void *v170 = *v171;
          v170[1] = v171[1];
          char v172 = (void *)(v752 + v161);
          *char v172 = *(void *)(v752 + v162);
          v172[1] = *(void *)(v752 + v162 + 8);
          unint64_t v173 = (v799 + v752 + v161) & v765;
          unint64_t v174 = (v799 + v752 + v162) & v765;
          *(unsigned char *)unint64_t v173 = *(unsigned char *)v174;
          uint64_t v175 = v173 | 4;
          int v176 = *(_DWORD *)(v174 | 4);
          *(unsigned char *)(v175 + 4) = *(unsigned char *)((v174 | 4) + 4);
          *(_DWORD *)uint64_t v175 = v176;
          *(_WORD *)(v173 + 10) = *(_WORD *)(v174 + 0xA);
          unint64_t v801 = v173;
          unint64_t v177 = (v758 + v173) & v779;
          unint64_t v795 = v174;
          unint64_t v178 = (v758 + v174) & v779;
          uint64_t v179 = *(void (**)(unint64_t, unint64_t, uint64_t))(v755 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v179(v177, v178, v788);
          unint64_t v180 = (v759 + v177) & v779;
          unint64_t v181 = (v759 + v178) & v779;
          v179(v180, v181, v788);
          uint64_t v182 = (unsigned char *)(v180 + v754);
          unsigned char *v182 = *(unsigned char *)(v181 + v754);
          v182[1] = *(unsigned char *)(v181 + v754 + 1);
          v182[2] = *(unsigned char *)(v181 + v754 + 2);
          v182[3] = *(unsigned char *)(v181 + v754 + 3);
          v182[4] = *(unsigned char *)(v181 + v754 + 4);
          unint64_t v183 = (v180 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v184 = (v181 + v754 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v183 = *(void *)v184;
          *(void *)(v183 + 8) = *(void *)(v184 + 8);
          *(unsigned char *)(v183 + 16) = *(unsigned char *)(v184 + 16);
          *(unsigned char *)(v183 + 17) = *(unsigned char *)(v184 + 17);
          *(unsigned char *)(v183 + 18) = *(unsigned char *)(v184 + 18);
          *(unsigned char *)(v183 + 19) = *(unsigned char *)(v184 + 19);
          unint64_t v185 = (v183 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v186 = (v184 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v185 = *(void *)v186;
          *(unsigned char *)(v185 + 8) = *(unsigned char *)(v186 + 8);
          *(unsigned char *)(v185 + 9) = *(unsigned char *)(v186 + 9);
          *(unsigned char *)(v185 + 10) = *(unsigned char *)(v186 + 10);
          *(unsigned char *)(v185 + 11) = *(unsigned char *)(v186 + 11);
          *(unsigned char *)(v185 + 12) = *(unsigned char *)(v186 + 12);
          unint64_t v187 = (void *)((v184 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v188 = (void *)((v183 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v188 = *v187;
          unint64_t v189 = ((unint64_t)v188 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v190 = ((unint64_t)v187 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v189 = *(void *)v190;
          *(unsigned char *)(v189 + 8) = *(unsigned char *)(v190 + 8);
          *(unsigned char *)(v189 + 9) = *(unsigned char *)(v190 + 9);
          unint64_t v191 = (void *)((v760 + v189) & v779);
          unint64_t v192 = (const void *)((v760 + v190) & v779);
          unint64_t v193 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v755 + 48);
          swift_bridgeObjectRetain();
          if (v193(v192, 1, v788))
          {
            memcpy(v191, v192, __n);
          }
          else
          {
            v179((unint64_t)v191, (unint64_t)v192, v788);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v755 + 56))(v191, 0, 1, v788);
          }
          unint64_t v292 = (void *)(((unint64_t)v191 + v761) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v293 = (void *)(((unint64_t)v192 + v761) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v292 = *v293;
          unint64_t v294 = ((unint64_t)v292 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v295 = ((unint64_t)v293 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v296 = *(void *)v295;
          *(unsigned char *)(v294 + 8) = *(unsigned char *)(v295 + 8);
          *(void *)unint64_t v294 = v296;
          unint64_t v297 = (void *)(((unint64_t)v292 + 31) & 0xFFFFFFFFFFFFFFF8);
          int v298 = (void *)(((unint64_t)v293 + 31) & 0xFFFFFFFFFFFFFFF8);
          void *v297 = *v298;
          unint64_t v299 = ((unint64_t)v297 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v300 = (uint64_t *)(((unint64_t)v298 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v301 = v300[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          int v302 = a2;
          if ((v301 & 0x3000000000000000) != 0)
          {
            *(_OWORD *)unint64_t v299 = *(_OWORD *)v300;
          }
          else
          {
            uint64_t v350 = *v300;
            sub_24D3F9C18(*v300, v301);
            *(void *)unint64_t v299 = v350;
            *(void *)(v299 + 8) = v301;
          }
          unint64_t v351 = (v299 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v352 = ((unint64_t)v300 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v353 = *(void *)v352;
          *(unsigned char *)(v351 + 8) = *(unsigned char *)(v352 + 8);
          *(void *)unint64_t v351 = v353;
          *(unsigned char *)(v351 + 9) = *(unsigned char *)(v352 + 9);
          unint64_t v354 = (v351 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v355 = (v352 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          int v356 = *(_DWORD *)v355;
          *(unsigned char *)(v354 + 4) = *(unsigned char *)(v355 + 4);
          *(_DWORD *)unint64_t v354 = v356;
          long long v357 = (void *)((v351 + 25) & 0xFFFFFFFFFFFFFFF8);
          long long v358 = (void *)((v352 + 25) & 0xFFFFFFFFFFFFFFF8);
          *long long v357 = *v358;
          v357[1] = v358[1];
          unint64_t v359 = v775 + v801;
          long long v360 = (long long *)(v775 + v795);
          unint64_t v361 = *(void *)(v775 + v795 + 16);
          if (v361 >= 0xFFFFFFFF) {
            LODWORD(v361) = -1;
          }
          int v362 = v361 - 1;
          swift_bridgeObjectRetain();
          uint64_t v41 = v713;
          if (v362 < 0)
          {
            *(void *)unint64_t v359 = *(void *)v360;
            *(unsigned char *)(v359 + 8) = *((unsigned char *)v360 + 8);
            *(unsigned char *)(v359 + 9) = *((unsigned char *)v360 + 9);
            uint64_t v432 = (void *)*((void *)v360 + 2);
            id v433 = v432;
            *(void *)(v359 + 16) = v432;
            unint64_t v434 = (void *)*((void *)v360 + 3);
            id v435 = v434;
            *(void *)(v359 + 24) = v434;
            *(unsigned char *)(v359 + 32) = *((unsigned char *)v360 + 32);
            *(unsigned char *)(v359 + 33) = *((unsigned char *)v360 + 33);
            *(unsigned char *)(v359 + 34) = *((unsigned char *)v360 + 34);
            *(void *)(v359 + 40) = *((void *)v360 + 5);
            *(void *)(v359 + 48) = *((void *)v360 + 6);
            *(void *)(v359 + 56) = *((void *)v360 + 7);
            *(void *)(v359 + 64) = *((void *)v360 + 8);
            *(unsigned char *)(v359 + 72) = *((unsigned char *)v360 + 72);
            *(void *)(v359 + 80) = *((void *)v360 + 10);
            *(void *)(v359 + 88) = *((void *)v360 + 11);
            v803 = (void *)*((void *)v360 + 12);
            *(void *)(v359 + 96) = v803;
            *(unsigned char *)(v359 + 104) = *((unsigned char *)v360 + 104);
            *(unsigned char *)(v359 + 105) = *((unsigned char *)v360 + 105);
            *(void *)(v359 + 112) = *((void *)v360 + 14);
            *(void *)(v359 + 120) = *((void *)v360 + 15);
            *(void *)(v359 + 128) = *((void *)v360 + 16);
            *(void *)(v359 + 136) = *((void *)v360 + 17);
            *(void *)(v359 + 144) = *((void *)v360 + 18);
            *(void *)(v359 + 152) = *((void *)v360 + 19);
            *(void *)(v359 + 160) = *((void *)v360 + 20);
            *(void *)(v359 + 168) = *((void *)v360 + 21);
            *(unsigned char *)(v359 + 176) = *((unsigned char *)v360 + 176);
            *(void *)(v359 + 184) = *((void *)v360 + 23);
            uint64_t v436 = *((void *)v360 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            id v437 = v803;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v436)
            {
              *(void *)(v359 + 192) = v436;
              *(void *)(v359 + 200) = *((void *)v360 + 25);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
            }
            else
            {
              *(_OWORD *)(v359 + 192) = v360[12];
            }
            unint64_t v40 = v790;
            uint64_t v2 = a1;
            uint64_t v41 = v713;
            int v302 = a2;
            *(void *)(v359 + 208) = *((void *)v360 + 26);
            *(void *)(v359 + 216) = *((void *)v360 + 27);
            *(void *)(v359 + 224) = *((void *)v360 + 28);
            *(void *)(v359 + 232) = *((void *)v360 + 29);
            *(void *)(v359 + 240) = *((void *)v360 + 30);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          else
          {
            long long v363 = *v360;
            long long v364 = v360[1];
            long long v365 = v360[3];
            *(_OWORD *)(v359 + 32) = v360[2];
            *(_OWORD *)(v359 + 48) = v365;
            *(_OWORD *)unint64_t v359 = v363;
            *(_OWORD *)(v359 + 16) = v364;
            long long v366 = v360[4];
            long long v367 = v360[5];
            long long v368 = v360[7];
            *(_OWORD *)(v359 + 96) = v360[6];
            *(_OWORD *)(v359 + 112) = v368;
            *(_OWORD *)(v359 + 64) = v366;
            *(_OWORD *)(v359 + 80) = v367;
            long long v369 = v360[8];
            long long v370 = v360[9];
            long long v371 = v360[11];
            *(_OWORD *)(v359 + 160) = v360[10];
            *(_OWORD *)(v359 + 176) = v371;
            *(_OWORD *)(v359 + 128) = v369;
            *(_OWORD *)(v359 + 144) = v370;
            long long v372 = v360[12];
            long long v373 = v360[13];
            long long v374 = v360[14];
            *(void *)(v359 + 240) = *((void *)v360 + 30);
            *(_OWORD *)(v359 + 208) = v373;
            *(_OWORD *)(v359 + 224) = v374;
            *(_OWORD *)(v359 + 192) = v372;
            unint64_t v40 = v790;
          }
          unint64_t v464 = (_OWORD *)((v359 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v465 = (long long *)(((unint64_t)v360 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v466 = *v465;
          *(_OWORD *)((char *)v464 + 9) = *(long long *)((char *)v465 + 9);
          *unint64_t v464 = v466;
          unint64_t v467 = (v359 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v468 = ((unint64_t)v360 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v469 = *(_OWORD *)v468;
          *(unsigned char *)(v467 + 16) = *(unsigned char *)(v468 + 16);
          *(_OWORD *)unint64_t v467 = v469;
          unint64_t v470 = (void *)((v359 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v471 = ((unint64_t)v360 + 311) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v472 = *(void *)v471;
          v471 += 15;
          *unint64_t v470 = v472;
          unint64_t v473 = (void *)(((unint64_t)v470 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v474 = *(void *)(v471 & 0xFFFFFFFFFFFFFFF8);
          unint64_t v475 = *(void *)((v471 & 0xFFFFFFFFFFFFFFF8) + 8);
          sub_24D5203A8(v474, v475);
          char v232 = 0;
          char v231 = 0;
          *unint64_t v473 = v474;
          v473[1] = v475;
          uint64_t v476 = (void *)((unint64_t)&v2[v719 + 7] & 0xFFFFFFFFFFFFFFF8);
          unint64_t v477 = (void *)((unint64_t)&v302[v719 + 7] & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v476 = *v477;
          v476[1] = v477[1];
          break;
      }
    }
    v2[v40] = v232;
    swift_bridgeObjectRetain();
    v2[v41] = v231;
  }
  return v2;
}

uint64_t sub_24D9A1CC8(uint64_t a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v506 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(unsigned __int8 *)(v506 + 80);
  uint64_t v460 = v2 + v3;
  uint64_t v463 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v463 - 8);
  uint64_t v473 = v4;
  int v5 = *(_DWORD *)(v4 + 80) & 0xF8;
  uint64_t v467 = swift_getAssociatedTypeWitness();
  uint64_t v474 = *(void *)(v467 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v474 + 80);
  uint64_t v7 = v5 | v6 | 7;
  uint64_t v451 = v2 + v7;
  uint64_t v458 = *(void *)(v4 + 64) + 7;
  uint64_t v462 = v6 + 8;
  uint64_t v492 = v6;
  uint64_t v465 = *(void *)(v474 + 64) + 7;
  unint64_t v469 = ((((v465 + ((v6 + 8 + (v458 & 0xFFFFFFFFFFFFFFF8)) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16;
  uint64_t v476 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v476 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v530 = (v9 | 7) + 16;
  uint64_t v482 = v9 + 12;
  uint64_t v10 = *(void *)(v8 + 64);
  uint64_t v483 = v10 + v9;
  uint64_t v484 = v10;
  uint64_t v485 = v9 + 10;
  uint64_t v477 = v8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v11 = *(void *)(*(void *)(v476 - 8) + 64);
  }
  else {
    size_t v11 = v10 + 1;
  }
  size_t __n = v11;
  size_t v486 = v11 + 7;
  unint64_t v524 = (((((((((v11
                + 7
                + ((v9
                  + 10
                  + ((((((v10 + ((v10 + v9 + ((v9 + 12) & ~v9)) & ~v9) + 12) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                    + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
              + 31) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 19) & 0xFFFFFFFFFFFFFFF8)
        + 25) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v12 = (((v524 + 327 + ((v530 + v469 + ((v2 + v7 + ((v2 + v3) & ~v3)) & ~v7)) & ~(v9 | 7))) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = ((v12 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  uint64_t v495 = v3;
  uint64_t v509 = v7;
  uint64_t v14 = v7 | v3 | v9;
  unint64_t v448 = v12 + 16;
  unint64_t v449 = v12 + 16 + v14;
  uint64_t v487 = v14;
  unint64_t v452 = v12 + 23;
  unint64_t v15 = ((((v12 + 23 + (v449 & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v16 = (v2 & 0xFFFFFFFFFFFFFFF8) + 24;
  uint64_t v478 = v2;
  if (v16 <= ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v16 = ((v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v16 > v13) {
    unint64_t v13 = v16;
  }
  if (v13 > v15) {
    unint64_t v15 = v13;
  }
  unint64_t v512 = v15;
  unint64_t v519 = v15 | 1;
  uint64_t v499 = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(*(void *)(v499 - 8) + 64);
  uint64_t v504 = *(void *)(v499 - 8);
  uint64_t v18 = *(unsigned __int8 *)(v504 + 80);
  uint64_t v454 = v17 + v18;
  uint64_t v456 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v456 - 8);
  uint64_t v472 = v19;
  int v20 = *(_DWORD *)(v19 + 80) & 0xF8;
  uint64_t v21 = swift_getAssociatedTypeWitness();
  uint64_t v22 = v19;
  uint64_t v23 = *(unsigned __int8 *)(*(void *)(v21 - 8) + 80);
  uint64_t v24 = v20 | v23 | 7;
  uint64_t v25 = *(void *)(v22 + 64) + 7;
  uint64_t v26 = v23 + 8;
  unint64_t v27 = ((((*(void *)(*(void *)(v21 - 8) + 64) + 7 + ((v23 + 8 + (v25 & 0xFFFFFFFFFFFFFFF8)) & ~v23)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v28 = (((v524 + 327 + ((v530 + v27 + ((v17 + v24 + ((v17 + v18) & ~v18)) & ~v24)) & ~(v9 | 7))) & 0xFFFFFFFFFFFFFFF8)
       + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = v28 + 23;
  unint64_t v30 = ((v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v31 = v28 + 16;
  uint64_t v32 = v18 | v9 | v24;
  unint64_t v33 = v31 + v32;
  unint64_t v34 = (v17 & 0xFFFFFFFFFFFFFFF8) + 24;
  if (v34 <= ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v34 = ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  if (v34 > v30) {
    unint64_t v30 = v34;
  }
  if (v30 <= ((((v29 + ((v31 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16) {
    unint64_t v35 = ((((v29 + ((v31 + v32) & ~v32)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  }
  else {
    unint64_t v35 = v30;
  }
  if ((v35 | 1) <= v519) {
    uint64_t v36 = v519;
  }
  else {
    uint64_t v36 = v35 | 1;
  }
  unsigned int v37 = a2[v36];
  unsigned int v38 = v37 - 2;
  if (v37 >= 2)
  {
    if (v36 <= 3) {
      uint64_t v39 = v36;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *a2;
        if (v36 < 4) {
          goto LABEL_30;
        }
        goto LABEL_32;
      case 2:
        int v40 = *(unsigned __int16 *)a2;
        if (v36 >= 4) {
          goto LABEL_32;
        }
        goto LABEL_30;
      case 3:
        int v40 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v36 < 4) {
          goto LABEL_30;
        }
        goto LABEL_32;
      case 4:
        int v40 = *(_DWORD *)a2;
        if (v36 < 4) {
LABEL_30:
        }
          unsigned int v37 = (v40 | (v38 << (8 * v36))) + 2;
        else {
LABEL_32:
        }
          unsigned int v37 = v40 + 2;
        break;
      default:
        break;
    }
  }
  uint64_t v41 = ~(v9 | 7);
  uint64_t v42 = ~v9;
  if (v37 == 1)
  {
    unsigned int v43 = a2[v35];
    if (v43 >= 6 && v35 != 0) {
      unsigned int v43 = *(_DWORD *)a2 + 6;
    }
    uint64_t v45 = ~v18;
    uint64_t v46 = ~v23;
    uint64_t v47 = ~v32;
    switch(v43)
    {
      case 1u:
        uint64_t v461 = v47;
        unint64_t v468 = v33;
        uint64_t v470 = v17 + v24;
        unint64_t v475 = v29;
        unint64_t v489 = v35;
        uint64_t v522 = v41;
        unint64_t v527 = v524 + 16;
        uint64_t v514 = *(void *)(v21 - 8);
        uint64_t v517 = v36;
        int v113 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32);
        uint64_t v508 = v21;
        unint64_t v511 = v27;
        uint64_t v497 = v42;
        uint64_t v480 = *(void *)(v514 + 64) + 7;
        uint64_t v503 = v26;
        uint64_t v494 = v46;
        v113(a1, a2, v499);
        uint64_t v114 = (v454 + a1) & v45;
        uint64_t v464 = ~v18;
        unint64_t v115 = (unint64_t)&a2[v454] & v45;
        v113(v114, (unsigned __int8 *)v115, v499);
        uint64_t v116 = (v114 + v17 + v24) & ~v24;
        uint64_t v466 = ~v24;
        unint64_t v117 = (v115 + v17 + v24) & ~v24;
        unint64_t v459 = *(void (**)(uint64_t, unint64_t, uint64_t))(v472 + 32);
        v459(v116, v117, v456);
        unsigned int v118 = (void *)((v25 + v116) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v119 = (void *)((v25 + v117) & 0xFFFFFFFFFFFFFFF8);
        void *v118 = *v119;
        unint64_t v120 = ((unint64_t)v118 + v503) & v494;
        unint64_t v121 = ((unint64_t)v119 + v503) & v494;
        unint64_t v453 = *(void (**)(unint64_t, unint64_t, uint64_t))(v514 + 32);
        v453(v120, v121, v508);
        unint64_t v122 = (void *)((v480 + v120) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v123 = (void *)((v480 + v121) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v122 = *v123;
        *(_OWORD *)(((unint64_t)v122 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v123 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v511 + v116) = *(_OWORD *)(v511 + v117);
        uint64_t v124 = (v530 + v511 + v116) & v522;
        uint64_t v125 = (v530 + v511 + v117) & v522;
        *(unsigned char *)uint64_t v124 = *(unsigned char *)v125;
        uint64_t v126 = v124 | 4;
        int v127 = *(_DWORD *)(v125 | 4);
        *(unsigned char *)(v126 + 4) = *(unsigned char *)((v125 | 4) + 4);
        *(_DWORD *)uint64_t v126 = v127;
        *(_WORD *)(v124 + 10) = *(_WORD *)(v125 + 0xA);
        unint64_t v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v477 + 32);
        v128((v482 + v124) & v497, (v482 + v125) & v497, v476);
        uint64_t v129 = (v483 + ((v482 + v124) & v497)) & v497;
        uint64_t v130 = (v483 + ((v482 + v125) & v497)) & v497;
        v128(v129, v130, v476);
        unint64_t v131 = (unsigned char *)(v129 + v484);
        *unint64_t v131 = *(unsigned char *)(v130 + v484);
        v131[1] = *(unsigned char *)(v130 + v484 + 1);
        v131[2] = *(unsigned char *)(v130 + v484 + 2);
        v131[3] = *(unsigned char *)(v130 + v484 + 3);
        v131[4] = *(unsigned char *)(v130 + v484 + 4);
        unint64_t v132 = (v129 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v133 = (v130 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v132 = *(_OWORD *)v133;
        *(unsigned char *)(v132 + 16) = *(unsigned char *)(v133 + 16);
        *(unsigned char *)(v132 + 17) = *(unsigned char *)(v133 + 17);
        *(unsigned char *)(v132 + 18) = *(unsigned char *)(v133 + 18);
        *(unsigned char *)(v132 + 19) = *(unsigned char *)(v133 + 19);
        unint64_t v134 = (v132 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v135 = (v133 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v134 = *(void *)v135;
        *(unsigned char *)(v134 + 8) = *(unsigned char *)(v135 + 8);
        *(unsigned char *)(v134 + 9) = *(unsigned char *)(v135 + 9);
        *(unsigned char *)(v134 + 10) = *(unsigned char *)(v135 + 10);
        *(unsigned char *)(v134 + 11) = *(unsigned char *)(v135 + 11);
        *(unsigned char *)(v134 + 12) = *(unsigned char *)(v135 + 12);
        uint64_t v136 = (void *)((v133 + 47) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v137 = (void *)((v132 + 47) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v137 = *v136;
        unint64_t v138 = ((unint64_t)v137 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v139 = ((unint64_t)v136 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v138 = *(void *)v139;
        *(unsigned char *)(v138 + 8) = *(unsigned char *)(v139 + 8);
        *(unsigned char *)(v138 + 9) = *(unsigned char *)(v139 + 9);
        int v140 = (void *)((v485 + v138) & v497);
        uint64_t v141 = (const void *)((v485 + v139) & v497);
        uint64_t v450 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v477 + 48);
        if (v450(v141, 1, v476))
        {
          memcpy(v140, v141, __n);
        }
        else
        {
          v128((uint64_t)v140, (uint64_t)v141, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v140, 0, 1, v476);
        }
        unint64_t v248 = v128;
        unint64_t v249 = (void *)(((unint64_t)v140 + v486) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v250 = (void *)(((unint64_t)v141 + v486) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v249 = *v250;
        unint64_t v251 = ((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v252 = ((unint64_t)v250 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v253 = *(void *)v252;
        *(unsigned char *)(v251 + 8) = *(unsigned char *)(v252 + 8);
        *(void *)unint64_t v251 = v253;
        uint64_t v254 = (void *)(((unint64_t)v249 + 31) & 0xFFFFFFFFFFFFFFF8);
        int v255 = (void *)(((unint64_t)v250 + 31) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v254 = *v255;
        unint64_t v256 = (_OWORD *)(((unint64_t)v254 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v257 = (_OWORD *)(((unint64_t)v255 + 15) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v256 = *v257;
        unint64_t v258 = ((unint64_t)v256 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v259 = ((unint64_t)v257 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v260 = *(void *)v259;
        *(unsigned char *)(v258 + 8) = *(unsigned char *)(v259 + 8);
        *(void *)unint64_t v258 = v260;
        *(unsigned char *)(v258 + 9) = *(unsigned char *)(v259 + 9);
        unint64_t v261 = (v258 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v262 = (v259 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v253) = *(_DWORD *)v262;
        *(unsigned char *)(v261 + 4) = *(unsigned char *)(v262 + 4);
        *(_DWORD *)unint64_t v261 = v253;
        *(_OWORD *)((v258 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v259 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v263 = v124 + v527;
        long long v264 = *(_OWORD *)(v125 + v527 + 112);
        long long v266 = *(_OWORD *)(v125 + v527 + 64);
        long long v265 = *(_OWORD *)(v125 + v527 + 80);
        *(_OWORD *)(v263 + 96) = *(_OWORD *)(v125 + v527 + 96);
        *(_OWORD *)(v263 + 112) = v264;
        *(_OWORD *)(v263 + 64) = v266;
        *(_OWORD *)(v263 + 80) = v265;
        long long v267 = *(_OWORD *)(v125 + v527 + 176);
        long long v269 = *(_OWORD *)(v125 + v527 + 128);
        long long v268 = *(_OWORD *)(v125 + v527 + 144);
        *(_OWORD *)(v263 + 160) = *(_OWORD *)(v125 + v527 + 160);
        *(_OWORD *)(v263 + 176) = v267;
        *(_OWORD *)(v263 + 128) = v269;
        *(_OWORD *)(v263 + 144) = v268;
        long long v271 = *(_OWORD *)(v125 + v527 + 208);
        long long v270 = *(_OWORD *)(v125 + v527 + 224);
        long long v272 = *(_OWORD *)(v125 + v527 + 192);
        *(void *)(v263 + 240) = *(void *)(v125 + v527 + 240);
        *(_OWORD *)(v263 + 208) = v271;
        *(_OWORD *)(v263 + 224) = v270;
        *(_OWORD *)(v263 + 192) = v272;
        long long v273 = *(_OWORD *)(v125 + v527);
        long long v274 = *(_OWORD *)(v125 + v527 + 16);
        long long v275 = *(_OWORD *)(v125 + v527 + 48);
        *(_OWORD *)(v263 + 32) = *(_OWORD *)(v125 + v527 + 32);
        *(_OWORD *)(v263 + 48) = v275;
        *(_OWORD *)unint64_t v263 = v273;
        *(_OWORD *)(v263 + 16) = v274;
        int v276 = (_OWORD *)((v124 + v527 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v277 = (long long *)((v125 + v527 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v278 = *v277;
        *(_OWORD *)((char *)v276 + 9) = *(long long *)((char *)v277 + 9);
        *int v276 = v278;
        unint64_t v279 = (v124 + v527 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v280 = (v125 + v527 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v281 = *(_OWORD *)v280;
        *(unsigned char *)(v279 + 16) = *(unsigned char *)(v280 + 16);
        *(_OWORD *)unint64_t v279 = v281;
        long long v282 = (void *)((v124 + v527 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v283 = (void *)((v125 + v527 + 311) & 0xFFFFFFFFFFFFFFF8);
        *long long v282 = *v283;
        *(_OWORD *)(((unint64_t)v282 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v283 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v284 = (v468 + a1) & v461;
        v113(v284, (unsigned __int8 *)((unint64_t)&a2[v468] & v461), v499);
        unint64_t v532 = (unint64_t)&a2[v468] & v461;
        unint64_t v285 = (v454 + v532) & v464;
        v113((v454 + v284) & v464, (unsigned __int8 *)v285, v499);
        uint64_t v286 = (v470 + ((v454 + v284) & v464)) & v466;
        unint64_t v287 = (v470 + v285) & v466;
        v459(v286, v287, v456);
        unint64_t v288 = (void *)((v25 + v286) & 0xFFFFFFFFFFFFFFF8);
        long long v289 = (void *)((v25 + v287) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v288 = *v289;
        unint64_t v290 = ((unint64_t)v288 + v503) & v494;
        unint64_t v291 = ((unint64_t)v289 + v503) & v494;
        v453(v290, v291, v508);
        unint64_t v292 = (void *)((v480 + v290) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v293 = (void *)((v480 + v291) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v292 = *v293;
        *(_OWORD *)(((unint64_t)v292 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v293 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v286 + v511) = *(_OWORD *)(v287 + v511);
        uint64_t v294 = (v530 + v286 + v511) & v522;
        uint64_t v295 = (v530 + v287 + v511) & v522;
        *(unsigned char *)uint64_t v294 = *(unsigned char *)v295;
        uint64_t v296 = v294 | 4;
        int v297 = *(_DWORD *)(v295 | 4);
        *(unsigned char *)(v296 + 4) = *(unsigned char *)((v295 | 4) + 4);
        *(_DWORD *)uint64_t v296 = v297;
        *(_WORD *)(v294 + 10) = *(_WORD *)(v295 + 0xA);
        v248((v482 + v294) & v497, (v482 + v295) & v497, v476);
        uint64_t v298 = (v483 + ((v482 + v294) & v497)) & v497;
        uint64_t v299 = (v483 + ((v482 + v295) & v497)) & v497;
        v248(v298, v299, v476);
        unint64_t v300 = (unsigned char *)(v298 + v484);
        *unint64_t v300 = *(unsigned char *)(v299 + v484);
        v300[1] = *(unsigned char *)(v299 + v484 + 1);
        v300[2] = *(unsigned char *)(v299 + v484 + 2);
        v300[3] = *(unsigned char *)(v299 + v484 + 3);
        v300[4] = *(unsigned char *)(v299 + v484 + 4);
        unint64_t v301 = (v298 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v302 = (v299 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v301 = *(_OWORD *)v302;
        *(unsigned char *)(v301 + 16) = *(unsigned char *)(v302 + 16);
        *(unsigned char *)(v301 + 17) = *(unsigned char *)(v302 + 17);
        *(unsigned char *)(v301 + 18) = *(unsigned char *)(v302 + 18);
        *(unsigned char *)(v301 + 19) = *(unsigned char *)(v302 + 19);
        unint64_t v303 = (v301 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v304 = (v302 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v303 = *(void *)v304;
        *(unsigned char *)(v303 + 8) = *(unsigned char *)(v304 + 8);
        *(unsigned char *)(v303 + 9) = *(unsigned char *)(v304 + 9);
        *(unsigned char *)(v303 + 10) = *(unsigned char *)(v304 + 10);
        *(unsigned char *)(v303 + 11) = *(unsigned char *)(v304 + 11);
        *(unsigned char *)(v303 + 12) = *(unsigned char *)(v304 + 12);
        unint64_t v305 = (void *)((v301 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v306 = (void *)((v302 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v305 = *v306;
        unint64_t v307 = ((unint64_t)v305 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v308 = ((unint64_t)v306 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v307 = *(void *)v308;
        *(unsigned char *)(v307 + 8) = *(unsigned char *)(v308 + 8);
        *(unsigned char *)(v307 + 9) = *(unsigned char *)(v308 + 9);
        long long v309 = (void *)((v485 + v307) & v497);
        unint64_t v310 = (const void *)((v485 + v308) & v497);
        if (v450(v310, 1, v476))
        {
          memcpy(v309, v310, __n);
        }
        else
        {
          v248((uint64_t)v309, (uint64_t)v310, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v309, 0, 1, v476);
        }
        uint64_t v36 = v517;
        long long v374 = (void *)(((unint64_t)v310 + v486) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v375 = (void *)(((unint64_t)v309 + v486) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v375 = *v374;
        unint64_t v376 = ((unint64_t)v375 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v377 = ((unint64_t)v374 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v378 = *(void *)v377;
        *(unsigned char *)(v376 + 8) = *(unsigned char *)(v377 + 8);
        *(void *)unint64_t v376 = v378;
        unint64_t v379 = (void *)(((unint64_t)v375 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v380 = (void *)(((unint64_t)v374 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v379 = *v380;
        int v381 = (_OWORD *)(((unint64_t)v379 + 15) & 0xFFFFFFFFFFFFFFF8);
        id v382 = (_OWORD *)(((unint64_t)v380 + 15) & 0xFFFFFFFFFFFFFFF8);
        *int v381 = *v382;
        unint64_t v383 = ((unint64_t)v381 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v384 = ((unint64_t)v382 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v385 = *(void *)v384;
        *(unsigned char *)(v383 + 8) = *(unsigned char *)(v384 + 8);
        *(void *)unint64_t v383 = v385;
        *(unsigned char *)(v383 + 9) = *(unsigned char *)(v384 + 9);
        unint64_t v386 = (v383 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v387 = (v384 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v378) = *(_DWORD *)v387;
        *(unsigned char *)(v386 + 4) = *(unsigned char *)(v387 + 4);
        *(_DWORD *)unint64_t v386 = v378;
        *(_OWORD *)((v383 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v384 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v388 = v294 + v527;
        long long v389 = *(_OWORD *)(v295 + v527 + 112);
        long long v391 = *(_OWORD *)(v295 + v527 + 64);
        long long v390 = *(_OWORD *)(v295 + v527 + 80);
        *(_OWORD *)(v388 + 96) = *(_OWORD *)(v295 + v527 + 96);
        *(_OWORD *)(v388 + 112) = v389;
        *(_OWORD *)(v388 + 64) = v391;
        *(_OWORD *)(v388 + 80) = v390;
        long long v392 = *(_OWORD *)(v295 + v527 + 176);
        long long v394 = *(_OWORD *)(v295 + v527 + 128);
        long long v393 = *(_OWORD *)(v295 + v527 + 144);
        *(_OWORD *)(v388 + 160) = *(_OWORD *)(v295 + v527 + 160);
        *(_OWORD *)(v388 + 176) = v392;
        *(_OWORD *)(v388 + 128) = v394;
        *(_OWORD *)(v388 + 144) = v393;
        long long v396 = *(_OWORD *)(v295 + v527 + 208);
        long long v395 = *(_OWORD *)(v295 + v527 + 224);
        long long v397 = *(_OWORD *)(v295 + v527 + 192);
        *(void *)(v388 + 240) = *(void *)(v295 + v527 + 240);
        *(_OWORD *)(v388 + 208) = v396;
        *(_OWORD *)(v388 + 224) = v395;
        *(_OWORD *)(v388 + 192) = v397;
        long long v398 = *(_OWORD *)(v295 + v527);
        long long v399 = *(_OWORD *)(v295 + v527 + 16);
        long long v400 = *(_OWORD *)(v295 + v527 + 48);
        *(_OWORD *)(v388 + 32) = *(_OWORD *)(v295 + v527 + 32);
        *(_OWORD *)(v388 + 48) = v400;
        *(_OWORD *)unint64_t v388 = v398;
        *(_OWORD *)(v388 + 16) = v399;
        uint64_t v401 = (_OWORD *)((v294 + v527 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v402 = (long long *)((v295 + v527 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v403 = *v402;
        *(_OWORD *)((char *)v401 + 9) = *(long long *)((char *)v402 + 9);
        *uint64_t v401 = v403;
        unint64_t v404 = (v294 + v527 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v405 = (v295 + v527 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v406 = *(_OWORD *)v405;
        *(unsigned char *)(v404 + 16) = *(unsigned char *)(v405 + 16);
        *(_OWORD *)unint64_t v404 = v406;
        int v407 = (void *)((v294 + v527 + 311) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v408 = (void *)((v295 + v527 + 311) & 0xFFFFFFFFFFFFFFF8);
        *int v407 = *v408;
        *(_OWORD *)(((unint64_t)v407 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v408 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v409 = (void *)((v475 + v284) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v410 = (void *)((v475 + v532) & 0xFFFFFFFFFFFFFFF8);
        *long long v409 = *v410;
        uint64_t v142 = (_OWORD *)(((unint64_t)v409 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (_OWORD *)(((unint64_t)v410 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v145 = 1;
        unint64_t v77 = v489;
        char v144 = 1;
        uint64_t v83 = a1;
        break;
      case 2u:
        uint64_t v83 = a1;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32))(a1, a2, v499);
        *(unsigned char *)(v17 + a1) = a2[v17];
        uint64_t v142 = (_OWORD *)(((v17 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
        uint64_t v143 = (_OWORD *)(((unint64_t)&a2[v17] & 0xFFFFFFFFFFFFFFF8) + 8);
        char v144 = 1;
        char v145 = 2;
        goto LABEL_56;
      case 3u:
        uint64_t v83 = a1;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32))(a1, a2, v499);
        uint64_t v142 = (_OWORD *)((a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (_OWORD *)((unint64_t)&a2[v17 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v144 = 1;
        char v145 = 3;
        goto LABEL_56;
      case 4u:
        uint64_t v83 = a1;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32))(a1, a2, v499);
        *(unsigned char *)(v17 + a1) = a2[v17];
        uint64_t v142 = (_OWORD *)(((v17 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
        uint64_t v143 = (_OWORD *)(((unint64_t)&a2[v17] & 0xFFFFFFFFFFFFFFF8) + 8);
        char v144 = 1;
        char v145 = 4;
        goto LABEL_56;
      case 5u:
        uint64_t v83 = a1;
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32))(a1, a2, v499);
        uint64_t v142 = (_OWORD *)((a1 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (_OWORD *)((unint64_t)&a2[v17 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v144 = 1;
        char v145 = 5;
LABEL_56:
        unint64_t v77 = v35;
        break;
      default:
        unint64_t v488 = v35;
        uint64_t v520 = v41;
        unint64_t v525 = v524 + 16;
        uint64_t v513 = *(void *)(v21 - 8);
        uint64_t v515 = v36;
        unsigned int v48 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v504 + 32);
        uint64_t v507 = v21;
        unint64_t v510 = v27;
        uint64_t v496 = v42;
        uint64_t v479 = *(void *)(v513 + 64) + 7;
        uint64_t v502 = v26;
        uint64_t v493 = v46;
        v48(a1, a2, v499);
        uint64_t v49 = (v454 + a1) & v45;
        unint64_t v50 = (unint64_t)&a2[v454] & v45;
        v48(v49, (unsigned __int8 *)v50, v499);
        uint64_t v51 = (v49 + v17 + v24) & ~v24;
        unint64_t v52 = (v50 + v17 + v24) & ~v24;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v472 + 32))(v51, v52, v456);
        uint64_t v53 = (void *)((v25 + v51) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v54 = (void *)((v25 + v52) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v53 = *v54;
        unint64_t v55 = ((unint64_t)v53 + v502) & v493;
        unint64_t v56 = ((unint64_t)v54 + v502) & v493;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v513 + 32))(v55, v56, v507);
        unint64_t v57 = (void *)((v479 + v55) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v58 = (void *)((v479 + v56) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v57 = *v58;
        *(_OWORD *)(((unint64_t)v57 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v58 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v510 + v51) = *(_OWORD *)(v510 + v52);
        uint64_t v59 = (v530 + v510 + v51) & v520;
        uint64_t v60 = (v530 + v510 + v52) & v520;
        *(unsigned char *)uint64_t v59 = *(unsigned char *)v60;
        uint64_t v61 = v59 | 4;
        int v62 = *(_DWORD *)(v60 | 4);
        *(unsigned char *)(v61 + 4) = *(unsigned char *)((v60 | 4) + 4);
        *(_DWORD *)uint64_t v61 = v62;
        *(_WORD *)(v59 + 10) = *(_WORD *)(v60 + 0xA);
        uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v477 + 32);
        v63((v482 + v59) & v496, (v482 + v60) & v496, v476);
        uint64_t v64 = (v483 + ((v482 + v59) & v496)) & v496;
        uint64_t v65 = (v483 + ((v482 + v60) & v496)) & v496;
        v63(v64, v65, v476);
        uint64_t v66 = (unsigned char *)(v64 + v484);
        *uint64_t v66 = *(unsigned char *)(v65 + v484);
        v66[1] = *(unsigned char *)(v65 + v484 + 1);
        v66[2] = *(unsigned char *)(v65 + v484 + 2);
        v66[3] = *(unsigned char *)(v65 + v484 + 3);
        v66[4] = *(unsigned char *)(v65 + v484 + 4);
        unint64_t v67 = (v64 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v68 = (v65 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v67 = *(_OWORD *)v68;
        *(unsigned char *)(v67 + 16) = *(unsigned char *)(v68 + 16);
        *(unsigned char *)(v67 + 17) = *(unsigned char *)(v68 + 17);
        *(unsigned char *)(v67 + 18) = *(unsigned char *)(v68 + 18);
        *(unsigned char *)(v67 + 19) = *(unsigned char *)(v68 + 19);
        unint64_t v69 = (v67 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v70 = (v68 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v69 = *(void *)v70;
        *(unsigned char *)(v69 + 8) = *(unsigned char *)(v70 + 8);
        *(unsigned char *)(v69 + 9) = *(unsigned char *)(v70 + 9);
        *(unsigned char *)(v69 + 10) = *(unsigned char *)(v70 + 10);
        *(unsigned char *)(v69 + 11) = *(unsigned char *)(v70 + 11);
        *(unsigned char *)(v69 + 12) = *(unsigned char *)(v70 + 12);
        unint64_t v71 = (void *)((v68 + 47) & 0xFFFFFFFFFFFFFFF8);
        int v72 = (void *)((v67 + 47) & 0xFFFFFFFFFFFFFFF8);
        *int v72 = *v71;
        unint64_t v73 = ((unint64_t)v72 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v74 = ((unint64_t)v71 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v73 = *(void *)v74;
        *(unsigned char *)(v73 + 8) = *(unsigned char *)(v74 + 8);
        *(unsigned char *)(v73 + 9) = *(unsigned char *)(v74 + 9);
        uint64_t v75 = (void *)((v485 + v73) & v496);
        uint64_t v76 = (const void *)((v485 + v74) & v496);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v477 + 48))(v76, 1, v476))
        {
          memcpy(v75, v76, __n);
        }
        else
        {
          v63((uint64_t)v75, (uint64_t)v76, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v75, 0, 1, v476);
        }
        uint64_t v36 = v515;
        char v145 = 0;
        unint64_t v178 = (void *)(((unint64_t)v76 + v486) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v179 = (void *)(((unint64_t)v75 + v486) & 0xFFFFFFFFFFFFFFF8);
        void *v179 = *v178;
        unint64_t v180 = ((unint64_t)v179 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v181 = ((unint64_t)v178 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v182 = *(void *)v181;
        *(unsigned char *)(v180 + 8) = *(unsigned char *)(v181 + 8);
        *(void *)unint64_t v180 = v182;
        unint64_t v183 = (void *)(((unint64_t)v179 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v184 = (void *)(((unint64_t)v178 + 31) & 0xFFFFFFFFFFFFFFF8);
        void *v183 = *v184;
        unint64_t v185 = (_OWORD *)(((unint64_t)v183 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v186 = (_OWORD *)(((unint64_t)v184 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v185 = *v186;
        unint64_t v187 = ((unint64_t)v185 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v188 = ((unint64_t)v186 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v189 = *(void *)v188;
        *(unsigned char *)(v187 + 8) = *(unsigned char *)(v188 + 8);
        *(void *)unint64_t v187 = v189;
        *(unsigned char *)(v187 + 9) = *(unsigned char *)(v188 + 9);
        unint64_t v190 = (v187 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v191 = (v188 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v182) = *(_DWORD *)v191;
        *(unsigned char *)(v190 + 4) = *(unsigned char *)(v191 + 4);
        *(_DWORD *)unint64_t v190 = v182;
        *(_OWORD *)((v187 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v188 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v192 = v59 + v525;
        long long v193 = *(_OWORD *)(v60 + v525 + 112);
        long long v195 = *(_OWORD *)(v60 + v525 + 64);
        long long v194 = *(_OWORD *)(v60 + v525 + 80);
        *(_OWORD *)(v192 + 96) = *(_OWORD *)(v60 + v525 + 96);
        *(_OWORD *)(v192 + 112) = v193;
        *(_OWORD *)(v192 + 64) = v195;
        *(_OWORD *)(v192 + 80) = v194;
        long long v196 = *(_OWORD *)(v60 + v525 + 176);
        long long v198 = *(_OWORD *)(v60 + v525 + 128);
        long long v197 = *(_OWORD *)(v60 + v525 + 144);
        *(_OWORD *)(v192 + 160) = *(_OWORD *)(v60 + v525 + 160);
        *(_OWORD *)(v192 + 176) = v196;
        *(_OWORD *)(v192 + 128) = v198;
        *(_OWORD *)(v192 + 144) = v197;
        long long v200 = *(_OWORD *)(v60 + v525 + 208);
        long long v199 = *(_OWORD *)(v60 + v525 + 224);
        long long v201 = *(_OWORD *)(v60 + v525 + 192);
        *(void *)(v192 + 240) = *(void *)(v60 + v525 + 240);
        *(_OWORD *)(v192 + 208) = v200;
        *(_OWORD *)(v192 + 224) = v199;
        *(_OWORD *)(v192 + 192) = v201;
        long long v202 = *(_OWORD *)(v60 + v525);
        long long v203 = *(_OWORD *)(v60 + v525 + 16);
        long long v204 = *(_OWORD *)(v60 + v525 + 48);
        *(_OWORD *)(v192 + 32) = *(_OWORD *)(v60 + v525 + 32);
        *(_OWORD *)(v192 + 48) = v204;
        *(_OWORD *)unint64_t v192 = v202;
        *(_OWORD *)(v192 + 16) = v203;
        unint64_t v205 = (_OWORD *)((v59 + v525 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v206 = (long long *)((v60 + v525 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v207 = *v206;
        *(_OWORD *)((char *)v205 + 9) = *(long long *)((char *)v206 + 9);
        *unint64_t v205 = v207;
        unint64_t v208 = (v59 + v525 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v209 = (v60 + v525 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v210 = *(_OWORD *)v209;
        *(unsigned char *)(v208 + 16) = *(unsigned char *)(v209 + 16);
        *(_OWORD *)unint64_t v208 = v210;
        int v211 = (void *)((v59 + v525 + 311) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v212 = (void *)((v60 + v525 + 311) & 0xFFFFFFFFFFFFFFF8);
        void *v211 = *v212;
        *(_OWORD *)(((unint64_t)v211 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v212 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v83 = a1;
        uint64_t v142 = (_OWORD *)((a1 + v31 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (_OWORD *)((unint64_t)&a2[v31 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v144 = 1;
        unint64_t v77 = v488;
        break;
    }
  }
  else
  {
    unint64_t v77 = v512;
    unsigned int v78 = a2[v512];
    if (v78 >= 6 && v512 != 0) {
      unsigned int v78 = *(_DWORD *)a2 + 6;
    }
    uint64_t v80 = ~v3;
    uint64_t v81 = ~v509;
    uint64_t v82 = ~v492;
    uint64_t v83 = a1;
    switch(v78)
    {
      case 1u:
        uint64_t v490 = ~v487;
        unint64_t v528 = v524 + 16;
        uint64_t v518 = v36;
        unint64_t v147 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32);
        uint64_t v498 = v42;
        uint64_t v148 = v41;
        uint64_t v149 = v80;
        v147(a1, a2, AssociatedTypeWitness);
        uint64_t v150 = (v460 + a1) & v149;
        uint64_t v500 = v149;
        unint64_t v151 = (unint64_t)&a2[v460] & v149;
        v147(v150, (unsigned __int8 *)v151, AssociatedTypeWitness);
        uint64_t v152 = (v150 + v478 + v509) & v81;
        uint64_t v505 = ~v509;
        unint64_t v153 = (v151 + v478 + v509) & v81;
        long long v455 = *(void (**)(uint64_t, unint64_t, uint64_t))(v473 + 32);
        v455(v152, v153, v463);
        unint64_t v154 = (void *)((v458 + v152) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v155 = (void *)((v458 + v153) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v154 = *v155;
        unint64_t v156 = ((unint64_t)v154 + v462) & v82;
        unint64_t v157 = ((unint64_t)v155 + v462) & v82;
        unint64_t v481 = *(void (**)(unint64_t, unint64_t, uint64_t))(v474 + 32);
        v481(v156, v157, v467);
        unsigned int v158 = (void *)((v465 + v156) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v159 = (void *)((v465 + v157) & 0xFFFFFFFFFFFFFFF8);
        *unsigned int v158 = *v159;
        *(_OWORD *)(((unint64_t)v158 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v159 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v469 + v152) = *(_OWORD *)(v469 + v153);
        unint64_t v160 = (v530 + v469 + v152) & v148;
        uint64_t v523 = v148;
        unint64_t v161 = (v530 + v469 + v153) & v148;
        *(unsigned char *)unint64_t v160 = *(unsigned char *)v161;
        uint64_t v162 = v160 | 4;
        int v163 = *(_DWORD *)(v161 | 4);
        *(unsigned char *)(v162 + 4) = *(unsigned char *)((v161 | 4) + 4);
        *(_DWORD *)uint64_t v162 = v163;
        *(_WORD *)(v160 + 10) = *(_WORD *)(v161 + 0xA);
        unint64_t v164 = *(void (**)(unint64_t, unint64_t, uint64_t))(v477 + 32);
        v164((v482 + v160) & v498, (v482 + v161) & v498, v476);
        unint64_t v165 = (v483 + ((v482 + v160) & v498)) & v498;
        unint64_t v166 = (v483 + ((v482 + v161) & v498)) & v498;
        v164(v165, v166, v476);
        uint64_t v167 = (unsigned char *)(v165 + v484);
        *uint64_t v167 = *(unsigned char *)(v166 + v484);
        v167[1] = *(unsigned char *)(v166 + v484 + 1);
        v167[2] = *(unsigned char *)(v166 + v484 + 2);
        v167[3] = *(unsigned char *)(v166 + v484 + 3);
        v167[4] = *(unsigned char *)(v166 + v484 + 4);
        unint64_t v168 = (v165 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v169 = (v166 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v168 = *(_OWORD *)v169;
        *(unsigned char *)(v168 + 16) = *(unsigned char *)(v169 + 16);
        *(unsigned char *)(v168 + 17) = *(unsigned char *)(v169 + 17);
        *(unsigned char *)(v168 + 18) = *(unsigned char *)(v169 + 18);
        *(unsigned char *)(v168 + 19) = *(unsigned char *)(v169 + 19);
        unint64_t v170 = (v168 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v171 = (v169 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v170 = *(void *)v171;
        *(unsigned char *)(v170 + 8) = *(unsigned char *)(v171 + 8);
        *(unsigned char *)(v170 + 9) = *(unsigned char *)(v171 + 9);
        *(unsigned char *)(v170 + 10) = *(unsigned char *)(v171 + 10);
        *(unsigned char *)(v170 + 11) = *(unsigned char *)(v171 + 11);
        *(unsigned char *)(v170 + 12) = *(unsigned char *)(v171 + 12);
        char v172 = (void *)((v169 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v173 = (void *)((v168 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v173 = *v172;
        unint64_t v174 = ((unint64_t)v173 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v175 = ((unint64_t)v172 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v174 = *(void *)v175;
        *(unsigned char *)(v174 + 8) = *(unsigned char *)(v175 + 8);
        *(unsigned char *)(v174 + 9) = *(unsigned char *)(v175 + 9);
        int v176 = (void *)((v485 + v174) & v498);
        unint64_t v177 = (const void *)((v485 + v175) & v498);
        unint64_t v457 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v477 + 48);
        if (v457(v177, 1, v476))
        {
          memcpy(v176, v177, __n);
        }
        else
        {
          v164((unint64_t)v176, (unint64_t)v177, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v176, 0, 1, v476);
        }
        long long v311 = (void *)(((unint64_t)v176 + v486) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v312 = (void *)(((unint64_t)v177 + v486) & 0xFFFFFFFFFFFFFFF8);
        *long long v311 = *v312;
        unint64_t v313 = ((unint64_t)v311 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v314 = ((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v315 = *(void *)v314;
        *(unsigned char *)(v313 + 8) = *(unsigned char *)(v314 + 8);
        *(void *)unint64_t v313 = v315;
        unint64_t v316 = (void *)(((unint64_t)v311 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v317 = (void *)(((unint64_t)v312 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v316 = *v317;
        uint64_t v318 = (_OWORD *)(((unint64_t)v316 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v319 = (_OWORD *)(((unint64_t)v317 + 15) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v318 = *v319;
        unint64_t v320 = ((unint64_t)v318 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v321 = ((unint64_t)v319 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v322 = *(void *)v321;
        *(unsigned char *)(v320 + 8) = *(unsigned char *)(v321 + 8);
        *(void *)unint64_t v320 = v322;
        *(unsigned char *)(v320 + 9) = *(unsigned char *)(v321 + 9);
        unint64_t v323 = (v320 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v324 = (v321 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v315) = *(_DWORD *)v324;
        *(unsigned char *)(v323 + 4) = *(unsigned char *)(v324 + 4);
        *(_DWORD *)unint64_t v323 = v315;
        *(_OWORD *)((v320 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v321 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v325 = v528 + v160;
        long long v326 = *(_OWORD *)(v528 + v161 + 112);
        long long v328 = *(_OWORD *)(v528 + v161 + 64);
        long long v327 = *(_OWORD *)(v528 + v161 + 80);
        *(_OWORD *)(v325 + 96) = *(_OWORD *)(v528 + v161 + 96);
        *(_OWORD *)(v325 + 112) = v326;
        *(_OWORD *)(v325 + 64) = v328;
        *(_OWORD *)(v325 + 80) = v327;
        long long v329 = *(_OWORD *)(v528 + v161 + 176);
        long long v331 = *(_OWORD *)(v528 + v161 + 128);
        long long v330 = *(_OWORD *)(v528 + v161 + 144);
        *(_OWORD *)(v325 + 160) = *(_OWORD *)(v528 + v161 + 160);
        *(_OWORD *)(v325 + 176) = v329;
        *(_OWORD *)(v325 + 128) = v331;
        *(_OWORD *)(v325 + 144) = v330;
        long long v333 = *(_OWORD *)(v528 + v161 + 208);
        long long v332 = *(_OWORD *)(v528 + v161 + 224);
        long long v334 = *(_OWORD *)(v528 + v161 + 192);
        *(void *)(v325 + 240) = *(void *)(v528 + v161 + 240);
        *(_OWORD *)(v325 + 208) = v333;
        *(_OWORD *)(v325 + 224) = v332;
        *(_OWORD *)(v325 + 192) = v334;
        long long v335 = *(_OWORD *)(v528 + v161);
        long long v336 = *(_OWORD *)(v528 + v161 + 16);
        long long v337 = *(_OWORD *)(v528 + v161 + 48);
        *(_OWORD *)(v325 + 32) = *(_OWORD *)(v528 + v161 + 32);
        *(_OWORD *)(v325 + 48) = v337;
        *(_OWORD *)unint64_t v325 = v335;
        *(_OWORD *)(v325 + 16) = v336;
        long long v338 = (_OWORD *)((v528 + v160 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v339 = (long long *)((v528 + v161 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v340 = *v339;
        *(_OWORD *)((char *)v338 + 9) = *(long long *)((char *)v339 + 9);
        _OWORD *v338 = v340;
        unint64_t v341 = (v528 + v160 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v342 = (v528 + v161 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v343 = *(_OWORD *)v342;
        *(unsigned char *)(v341 + 16) = *(unsigned char *)(v342 + 16);
        *(_OWORD *)unint64_t v341 = v343;
        long long v344 = (void *)((v528 + v160 + 311) & 0xFFFFFFFFFFFFFFF8);
        long long v345 = (void *)((v528 + v161 + 311) & 0xFFFFFFFFFFFFFFF8);
        void *v344 = *v345;
        *(_OWORD *)(((unint64_t)v344 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v345 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v83 = a1;
        unint64_t v346 = (unint64_t)&a2[v449] & v490;
        v147((v449 + a1) & v490, (unsigned __int8 *)v346, AssociatedTypeWitness);
        uint64_t v533 = (v449 + a1) & v490;
        uint64_t v347 = (v460 + v533) & v500;
        unint64_t v491 = v346;
        unint64_t v348 = (v460 + v346) & v500;
        v147(v347, (unsigned __int8 *)v348, AssociatedTypeWitness);
        uint64_t v349 = (v451 + v347) & v505;
        unint64_t v350 = (v451 + v348) & v505;
        v455(v349, v350, v463);
        unint64_t v351 = (void *)((v458 + v349) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v352 = (void *)((v458 + v350) & 0xFFFFFFFFFFFFFFF8);
        void *v351 = *v352;
        unint64_t v353 = ((unint64_t)v351 + v462) & v82;
        unint64_t v354 = ((unint64_t)v352 + v462) & v82;
        v481(v353, v354, v467);
        unint64_t v355 = (void *)((v465 + v353) & 0xFFFFFFFFFFFFFFF8);
        int v356 = (void *)((v465 + v354) & 0xFFFFFFFFFFFFFFF8);
        void *v355 = *v356;
        *(_OWORD *)(((unint64_t)v355 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v356 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v349 + v469) = *(_OWORD *)(v350 + v469);
        unint64_t v357 = (v530 + v349 + v469) & v148;
        unint64_t v358 = (v530 + v350 + v469) & v148;
        *(unsigned char *)unint64_t v357 = *(unsigned char *)v358;
        uint64_t v359 = v357 | 4;
        int v360 = *(_DWORD *)(v358 | 4);
        *(unsigned char *)(v359 + 4) = *(unsigned char *)((v358 | 4) + 4);
        *(_DWORD *)uint64_t v359 = v360;
        *(_WORD *)(v357 + 10) = *(_WORD *)(((v530 + v350 + v469) & v523) + 0xA);
        v164((v482 + v357) & v498, (v482 + v358) & v498, v476);
        unint64_t v361 = (v483 + ((v482 + v357) & v498)) & v498;
        unint64_t v362 = (v483 + ((v482 + v358) & v498)) & v498;
        v164(v361, v362, v476);
        long long v363 = (unsigned char *)(v361 + v484);
        unsigned char *v363 = *(unsigned char *)(v362 + v484);
        v363[1] = *(unsigned char *)(v362 + v484 + 1);
        v363[2] = *(unsigned char *)(v362 + v484 + 2);
        v363[3] = *(unsigned char *)(v362 + v484 + 3);
        v363[4] = *(unsigned char *)(v362 + v484 + 4);
        unint64_t v364 = (v361 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v365 = (v362 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v364 = *(_OWORD *)v365;
        *(unsigned char *)(v364 + 16) = *(unsigned char *)(v365 + 16);
        *(unsigned char *)(v364 + 17) = *(unsigned char *)(v365 + 17);
        *(unsigned char *)(v364 + 18) = *(unsigned char *)(v365 + 18);
        *(unsigned char *)(v364 + 19) = *(unsigned char *)(v365 + 19);
        unint64_t v366 = (v364 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v367 = (v365 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v366 = *(void *)v367;
        *(unsigned char *)(v366 + 8) = *(unsigned char *)(v367 + 8);
        *(unsigned char *)(v366 + 9) = *(unsigned char *)(v367 + 9);
        *(unsigned char *)(v366 + 10) = *(unsigned char *)(v367 + 10);
        *(unsigned char *)(v366 + 11) = *(unsigned char *)(v367 + 11);
        *(unsigned char *)(v366 + 12) = *(unsigned char *)(v367 + 12);
        long long v368 = (void *)((v364 + 47) & 0xFFFFFFFFFFFFFFF8);
        long long v369 = (void *)((v365 + 47) & 0xFFFFFFFFFFFFFFF8);
        *long long v368 = *v369;
        unint64_t v370 = ((unint64_t)v368 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v371 = ((unint64_t)v369 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v370 = *(void *)v371;
        *(unsigned char *)(v370 + 8) = *(unsigned char *)(v371 + 8);
        *(unsigned char *)(v370 + 9) = *(unsigned char *)(v371 + 9);
        long long v372 = (void *)((v485 + v370) & v498);
        long long v373 = (const void *)((v485 + v371) & v498);
        if (v457(v373, 1, v476))
        {
          memcpy(v372, v373, __n);
        }
        else
        {
          v164((unint64_t)v372, (unint64_t)v373, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v372, 0, 1, v476);
        }
        uint64_t v36 = v518;
        char v144 = 0;
        unint64_t v411 = (void *)(((unint64_t)v372 + v486) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v412 = (void *)(((unint64_t)v373 + v486) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v411 = *v412;
        unint64_t v413 = ((unint64_t)v411 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v414 = ((unint64_t)v412 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v415 = *(void *)v414;
        *(unsigned char *)(v413 + 8) = *(unsigned char *)(v414 + 8);
        *(void *)unint64_t v413 = v415;
        long long v416 = (void *)(((unint64_t)v411 + 31) & 0xFFFFFFFFFFFFFFF8);
        long long v417 = (void *)(((unint64_t)v412 + 31) & 0xFFFFFFFFFFFFFFF8);
        *long long v416 = *v417;
        long long v418 = (_OWORD *)(((unint64_t)v416 + 15) & 0xFFFFFFFFFFFFFFF8);
        long long v419 = (_OWORD *)(((unint64_t)v417 + 15) & 0xFFFFFFFFFFFFFFF8);
        *long long v418 = *v419;
        unint64_t v420 = ((unint64_t)v418 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v421 = ((unint64_t)v419 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v422 = *(void *)v421;
        *(unsigned char *)(v420 + 8) = *(unsigned char *)(v421 + 8);
        *(void *)unint64_t v420 = v422;
        *(unsigned char *)(v420 + 9) = *(unsigned char *)(v421 + 9);
        unint64_t v423 = (v420 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v424 = (v421 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v415) = *(_DWORD *)v424;
        *(unsigned char *)(v423 + 4) = *(unsigned char *)(v424 + 4);
        *(_DWORD *)unint64_t v423 = v415;
        *(_OWORD *)((v420 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v421 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v425 = v357 + v528;
        long long v426 = *(_OWORD *)(v358 + v528 + 112);
        long long v428 = *(_OWORD *)(v358 + v528 + 64);
        long long v427 = *(_OWORD *)(v358 + v528 + 80);
        *(_OWORD *)(v425 + 96) = *(_OWORD *)(v358 + v528 + 96);
        *(_OWORD *)(v425 + 112) = v426;
        *(_OWORD *)(v425 + 64) = v428;
        *(_OWORD *)(v425 + 80) = v427;
        long long v429 = *(_OWORD *)(v358 + v528 + 176);
        long long v431 = *(_OWORD *)(v358 + v528 + 128);
        long long v430 = *(_OWORD *)(v358 + v528 + 144);
        *(_OWORD *)(v425 + 160) = *(_OWORD *)(v358 + v528 + 160);
        *(_OWORD *)(v425 + 176) = v429;
        *(_OWORD *)(v425 + 128) = v431;
        *(_OWORD *)(v425 + 144) = v430;
        long long v433 = *(_OWORD *)(v358 + v528 + 208);
        long long v432 = *(_OWORD *)(v358 + v528 + 224);
        long long v434 = *(_OWORD *)(v358 + v528 + 192);
        *(void *)(v425 + 240) = *(void *)(v358 + v528 + 240);
        *(_OWORD *)(v425 + 208) = v433;
        *(_OWORD *)(v425 + 224) = v432;
        *(_OWORD *)(v425 + 192) = v434;
        long long v435 = *(_OWORD *)(v358 + v528);
        long long v436 = *(_OWORD *)(v358 + v528 + 16);
        long long v437 = *(_OWORD *)(v358 + v528 + 48);
        *(_OWORD *)(v425 + 32) = *(_OWORD *)(v358 + v528 + 32);
        *(_OWORD *)(v425 + 48) = v437;
        *(_OWORD *)unint64_t v425 = v435;
        *(_OWORD *)(v425 + 16) = v436;
        unint64_t v438 = (_OWORD *)((v357 + v528 + 255) & 0xFFFFFFFFFFFFFFF8);
        id v439 = (long long *)((v358 + v528 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v440 = *v439;
        *(_OWORD *)((char *)v438 + 9) = *(long long *)((char *)v439 + 9);
        *unint64_t v438 = v440;
        unint64_t v441 = (v357 + v528 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v442 = (v358 + v528 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v443 = *(_OWORD *)v442;
        *(unsigned char *)(v441 + 16) = *(unsigned char *)(v442 + 16);
        *(_OWORD *)unint64_t v441 = v443;
        uint64_t v444 = (void *)((v358 + v528 + 311) & 0xFFFFFFFFFFFFFFF8);
        id v445 = (void *)((v357 + v528 + 311) & 0xFFFFFFFFFFFFFFF8);
        *id v445 = *v444;
        *(_OWORD *)(((unint64_t)v445 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v444 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v446 = (void *)((v452 + v491) & 0xFFFFFFFFFFFFFFF8);
        id v447 = (void *)((v452 + v533) & 0xFFFFFFFFFFFFFFF8);
        *id v447 = *v446;
        uint64_t v142 = (_OWORD *)(((unint64_t)v447 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (_OWORD *)(((unint64_t)v446 + 15) & 0xFFFFFFFFFFFFFFF8);
        char v145 = 1;
        unint64_t v77 = v512;
        break;
      case 2u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32))(a1, a2, AssociatedTypeWitness);
        char v144 = 0;
        *(unsigned char *)(v2 + a1) = a2[v2];
        uint64_t v142 = (_OWORD *)(((v2 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
        uint64_t v143 = (_OWORD *)(((unint64_t)&a2[v2] & 0xFFFFFFFFFFFFFFF8) + 8);
        char v145 = 2;
        break;
      case 3u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32))(a1, a2, AssociatedTypeWitness);
        char v144 = 0;
        uint64_t v142 = (_OWORD *)((a1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (_OWORD *)((unint64_t)&a2[v2 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v145 = 3;
        break;
      case 4u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32))(a1, a2, AssociatedTypeWitness);
        char v144 = 0;
        *(unsigned char *)(v2 + a1) = a2[v2];
        uint64_t v142 = (_OWORD *)(((v2 + a1) & 0xFFFFFFFFFFFFFFF8) + 8);
        uint64_t v143 = (_OWORD *)(((unint64_t)&a2[v2] & 0xFFFFFFFFFFFFFFF8) + 8);
        char v145 = 4;
        break;
      case 5u:
        (*(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32))(a1, a2, AssociatedTypeWitness);
        char v144 = 0;
        uint64_t v142 = (_OWORD *)((a1 + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (_OWORD *)((unint64_t)&a2[v2 + 7] & 0xFFFFFFFFFFFFFFF8);
        char v145 = 5;
        break;
      default:
        uint64_t v521 = v41;
        unint64_t v526 = v524 + 16;
        uint64_t v516 = v36;
        unint64_t v84 = *(void (**)(uint64_t, unsigned __int8 *, uint64_t))(v506 + 32);
        uint64_t v85 = v42;
        v84(a1, a2, AssociatedTypeWitness);
        unint64_t v86 = (unint64_t)&a2[v460] & ~v495;
        v84((v460 + a1) & ~v495, (unsigned __int8 *)v86, AssociatedTypeWitness);
        uint64_t v87 = (((v460 + a1) & ~v495) + v478 + v509) & v81;
        unint64_t v88 = (v86 + v478 + v509) & v81;
        (*(void (**)(uint64_t, unint64_t, uint64_t))(v473 + 32))(v87, v88, v463);
        unint64_t v89 = (void *)((v458 + v87) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v90 = (void *)((v458 + v88) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v89 = *v90;
        unint64_t v91 = ((unint64_t)v89 + v462) & v82;
        unint64_t v92 = ((unint64_t)v90 + v462) & v82;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v474 + 32))(v91, v92, v467);
        unint64_t v93 = (void *)((v465 + v91) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v94 = (void *)((v465 + v92) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v93 = *v94;
        *(_OWORD *)(((unint64_t)v93 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v94 + 15) & 0xFFFFFFFFFFFFFFF8);
        *(_OWORD *)(v469 + v87) = *(_OWORD *)(v469 + v88);
        unint64_t v95 = (v530 + v469 + v87) & v521;
        unint64_t v96 = (v530 + v469 + v88) & v521;
        *(unsigned char *)unint64_t v95 = *(unsigned char *)v96;
        uint64_t v97 = v95 | 4;
        int v98 = *(_DWORD *)(v96 | 4);
        *(unsigned char *)(v97 + 4) = *(unsigned char *)((v96 | 4) + 4);
        *(_DWORD *)uint64_t v97 = v98;
        *(_WORD *)(v95 + 10) = *(_WORD *)(v96 + 0xA);
        unint64_t v99 = *(void (**)(unint64_t, unint64_t, uint64_t))(v477 + 32);
        v99((v482 + v95) & v85, (v482 + v96) & v85, v476);
        unint64_t v100 = (v483 + ((v482 + v95) & v85)) & v85;
        unint64_t v101 = (v483 + ((v482 + v96) & v85)) & v85;
        v99(v100, v101, v476);
        unint64_t v102 = (unsigned char *)(v100 + v484);
        *unint64_t v102 = *(unsigned char *)(v101 + v484);
        v102[1] = *(unsigned char *)(v101 + v484 + 1);
        v102[2] = *(unsigned char *)(v101 + v484 + 2);
        v102[3] = *(unsigned char *)(v101 + v484 + 3);
        v102[4] = *(unsigned char *)(v101 + v484 + 4);
        unint64_t v103 = (v100 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v104 = (v101 + v484 + 12) & 0xFFFFFFFFFFFFFFF8;
        *(_OWORD *)unint64_t v103 = *(_OWORD *)v104;
        *(unsigned char *)(v103 + 16) = *(unsigned char *)(v104 + 16);
        *(unsigned char *)(v103 + 17) = *(unsigned char *)(v104 + 17);
        *(unsigned char *)(v103 + 18) = *(unsigned char *)(v104 + 18);
        *(unsigned char *)(v103 + 19) = *(unsigned char *)(v104 + 19);
        unint64_t v105 = (v103 + 27) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v106 = (v104 + 27) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v105 = *(void *)v106;
        *(unsigned char *)(v105 + 8) = *(unsigned char *)(v106 + 8);
        *(unsigned char *)(v105 + 9) = *(unsigned char *)(v106 + 9);
        *(unsigned char *)(v105 + 10) = *(unsigned char *)(v106 + 10);
        *(unsigned char *)(v105 + 11) = *(unsigned char *)(v106 + 11);
        *(unsigned char *)(v105 + 12) = *(unsigned char *)(v106 + 12);
        uint64_t v107 = (void *)((v104 + 47) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v108 = (void *)((v103 + 47) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v108 = *v107;
        unint64_t v109 = ((unint64_t)v108 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v110 = ((unint64_t)v107 + 15) & 0xFFFFFFFFFFFFFFF8;
        *(void *)unint64_t v109 = *(void *)v110;
        *(unsigned char *)(v109 + 8) = *(unsigned char *)(v110 + 8);
        *(unsigned char *)(v109 + 9) = *(unsigned char *)(v110 + 9);
        unint64_t v111 = (void *)((v485 + v109) & v85);
        unint64_t v112 = (const void *)((v485 + v110) & v85);
        if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v477 + 48))(v112, 1, v476))
        {
          memcpy(v111, v112, __n);
        }
        else
        {
          v99((unint64_t)v111, (unint64_t)v112, v476);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v477 + 56))(v111, 0, 1, v476);
        }
        uint64_t v36 = v516;
        char v145 = 0;
        char v144 = 0;
        uint64_t v213 = (void *)(((unint64_t)v111 + v486) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v214 = (void *)(((unint64_t)v112 + v486) & 0xFFFFFFFFFFFFFFF8);
        *uint64_t v213 = *v214;
        unint64_t v215 = ((unint64_t)v213 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v216 = ((unint64_t)v214 + 15) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v217 = *(void *)v216;
        *(unsigned char *)(v215 + 8) = *(unsigned char *)(v216 + 8);
        *(void *)unint64_t v215 = v217;
        unint64_t v218 = (void *)(((unint64_t)v213 + 31) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v219 = (void *)(((unint64_t)v214 + 31) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v218 = *v219;
        unint64_t v220 = (_OWORD *)(((unint64_t)v218 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v221 = (_OWORD *)(((unint64_t)v219 + 15) & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v220 = *v221;
        unint64_t v222 = ((unint64_t)v220 + 19) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v223 = ((unint64_t)v221 + 19) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v224 = *(void *)v223;
        *(unsigned char *)(v222 + 8) = *(unsigned char *)(v223 + 8);
        *(void *)unint64_t v222 = v224;
        *(unsigned char *)(v222 + 9) = *(unsigned char *)(v223 + 9);
        unint64_t v225 = (v222 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        unint64_t v226 = (v223 + 13) & 0xFFFFFFFFFFFFFFFCLL;
        LODWORD(v217) = *(_DWORD *)v226;
        *(unsigned char *)(v225 + 4) = *(unsigned char *)(v226 + 4);
        *(_DWORD *)unint64_t v225 = v217;
        *(_OWORD *)((v222 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v223 + 25) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v227 = v526 + v95;
        long long v228 = *(_OWORD *)(v526 + v96 + 112);
        long long v230 = *(_OWORD *)(v526 + v96 + 64);
        long long v229 = *(_OWORD *)(v526 + v96 + 80);
        *(_OWORD *)(v227 + 96) = *(_OWORD *)(v526 + v96 + 96);
        *(_OWORD *)(v227 + 112) = v228;
        *(_OWORD *)(v227 + 64) = v230;
        *(_OWORD *)(v227 + 80) = v229;
        long long v231 = *(_OWORD *)(v526 + v96 + 176);
        long long v233 = *(_OWORD *)(v526 + v96 + 128);
        long long v232 = *(_OWORD *)(v526 + v96 + 144);
        *(_OWORD *)(v227 + 160) = *(_OWORD *)(v526 + v96 + 160);
        *(_OWORD *)(v227 + 176) = v231;
        *(_OWORD *)(v227 + 128) = v233;
        *(_OWORD *)(v227 + 144) = v232;
        long long v235 = *(_OWORD *)(v526 + v96 + 208);
        long long v234 = *(_OWORD *)(v526 + v96 + 224);
        long long v236 = *(_OWORD *)(v526 + v96 + 192);
        *(void *)(v227 + 240) = *(void *)(v526 + v96 + 240);
        *(_OWORD *)(v227 + 208) = v235;
        *(_OWORD *)(v227 + 224) = v234;
        *(_OWORD *)(v227 + 192) = v236;
        long long v237 = *(_OWORD *)(v526 + v96);
        long long v238 = *(_OWORD *)(v526 + v96 + 16);
        long long v239 = *(_OWORD *)(v526 + v96 + 48);
        *(_OWORD *)(v227 + 32) = *(_OWORD *)(v526 + v96 + 32);
        *(_OWORD *)(v227 + 48) = v239;
        *(_OWORD *)unint64_t v227 = v237;
        *(_OWORD *)(v227 + 16) = v238;
        unint64_t v240 = (_OWORD *)((v526 + v95 + 255) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v241 = (long long *)((v526 + v96 + 255) & 0xFFFFFFFFFFFFFFF8);
        long long v242 = *v241;
        *(_OWORD *)((char *)v240 + 9) = *(long long *)((char *)v241 + 9);
        *unint64_t v240 = v242;
        unint64_t v243 = (v526 + v95 + 287) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v244 = (v526 + v96 + 287) & 0xFFFFFFFFFFFFFFF8;
        long long v245 = *(_OWORD *)v244;
        *(unsigned char *)(v243 + 16) = *(unsigned char *)(v244 + 16);
        *(_OWORD *)unint64_t v243 = v245;
        unint64_t v246 = (void *)((v526 + v95 + 311) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v247 = (void *)((v526 + v96 + 311) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v246 = *v247;
        *(_OWORD *)(((unint64_t)v246 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v247 + 15) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v83 = a1;
        uint64_t v142 = (_OWORD *)((a1 + v448 + 7) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v143 = (_OWORD *)((unint64_t)&a2[v448 + 7] & 0xFFFFFFFFFFFFFFF8);
        unint64_t v77 = v512;
        break;
    }
  }
  *uint64_t v142 = *v143;
  *(unsigned char *)(v83 + v77) = v145;
  *(unsigned char *)(v83 + v36) = v144;
  return v83;
}

unsigned __int8 *sub_24D9A4474(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1;
  if (a1 != a2)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v3 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
    uint64_t v596 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = *(unsigned __int8 *)(v596 + 80);
    uint64_t v556 = v3 + v4;
    uint64_t v5 = swift_getAssociatedTypeWitness();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v558 = v6;
    uint64_t v559 = v5;
    int v7 = *(_DWORD *)(v6 + 80) & 0xF8;
    uint64_t v8 = swift_getAssociatedTypeWitness();
    uint64_t v561 = *(void *)(v8 - 8);
    uint64_t v562 = v8;
    uint64_t v9 = *(unsigned __int8 *)(v561 + 80);
    uint64_t v10 = v7 | v9 | 7;
    uint64_t v539 = v3 + v10;
    uint64_t v555 = *(void *)(v6 + 64) + 7;
    uint64_t v557 = v9 + 8;
    uint64_t v577 = v9;
    uint64_t v560 = *(void *)(v561 + 64) + 7;
    unint64_t v563 = ((((v560 + ((v9 + 8 + (v555 & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    uint64_t v591 = sub_24DCC8CE8();
    uint64_t v11 = *(void *)(v591 - 8);
    uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
    uint64_t v607 = (v12 | 7) + 16;
    uint64_t v568 = v12 + 12;
    uint64_t v13 = *(void *)(v11 + 64);
    uint64_t v569 = v13 + v12;
    uint64_t v543 = v13 + 12;
    uint64_t v570 = v12 + 10;
    uint64_t v564 = v13;
    uint64_t v565 = v11;
    if (*(_DWORD *)(v11 + 84)) {
      size_t v14 = *(void *)(*(void *)(v591 - 8) + 64);
    }
    else {
      size_t v14 = v13 + 1;
    }
    size_t __n = v14;
    size_t v571 = v14 + 7;
    unint64_t v575 = (((((((((v14
                  + 7
                  + ((v12
                    + 10
                    + ((((((v13 + 12 + ((v13 + v12 + ((v12 + 12) & ~v12)) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8)
                      + 15) & 0xFFFFFFFFFFFFFFF8)) & ~v12)) & 0xFFFFFFFFFFFFFFF8)
                + 31) & 0xFFFFFFFFFFFFFFF8)
              + 15) & 0xFFFFFFFFFFFFFFF8)
            + 19) & 0xFFFFFFFFFFFFFFF8)
          + 25) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v579 = v4;
    unint64_t v15 = (((v575 + 327 + ((v607 + v563 + ((v3 + v10 + ((v3 + v4) & ~v4)) & ~v10)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = ((v15 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v600 = v10;
    uint64_t v17 = v10 | v4 | v12;
    unint64_t v537 = v15 + 16;
    unint64_t v538 = v15 + 16 + v17;
    uint64_t v572 = v17;
    unint64_t v540 = v15 + 23;
    unint64_t v18 = ((((v15 + 23 + (v538 & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v19 = (v3 & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v566 = v3;
    if (v19 <= ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v19 = ((v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v19 > v16) {
      unint64_t v16 = v19;
    }
    if (v16 > v18) {
      unint64_t v18 = v16;
    }
    unint64_t v598 = v18;
    unint64_t v589 = v18 | 1;
    uint64_t v592 = swift_getAssociatedTypeWitness();
    uint64_t v20 = *(void *)(*(void *)(v592 - 8) + 64);
    uint64_t v594 = *(void *)(v592 - 8);
    uint64_t v21 = *(unsigned __int8 *)(v594 + 80);
    uint64_t v546 = v20 + v21;
    uint64_t v22 = swift_getAssociatedTypeWitness();
    uint64_t v23 = *(void *)(v22 - 8);
    uint64_t v549 = v23;
    uint64_t v550 = v22;
    int v24 = *(_DWORD *)(v23 + 80) & 0xF8;
    uint64_t v25 = swift_getAssociatedTypeWitness();
    uint64_t v26 = v23;
    uint64_t v552 = *(void *)(v25 - 8);
    uint64_t v553 = v25;
    uint64_t v27 = *(unsigned __int8 *)(v552 + 80);
    uint64_t v28 = v24 | v27 | 7;
    uint64_t v536 = v20 + v28;
    uint64_t v547 = *(void *)(v26 + 64) + 7;
    uint64_t v548 = v27 + 8;
    uint64_t v551 = *(void *)(v552 + 64) + 7;
    unint64_t v554 = ((((v551 + ((v27 + 8 + (v547 & 0xFFFFFFFFFFFFFFF8)) & ~v27)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
         + 16;
    unint64_t v29 = (((v575 + 327 + ((v607 + v554 + ((v20 + v28 + ((v20 + v21) & ~v21)) & ~v28)) & ~(v12 | 7))) & 0xFFFFFFFFFFFFFFF8)
         + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = v29 + 23;
    unint64_t v31 = ((v29 + 23) & 0xFFFFFFFFFFFFFFF8) + 16;
    unint64_t v32 = v29 + 16;
    uint64_t v33 = v21 | v12 | v28;
    unint64_t v534 = v32;
    unint64_t v535 = v32 + v33;
    unint64_t v34 = (v20 & 0xFFFFFFFFFFFFFFF8) + 24;
    uint64_t v587 = v20;
    unint64_t v35 = ((((v30 + ((v32 + v33) & ~v33)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v34 <= ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 16) {
      unint64_t v34 = ((v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    }
    if (v34 > v31) {
      unint64_t v31 = v34;
    }
    if (v31 <= v35) {
      unint64_t v36 = v35;
    }
    else {
      unint64_t v36 = v31;
    }
    if ((v36 | 1) <= v589) {
      uint64_t v37 = v589;
    }
    else {
      uint64_t v37 = v36 | 1;
    }
    unsigned int v38 = a1[v37];
    unsigned int v39 = v38 - 2;
    if (v38 < 2)
    {
      uint64_t v41 = a2;
      uint64_t v43 = v577;
      uint64_t v42 = v579;
      uint64_t v45 = v572;
      unint64_t v44 = v575;
    }
    else
    {
      if (v37 <= 3) {
        uint64_t v40 = v37;
      }
      else {
        uint64_t v40 = 4;
      }
      uint64_t v41 = a2;
      uint64_t v43 = v577;
      uint64_t v42 = v579;
      uint64_t v45 = v572;
      unint64_t v44 = v575;
      switch(v40)
      {
        case 1:
          int v46 = *a1;
          if (v37 < 4) {
            goto LABEL_34;
          }
          goto LABEL_35;
        case 2:
          int v46 = *(unsigned __int16 *)a1;
          if (v37 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 3:
          int v46 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v37 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_34;
        case 4:
          int v46 = *(_DWORD *)a1;
          if (v37 < 4) {
LABEL_34:
          }
            v46 |= v39 << (8 * v37);
LABEL_35:
          unsigned int v38 = v46 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v545 = ~v42;
    uint64_t v576 = ~v600;
    uint64_t v578 = ~v43;
    uint64_t v590 = ~(v12 | 7);
    uint64_t v47 = ~v12;
    unint64_t v48 = v44 + 16;
    uint64_t v49 = ~v45;
    uint64_t v544 = ~v21;
    uint64_t v573 = ~v28;
    uint64_t v50 = ~v27;
    uint64_t v533 = ~v33;
    uint64_t v542 = ~v27;
    if (v38 == 1)
    {
      unsigned int v51 = a1[v36];
      if (v51 >= 6 && v36 != 0) {
        unsigned int v51 = *(_DWORD *)a1 + 6;
      }
      switch(v51)
      {
        case 1u:
          unint64_t v522 = v30;
          uint64_t v526 = ~v45;
          unint64_t v581 = v44 + 16;
          unint64_t v67 = *(void (**)(unsigned __int8 *, uint64_t))(v594 + 8);
          v67(a1, v592);
          v67((unsigned __int8 *)((unint64_t)&a1[v546] & v544), v592);
          unint64_t v68 = (((unint64_t)&a1[v546] & v544) + v587 + v28) & v573;
          uint64_t v517 = *(void (**)(unint64_t, uint64_t))(v549 + 8);
          v517(v68, v550);
          swift_bridgeObjectRelease();
          uint64_t v515 = *(void (**)(unint64_t, uint64_t))(v552 + 8);
          v515((v548 + ((v547 + v68) & 0xFFFFFFFFFFFFFFF8)) & v50, v553);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v69 = (v607 + v554 + v68) & v590;
          unint64_t v70 = *(void (**)(unint64_t, uint64_t))(v565 + 8);
          v70((v568 + v69) & v47, v591);
          unint64_t v71 = (v569 + ((v568 + v69) & v47)) & v47;
          unint64_t v519 = v70;
          v70(v71, v591);
          swift_bridgeObjectRelease();
          unint64_t v72 = (v570
               + ((((((v543 + v71) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          uint64_t v513 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v565 + 48);
          if (!v513(v72, 1, v591)) {
            v70(v72, v591);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v73 = (uint64_t *)((((((v571 + v72) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v74 = v73[1];
          if ((v74 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v73, v74);
          }
          swift_bridgeObjectRelease();
          unint64_t v75 = v69 + v581;
          uint64_t v76 = *(void **)(v75 + 16);
          LODWORD(v77) = -1;
          if ((unint64_t)v76 < 0xFFFFFFFF) {
            uint64_t v77 = *(void *)(v75 + 16);
          }
          if ((int)v77 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v75 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v75 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v75 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v67((unsigned __int8 *)((unint64_t)&a1[v535] & v533), v592);
          unint64_t v78 = (v546 + ((unint64_t)&a1[v535] & v533)) & v544;
          v67((unsigned __int8 *)v78, v592);
          unint64_t v79 = (v536 + v78) & v573;
          v517(v79, v550);
          swift_bridgeObjectRelease();
          v515((v548 + ((v547 + v79) & 0xFFFFFFFFFFFFFFF8)) & v542, v553);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v80 = (v607 + v79 + v554) & v590;
          v70((v568 + v80) & v47, v591);
          unint64_t v81 = (v569 + ((v568 + v80) & v47)) & v47;
          v70(v81, v591);
          swift_bridgeObjectRelease();
          unint64_t v82 = (v570
               + ((((((v543 + v81) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          if (!v513(v82, 1, v591)) {
            v519(v82, v591);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v83 = (uint64_t *)((((((v571 + v82) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v84 = v83[1];
          uint64_t v41 = a2;
          unint64_t v53 = v598;
          if ((v84 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v83, v84);
          }
          swift_bridgeObjectRelease();
          unint64_t v48 = v581;
          unint64_t v85 = v80 + v581;
          unint64_t v86 = *(void **)(v85 + 16);
          LODWORD(v87) = -1;
          if ((unint64_t)v86 < 0xFFFFFFFF) {
            uint64_t v87 = *(void *)(v85 + 16);
          }
          uint64_t v2 = a1;
          if ((int)v87 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v85 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v85 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v85 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          unint64_t v30 = v522;
          goto LABEL_94;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v594 + 8))(a1, v592);
          unint64_t v53 = v598;
          break;
        default:
          unint64_t v521 = v30;
          uint64_t v526 = ~v45;
          unint64_t v580 = v44 + 16;
          uint64_t v529 = v37;
          unint64_t v56 = *(void (**)(unsigned __int8 *, uint64_t))(v594 + 8);
          v56(a1, v592);
          v56((unsigned __int8 *)((unint64_t)&a1[v546] & v544), v592);
          unint64_t v57 = (((unint64_t)&a1[v546] & v544) + v587 + v28) & v573;
          (*(void (**)(unint64_t, uint64_t))(v549 + 8))(v57, v550);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v552 + 8))((v548 + ((v547 + v57) & 0xFFFFFFFFFFFFFFF8)) & v50, v553);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v58 = (v607 + v554 + v57) & v590;
          uint64_t v59 = *(void (**)(unint64_t, uint64_t))(v565 + 8);
          v59((v568 + v58) & v47, v591);
          unint64_t v60 = (v569 + ((v568 + v58) & v47)) & v47;
          v59(v60, v591);
          swift_bridgeObjectRelease();
          unint64_t v61 = (v570
               + ((((((v543 + v60) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v565 + 48))(v61, 1, v591)) {
            v59(v61, v591);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          int v62 = (uint64_t *)((((((v571 + v61) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v63 = v62[1];
          if ((v63 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v62, v63);
          }
          swift_bridgeObjectRelease();
          unint64_t v48 = v580;
          unint64_t v64 = v58 + v580;
          uint64_t v65 = *(void **)(v64 + 16);
          LODWORD(v66) = -1;
          if ((unint64_t)v65 < 0xFFFFFFFF) {
            uint64_t v66 = *(void *)(v64 + 16);
          }
          uint64_t v37 = v529;
          uint64_t v41 = a2;
          unint64_t v53 = v598;
          unint64_t v30 = v521;
          if ((int)v66 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v64 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_93;
      }
    }
    else
    {
      unint64_t v53 = v598;
      unsigned int v54 = a1[v598];
      if (v54 >= 6 && v598 != 0) {
        unsigned int v54 = *(_DWORD *)a1 + 6;
      }
      switch(v54)
      {
        case 1u:
          unint64_t v524 = v30;
          uint64_t v527 = ~v45;
          unint64_t v583 = v44 + 16;
          int v98 = *(void (**)(unsigned __int8 *, uint64_t))(v596 + 8);
          v98(a1, AssociatedTypeWitness);
          v98((unsigned __int8 *)((unint64_t)&a1[v556] & v545), AssociatedTypeWitness);
          unint64_t v99 = (((unint64_t)&a1[v556] & v545) + v566 + v600) & v576;
          uint64_t v518 = *(void (**)(unint64_t, uint64_t))(v558 + 8);
          v518(v99, v559);
          swift_bridgeObjectRelease();
          uint64_t v516 = *(void (**)(unint64_t, uint64_t))(v561 + 8);
          v516((v557 + ((v555 + v99) & 0xFFFFFFFFFFFFFFF8)) & v578, v562);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v100 = (v607 + v563 + v99) & v590;
          unint64_t v101 = *(void (**)(unint64_t, uint64_t))(v565 + 8);
          v101((v568 + v100) & v47, v591);
          unint64_t v102 = (v569 + ((v568 + v100) & v47)) & v47;
          uint64_t v520 = v101;
          v101(v102, v591);
          swift_bridgeObjectRelease();
          unint64_t v103 = (v570
                + ((((((v543 + v102) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          uint64_t v514 = *(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v565 + 48);
          if (!v514(v103, 1, v591)) {
            v101(v103, v591);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v104 = (uint64_t *)((((((v571 + v103) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v105 = v104[1];
          if ((v105 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v104, v105);
          }
          swift_bridgeObjectRelease();
          unint64_t v106 = v583 + v100;
          uint64_t v107 = *(void **)(v106 + 16);
          LODWORD(v108) = -1;
          if ((unint64_t)v107 < 0xFFFFFFFF) {
            uint64_t v108 = *(void *)(v106 + 16);
          }
          if ((int)v108 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v106 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v106 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v106 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          v98((unsigned __int8 *)((unint64_t)&a1[v538] & v527), AssociatedTypeWitness);
          unint64_t v109 = (v556 + ((unint64_t)&a1[v538] & v527)) & v545;
          v98((unsigned __int8 *)v109, AssociatedTypeWitness);
          unint64_t v110 = (v539 + v109) & v576;
          v518(v110, v559);
          swift_bridgeObjectRelease();
          v516((v557 + ((v555 + v110) & 0xFFFFFFFFFFFFFFF8)) & v578, v562);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v111 = (v607 + v110 + v563) & v590;
          v101((v568 + v111) & v47, v591);
          unint64_t v112 = (v569 + ((v568 + v111) & v47)) & v47;
          v101(v112, v591);
          swift_bridgeObjectRelease();
          unint64_t v113 = (v570
                + ((((((v543 + v112) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          if (!v514(v113, 1, v591)) {
            v520(v113, v591);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v114 = (uint64_t *)((((((v571 + v113) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v115 = v114[1];
          uint64_t v41 = a2;
          unint64_t v53 = v598;
          if ((v115 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v114, v115);
          }
          swift_bridgeObjectRelease();
          unint64_t v48 = v583;
          unint64_t v116 = v111 + v583;
          unint64_t v117 = *(void **)(v116 + 16);
          LODWORD(v118) = -1;
          if ((unint64_t)v117 < 0xFFFFFFFF) {
            uint64_t v118 = *(void *)(v116 + 16);
          }
          uint64_t v2 = a1;
          if ((int)v118 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v116 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)((((v116 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v116 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
          unint64_t v30 = v524;
          uint64_t v49 = v527;
          break;
        case 2u:
        case 3u:
        case 4u:
        case 5u:
          (*(void (**)(unsigned __int8 *, uint64_t))(v596 + 8))(a1, AssociatedTypeWitness);
          break;
        default:
          unint64_t v523 = v30;
          uint64_t v526 = ~v45;
          unint64_t v582 = v44 + 16;
          uint64_t v530 = v37;
          unint64_t v88 = *(void (**)(unsigned __int8 *, uint64_t))(v596 + 8);
          v88(a1, AssociatedTypeWitness);
          v88((unsigned __int8 *)((unint64_t)&a1[v556] & v545), AssociatedTypeWitness);
          unint64_t v89 = (((unint64_t)&a1[v556] & v545) + v566 + v600) & v576;
          (*(void (**)(unint64_t, uint64_t))(v558 + 8))(v89, v559);
          swift_bridgeObjectRelease();
          (*(void (**)(unint64_t, uint64_t))(v561 + 8))((v557 + ((v555 + v89) & 0xFFFFFFFFFFFFFFF8)) & v578, v562);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v90 = (v607 + v563 + v89) & v590;
          unint64_t v91 = *(void (**)(unint64_t, uint64_t))(v565 + 8);
          v91((v568 + v90) & v47, v591);
          unint64_t v92 = (v569 + ((v568 + v90) & v47)) & v47;
          v91(v92, v591);
          swift_bridgeObjectRelease();
          unint64_t v93 = (v570
               + ((((((v543 + v92) & 0xFFFFFFFFFFFFFFF8) + 47) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)) & v47;
          if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v565 + 48))(v93, 1, v591)) {
            v91(v93, v591);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v94 = (uint64_t *)((((((v571 + v93) & 0xFFFFFFFFFFFFFFF8) + 31) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v95 = v94[1];
          if ((v95 & 0x3000000000000000) == 0) {
            sub_24D400DCC(*v94, v95);
          }
          swift_bridgeObjectRelease();
          unint64_t v48 = v582;
          unint64_t v64 = v582 + v90;
          unint64_t v96 = *(void **)(v64 + 16);
          LODWORD(v97) = -1;
          if ((unint64_t)v96 < 0xFFFFFFFF) {
            uint64_t v97 = *(void *)(v64 + 16);
          }
          uint64_t v37 = v530;
          uint64_t v41 = a2;
          unint64_t v53 = v598;
          unint64_t v30 = v523;
          if ((int)v97 - 1 < 0)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v64 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
LABEL_93:
          sub_24D466534(*(void *)((((v64 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8), *(void *)(((((v64 + 311) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
LABEL_94:
          uint64_t v49 = v526;
          break;
      }
    }
    swift_bridgeObjectRelease();
    unsigned int v119 = v41[v37];
    unsigned int v120 = v119 - 2;
    if (v119 >= 2)
    {
      if (v37 <= 3) {
        uint64_t v121 = v37;
      }
      else {
        uint64_t v121 = 4;
      }
      switch(v121)
      {
        case 1:
          int v122 = *v41;
          if (v37 >= 4) {
            goto LABEL_137;
          }
          goto LABEL_126;
        case 2:
          int v122 = *(unsigned __int16 *)v41;
          if (v37 >= 4) {
            goto LABEL_137;
          }
          goto LABEL_126;
        case 3:
          int v122 = *(unsigned __int16 *)v41 | (v41[2] << 16);
          if (v37 < 4) {
            goto LABEL_126;
          }
          goto LABEL_137;
        case 4:
          int v122 = *(_DWORD *)v41;
          if (v37 < 4)
          {
LABEL_126:
            unsigned int v119 = (v122 | (v120 << (8 * v37))) + 2;
            break;
          }
LABEL_137:
          if (v122 != -1) {
            goto LABEL_138;
          }
          goto LABEL_128;
        default:
          break;
      }
    }
    if (v119 == 1)
    {
LABEL_128:
      unsigned int v123 = v41[v36];
      if (v123 >= 6 && v36 != 0) {
        unsigned int v123 = *(_DWORD *)v41 + 6;
      }
      switch(v123)
      {
        case 1u:
          unint64_t v525 = v30;
          uint64_t v531 = v37;
          unint64_t v183 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v594 + 32);
          v183(v2, v41, v592);
          unint64_t v184 = (unint64_t)&v41[v546] & v544;
          v183((unsigned __int8 *)((unint64_t)&v2[v546] & v544), (unsigned __int8 *)v184, v592);
          unint64_t v185 = (((unint64_t)&v2[v546] & v544) + v587 + v28) & v573;
          unint64_t v186 = (v184 + v587 + v28) & v573;
          unint64_t v599 = *(void (**)(unint64_t, unint64_t, uint64_t))(v549 + 32);
          v599(v185, v186, v550);
          unint64_t v187 = (void *)((v547 + v185) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v188 = (void *)((v547 + v186) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v187 = *v188;
          unint64_t v189 = ((unint64_t)v187 + v548) & v542;
          unint64_t v190 = ((unint64_t)v188 + v548) & v542;
          unint64_t v597 = *(void (**)(unint64_t, unint64_t, uint64_t))(v552 + 32);
          v597(v189, v190, v553);
          unint64_t v191 = (void *)((v551 + v189) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v192 = (void *)((v551 + v190) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v191 = *v192;
          *(_OWORD *)(((unint64_t)v191 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v192 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v554 + v185) = *(_OWORD *)(v554 + v186);
          unint64_t v193 = (v607 + v554 + v185) & v590;
          unint64_t v194 = (v607 + v554 + v186) & v590;
          *(unsigned char *)unint64_t v193 = *(unsigned char *)v194;
          uint64_t v195 = v193 | 4;
          int v196 = *(_DWORD *)(v194 | 4);
          *(unsigned char *)(v195 + 4) = *(unsigned char *)((v194 | 4) + 4);
          *(_DWORD *)uint64_t v195 = v196;
          *(_WORD *)(v193 + 10) = *(_WORD *)(v194 + 0xA);
          long long v197 = *(void (**)(unint64_t, unint64_t, uint64_t))(v565 + 32);
          v197((v568 + v193) & v47, (v568 + v194) & v47, v591);
          unint64_t v198 = (v569 + ((v568 + v193) & v47)) & v47;
          unint64_t v199 = (v569 + ((v568 + v194) & v47)) & v47;
          long long v601 = v197;
          v197(v198, v199, v591);
          long long v200 = (unsigned char *)(v198 + v564);
          *long long v200 = *(unsigned char *)(v199 + v564);
          v200[1] = *(unsigned char *)(v199 + v564 + 1);
          v200[2] = *(unsigned char *)(v199 + v564 + 2);
          v200[3] = *(unsigned char *)(v199 + v564 + 3);
          v200[4] = *(unsigned char *)(v199 + v564 + 4);
          unint64_t v201 = (v198 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v202 = (v199 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v201 = *(_OWORD *)v202;
          *(unsigned char *)(v201 + 16) = *(unsigned char *)(v202 + 16);
          *(unsigned char *)(v201 + 17) = *(unsigned char *)(v202 + 17);
          *(unsigned char *)(v201 + 18) = *(unsigned char *)(v202 + 18);
          *(unsigned char *)(v201 + 19) = *(unsigned char *)(v202 + 19);
          unint64_t v203 = (v201 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v204 = (v202 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v203 = *(void *)v204;
          *(unsigned char *)(v203 + 8) = *(unsigned char *)(v204 + 8);
          *(unsigned char *)(v203 + 9) = *(unsigned char *)(v204 + 9);
          *(unsigned char *)(v203 + 10) = *(unsigned char *)(v204 + 10);
          *(unsigned char *)(v203 + 11) = *(unsigned char *)(v204 + 11);
          *(unsigned char *)(v203 + 12) = *(unsigned char *)(v204 + 12);
          unint64_t v205 = (void *)((v202 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v206 = (void *)((v201 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v206 = *v205;
          unint64_t v207 = ((unint64_t)v206 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v208 = ((unint64_t)v205 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v207 = *(void *)v208;
          *(unsigned char *)(v207 + 8) = *(unsigned char *)(v208 + 8);
          *(unsigned char *)(v207 + 9) = *(unsigned char *)(v208 + 9);
          unint64_t v209 = (void *)((v570 + v207) & v47);
          long long v210 = (const void *)((v570 + v208) & v47);
          unint64_t v588 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v565 + 48);
          if (v588(v210, 1, v591))
          {
            memcpy(v209, v210, __n);
          }
          else
          {
            v197((unint64_t)v209, (unint64_t)v210, v591);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v565 + 56))(v209, 0, 1, v591);
          }
          unint64_t v314 = (void *)(((unint64_t)v209 + v571) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v315 = (void *)(((unint64_t)v210 + v571) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v314 = *v315;
          unint64_t v316 = ((unint64_t)v314 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v317 = ((unint64_t)v315 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v318 = *(void *)v317;
          *(unsigned char *)(v316 + 8) = *(unsigned char *)(v317 + 8);
          *(void *)unint64_t v316 = v318;
          uint64_t v319 = (void *)(((unint64_t)v314 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v320 = (void *)(((unint64_t)v315 + 31) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v319 = *v320;
          unint64_t v321 = (_OWORD *)(((unint64_t)v319 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v322 = (_OWORD *)(((unint64_t)v320 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v321 = *v322;
          unint64_t v323 = ((unint64_t)v321 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v324 = ((unint64_t)v322 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v325 = *(void *)v324;
          *(unsigned char *)(v323 + 8) = *(unsigned char *)(v324 + 8);
          *(void *)unint64_t v323 = v325;
          *(unsigned char *)(v323 + 9) = *(unsigned char *)(v324 + 9);
          unint64_t v326 = (v323 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v327 = (v324 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v318) = *(_DWORD *)v327;
          *(unsigned char *)(v326 + 4) = *(unsigned char *)(v327 + 4);
          *(_DWORD *)unint64_t v326 = v318;
          *(_OWORD *)((v323 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v324 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v328 = v193 + v48;
          long long v329 = *(_OWORD *)(v194 + v48 + 112);
          long long v331 = *(_OWORD *)(v194 + v48 + 64);
          long long v330 = *(_OWORD *)(v194 + v48 + 80);
          *(_OWORD *)(v328 + 96) = *(_OWORD *)(v194 + v48 + 96);
          *(_OWORD *)(v328 + 112) = v329;
          *(_OWORD *)(v328 + 64) = v331;
          *(_OWORD *)(v328 + 80) = v330;
          long long v332 = *(_OWORD *)(v194 + v48 + 176);
          long long v334 = *(_OWORD *)(v194 + v48 + 128);
          long long v333 = *(_OWORD *)(v194 + v48 + 144);
          *(_OWORD *)(v328 + 160) = *(_OWORD *)(v194 + v48 + 160);
          *(_OWORD *)(v328 + 176) = v332;
          *(_OWORD *)(v328 + 128) = v334;
          *(_OWORD *)(v328 + 144) = v333;
          long long v336 = *(_OWORD *)(v194 + v48 + 208);
          long long v335 = *(_OWORD *)(v194 + v48 + 224);
          long long v337 = *(_OWORD *)(v194 + v48 + 192);
          *(void *)(v328 + 240) = *(void *)(v194 + v48 + 240);
          *(_OWORD *)(v328 + 208) = v336;
          *(_OWORD *)(v328 + 224) = v335;
          *(_OWORD *)(v328 + 192) = v337;
          long long v338 = *(_OWORD *)(v194 + v48);
          long long v339 = *(_OWORD *)(v194 + v48 + 16);
          long long v340 = *(_OWORD *)(v194 + v48 + 48);
          *(_OWORD *)(v328 + 32) = *(_OWORD *)(v194 + v48 + 32);
          *(_OWORD *)(v328 + 48) = v340;
          *(_OWORD *)unint64_t v328 = v338;
          *(_OWORD *)(v328 + 16) = v339;
          unint64_t v341 = (_OWORD *)((v193 + v48 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v342 = (long long *)((v194 + v48 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v343 = *v342;
          *(_OWORD *)((char *)v341 + 9) = *(long long *)((char *)v342 + 9);
          _OWORD *v341 = v343;
          unint64_t v344 = (v193 + v48 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v345 = (v194 + v48 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v346 = *(_OWORD *)v345;
          *(unsigned char *)(v344 + 16) = *(unsigned char *)(v345 + 16);
          *(_OWORD *)unint64_t v344 = v346;
          uint64_t v347 = (void *)((v193 + v48 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v348 = (void *)((v194 + v48 + 311) & 0xFFFFFFFFFFFFFFF8);
          void *v347 = *v348;
          *(_OWORD *)(((unint64_t)v347 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v348 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v349 = (unint64_t)&a1[v535] & v533;
          v183((unsigned __int8 *)v349, (unsigned __int8 *)((unint64_t)&a2[v535] & v533), v592);
          unint64_t v604 = (unint64_t)&a2[v535] & v533;
          unint64_t v350 = (v546 + v604) & v544;
          v183((unsigned __int8 *)((v546 + v349) & v544), (unsigned __int8 *)v350, v592);
          unint64_t v351 = (v536 + ((v546 + v349) & v544)) & v573;
          uint64_t v352 = (v536 + v350) & v573;
          v599(v351, v352, v550);
          unint64_t v353 = (void *)((v547 + v351) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v354 = (void *)((v547 + v352) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v353 = *v354;
          unint64_t v355 = ((unint64_t)v353 + v548) & v542;
          unint64_t v356 = ((unint64_t)v354 + v548) & v542;
          v597(v355, v356, v553);
          unint64_t v357 = (void *)((v551 + v355) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v358 = (void *)((v551 + v356) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v357 = *v358;
          *(_OWORD *)(((unint64_t)v357 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v358 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v351 + v554) = *(_OWORD *)(v352 + v554);
          unint64_t v359 = (v607 + v351 + v554) & v590;
          unint64_t v360 = (v607 + v352 + v554) & v590;
          *(unsigned char *)unint64_t v359 = *(unsigned char *)v360;
          uint64_t v361 = v359 | 4;
          int v362 = *(_DWORD *)(v360 | 4);
          *(unsigned char *)(v361 + 4) = *(unsigned char *)((v360 | 4) + 4);
          *(_DWORD *)uint64_t v361 = v362;
          *(_WORD *)(v359 + 10) = *(_WORD *)(v360 + 0xA);
          v601((v568 + v359) & v47, (v568 + v360) & v47, v591);
          unint64_t v363 = (v569 + ((v568 + v359) & v47)) & v47;
          unint64_t v364 = (v569 + ((v568 + v360) & v47)) & v47;
          v601(v363, v364, v591);
          unint64_t v365 = (unsigned char *)(v363 + v564);
          *unint64_t v365 = *(unsigned char *)(v364 + v564);
          v365[1] = *(unsigned char *)(v364 + v564 + 1);
          v365[2] = *(unsigned char *)(v364 + v564 + 2);
          v365[3] = *(unsigned char *)(v364 + v564 + 3);
          v365[4] = *(unsigned char *)(v364 + v564 + 4);
          unint64_t v366 = (v363 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v367 = (v364 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v366 = *(_OWORD *)v367;
          *(unsigned char *)(v366 + 16) = *(unsigned char *)(v367 + 16);
          *(unsigned char *)(v366 + 17) = *(unsigned char *)(v367 + 17);
          *(unsigned char *)(v366 + 18) = *(unsigned char *)(v367 + 18);
          *(unsigned char *)(v366 + 19) = *(unsigned char *)(v367 + 19);
          unint64_t v368 = (v366 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v369 = (v367 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v368 = *(void *)v369;
          *(unsigned char *)(v368 + 8) = *(unsigned char *)(v369 + 8);
          *(unsigned char *)(v368 + 9) = *(unsigned char *)(v369 + 9);
          *(unsigned char *)(v368 + 10) = *(unsigned char *)(v369 + 10);
          *(unsigned char *)(v368 + 11) = *(unsigned char *)(v369 + 11);
          *(unsigned char *)(v368 + 12) = *(unsigned char *)(v369 + 12);
          unint64_t v370 = (void *)((v366 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v371 = (void *)((v367 + 47) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v370 = *v371;
          unint64_t v372 = ((unint64_t)v370 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v373 = ((unint64_t)v371 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v372 = *(void *)v373;
          *(unsigned char *)(v372 + 8) = *(unsigned char *)(v373 + 8);
          *(unsigned char *)(v372 + 9) = *(unsigned char *)(v373 + 9);
          long long v374 = (void *)((v570 + v372) & v47);
          uint64_t v375 = (const void *)((v570 + v373) & v47);
          if (v588(v375, 1, v591))
          {
            memcpy(v374, v375, __n);
          }
          else
          {
            v601((unint64_t)v374, (unint64_t)v375, v591);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v565 + 56))(v374, 0, 1, v591);
          }
          uint64_t v37 = v531;
          id v439 = (void *)(((unint64_t)v375 + v571) & 0xFFFFFFFFFFFFFFF8);
          long long v440 = (void *)(((unint64_t)v374 + v571) & 0xFFFFFFFFFFFFFFF8);
          *long long v440 = *v439;
          unint64_t v441 = ((unint64_t)v440 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v442 = ((unint64_t)v439 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v443 = *(void *)v442;
          *(unsigned char *)(v441 + 8) = *(unsigned char *)(v442 + 8);
          *(void *)unint64_t v441 = v443;
          uint64_t v444 = (void *)(((unint64_t)v440 + 31) & 0xFFFFFFFFFFFFFFF8);
          id v445 = (void *)(((unint64_t)v439 + 31) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v444 = *v445;
          uint64_t v446 = (_OWORD *)(((unint64_t)v444 + 15) & 0xFFFFFFFFFFFFFFF8);
          id v447 = (_OWORD *)(((unint64_t)v445 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v446 = *v447;
          unint64_t v448 = ((unint64_t)v446 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v449 = ((unint64_t)v447 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v450 = *(void *)v449;
          *(unsigned char *)(v448 + 8) = *(unsigned char *)(v449 + 8);
          *(void *)unint64_t v448 = v450;
          *(unsigned char *)(v448 + 9) = *(unsigned char *)(v449 + 9);
          unint64_t v451 = (v448 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v452 = (v449 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v443) = *(_DWORD *)v452;
          *(unsigned char *)(v451 + 4) = *(unsigned char *)(v452 + 4);
          *(_DWORD *)unint64_t v451 = v443;
          *(_OWORD *)((v448 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v449 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v453 = v359 + v48;
          long long v454 = *(_OWORD *)(v360 + v48 + 112);
          long long v456 = *(_OWORD *)(v360 + v48 + 64);
          long long v455 = *(_OWORD *)(v360 + v48 + 80);
          *(_OWORD *)(v453 + 96) = *(_OWORD *)(v360 + v48 + 96);
          *(_OWORD *)(v453 + 112) = v454;
          *(_OWORD *)(v453 + 64) = v456;
          *(_OWORD *)(v453 + 80) = v455;
          long long v457 = *(_OWORD *)(v360 + v48 + 176);
          long long v459 = *(_OWORD *)(v360 + v48 + 128);
          long long v458 = *(_OWORD *)(v360 + v48 + 144);
          *(_OWORD *)(v453 + 160) = *(_OWORD *)(v360 + v48 + 160);
          *(_OWORD *)(v453 + 176) = v457;
          *(_OWORD *)(v453 + 128) = v459;
          *(_OWORD *)(v453 + 144) = v458;
          long long v461 = *(_OWORD *)(v360 + v48 + 208);
          long long v460 = *(_OWORD *)(v360 + v48 + 224);
          long long v462 = *(_OWORD *)(v360 + v48 + 192);
          *(void *)(v453 + 240) = *(void *)(v360 + v48 + 240);
          *(_OWORD *)(v453 + 208) = v461;
          *(_OWORD *)(v453 + 224) = v460;
          *(_OWORD *)(v453 + 192) = v462;
          long long v463 = *(_OWORD *)(v360 + v48);
          long long v464 = *(_OWORD *)(v360 + v48 + 16);
          long long v465 = *(_OWORD *)(v360 + v48 + 48);
          *(_OWORD *)(v453 + 32) = *(_OWORD *)(v360 + v48 + 32);
          *(_OWORD *)(v453 + 48) = v465;
          *(_OWORD *)unint64_t v453 = v463;
          *(_OWORD *)(v453 + 16) = v464;
          uint64_t v466 = (_OWORD *)((v359 + v48 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v467 = (long long *)((v360 + v48 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v468 = *v467;
          *(_OWORD *)((char *)v466 + 9) = *(long long *)((char *)v467 + 9);
          *uint64_t v466 = v468;
          unint64_t v469 = (v359 + v48 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v470 = (v360 + v48 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v471 = *(_OWORD *)v470;
          *(unsigned char *)(v469 + 16) = *(unsigned char *)(v470 + 16);
          *(_OWORD *)unint64_t v469 = v471;
          uint64_t v472 = (void *)((v359 + v48 + 311) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v473 = (void *)((v360 + v48 + 311) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v472 = *v473;
          *(_OWORD *)(((unint64_t)v472 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v473 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v474 = (void *)((v525 + v349) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v475 = (void *)((v525 + v604) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v474 = *v475;
          int v211 = (_OWORD *)(((unint64_t)v474 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v212 = (_OWORD *)(((unint64_t)v475 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v214 = 1;
          unint64_t v53 = v36;
          char v213 = 1;
          uint64_t v2 = a1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v594 + 32))(v2, v41, v592);
          v2[v587] = v41[v587];
          int v211 = (_OWORD *)(((unint64_t)&v2[v587] & 0xFFFFFFFFFFFFFFF8) + 8);
          uint64_t v212 = (_OWORD *)(((unint64_t)&v41[v587] & 0xFFFFFFFFFFFFFFF8) + 8);
          char v213 = 1;
          char v214 = 2;
          goto LABEL_160;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v594 + 32))(v2, v41, v592);
          int v211 = (_OWORD *)((unint64_t)&v2[v587 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v212 = (_OWORD *)((unint64_t)&v41[v587 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v213 = 1;
          char v214 = 3;
          goto LABEL_160;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v594 + 32))(v2, v41, v592);
          v2[v587] = v41[v587];
          int v211 = (_OWORD *)(((unint64_t)&v2[v587] & 0xFFFFFFFFFFFFFFF8) + 8);
          uint64_t v212 = (_OWORD *)(((unint64_t)&v41[v587] & 0xFFFFFFFFFFFFFFF8) + 8);
          char v213 = 1;
          char v214 = 4;
          goto LABEL_160;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v594 + 32))(v2, v41, v592);
          int v211 = (_OWORD *)((unint64_t)&v2[v587 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v212 = (_OWORD *)((unint64_t)&v41[v587 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v213 = 1;
          char v214 = 5;
          goto LABEL_160;
        default:
          unint64_t v584 = v48;
          uint64_t v125 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v594 + 32);
          v125(v2, v41, v592);
          unint64_t v126 = (unint64_t)&v41[v546] & v544;
          v125((unsigned __int8 *)((unint64_t)&v2[v546] & v544), (unsigned __int8 *)v126, v592);
          unint64_t v127 = (((unint64_t)&v2[v546] & v544) + v587 + v28) & v573;
          unint64_t v128 = (v126 + v587 + v28) & v573;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v549 + 32))(v127, v128, v550);
          uint64_t v129 = (void *)((v547 + v127) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v130 = (void *)((v547 + v128) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v129 = *v130;
          unint64_t v131 = ((unint64_t)v129 + v548) & v542;
          unint64_t v132 = ((unint64_t)v130 + v548) & v542;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v552 + 32))(v131, v132, v553);
          unint64_t v133 = (void *)((v551 + v131) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v134 = (void *)((v551 + v132) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v133 = *v134;
          *(_OWORD *)(((unint64_t)v133 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v134 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v554 + v127) = *(_OWORD *)(v554 + v128);
          unint64_t v135 = (v607 + v554 + v127) & v590;
          unint64_t v136 = (v607 + v554 + v128) & v590;
          *(unsigned char *)unint64_t v135 = *(unsigned char *)v136;
          uint64_t v137 = v135 | 4;
          int v138 = *(_DWORD *)(v136 | 4);
          *(unsigned char *)(v137 + 4) = *(unsigned char *)((v136 | 4) + 4);
          *(_DWORD *)uint64_t v137 = v138;
          *(_WORD *)(v135 + 10) = *(_WORD *)(v136 + 0xA);
          unint64_t v139 = *(void (**)(unint64_t, unint64_t, uint64_t))(v565 + 32);
          v139((v568 + v135) & v47, (v568 + v136) & v47, v591);
          unint64_t v140 = (v569 + ((v568 + v135) & v47)) & v47;
          unint64_t v141 = (v569 + ((v568 + v136) & v47)) & v47;
          v139(v140, v141, v591);
          uint64_t v142 = (unsigned char *)(v140 + v564);
          *uint64_t v142 = *(unsigned char *)(v141 + v564);
          v142[1] = *(unsigned char *)(v141 + v564 + 1);
          v142[2] = *(unsigned char *)(v141 + v564 + 2);
          v142[3] = *(unsigned char *)(v141 + v564 + 3);
          v142[4] = *(unsigned char *)(v141 + v564 + 4);
          unint64_t v143 = (v140 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v144 = (v141 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v143 = *(_OWORD *)v144;
          *(unsigned char *)(v143 + 16) = *(unsigned char *)(v144 + 16);
          *(unsigned char *)(v143 + 17) = *(unsigned char *)(v144 + 17);
          *(unsigned char *)(v143 + 18) = *(unsigned char *)(v144 + 18);
          *(unsigned char *)(v143 + 19) = *(unsigned char *)(v144 + 19);
          unint64_t v145 = (v143 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v146 = (v144 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v145 = *(void *)v146;
          *(unsigned char *)(v145 + 8) = *(unsigned char *)(v146 + 8);
          *(unsigned char *)(v145 + 9) = *(unsigned char *)(v146 + 9);
          *(unsigned char *)(v145 + 10) = *(unsigned char *)(v146 + 10);
          *(unsigned char *)(v145 + 11) = *(unsigned char *)(v146 + 11);
          *(unsigned char *)(v145 + 12) = *(unsigned char *)(v146 + 12);
          unint64_t v147 = (void *)((v144 + 47) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v148 = (void *)((v143 + 47) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v148 = *v147;
          unint64_t v149 = ((unint64_t)v148 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v150 = ((unint64_t)v147 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v149 = *(void *)v150;
          *(unsigned char *)(v149 + 8) = *(unsigned char *)(v150 + 8);
          *(unsigned char *)(v149 + 9) = *(unsigned char *)(v150 + 9);
          unint64_t v151 = (void *)((v570 + v149) & v47);
          uint64_t v152 = (const void *)((v570 + v150) & v47);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v565 + 48))(v152, 1, v591))
          {
            memcpy(v151, v152, __n);
          }
          else
          {
            v139((unint64_t)v151, (unint64_t)v152, v591);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v565 + 56))(v151, 0, 1, v591);
          }
          uint64_t v2 = a1;
          char v214 = 0;
          unint64_t v243 = (void *)(((unint64_t)v152 + v571) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v244 = (void *)(((unint64_t)v151 + v571) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v244 = *v243;
          unint64_t v245 = ((unint64_t)v244 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v246 = ((unint64_t)v243 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v247 = *(void *)v246;
          *(unsigned char *)(v245 + 8) = *(unsigned char *)(v246 + 8);
          *(void *)unint64_t v245 = v247;
          unint64_t v248 = (void *)(((unint64_t)v244 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v249 = (void *)(((unint64_t)v243 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v248 = *v249;
          unint64_t v250 = (_OWORD *)(((unint64_t)v248 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v251 = (_OWORD *)(((unint64_t)v249 + 15) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v250 = *v251;
          unint64_t v252 = ((unint64_t)v250 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v253 = ((unint64_t)v251 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v254 = *(void *)v253;
          *(unsigned char *)(v252 + 8) = *(unsigned char *)(v253 + 8);
          *(void *)unint64_t v252 = v254;
          *(unsigned char *)(v252 + 9) = *(unsigned char *)(v253 + 9);
          unint64_t v255 = (v252 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v256 = (v253 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v247) = *(_DWORD *)v256;
          *(unsigned char *)(v255 + 4) = *(unsigned char *)(v256 + 4);
          *(_DWORD *)unint64_t v255 = v247;
          *(_OWORD *)((v252 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v253 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v257 = v135 + v584;
          long long v258 = *(_OWORD *)(v136 + v584 + 112);
          long long v260 = *(_OWORD *)(v136 + v584 + 64);
          long long v259 = *(_OWORD *)(v136 + v584 + 80);
          *(_OWORD *)(v257 + 96) = *(_OWORD *)(v136 + v584 + 96);
          *(_OWORD *)(v257 + 112) = v258;
          *(_OWORD *)(v257 + 64) = v260;
          *(_OWORD *)(v257 + 80) = v259;
          long long v261 = *(_OWORD *)(v136 + v584 + 176);
          long long v263 = *(_OWORD *)(v136 + v584 + 128);
          long long v262 = *(_OWORD *)(v136 + v584 + 144);
          *(_OWORD *)(v257 + 160) = *(_OWORD *)(v136 + v584 + 160);
          *(_OWORD *)(v257 + 176) = v261;
          *(_OWORD *)(v257 + 128) = v263;
          *(_OWORD *)(v257 + 144) = v262;
          long long v265 = *(_OWORD *)(v136 + v584 + 208);
          long long v264 = *(_OWORD *)(v136 + v584 + 224);
          long long v266 = *(_OWORD *)(v136 + v584 + 192);
          *(void *)(v257 + 240) = *(void *)(v136 + v584 + 240);
          *(_OWORD *)(v257 + 208) = v265;
          *(_OWORD *)(v257 + 224) = v264;
          *(_OWORD *)(v257 + 192) = v266;
          long long v267 = *(_OWORD *)(v136 + v584);
          long long v268 = *(_OWORD *)(v136 + v584 + 16);
          long long v269 = *(_OWORD *)(v136 + v584 + 48);
          *(_OWORD *)(v257 + 32) = *(_OWORD *)(v136 + v584 + 32);
          *(_OWORD *)(v257 + 48) = v269;
          *(_OWORD *)unint64_t v257 = v267;
          *(_OWORD *)(v257 + 16) = v268;
          long long v270 = (_OWORD *)((v135 + v584 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v271 = (long long *)((v136 + v584 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v272 = *v271;
          *(_OWORD *)((char *)v270 + 9) = *(long long *)((char *)v271 + 9);
          *long long v270 = v272;
          unint64_t v273 = (v135 + v584 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v274 = (v136 + v584 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v275 = *(_OWORD *)v274;
          *(unsigned char *)(v273 + 16) = *(unsigned char *)(v274 + 16);
          *(_OWORD *)unint64_t v273 = v275;
          int v276 = (void *)((v135 + v584 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v277 = (void *)((v136 + v584 + 311) & 0xFFFFFFFFFFFFFFF8);
          *int v276 = *v277;
          *(_OWORD *)(((unint64_t)v276 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v277 + 15) & 0xFFFFFFFFFFFFFFF8);
          int v211 = (_OWORD *)((unint64_t)&a1[v534 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v212 = (_OWORD *)((unint64_t)&a2[v534 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v213 = 1;
LABEL_160:
          unint64_t v53 = v36;
          break;
      }
    }
    else
    {
LABEL_138:
      unsigned int v153 = v41[v53];
      if (v153 >= 6 && v53 != 0) {
        unsigned int v153 = *(_DWORD *)v41 + 6;
      }
      switch(v153)
      {
        case 1u:
          uint64_t v528 = v49;
          unint64_t v586 = v48;
          uint64_t v532 = v37;
          unint64_t v215 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v596 + 32);
          v215(v2, v41, AssociatedTypeWitness);
          unint64_t v216 = (unint64_t)&v41[v556] & v545;
          v215((unsigned __int8 *)((unint64_t)&v2[v556] & v545), (unsigned __int8 *)v216, AssociatedTypeWitness);
          unint64_t v217 = (((unint64_t)&v2[v556] & v545) + v566 + v600) & v576;
          unint64_t v218 = (v216 + v566 + v600) & v576;
          unint64_t v602 = *(void (**)(unint64_t, unint64_t, uint64_t))(v558 + 32);
          v602(v217, v218, v559);
          unint64_t v219 = (void *)((v555 + v217) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v220 = (void *)((v555 + v218) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v219 = *v220;
          unint64_t v221 = ((unint64_t)v219 + v557) & v578;
          unint64_t v222 = ((unint64_t)v220 + v557) & v578;
          unint64_t v593 = *(void (**)(unint64_t, unint64_t, uint64_t))(v561 + 32);
          v593(v221, v222, v562);
          unint64_t v223 = (void *)((v560 + v221) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v224 = (void *)((v560 + v222) & 0xFFFFFFFFFFFFFFF8);
          void *v223 = *v224;
          *(_OWORD *)(((unint64_t)v223 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v224 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v563 + v217) = *(_OWORD *)(v563 + v218);
          unint64_t v225 = (v607 + v563 + v217) & v590;
          unint64_t v226 = (v607 + v563 + v218) & v590;
          *(unsigned char *)unint64_t v225 = *(unsigned char *)v226;
          uint64_t v227 = v225 | 4;
          int v228 = *(_DWORD *)(v226 | 4);
          *(unsigned char *)(v227 + 4) = *(unsigned char *)((v226 | 4) + 4);
          *(_DWORD *)uint64_t v227 = v228;
          *(_WORD *)(v225 + 10) = *(_WORD *)(v226 + 0xA);
          long long v229 = *(void (**)(unint64_t, unint64_t, uint64_t))(v565 + 32);
          v229((v568 + v225) & v47, (v568 + v226) & v47, v591);
          unint64_t v230 = (v569 + ((v568 + v225) & v47)) & v47;
          unint64_t v231 = (v569 + ((v568 + v226) & v47)) & v47;
          v229(v230, v231, v591);
          long long v232 = (unsigned char *)(v230 + v564);
          *long long v232 = *(unsigned char *)(v231 + v564);
          v232[1] = *(unsigned char *)(v231 + v564 + 1);
          v232[2] = *(unsigned char *)(v231 + v564 + 2);
          v232[3] = *(unsigned char *)(v231 + v564 + 3);
          v232[4] = *(unsigned char *)(v231 + v564 + 4);
          unint64_t v233 = (v230 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v234 = (v231 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v233 = *(_OWORD *)v234;
          *(unsigned char *)(v233 + 16) = *(unsigned char *)(v234 + 16);
          *(unsigned char *)(v233 + 17) = *(unsigned char *)(v234 + 17);
          *(unsigned char *)(v233 + 18) = *(unsigned char *)(v234 + 18);
          *(unsigned char *)(v233 + 19) = *(unsigned char *)(v234 + 19);
          unint64_t v235 = (v233 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v236 = (v234 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v235 = *(void *)v236;
          *(unsigned char *)(v235 + 8) = *(unsigned char *)(v236 + 8);
          *(unsigned char *)(v235 + 9) = *(unsigned char *)(v236 + 9);
          *(unsigned char *)(v235 + 10) = *(unsigned char *)(v236 + 10);
          *(unsigned char *)(v235 + 11) = *(unsigned char *)(v236 + 11);
          *(unsigned char *)(v235 + 12) = *(unsigned char *)(v236 + 12);
          long long v237 = (void *)((v234 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v238 = (void *)((v233 + 47) & 0xFFFFFFFFFFFFFFF8);
          *long long v238 = *v237;
          unint64_t v239 = ((unint64_t)v238 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v240 = ((unint64_t)v237 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v239 = *(void *)v240;
          *(unsigned char *)(v239 + 8) = *(unsigned char *)(v240 + 8);
          *(unsigned char *)(v239 + 9) = *(unsigned char *)(v240 + 9);
          unint64_t v241 = (void *)((v570 + v239) & v47);
          long long v242 = (const void *)((v570 + v240) & v47);
          unint64_t v574 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v565 + 48);
          if (v574(v242, 1, v591))
          {
            memcpy(v241, v242, __n);
          }
          else
          {
            v229((unint64_t)v241, (unint64_t)v242, v591);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v565 + 56))(v241, 0, 1, v591);
          }
          unint64_t v376 = (void *)(((unint64_t)v241 + v571) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v377 = (void *)(((unint64_t)v242 + v571) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v376 = *v377;
          unint64_t v378 = ((unint64_t)v376 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v379 = ((unint64_t)v377 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v380 = *(void *)v379;
          *(unsigned char *)(v378 + 8) = *(unsigned char *)(v379 + 8);
          *(void *)unint64_t v378 = v380;
          int v381 = (void *)(((unint64_t)v376 + 31) & 0xFFFFFFFFFFFFFFF8);
          id v382 = (void *)(((unint64_t)v377 + 31) & 0xFFFFFFFFFFFFFFF8);
          *int v381 = *v382;
          unint64_t v383 = (_OWORD *)(((unint64_t)v381 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v384 = (_OWORD *)(((unint64_t)v382 + 15) & 0xFFFFFFFFFFFFFFF8);
          _OWORD *v383 = *v384;
          unint64_t v385 = ((unint64_t)v383 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v386 = ((unint64_t)v384 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v387 = *(void *)v386;
          *(unsigned char *)(v385 + 8) = *(unsigned char *)(v386 + 8);
          *(void *)unint64_t v385 = v387;
          *(unsigned char *)(v385 + 9) = *(unsigned char *)(v386 + 9);
          unint64_t v388 = (v385 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v389 = (v386 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v380) = *(_DWORD *)v389;
          *(unsigned char *)(v388 + 4) = *(unsigned char *)(v389 + 4);
          *(_DWORD *)unint64_t v388 = v380;
          *(_OWORD *)((v385 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v386 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v390 = v586 + v225;
          long long v391 = *(_OWORD *)(v586 + v226 + 112);
          long long v393 = *(_OWORD *)(v586 + v226 + 64);
          long long v392 = *(_OWORD *)(v586 + v226 + 80);
          *(_OWORD *)(v390 + 96) = *(_OWORD *)(v586 + v226 + 96);
          *(_OWORD *)(v390 + 112) = v391;
          *(_OWORD *)(v390 + 64) = v393;
          *(_OWORD *)(v390 + 80) = v392;
          long long v394 = *(_OWORD *)(v586 + v226 + 176);
          long long v396 = *(_OWORD *)(v586 + v226 + 128);
          long long v395 = *(_OWORD *)(v586 + v226 + 144);
          *(_OWORD *)(v390 + 160) = *(_OWORD *)(v586 + v226 + 160);
          *(_OWORD *)(v390 + 176) = v394;
          *(_OWORD *)(v390 + 128) = v396;
          *(_OWORD *)(v390 + 144) = v395;
          long long v398 = *(_OWORD *)(v586 + v226 + 208);
          long long v397 = *(_OWORD *)(v586 + v226 + 224);
          long long v399 = *(_OWORD *)(v586 + v226 + 192);
          *(void *)(v390 + 240) = *(void *)(v586 + v226 + 240);
          *(_OWORD *)(v390 + 208) = v398;
          *(_OWORD *)(v390 + 224) = v397;
          *(_OWORD *)(v390 + 192) = v399;
          long long v400 = *(_OWORD *)(v586 + v226);
          long long v401 = *(_OWORD *)(v586 + v226 + 16);
          long long v402 = *(_OWORD *)(v586 + v226 + 48);
          *(_OWORD *)(v390 + 32) = *(_OWORD *)(v586 + v226 + 32);
          *(_OWORD *)(v390 + 48) = v402;
          *(_OWORD *)unint64_t v390 = v400;
          *(_OWORD *)(v390 + 16) = v401;
          long long v403 = (_OWORD *)((v586 + v225 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v404 = (long long *)((v586 + v226 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v405 = *v404;
          *(_OWORD *)((char *)v403 + 9) = *(long long *)((char *)v404 + 9);
          _OWORD *v403 = v405;
          unint64_t v406 = (v586 + v225 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v407 = (v586 + v226 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v408 = *(_OWORD *)v407;
          *(unsigned char *)(v406 + 16) = *(unsigned char *)(v407 + 16);
          *(_OWORD *)unint64_t v406 = v408;
          long long v409 = (void *)((v586 + v225 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v410 = (void *)((v586 + v226 + 311) & 0xFFFFFFFFFFFFFFF8);
          *long long v409 = *v410;
          *(_OWORD *)(((unint64_t)v409 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v410 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v411 = (unint64_t)&a2[v538] & v528;
          v215((unsigned __int8 *)((unint64_t)&a1[v538] & v528), (unsigned __int8 *)v411, AssociatedTypeWitness);
          unint64_t v605 = (unint64_t)&a1[v538] & v528;
          unint64_t v412 = (v556 + v605) & v545;
          unint64_t v567 = v411;
          unint64_t v413 = (v556 + v411) & v545;
          v215((unsigned __int8 *)v412, (unsigned __int8 *)v413, AssociatedTypeWitness);
          unint64_t v414 = (v539 + v412) & v576;
          uint64_t v415 = (v539 + v413) & v576;
          v602(v414, v415, v559);
          long long v416 = (void *)((v555 + v414) & 0xFFFFFFFFFFFFFFF8);
          long long v417 = (void *)((v555 + v415) & 0xFFFFFFFFFFFFFFF8);
          *long long v416 = *v417;
          unint64_t v418 = ((unint64_t)v416 + v557) & v578;
          unint64_t v419 = ((unint64_t)v417 + v557) & v578;
          v593(v418, v419, v562);
          unint64_t v420 = (void *)((v560 + v418) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v421 = (void *)((v560 + v419) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v420 = *v421;
          *(_OWORD *)(((unint64_t)v420 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v421 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v414 + v563) = *(_OWORD *)(v415 + v563);
          unint64_t v422 = (v607 + v414 + v563) & v590;
          unint64_t v423 = (v607 + v415 + v563) & v590;
          *(unsigned char *)unint64_t v422 = *(unsigned char *)v423;
          uint64_t v424 = v422 | 4;
          int v425 = *(_DWORD *)(v423 | 4);
          *(unsigned char *)(v424 + 4) = *(unsigned char *)((v423 | 4) + 4);
          *(_DWORD *)uint64_t v424 = v425;
          *(_WORD *)(v422 + 10) = *(_WORD *)(v423 + 0xA);
          v229((v568 + v422) & v47, (v568 + v423) & v47, v591);
          unint64_t v426 = (v569 + ((v568 + v422) & v47)) & v47;
          unint64_t v427 = (v569 + ((v568 + v423) & v47)) & v47;
          v229(v426, v427, v591);
          long long v428 = (unsigned char *)(v426 + v564);
          unsigned char *v428 = *(unsigned char *)(v427 + v564);
          v428[1] = *(unsigned char *)(v427 + v564 + 1);
          v428[2] = *(unsigned char *)(v427 + v564 + 2);
          v428[3] = *(unsigned char *)(v427 + v564 + 3);
          v428[4] = *(unsigned char *)(v427 + v564 + 4);
          unint64_t v429 = (v426 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v430 = (v427 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v429 = *(_OWORD *)v430;
          *(unsigned char *)(v429 + 16) = *(unsigned char *)(v430 + 16);
          *(unsigned char *)(v429 + 17) = *(unsigned char *)(v430 + 17);
          *(unsigned char *)(v429 + 18) = *(unsigned char *)(v430 + 18);
          *(unsigned char *)(v429 + 19) = *(unsigned char *)(v430 + 19);
          unint64_t v431 = (v429 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v432 = (v430 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v431 = *(void *)v432;
          *(unsigned char *)(v431 + 8) = *(unsigned char *)(v432 + 8);
          *(unsigned char *)(v431 + 9) = *(unsigned char *)(v432 + 9);
          *(unsigned char *)(v431 + 10) = *(unsigned char *)(v432 + 10);
          *(unsigned char *)(v431 + 11) = *(unsigned char *)(v432 + 11);
          *(unsigned char *)(v431 + 12) = *(unsigned char *)(v432 + 12);
          long long v433 = (void *)((v429 + 47) & 0xFFFFFFFFFFFFFFF8);
          long long v434 = (void *)((v430 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v433 = *v434;
          unint64_t v435 = ((unint64_t)v433 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v436 = ((unint64_t)v434 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v435 = *(void *)v436;
          *(unsigned char *)(v435 + 8) = *(unsigned char *)(v436 + 8);
          *(unsigned char *)(v435 + 9) = *(unsigned char *)(v436 + 9);
          long long v437 = (void *)((v570 + v435) & v47);
          unint64_t v438 = (const void *)((v570 + v436) & v47);
          if (v574(v438, 1, v591))
          {
            memcpy(v437, v438, __n);
          }
          else
          {
            v229((unint64_t)v437, (unint64_t)v438, v591);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v565 + 56))(v437, 0, 1, v591);
          }
          uint64_t v37 = v532;
          unint64_t v53 = v598;
          char v213 = 0;
          uint64_t v476 = (void *)(((unint64_t)v437 + v571) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v477 = (void *)(((unint64_t)v438 + v571) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v476 = *v477;
          unint64_t v478 = ((unint64_t)v476 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v479 = ((unint64_t)v477 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v480 = *(void *)v479;
          *(unsigned char *)(v478 + 8) = *(unsigned char *)(v479 + 8);
          *(void *)unint64_t v478 = v480;
          unint64_t v481 = (void *)(((unint64_t)v476 + 31) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v482 = (void *)(((unint64_t)v477 + 31) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v481 = *v482;
          uint64_t v483 = (_OWORD *)(((unint64_t)v481 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v484 = (_OWORD *)(((unint64_t)v482 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v483 = *v484;
          unint64_t v485 = ((unint64_t)v483 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v486 = ((unint64_t)v484 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v487 = *(void *)v486;
          *(unsigned char *)(v485 + 8) = *(unsigned char *)(v486 + 8);
          *(void *)unint64_t v485 = v487;
          *(unsigned char *)(v485 + 9) = *(unsigned char *)(v486 + 9);
          unint64_t v488 = (v485 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v489 = (v486 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v480) = *(_DWORD *)v489;
          *(unsigned char *)(v488 + 4) = *(unsigned char *)(v489 + 4);
          *(_DWORD *)unint64_t v488 = v480;
          *(_OWORD *)((v485 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v486 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v490 = v422 + v586;
          long long v491 = *(_OWORD *)(v423 + v586 + 112);
          long long v493 = *(_OWORD *)(v423 + v586 + 64);
          long long v492 = *(_OWORD *)(v423 + v586 + 80);
          *(_OWORD *)(v490 + 96) = *(_OWORD *)(v423 + v586 + 96);
          *(_OWORD *)(v490 + 112) = v491;
          *(_OWORD *)(v490 + 64) = v493;
          *(_OWORD *)(v490 + 80) = v492;
          long long v494 = *(_OWORD *)(v423 + v586 + 176);
          long long v496 = *(_OWORD *)(v423 + v586 + 128);
          long long v495 = *(_OWORD *)(v423 + v586 + 144);
          *(_OWORD *)(v490 + 160) = *(_OWORD *)(v423 + v586 + 160);
          *(_OWORD *)(v490 + 176) = v494;
          *(_OWORD *)(v490 + 128) = v496;
          *(_OWORD *)(v490 + 144) = v495;
          long long v498 = *(_OWORD *)(v423 + v586 + 208);
          long long v497 = *(_OWORD *)(v423 + v586 + 224);
          long long v499 = *(_OWORD *)(v423 + v586 + 192);
          *(void *)(v490 + 240) = *(void *)(v423 + v586 + 240);
          *(_OWORD *)(v490 + 208) = v498;
          *(_OWORD *)(v490 + 224) = v497;
          *(_OWORD *)(v490 + 192) = v499;
          long long v500 = *(_OWORD *)(v423 + v586);
          long long v501 = *(_OWORD *)(v423 + v586 + 16);
          long long v502 = *(_OWORD *)(v423 + v586 + 48);
          *(_OWORD *)(v490 + 32) = *(_OWORD *)(v423 + v586 + 32);
          *(_OWORD *)(v490 + 48) = v502;
          *(_OWORD *)unint64_t v490 = v500;
          *(_OWORD *)(v490 + 16) = v501;
          uint64_t v503 = (_OWORD *)((v422 + v586 + 255) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v504 = (long long *)((v423 + v586 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v505 = *v504;
          *(_OWORD *)((char *)v503 + 9) = *(long long *)((char *)v504 + 9);
          *uint64_t v503 = v505;
          unint64_t v506 = (v422 + v586 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v507 = (v423 + v586 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v508 = *(_OWORD *)v507;
          *(unsigned char *)(v506 + 16) = *(unsigned char *)(v507 + 16);
          *(_OWORD *)unint64_t v506 = v508;
          uint64_t v509 = (void *)((v423 + v586 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v510 = (void *)((v422 + v586 + 311) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v510 = *v509;
          *(_OWORD *)(((unint64_t)v510 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v509 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v511 = (void *)((v540 + v567) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v512 = (void *)((v540 + v605) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v512 = *v511;
          int v211 = (_OWORD *)(((unint64_t)v512 + 15) & 0xFFFFFFFFFFFFFFF8);
          uint64_t v212 = (_OWORD *)(((unint64_t)v511 + 15) & 0xFFFFFFFFFFFFFFF8);
          char v214 = 1;
          uint64_t v2 = a1;
          break;
        case 2u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v596 + 32))(v2, v41, AssociatedTypeWitness);
          char v213 = 0;
          v2[v566] = v41[v566];
          int v211 = (_OWORD *)(((unint64_t)&v2[v566] & 0xFFFFFFFFFFFFFFF8) + 8);
          uint64_t v212 = (_OWORD *)(((unint64_t)&v41[v566] & 0xFFFFFFFFFFFFFFF8) + 8);
          char v214 = 2;
          break;
        case 3u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v596 + 32))(v2, v41, AssociatedTypeWitness);
          char v213 = 0;
          int v211 = (_OWORD *)((unint64_t)&v2[v566 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v212 = (_OWORD *)((unint64_t)&v41[v566 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v214 = 3;
          break;
        case 4u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v596 + 32))(v2, v41, AssociatedTypeWitness);
          char v213 = 0;
          v2[v566] = v41[v566];
          int v211 = (_OWORD *)(((unint64_t)&v2[v566] & 0xFFFFFFFFFFFFFFF8) + 8);
          uint64_t v212 = (_OWORD *)(((unint64_t)&v41[v566] & 0xFFFFFFFFFFFFFFF8) + 8);
          char v214 = 4;
          break;
        case 5u:
          (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v596 + 32))(v2, v41, AssociatedTypeWitness);
          char v213 = 0;
          int v211 = (_OWORD *)((unint64_t)&v2[v566 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v212 = (_OWORD *)((unint64_t)&v41[v566 + 7] & 0xFFFFFFFFFFFFFFF8);
          char v214 = 5;
          break;
        default:
          unint64_t v585 = v48;
          uint64_t v155 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v596 + 32);
          v155(v2, v41, AssociatedTypeWitness);
          unint64_t v156 = (unint64_t)&v41[v556] & v545;
          v155((unsigned __int8 *)((unint64_t)&v2[v556] & v545), (unsigned __int8 *)v156, AssociatedTypeWitness);
          unint64_t v157 = (((unint64_t)&v2[v556] & v545) + v566 + v600) & v576;
          unint64_t v158 = (v156 + v566 + v600) & v576;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v558 + 32))(v157, v158, v559);
          unint64_t v159 = (void *)((v555 + v157) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v160 = (void *)((v555 + v158) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v159 = *v160;
          unint64_t v161 = ((unint64_t)v159 + v557) & v578;
          unint64_t v162 = ((unint64_t)v160 + v557) & v578;
          (*(void (**)(unint64_t, unint64_t, uint64_t))(v561 + 32))(v161, v162, v562);
          int v163 = (void *)((v560 + v161) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v164 = (void *)((v560 + v162) & 0xFFFFFFFFFFFFFFF8);
          *int v163 = *v164;
          *(_OWORD *)(((unint64_t)v163 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v164 + 15) & 0xFFFFFFFFFFFFFFF8);
          *(_OWORD *)(v563 + v157) = *(_OWORD *)(v563 + v158);
          unint64_t v165 = (v607 + v563 + v157) & v590;
          unint64_t v166 = (v607 + v563 + v158) & v590;
          *(unsigned char *)unint64_t v165 = *(unsigned char *)v166;
          uint64_t v167 = v165 | 4;
          int v168 = *(_DWORD *)(v166 | 4);
          *(unsigned char *)(v167 + 4) = *(unsigned char *)((v166 | 4) + 4);
          *(_DWORD *)uint64_t v167 = v168;
          *(_WORD *)(v165 + 10) = *(_WORD *)(v166 + 0xA);
          unint64_t v169 = *(void (**)(unint64_t, unint64_t, uint64_t))(v565 + 32);
          v169((v568 + v165) & v47, (v568 + v166) & v47, v591);
          unint64_t v170 = (v569 + ((v568 + v165) & v47)) & v47;
          unint64_t v171 = (v569 + ((v568 + v166) & v47)) & v47;
          v169(v170, v171, v591);
          char v172 = (unsigned char *)(v170 + v564);
          *char v172 = *(unsigned char *)(v171 + v564);
          v172[1] = *(unsigned char *)(v171 + v564 + 1);
          v172[2] = *(unsigned char *)(v171 + v564 + 2);
          v172[3] = *(unsigned char *)(v171 + v564 + 3);
          v172[4] = *(unsigned char *)(v171 + v564 + 4);
          unint64_t v173 = (v170 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v174 = (v171 + v564 + 12) & 0xFFFFFFFFFFFFFFF8;
          *(_OWORD *)unint64_t v173 = *(_OWORD *)v174;
          *(unsigned char *)(v173 + 16) = *(unsigned char *)(v174 + 16);
          *(unsigned char *)(v173 + 17) = *(unsigned char *)(v174 + 17);
          *(unsigned char *)(v173 + 18) = *(unsigned char *)(v174 + 18);
          *(unsigned char *)(v173 + 19) = *(unsigned char *)(v174 + 19);
          unint64_t v175 = (v173 + 27) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v176 = (v174 + 27) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v175 = *(void *)v176;
          *(unsigned char *)(v175 + 8) = *(unsigned char *)(v176 + 8);
          *(unsigned char *)(v175 + 9) = *(unsigned char *)(v176 + 9);
          *(unsigned char *)(v175 + 10) = *(unsigned char *)(v176 + 10);
          *(unsigned char *)(v175 + 11) = *(unsigned char *)(v176 + 11);
          *(unsigned char *)(v175 + 12) = *(unsigned char *)(v176 + 12);
          unint64_t v177 = (void *)((v174 + 47) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v178 = (void *)((v173 + 47) & 0xFFFFFFFFFFFFFFF8);
          void *v178 = *v177;
          unint64_t v179 = ((unint64_t)v178 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v180 = ((unint64_t)v177 + 15) & 0xFFFFFFFFFFFFFFF8;
          *(void *)unint64_t v179 = *(void *)v180;
          *(unsigned char *)(v179 + 8) = *(unsigned char *)(v180 + 8);
          *(unsigned char *)(v179 + 9) = *(unsigned char *)(v180 + 9);
          unint64_t v181 = (void *)((v570 + v179) & v47);
          uint64_t v182 = (const void *)((v570 + v180) & v47);
          if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v565 + 48))(v182, 1, v591))
          {
            memcpy(v181, v182, __n);
          }
          else
          {
            v169((unint64_t)v181, (unint64_t)v182, v591);
            (*(void (**)(void *, void, uint64_t, uint64_t))(v565 + 56))(v181, 0, 1, v591);
          }
          uint64_t v2 = a1;
          unint64_t v53 = v598;
          char v214 = 0;
          char v213 = 0;
          unint64_t v279 = (void *)(((unint64_t)v181 + v571) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v280 = (void *)(((unint64_t)v182 + v571) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v279 = *v280;
          unint64_t v281 = ((unint64_t)v279 + 15) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v282 = ((unint64_t)v280 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v283 = *(void *)v282;
          *(unsigned char *)(v281 + 8) = *(unsigned char *)(v282 + 8);
          *(void *)unint64_t v281 = v283;
          uint64_t v284 = (void *)(((unint64_t)v279 + 31) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v285 = (void *)(((unint64_t)v280 + 31) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v284 = *v285;
          uint64_t v286 = (_OWORD *)(((unint64_t)v284 + 15) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v287 = (_OWORD *)(((unint64_t)v285 + 15) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v286 = *v287;
          unint64_t v288 = ((unint64_t)v286 + 19) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v289 = ((unint64_t)v287 + 19) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v290 = *(void *)v289;
          *(unsigned char *)(v288 + 8) = *(unsigned char *)(v289 + 8);
          *(void *)unint64_t v288 = v290;
          *(unsigned char *)(v288 + 9) = *(unsigned char *)(v289 + 9);
          unint64_t v291 = (v288 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          unint64_t v292 = (v289 + 13) & 0xFFFFFFFFFFFFFFFCLL;
          LODWORD(v283) = *(_DWORD *)v292;
          *(unsigned char *)(v291 + 4) = *(unsigned char *)(v292 + 4);
          *(_DWORD *)unint64_t v291 = v283;
          *(_OWORD *)((v288 + 25) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v289 + 25) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v293 = v585 + v165;
          long long v294 = *(_OWORD *)(v585 + v166 + 112);
          long long v296 = *(_OWORD *)(v585 + v166 + 64);
          long long v295 = *(_OWORD *)(v585 + v166 + 80);
          *(_OWORD *)(v293 + 96) = *(_OWORD *)(v585 + v166 + 96);
          *(_OWORD *)(v293 + 112) = v294;
          *(_OWORD *)(v293 + 64) = v296;
          *(_OWORD *)(v293 + 80) = v295;
          long long v297 = *(_OWORD *)(v585 + v166 + 176);
          long long v299 = *(_OWORD *)(v585 + v166 + 128);
          long long v298 = *(_OWORD *)(v585 + v166 + 144);
          *(_OWORD *)(v293 + 160) = *(_OWORD *)(v585 + v166 + 160);
          *(_OWORD *)(v293 + 176) = v297;
          *(_OWORD *)(v293 + 128) = v299;
          *(_OWORD *)(v293 + 144) = v298;
          long long v301 = *(_OWORD *)(v585 + v166 + 208);
          long long v300 = *(_OWORD *)(v585 + v166 + 224);
          long long v302 = *(_OWORD *)(v585 + v166 + 192);
          *(void *)(v293 + 240) = *(void *)(v585 + v166 + 240);
          *(_OWORD *)(v293 + 208) = v301;
          *(_OWORD *)(v293 + 224) = v300;
          *(_OWORD *)(v293 + 192) = v302;
          long long v303 = *(_OWORD *)(v585 + v166);
          long long v304 = *(_OWORD *)(v585 + v166 + 16);
          long long v305 = *(_OWORD *)(v585 + v166 + 48);
          *(_OWORD *)(v293 + 32) = *(_OWORD *)(v585 + v166 + 32);
          *(_OWORD *)(v293 + 48) = v305;
          *(_OWORD *)unint64_t v293 = v303;
          *(_OWORD *)(v293 + 16) = v304;
          unint64_t v306 = (_OWORD *)((v585 + v165 + 255) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v307 = (long long *)((v585 + v166 + 255) & 0xFFFFFFFFFFFFFFF8);
          long long v308 = *v307;
          *(_OWORD *)((char *)v306 + 9) = *(long long *)((char *)v307 + 9);
          _OWORD *v306 = v308;
          unint64_t v309 = (v585 + v165 + 287) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v310 = (v585 + v166 + 287) & 0xFFFFFFFFFFFFFFF8;
          long long v311 = *(_OWORD *)v310;
          *(unsigned char *)(v309 + 16) = *(unsigned char *)(v310 + 16);
          *(_OWORD *)unint64_t v309 = v311;
          unint64_t v312 = (void *)((v585 + v165 + 311) & 0xFFFFFFFFFFFFFFF8);
          unint64_t v313 = (void *)((v585 + v166 + 311) & 0xFFFFFFFFFFFFFFF8);
          *unint64_t v312 = *v313;
          *(_OWORD *)(((unint64_t)v312 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v313 + 15) & 0xFFFFFFFFFFFFFFF8);
          int v211 = (_OWORD *)((unint64_t)&a1[v537 + 7] & 0xFFFFFFFFFFFFFFF8);
          uint64_t v212 = (_OWORD *)((unint64_t)&a2[v537 + 7] & 0xFFFFFFFFFFFFFFF8);
          break;
      }
    }
    _OWORD *v211 = *v212;
    v2[v53] = v214;
    v2[v37] = v213;
  }
  return v2;
}