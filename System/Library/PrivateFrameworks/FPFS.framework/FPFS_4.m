void sub_24D67AF3C(void *a1, int a2, void *a3, uint64_t a4, void *a5, void *aBlock, void (*a7)(id, uint64_t, id, void *))
{
  void *v12;
  id v13;
  id v14;
  id v15;
  uint64_t vars8;

  v12 = _Block_copy(aBlock);
  _Block_copy(v12);
  v13 = a3;
  v14 = a5;
  v15 = a1;
  a7(v13, a4, v15, v12);
  _Block_release(v12);
  _Block_release(v12);
}

void sub_24D67AFF0(uint64_t a1, uint64_t a2, void (*a3)(void, void), uint64_t a4)
{
  uint64_t v37 = a2;
  uint64_t v7 = type metadata accessor for VFSItem(0);
  MEMORY[0x270FA5388](v7 - 8);
  v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC9078();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194250);
  MEMORY[0x270FA5388](v14);
  v16 = (void **)((char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24D415FD0(a1, (uint64_t)v16, &qword_26B194250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v36 = v11;
    v17 = *v16;
    id v18 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v19 = v37;
    swift_retain_n();
    v20 = sub_24DCC9068();
    os_log_type_t v21 = sub_24DCCA128();
    if (os_log_type_enabled(v20, v21))
    {
      v33 = v13;
      uint64_t v34 = a4;
      v35 = a3;
      v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v23 = swift_slowAlloc();
      uint64_t v39 = v23;
      *(_DWORD *)v22 = 136315138;
      swift_beginAccess();
      v24 = *(void **)(v19 + 32);
      uint64_t v25 = *(unsigned __int8 *)(v19 + 40);
      char v26 = *(unsigned char *)(v19 + 41);
      uint64_t v32 = v10;
      if (v26)
      {
        swift_retain();
        sub_24D4018B8(v24, v25, 1);
        uint64_t v27 = sub_24D3D79D4();
        unint64_t v29 = v28;
        sub_24D40160C(v24, v25, 1);
        swift_release();
      }
      else
      {
        uint64_t v27 = sub_24D3D4384((uint64_t)v24, v25);
        unint64_t v29 = v30;
      }
      uint64_t v38 = sub_24D418FB4(v27, v29, &v39);
      sub_24DCCA428();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v20, v21, "Failed to materialize fallback destination %s", v22, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v23, -1, -1);
      MEMORY[0x25332B030](v22, -1, -1);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v33, v32);
      a3 = v35;
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v10);
    }
    id v31 = v17;
    a3(v17, 256);
  }
  else
  {
    sub_24D40BC84((uint64_t)v16, (uint64_t)v9, type metadata accessor for VFSItem);
    a3(*(void *)v9, v9[8]);
    sub_24D3FC974((uint64_t)v9, type metadata accessor for VFSItem);
  }
}

void sub_24D67B3EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void (*a6)(void, void), uint64_t a7, uint64_t a8)
{
  uint64_t v89 = a8;
  v97 = a6;
  uint64_t v98 = a7;
  unint64_t v95 = a5;
  uint64_t v96 = a4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_24DCC8A58();
  uint64_t v13 = *(void *)(v92 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v92);
  v91 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  v17 = (char *)&v84 - v16;
  uint64_t v18 = type metadata accessor for VFSItem(0);
  MEMORY[0x270FA5388](v18 - 8);
  v20 = (uint64_t *)((char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = sub_24DCC9078();
  uint64_t v93 = *(void *)(v21 - 8);
  uint64_t v94 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  v90 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  uint64_t v25 = (char *)&v84 - v24;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194250);
  MEMORY[0x270FA5388](v26);
  unint64_t v28 = (void **)((char *)&v84 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24D415FD0(a1, (uint64_t)v28, &qword_26B194250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    unint64_t v29 = *v28;
    if (a2)
    {
      swift_retain();
      id v30 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      swift_retain_n();
      id v31 = sub_24DCC9068();
      os_log_type_t v32 = sub_24DCCA128();
      if (os_log_type_enabled(v31, v32))
      {
        v33 = (uint8_t *)swift_slowAlloc();
        uint64_t v92 = swift_slowAlloc();
        v100[0] = v92;
        *(_DWORD *)v33 = 136315138;
        swift_beginAccess();
        uint64_t v34 = *(void **)(a2 + 32);
        uint64_t v35 = *(unsigned __int8 *)(a2 + 40);
        if (*(unsigned char *)(a2 + 41))
        {
          swift_retain();
          sub_24D4018B8(v34, v35, 1);
          uint64_t v36 = sub_24D3D79D4();
          unint64_t v38 = v37;
          sub_24D40160C(v34, v35, 1);
          swift_release();
        }
        else
        {
          uint64_t v36 = sub_24D3D4384(*(void *)(a2 + 32), *(unsigned char *)(a2 + 40));
          unint64_t v38 = v61;
        }
        v101[0] = sub_24D418FB4(v36, v38, v100);
        sub_24DCCA428();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_24D3D0000, v31, v32, "Failed to materialize new parent, attempting to fall back to %s", v33, 0xCu);
        uint64_t v62 = v92;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v62, -1, -1);
        MEMORY[0x25332B030](v33, -1, -1);
      }
      else
      {

        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v93 + 8))(v25, v94);
      id v63 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB8]), sel_init);
      v64 = (void *)swift_allocObject();
      v65 = v97;
      uint64_t v66 = v98;
      v64[2] = a2;
      v64[3] = v65;
      v64[4] = v66;
      swift_retain();
      swift_retain();
      sub_24D5FCEF8(a2, 0, 0, 1, v95, v63, (uint64_t)sub_24D6E4F80, (uint64_t)v64);
      swift_release();

      swift_release();
    }
    else
    {
      id v41 = v29;
      v97(v29, 256);
    }
  }
  else
  {
    sub_24D40BC84((uint64_t)v28, (uint64_t)v20, type metadata accessor for VFSItem);
    if (a2)
    {
      swift_retain();
      sub_24D5F07E8(v12);
      uint64_t v39 = v13;
      uint64_t v40 = v92;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v92) == 1)
      {
        sub_24D415F74((uint64_t)v12, (uint64_t *)&unk_26B199050);
        v97(*v20, *((unsigned __int8 *)v20 + 8));
        swift_release();
      }
      else
      {
        v42 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
        v43 = v17;
        v42(v17, v12, v40);
        uint64_t v44 = *(void *)(v96 + 16);
        type metadata accessor for VFSFileTree(0);
        v45 = (void *)swift_dynamicCastClassUnconditional();
        swift_retain();
        if (objc_sync_enter(v45)) {
          sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v45);
        }
        uint64_t v46 = v45[20];
        swift_retain();
        int v47 = objc_sync_exit(v45);
        v48 = v91;
        if (v47) {
          sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v45);
        }
        swift_release();
        (*(void (**)(char *, uint64_t, uint64_t))(v39 + 16))(v48, v46 + OBJC_IVAR____TtC9libfssync14VFSLookupScope_trashURL, v40);
        swift_release();
        sub_24DCC8A18();
        sub_24DCC8A18();
        char v49 = sub_24DCC9A08();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v49)
        {
          uint64_t v96 = v44;
          id v50 = (id)fpfs_current_or_default_log();
          v51 = v90;
          sub_24DCC9088();
          swift_retain_n();
          uint64_t v52 = v89;
          swift_retain_n();
          v53 = sub_24DCC9068();
          int v54 = sub_24DCCA118();
          v88 = v53;
          if (os_log_type_enabled(v53, (os_log_type_t)v54))
          {
            int v86 = v54;
            v55 = (uint8_t *)swift_slowAlloc();
            uint64_t v85 = swift_slowAlloc();
            v101[0] = v85;
            v87 = v55;
            *(_DWORD *)v55 = 136315394;
            swift_beginAccess();
            v56 = *(void **)(v52 + 32);
            uint64_t v57 = *(unsigned __int8 *)(v52 + 40);
            if (*(unsigned char *)(v52 + 41))
            {
              swift_retain();
              sub_24D4018B8(v56, v57, 1);
              uint64_t v58 = sub_24D3D79D4();
              unint64_t v60 = v59;
              sub_24D40160C(v56, v57, 1);
              swift_release();
            }
            else
            {
              uint64_t v58 = sub_24D3D4384(*(void *)(v52 + 32), *(unsigned char *)(v52 + 40));
              unint64_t v60 = v67;
            }
            v68 = v87;
            v100[0] = sub_24D418FB4(v58, v60, v101);
            sub_24DCCA428();
            swift_release_n();
            swift_bridgeObjectRelease();
            *((_WORD *)v68 + 6) = 2080;
            swift_beginAccess();
            v69 = *(void **)(a2 + 32);
            uint64_t v70 = *(unsigned __int8 *)(a2 + 40);
            if (*(unsigned char *)(a2 + 41))
            {
              swift_retain();
              sub_24D4018B8(v69, v70, 1);
              uint64_t v71 = sub_24D3D79D4();
              unint64_t v73 = v72;
              sub_24D40160C(v69, v70, 1);
              swift_release();
            }
            else
            {
              uint64_t v71 = sub_24D3D4384(*(void *)(a2 + 32), *(unsigned char *)(a2 + 40));
              unint64_t v73 = v74;
            }
            os_log_type_t v75 = v86;
            v76 = v87;
            uint64_t v99 = sub_24D418FB4(v71, v73, v101);
            sub_24DCCA428();
            swift_release_n();
            swift_bridgeObjectRelease();
            v77 = v88;
            _os_log_impl(&dword_24D3D0000, v88, v75, "Destination %s for item is in the trash, falling back to %s", v76, 0x16u);
            uint64_t v78 = v85;
            swift_arrayDestroy();
            MEMORY[0x25332B030](v78, -1, -1);
            MEMORY[0x25332B030](v76, -1, -1);

            (*(void (**)(char *, uint64_t))(v93 + 8))(v90, v94);
            uint64_t v40 = v92;
          }
          else
          {

            swift_release_n();
            swift_release_n();
            (*(void (**)(char *, uint64_t))(v93 + 8))(v51, v94);
          }
          id v79 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB8]), sel_init);
          v80 = (void *)swift_allocObject();
          v81 = v97;
          uint64_t v82 = v98;
          v80[2] = a2;
          v80[3] = v81;
          v80[4] = v82;
          swift_retain();
          swift_retain();
          sub_24D5FCEF8(a2, 0, 0, 1, v95, v79, (uint64_t)sub_24D6DBFD4, (uint64_t)v80);
          swift_release();
        }
        else
        {
          v97(*v20, *((unsigned __int8 *)v20 + 8));
        }
        swift_release();
        v83 = *(void (**)(char *, uint64_t))(v39 + 8);
        v83(v48, v40);
        v83(v43, v40);
      }
    }
    else
    {
      v97(*v20, *((unsigned __int8 *)v20 + 8));
    }
    sub_24D3FC974((uint64_t)v20, type metadata accessor for VFSItem);
  }
}

void sub_24D67BF24(uint64_t *a1@<X8>)
{
  uint64_t v3 = sub_24DCC9858();
  MEMORY[0x270FA5388](v3 - 8);
  v4 = sub_24DBABBD4((void *(*)(void *__return_ptr, uint64_t))sub_24D6DACE8);
  if (v1)
  {

    *a1 = 0;
    return;
  }
  unint64_t v5 = (unint64_t)v4;
  uint64_t v13 = sub_24D6CAE10((uint64_t)v4);
  unint64_t v14 = v6;
  if ((v5 & 0x8000000000000000) == 0)
  {
    sub_24DCC8AD8();
    sub_24D6B29F0(&v13);
    uint64_t v8 = v13;
    unint64_t v7 = v14;
    sub_24D3F9C18(v13, v14);
    sub_24DCC9848();
    uint64_t v9 = sub_24DCC9808();
    if (v10)
    {
      uint64_t v11 = HIBYTE(v10) & 0xF;
      if ((v10 & 0x2000000000000000) == 0) {
        uint64_t v11 = v9 & 0xFFFFFFFFFFFFLL;
      }
      if (v11)
      {
        uint64_t v12 = sub_24DCC97B8();
        sub_24D400DCC(v8, v7);
        swift_bridgeObjectRelease();
        sub_24D400DCC(v8, v7);
LABEL_12:
        *a1 = v12;
        return;
      }
      sub_24D400DCC(v8, v7);
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_24D400DCC(v8, v7);
    }
    sub_24D400DCC(v8, v7);
    uint64_t v12 = 0;
    goto LABEL_12;
  }
  __break(1u);
}

uint64_t sub_24D67C0E0(uint64_t a1, unint64_t a2, void *a3, unint64_t a4, uint64_t a5, uint64_t a6, void *a7, int a8, unsigned __int8 a9)
{
  uint64_t v60 = a6;
  unint64_t v65 = a2;
  int v63 = a9;
  int v64 = a8;
  uint64_t v14 = sub_24DCC9078();
  uint64_t v61 = *(void *)(v14 - 8);
  uint64_t v62 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v53 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v17 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v18 = a3;
  sub_24D40B3C8(a4);
  id v19 = v18;
  sub_24D40B3C8(a4);
  v20 = sub_24DCC9068();
  os_log_type_t v21 = sub_24DCCA118();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    unint64_t v59 = a7;
    uint64_t v23 = v22;
    uint64_t v24 = (void *)swift_slowAlloc();
    v53 = v24;
    uint64_t v55 = swift_slowAlloc();
    uint64_t v67 = v55;
    *(_DWORD *)uint64_t v23 = 136315650;
    uint64_t v57 = a5;
    unint64_t v25 = sub_24D97C90C(v65);
    os_log_t v54 = v20;
    uint64_t v66 = sub_24D418FB4(v25, v26, &v67);
    uint64_t v58 = a1;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    *(_WORD *)(v23 + 12) = 2112;
    id v27 = objc_msgSend(v19, sel_itemID);
    uint64_t v66 = (uint64_t)v27;
    sub_24DCCA428();
    void *v24 = v27;

    *(_WORD *)(v23 + 22) = 2080;
    sub_24D40B3C8(a4);
    unint64_t v28 = sub_24D3D865C(a4);
    id v56 = v19;
    unint64_t v30 = v29;
    sub_24D4170B0(a4);
    uint64_t v31 = v28;
    a5 = v57;
    uint64_t v66 = sub_24D418FB4(v31, v30, &v67);
    a1 = v58;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D4170B0(a4);
    sub_24D4170B0(a4);
    v20 = v54;
    id v19 = v56;
    _os_log_impl(&dword_24D3D0000, v54, v21, "Request to modify fields %s for item with ID %@: %s", (uint8_t *)v23, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    os_log_type_t v32 = v53;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v32, -1, -1);
    uint64_t v33 = v55;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v33, -1, -1);
    uint64_t v34 = v23;
    a7 = v59;
    MEMORY[0x25332B030](v34, -1, -1);
  }
  else
  {

    sub_24D4170B0(a4);
    sub_24D4170B0(a4);
  }

  (*(void (**)(char *, uint64_t))(v61 + 8))(v16, v62);
  uint64_t v35 = swift_allocObject();
  uint64_t v36 = v60;
  *(void *)(v35 + 16) = a5;
  *(void *)(v35 + 24) = v36;
  uint64_t v37 = swift_allocObject();
  swift_weakInit();
  unint64_t v38 = (void *)swift_allocObject();
  v38[2] = sub_24D6E4F8C;
  v38[3] = v35;
  v38[4] = v37;
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_24D6DAB0C;
  *(void *)(v39 + 24) = v38;
  uint64_t v40 = swift_allocObject();
  unint64_t v41 = v65;
  *(void *)(v40 + 16) = sub_24DA276BC(v65);
  swift_retain();
  id v42 = objc_msgSend(v19, sel_itemID);
  uint64_t v43 = sub_24D3D3C4C(objc_msgSend(v42, sel_identifier));

  uint64_t v44 = *(void *)(a1 + 16);
  uint64_t v45 = swift_allocObject();
  unint64_t v46 = v41;
  uint64_t v47 = v45;
  *(void *)(v45 + 16) = v19;
  *(void *)(v45 + 24) = sub_24D6E5F2C;
  *(void *)(v45 + 32) = v39;
  *(void *)(v45 + 40) = v46;
  *(void *)(v45 + 48) = v40;
  *(void *)(v45 + 56) = a7;
  *(void *)(v45 + 64) = a4;
  *(void *)(v45 + 72) = a1;
  *(unsigned char *)(v45 + 80) = v64 & 1;
  *(unsigned char *)(v45 + 81) = v63 & 1;
  id v48 = objc_allocWithZone(MEMORY[0x263F08AB8]);
  id v49 = v19;
  sub_24D40B3C8(a4);
  swift_retain();
  swift_retain();
  id v50 = a7;
  swift_retain();
  id v51 = objc_msgSend(v48, sel_init);
  sub_24D40B3C8(a4);
  swift_retain();
  sub_24D466E74(v43, 1, 0, a4, v51, 0, v44, (void (*)(uint64_t *))sub_24D6DAB7C, v47, a4);
  sub_24D4170B0(a4);
  swift_release();
  swift_release();
  swift_release();

  return swift_release_n();
}

void sub_24D67C664(uint64_t a1, void *a2, void (**a3)(char *, uint64_t), uint64_t a4, char *a5, uint64_t a6, void *a7, unint64_t a8, uint64_t a9, char a10, char a11)
{
  unint64_t v127 = a8;
  v131 = a7;
  uint64_t v135 = a6;
  v132 = a5;
  uint64_t v134 = a4;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v14 - 8);
  v122 = (char *)&v121 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = sub_24DCC8A58();
  v125 = *(unsigned int (***)(void, void, void))(v124 - 8);
  MEMORY[0x270FA5388](v124);
  v123 = (char *)&v121 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for ItemMetadata();
  MEMORY[0x270FA5388](v17 - 8);
  id v19 = (char *)&v121 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for VFSItem(0);
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v121 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_24DCC9078();
  v129 = *(void (***)(char *, uint64_t))(v130 - 8);
  MEMORY[0x270FA5388](v130);
  uint64_t v24 = (char *)&v121 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194250);
  MEMORY[0x270FA5388](v25);
  id v27 = (void **)((char *)&v121 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24D415FD0(a1, (uint64_t)v27, &qword_26B194250);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v133 = a3;
  if (EnumCaseMultiPayload == 1)
  {
    unint64_t v29 = *v27;
    id v30 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v31 = v29;
    id v32 = a2;
    uint64_t v33 = sub_24DCC9068();
    os_log_type_t v34 = sub_24DCCA128();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v35 = 138412546;
      id v37 = objc_msgSend(v32, sel_itemID);
      id v142 = v37;
      sub_24DCCA428();
      *uint64_t v36 = v37;

      *(_WORD *)(v35 + 12) = 2112;
      swift_getErrorValue();
      id v38 = sub_24DBA2828(v136);
      id v142 = v38;
      uint64_t v39 = v133;
      sub_24DCCA428();
      v36[1] = v38;

      _os_log_impl(&dword_24D3D0000, v33, v34, "Error creating item %@ on disk; error %@", (uint8_t *)v35, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v36, -1, -1);
      MEMORY[0x25332B030](v35, -1, -1);
    }
    else
    {

      uint64_t v39 = v133;
    }

    v129[1](v24, v130);
    id v63 = v29;
    ((void (*)(void, void *))v39)(0, v29);

    return;
  }
  uint64_t v40 = (void *)(v135 + 16);
  uint64_t v130 = swift_allocBox();
  uint64_t v42 = v41;
  sub_24D40BC84((uint64_t)v27, v41, type metadata accessor for VFSItem);
  v129 = (void (**)(char *, uint64_t))a2;
  id v43 = sub_24D7C479C();
  uint64_t v128 = sub_24D3D3C4C(v43);
  uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB0);
  uint64_t v126 = swift_allocBox();
  uint64_t v46 = v45;
  uint64_t v121 = v42;
  sub_24D40B474(v42, (uint64_t)v22, type metadata accessor for VFSItem);
  uint64_t v47 = *((void *)v22 + 2);
  char v48 = v22[24];
  uint64_t v50 = *((void *)v22 + 4);
  uint64_t v49 = *((void *)v22 + 5);
  sub_24D40B474((uint64_t)&v22[*(int *)(v20 + 28)], v46 + *(int *)(v44 + 40), (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  *(void *)uint64_t v46 = v47;
  *(unsigned char *)(v46 + 8) = v48;
  *(void *)(v46 + 16) = v50;
  *(void *)(v46 + 24) = v49;
  swift_bridgeObjectRetain();
  sub_24D3FC974((uint64_t)v22, type metadata accessor for VFSItem);
  int v51 = (int)v132;
  if ((v132 & 0x40000000) != 0)
  {
    swift_beginAccess();
    if ((~*(_DWORD *)v40 & 0x102) != 0) {
      *v40 |= 0x102uLL;
    }
  }
  swift_beginAccess();
  uint64_t v52 = (int *)*v40;
  v53 = v129;
  sub_24D3F9CA0((uint64_t)v19);
  sub_24D4E7C7C(v52, (uint64_t)v19);
  sub_24D3FC974((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ItemMetadata);
  swift_beginAccess();
  if (*(unsigned char *)v40)
  {
    id v54 = objc_msgSend(v53, sel_filename);
    uint64_t v55 = sub_24DCC97E8();
    uint64_t v57 = v56;

    v141[0] = v55;
    v141[1] = v57;
    uint64_t v139 = 58;
    unint64_t v140 = 0xE100000000000000;
    uint64_t v137 = 47;
    unint64_t v138 = 0xE100000000000000;
    sub_24D3F0EB8();
    uint64_t v58 = sub_24DCCA478();
    uint64_t v60 = v59;
    swift_bridgeObjectRelease();
    *(void *)(v46 + 16) = v58;
    *(void *)(v46 + 24) = v60;
    swift_bridgeObjectRelease();
  }
  uint64_t v61 = v134;
  uint64_t v62 = v121;
  if ((v51 & 0x40000000) != 0)
  {
    if (objc_msgSend(v53, sel_isTrashed))
    {
      uint64_t v64 = sub_24D3D3C4C((id)*MEMORY[0x263F053F8]);
      swift_release();
      v122 = 0;
      uint64_t v128 = v64;
      goto LABEL_15;
    }
    uint64_t v66 = v61;
    id v67 = objc_msgSend(v53, sel_parentItemIdentifier);
    uint64_t v68 = sub_24DCC97E8();
    uint64_t v70 = v69;
    if (v68 == sub_24DCC97E8() && v70 == v71)
    {

      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v72 = sub_24DCCAE28();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v72 & 1) == 0)
      {
        id v84 = sub_24D7C479C();
        uint64_t v85 = sub_24D3D3C4C(v84);
        swift_release();
        id v86 = objc_msgSend(v53, sel_providerID);
        sub_24DCC97E8();

        v87 = (void *)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        unsigned int v88 = objc_msgSend(v87, sel_fp_isiCloudDriveOrCloudDocsIdentifier);

        uint64_t v89 = (id *)MEMORY[0x263F05358];
        if (!v88) {
          uint64_t v89 = (id *)MEMORY[0x263F053F0];
        }
        v122 = (char *)sub_24D3D3C4C(*v89);
        uint64_t v128 = v85;
        goto LABEL_36;
      }
    }
    unint64_t v73 = v122;
    sub_24D5F07E8(v122);
    unint64_t v74 = v125;
    uint64_t v75 = v124;
    if (((unsigned int (**)(char *, uint64_t, uint64_t))v125)[6](v73, 1, v124) == 1)
    {
      sub_24D415F74((uint64_t)v73, (uint64_t *)&unk_26B199050);
LABEL_24:
      id v79 = objc_msgSend(v53, sel_providerID);
      sub_24DCC97E8();

      v80 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      unsigned int v81 = objc_msgSend(v80, sel_fp_isiCloudDriveOrCloudDocsIdentifier);

      uint64_t v65 = v126;
      if (v81) {
        uint64_t v82 = (id *)MEMORY[0x263F05358];
      }
      else {
        uint64_t v82 = (id *)MEMORY[0x263F053F0];
      }
      uint64_t v83 = sub_24D3D3C4C(*v82);
      swift_release();
      v122 = 0;
      uint64_t v128 = v83;
      goto LABEL_37;
    }
    ((unsigned int (**)(char *, char *, uint64_t))v74)[4](v123, v73, v75);
    uint64_t v76 = sub_24DCC8A18();
    uint64_t v78 = v77;
    v141[0] = 1;
    swift_bridgeObjectRetain();
    sub_24DBAAA80(4294967294, v76, v78, 0x200000, 0, 0, (uint64_t)v141, (uint64_t)sub_24D67BF24, 0);
    v90 = (void *)v141[0];
    if (v141[0] == 1)
    {
      __break(1u);
      return;
    }
    swift_bridgeObjectRelease();
    if (!v90)
    {
      ((void (*)(char *, uint64_t))v125[1])(v123, v75);
      goto LABEL_24;
    }
    uint64_t v91 = sub_24D3D3C4C(v90);
    swift_release();
    id v92 = objc_msgSend(v53, sel_providerID);
    sub_24DCC97E8();

    uint64_t v93 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    unsigned int v94 = objc_msgSend(v93, sel_fp_isiCloudDriveOrCloudDocsIdentifier);

    unint64_t v95 = (id *)MEMORY[0x263F05358];
    if (!v94) {
      unint64_t v95 = (id *)MEMORY[0x263F053F0];
    }
    v122 = (char *)sub_24D3D3C4C(*v95);
    sub_24D5D6F8C(v90);
    ((void (*)(char *, uint64_t))v125[1])(v123, v75);
    uint64_t v128 = v91;
LABEL_36:
    uint64_t v65 = v126;
LABEL_37:
    uint64_t v61 = v66;
    goto LABEL_38;
  }
  v122 = 0;
LABEL_15:
  uint64_t v65 = v126;
LABEL_38:
  v125 = *(unsigned int (***)(void, void, void))(v62 + 16);
  LODWORD(v124) = *(unsigned __int8 *)(v62 + 24);
  swift_beginAccess();
  uint64_t v96 = v135;
  uint64_t v97 = *(void *)(v135 + 16);
  uint64_t v98 = swift_allocObject();
  uint64_t v99 = v129;
  v100 = v133;
  *(void *)(v98 + 16) = v129;
  *(void *)(v98 + 24) = v100;
  *(void *)(v98 + 32) = v61;
  *(void *)(v98 + 40) = v65;
  *(unsigned char *)(v98 + 48) = a10 & 1;
  *(unsigned char *)(v98 + 49) = a11 & 1;
  *(void *)(v98 + 56) = v96;
  *(void *)(v98 + 64) = a9;
  uint64_t v101 = v61;
  v102 = v132;
  *(void *)(v98 + 72) = v130;
  *(void *)(v98 + 80) = v102;
  v103 = v131;
  *(void *)(v98 + 88) = v131;
  if ((v97 & 2) != 0)
  {
    id v112 = objc_allocWithZone(MEMORY[0x263F08AB8]);
    v113 = v99;
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    swift_retain_n();
    id v114 = v103;
    v133 = v113;
    id v115 = v114;
    id v116 = objc_msgSend(v112, sel_init);
    v117 = (void *)swift_allocObject();
    v117[2] = v122;
    v117[3] = v115;
    unint64_t v118 = v127;
    v117[4] = a9;
    v117[5] = v118;
    v117[6] = sub_24D6DAC28;
    v117[7] = v98;
    v117[8] = v128;
    swift_retain();
    swift_retain();
    id v119 = v115;
    sub_24D40B3C8(v118);
    swift_retain();
    uint64_t v120 = swift_retain();
    sub_24D5FCEF8(v120, 0, 0, 1, v118, v116, (uint64_t)sub_24D6DACD0, (uint64_t)v117);
    swift_release();

    swift_release_n();
    swift_release();
    swift_release();
    swift_release_n();
    swift_release();

    swift_release();
    swift_release();
  }
  else
  {
    LODWORD(v127) = a10 & 1;
    v104 = v103;
    v105 = v99;
    swift_retain_n();
    uint64_t v106 = v65;
    swift_retain_n();
    uint64_t v107 = v135;
    swift_retain_n();
    swift_retain_n();
    uint64_t v108 = v130;
    swift_retain_n();
    id v109 = v104;
    v110 = v105;
    v111 = (void (*)(char *, uint64_t))v109;
    sub_24D67D5AC(v125, v124, v110, (void (*)(void, void *))v133, v101, v106, v127, a11 & 1, v107, a9, v108, v102, v111);

    swift_release_n();
    swift_release();
    swift_release();
    swift_release_n();
    swift_release();

    swift_release();
    swift_release();
  }
  swift_release();
}

void sub_24D67D5AC(id a1, uint64_t a2, void *a3, void (*a4)(void, void *), uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, void (*a13)(char *, uint64_t))
{
  LODWORD(v161) = a8;
  LODWORD(v160) = a7;
  v165 = a4;
  uint64_t v166 = a5;
  id v164 = a3;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B193EB0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_24DCC8288();
  MEMORY[0x270FA5388](v18 - 8);
  v154 = (char *)&v144 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_24DCC82A8();
  v155 = *(void (**)(char *, uint64_t))(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v153 = (uint64_t)&v144 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v22 - 8);
  v151 = (char *)&v144 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = sub_24DCC8A58();
  uint64_t v150 = *(void *)(v152 - 8);
  MEMORY[0x270FA5388](v152);
  v148 = (char *)&v144 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1949D0);
  MEMORY[0x270FA5388](v25 - 8);
  id v27 = (char *)&v144 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1949E8);
  MEMORY[0x270FA5388](v149);
  unint64_t v29 = (char *)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = type metadata accessor for VFSItem(0);
  uint64_t v30 = MEMORY[0x270FA5388](v157);
  uint64_t v158 = (uint64_t)&v144 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v156 = (uint64_t)&v144 - v32;
  uint64_t v33 = sub_24DCC9078();
  v162 = *(char **)(v33 - 8);
  uint64_t v163 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v144 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = swift_projectBox();
  uint64_t v159 = a11;
  uint64_t v37 = a2;
  uint64_t v38 = swift_projectBox();
  if ((a2 & 0x100) == 0)
  {
    uint64_t v146 = v20;
    uint64_t v147 = v38;
    v162 = v17;
    uint64_t v39 = a10;
    uint64_t v40 = (unsigned char *)(a9 + 16);
    swift_beginAccess();
    *(void *)uint64_t v36 = a1;
    uint64_t v163 = v36;
    *(unsigned char *)(v36 + 8) = a2;
    if (v160) {
      uint64_t v41 = 0;
    }
    else {
      uint64_t v41 = 4;
    }
    if ((v161 & 1) == 0) {
      goto LABEL_38;
    }
    swift_beginAccess();
    if ((*v40 & 3) == 0) {
      goto LABEL_38;
    }
    uint64_t v160 = a9 + 16;
    uint64_t v161 = a10;
    type metadata accessor for VFSFileTree(0);
    swift_dynamicCastClassUnconditional();
    uint64_t v42 = v163;
    swift_beginAccess();
    uint64_t v43 = *(void *)(v42 + 16);
    uint64_t v44 = *(void *)(v42 + 24);
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24DC467A0((uint64_t)a1, a2, v43, v44, 1, v27);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1949C0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v45 - 8) + 48))(v27, 1, v45) == 1)
    {
      uint64_t v46 = (uint64_t *)&unk_26B1949D0;
      uint64_t v47 = (uint64_t)v27;
LABEL_15:
      sub_24D415F74(v47, v46);
      sub_24DCC8148();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
      uint64_t v75 = v153;
      uint64_t v76 = v146;
      sub_24DCC8808();
      uint64_t v77 = (void *)sub_24DCC8128();
      (*((void (**)(uint64_t, uint64_t))v155 + 1))(v75, v76);
      v165(0, v77);

      return;
    }
    uint64_t v65 = (uint64_t)&v27[*(int *)(v45 + 48)];
    uint64_t v67 = v149;
    uint64_t v66 = v150;
    uint64_t v68 = (uint64_t)&v29[*(int *)(v149 + 48)];
    uint64_t v69 = v27;
    uint64_t v70 = v152;
    v145 = *(void (**)(char *, char *, uint64_t))(v150 + 32);
    v145(v29, v69, v152);
    sub_24D40BC84(v65, v68, type metadata accessor for VFSItem);
    uint64_t v71 = v156;
    sub_24D40BC84((uint64_t)&v29[*(int *)(v67 + 48)], v156, type metadata accessor for VFSItem);
    char v72 = *(void (**)(char *, uint64_t))(v66 + 8);
    uint64_t v149 = v66 + 8;
    v72(v29, v70);
    unint64_t v73 = v151;
    sub_24D5F07E8(v151);
    uint64_t v74 = v70;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v66 + 48))(v73, 1, v70) == 1)
    {
      sub_24D3FC974(v71, type metadata accessor for VFSItem);
      uint64_t v46 = (uint64_t *)&unk_26B199050;
      uint64_t v47 = (uint64_t)v73;
      goto LABEL_15;
    }
    v154 = (char *)v41;
    v155 = v72;
    uint64_t v78 = v148;
    v145(v148, v73, v74);
    uint64_t v79 = sub_24DCC8A18();
    uint64_t v81 = v80;
    MEMORY[0x270FA5388](v79);
    v168[0] = xmmword_24DCD46F0;
    swift_bridgeObjectRetain();
    sub_24DBAB16C(4294967294, v79, v81, 3145728, 0, 0, (uint64_t)v168, (uint64_t)sub_24D6DC06C, (uint64_t)&v143);
    unint64_t v82 = *((void *)&v168[0] + 1);
    if (*((void *)&v168[0] + 1) == 1)
    {
      __break(1u);
      return;
    }
    uint64_t v83 = *(void *)&v168[0];
    swift_bridgeObjectRelease();
    if (!v82) {
      goto LABEL_37;
    }
    uint64_t v84 = v163;
    swift_beginAccess();
    uint64_t v86 = *(void *)(v84 + 16);
    unint64_t v85 = *(void *)(v84 + 24);
    swift_bridgeObjectRetain();
    sub_24D6DC088(v83, v82);
    uint64_t v87 = sub_24D40114C(v83, v82);
    uint64_t v89 = v88;
    sub_24D4FFE40(v83, v82);
    if (v89)
    {
      if (v87 == 12565487 && v89 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRetain();
        unint64_t v91 = sub_24DCC9918();
        unint64_t v92 = sub_24D41824C(v91, v83, v82);
        uint64_t v94 = v93;
        uint64_t v96 = v95;
        uint64_t v98 = v97;
        sub_24D4FFE40(v83, v82);
        uint64_t v153 = MEMORY[0x253327950](v92, v94, v96, v98);
        unint64_t v100 = v99;
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
      char v90 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if (v90) {
        goto LABEL_23;
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v153 = v83;
    unint64_t v100 = v82;
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v101 = sub_24D40114C(v86, v85);
    uint64_t v103 = v102;
    swift_bridgeObjectRelease();
    if (v103)
    {
      if (v101 == 12565487 && v103 == 0xA300000000000000)
      {
        swift_bridgeObjectRelease();
LABEL_30:
        swift_bridgeObjectRetain();
        unint64_t v105 = sub_24DCC9918();
        unint64_t v106 = sub_24D41824C(v105, v86, v85);
        uint64_t v108 = v107;
        uint64_t v110 = v109;
        unint64_t v111 = v100;
        uint64_t v113 = v112;
        swift_bridgeObjectRelease();
        uint64_t v114 = MEMORY[0x253327950](v106, v108, v110, v113);
        unint64_t v116 = v115;
        unint64_t v100 = v111;
        uint64_t v86 = v114;
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
      char v104 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      if (v104) {
        goto LABEL_30;
      }
    }
    swift_bridgeObjectRetain();
    unint64_t v116 = v85;
LABEL_32:
    if (v153 == v86 && v100 == v116)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v117 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v117 & 1) == 0)
      {
        uint64_t v40 = (unsigned char *)v160;
        swift_beginAccess();
        uint64_t v41 = (uint64_t)v154;
        if ((*(void *)v40 & 1) == 0) {
          *(void *)v40 |= 1uLL;
        }
        v155(v78, v152);
        sub_24D3FC974(v156, type metadata accessor for VFSItem);
        uint64_t v142 = v163;
        swift_beginAccess();
        *(void *)(v142 + 16) = v83;
        *(void *)(v142 + 24) = v82;
        swift_bridgeObjectRelease();
        uint64_t v39 = v161;
        goto LABEL_38;
      }
    }
    sub_24D4FFE40(v83, v82);
LABEL_37:
    v155(v78, v152);
    sub_24D3FC974(v156, type metadata accessor for VFSItem);
    uint64_t v41 = (uint64_t)v154;
    uint64_t v40 = (unsigned char *)v160;
    uint64_t v39 = v161;
LABEL_38:
    v155 = a13;
    v154 = a12;
    uint64_t v118 = v39;
    uint64_t v119 = *(void *)(*(void *)(*(void *)(v39 + 16) + 32) + 16);
    type metadata accessor for VFSFileTree(0);
    uint64_t v152 = v119;
    uint64_t v161 = swift_dynamicCastClassUnconditional();
    uint64_t v120 = v147;
    swift_beginAccess();
    uint64_t v160 = *(void *)v120;
    LODWORD(v156) = *(unsigned __int8 *)(v120 + 8);
    uint64_t v121 = v163;
    swift_beginAccess();
    uint64_t v122 = v121;
    uint64_t v123 = (uint64_t)v162;
    sub_24D415FD0(v122, (uint64_t)v162, &qword_26B193EB0);
    swift_beginAccess();
    uint64_t v163 = *(void *)v40;
    type metadata accessor for StagedContext();
    uint64_t v153 = swift_allocObject();
    v169[0] = 0;
    v169[1] = 0;
    v169[2] = 0xB000000000000000;
    long long v170 = 0u;
    long long v171 = 0u;
    swift_beginAccess();
    uint64_t v124 = v158;
    sub_24D40B474(v120, v158, type metadata accessor for VFSItem);
    uint64_t v125 = v124 + *(int *)(v157 + 36);
    uint64_t v126 = *(void *)v125;
    int v127 = *(_DWORD *)(v125 + 8);
    uint64_t v128 = *(void *)(v125 + 16);
    LOBYTE(v125) = *(unsigned char *)(v125 + 24);
    uint64_t v129 = *(void *)(v124 + 16);
    char v130 = *(unsigned char *)(v124 + 24);
    uint64_t v131 = *(void *)(v124 + 32);
    uint64_t v132 = *(void *)(v124 + 40);
    *(void *)&long long v172 = v126;
    DWORD2(v172) = v127;
    uint64_t v173 = v128;
    char v174 = v125;
    uint64_t v175 = 0;
    uint64_t v176 = v129;
    char v177 = v130;
    uint64_t v178 = v131;
    uint64_t v179 = v132;
    uint64_t v181 = 0;
    uint64_t v182 = 0;
    uint64_t v180 = 0;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24D3FC974(v124, type metadata accessor for VFSItem);
    id v133 = v164;
    sub_24D7C5A54((uint64_t)v168);
    uint64_t v134 = v41;
    uint64_t v135 = swift_allocObject();
    uint64_t v136 = (void (*)(void, void))v165;
    uint64_t v137 = v166;
    *(void *)(v135 + 16) = v133;
    *(void *)(v135 + 24) = v136;
    *(void *)(v135 + 32) = v137;
    *(void *)(v135 + 40) = v118;
    unint64_t v138 = v155;
    uint64_t v139 = v159;
    *(void *)(v135 + 48) = v154;
    *(void *)(v135 + 56) = v139;
    *(void *)(v135 + 64) = v138;
    id v140 = v133;
    swift_retain();
    swift_retain();
    swift_retain();
    v141 = v138;
    sub_24DC8B300(v160, v156, v123, v163, v153, (uint64_t)v169, &v172, v134, (uint64_t)v168, (char *)sub_24D6DC054, (char *)v135);
    swift_release();
    sub_24D472A7C((uint64_t)v168);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_release();
    swift_release();
    sub_24D415F74(v123, &qword_26B193EB0);
    return;
  }
  id v48 = a1;
  id v49 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D6DC09C(a1, a2, 1);
  id v50 = v164;
  int v51 = sub_24DCC9068();
  os_log_type_t v52 = sub_24DCCA128();
  int v53 = v52;
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    id v164 = a1;
    uint64_t v56 = (void *)v55;
    *(_DWORD *)uint64_t v54 = 138412546;
    LODWORD(v161) = v53;
    uint64_t v57 = v37;
    id v58 = objc_msgSend(v50, sel_itemID);
    *(void *)&v168[0] = v58;
    sub_24DCCA428();
    void *v56 = v58;
    uint64_t v37 = v57;

    *(_WORD *)(v54 + 12) = 2112;
    swift_getErrorValue();
    id v59 = sub_24DBA2828(v167);
    *(void *)&v168[0] = v59;
    sub_24DCCA428();
    uint64_t v60 = v56;
    a1 = v164;
    v60[1] = v59;
    sub_24D6DC0A8(a1, v57, 1);
    _os_log_impl(&dword_24D3D0000, v51, (os_log_type_t)v161, "Error retrieving item state item %@; error %@",
      (uint8_t *)v54,
      0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v60, -1, -1);
    MEMORY[0x25332B030](v54, -1, -1);
  }
  else
  {

    sub_24D6DC0A8(a1, v37, 1);
  }
  uint64_t v61 = v165;
  uint64_t v63 = (uint64_t)v162;
  uint64_t v62 = v163;

  (*(void (**)(char *, uint64_t))(v63 + 8))(v35, v62);
  id v64 = a1;
  v61(0, a1);
  sub_24D6DC0A8(a1, v37, 1);
  sub_24D6DC0A8(a1, v37, 1);
}

uint64_t sub_24D67E5F0@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  int v37 = a1;
  uint64_t v31 = a3;
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v30 = sub_24DCC8CE8();
  uint64_t v29 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  unint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  uint64_t v32 = v5;
  sub_24DCC8CD8();
  v28[1] = v6;
  sub_24DB93950((uint64_t)&v46);
  uint64_t v38 = *(void *)&v46.st_dev;
  __darwin_ino64_t st_ino = v46.st_ino;
  unint64_t v7 = *(void *)&v46.st_uid;
  uint64_t tv_nsec = v46.st_atimespec.tv_nsec;
  __darwin_time_t tv_sec = v46.st_atimespec.tv_sec;
  if (LOBYTE(v46.st_rdev)) {
    unint64_t v7 = 0;
  }
  unint64_t v34 = v7;
  unint64_t v39 = (unint64_t)objc_msgSend(self, sel_fp_maximumBounceLevel);
  if ((v39 & 0x8000000000000000) != 0)
  {
    uint64_t result = sub_24DCCA968();
    __break(1u);
    return result;
  }
  int v10 = 0;
  do
  {
    int v35 = v10;
    if (v10)
    {
      id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08790]), sel_init);
      objc_msgSend(v11, sel_setDateStyle_, 1);
      id v33 = v11;
      objc_msgSend(v11, sel_setTimeStyle_, 2);
      uint64_t v12 = (void *)sub_24DCC8C38();
      id v13 = objc_msgSend(v11, sel_stringFromDate_, v12);

      uint64_t v14 = sub_24DCC97E8();
      __darwin_ino64_t v16 = v15;

      *(void *)&v46.st_dev = v14;
      v46.__darwin_ino64_t st_ino = v16;
      uint64_t v44 = 58;
      unint64_t v45 = 0xE100000000000000;
      uint64_t v42 = 39;
      unint64_t v43 = 0xE100000000000000;
      sub_24D3F0EB8();
      uint64_t v17 = sub_24DCCA478();
      __darwin_ino64_t v19 = v18;
      swift_bridgeObjectRelease();
      *(void *)&v46.st_dev = v17;
      v46.__darwin_ino64_t st_ino = v19;
      uint64_t v44 = 47;
      unint64_t v45 = 0xE100000000000000;
      uint64_t v42 = 58;
      unint64_t v43 = 0xE100000000000000;
      sub_24DCCA478();
      swift_bridgeObjectRelease();
      *(void *)&v46.st_dev = v38;
      v46.__darwin_ino64_t st_ino = st_ino;
      sub_24DCC9968();
      sub_24DCC9968();

      swift_bridgeObjectRelease();
      uint64_t v38 = *(void *)&v46.st_dev;
      __darwin_ino64_t st_ino = v46.st_ino;
    }
    if (v34 < v39)
    {
      for (i = (char *)v34; ; ++i)
      {
        if (i == (char *)1) {
          goto LABEL_16;
        }
        if (i) {
          break;
        }
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v21 = v38;
        __darwin_ino64_t v22 = st_ino;
        if (tv_nsec) {
          goto LABEL_13;
        }
LABEL_14:
        memset(&v46, 0, 28);
        memset(&v46.st_atimespec, 0, 112);
        uint64_t v44 = v21;
        unint64_t v45 = v22;
        uint64_t v42 = 47;
        unint64_t v43 = 0xE100000000000000;
        uint64_t v40 = 58;
        unint64_t v41 = 0xE100000000000000;
        sub_24D3F0EB8();
        swift_bridgeObjectRetain();
        sub_24DCCA478();
        uint64_t v23 = sub_24DCC9898();
        swift_bridgeObjectRelease();
        int v24 = fstatat(v37, (const char *)(v23 + 32), &v46, 32);
        swift_bridgeObjectRelease();
        swift_release();
        if (v24 < 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_23;
        }
        swift_bridgeObjectRelease();
LABEL_16:
        if ((char *)v39 == i) {
          goto LABEL_5;
        }
        if (__CFADD__(i, 1)) {
          __break(1u);
        }
      }
      *(void *)&v46.st_dev = v38;
      v46.__darwin_ino64_t st_ino = st_ino;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_24DCC9968();
      uint64_t v44 = (uint64_t)i;
      sub_24DCCAD78();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)&v46.st_dev;
      __darwin_ino64_t v22 = v46.st_ino;
      if (!tv_nsec) {
        goto LABEL_14;
      }
LABEL_13:
      *(void *)&v46.st_dev = v21;
      v46.__darwin_ino64_t st_ino = v22;
      sub_24DCC9968();
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)&v46.st_dev;
      __darwin_ino64_t v22 = v46.st_ino;
      goto LABEL_14;
    }
LABEL_5:
    int v10 = 1;
  }
  while ((v35 & 1) == 0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = 0;
  __darwin_ino64_t v22 = 0;
LABEL_23:
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v32, v30);
  id v27 = v31;
  *uint64_t v31 = v21;
  v27[1] = v22;
  return result;
}

void sub_24D67ECB0(uint64_t a1, void *a2, void (*a3)(void, void *), uint64_t a4, uint64_t a5, char *a6, uint64_t a7, void *a8)
{
  uint64_t v84 = a5;
  unint64_t v85 = a8;
  unint64_t v82 = a6;
  char v90 = a3;
  uint64_t v91 = a4;
  id v89 = a2;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v75 = (char *)&v75 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_24DCC8A58();
  uint64_t v86 = *(void *)(v81 - 8);
  MEMORY[0x270FA5388](v81);
  uint64_t v77 = (char *)&v75 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B195C28);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v83 = (uint64_t)&v75 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24DCC8288();
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v78 = (char *)&v75 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24DCC82A8();
  uint64_t v79 = *(void *)(v17 - 8);
  uint64_t v80 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v76 = (char *)&v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_24DCC9078();
  uint64_t v87 = *(void *)(v19 - 8);
  uint64_t v88 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  __darwin_ino64_t v22 = (char *)&v75 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  int v24 = (char *)&v75 - v23;
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B195E40);
  MEMORY[0x270FA5388](v25);
  id v27 = (void **)((char *)&v75 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for VFSItem(0);
  swift_projectBox();
  sub_24D415FD0(a1, (uint64_t)v27, (uint64_t *)&unk_26B195E40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v28 = *v27;
    id v29 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v30 = v28;
    id v31 = v89;
    uint64_t v32 = sub_24DCC9068();
    os_log_type_t v33 = sub_24DCCA128();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v34 = swift_slowAlloc();
      int v35 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v34 = 138412546;
      id v36 = objc_msgSend(v31, sel_itemID);
      id v93 = v36;
      sub_24DCCA428();
      *int v35 = v36;

      *(_WORD *)(v34 + 12) = 2112;
      swift_getErrorValue();
      id v37 = sub_24DBA2828(v92);
      id v93 = v37;
      sub_24DCCA428();
      v35[1] = v37;

      _os_log_impl(&dword_24D3D0000, v32, v33, "Error updating item %@ error %@", (uint8_t *)v34, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v35, -1, -1);
      MEMORY[0x25332B030](v34, -1, -1);
    }
    else
    {
    }
    stat v46 = v90;
    uint64_t v48 = v87;
    uint64_t v47 = v88;

    (*(void (**)(char *, uint64_t))(v48 + 8))(v24, v47);
    id v49 = v28;
    v46(0, v28);
  }
  else
  {
    id v38 = v89;
    objc_release(*(void **)((char *)v27
                          + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B195C38) + 48)));
    if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v13 + 48))(v27, 1, v12) == 1)
    {
      id v39 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v40 = v38;
      unint64_t v41 = sub_24DCC9068();
      os_log_type_t v42 = sub_24DCCA128();
      if (os_log_type_enabled(v41, v42))
      {
        unint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v44 = (void *)swift_slowAlloc();
        *(_DWORD *)unint64_t v43 = 138412290;
        id v45 = [v40 itemID];
        id v93 = v45;
        sub_24DCCA428();
        *uint64_t v44 = v45;

        _os_log_impl(&dword_24D3D0000, v41, v42, "Error updating item %@ error <nil>", v43, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v44, -1, -1);
        MEMORY[0x25332B030](v43, -1, -1);
      }
      else
      {

        unint64_t v41 = v40;
      }
      id v58 = v90;

      (*(void (**)(char *, uint64_t))(v87 + 8))(v22, v88);
      sub_24DCC8168();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
      id v59 = v76;
      uint64_t v60 = v80;
      sub_24DCC8808();
      uint64_t v61 = (void *)sub_24DCC8128();
      (*(void (**)(char *, uint64_t))(v79 + 8))(v59, v60);
      v58(0, v61);
    }
    else
    {
      uint64_t v50 = v83;
      sub_24D3F0BA0((uint64_t)v27, v83, (uint64_t *)&unk_26B195C28);
      uint64_t v51 = swift_allocBox();
      sub_24D40B474(v50, v52, type metadata accessor for VFSItem);
      uint64_t v53 = v84;
      uint64_t v54 = v75;
      sub_24D5F07E8(v75);
      uint64_t v55 = v86;
      uint64_t v56 = v81;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v54, 1, v81) == 1)
      {
        sub_24D415F74((uint64_t)v54, (uint64_t *)&unk_26B199050);
        uint64_t v57 = v82;
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v77, v54, v56);
        uint64_t v62 = sub_24DCC8A18();
        uint64_t v63 = MEMORY[0x270FA5388](v62);
        uint64_t v57 = v82;
        *(&v75 - 4) = v82;
        *(&v75 - 3) = (char *)v38;
        MEMORY[0x270FA5388](v63);
        uint64_t v74 = v64;
        LOWORD(v93) = 256;
        sub_24DBAA730(4294967294, v65, v66, 0x200000, 0, 0, (uint64_t)&v93, (uint64_t)sub_24D6DC13C, (uint64_t)(&v75 - 4));
        if (BYTE1(v93))
        {
          __break(1u);
          return;
        }
        (*(void (**)(char *, uint64_t))(v86 + 8))(v77, v56);
      }
      uint64_t v67 = swift_allocObject();
      uint64_t v69 = (void (*)(void, void))v90;
      uint64_t v68 = v91;
      *(void *)(v67 + 16) = v90;
      *(void *)(v67 + 24) = v68;
      uint64_t v70 = (void *)swift_allocObject();
      v70[2] = v51;
      v70[3] = v53;
      v70[4] = v69;
      v70[5] = v68;
      uint64_t v71 = v85;
      v70[6] = v85;
      v70[7] = v57;
      uint64_t v72 = swift_allocObject();
      *(void *)(v72 + 16) = sub_24D6E4F8C;
      *(void *)(v72 + 24) = v67;
      swift_retain_n();
      swift_retain();
      swift_retain();
      id v73 = v71;
      swift_retain();
      sub_24D8272E0((uint64_t)"singleItemChange(_:changedFields:bounce:coordinate:request:completionHandler:)", 78, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6C91F0, v72, (uint64_t)sub_24D6DC104, (uint64_t)v70);
      swift_release();
      swift_release();
      swift_release();
      sub_24D415F74(v50, (uint64_t *)&unk_26B195C28);
      swift_release();
    }
  }
}

uint64_t sub_24D67F748(int a1, int a2, void *a3, uint64_t a4)
{
  uint64_t v37 = *MEMORY[0x263EF8340];
  uint64_t v8 = sub_24DCC9858();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&value - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x40000000) == 0)
  {
    return fpfs_make_fsevent();
  }
  if (objc_msgSend(a3, sel_isTrashed))
  {
    swift_beginAccess();
    uint64_t v13 = *(void *)(a4 + 16);
    int v14 = *(unsigned __int8 *)(a4 + 24);
    if (v14 != 2 || v13)
    {
      if (v14 != 2 || v13 != 1)
      {
        *(void *)&long long value = 0x2F73662F70665F5FLL;
        *((void *)&value + 1) = 0xE800000000000000;
        sub_24D3D4384(v13, v14);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        id v16 = (id)sub_24DCC97B8();
        swift_bridgeObjectRelease();
LABEL_17:
        sub_24DCC97E8();
        sub_24DCC9848();
        uint64_t v17 = sub_24DCC97F8();
        unint64_t v19 = v18;
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        if (v19 >> 60 == 15)
        {
          __break(1u);
          JUMPOUT(0x24D67FBDCLL);
        }

        switch(v19 >> 62)
        {
          case 1uLL:
            if (v17 >> 32 < (int)v17)
            {
              __break(1u);
LABEL_46:
              __break(1u);
LABEL_47:
              __break(1u);
            }
            else
            {
              sub_24D3F9C18(v17, v19);
              id v31 = (char *)sub_24DCC84D8();
              if (!v31) {
                goto LABEL_35;
              }
              uint64_t v32 = sub_24DCC84F8();
              if (!__OFSUB__((int)v17, v32))
              {
                v31 += (int)v17 - v32;
LABEL_35:
                uint64_t v33 = sub_24DCC84E8();
                if (v33 >= (v17 >> 32) - (int)v17) {
                  uint64_t v34 = (v17 >> 32) - (int)v17;
                }
                else {
                  uint64_t v34 = v33;
                }
                if (v31) {
                  size_t v35 = v34;
                }
                else {
                  size_t v35 = 0;
                }
                fsetxattr(a1, "com.apple.fileprovider.trash-put-back#PN", v31, v35, 0, 0);
                sub_24D416034(v17, v19);
                return sub_24D416034(v17, v19);
              }
            }
            __break(1u);
            return result;
          case 2uLL:
            uint64_t v22 = *(void *)(v17 + 16);
            uint64_t v23 = *(void *)(v17 + 24);
            swift_retain();
            swift_retain();
            int v24 = (char *)sub_24DCC84D8();
            if (!v24) {
              goto LABEL_23;
            }
            uint64_t v25 = sub_24DCC84F8();
            if (__OFSUB__(v22, v25)) {
              goto LABEL_47;
            }
            v24 += v22 - v25;
LABEL_23:
            BOOL v26 = __OFSUB__(v23, v22);
            uint64_t v27 = v23 - v22;
            if (v26) {
              goto LABEL_46;
            }
            uint64_t v28 = sub_24DCC84E8();
            if (v28 >= v27) {
              size_t v29 = v27;
            }
            else {
              size_t v29 = v28;
            }
            if (v24) {
              size_t v30 = v29;
            }
            else {
              size_t v30 = 0;
            }
            fsetxattr(a1, "com.apple.fileprovider.trash-put-back#PN", v24, v30, 0, 0);
            swift_release();
            swift_release();
            return sub_24D416034(v17, v19);
          case 3uLL:
            *(void *)((char *)&value + 6) = 0;
            *(void *)&long long value = 0;
            int v21 = a1;
            size_t v20 = 0;
            goto LABEL_43;
          default:
            *(void *)&long long value = v17;
            WORD4(value) = v19;
            BYTE10(value) = BYTE2(v19);
            BYTE11(value) = BYTE3(v19);
            BYTE12(value) = BYTE4(v19);
            size_t v20 = BYTE6(v19);
            BYTE13(value) = BYTE5(v19);
            int v21 = a1;
LABEL_43:
            fsetxattr(v21, "com.apple.fileprovider.trash-put-back#PN", &value, v20, 0, 0);
            return sub_24D416034(v17, v19);
        }
      }
      uint64_t v15 = (id *)MEMORY[0x263F053F8];
    }
    else
    {
      uint64_t v15 = (id *)MEMORY[0x263F053F0];
    }
    id v16 = *v15;
    goto LABEL_17;
  }

  return fremovexattr(a1, "com.apple.fileprovider.trash-put-back#PN", 0);
}

void sub_24D67FBEC(uint64_t a1, uint64_t a2, void (*a3)(void *, void), uint64_t a4, uint64_t a5, unint64_t a6)
{
  unint64_t v56 = a6;
  uint64_t v60 = a4;
  uint64_t v61 = a3;
  uint64_t v9 = sub_24DCC9078();
  uint64_t v57 = *(void *)(v9 - 8);
  uint64_t v58 = v9;
  MEMORY[0x270FA5388](v9);
  id v59 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for VFSItem(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  int v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v16 = (char *)&v51 - v15;
  uint64_t v17 = swift_projectBox();
  swift_beginAccess();
  sub_24D40B474(v17, (uint64_t)v16, type metadata accessor for VFSItem);
  type metadata accessor for FPFileTree();
  swift_dynamicCastClassUnconditional();
  Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  swift_retain();
  id v19 = objc_msgSend(Strong, sel_provider);

  if (v19)
  {
    swift_release();
    id v20 = objc_msgSend(v19, sel_identifier);

    int v21 = (void *)sub_24D9189C8((uint64_t)v16, a2, (uint64_t)v20, 0);
    sub_24D3FC974((uint64_t)v16, type metadata accessor for VFSItem);

    if (!v6)
    {
      if (v21)
      {
        uint64_t v22 = v21;
        v61(v21, 0);
      }
      else
      {
        swift_beginAccess();
        sub_24D40B474(v17, (uint64_t)v14, type metadata accessor for VFSItem);
        uint64_t v23 = (void *)MEMORY[0x25332B1A0](a5 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
        if (v23
          && (v24 = v23, id v25 = objc_msgSend(v23, sel_indexer),
                         v24,
                         v25))
        {
          unsigned int v26 = objc_msgSend(v25, sel_needsAuthentication);

          if (v26) {
            uint64_t v27 = 29;
          }
          else {
            uint64_t v27 = 21;
          }
        }
        else
        {
          uint64_t v27 = 21;
        }
        uint64_t v28 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
        size_t v29 = sub_24D4077D0((uint64_t)v14, v27, 0, v28);
        swift_bridgeObjectRelease();
        sub_24D3FC974((uint64_t)v14, type metadata accessor for VFSItem);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        size_t v30 = (void *)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        id v31 = objc_msgSend(v30, sel_stringByDeletingPathExtension);
        if (!v31)
        {
          sub_24DCC97E8();
          id v31 = (id)sub_24DCC97B8();
          swift_bridgeObjectRelease();
        }
        objc_msgSend(v29, sel_setFp_displayName_, v31);

        id v32 = (id)fpfs_current_or_default_log();
        uint64_t v33 = v59;
        sub_24DCC9088();
        uint64_t v34 = v29;
        size_t v35 = sub_24DCC9068();
        os_log_type_t v36 = sub_24DCCA118();
        int v37 = v36;
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v38 = swift_slowAlloc();
          os_log_t v53 = v35;
          uint64_t v39 = v38;
          uint64_t v40 = (void *)swift_slowAlloc();
          uint64_t v52 = v40;
          uint64_t v54 = swift_slowAlloc();
          uint64_t v63 = v54;
          *(_DWORD *)uint64_t v39 = 136315650;
          uint64_t v55 = v30;
          unint64_t v41 = sub_24D97C90C(v56);
          uint64_t v62 = sub_24D418FB4(v41, v42, &v63);
          LODWORD(v56) = v37;
          sub_24DCCA428();
          swift_bridgeObjectRelease();
          *(_WORD *)(v39 + 12) = 2112;
          uint64_t v62 = (uint64_t)v34;
          unint64_t v43 = v34;
          sub_24DCCA428();
          *uint64_t v40 = v34;

          *(_WORD *)(v39 + 22) = 2080;
          id v44 = objc_msgSend(v43, sel_displayName);
          uint64_t v45 = sub_24DCC97E8();
          unint64_t v47 = v46;

          uint64_t v62 = sub_24D418FB4(v45, v47, &v63);
          size_t v30 = v55;
          sub_24DCCA428();

          swift_bridgeObjectRelease();
          os_log_t v48 = v53;
          _os_log_impl(&dword_24D3D0000, v53, (os_log_type_t)v56, "Finished updating %s for item %@; d: %s",
            (uint8_t *)v39,
            0x20u);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
          id v49 = v52;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v49, -1, -1);
          uint64_t v50 = v54;
          swift_arrayDestroy();
          MEMORY[0x25332B030](v50, -1, -1);
          MEMORY[0x25332B030](v39, -1, -1);

          (*(void (**)(char *, uint64_t))(v57 + 8))(v59, v58);
        }
        else
        {

          (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v58);
        }
        uint64_t v22 = v34;
        v61(v34, 0);
      }
    }
  }
  else
  {
    sub_24DCCA978();
    __break(1u);
  }
}

uint64_t sub_24D6802AC(unint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v88 = a5;
  uint64_t v87 = a4;
  id v121 = a3;
  uint64_t v97 = sub_24DCC92F8();
  uint64_t v90 = *(void *)(v97 - 8);
  MEMORY[0x270FA5388](v97);
  uint64_t v95 = (char *)&v87 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_24DCC9398();
  uint64_t v89 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v94 = (char *)&v87 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9078();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  swift_bridgeObjectRetain_n();
  int v14 = sub_24DCC9068();
  os_log_type_t v15 = sub_24DCCA118();
  BOOL v16 = os_log_type_enabled(v14, v15);
  unint64_t v17 = a1 >> 62;
  unint64_t v109 = a1;
  unint64_t v108 = a2;
  if (v16)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    unint64_t v20 = a2;
    uint64_t v21 = v19;
    aBlock = (void *)v19;
    *(_DWORD *)uint64_t v18 = 136315394;
    unint64_t v22 = sub_24D97C90C(v20);
    uint64_t v124 = sub_24D418FB4(v22, v23, (uint64_t *)&aBlock);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2048;
    a1 = v109;
    if (v17)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_24DCCA9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v24 = *(void *)((v109 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v124 = v24;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v14, v15, "Request to modify fields %s for %ld items", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v21, -1, -1);
    MEMORY[0x25332B030](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    a2 = v108;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = MEMORY[0x263F8EE80];
  uint64_t v120 = v25;
  *(void *)(v25 + 16) = MEMORY[0x263F8EE80];
  unint64_t v100 = (uint64_t *)(v25 + 16);
  uint64_t v27 = swift_allocObject();
  uint64_t v119 = v27;
  *(void *)(v27 + 16) = v26;
  unint64_t v99 = (uint64_t *)(v27 + 16);
  uint64_t v28 = swift_allocObject();
  uint64_t v122 = v28;
  *(void *)(v28 + 16) = MEMORY[0x263F8EE78];
  uint64_t v98 = (void *)(v28 + 16);
  uint64_t v118 = dispatch_group_create();
  if (v17)
  {
LABEL_34:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_24DCCA9C8();
    if (v29) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v29 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29)
    {
LABEL_8:
      uint64_t v101 = 0;
      unint64_t v111 = &v123[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
      uint64_t v105 = OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started;
      uint64_t v104 = OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_initializationGroup;
      unint64_t v107 = a1 & 0xC000000000000001;
      uint64_t v103 = OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log;
      id v93 = &v127;
      uint64_t v92 = (void (**)(char *, uint64_t))(v90 + 8);
      uint64_t v102 = OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue;
      uint64_t v91 = (void (**)(char *, uint64_t))(v89 + 8);
      uint64_t v30 = 4;
      uint64_t v106 = v29;
      while (1)
      {
        if (v107) {
          id v36 = (id)MEMORY[0x253328820](v30 - 4, a1);
        }
        else {
          id v36 = *(id *)(a1 + 8 * v30);
        }
        int v37 = v36;
        if (__OFADD__(v30 - 4, 1))
        {
          __break(1u);
          goto LABEL_34;
        }
        uint64_t v114 = v30 - 3;
        uint64_t v115 = v30;
        uint64_t v38 = v118;
        dispatch_group_enter(v118);
        uint64_t v39 = swift_allocObject();
        id v40 = objc_msgSend(v37, sel_itemID);
        id v41 = objc_msgSend(v40, sel_identifier);

        *(void *)(v39 + 16) = v41;
        *(_WORD *)(v39 + 24) = 256;
        *(void *)(v39 + 32) = v121;
        unint64_t v42 = (void *)swift_allocObject();
        v42[2] = v38;
        v42[3] = v37;
        uint64_t v43 = v122;
        v42[4] = v39 | 0x4000000000000006;
        v42[5] = v43;
        uint64_t v44 = v119;
        v42[6] = v120;
        v42[7] = v44;
        uint64_t v45 = swift_allocObject();
        *(void *)(v45 + 16) = sub_24D6C91D0;
        *(void *)(v45 + 24) = v42;
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = a2;
        *(void *)(v46 + 24) = v37;
        unint64_t v110 = v39 | 0x4000000000000006;
        *(void *)(v46 + 32) = v39 | 0x4000000000000006;
        *(void *)(v46 + 40) = sub_24D6C91D0;
        unint64_t v47 = v123;
        *(void *)(v46 + 48) = v42;
        *(void *)(v46 + 56) = v47;
        uint64_t v116 = v46;
        *(_WORD *)(v46 + 64) = 257;
        uint64_t v48 = swift_allocObject();
        *(void *)(v48 + 16) = sub_24D6E4F8C;
        *(void *)(v48 + 24) = v45;
        uint64_t v113 = v48;
        id v49 = (void *)MEMORY[0x25332B1A0](v111);
        id v50 = v37;
        uint64_t v117 = v39;
        swift_retain_n();
        uint64_t v112 = v42;
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        uint64_t v51 = v118;
        id v52 = v50;
        swift_retain_n();
        id v53 = v121;
        id v54 = v47;
        uint64_t v55 = v51;
        id v35 = v52;
        if (!v49) {
          goto LABEL_22;
        }
        if (!objc_msgSend(v49, sel_unableToStartup))
        {

LABEL_22:
          id v60 = v35;
          if ((v123[v105] & 1) == 0)
          {
            uint64_t v61 = (void *)MEMORY[0x25332B1A0](v111);
            if (v61)
            {
              uint64_t v62 = v61;
              id v63 = objc_msgSend(v61, sel_serialQueue);

              uint64_t v129 = (uint64_t (*)())nullsub_1;
              char v130 = 0;
              aBlock = (void *)MEMORY[0x263EF8330];
              uint64_t v126 = 1107296256;
              int v127 = sub_24D3D2E94;
              uint64_t v128 = &block_descriptor_539;
              uint64_t v64 = _Block_copy(&aBlock);
              uint64_t v65 = v94;
              sub_24DCC9348();
              uint64_t v124 = MEMORY[0x263F8EE78];
              unint64_t v110 = sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
              sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
              uint64_t v66 = v95;
              uint64_t v67 = v97;
              sub_24DCCA5B8();
              MEMORY[0x2533282B0](0, v65, v66, v64);
              _Block_release(v64);

              (*v92)(v66, v67);
              (*v91)(v65, v96);
            }
          }
          id v31 = *(void **)&v123[v103];
          id v32 = *(void **)&v123[v102];
          uint64_t v33 = (void *)swift_allocObject();
          v33[2] = v54;
          v33[3] = sub_24D6C91F0;
          v33[4] = v113;
          v33[5] = sub_24D6C91EC;
          v33[6] = v116;
          id v34 = v54;
          swift_retain();
          swift_retain();
          sub_24D3E2DA8((uint64_t)"singleItemChange(_:changedFields:bounce:coordinate:request:completionHandler:)", 78, 2, v31, v32, (uint64_t)sub_24D3E5BC8, (uint64_t)v33);
          swift_release();
          swift_release();
          swift_release();
          a2 = v108;
          id v35 = v60;
          goto LABEL_10;
        }
        unint64_t v56 = (void *)MEMORY[0x25332B1A0](v111);
        if (!v56) {
          goto LABEL_26;
        }
        uint64_t v57 = v56;
        id v58 = objc_msgSend(v56, sel_indexer);

        if (!v58) {
          goto LABEL_26;
        }
        if ((objc_msgSend(v58, sel_needsAuthentication) & 1) == 0) {
          break;
        }
        type metadata accessor for NSFileProviderError(0);
        uint64_t v124 = -1000;
        sub_24D5F77E0(MEMORY[0x263F8EE78]);
        sub_24D3EA320(&qword_26B193F20, type metadata accessor for NSFileProviderError);
        sub_24DCC8808();

        id v59 = aBlock;
LABEL_29:
        uint64_t v70 = objc_sync_enter(v55);
        if (v70) {
          goto LABEL_38;
        }
        uint64_t v71 = v101;
        sub_24D681318(v59, v35, v110, v98, v100, v99, 0);
        uint64_t v72 = objc_sync_exit(v55);
        a2 = v108;
        uint64_t v101 = v71;
        if (v71 || v72)
        {
          MEMORY[0x270FA5388](v72);
          *(&v87 - 2) = (uint64_t)v55;
          sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57ED94, (uint64_t)(&v87 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
        }
        dispatch_group_leave(v55);

        swift_release();
        swift_release();

LABEL_10:
        swift_release();
        swift_release();
        swift_release();
        swift_release_n();

        swift_release_n();
        swift_release();
        swift_release();
        uint64_t v30 = v115 + 1;
        a1 = v109;
        if (v114 == v106) {
          goto LABEL_35;
        }
      }

LABEL_26:
      uint64_t v68 = (void *)MEMORY[0x25332B1A0](v111);
      if (!v68
        || (uint64_t v69 = v68,
            id v59 = objc_msgSend(v68, sel_startupError),
            v69,
            !v59))
      {
        id v59 = (id)FPDomainUnavailableError();
        if (!v59)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_release();

          __break(1u);
LABEL_38:
          MEMORY[0x270FA5388](v70);
          *(&v87 - 2) = (uint64_t)v55;
          sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57ED98, (uint64_t)(&v87 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
        }
      }
      goto LABEL_29;
    }
  }
LABEL_35:
  swift_bridgeObjectRelease();
  id v73 = v123;
  uint64_t v74 = (void *)swift_allocObject();
  id v75 = v121;
  v74[2] = v122;
  v74[3] = a1;
  uint64_t v76 = v88;
  v74[4] = v87;
  v74[5] = v76;
  uint64_t v77 = v120;
  v74[6] = v119;
  v74[7] = v77;
  v74[8] = v75;
  v74[9] = v73;
  v74[10] = a2;
  uint64_t v78 = v118;
  v74[11] = v118;
  uint64_t v129 = sub_24D6C9268;
  char v130 = v74;
  aBlock = (void *)MEMORY[0x263EF8330];
  uint64_t v126 = 1107296256;
  int v127 = sub_24D3D2E94;
  uint64_t v128 = &block_descriptor_549;
  uint64_t v79 = _Block_copy(&aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v80 = v75;
  id v81 = v73;
  unint64_t v82 = v78;
  uint64_t v83 = v94;
  sub_24DCC9348();
  uint64_t v124 = MEMORY[0x263F8EE78];
  sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
  sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
  uint64_t v84 = v95;
  uint64_t v85 = v97;
  sub_24DCCA5B8();
  sub_24DCCA178();
  _Block_release(v79);

  (*(void (**)(char *, uint64_t))(v90 + 8))(v84, v85);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v83, v96);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D681264(void *a1, id a2, NSObject *a3, void *a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  id v13 = (void *)(a6 + 16);
  int v14 = (uint64_t *)(a7 + 16);
  os_log_type_t v15 = (uint64_t *)(a8 + 16);
  id v16 = a2;
  id v17 = a4;
  sub_24D40B3C8(a5);
  id v18 = a1;
  sub_24DBA38C0(a3, a2, v17, a5, v13, v14, v15, a1);

  dispatch_group_leave(a3);
}

void sub_24D681318(void *a1, void *a2, unint64_t a3, void *a4, uint64_t *a5, uint64_t *a6, void *a7)
{
  uint64_t v57 = a4;
  uint64_t v13 = sub_24DCC9078();
  MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v56 = v14;
    _s3__C4CodeOMa_1(0);
    v58[0] = -1001;
    id v17 = a1;
    sub_24D3EA320((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
    if (sub_24DCC86A8())
    {
      id v18 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      id v19 = a2;
      sub_24D40B3C8(a3);
      id v20 = v19;
      sub_24D40B3C8(a3);
      uint64_t v21 = sub_24DCC9068();
      os_log_type_t v22 = sub_24DCCA118();
      int v23 = v22;
      uint64_t v55 = v21;
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v24 = swift_slowAlloc();
        uint64_t v54 = swift_slowAlloc();
        v58[0] = v54;
        *(_DWORD *)uint64_t v24 = 136315394;
        id v25 = objc_msgSend(v20, sel_itemID, v24 + 4);
        id v26 = objc_msgSend(v25, sel_identifier);

        uint64_t v27 = sub_24D3D79D4();
        int v53 = v23;
        unint64_t v29 = v28;

        uint64_t v59 = sub_24D418FB4(v27, v29, v58);
        sub_24DCCA428();

        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2080;
        uint64_t v52 = v24 + 14;
        sub_24D40B3C8(a3);
        unint64_t v30 = sub_24D3D865C(a3);
        id v31 = v20;
        unint64_t v33 = v32;
        sub_24D4170B0(a3);
        uint64_t v59 = sub_24D418FB4(v30, v33, v58);
        sub_24DCCA428();
        id v20 = v31;
        swift_bridgeObjectRelease();
        sub_24D4170B0(a3);
        sub_24D4170B0(a3);
        id v34 = v55;
        _os_log_impl(&dword_24D3D0000, v55, (os_log_type_t)v53, "Item %s collided for request %s", (uint8_t *)v24, 0x16u);
        uint64_t v35 = v54;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v35, -1, -1);
        MEMORY[0x25332B030](v24, -1, -1);
      }
      else
      {

        sub_24D4170B0(a3);
        sub_24D4170B0(a3);
      }
      (*(void (**)(char *, uint64_t))(v56 + 8))(v16, v13);
      uint64_t v48 = v57;
      swift_beginAccess();
      id v49 = v20;
      MEMORY[0x253327CA0]();
      if (*(void *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v48 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24DCC9C78();
      }
      sub_24DCC9CD8();
      sub_24DCC9C48();
    }
    else
    {
      id v40 = objc_msgSend(a2, sel_itemID);
      id v41 = objc_msgSend(v40, sel_identifier);

      swift_beginAccess();
      id v42 = a1;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v59 = *a5;
      *a5 = 0x8000000000000000;
      sub_24D714958((uint64_t)a1, v41, isUniquelyReferenced_nonNull_native);
      *a5 = v59;

      swift_bridgeObjectRelease();
      swift_endAccess();
      id v44 = objc_msgSend(a2, sel_itemID);
      id v45 = objc_msgSend(v44, sel_identifier);

      swift_beginAccess();
      if (a7)
      {
        id v46 = a7;
        char v47 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v59 = *a6;
        *a6 = 0x8000000000000000;
        sub_24D714938((uint64_t)v46, v45, v47);
        *a6 = v59;

        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v51 = (void *)sub_24DC7357C((uint64_t)v45);
      }
    }
    swift_endAccess();
  }
  else
  {
    id v36 = objc_msgSend(a2, sel_itemID);
    id v37 = objc_msgSend(v36, sel_identifier);

    swift_beginAccess();
    if (a7)
    {
      id v38 = a7;
      char v39 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v59 = *a6;
      *a6 = 0x8000000000000000;
      sub_24D714938((uint64_t)v38, v37, v39);
      *a6 = v59;

      swift_bridgeObjectRelease();
    }
    else
    {
      id v50 = (void *)sub_24DC7357C((uint64_t)v37);
    }
    swift_endAccess();
  }
}

uint64_t sub_24D681930(NSObject *a1, unint64_t a2, void (*a3)(uint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t *a6, void *a7, void *a8, uint64_t a9, void *a10)
{
  unint64_t v32 = a3;
  uint64_t v33 = a4;
  uint64_t v16 = sub_24DCC9078();
  uint64_t v31 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Class isa = a1[2].isa;
  if ((unint64_t)isa >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    if (v21) {
      return sub_24D681C30(0, a1, a2, v32, v33, a5, a6, a7, a8, a9, a10);
    }
  }
  else if (*(void *)(((unint64_t)isa & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return sub_24D681C30(0, a1, a2, v32, v33, a5, a6, a7, a8, a9, a10);
  }
  os_log_type_t v22 = (uint64_t *)(a5 + 16);
  int v23 = a6 + 2;
  id v24 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  swift_bridgeObjectRetain_n();
  id v25 = sub_24DCC9068();
  os_log_type_t v26 = sub_24DCCA118();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 134217984;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_24DCCA9C8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v28 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v34 = v28;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v25, v26, "Finished bulkItemChanges of %ld items", v27, 0xCu);
    MEMORY[0x25332B030](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v16);
  swift_beginAccess();
  uint64_t v29 = *v22;
  swift_beginAccess();
  uint64_t v30 = *v23;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v32(v29, v30);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D681C30(uint64_t a1, NSObject *a2, unint64_t a3, void (*a4)(uint64_t, uint64_t), uint64_t a5, uint64_t a6, uint64_t *a7, void *a8, void *a9, uint64_t a10, void *a11)
{
  uint64_t v55 = a8;
  id v58 = a4;
  uint64_t v59 = a6;
  uint64_t v16 = sub_24DCC9078();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  id v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = a2 + 2;
  swift_beginAccess();
  uint64_t v56 = a2;
  unint64_t isa = (unint64_t)a2[2].isa;
  if (isa >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = sub_24DCCA9C8();
    swift_bridgeObjectRelease();
    if (v22 > a1) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v22 = *(void *)((isa & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v22 > a1)
    {
LABEL_3:
      swift_beginAccess();
      Class v23 = v20->isa;
      BOOL v24 = ((unint64_t)v20->isa & 0xC000000000000001) == 0;
      uint64_t v57 = a5;
      unint64_t v54 = a3;
      if (!v24)
      {
        id v49 = (id)MEMORY[0x253328820](a1);
LABEL_8:
        id v25 = v49;
        uint64_t v52 = a10;
        id v53 = a11;
        swift_endAccess();
        uint64_t v26 = swift_allocObject();
        id v27 = objc_msgSend(v25, sel_itemID);
        id v28 = objc_msgSend(v27, sel_identifier);

        *(void *)(v26 + 16) = v28;
        *(_WORD *)(v26 + 24) = 256;
        uint64_t v29 = v55;
        *(void *)(v26 + 32) = v55;
        uint64_t v51 = v26 | 0x4000000000000006;
        uint64_t v30 = (void *)swift_allocObject();
        v30[2] = a11;
        v30[3] = a7;
        uint64_t v31 = v59;
        v30[4] = v25;
        v30[5] = v31;
        unint64_t v32 = v54;
        v30[6] = v56;
        v30[7] = v32;
        uint64_t v33 = v57;
        v30[8] = v58;
        v30[9] = v33;
        v30[10] = v29;
        v30[11] = a9;
        uint64_t v34 = v52;
        v30[12] = v52;
        v30[13] = a1;
        uint64_t v35 = swift_allocObject();
        *(void *)(v35 + 16) = sub_24D6DAA64;
        *(void *)(v35 + 24) = v30;
        uint64_t v36 = swift_allocObject();
        *(void *)(v36 + 16) = v34;
        *(void *)(v36 + 24) = v25;
        *(void *)(v36 + 32) = v51;
        *(void *)(v36 + 40) = sub_24D6DAA64;
        *(void *)(v36 + 48) = v30;
        *(void *)(v36 + 56) = a9;
        *(_WORD *)(v36 + 64) = 257;
        id v37 = v29;
        id v38 = v25;
        id v39 = a9;
        swift_retain_n();
        id v40 = v37;
        id v41 = v38;
        id v42 = v39;
        id v43 = v53;
        swift_retain();
        swift_retain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_retain();
        sub_24D622700((uint64_t)"singleItemChange(_:changedFields:bounce:coordinate:request:completionHandler:)", 78, 2, (void (*)(void *, id))sub_24D6E4F8C, v35, (uint64_t)sub_24D6C91EC, v36);

        swift_release();
        swift_release();
        swift_release();
        return swift_release();
      }
      if (a1 < 0)
      {
        __break(1u);
      }
      else if (*(void *)(((unint64_t)v23 & 0xFFFFFFFFFFFFFF8) + 0x10) > (unint64_t)a1)
      {
        id v49 = *((id *)v23 + a1 + 4);
        goto LABEL_8;
      }
      __break(1u);
LABEL_19:
      swift_bridgeObjectRetain();
      uint64_t v46 = sub_24DCCA9C8();
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
  }
  a1 = v59 + 16;
  a7 += 2;
  id v45 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  swift_bridgeObjectRetain_n();
  id v20 = sub_24DCC9068();
  LOBYTE(v22) = sub_24DCCA118();
  if (!os_log_type_enabled(v20, (os_log_type_t)v22))
  {

    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  uint64_t v57 = a5;
  unint64_t isa = swift_slowAlloc();
  *(_DWORD *)unint64_t isa = 134217984;
  if (a3 >> 62) {
    goto LABEL_19;
  }
  uint64_t v46 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_13:
  swift_bridgeObjectRelease();
  uint64_t v60 = v46;
  sub_24DCCA428();
  swift_bridgeObjectRelease();
  _os_log_impl(&dword_24D3D0000, v20, (os_log_type_t)v22, "Finished bulkItemChanges of %ld items", (uint8_t *)isa, 0xCu);
  MEMORY[0x25332B030](isa, -1, -1);

LABEL_15:
  (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
  swift_beginAccess();
  uint64_t v47 = *(void *)a1;
  swift_beginAccess();
  uint64_t v48 = *a7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v58(v47, v48);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D682188(void *a1, id a2, void *a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  id v20 = (uint64_t *)(a4 + 16);
  uint64_t v21 = (uint64_t *)(a6 + 16);
  id v22 = a2;
  id v23 = a1;
  sub_24DBA3A20(a3, a2, v20, a5, v21, a1);
  uint64_t result = a14 + 1;
  if (__OFADD__(a14, 1))
  {
    __break(1u);
  }
  else
  {
    return sub_24D681C30(result, a7, a8, a9, a10, a6, a4, a11, a12, a13, a3);
  }
  return result;
}

uint64_t sub_24D682280(void *a1, uint64_t *a2, id a3, uint64_t *a4, void *a5)
{
  if (a1)
  {
    id v10 = a1;
    id v11 = objc_msgSend(a3, sel_itemID);
    id v12 = objc_msgSend(v11, sel_identifier);

    swift_beginAccess();
    id v13 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *a2;
    *a2 = 0x8000000000000000;
    sub_24D714958((uint64_t)a1, v12, isUniquelyReferenced_nonNull_native);
    *a2 = v21;

    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  id v15 = objc_msgSend(a3, sel_itemID);
  id v16 = objc_msgSend(v15, sel_identifier);

  swift_beginAccess();
  if (a5)
  {
    id v17 = a5;
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *a4;
    *a4 = 0x8000000000000000;
    sub_24D714938((uint64_t)v17, v16, v18);
    *a4 = v22;

    swift_bridgeObjectRelease();
  }
  else
  {
    id v19 = (void *)sub_24DC7357C((uint64_t)v16);
  }
  return swift_endAccess();
}

void sub_24D682540(void *a1, uint64_t a2, uint64_t a3)
{
  unint64_t v5 = a1;
  if (a1)
  {
    type metadata accessor for NSFileProviderItemIdentifier(0);
    sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
    sub_24D3EA320((unint64_t *)&unk_26B199E40, type metadata accessor for NSFileProviderItemIdentifier);
    unint64_t v5 = (void *)sub_24DCC9558();
  }
  if (a2)
  {
    type metadata accessor for NSFileProviderItemIdentifier(0);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    sub_24D3EA320((unint64_t *)&unk_26B199E40, type metadata accessor for NSFileProviderItemIdentifier);
    uint64_t v6 = sub_24DCC9558();
  }
  else
  {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

void sub_24D68269C(void (*a1)(uint64_t, id), void *a2, void (*a3)(uint64_t, id), void (*a4)(uint64_t, id))
{
  unint64_t v5 = v4;
  id v63 = a1;
  uint64_t v64 = a2;
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v58 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_24DCC9398();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x270FA5388](v59);
  uint64_t v56 = (char *)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24DCC8A58();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  char v18 = (char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = &v5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v19 = (void *)MEMORY[0x25332B1A0]();
  if (v19)
  {
    uint64_t v55 = v14;
    uint64_t v51 = v9;
    uint64_t v52 = v8;
    id v61 = v19;
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = a3;
    *(void *)(v20 + 16) = a3;
    *(void *)(v20 + 24) = a4;
    uint64_t v60 = v20;
    (*(void (**)(char *, void (*)(uint64_t, id), uint64_t))(v16 + 16))((char *)&v51 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v63, v15);
    unint64_t v22 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    id v23 = v5;
    id v63 = (void (*)(uint64_t, id))a4;
    unint64_t v24 = (v17 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v27 = swift_allocObject();
    uint64_t v53 = v16;
    uint64_t v54 = v15;
    (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v27 + v22, v18, v15);
    id v28 = (void (**)(uint64_t, id))(v27 + v24);
    uint64_t v29 = v63;
    uint64_t v30 = v21;
    *id v28 = v21;
    v28[1] = v29;
    *(void *)(v27 + v25) = v23;
    uint64_t v31 = v64;
    *(void *)(v27 + v26) = v64;
    unint64_t v32 = v62;
    uint64_t v33 = (void *)MEMORY[0x25332B1A0](v62);
    swift_retain_n();
    uint64_t v34 = v23;
    id v35 = v31;
    if (v33)
    {
      if (objc_msgSend(v33, sel_unableToStartup))
      {
        id v36 = sub_24D621D5C();
        uint64_t v37 = (uint64_t)v55;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v53 + 56))(v55, 1, 1, v54);
        v30(v37, v36);
        sub_24D415F74(v37, (uint64_t *)&unk_26B199050);

        swift_release();
        swift_release();
        swift_release();

        return;
      }
    }
    if ((v34[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
    {
      id v39 = (void *)MEMORY[0x25332B1A0](v32);
      if (v39)
      {
        id v40 = v39;
        id v41 = objc_msgSend(v39, sel_serialQueue);

        aBlock[4] = nullsub_1;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24D3D2E94;
        aBlock[3] = &block_descriptor_561;
        id v42 = _Block_copy(aBlock);
        uint64_t v64 = (void *)v27;
        id v43 = v56;
        sub_24DCC9348();
        uint64_t v65 = MEMORY[0x263F8EE78];
        sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
        sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
        id v44 = v58;
        uint64_t v45 = v52;
        sub_24DCCA5B8();
        MEMORY[0x2533282B0](0, v43, v44, v42);
        _Block_release(v42);

        (*(void (**)(char *, uint64_t))(v51 + 8))(v44, v45);
        uint64_t v46 = v43;
        uint64_t v27 = (uint64_t)v64;
        (*(void (**)(char *, uint64_t))(v57 + 8))(v46, v59);
      }
    }
    uint64_t v47 = *(void **)&v34[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
    uint64_t v48 = *(void **)&v34[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    id v49 = (void *)swift_allocObject();
    v49[2] = v34;
    v49[3] = sub_24D6E5ED4;
    v49[4] = v60;
    v49[5] = sub_24D6C92A4;
    v49[6] = v27;
    uint64_t v50 = v34;
    swift_retain();
    swift_retain();
    sub_24D3E2DA8((uint64_t)"trashItem(at:request:completionHandler:)", 40, 2, v47, v48, (uint64_t)sub_24D3E5BC8, (uint64_t)v49);
    swift_release();

    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    id v38 = sub_24D621D5C();
    a3((uint64_t)v14, v38);

    sub_24D415F74((uint64_t)v14, (uint64_t *)&unk_26B199050);
  }
}

uint64_t sub_24D682D50(uint64_t a1, void (*a2)(char *, uint64_t))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC8A58();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  a2(v6, a1);
  return sub_24D415F74((uint64_t)v6, (uint64_t *)&unk_26B199050);
}

uint64_t sub_24D682E34(uint64_t a1, uint64_t a2, void (*a3)(char *, id), void (*a4)(char *, id), void *a5, void *a6)
{
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v50 = a4;
  uint64_t v52 = a3;
  uint64_t v51 = sub_24DCC8A58();
  uint64_t v8 = *(void *)(v51 - 8);
  MEMORY[0x270FA5388](v51);
  uint64_t v45 = v9;
  id v49 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for VFSItem(0);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v41 - v21;
  uint64_t v48 = a2;
  sub_24D40BD70(0, 2, 3, (uint64_t)v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_24D415F74((uint64_t)v15, (uint64_t *)&unk_26B199BC0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v12, 1, 1, v51);
    id v23 = (void *)sub_24DCC8948();
    id v24 = (id)FPItemNotFoundErrorAtURL();

    v52(v12, v24);
    return sub_24D415F74((uint64_t)v12, (uint64_t *)&unk_26B199050);
  }
  else
  {
    id v41 = type metadata accessor for VFSItem;
    id v43 = v22;
    sub_24D40BC84((uint64_t)v15, (uint64_t)v22, type metadata accessor for VFSItem);
    uint64_t v26 = a1;
    uint64_t v44 = *(void *)(a1 + 16);
    uint64_t v27 = swift_allocObject();
    uint64_t v42 = v27;
    id v28 = v50;
    *(void *)(v27 + 16) = v52;
    *(void *)(v27 + 24) = v28;
    sub_24D40B474((uint64_t)v22, (uint64_t)v20, type metadata accessor for VFSItem);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v49, v48, v51);
    unint64_t v29 = (*(unsigned __int8 *)(v17 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    unint64_t v30 = (v18 + v29 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (*(unsigned __int8 *)(v8 + 80) + v31 + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v33 = (v45 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v26;
    sub_24D40BC84((uint64_t)v20, v34 + v29, v41);
    id v35 = v46;
    *(void *)(v34 + v30) = v46;
    id v36 = (void (**)(char *, id))(v34 + v31);
    uint64_t v37 = v51;
    *id v36 = v52;
    v36[1] = v28;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v34 + v32, v49, v37);
    id v38 = v47;
    *(void *)(v34 + v33) = v47;
    swift_retain_n();
    swift_retain();
    id v39 = v35;
    id v40 = v38;
    sub_24D3FBC7C((uint64_t)"trashItem(at:request:completionHandler:)", 40, 2, sub_24D6E5ED4, v42, (uint64_t)sub_24D6DA8C8, v34);
    swift_release();
    swift_release();
    return sub_24D3FC974((uint64_t)v43, type metadata accessor for VFSItem);
  }
}

uint64_t sub_24D6832CC(uint64_t a1, uint64_t a2, char *a3, void (*a4)(uint64_t, id), uint64_t a5, int *a6, void *a7)
{
  uint64_t v59 = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v12 - 8);
  id v58 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for VFSItem(0);
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_24DCC9078();
  uint64_t v57 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = a3;
  uint64_t v20 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  id v61 = a4;
  if (v20
    && (uint64_t v21 = v20, v22 = objc_msgSend(v20, sel_indexer), v21, v22))
  {
    unsigned int v23 = objc_msgSend(v22, sel_needsAuthentication);

    if (v23) {
      uint64_t v24 = 30;
    }
    else {
      uint64_t v24 = 22;
    }
  }
  else
  {
    uint64_t v24 = 22;
  }
  unint64_t v25 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
  uint64_t v26 = sub_24D4077D0(a2, v24, 0, v25);
  swift_bridgeObjectRelease();
  if ((objc_msgSend(v26, sel_capabilities) & 0x10) != 0)
  {
    id v36 = objc_msgSend(v26, sel_strippedCopy);
    objc_msgSend(v36, sel_setTrashed_, 1);
    objc_msgSend(v36, sel_setParentItemIdentifier_, *MEMORY[0x263F053F8]);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B18F620);
    uint64_t v38 = swift_allocBox();
    uint64_t v40 = v39;
    uint64_t v41 = *(int *)(v37 + 48);
    uint64_t v42 = sub_24DCC8A58();
    (*(void (**)(uint64_t, int *, uint64_t))(*(void *)(v42 - 8) + 16))(v40, v59, v42);
    id v43 = a7;
    *(void *)(v40 + v41) = a7;
    uint64_t v59 = v26;
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v61;
    *(void *)(v44 + 24) = a5;
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = sub_24D6DA9E0;
    *(void *)(v45 + 24) = v44;
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = 1073741828;
    *(void *)(v46 + 24) = v36;
    *(void *)(v46 + 32) = v38 | 0x5000000000000000;
    *(void *)(v46 + 40) = sub_24D6DA9E0;
    uint64_t v47 = v60;
    *(void *)(v46 + 48) = v44;
    *(void *)(v46 + 56) = v47;
    *(_WORD *)(v46 + 64) = 256;
    swift_retain_n();
    id v48 = v43;
    swift_retain();
    id v49 = v36;
    swift_retain();
    id v50 = v47;
    sub_24D622700((uint64_t)"singleItemChange(_:changedFields:bounce:coordinate:request:completionHandler:)", 78, 2, (void (*)(void *, id))sub_24D6E4F8C, v45, (uint64_t)sub_24D6C91EC, v46);
    swift_release();
    swift_release();

    swift_release();
    return swift_release();
  }
  else
  {
    uint64_t v60 = (void *)v17;
    id v27 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    sub_24D40B474(a2, (uint64_t)v16, type metadata accessor for VFSItem);
    id v28 = sub_24DCC9068();
    os_log_type_t v29 = sub_24DCCA128();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v59 = v26;
      unint64_t v31 = (uint8_t *)v30;
      uint64_t v32 = swift_slowAlloc();
      uint64_t v63 = v32;
      uint64_t v56 = a5;
      *(_DWORD *)unint64_t v31 = 136315138;
      uint64_t v33 = sub_24D5F713C();
      uint64_t v62 = sub_24D418FB4(v33, v34, &v63);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D3FC974((uint64_t)v16, type metadata accessor for VFSItem);
      _os_log_impl(&dword_24D3D0000, v28, v29, "%s doesn't support trashing..", v31, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v32, -1, -1);
      id v35 = v31;
      uint64_t v26 = v59;
      MEMORY[0x25332B030](v35, -1, -1);
    }
    else
    {
      sub_24D3FC974((uint64_t)v16, type metadata accessor for VFSItem);
    }

    (*(void (**)(char *, void *))(v57 + 8))(v19, v60);
    uint64_t v52 = v61;
    uint64_t v53 = (uint64_t)v58;
    uint64_t v54 = sub_24DCC8A58();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 1, 1, v54);
    id v55 = (id)FPNotSupportedError();
    v52(v53, v55);

    return sub_24D415F74(v53, (uint64_t *)&unk_26B199050);
  }
}

uint64_t sub_24D6838F0(void *a1, uint64_t a2, void (*a3)(char *, void), uint64_t a4)
{
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v27 - v13;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v27 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v27 - v19;
  if (a1)
  {
    uint64_t v27 = a4;
    id v28 = a3;
    id v21 = a1;
    id v22 = objc_msgSend(v21, sel_fileURL);
    if (v22)
    {
      unsigned int v23 = v22;
      sub_24DCC89E8();

      uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
      v24(v18, v12, v8);
      unint64_t v25 = *(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56);
      v25(v18, 0, 1, v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v18, 1, v8) != 1)
      {
        v24(v14, v18, v8);
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v20, v14, v8);
        v25(v20, 0, 1, v8);
        v28(v20, 0);

        sub_24D415F74((uint64_t)v20, (uint64_t *)&unk_26B199050);
        return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v18, 1, 1, v8);
    }
    sub_24D415F74((uint64_t)v18, (uint64_t *)&unk_26B199050);
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))((char *)&v27 - v19, 1, 1, v8);
    a3(v20, a2);
    return sub_24D415F74((uint64_t)v20, (uint64_t *)&unk_26B199050);
  }
  return result;
}

uint64_t sub_24D683C5C(void *a1, uint64_t a2, uint64_t a3, void *a4, const void *a5, void (*a6)(char *, id, id, void *))
{
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = _Block_copy(a5);
  sub_24DCC89E8();
  _Block_copy(v14);
  id v15 = a4;
  id v16 = a1;
  a6(v13, v15, v16, v14);
  _Block_release(v14);
  _Block_release(v14);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_24D683D98(uint64_t a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v42 = *(void *)(v8 - 8);
  uint64_t v43 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v40 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_24DCC9398();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v38 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC8A58();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a1, v11);
  unint64_t v16 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v17 = (v13 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v18 + v16, v14, v11);
  uint64_t v19 = (void (**)(void))(v18 + v17);
  *uint64_t v19 = a2;
  v19[1] = a3;
  uint64_t v20 = &v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v21 = (void *)MEMORY[0x25332B1A0](&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  if (v21)
  {
    if (objc_msgSend(v21, sel_unableToStartup))
    {
      id v22 = sub_24D621D5C();
      a2();

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    unsigned int v23 = (void *)MEMORY[0x25332B1A0](v20);
    if (v23)
    {
      uint64_t v24 = v23;
      id v37 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_575_0;
      id v36 = _Block_copy(aBlock);
      unint64_t v25 = v38;
      sub_24DCC9348();
      uint64_t v44 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v26 = v40;
      uint64_t v27 = v43;
      sub_24DCCA5B8();
      os_log_type_t v29 = v36;
      id v28 = v37;
      MEMORY[0x2533282B0](0, v25, v26, v36);
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v26, v27);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v41);
    }
  }
  uint64_t v30 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  unint64_t v31 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v4;
  v32[3] = sub_24D6E4F84;
  v32[4] = v15;
  v32[5] = sub_24D6C92B0;
  v32[6] = v18;
  uint64_t v33 = v4;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"resolveConflict(at:completionHandler:)", 38, 2, v30, v31, (uint64_t)sub_24D3E5BC8, (uint64_t)v32);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D6842DC(uint64_t a1, uint64_t a2, void (*a3)(id), void (*a4)(id))
{
  uint64_t v27 = a3;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for VFSItem(0);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v24 - v14;
  sub_24D40BD70(1, 2, 0, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_24D415F74((uint64_t)v8, (uint64_t *)&unk_26B199BC0);
    unint64_t v16 = (void *)sub_24DCC8948();
    id v17 = (id)FPItemNotFoundErrorAtURL();

    v27(v17);
  }
  else
  {
    unint64_t v25 = type metadata accessor for VFSItem;
    sub_24D40BC84((uint64_t)v8, (uint64_t)v15, type metadata accessor for VFSItem);
    uint64_t v26 = *(void *)(a1 + 16);
    uint64_t v18 = swift_allocObject();
    uint64_t v19 = v27;
    *(void *)(v18 + 16) = v27;
    *(void *)(v18 + 24) = a4;
    sub_24D40B474((uint64_t)v15, (uint64_t)v13, type metadata accessor for VFSItem);
    unint64_t v20 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    unint64_t v21 = (v11 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v22 = swift_allocObject();
    sub_24D40BC84((uint64_t)v13, v22 + v20, v25);
    *(void *)(v22 + v21) = a1;
    unsigned int v23 = (void (**)(id))(v22 + ((v21 + 15) & 0xFFFFFFFFFFFFFFF8));
    *unsigned int v23 = v19;
    v23[1] = a4;
    swift_retain_n();
    swift_retain();
    sub_24D8272E0((uint64_t)"resolveConflict(at:completionHandler:)", 38, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6E4F84, v18, (uint64_t)sub_24D6DA440, v22);
    swift_release();
    swift_release();
    sub_24D3FC974((uint64_t)v15, type metadata accessor for VFSItem);
  }
}

uint64_t sub_24D684608(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v44 = *(void *)(v10 - 8);
  uint64_t v45 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v43 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for VFSItem(0);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24DCC9078();
  uint64_t v41 = *(void *)(v15 - 8);
  uint64_t v42 = v15;
  MEMORY[0x270FA5388](v15);
  id v17 = (char *)&v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v18 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D40B474(a1, (uint64_t)v14, type metadata accessor for VFSItem);
  uint64_t v19 = sub_24DCC9068();
  os_log_type_t v20 = sub_24DCCA108();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v39 = a4;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v40 = a3;
    uint64_t v22 = (uint8_t *)v21;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v36 = a2;
    uint64_t v24 = v23;
    uint64_t v47 = v23;
    uint64_t v37 = a1;
    uint64_t v38 = v4;
    *(_DWORD *)uint64_t v22 = 136315138;
    uint64_t v25 = sub_24D3D4384(*(void *)v14, v14[8]);
    uint64_t v46 = sub_24D418FB4(v25, v26, &v47);
    a1 = v37;
    uint64_t v5 = v38;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D3FC974((uint64_t)v14, type metadata accessor for VFSItem);
    _os_log_impl(&dword_24D3D0000, v19, v20, "⚔️  Scheduling conflict resolution for item %s..", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v24, -1, -1);
    uint64_t v27 = v22;
    a3 = v40;
    MEMORY[0x25332B030](v27, -1, -1);
  }
  else
  {
    sub_24D3FC974((uint64_t)v14, type metadata accessor for VFSItem);
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v42);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C630);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_24DCCECE0;
  uint64_t v29 = *(void *)a1;
  uint64_t v30 = *(unsigned __int8 *)(a1 + 8);
  unint64_t v31 = v43;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v33 = v32;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v44 + 8))(v31, v45);
  double v35 = v33 * 1000000000.0;
  if ((~COERCE__INT64(v33 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v35 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v35 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  *(void *)(v28 + 32) = v29;
  *(void *)(v28 + 40) = v30;
  *(_OWORD *)(v28 + 48) = xmmword_24DCD6E90;
  *(void *)(v28 + 64) = (uint64_t)v35;
  *(_OWORD *)(v28 + 72) = 0u;
  *(_OWORD *)(v28 + 88) = 0u;
  *(_OWORD *)(v28 + 104) = 0u;
  *(_OWORD *)(v28 + 120) = 0u;
  *(_OWORD *)(v28 + 131) = 0u;
  *(unsigned char *)(v28 + 147) = 9;
  sub_24D82BA18(MEMORY[0x263F8EE78], v28);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v5) {
    return a3(0);
  }
  return result;
}

uint64_t sub_24D684A74(void *a1, uint64_t a2, uint64_t a3, const void *a4, void (*a5)(char *, id, void *))
{
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = _Block_copy(a4);
  sub_24DCC89E8();
  _Block_copy(v12);
  id v13 = a1;
  a5(v11, v13, v12);
  _Block_release(v12);
  _Block_release(v12);

  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

id sub_24D684B9C(void *a1, uint64_t a2, char *a3)
{
  v174[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192308);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v148 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v167 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v166 = sub_24DCC9078();
  uint64_t v11 = *(void *)(v166 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v166);
  v165 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v163 = (uint64_t *)((char *)&v148 - v15);
  MEMORY[0x270FA5388](v14);
  v162 = (char *)&v148 - v16;
  uint64_t v17 = sub_24DCC8A58();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v164 = (char *)&v148 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v170 = (uint64_t)&v148 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  v168 = (char *)&v148 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v160 = (char *)&v148 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v159 = (char *)&v148 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  long long v171 = (char *)&v148 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  double v33 = (char *)&v148 - v32;
  MEMORY[0x270FA5388](v31);
  double v35 = (char *)&v148 - v34;
  uint64_t v36 = (void *)MEMORY[0x25332B1A0](v3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  if (!v36) {
    return 0;
  }
  uint64_t v153 = v11;
  v169 = a3;
  uint64_t v37 = v36;
  id v38 = objc_msgSend(v36, sel_volume);
  uint64_t v172 = v17;
  id v39 = v38;
  id v40 = objc_msgSend(v38, sel_purgatoryDirectory);

  uint64_t v41 = v172;
  sub_24DCC89E8();

  sub_24DCC8988();
  uint64_t v156 = v18;
  uint64_t v42 = v18 + 8;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v18 + 8);
  v43(v33, v41);
  id v44 = objc_msgSend(a1, sel_itemVersion);
  if (!v44)
  {
    v43(v35, v41);

    return 0;
  }
  uint64_t v45 = v44;
  uint64_t v161 = v43;
  uint64_t v157 = v42;
  id v154 = v37;
  uint64_t v158 = v35;
  uint64_t v152 = v8;
  uint64_t v46 = self;
  id v155 = a1;
  id v47 = objc_msgSend(a1, sel_itemID);
  sub_24DCC88C8();
  id v48 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  id v49 = objc_msgSend(v46, sel_versionFaultName_identifier_ext_, v45, v47, v48);

  uint64_t v50 = sub_24DCC97E8();
  uint64_t v52 = v51;

  swift_bridgeObjectRetain();
  unint64_t v53 = swift_bridgeObjectRetain();
  unint64_t v54 = sub_24D6B7744(v53, v50, v52);
  v151 = 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v55 = v45;
  if (v54 >> 62) {
    uint64_t v56 = sub_24DCCA9C8();
  }
  else {
    uint64_t v56 = *(void *)((v54 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v57 = v158;
  id v58 = v161;
  swift_bridgeObjectRelease();
  if (v56)
  {
    v58(v57, v172);
    swift_bridgeObjectRelease();

    return 0;
  }
  sub_24DCC8988();
  swift_bridgeObjectRelease();
  uint64_t v61 = sub_24DCC8948();
  v58(v33, v172);
  uint64_t v150 = (void *)v61;
  id result = (id)_CFURLCopyPromiseURLOfLogicalURL();
  if (result)
  {
    uint64_t v62 = result;
    uint64_t v63 = v171;
    sub_24DCC89E8();

    uint64_t v64 = self;
    id v65 = objc_msgSend(v64, sel_defaultManager);
    uint64_t v66 = v57;
    sub_24DCC8A18();
    uint64_t v67 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    v174[0] = 0;
    unsigned int v68 = objc_msgSend(v65, sel_createDirectoryAtPath_withIntermediateDirectories_attributes_error_, v67, 1, 0, v174);

    id v149 = v55;
    if (v68)
    {
      id v69 = v174[0];
      id v70 = objc_msgSend(v64, sel_defaultManager);
      sub_24DCC8A18();
      uint64_t v71 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      unsigned __int8 v72 = objc_msgSend(v70, sel_fileExistsAtPath_, v71);

      id v73 = v63;
      if (v72)
      {
        uint64_t v74 = (uint64_t)v152;
        uint64_t v75 = v172;
        uint64_t v76 = v156;
        uint64_t v77 = (uint64_t)v168;
        uint64_t v78 = &selRef_createIndexerWithExtension_enabled_error_;
        uint64_t v79 = v151;
        id v80 = v73;
      }
      else
      {
        id v98 = objc_msgSend(v64, sel_defaultManager);
        sub_24DCC8A18();
        unint64_t v99 = (void *)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        unsigned int v100 = objc_msgSend(v98, sel_createFileAtPath_contents_attributes_, v99, 0, 0);

        id v101 = (id)fpfs_current_or_default_log();
        uint64_t v102 = (void (**)(char *, char *, uint64_t))(v156 + 16);
        if (v100)
        {
          uint64_t v103 = v162;
          sub_24DCC9088();
          uint64_t v104 = v159;
          uint64_t v105 = v172;
          (*v102)(v159, v73, v172);
          uint64_t v106 = sub_24DCC9068();
          os_log_type_t v107 = sub_24DCCA108();
          id v80 = v73;
          if (os_log_type_enabled(v106, v107))
          {
            unint64_t v108 = v73;
            unint64_t v109 = (uint8_t *)swift_slowAlloc();
            unint64_t v110 = v104;
            unint64_t v111 = (void *)swift_slowAlloc();
            v174[0] = v111;
            *(_DWORD *)unint64_t v109 = 136315138;
            sub_24D3EA320((unint64_t *)&qword_26B18F640, MEMORY[0x263F06EA8]);
            uint64_t v112 = sub_24DCCAD78();
            uint64_t v173 = sub_24D418FB4(v112, v113, (uint64_t *)v174);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            v161(v110, v105);
            _os_log_impl(&dword_24D3D0000, v106, v107, "Created promise URL for thumbnail at URL: %s", v109, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25332B030](v111, -1, -1);
            uint64_t v114 = v109;
            id v80 = v108;
            MEMORY[0x25332B030](v114, -1, -1);

            (*(void (**)(char *, uint64_t))(v153 + 8))(v162, v166);
          }
          else
          {
            v161(v104, v105);

            (*(void (**)(char *, uint64_t))(v153 + 8))(v103, v166);
          }
        }
        else
        {
          uint64_t v115 = v163;
          sub_24DCC9088();
          uint64_t v116 = v160;
          uint64_t v105 = v172;
          (*v102)(v160, v73, v172);
          uint64_t v117 = sub_24DCC9068();
          os_log_type_t v118 = sub_24DCCA128();
          if (os_log_type_enabled(v117, v118))
          {
            uint64_t v119 = (uint8_t *)swift_slowAlloc();
            uint64_t v120 = (void *)swift_slowAlloc();
            v174[0] = v120;
            *(_DWORD *)uint64_t v119 = 136315138;
            sub_24D3EA320((unint64_t *)&qword_26B18F640, MEMORY[0x263F06EA8]);
            uint64_t v121 = sub_24DCCAD78();
            uint64_t v173 = sub_24D418FB4(v121, v122, (uint64_t *)v174);
            sub_24DCCA428();
            swift_bridgeObjectRelease();
            v58(v116, v105);
            _os_log_impl(&dword_24D3D0000, v117, v118, "Failed to created thumbnail directory for URL: %s", v119, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x25332B030](v120, -1, -1);
            uint64_t v123 = v119;
            id v80 = v171;
            MEMORY[0x25332B030](v123, -1, -1);

            (*(void (**)(void *, uint64_t))(v153 + 8))(v163, v166);
          }
          else
          {
            id v80 = v73;
            v58(v116, v105);

            (*(void (**)(void *, uint64_t))(v153 + 8))(v115, v166);
          }
        }
        uint64_t v74 = (uint64_t)v152;
        uint64_t v75 = v105;
        uint64_t v76 = v156;
        uint64_t v77 = (uint64_t)v168;
        uint64_t v78 = &selRef_createIndexerWithExtension_enabled_error_;
        uint64_t v79 = v151;
      }
    }
    else
    {
      id v81 = v174[0];
      unint64_t v82 = (void *)sub_24DCC8828();

      swift_willThrow();
      uint64_t v79 = 0;
      id v83 = (id)fpfs_current_or_default_log();
      uint64_t v84 = v165;
      sub_24DCC9088();
      uint64_t v76 = v156;
      uint64_t v85 = v164;
      uint64_t v75 = v172;
      (*(void (**)(char *, char *, uint64_t))(v156 + 16))(v164, v66, v172);
      id v86 = v82;
      id v87 = v82;
      uint64_t v88 = sub_24DCC9068();
      os_log_type_t v89 = sub_24DCCA128();
      if (os_log_type_enabled(v88, v89))
      {
        uint64_t v90 = swift_slowAlloc();
        v151 = 0;
        uint64_t v91 = v90;
        uint64_t v163 = (void *)swift_slowAlloc();
        uint64_t v92 = (void *)swift_slowAlloc();
        v174[0] = v92;
        *(_DWORD *)uint64_t v91 = 136315394;
        sub_24D3EA320((unint64_t *)&qword_26B18F640, MEMORY[0x263F06EA8]);
        uint64_t v93 = sub_24DCCAD78();
        uint64_t v173 = sub_24D418FB4(v93, v94, (uint64_t *)v174);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        v161(v85, v75);
        *(_WORD *)(v91 + 12) = 2112;
        id v95 = v82;
        uint64_t v96 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v173 = v96;
        sub_24DCCA428();
        uint64_t v97 = v163;
        *uint64_t v163 = v96;
        uint64_t v76 = v156;

        _os_log_impl(&dword_24D3D0000, v88, v89, "Failed to created thumbnail directory for URL: %s, error: %@", (uint8_t *)v91, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v97, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v92, -1, -1);
        uint64_t v79 = v151;
        MEMORY[0x25332B030](v91, -1, -1);

        (*(void (**)(char *, uint64_t))(v153 + 8))(v165, v166);
      }
      else
      {

        v161(v85, v75);
        (*(void (**)(char *, uint64_t))(v153 + 8))(v84, v166);
      }
      uint64_t v74 = (uint64_t)v152;
      id v80 = v171;
      uint64_t v77 = (uint64_t)v168;
      uint64_t v78 = &selRef_createIndexerWithExtension_enabled_error_;
    }
    sub_24D3FB6F8(0, &qword_26B194038);
    uint64_t v124 = *(void (**)(uint64_t, char *, uint64_t))(v76 + 16);
    v124(v77, v80, v75);
    id v125 = sub_24D609184(v77, 0);
    if (v79)
    {

      uint64_t v126 = 0;
    }
    else
    {
      uint64_t v126 = v125;
    }
    id v127 = v155;
    id result = [v155 v78[415]];
    if (result)
    {
      uint64_t v128 = result;
      id v129 = objc_msgSend(v127, sel_displayName);
      uint64_t v130 = sub_24DCC97E8();
      uint64_t v132 = v131;

      v124(v170, v169, v172);
      id v133 = objc_msgSend(v127, sel_itemID);
      id v134 = objc_msgSend(v127, sel_contentModificationDate);
      if (v134)
      {
        uint64_t v135 = v134;
        uint64_t v136 = (uint64_t)v167;
        sub_24DCC8CA8();

        uint64_t v137 = sub_24DCC8CE8();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v137 - 8) + 56))(v136, 0, 1, v137);
      }
      else
      {
        uint64_t v138 = sub_24DCC8CE8();
        uint64_t v136 = (uint64_t)v167;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v138 - 8) + 56))(v167, 1, 1, v138);
      }
      uint64_t v139 = v150;
      id v140 = objc_msgSend(v155, sel_mostRecentEditorNameComponents);
      if (v140)
      {
        v141 = v140;
        sub_24DCC8778();

        uint64_t v142 = sub_24DCC8788();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v142 - 8) + 56))(v74, 0, 1, v142);
      }
      else
      {
        uint64_t v143 = sub_24DCC8788();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v143 - 8) + 56))(v74, 1, 1, v143);
      }
      id v144 = objc_msgSend(v155, sel_documentSize);
      id v145 = objc_allocWithZone(MEMORY[0x263F05470]);
      id v59 = sub_24D6C2520((uint64_t)v128, v130, v132, v170, (uint64_t)v126, (uint64_t)v133, v136, v74, (uint64_t)v144);

      uint64_t v146 = v172;
      uint64_t v147 = v161;
      v161(v171, v172);
      v147(v158, v146);
      return v59;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D685CC8(uint64_t a1, int a2, void (*a3)(void, void, id), uint64_t a4)
{
  int v19 = a2;
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v13 = (v10 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v12, v11, v8);
  uint64_t v15 = (void *)(v14 + v13);
  *uint64_t v15 = a3;
  v15[1] = a4;
  unint64_t v16 = v14 + ((v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  *(void *)unint64_t v16 = v4;
  *(unsigned char *)(v16 + 8) = v19;
  swift_retain_n();
  sub_24D6BC12C((uint64_t)"listRemoteVersionsOfItem(at:includeCachedVersions:completionHandler:)", 69, 2, (uint64_t)sub_24D6C92D0, v14, v4, a3, a4);
  swift_release();
  return swift_release_n();
}

void sub_24D685E7C(uint64_t a1, uint64_t a2, void (*a3)(void, void, id), uint64_t a4, void *a5, int a6)
{
  int v42 = a6;
  uint64_t v43 = a5;
  uint64_t v46 = a4;
  id v47 = a3;
  uint64_t v45 = sub_24DCC8A58();
  uint64_t v41 = *(void *)(v45 - 8);
  uint64_t v8 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v45);
  id v44 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for VFSItem(0);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v12);
  unint64_t v16 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v36 - v17;
  uint64_t v19 = a1;
  sub_24D40BD70(1, 2, 0, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_24D415F74((uint64_t)v11, (uint64_t *)&unk_26B199BC0);
    uint64_t v20 = (void *)sub_24DCC8948();
    id v21 = (id)FPItemNotFoundErrorAtURL();

    v47(0, MEMORY[0x263F8EE78], v21);
  }
  else
  {
    uint64_t v37 = type metadata accessor for VFSItem;
    uint64_t v22 = (uint64_t)v18;
    id v39 = v18;
    sub_24D40BC84((uint64_t)v11, (uint64_t)v18, type metadata accessor for VFSItem);
    uint64_t v23 = v19;
    uint64_t v40 = *(void *)(v19 + 16);
    uint64_t v24 = swift_allocObject();
    uint64_t v38 = v24;
    uint64_t v25 = v46;
    *(void *)(v24 + 16) = v47;
    *(void *)(v24 + 24) = v25;
    sub_24D40B474(v22, (uint64_t)v16, type metadata accessor for VFSItem);
    uint64_t v26 = v41;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v44, a2, v45);
    unint64_t v27 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    unint64_t v28 = (v14 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (*(unsigned __int8 *)(v26 + 80) + v29 + 16) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v23;
    sub_24D40BC84((uint64_t)v16, v31 + v27, v37);
    double v33 = v43;
    uint64_t v32 = v44;
    *(void *)(v31 + v28) = v43;
    uint64_t v34 = (void *)(v31 + v29);
    *uint64_t v34 = v47;
    v34[1] = v25;
    (*(void (**)(unint64_t, char *, uint64_t))(v26 + 32))(v31 + v30, v32, v45);
    *(unsigned char *)(v31 + v30 + v8) = v42 & 1;
    swift_retain_n();
    swift_retain();
    id v35 = v33;
    sub_24D3FBC7C((uint64_t)"listRemoteVersionsOfItem(at:includeCachedVersions:completionHandler:)", 69, 2, sub_24D6D98DC, v38, (uint64_t)sub_24D6D9CEC, v31);
    swift_release();
    swift_release();
    sub_24D3FC974((uint64_t)v39, type metadata accessor for VFSItem);
  }
}

void sub_24D686290(uint64_t a1, uint64_t a2, char *a3, void (*a4)(void, void, void), uint64_t a5, uint64_t a6, int a7)
{
  int v59 = a7;
  uint64_t v55 = a6;
  uint64_t v60 = a4;
  uint64_t v12 = sub_24DCC8A58();
  uint64_t v57 = *(void *)(v12 - 8);
  uint64_t v58 = v12;
  uint64_t v13 = *(void *)(v57 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v56 = (char *)v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_24DCC9078();
  uint64_t v14 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  unint64_t v16 = (char *)v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = a3;
  uint64_t v17 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  uint64_t v61 = a5;
  if (v17
    && (uint64_t v18 = v17, v19 = objc_msgSend(v17, sel_indexer), v18, v19))
  {
    unsigned int v20 = objc_msgSend(v19, sel_needsAuthentication);

    if (v20) {
      uint64_t v21 = 25;
    }
    else {
      uint64_t v21 = 17;
    }
  }
  else
  {
    uint64_t v21 = 17;
  }
  uint64_t v22 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
  uint64_t v23 = sub_24D4077D0(a2, v21, 0, v22);
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v23, sel_providerItemIdentifier);
  if (v24)
  {
    uint64_t v25 = v24;
    uint64_t v26 = *(void *)(*(void *)(*(void *)(a1 + 16) + 40) + 16);
    type metadata accessor for FPFileTree();
    uint64_t v27 = swift_dynamicCastClassUnconditional();
    uint64_t v28 = *(void *)&v62[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs];
    uint64_t v53 = v7;
    uint64_t v51 = v27;
    v49[1] = v26;
    if (v28)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
      unint64_t v29 = (char *)swift_dynamicCastClassUnconditional();
      swift_retain();
      swift_retain();
      if (objc_sync_enter(v29)) {
        sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v29);
      }
      unint64_t v30 = *(void **)&v29[qword_26B199590];
      id v31 = v30;
      if (objc_sync_exit(v29)) {
        sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v29);
      }
      uint64_t v52 = v25;
      uint64_t v54 = (uint64_t)v23;
      swift_release();
      uint64_t v50 = (int *)v30;
    }
    else
    {
      uint64_t v52 = v25;
      uint64_t v54 = (uint64_t)v23;
      swift_retain();
      uint64_t v50 = 0;
    }
    uint64_t v36 = v56;
    uint64_t v37 = v57;
    uint64_t v38 = v58;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v56, v55, v58);
    unint64_t v39 = (*(unsigned __int8 *)(v37 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80);
    uint64_t v40 = v39 + v13;
    unint64_t v41 = (v39 + v13) & 0xFFFFFFFFFFFFFFF8;
    int v42 = (char *)swift_allocObject();
    uint64_t v43 = v61;
    *((void *)v42 + 2) = v60;
    *((void *)v42 + 3) = v43;
    id v44 = v62;
    *((void *)v42 + 4) = v62;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(&v42[v39], v36, v38);
    v42[v40] = v59 & 1;
    uint64_t v45 = (void *)v54;
    *(void *)&v42[v41 + 8] = v54;
    swift_retain();
    id v46 = v44;
    id v47 = v45;
    id v48 = v52;
    uint64_t v23 = v50;
    sub_24D5BB860(v52, 0, v50, (uint64_t)sub_24D6D9E00, (uint64_t)v42);
    swift_release();

    swift_release();
  }
  else
  {
    id v32 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    double v33 = sub_24DCC9068();
    os_log_type_t v34 = sub_24DCCA118();
    if (os_log_type_enabled(v33, v34))
    {
      id v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v35 = 0;
      _os_log_impl(&dword_24D3D0000, v33, v34, "listRemoteVersions: item doesn't have a providerItemIdentifier, no versions", v35, 2u);
      MEMORY[0x25332B030](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v54);
    v60(0, MEMORY[0x263F8EE78], 0);
  }
}

void sub_24D686784(void *a1, char a2, void (*a3)(void, void, void *), uint64_t a4, void *a5, uint64_t a6, int a7, void *a8)
{
  int v32 = a7;
  double v33 = a5;
  uint64_t v14 = sub_24DCC8A58();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v28 = a1;
    a3(0, MEMORY[0x263F8EE78], a1);
    char v27 = 1;
  }
  else
  {
    id v31 = a8;
    uint64_t v18 = qword_26B194010;
    swift_unknownObjectRetain();
    if (v18 != -1) {
      swift_once();
    }
    uint64_t v30 = qword_26B1A22E8;
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v14);
    unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    uint64_t v20 = v19 + v16;
    uint64_t v21 = (char *)swift_allocObject();
    *((void *)v21 + 2) = a3;
    *((void *)v21 + 3) = a4;
    v29[1] = a4;
    uint64_t v22 = v33;
    *((void *)v21 + 4) = v33;
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v21[v19], v17, v14);
    v21[v20] = v32 & 1;
    uint64_t v23 = v31;
    *(void *)&v21[(v20 & 0xFFFFFFFFFFFFFFF8) + 8] = v31;
    aBlock[4] = sub_24D6D9FBC;
    aBlock[5] = v21;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24D5A694C;
    aBlock[3] = &block_descriptor_3119;
    id v24 = _Block_copy(aBlock);
    swift_retain();
    id v25 = v22;
    id v26 = v23;
    swift_release();
    objc_msgSend(a1, sel_enumerateItemsFromPage_suggestedPageSize_upTo_reply_, v30, 128, -1, v24);
    _Block_release(v24);
    char v27 = 0;
  }
  sub_24D6D9EB8(a1, v27, MEMORY[0x263F8EEE8]);
}

id sub_24D686A30(unint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  if (!a1) {
    return (id)((uint64_t (*)(void, void, uint64_t))a3)(0, MEMORY[0x263F8EE78], a2);
  }
  uint64_t v15 = sub_24D6CBCB8(a6, a7 & 1);
  v27[2] = a5;
  v27[3] = MEMORY[0x270FA5388](v15);
  v27[4] = a6;
  unint64_t v16 = sub_24D5901AC((void (*)(uint64_t *__return_ptr, id *))sub_24D6DA074, (uint64_t)v27, a1);
  swift_bridgeObjectRelease();
  uint64_t v30 = a4;
  id v31 = a3;
  uint64_t v28 = a8;
  uint64_t v29 = a2;
  if (v16 >> 62)
  {
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_24DCCA9C8();
    if (v17) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v17)
    {
LABEL_4:
      a5 += OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain;
      uint64_t v18 = 4;
      do
      {
        if ((v16 & 0xC000000000000001) != 0) {
          id v19 = (id)MEMORY[0x253328820](v18 - 4, v16);
        }
        else {
          id v19 = *(id *)(v16 + 8 * v18);
        }
        uint64_t v20 = v19;
        uint64_t v21 = v18 - 3;
        if (__OFADD__(v18 - 4, 1))
        {
          __break(1u);
          goto LABEL_15;
        }
        uint64_t v22 = (void *)MEMORY[0x25332B1A0](a5);
        if (v22)
        {
          uint64_t v23 = v22;
          id v24 = objc_msgSend(v22, sel_versionsCache);

          id result = objc_msgSend(v20, sel_etag);
          if (!result)
          {
            __break(1u);
            return result;
          }
          id v26 = result;
          objc_msgSend(v24, sel_setObject_forKey_, v20, result);
        }
        ++v18;
      }
      while (v21 != v17);
    }
  }
  swift_bridgeObjectRelease();
  v31(v28, v16, v29);
  return (id)swift_bridgeObjectRelease();
}

uint64_t sub_24D686E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), void (*a6)(void), double a7, double a8)
{
  uint64_t v60 = a3;
  uint64_t v64 = a6;
  uint64_t v61 = a4;
  uint64_t v62 = a5;
  uint64_t v58 = a2;
  uint64_t v13 = sub_24DCC92F8();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v56 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v53 = (char *)&v51 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_24DCC9398();
  uint64_t v52 = *(void *)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v51 = (char *)&v51 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC8A58();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  id v19 = (char *)&v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a5;
  *(void *)(v20 + 24) = a6;
  uint64_t v57 = v20;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, a1, v16);
  unint64_t v21 = (*(unsigned __int8 *)(v17 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v22 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v26 = swift_allocObject();
  unint64_t v27 = v26 + v21;
  uint64_t v28 = v64;
  (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v27, v19, v16);
  uint64_t v29 = (void (**)(void))(v26 + v22);
  uint64_t v30 = v61;
  *uint64_t v29 = v62;
  v29[1] = v28;
  id v31 = v59;
  *(void *)(v26 + v23) = v59;
  *(void *)(v26 + v24) = v58;
  int v32 = (double *)(v26 + v25);
  *int v32 = a7;
  v32[1] = a8;
  uint64_t v63 = v26;
  double v33 = (void *)(v26 + ((v25 + 23) & 0xFFFFFFFFFFFFFFF8));
  void *v33 = v60;
  v33[1] = v30;
  os_log_type_t v34 = &v31[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v35 = v31;
  uint64_t v36 = (void *)MEMORY[0x25332B1A0](&v31[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  uint64_t v37 = v35;
  swift_bridgeObjectRetain();
  swift_retain();
  if (v36)
  {
    if (objc_msgSend(v36, sel_unableToStartup))
    {
      id v38 = sub_24D621D5C();
      v62();

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((v37[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    unint64_t v39 = (void *)MEMORY[0x25332B1A0](v34);
    if (v39)
    {
      uint64_t v40 = v39;
      id v41 = objc_msgSend(v39, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_592;
      int v42 = _Block_copy(aBlock);
      uint64_t v43 = v51;
      sub_24DCC9348();
      uint64_t v65 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      id v44 = v53;
      uint64_t v45 = v56;
      sub_24DCCA5B8();
      MEMORY[0x2533282B0](0, v43, v44, v42);
      _Block_release(v42);

      (*(void (**)(char *, uint64_t))(v55 + 8))(v44, v45);
      (*(void (**)(char *, uint64_t))(v52 + 8))(v43, v54);
    }
  }
  id v46 = *(void **)&v37[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v47 = *(void **)&v37[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v48 = (void *)swift_allocObject();
  v48[2] = v37;
  v48[3] = sub_24D6E4F84;
  v48[4] = v57;
  v48[5] = sub_24D6C93C8;
  v48[6] = v63;
  id v49 = v37;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"fetchThumbnails(at:versions:size:perThumbnailCompletionHandler:completionHandler:)", 82, 2, v46, v47, (uint64_t)sub_24D3E5BC8, (uint64_t)v48);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D687478(uint64_t a1, uint64_t a2, void (*a3)(id), void (*a4)(id), void *a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10)
{
  uint64_t v52 = a7;
  uint64_t v53 = a8;
  uint64_t v54 = a5;
  uint64_t v55 = a6;
  uint64_t v57 = a4;
  int v59 = a3;
  uint64_t v58 = sub_24DCC8A58();
  uint64_t v14 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  unint64_t v51 = v15;
  uint64_t v56 = (char *)&v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for VFSItem(0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  unint64_t v23 = (char *)&v46 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  unint64_t v25 = (char *)&v46 - v24;
  uint64_t v26 = a1;
  sub_24D40BD70(1, 2, 0, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_24D415F74((uint64_t)v18, (uint64_t *)&unk_26B199BC0);
    unint64_t v27 = (void *)sub_24DCC8948();
    id v28 = (id)FPItemNotFoundErrorAtURL();

    v59(v28);
  }
  else
  {
    id v46 = type metadata accessor for VFSItem;
    uint64_t v29 = (uint64_t)v25;
    id v48 = v25;
    sub_24D40BC84((uint64_t)v18, (uint64_t)v25, type metadata accessor for VFSItem);
    uint64_t v49 = *(void *)(v26 + 16);
    uint64_t v50 = v26;
    uint64_t v30 = swift_allocObject();
    uint64_t v47 = v30;
    id v31 = v57;
    *(void *)(v30 + 16) = v59;
    *(void *)(v30 + 24) = v31;
    sub_24D40B474(v29, (uint64_t)v23, type metadata accessor for VFSItem);
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v56, a2, v58);
    unint64_t v32 = (*(unsigned __int8 *)(v20 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    unint64_t v33 = (v21 + v32 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v35 = (*(unsigned __int8 *)(v14 + 80) + v34 + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v51 = (v51 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v36 = (v51 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v50;
    sub_24D40BC84((uint64_t)v23, v37 + v32, v46);
    id v38 = v54;
    *(void *)(v37 + v33) = v54;
    unint64_t v39 = (void (**)(id))(v37 + v34);
    uint64_t v40 = v58;
    *unint64_t v39 = v59;
    v39[1] = v31;
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v37 + v35, v56, v40);
    uint64_t v41 = v52;
    *(void *)(v37 + v51) = v55;
    int v42 = (double *)(v37 + v36);
    *int v42 = a9;
    v42[1] = a10;
    uint64_t v43 = (void *)(v37 + ((v36 + 23) & 0xFFFFFFFFFFFFFFF8));
    uint64_t v44 = v53;
    void *v43 = v41;
    v43[1] = v44;
    swift_retain_n();
    swift_retain();
    id v45 = v38;
    swift_bridgeObjectRetain();
    swift_retain();
    sub_24D3FBC7C((uint64_t)"fetchThumbnails(at:versions:size:perThumbnailCompletionHandler:completionHandler:)", 82, 2, sub_24D6E4F84, v47, (uint64_t)sub_24D6D9724, v37);
    swift_release();
    swift_release();
    sub_24D3FC974((uint64_t)v48, type metadata accessor for VFSItem);
  }
}

void sub_24D6878E4(double a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(id), uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v18 = (void *)MEMORY[0x25332B1A0](a5 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  if (v18
    && (uint64_t v19 = v18, v20 = objc_msgSend(v18, sel_indexer), v19, v20)
    && (unsigned int v21 = objc_msgSend(v20, sel_needsAuthentication), v20, v21))
  {
    uint64_t v22 = 9;
  }
  else
  {
    uint64_t v22 = 1;
  }
  unint64_t v23 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
  uint64_t v24 = sub_24D4077D0(a4, v22, 0, v23);
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v24, sel_formerItemID);

  if (v25)
  {
    id v26 = objc_msgSend(v25, sel_identifier);

    type metadata accessor for FPFileTree();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    sub_24D5BC2BC(v26, a9, a10, a11, (uint64_t)a6, a7, a1, a2);

    swift_release();
  }
  else
  {
    unint64_t v27 = (void *)sub_24DCC8948();
    id v28 = (id)FPItemNotFoundErrorAtURL();

    a6(v28);
  }
}

void sub_24D687C9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9)
{
  if (a5) {
    uint64_t v14 = (void *)sub_24DCC97B8();
  }
  else {
    uint64_t v14 = 0;
  }
  if (a7 >> 60 == 15)
  {
    unint64_t v15 = 0;
    if (a8)
    {
LABEL_6:
      uint64_t v16 = sub_24DCC8818();
      goto LABEL_9;
    }
  }
  else
  {
    unint64_t v15 = (void *)sub_24DCC8B28();
    if (a8) {
      goto LABEL_6;
    }
  }
  uint64_t v16 = 0;
LABEL_9:
  id v17 = (id)v16;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, void *, void *))(a9 + 16))(a9, a1, a2, a3, v14, v15);
}

uint64_t sub_24D687D90(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a1;
  v8[4] = a2;
  v8[5] = a3;
  swift_retain_n();
  id v9 = v3;
  id v10 = a1;
  sub_24D3D7FA8((uint64_t)"fetchOperationServiceOrEndpoint(with:completionHandler:)", 56, 2, (void (*)(void *, uint64_t *, id))sub_24D6C94A4, v7, (uint64_t)sub_24D4189C4, (uint64_t)v8);
  swift_release();

  return swift_release();
}

uint64_t sub_24D687E7C(uint64_t a1, id a2, uint64_t (*a3)(id, void), uint64_t a4, void *a5)
{
  id v10 = objc_msgSend(a2, sel_identifier);
  if (qword_26B194080 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_24DCC97E8();
  uint64_t v13 = v12;
  if (v11 == sub_24DCC97E8() && v13 == v14)
  {

    swift_bridgeObjectRelease_n();
    return a3(a2, 0);
  }
  char v16 = sub_24DCCAE28();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v16) {
    return a3(a2, 0);
  }
  id v17 = objc_msgSend(a2, sel_identifier);
  unint64_t v18 = sub_24D4028A4();
  char v20 = v19;
  int v21 = ~v19;

  if (!v21) {
    return a3(a2, 0);
  }
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = a3;
  *(void *)(v22 + 24) = a4;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = a1;
  *(void *)(v23 + 24) = v18;
  *(unsigned char *)(v23 + 32) = v20;
  *(void *)(v23 + 40) = a3;
  *(void *)(v23 + 48) = a4;
  *(void *)(v23 + 56) = a5;
  *(void *)(v23 + 64) = a2;
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_24D417998;
  *(void *)(v24 + 24) = v22;
  swift_retain_n();
  swift_retain();
  id v25 = a5;
  id v26 = a2;
  swift_retain();
  sub_24D3FBC7C((uint64_t)"resolveProviderItemID(_:completionHandler:)", 43, 2, sub_24D5B2F84, v24, (uint64_t)sub_24D6D92C0, v23);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24D6880F4(uint64_t a1, uint64_t a2, char a3, void (*a4)(id, uint64_t), uint64_t a5, uint64_t a6, void *a7)
{
  void (*v12)(void **__return_ptr, uint64_t *);
  void *v13;
  uint64_t v14;
  id v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  uint64_t v11 = *(void *)(*(void *)(a1 + 16) + 16);
  unint64_t v18 = a2;
  LOBYTE(v19) = a3;
  uint64_t v12 = *(void (**)(void **__return_ptr, uint64_t *))(*(void *)v11 + 160);
  swift_retain();
  v12(&v20, &v18);
  swift_release();
  if (!v7)
  {
    uint64_t v13 = v20;
    if (v20)
    {
      uint64_t v14 = *(void *)(a6 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_providerDomainID);
      unint64_t v15 = objc_allocWithZone(MEMORY[0x263F054B8]);
      char v16 = objc_msgSend(v15, sel_initWithProviderDomainID_itemIdentifier_, v14, v13, v18, v19);
      a4(v16, 0);
    }
    else
    {
      id v17 = objc_msgSend(a7, sel_identifier, v18, v19);
      char v16 = (id)FPItemNotFoundError();

      if (!v16)
      {
        __break(1u);
        return;
      }
      a4(v16, 1);
    }
  }
}

uint64_t sub_24D688238(void *a1, char a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v5;
  *(void *)(v11 + 24) = a4;
  *(void *)(v11 + 32) = a5;
  *(unsigned char *)(v11 + 40) = a2;
  *(void *)(v11 + 48) = a3;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D6C94E0;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = a1;
  v13[3] = sub_24D6C94E0;
  v13[4] = v11;
  v13[5] = v5;
  id v14 = v5;
  swift_retain_n();
  id v15 = v14;
  swift_retain();
  id v16 = a3;
  id v17 = a1;
  sub_24D6281D4((uint64_t)"resolveProviderItemID(_:completionHandler:)", 43, 2, (void (*)(id *))sub_24D417998, v12, (uint64_t)sub_24D6C94E8, (uint64_t)v13);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24D68838C(id a1, char a2, uint64_t a3, void (*a4)(void, void, id), uint64_t a5, char a6, uint64_t a7)
{
  if (a2)
  {
    id v17 = a1;
    a4(0, 0, a1);
    id v18 = a1;
  }
  else
  {
    uint64_t v12 = (void *)MEMORY[0x25332B1A0](a3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
    id v13 = a1;
    if (v12)
    {
      id v14 = v13;
      id v15 = objc_msgSend(v12, sel_extensionBackend);

      if (v15)
      {
        v20[4] = a4;
        v20[5] = a5;
        v20[0] = MEMORY[0x263EF8330];
        v20[1] = 1107296256;
        v20[2] = sub_24D68854C;
        v20[3] = &block_descriptor_3074;
        id v16 = _Block_copy(v20);
        swift_retain();
        swift_release();
        objc_msgSend(v15, sel_fetchServicesForItemID_allowRestrictedSources_request_completionHandler_, v14, a6 & 1, a7, v16);
        _Block_release(v16);
        swift_unknownObjectRelease();
        sub_24D4178C8(a1);
        return;
      }
    }
    id v19 = (id)FPDomainUnavailableError();
    a4(0, 0, v19);

    id v18 = a1;
  }

  sub_24D4178C8(v18);
}

uint64_t sub_24D68854C(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  uint64_t v5 = a3;
  uint64_t v7 = *(void (**)(void *, uint64_t, void *))(a1 + 32);
  if (a3)
  {
    sub_24D3FB6F8(0, &qword_26B194820);
    uint64_t v5 = sub_24DCC9C28();
  }
  swift_retain();
  id v8 = a2;
  id v9 = a4;
  v7(a2, v5, a4);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_24D6887C8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v7 = a2;
  if (a2)
  {
    sub_24D3FB6F8(0, a5);
    uint64_t v7 = (void *)sub_24DCC9C18();
  }
  if (a3) {
    uint64_t v9 = sub_24DCC8818();
  }
  else {
    uint64_t v9 = 0;
  }
  id v10 = (id)v9;
  (*(void (**)(uint64_t, uint64_t, void *))(a4 + 16))(a4, a1, v7);
}

uint64_t sub_24D688874(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  id v8 = (void *)swift_allocObject();
  v8[2] = v3;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = a1;
  swift_retain_n();
  id v9 = v3;
  id v10 = a1;
  sub_24D62520C((uint64_t)"fetchVendorEndpoint(with:completionHandler:)", 44, 2, (void (*)(void *, id))sub_24D6E4F8C, v7, (uint64_t)sub_24D6C94F8, (uint64_t)v8);
  swift_release();

  return swift_release();
}

void sub_24D688960(uint64_t a1, uint64_t a2, void (*a3)(void, id), uint64_t a4, uint64_t a5)
{
  id v8 = (void *)MEMORY[0x25332B1A0](a2 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  if (v8
    && (v9 = v8, id v10 = objc_msgSend(v8, sel_extensionBackend), v9, v10))
  {
    aBlock[4] = a3;
    aBlock[5] = a4;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24D418084;
    aBlock[3] = &block_descriptor_3051;
    uint64_t v11 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v10, sel_fetchVendorEndpointWithRequest_completionHandler_, a5, v11);
    _Block_release(v11);
    swift_unknownObjectRelease();
  }
  else
  {
    id v12 = (id)FPDomainUnavailableError();
    a3(0, v12);
  }
}

void sub_24D688BFC(char a1)
{
  v2 = v1;
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24DCC9398();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    type metadata accessor for NSFileProviderError(0);
    uint64_t v36 = -1000;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D3EA320(&qword_26B193F20, type metadata accessor for NSFileProviderError);
    sub_24DCC8808();
    id v16 = aBlock;
    id v17 = (void *)sub_24DCC8818();

    unint64_t v34 = nullsub_1;
    uint64_t v35 = 0;
    aBlock = (void *)MEMORY[0x263EF8330];
    uint64_t v31 = 1107296256;
    unint64_t v32 = sub_24D6024BC;
    unint64_t v33 = &block_descriptor_620;
    id v18 = _Block_copy(&aBlock);
    objc_msgSend(v2, sel_signalErrorResolved_completionHandler_, v17, v18);
    _Block_release(v18);

    return;
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v1;
  id v13 = &v1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v29 = (id)MEMORY[0x25332B1A0](&v2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  id v14 = v2;
  if (v29)
  {
    if (objc_msgSend(v29, sel_unableToStartup))
    {

      swift_release();
      id v15 = v29;

      return;
    }
  }
  if ((v14[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v19 = (void *)MEMORY[0x25332B1A0](v13);
    if (v19)
    {
      char v20 = v19;
      id v29 = objc_msgSend(v19, sel_serialQueue);

      unint64_t v34 = nullsub_1;
      uint64_t v35 = 0;
      aBlock = (void *)MEMORY[0x263EF8330];
      uint64_t v31 = 1107296256;
      unint64_t v32 = (void (*)(uint64_t, void *))sub_24D3D2E94;
      unint64_t v33 = &block_descriptor_626;
      id v28 = _Block_copy(&aBlock);
      sub_24DCC9348();
      uint64_t v36 = MEMORY[0x263F8EE78];
      uint64_t v27 = sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v22 = v28;
      id v21 = v29;
      MEMORY[0x2533282B0](0, v11, v7, v28);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
  }
  uint64_t v23 = *(void **)&v14[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v24 = *(void **)&v14[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v25 = (void *)swift_allocObject();
  v25[2] = v14;
  v25[3] = nullsub_1;
  v25[4] = 0;
  v25[5] = sub_24D6C9504;
  v25[6] = v12;
  id v26 = v14;
  swift_retain();
  sub_24D3E2DA8((uint64_t)"didChangeNeedsAuthentification(_:)", 34, 2, v23, v24, (uint64_t)sub_24D3E5BC8, (uint64_t)v25);
  swift_release();
  swift_release();
}

uint64_t sub_24D689144(uint64_t a1, void *a2)
{
  id v2 = a2;
  uint64_t v3 = sub_24DBB2290(v2, (char *)v2);

  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(v3 + 40);
    do
    {
      uint64_t v6 = *v5;
      uint64_t v7 = swift_unknownObjectRetain();
      uint64_t v8 = (void *)MEMORY[0x253329610](v7);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v6 + 32))(ObjectType, v6);
      swift_unknownObjectRelease();
      v5 += 2;
      --v4;
    }
    while (v4);
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D689258()
{
  v1 = &v0[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_errorGenerationRecord];
  if (*(void *)&v0[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_errorGenerationRecord] == -1) {
    sub_24D60DC28();
  }
  id v2 = (void *)*((void *)v1 + 2);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_24D6D924C;
  *(void *)(v4 + 24) = v3;
  v10[4] = sub_24D58FF7C;
  v10[5] = v4;
  v10[0] = MEMORY[0x263EF8330];
  v10[1] = 1107296256;
  v10[2] = sub_24DCA4078;
  v10[3] = &block_descriptor_3038;
  uint64_t v5 = _Block_copy(v10);
  uint64_t v6 = v2;
  uint64_t v7 = v0;
  swift_retain();
  swift_release();
  dispatch_sync(v6, v5);

  _Block_release(v5);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  return result;
}

void (*sub_24D6893CC())(uint64_t *, void)
{
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t result = (void (*)(uint64_t *, void))sub_24DCC91C8();
  if (__OFADD__(*v1, 1))
  {
    __break(1u);
  }
  else
  {
    ++*v1;
    result(&v2, 0);
    swift_release();
    return (void (*)(uint64_t *, void))swift_release();
  }
  return result;
}

void sub_24D689470()
{
  uint64_t v1 = sub_24DCC9078();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v28 - v6;
  uint64_t v8 = (void *)MEMORY[0x25332B1A0](&v0[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  if (v8)
  {
    v28[0] = v8;
    id v9 = objc_msgSend(v8, sel_indexer);
    if (v9)
    {
      uint64_t v10 = v9;
      objc_msgSend(v9, sel_clearNeedsAuth);
      uint64_t v11 = v0;
      uint64_t v12 = sub_24DBB2290(v11, v11);

      uint64_t v13 = *(void *)(v12 + 16);
      if (v13)
      {
        id v14 = (uint64_t *)(v12 + 40);
        do
        {
          uint64_t v15 = *v14;
          uint64_t v16 = swift_unknownObjectRetain();
          id v17 = (void *)MEMORY[0x253329610](v16);
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v15 + 32))(ObjectType, v15);
          swift_unknownObjectRelease();
          v14 += 2;
          --v13;
        }
        while (v13);
      }

      swift_bridgeObjectRelease();
      id v19 = v28[0];
    }
    else
    {
      id v24 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      id v25 = sub_24DCC9068();
      os_log_type_t v26 = sub_24DCCA118();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v27 = 0;
        _os_log_impl(&dword_24D3D0000, v25, v26, "Unable to clear needsAuth, domain indexer not initialized", v27, 2u);
        MEMORY[0x25332B030](v27, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    }
  }
  else
  {
    id v20 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v21 = sub_24DCC9068();
    os_log_type_t v22 = sub_24DCCA118();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v23 = 0;
      _os_log_impl(&dword_24D3D0000, v21, v22, "Unable to clear needsAuth, domain not initialized", v23, 2u);
      MEMORY[0x25332B030](v23, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
}

void sub_24D68976C(void *a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x270FA5388](v8);
  unint64_t v51 = (char *)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_24DCC9398();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v49 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = a1;
  char v12 = sub_24DA7EB38((uint64_t)a1);
  uint64_t v13 = (void *)sub_24DCC8818();
  id v14 = objc_msgSend(v13, sel_userInfo);

  uint64_t v15 = sub_24DCC9578();
  if (!*(void *)(v15 + 16) || (unint64_t v16 = sub_24D4053BC(0xD00000000000001FLL, 0x800000024DD01C30), (v17 & 1) == 0))
  {
    long long aBlock = 0u;
    long long v58 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_24D3F7E8C(*(void *)(v15 + 56) + 32 * v16, (uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v58 + 1))
  {
LABEL_8:
    sub_24D415F74((uint64_t)&aBlock, qword_26B197F50);
    uint64_t v18 = 0;
    goto LABEL_9;
  }
  if (swift_dynamicCast()) {
    uint64_t v18 = v56;
  }
  else {
    uint64_t v18 = 0;
  }
LABEL_9:
  id v19 = (void *)sub_24DCC8818();
  id v20 = objc_msgSend(v19, sel_userInfo);

  uint64_t v21 = sub_24DCC9578();
  uint64_t v22 = sub_24DCC97E8();
  if (*(void *)(v21 + 16) && (unint64_t v24 = sub_24D4053BC(v22, v23), (v25 & 1) != 0))
  {
    sub_24D3F7E8C(*(void *)(v21 + 56) + 32 * v24, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v58 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v58 + 1))
  {
    sub_24D415F74((uint64_t)&aBlock, qword_26B197F50);
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    if (v12) {
      goto LABEL_21;
    }
LABEL_24:
    if (!v18)
    {
      swift_bridgeObjectRelease();
      a2(0);
      return;
    }
    goto LABEL_25;
  }
  int v26 = swift_dynamicCast();
  if (v26) {
    uint64_t v27 = v55;
  }
  else {
    uint64_t v27 = 0;
  }
  if (v26) {
    uint64_t v28 = v56;
  }
  else {
    uint64_t v28 = 0;
  }
  if (!v12) {
    goto LABEL_24;
  }
LABEL_21:
  if (v18)
  {
LABEL_25:
    uint64_t v30 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    uint64_t v29 = sub_24D3D3C4C(v30);
    goto LABEL_26;
  }
  uint64_t v29 = 0;
LABEL_26:
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = a2;
  *(void *)(v31 + 24) = a3;
  *(void *)(v31 + 32) = v4;
  *(unsigned char *)(v31 + 40) = v12;
  *(void *)(v31 + 48) = v27;
  *(void *)(v31 + 56) = v28;
  *(void *)(v31 + 64) = v29;
  *(void *)(v31 + 72) = a1;
  unint64_t v32 = &v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  unint64_t v33 = (void *)MEMORY[0x25332B1A0](&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  id v34 = a1;
  swift_retain();
  if (v33)
  {
    swift_retain();
    v4;
    if (objc_msgSend(v33, sel_unableToStartup))
    {

      swift_release();
      swift_release();

      return;
    }
  }
  else
  {
    swift_retain();
    uint64_t v35 = v4;
  }
  if ((v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v36 = (void *)MEMORY[0x25332B1A0](v32);
    if (v36)
    {
      uint64_t v37 = v36;
      id v48 = objc_msgSend(v36, sel_serialQueue);

      int v59 = nullsub_1;
      uint64_t v60 = 0;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v58 = sub_24D3D2E94;
      *((void *)&v58 + 1) = &block_descriptor_636;
      id v38 = _Block_copy(&aBlock);
      unint64_t v39 = v49;
      sub_24DCC9348();
      uint64_t v55 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v40 = v51;
      uint64_t v41 = v54;
      sub_24DCCA5B8();
      int v42 = v48;
      MEMORY[0x2533282B0](0, v39, v40, v38);
      _Block_release(v38);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v40, v41);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v52);
    }
  }
  uint64_t v43 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v44 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v45 = (void *)swift_allocObject();
  v45[2] = v4;
  v45[3] = nullsub_1;
  v45[4] = 0;
  v45[5] = sub_24D6C9514;
  v45[6] = v31;
  id v46 = v4;
  swift_retain();
  sub_24D3E2DA8((uint64_t)"signalErrorResolved(_:completionHandler:)", 41, 2, v43, v44, (uint64_t)sub_24D3E5BC8, (uint64_t)v45);
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_24D689E28(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a3;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(unsigned char *)(v17 + 24) = a5;
  *(void *)(v17 + 32) = a6;
  *(void *)(v17 + 40) = a7;
  *(void *)(v17 + 48) = a1;
  *(void *)(v17 + 56) = a8;
  *(void *)(v17 + 64) = a9;
  *(void *)(v17 + 72) = a2;
  *(void *)(v17 + 80) = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain_n();
  swift_retain();
  id v18 = a4;
  id v19 = a9;
  sub_24D8272E0((uint64_t)"signalErrorResolved(_:completionHandler:)", 41, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6E4F84, v16, (uint64_t)sub_24D6D916C, v17);
  swift_release();

  return swift_release();
}

void sub_24D689F94(void *a1, int a2, char *a3, uint64_t a4, char *a5, uint64_t a6, void *a7, void (*a8)(void))
{
  uint64_t v181 = a8;
  uint64_t v182 = a5;
  v186 = a3;
  LODWORD(v183) = a2;
  int v12 = a2;
  uint64_t v184 = sub_24DCC9078();
  v185 = *(char **)(v184 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v184);
  uint64_t v15 = &v168[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  id v18 = &v168[-v17];
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = &v168[-v20];
  MEMORY[0x270FA5388](v19);
  uint64_t v23 = &v168[-v22];
  uint64_t v179 = a1;
  sub_24D689258();
  if (v12)
  {
    uint64_t v180 = (void *)a6;
    id v24 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    swift_bridgeObjectRetain_n();
    char v25 = sub_24DCC9068();
    os_log_type_t v26 = sub_24DCCA108();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = (char *)swift_slowAlloc();
      v189 = v28;
      *(_DWORD *)uint64_t v27 = 136315394;
      unint64_t v29 = sub_24DA7D690((char)v183);
      uint64_t v193 = sub_24D418FB4(v29, v30, (uint64_t *)&v189);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      if (a4)
      {
        uint64_t v193 = 0x2068746977;
        unint64_t v194 = 0xE500000000000000;
        sub_24DCC9968();
        sub_24DCC9968();
        uint64_t v31 = v193;
        unint64_t v32 = v194;
      }
      else
      {
        uint64_t v31 = 0;
        unint64_t v32 = 0xE000000000000000;
      }
      uint64_t v193 = sub_24D418FB4(v31, v32, (uint64_t *)&v189);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_24D3D0000, v25, v26, "🚦  resolved error %s %ssignaled, clearing this error's throttles", (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v28, -1, -1);
      MEMORY[0x25332B030](v27, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*((void (**)(unsigned char *, uint64_t))v185 + 1))(v23, v184);
    uint64_t v66 = v187;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
    swift_dynamicCastClassUnconditional();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1994B0);
    swift_dynamicCastClassUnconditional();
    char v67 = (char)v183;
    unsigned int v68 = v180;
    if (v180) {
      swift_beginAccess();
    }
    swift_retain();
    sub_24D82F418(v67);
    if (v66)
    {
      swift_release();
      return;
    }
    swift_release();
    swift_dynamicCastClassUnconditional();
    swift_dynamicCastClassUnconditional();
    if (v68 && *((unsigned char *)v68 + 25) == 1)
    {
      id v69 = (void *)v68[2];
      id v70 = v69;
    }
    else
    {
      id v69 = 0;
    }
    swift_retain();
    sub_24D82F2EC(v67);
    swift_release();

    if (v67 == 1) {
      sub_24D689470();
    }
    goto LABEL_28;
  }
  unint64_t v33 = a7;
  uint64_t v34 = v187;
  if (!a6) {
    goto LABEL_11;
  }
  swift_beginAccess();
  if (*(unsigned char *)(a6 + 41))
  {
    if (*(unsigned char *)(a6 + 25))
    {
      uint64_t v35 = *(void **)(a6 + 16);
      uint64_t v36 = *(unsigned __int8 *)(a6 + 24);
      v186 = v35;
      id v37 = (id)fpfs_current_or_default_log();
      id v38 = v15;
      sub_24DCC9088();
      id v39 = a7;
      sub_24D4018B8(v35, v36, 1);
      id v40 = a7;
      sub_24D4018B8(v35, v36, 1);
      uint64_t v41 = sub_24DCC9068();
      os_log_type_t v42 = sub_24DCCA108();
      int v43 = v42;
      BOOL v44 = os_log_type_enabled(v41, v42);
      id v175 = v35;
      if (v44)
      {
        uint64_t v45 = swift_slowAlloc();
        LODWORD(v180) = v43;
        uint64_t v46 = v45;
        uint64_t v47 = (void *)swift_slowAlloc();
        char v177 = v47;
        v183 = (char *)swift_slowAlloc();
        v189 = v183;
        *(_DWORD *)uint64_t v46 = 138412546;
        uint64_t v48 = v36;
        swift_getErrorValue();
        os_log_t v178 = v41;
        uint64_t v49 = sub_24DBA2828(v191);
        v192[0] = v49;
        sub_24DCCA428();
        *uint64_t v47 = v49;

        *(_WORD *)(v46 + 12) = 2080;
        uint64_t v50 = v186;
        uint64_t v51 = sub_24D3D79D4();
        uint64_t v179 = v38;
        unint64_t v53 = v52;
        sub_24D40160C(v35, v48, 1);
        uint64_t v54 = v51;
        uint64_t v36 = v48;
        v192[0] = (void *)sub_24D418FB4(v54, v53, (uint64_t *)&v189);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        sub_24D40160C(v35, v48, 1);
        sub_24D40160C(v35, v48, 1);
        os_log_t v55 = v178;
        _os_log_impl(&dword_24D3D0000, v178, (os_log_type_t)v180, "🚦  resolved error %@ for %s signaled, clearing this error's throttles", (uint8_t *)v46, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        uint64_t v56 = v177;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v56, -1, -1);
        uint64_t v57 = (uint64_t)v183;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v57, -1, -1);
        MEMORY[0x25332B030](v46, -1, -1);

        (*((void (**)(void *, uint64_t))v185 + 1))(v179, v184);
      }
      else
      {

        sub_24D40160C(v35, v36, 1);
        sub_24D40160C(v35, v36, 1);

        (*((void (**)(unsigned char *, uint64_t))v185 + 1))(v15, v184);
      }
      id v118 = (id)sub_24DCC8818();
      uint64_t v119 = *((void *)v182 + 2);
      uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
      swift_dynamicCastClassUnconditional();
      uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1994B0);
      uint64_t v122 = swift_dynamicCastClassUnconditional();
      uint64_t v123 = *(void *)(*(void *)(v122 + 32) + 64);
      v189 = v186;
      v192[0] = (void *)MEMORY[0x263F8EE78];
      MEMORY[0x270FA5388](v122);
      v168[-16] = 70;
      *(void *)&v168[-8] = &v189;
      swift_retain();
      uint64_t v124 = v187;
      sub_24D507F50((uint64_t)sub_24D6D91A8, (uint64_t)&v168[-32], v123, v192);
      uint64_t v125 = v124;
      if (v124)
      {

        swift_release();
        swift_bridgeObjectRelease();
        sub_24D40160C(v175, v36, 1);
        return;
      }
      uint64_t v171 = v121;
      swift_release();
      uint64_t v126 = v192[0];
      os_log_t v178 = (os_log_t)v192[0][2];
      if (v178)
      {
        unsigned int v169 = v36;
        unint64_t v127 = 0;
        char v177 = v192[0] + 4;
        long long v170 = xmmword_24DCCECE0;
        uint64_t v180 = v118;
        *(void *)&long long v173 = v119;
        *(void *)&long long v174 = v120;
        uint64_t v172 = v192[0];
        while (1)
        {
          if (v127 >= v126[2]) {
            goto LABEL_101;
          }
          uint64_t v128 = v119;
          id v129 = v126;
          v186 = (char *)v127;
          uint64_t v130 = (void **)&v177[11 * v127];
          uint64_t v131 = *v130;
          uint64_t v132 = *((unsigned __int8 *)v130 + 8);
          int v133 = *((unsigned __int8 *)v130 + 9);
          LODWORD(v179) = *((unsigned __int8 *)v130 + 10);
          id v134 = (char *)v130[10];
          uint64_t v135 = (char *)v130[7];
          sub_24D4E4B98(v131, v132, v133);
          uint64_t v136 = v135;
          swift_bridgeObjectRetain();
          sub_24D4E4B98(v131, v132, v133);
          uint64_t v137 = v135;
          swift_bridgeObjectRetain();
          sub_24D5135B0(v131, v132, v133);
          uint64_t v138 = v135;

          swift_bridgeObjectRelease();
          if (!v135) {
            break;
          }
          uint64_t v182 = (char *)v131;
          LODWORD(v183) = v132;
          LODWORD(v184) = v133;
          v185 = v134;
          v189 = v135;
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
          sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
          if ((swift_dynamicCast() & 1) == 0)
          {
            sub_24D5135B0(v182, v183, v184);

            goto LABEL_62;
          }
          uint64_t v187 = v125;
          uint64_t v176 = v192[0];
          id v139 = objc_msgSend(v192[0], sel_domain);
          uint64_t v140 = sub_24DCC97E8();
          uint64_t v142 = v141;

          id v118 = v180;
          id v143 = objc_msgSend(v180, sel_domain);
          uint64_t v144 = sub_24DCC97E8();
          uint64_t v146 = v145;

          if (v140 == v144 && v142 == v146)
          {
            swift_bridgeObjectRelease_n();
            uint64_t v125 = v187;
            uint64_t v119 = v173;
          }
          else
          {
            char v147 = sub_24DCCAE28();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v125 = v187;
            uint64_t v119 = v173;
            if ((v147 & 1) == 0)
            {
              sub_24D5135B0(v182, v183, v184);

              swift_bridgeObjectRelease();
LABEL_91:
              uint64_t v126 = v172;
              goto LABEL_63;
            }
          }
          id v148 = v176;
          id v149 = objc_msgSend(v176, sel_code);
          if (v149 == objc_msgSend(v118, sel_code))
          {
            swift_dynamicCastClassUnconditional();
            uint64_t v150 = *(void *)(*(void *)(swift_dynamicCastClassUnconditional() + 32) + 64);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C6A0);
            uint64_t v151 = swift_allocObject();
            *(_OWORD *)(v151 + 16) = v170;
            uint64_t v152 = v182;
            uint64_t v153 = v183;
            char v154 = v184;
            sub_24D4E4B98(v182, v183, v184);
            id v155 = v135;
            swift_bridgeObjectRetain();
            swift_retain();

            swift_bridgeObjectRelease();
            id v156 = v152;
            uint64_t v157 = v153;
            *(void *)(v151 + 32) = v152;
            *(unsigned char *)(v151 + 40) = v153;
            *(unsigned char *)(v151 + 41) = v154;
            *(unsigned char *)(v151 + 42) = (_BYTE)v179;
            uint64_t v158 = *(void *)(v151 + 16);
            if (v158)
            {
              uint64_t v159 = 0;
              while (1)
              {
                uint64_t v160 = v159 + 100;
                if (__OFADD__(v159, 100)) {
                  goto LABEL_98;
                }
                if (v158 >= v160) {
                  uint64_t v161 = v159 + 100;
                }
                else {
                  uint64_t v161 = v158;
                }
                if (v161 < v159) {
                  goto LABEL_99;
                }
                uint64_t v162 = *(void *)(v151 + 16);
                if (v162 < v159 || v162 < v161) {
                  goto LABEL_100;
                }
                MEMORY[0x270FA5388](v156);
                *(void *)&v168[-48] = v150;
                *(void *)&v168[-40] = v151;
                *(void *)&v168[-32] = v151 + 32;
                *(void *)&v168[-24] = v164;
                *(void *)&v168[-16] = v165;
                swift_bridgeObjectRetain();
                uint64_t v166 = v187;
                sub_24D82F618((uint64_t)sub_24D6D91B8, (uint64_t)&v168[-64]);
                uint64_t v187 = v166;
                if (v166)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  sub_24D40160C(v175, v169, 1);

                  swift_release();
                  swift_bridgeObjectRelease();

                  sub_24D5135B0(v182, v183, v184);
                  swift_bridgeObjectRelease();
                  return;
                }
                id v156 = (id)swift_bridgeObjectRelease();
                uint64_t v159 = v161;
                if (v158 <= v160)
                {
                  id v156 = v182;
                  uint64_t v157 = v183;
                  char v167 = v184;
                  goto LABEL_90;
                }
              }
            }
            char v167 = v154;
LABEL_90:
            sub_24D5135B0(v156, v157, v167);

            swift_bridgeObjectRelease();
            id v118 = v180;
            swift_bridgeObjectRelease();

            swift_release();
            uint64_t v125 = v187;
            uint64_t v119 = v173;
            goto LABEL_91;
          }
          sub_24D5135B0(v182, v183, v184);

          swift_bridgeObjectRelease();
          uint64_t v126 = v172;
LABEL_63:
          unint64_t v127 = (unint64_t)(v186 + 1);
          if (v186 + 1 == (char *)v178)
          {
            swift_bridgeObjectRelease();
            uint64_t v36 = v169;
            goto LABEL_95;
          }
        }
        sub_24D5135B0(v131, v132, v133);

LABEL_62:
        swift_bridgeObjectRelease();
        id v118 = v180;
        uint64_t v119 = v128;
        uint64_t v126 = v129;
        goto LABEL_63;
      }
      swift_bridgeObjectRelease();
LABEL_95:
      sub_24D40160C(v175, v36, 1);

LABEL_28:
      v181(0);
      return;
    }
LABEL_11:
    id v58 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v59 = a7;
    uint64_t v60 = sub_24DCC9068();
    os_log_type_t v61 = sub_24DCCA108();
    if (os_log_type_enabled(v60, v61))
    {
      uint64_t v62 = v33;
      uint64_t v63 = (uint8_t *)swift_slowAlloc();
      uint64_t v64 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v63 = 138412290;
      swift_getErrorValue();
      uint64_t v65 = (char *)sub_24DBA2828((uint64_t)v192[2]);
      v189 = v65;
      sub_24DCCA428();
      void *v64 = v65;

      _os_log_impl(&dword_24D3D0000, v60, v61, "🚦  resolved error %@ signaled, skipping unsupported error", v63, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v64, -1, -1);
      MEMORY[0x25332B030](v63, -1, -1);
    }
    else
    {
    }
    uint64_t v83 = v184;

    (*((void (**)(unsigned char *, uint64_t))v185 + 1))(v18, v83);
    goto LABEL_28;
  }
  v183 = *(char **)(a6 + 32);
  char v71 = *(unsigned char *)(a6 + 40);
  id v72 = (id)fpfs_current_or_default_log();
  id v73 = v21;
  sub_24DCC9088();
  id v74 = a7;
  uint64_t v75 = sub_24DCC9068();
  os_log_type_t v76 = sub_24DCCA108();
  if (os_log_type_enabled(v75, v76))
  {
    uint64_t v77 = swift_slowAlloc();
    uint64_t v78 = (void *)swift_slowAlloc();
    uint64_t v180 = (void *)swift_slowAlloc();
    v189 = (char *)v180;
    *(_DWORD *)uint64_t v77 = 138412546;
    v186 = v73;
    swift_getErrorValue();
    uint64_t v79 = sub_24DBA2828(v188);
    v192[0] = v79;
    sub_24DCCA428();
    *uint64_t v78 = v79;

    *(_WORD *)(v77 + 12) = 2080;
    uint64_t v80 = sub_24D3D4384((uint64_t)v183, v71);
    v192[0] = (void *)sub_24D418FB4(v80, v81, (uint64_t *)&v189);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_24D3D0000, v75, v76, "🚦  resolved error %@ for %s signaled, clearing this error's throttles", (uint8_t *)v77, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v78, -1, -1);
    unint64_t v82 = v180;
    swift_arrayDestroy();
    uint64_t v34 = v187;
    MEMORY[0x25332B030](v82, -1, -1);
    MEMORY[0x25332B030](v77, -1, -1);

    (*((void (**)(char *, uint64_t))v185 + 1))(v186, v184);
  }
  else
  {

    (*((void (**)(char *, uint64_t))v185 + 1))(v73, v184);
  }
  uint64_t v84 = (char *)sub_24DCC8818();
  uint64_t v85 = (void *)*((void *)v182 + 2);
  id v86 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  swift_dynamicCastClassUnconditional();
  uint64_t v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1994B0);
  uint64_t v88 = swift_dynamicCastClassUnconditional();
  uint64_t v89 = *(void *)(*(void *)(v88 + 24) + 64);
  v189 = v183;
  char v190 = v71;
  v192[0] = (void *)MEMORY[0x263F8EE78];
  MEMORY[0x270FA5388](v88);
  v168[-16] = 70;
  *(void *)&v168[-8] = &v189;
  swift_retain();
  sub_24D508378((uint64_t)sub_24D6D91F8, (uint64_t)&v168[-32], v89, v192);
  if (v34)
  {

    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  swift_release();
  uint64_t v90 = v192[0];
  uint64_t v182 = (char *)v192[0][2];
  if (!v182)
  {
LABEL_55:

    swift_bridgeObjectRelease();
    goto LABEL_28;
  }
  id v175 = v86;
  uint64_t v176 = v85;
  uint64_t v91 = 0;
  uint64_t v92 = (char **)(v192[0] + 11);
  long long v174 = xmmword_24DCCECE0;
  long long v173 = xmmword_24DCD6EA0;
  v186 = v84;
  char v177 = (void *)v87;
  uint64_t v179 = v192[0];
  while ((unint64_t)v91 < v90[2])
  {
    uint64_t v187 = v34;
    uint64_t v93 = v87;
    unint64_t v94 = *(v92 - 7);
    uint64_t v95 = *((unsigned __int8 *)v92 - 48);
    int v96 = *((unsigned __int8 *)v92 - 47);
    LODWORD(v183) = *((unsigned __int8 *)v92 - 46);
    uint64_t v97 = v92[3];
    id v98 = *v92;
    sub_24D4018B8(v94, v95, v96);
    unint64_t v99 = v98;
    swift_bridgeObjectRetain();
    sub_24D4018B8(v94, v95, v96);
    unsigned int v100 = v98;
    swift_bridgeObjectRetain();
    sub_24D40160C(v94, v95, v96);
    id v101 = v98;

    swift_bridgeObjectRelease();
    if (!v98)
    {
      sub_24D40160C(v94, v95, v96);

      swift_bridgeObjectRelease();
LABEL_37:
      uint64_t v84 = v186;
      uint64_t v87 = v93;
      goto LABEL_38;
    }
    LODWORD(v184) = v96;
    v185 = v97;
    v189 = v98;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
    if ((swift_dynamicCast() & 1) == 0)
    {
      sub_24D40160C(v94, v95, v184);

      swift_bridgeObjectRelease();
      uint64_t v90 = v179;
      goto LABEL_37;
    }
    uint64_t v180 = v192[0];
    id v102 = objc_msgSend(v192[0], sel_domain);
    os_log_t v178 = (os_log_t)sub_24DCC97E8();
    uint64_t v104 = v103;

    id v105 = objc_msgSend(v186, sel_domain);
    uint64_t v106 = sub_24DCC97E8();
    uint64_t v108 = v107;

    if (v178 == v106 && v104 == v108)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v87 = (uint64_t)v177;
    }
    else
    {
      char v109 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v34 = v187;
      uint64_t v87 = (uint64_t)v177;
      if ((v109 & 1) == 0)
      {
        sub_24D40160C(v94, v95, v184);

        swift_bridgeObjectRelease();
        uint64_t v84 = v186;
LABEL_54:
        uint64_t v90 = v179;
        goto LABEL_39;
      }
    }
    id v110 = v180;
    id v111 = objc_msgSend(v180, sel_code);
    uint64_t v84 = v186;
    if (v111 == objc_msgSend(v186, sel_code))
    {
      swift_dynamicCastClassUnconditional();
      uint64_t v112 = *(void *)(*(void *)(swift_dynamicCastClassUnconditional() + 24) + 64);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26986F560);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v174;
      char v114 = v184;
      sub_24D4018B8(v94, v95, v184);
      uint64_t v115 = v98;
      swift_bridgeObjectRetain();
      swift_retain();

      uint64_t v116 = swift_bridgeObjectRelease();
      *(void *)(inited + 32) = v94;
      *(unsigned char *)(inited + 40) = v95;
      *(unsigned char *)(inited + 41) = v114;
      *(unsigned char *)(inited + 42) = (_BYTE)v183;
      if (!*(void *)(inited + 16)) {
        goto LABEL_102;
      }
      MEMORY[0x270FA5388](v116);
      *(void *)&v168[-48] = v112;
      *(void *)&v168[-40] = inited;
      *(void *)&v168[-32] = inited + 32;
      *(_OWORD *)&v168[-24] = v173;
      uint64_t v117 = v187;
      sub_24D830468((uint64_t)sub_24D6D920C, (uint64_t)&v168[-64]);
      uint64_t v187 = v117;
      if (v117)
      {
        swift_release();
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        sub_24D40160C(v94, v95, v184);

        swift_bridgeObjectRelease();
        return;
      }
      sub_24D40160C(v94, v95, v184);

      swift_bridgeObjectRelease();
      swift_setDeallocating();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C6B0);
      swift_arrayDestroy();

      swift_release();
      uint64_t v34 = v187;
      uint64_t v84 = v186;
      uint64_t v87 = (uint64_t)v177;
      goto LABEL_54;
    }
    sub_24D40160C(v94, v95, v184);

    swift_bridgeObjectRelease();
    uint64_t v90 = v179;
LABEL_38:
    uint64_t v34 = v187;
LABEL_39:
    ++v91;
    v92 += 11;
    if (v182 == v91) {
      goto LABEL_55;
    }
  }
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
}

uint64_t sub_24D68BA90(char a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v32 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9398();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  *(unsigned char *)(v15 + 32) = a1;
  uint64_t v16 = &v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v17 = (void *)MEMORY[0x25332B1A0](&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  if (v17)
  {
    if (objc_msgSend(v17, sel_unableToStartup))
    {
      id v18 = sub_24D621D5C();
      a2();

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v19 = (void *)MEMORY[0x25332B1A0](v16);
    if (v19)
    {
      uint64_t v20 = v19;
      id v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_650;
      uint64_t v28 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v33 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v22 = v28;
      uint64_t v21 = v29;
      MEMORY[0x2533282B0](0, v13, v10, v28);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v8);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    }
  }
  uint64_t v23 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v24 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  char v25 = (void *)swift_allocObject();
  v25[2] = v4;
  v25[3] = sub_24D6E4F84;
  v25[4] = v14;
  v25[5] = sub_24D6C951C;
  v25[6] = v15;
  os_log_type_t v26 = v4;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"updateShouldRetryThrottledOperations(_:completionHandler:)", 58, 2, v23, v24, (uint64_t)sub_24D3E5BC8, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D68BEF0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(unsigned char *)(v9 + 24) = a4;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  swift_retain_n();
  swift_retain();
  sub_24D3FBC7C((uint64_t)"updateShouldRetryThrottledOperations(_:completionHandler:)", 58, 2, sub_24D6E4F84, v8, (uint64_t)sub_24D6D8FBC, v9);
  swift_release();

  return swift_release();
}

uint64_t sub_24D68BFEC(uint64_t a1, char a2, void (*a3)(void))
{
  uint64_t v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  swift_dynamicCastClassUnconditional();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1994B0);
  uint64_t v7 = swift_dynamicCastClassUnconditional();
  char v8 = ~a2;
  BOOL v9 = (a2 & 1) == 0;
  *(unsigned char *)(*(void *)(*(void *)(v7 + 24) + 64) + 105) = v9;
  swift_retain();
  swift_retain();
  if (v8)
  {
    sub_24D504580();
    swift_release();
    *(unsigned char *)(*(void *)(*(void *)(v7 + 32) + 64) + 105) = v9;
    swift_retain();
    sub_24D504580();
    goto LABEL_6;
  }
  sub_24D602528((uint64_t)&unk_26FFB7C98, (uint64_t)sub_24D6D8FE0, (uint64_t)sub_24D3E3974, (uint64_t)&block_descriptor_2994, (uint64_t (*)(uint64_t (*)(uint64_t), uint64_t))sub_24D6E4F88, (uint64_t)&unk_26FFB7CE8, (uint64_t)sub_24D6D900C);
  if (!v4)
  {
    swift_release();
    *(unsigned char *)(*(void *)(*(void *)(v7 + 32) + 64) + 105) = v9;
    swift_retain();
    sub_24D602528((uint64_t)&unk_26FFB7D60, (uint64_t)sub_24D6D8FE0, (uint64_t)sub_24D3E3980, (uint64_t)&block_descriptor_3011, (uint64_t (*)(uint64_t (*)(uint64_t), uint64_t))sub_24D6E4F88, (uint64_t)&unk_26FFB7DB0, (uint64_t)sub_24D6D90B0);
LABEL_6:
    swift_release();
    a3(0);
    return swift_release();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_24D68C294(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  char v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = a3;
  v8[5] = v3;
  swift_retain_n();
  id v9 = a1;
  id v10 = v3;
  sub_24D62564C((uint64_t)"listAvailableTestingOperations(with:completionHandler:)", 55, 2, (void (*)(void *, id))sub_24D5B34AC, v7, (uint64_t)sub_24D6C9530, (uint64_t)v8);
  swift_release();

  return swift_release();
}

uint64_t sub_24D68C380(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v19 = v10 | 0x6000000000000000;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a3;
  v11[3] = a4;
  v11[4] = a5;
  uint64_t v12 = a5;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = sub_24D6D8ED0;
  v13[3] = v11;
  v13[4] = a1;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D6E4F7C;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = v19;
  v15[4] = sub_24D6E4F7C;
  v15[5] = v13;
  swift_retain_n();
  swift_retain_n();
  id v16 = a2;
  swift_retain();
  id v17 = v12;
  swift_retain();
  swift_retain();
  sub_24D3FBC7C((uint64_t)"waitForStabilization(request:_:)", 32, 2, sub_24D6E4F84, v14, (uint64_t)sub_24D6E4FC8, (uint64_t)v15);
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24D68C560(id a1, char a2, void (*a3)(uint64_t, id), uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    id v10 = a1;
    a3(0, a1);
    sub_24D6D9EB8(a1, 1, MEMORY[0x263F8EEA0]);
  }
  else
  {
    uint64_t v7 = (void *)MEMORY[0x25332B1A0](a5 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = sub_24D6B68F8((uint64_t)a1, v8);

      a3(v9, 0);
      swift_bridgeObjectRelease();
    }
    else
    {
      id v11 = (id)FPDomainUnavailableError();
      a3(0, v11);
    }
  }
}

uint64_t sub_24D68C7BC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v10 = a2;
  sub_24D625A8C((uint64_t)"run(_:request:completionHandler:)", 33, 2, (void (*)(void *, id))sub_24D6E4F90, v8, (uint64_t)sub_24D6C9558, (uint64_t)v9);
  swift_release();

  return swift_release();
}

uint64_t sub_24D68C8B4(void *a1, unint64_t a2, void *a3, uint64_t a4, unint64_t a5)
{
  uint64_t v39 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)sub_24D42B234(MEMORY[0x263F8EE78]);
  if (a2 >> 62)
  {
LABEL_26:
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_24DCCA9C8();
    if (v13) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v13)
    {
LABEL_3:
      uint64_t v35 = v9;
      uint64_t v36 = a3;
      unint64_t v37 = a5;
      id v38 = a1;
      unint64_t v41 = a2 & 0xC000000000000001;
      uint64_t v14 = 4;
      while (1)
      {
        uint64_t v9 = v14 - 4;
        if (v41)
        {
          id v16 = (id)MEMORY[0x253328820](v14 - 4, a2);
          a1 = (void *)(v14 - 3);
          if (__OFADD__(v9, 1)) {
            goto LABEL_23;
          }
        }
        else
        {
          id v16 = *(id *)(a2 + 8 * v14);
          a1 = (void *)(v14 - 3);
          if (__OFADD__(v9, 1))
          {
LABEL_23:
            __break(1u);
LABEL_24:
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
        }
        a3 = (void *)v13;
        uint64_t v9 = (uint64_t)v16;
        sub_24DA027D0((void *)v9, (uint64_t)v11);
        id v17 = (id)v9;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        os_log_type_t v42 = v12;
        a5 = sub_24D6ADA20((uint64_t)v11);
        uint64_t v20 = v12[2];
        BOOL v21 = (v19 & 1) == 0;
        uint64_t v22 = v20 + v21;
        if (__OFADD__(v20, v21)) {
          goto LABEL_24;
        }
        uint64_t v9 = v19;
        if (v12[3] >= v22)
        {
          if (isUniquelyReferenced_nonNull_native)
          {
            uint64_t v12 = v42;
            if (v19) {
              goto LABEL_4;
            }
          }
          else
          {
            sub_24DC7C084();
            uint64_t v12 = v42;
            if (v9) {
              goto LABEL_4;
            }
          }
        }
        else
        {
          sub_24D70309C(v22, isUniquelyReferenced_nonNull_native);
          unint64_t v23 = sub_24D6ADA20((uint64_t)v11);
          if ((v9 & 1) != (v24 & 1))
          {
            uint64_t result = sub_24DCCAF18();
            __break(1u);
            return result;
          }
          a5 = v23;
          uint64_t v12 = v42;
          if (v9)
          {
LABEL_4:
            uint64_t v15 = v12[7];

            *(void *)(v15 + 8 * a5) = v17;
            goto LABEL_5;
          }
        }
        v12[(a5 >> 6) + 8] |= 1 << a5;
        sub_24D415FD0((uint64_t)v11, v12[6] + *(void *)(v40 + 72) * a5, &qword_26B18FF40);
        *(void *)(v12[7] + 8 * a5) = v17;
        uint64_t v25 = v12[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_25;
        }
        v12[2] = v27;
LABEL_5:
        swift_bridgeObjectRelease();
        sub_24D415F74((uint64_t)v11, &qword_26B18FF40);

        ++v14;
        uint64_t v13 = (uint64_t)a3;
        if (a1 == a3)
        {
          swift_bridgeObjectRelease();
          a5 = v37;
          a3 = v36;
          goto LABEL_28;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v28 = swift_bridgeObjectRetain();
  size_t v29 = sub_24D8F1404(v28);
  swift_bridgeObjectRelease();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = a3;
  unint64_t v31 = v30 | 0x6000000000000002;
  uint64_t v32 = (void *)swift_allocObject();
  v32[2] = v39;
  v32[3] = a5;
  v32[4] = v12;
  id v33 = a3;
  swift_retain();
  sub_24D68D218(v29, v31, (uint64_t)sub_24D6D7588, (uint64_t)v32);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D68CC54(void *a1, char a2, void (*a3)(unint64_t, void *), uint64_t a4, uint64_t a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v70 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v71 = (uint64_t)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C688);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  id v17 = (char *)&v63 - v16;
  if (a2)
  {
    uint64_t v62 = a1;
    a3(0, a1);
    sub_24D6D9EB8(a1, 1, MEMORY[0x263F8EEA0]);
    return;
  }
  uint64_t v65 = a4;
  uint64_t v66 = (void (*)(unint64_t, void))a3;
  swift_bridgeObjectRetain();
  unint64_t v18 = sub_24D42B43C(MEMORY[0x263F8EE78]);
  int64_t v72 = 0;
  unint64_t v73 = v18;
  id v69 = a1;
  uint64_t v21 = a1[8];
  uint64_t v20 = a1 + 8;
  uint64_t v19 = v21;
  uint64_t v22 = 1 << *((unsigned char *)v20 - 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  unint64_t v24 = v23 & v19;
  char v67 = v20;
  int64_t v68 = (unint64_t)(v22 + 63) >> 6;
  int64_t v64 = v68 - 1;
  while (1)
  {
    if (v24)
    {
      unint64_t v26 = __clz(__rbit64(v24));
      v24 &= v24 - 1;
      unint64_t v27 = v26 | (v72 << 6);
LABEL_9:
      uint64_t v28 = v69;
      sub_24D415FD0(v69[6] + *(void *)(v70 + 72) * v27, (uint64_t)v15, &qword_26B18FF40);
      uint64_t v29 = v28[7];
      uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C690);
      unint64_t v31 = *(void **)(v29 + 8 * v27);
      *(void *)&v15[*(int *)(v30 + 48)] = v31;
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v15, 0, 1, v30);
      id v32 = v31;
      goto LABEL_28;
    }
    int64_t v33 = v72 + 1;
    if (__OFADD__(v72, 1)) {
      goto LABEL_46;
    }
    if (v33 < v68)
    {
      unint64_t v34 = v67[v33];
      if (v34) {
        goto LABEL_13;
      }
      int64_t v35 = v72 + 2;
      ++v72;
      if (v33 + 1 < v68)
      {
        unint64_t v34 = v67[v35];
        if (v34) {
          goto LABEL_16;
        }
        int64_t v72 = v33 + 1;
        if (v33 + 2 < v68)
        {
          unint64_t v34 = v67[v33 + 2];
          if (v34)
          {
            v33 += 2;
            goto LABEL_13;
          }
          int64_t v35 = v33 + 3;
          int64_t v72 = v33 + 2;
          if (v33 + 3 < v68) {
            break;
          }
        }
      }
    }
LABEL_27:
    uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C690);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v15, 1, 1, v36);
    unint64_t v24 = 0;
LABEL_28:
    sub_24D3F0BA0((uint64_t)v15, (uint64_t)v17, &qword_26986C688);
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C690);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v37 - 8) + 48))(v17, 1, v37) == 1)
    {
      swift_release();
      v66(v73, 0);
      swift_bridgeObjectRelease();
      return;
    }
    id v38 = *(void **)&v17[*(int *)(v37 + 48)];
    uint64_t v39 = v71;
    sub_24D3F0BA0((uint64_t)v17, v71, &qword_26B18FF40);
    if (!*(void *)(a5 + 16))
    {
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      goto LABEL_47;
    }
    unint64_t v40 = sub_24D6ADA20(v39);
    if ((v41 & 1) == 0) {
      goto LABEL_43;
    }
    os_log_type_t v42 = v15;
    uint64_t v43 = a5;
    id v44 = *(id *)(*(void *)(a5 + 56) + 8 * v40);
    sub_24D415F74(v39, &qword_26B18FF40);
    id v45 = v38;
    uint64_t v46 = (void *)v73;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v74 = v46;
    unint64_t v49 = sub_24D6ADFE4((uint64_t)v44);
    uint64_t v50 = v46[2];
    BOOL v51 = (v48 & 1) == 0;
    uint64_t v52 = v50 + v51;
    if (__OFADD__(v50, v51)) {
      goto LABEL_44;
    }
    char v53 = v48;
    if (v46[3] >= v52)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_24DC7C578();
      }
    }
    else
    {
      sub_24D7035D8(v52, isUniquelyReferenced_nonNull_native);
      unint64_t v54 = sub_24D6ADFE4((uint64_t)v44);
      if ((v53 & 1) != (v55 & 1)) {
        goto LABEL_48;
      }
      unint64_t v49 = v54;
    }
    uint64_t v56 = v74;
    unint64_t v73 = (unint64_t)v74;
    if (v53)
    {
      uint64_t v25 = v74[7];

      *(void *)(v25 + 8 * v49) = v38;
    }
    else
    {
      v74[(v49 >> 6) + 8] |= 1 << v49;
      uint64_t v57 = 8 * v49;
      *(void *)(v56[6] + v57) = v44;
      *(void *)(v56[7] + v57) = v38;
      uint64_t v58 = v56[2];
      BOOL v59 = __OFADD__(v58, 1);
      uint64_t v60 = v58 + 1;
      if (v59) {
        goto LABEL_45;
      }
      v56[2] = v60;
      id v61 = v44;
    }

    swift_bridgeObjectRelease();
    a5 = v43;
    uint64_t v15 = v42;
  }
  unint64_t v34 = v67[v35];
  if (v34)
  {
LABEL_16:
    int64_t v33 = v35;
LABEL_13:
    unint64_t v24 = (v34 - 1) & v34;
    unint64_t v27 = __clz(__rbit64(v34)) + (v33 << 6);
    int64_t v72 = v33;
    goto LABEL_9;
  }
  while (1)
  {
    int64_t v33 = v35 + 1;
    if (__OFADD__(v35, 1)) {
      break;
    }
    if (v33 >= v68)
    {
      int64_t v72 = v64;
      goto LABEL_27;
    }
    unint64_t v34 = v67[v33];
    ++v35;
    if (v34) {
      goto LABEL_13;
    }
  }
LABEL_47:
  __break(1u);
LABEL_48:
  sub_24D3FB6F8(0, (unint64_t *)&unk_26986C538);
  sub_24DCCAF18();
  __break(1u);
}

uint64_t sub_24D68D218(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = a3;
  v10[3] = a4;
  v10[4] = v5;
  v10[5] = a1;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = sub_24D6D75B0;
  v11[3] = v10;
  v11[4] = v5;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D6D75F8;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = v5;
  v13[3] = a2;
  v13[4] = sub_24D6D75F8;
  v13[5] = v11;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24D40B3C8(a2);
  sub_24D3FBC7C((uint64_t)"waitForStabilization(request:_:)", 32, 2, sub_24D6E4F84, v12, (uint64_t)sub_24D6D7608, (uint64_t)v13);
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24D68D538(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  if (a1)
  {
    sub_24D3FB6F8(0, (unint64_t *)&unk_26986C538);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
    sub_24D6D1488(&qword_26986C548, (unint64_t *)&unk_26986C538);
    uint64_t v5 = (void *)sub_24DCC9558();
  }
  if (a2) {
    uint64_t v6 = sub_24DCC8818();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_24D68D640(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F054A0]), sel_init);
  dispatch_group_t v6 = dispatch_group_create();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v5;
  v8[5] = v6;
  v8[6] = v2;
  swift_retain_n();
  swift_retain();
  uint64_t v9 = v6;
  id v10 = v2;
  sub_24D62498C((uint64_t)"importProgressForItemsPendingReconciliation(completionHandler:)", 63, 2, (void (*)(void *, id))sub_24D6E4F8C, v7, (uint64_t)sub_24D6C9568, (uint64_t)v8);
  swift_release();

  swift_release();

  return swift_release();
}

void sub_24D68D788(uint64_t a1, void (*a2)(void, id), uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v12;
    v14[3] = a4;
    v14[4] = a5;
    v14[5] = a6;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_24D6E4F8C;
    *(void *)(v15 + 24) = v13;
    swift_retain_n();
    swift_retain();
    swift_retain();
    id v16 = a5;
    id v17 = a6;
    swift_retain();
    sub_24D3FBC7C((uint64_t)"importProgressForItemsPendingReconciliation(completionHandler:)", 63, 2, sub_24D6E5EF4, v15, (uint64_t)sub_24D6D7520, (uint64_t)v14);
    swift_release();
    swift_release();
    swift_release();
    unint64_t v18 = *(void **)&v17[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a2;
    v19[3] = a3;
    v19[4] = a4;
    swift_retain();
    swift_retain();
    sub_24D3E2DA8((uint64_t)"importProgressForItemsPendingReconciliation(completionHandler:)", 63, 2, 0, v18, (uint64_t)sub_24D6E5E28, (uint64_t)v19);
    swift_release();
    swift_release();
  }
  else
  {
    id v20 = (id)FPNotSupportedError();
    a2(0, v20);
  }
}

void sub_24D68D9E4(unint64_t a1, void *a2, void *a3, NSObject *a4)
{
}

uint64_t sub_24D68DA24(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F054A0]), sel_init);
  dispatch_group_t v6 = dispatch_group_create();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v5;
  v8[5] = v6;
  v8[6] = v2;
  swift_retain_n();
  swift_retain();
  uint64_t v9 = v6;
  id v10 = v2;
  sub_24D62498C((uint64_t)"importProgressForItemsPendingScanningDisk(completionHandler:)", 61, 2, (void (*)(void *, id))sub_24D6E4F8C, v7, (uint64_t)sub_24D6C9584, (uint64_t)v8);
  swift_release();

  swift_release();

  return swift_release();
}

void sub_24D68DB6C(uint64_t a1, void (*a2)(void, id), uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v12;
    v14[3] = a4;
    v14[4] = a5;
    v14[5] = a6;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_24D6E4F8C;
    *(void *)(v15 + 24) = v13;
    swift_retain_n();
    swift_retain();
    swift_retain();
    id v16 = a5;
    id v17 = a6;
    swift_retain();
    sub_24D3FBC7C((uint64_t)"importProgressForItemsPendingScanningDisk(completionHandler:)", 61, 2, sub_24D6E5EF4, v15, (uint64_t)sub_24D6D7460, (uint64_t)v14);
    swift_release();
    swift_release();
    swift_release();
    unint64_t v18 = *(void **)&v17[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    uint64_t v19 = (void *)swift_allocObject();
    v19[2] = a2;
    v19[3] = a3;
    v19[4] = a4;
    swift_retain();
    swift_retain();
    sub_24D3E2DA8((uint64_t)"importProgressForItemsPendingScanningDisk(completionHandler:)", 61, 2, 0, v18, (uint64_t)sub_24D6D74AC, (uint64_t)v19);
    swift_release();
    swift_release();
  }
  else
  {
    id v20 = (id)FPNotSupportedError();
    a2(0, v20);
  }
}

void sub_24D68DDC8(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(void))
{
  swift_beginAccess();
  uint64_t v9 = *(void **)(a2 + 16);
  id v10 = a3;
  id v11 = a4;
  id v12 = v9;
  a5();
}

uint64_t sub_24D68DEA4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F054A0]), sel_init);
  dispatch_group_t v6 = dispatch_group_create();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a2;
  v8[4] = v5;
  v8[5] = v6;
  v8[6] = v2;
  swift_retain_n();
  swift_retain();
  uint64_t v9 = v6;
  id v10 = v2;
  sub_24D62498C((uint64_t)"importProgressForItemsPendingScanningProvider(completionHandler:)", 65, 2, (void (*)(void *, id))sub_24D6E4F8C, v7, (uint64_t)sub_24D6C95F0, (uint64_t)v8);
  swift_release();

  swift_release();

  return swift_release();
}

void sub_24D68DFEC(uint64_t a1, void (*a2)(void, id), uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v11 = swift_dynamicCastClass();
  if (v11)
  {
    uint64_t v12 = v11;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = a2;
    *(void *)(v13 + 24) = a3;
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v12;
    v14[3] = a4;
    v14[4] = a5;
    v14[5] = a6;
    v14[6] = a2;
    v14[7] = a3;
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = sub_24D6E4F8C;
    *(void *)(v15 + 24) = v13;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    id v16 = a5;
    id v17 = a6;
    swift_retain();
    sub_24D3FBC7C((uint64_t)"importProgressForItemsPendingScanningProvider(completionHandler:)", 65, 2, sub_24D4C72D0, v15, (uint64_t)sub_24D6D7418, (uint64_t)v14);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    id v18 = (id)FPNotSupportedError();
    a2(0, v18);
  }
}

void sub_24D68E1CC(uint64_t a1, uint64_t a2, void *a3, void *a4, uint64_t a5, uint64_t a6)
{
  swift_beginAccess();
  uint64_t v13 = *(void **)(a2 + 16);
  id v14 = a3;
  uint64_t v15 = a4;
  id v16 = v13;
  sub_24DA0F934(v16, a1, v14, v15);

  if (!v6)
  {
    id v17 = *(void **)&v15[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    id v18 = (void *)swift_allocObject();
    v18[2] = a5;
    v18[3] = a6;
    v18[4] = a2;
    swift_retain();
    swift_retain();
    sub_24D3E2DA8((uint64_t)"importProgressForItemsPendingScanningProvider(completionHandler:)", 65, 2, 0, v17, (uint64_t)sub_24D6E5E28, (uint64_t)v18);
    swift_release();
  }
}

void sub_24D68E2F8(unint64_t a1, void *a2, void *a3, NSObject *a4, const char *a5)
{
  uint64_t v10 = sub_24DCC9078();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v14 = a2;
    id v15 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v16 = a2;
    id v17 = a2;
    id v18 = sub_24DCC9068();
    os_log_type_t v19 = sub_24DCCA128();
    if (os_log_type_enabled(v18, v19))
    {
      int64_t v33 = a3;
      uint64_t v20 = swift_slowAlloc();
      unint64_t v34 = a4;
      uint64_t v21 = (uint8_t *)v20;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v32 = v10;
      uint64_t v30 = (void *)v22;
      unint64_t v31 = a5;
      *(_DWORD *)uint64_t v21 = 138412290;
      id v23 = a2;
      uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v35 = v24;
      sub_24DCCA428();
      uint64_t v25 = v30;
      *uint64_t v30 = v24;
      a3 = v33;

      _os_log_impl(&dword_24D3D0000, v18, v19, v31, v21, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      unint64_t v26 = v25;
      uint64_t v10 = v32;
      MEMORY[0x25332B030](v26, -1, -1);
      unint64_t v27 = v21;
      a4 = v34;
      MEMORY[0x25332B030](v27, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  if (!a1)
  {
    uint64_t v28 = 0;
    goto LABEL_15;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v28 = (void *)sub_24DCCA9C8();
    if (!v28) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v28 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v28)
    {
LABEL_13:
      swift_bridgeObjectRelease();
LABEL_15:
      objc_msgSend(a3, sel_setDiagnosticAttributes_, v28);

      dispatch_group_leave(a4);
      return;
    }
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v29 = (id)MEMORY[0x253328820](0, a1);
    goto LABEL_12;
  }
  if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v29 = *(id *)(a1 + 32);
LABEL_12:
    uint64_t v28 = v29;
    goto LABEL_13;
  }
  __break(1u);
}

void sub_24D68E600(void (*a1)(void *, void), uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t v5 = *(void **)(a3 + 16);
  id v6 = v5;
  a1(v5, 0);
}

uint64_t sub_24D68E6A0(void *a1, int a2, void *aBlock, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t))
{
  uint64_t v9 = _Block_copy(aBlock);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v9;
  id v11 = a1;
  a6(a5, v10);

  return swift_release();
}

uint64_t sub_24D68E734(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9398();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  id v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  id v16 = &v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v17 = (void *)MEMORY[0x25332B1A0](&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_unknownObjectRetain();
  if (v17)
  {
    if (objc_msgSend(v17, sel_unableToStartup))
    {
      id v18 = sub_24D621D5C();
      a2();

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    os_log_type_t v19 = (void *)MEMORY[0x25332B1A0](v16);
    if (v19)
    {
      uint64_t v20 = v19;
      id v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_700;
      uint64_t v21 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v34 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v22 = v33;
      sub_24DCCA5B8();
      id v23 = v29;
      MEMORY[0x2533282B0](0, v13, v10, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v22);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    }
  }
  uint64_t v24 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v25 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  unint64_t v26 = (void *)swift_allocObject();
  v26[2] = v4;
  v26[3] = sub_24D6E4F84;
  v26[4] = v14;
  v26[5] = sub_24D6C9624;
  v26[6] = v15;
  unint64_t v27 = v4;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"subscribe(toUploadProgressUpdates:completionHandler:)", 53, 2, v24, v25, (uint64_t)sub_24D3E5BC8, (uint64_t)v26);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D68EB9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  swift_retain_n();
  swift_retain();
  swift_unknownObjectRetain();
  sub_24D3FBC7C((uint64_t)"subscribeToUploadProgressUpdates(_:completionHandler:)", 54, 2, sub_24D6E4F84, v8, (uint64_t)sub_24D6D73F4, (uint64_t)v9);
  swift_release();

  return swift_release();
}

uint64_t sub_24D68ECB4(uint64_t a1, void (*a2)(void), uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9398();
  uint64_t v30 = *(void *)(v11 - 8);
  uint64_t v31 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  id v15 = (void *)swift_allocObject();
  v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  id v16 = &v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v17 = (void *)MEMORY[0x25332B1A0](&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_unknownObjectRetain();
  if (v17)
  {
    if (objc_msgSend(v17, sel_unableToStartup))
    {
      id v18 = sub_24D621D5C();
      a2();

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    os_log_type_t v19 = (void *)MEMORY[0x25332B1A0](v16);
    if (v19)
    {
      uint64_t v20 = v19;
      id v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_714;
      uint64_t v21 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v34 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v22 = v33;
      sub_24DCCA5B8();
      id v23 = v29;
      MEMORY[0x2533282B0](0, v13, v10, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v10, v22);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    }
  }
  uint64_t v24 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v25 = *(void **)&v4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  unint64_t v26 = (void *)swift_allocObject();
  v26[2] = v4;
  v26[3] = sub_24D6E4F84;
  v26[4] = v14;
  v26[5] = sub_24D6C9650;
  v26[6] = v15;
  unint64_t v27 = v4;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"subscribe(toDownloadProgressUpdates:completionHandler:)", 55, 2, v24, v25, (uint64_t)sub_24D3E5BC8, (uint64_t)v26);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D68F11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a3;
  *(void *)(v8 + 24) = a4;
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  v9[5] = a4;
  swift_retain_n();
  swift_retain();
  swift_unknownObjectRetain();
  sub_24D3FBC7C((uint64_t)"subscribeToDownloadProgressUpdates(_:completionHandler:)", 56, 2, sub_24D6E4F84, v8, (uint64_t)sub_24D6D7364, (uint64_t)v9);
  swift_release();

  return swift_release();
}

void sub_24D68F234(void *a1, int a2, uint64_t a3, void *aBlock, void (*a5)(uint64_t, id, void *))
{
  uint64_t v8 = _Block_copy(aBlock);
  _Block_copy(v8);
  swift_unknownObjectRetain();
  id v9 = a1;
  a5(a3, v9, v8);
  _Block_release(v8);
  _Block_release(v8);
  swift_unknownObjectRelease();
}

uint64_t sub_24D68F2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a1;
  *(void *)(v5 + 24) = a2;
  swift_retain_n();
  sub_24D625ECC((uint64_t)"getCountersArray(completionHandler:)", 36, 2, (void (*)(void *, id))sub_24D5B3FA4, v4, (uint64_t)sub_24D6C9660, v5);
  swift_release();

  return swift_release();
}

uint64_t sub_24D68F3A4(uint64_t a1, void (*a2)(void))
{
  uint64_t v4 = type metadata accessor for FPDDomainFPFSBackend.Counters(0);
  uint64_t v5 = (int *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = &v15[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = *(void *)(v8 + 32);
  type metadata accessor for VFSFileTree(0);
  uint64_t v10 = swift_dynamicCastClassUnconditional() + qword_26B1A25B8;
  swift_beginAccess();
  sub_24D40B474(v10, (uint64_t)v7, type metadata accessor for VFSCounters);
  uint64_t v11 = v8 + qword_26B1A26B0;
  swift_beginAccess();
  sub_24D40B474(v11, (uint64_t)&v7[v5[7]], (uint64_t (*)(void))type metadata accessor for DBCounters);
  uint64_t v12 = v9 + qword_26B1A24E0;
  swift_beginAccess();
  sub_24D40B474(v12, (uint64_t)&v7[v5[8]], (uint64_t (*)(void))type metadata accessor for SnapshotCounters);
  uint64_t v13 = *(void *)(v8 + 40) + qword_26B1A24E0;
  swift_beginAccess();
  sub_24D40B474(v13, (uint64_t)&v7[v5[9]], (uint64_t (*)(void))type metadata accessor for SnapshotCounters);
  sub_24D60A58C();
  a2();
  swift_bridgeObjectRelease();
  return sub_24D3FC974((uint64_t)v7, type metadata accessor for FPDDomainFPFSBackend.Counters);
}

void sub_24D68F6D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    uint64_t v5 = (void *)sub_24DCC9C18();
    if (a2)
    {
LABEL_3:
      uint64_t v6 = sub_24DCC8818();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v5 = 0;
    if (a2) {
      goto LABEL_3;
    }
  }
  uint64_t v6 = 0;
LABEL_6:
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_24D68F76C(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = &v2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v15 = (void *)MEMORY[0x25332B1A0](v14);
  swift_retain_n();
  if (v15)
  {
    if (objc_msgSend(v15, sel_unableToStartup))
    {
      id v16 = sub_24D621D5C();
      a1();

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v17 = (void *)MEMORY[0x25332B1A0](v14);
    if (v17)
    {
      id v18 = v17;
      id v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_734;
      unint64_t v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v20 = v26;
      os_log_type_t v19 = v27;
      MEMORY[0x2533282B0](0, v11, v8, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
    }
  }
  uint64_t v21 = *(void **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v22 = *(void **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v23 = (void *)swift_allocObject();
  v23[2] = v3;
  v23[3] = sub_24D6E4F84;
  v23[4] = v12;
  v23[5] = sub_24D6C9668;
  v23[6] = v13;
  uint64_t v24 = v3;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"resetCounters(completionHandler:)", 33, 2, v21, v22, (uint64_t)sub_24D3E5BC8, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D68FBC4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = (void *)(*(void *)(v3 + 32) + qword_26B1A24E0);
  swift_beginAccess();
  swift_retain();
  sub_24D3FC974((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for SnapshotCounters);
  type metadata accessor for SnapshotCounters();
  v4[1] = 0;
  v4[2] = 0;
  void *v4 = 0;
  sub_24DCC8CB8();
  swift_endAccess();
  swift_release();
  uint64_t v5 = (void *)(*(void *)(v3 + 40) + qword_26B1A24E0);
  swift_beginAccess();
  swift_retain();
  sub_24D3FC974((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SnapshotCounters);
  v5[1] = 0;
  v5[2] = 0;
  *uint64_t v5 = 0;
  sub_24DCC8CB8();
  swift_endAccess();
  swift_release();
  type metadata accessor for VFSFileTree(0);
  uint64_t v6 = (void *)(swift_dynamicCastClassUnconditional() + qword_26B1A25B8);
  swift_beginAccess();
  swift_retain();
  sub_24D3FC974((uint64_t)v6, type metadata accessor for VFSCounters);
  type metadata accessor for VFSCounters(0);
  v6[1] = 0;
  v6[2] = 0;
  *uint64_t v6 = 0;
  sub_24DCC8CB8();
  swift_endAccess();
  swift_release();
  uint64_t v7 = (void *)(v3 + qword_26B1A26B0);
  swift_beginAccess();
  sub_24D3FC974((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for DBCounters);
  *uint64_t v7 = 0;
  type metadata accessor for DBCounters();
  sub_24DCC8CB8();
  swift_endAccess();
  return a2(0);
}

uint64_t sub_24D68FE04(void (*a1)(void, id), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D6C9674;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = sub_24D6C9674;
  v14[3] = v12;
  v14[4] = a1;
  v14[5] = a2;
  id v15 = &v2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v16 = (void *)MEMORY[0x25332B1A0](v15);
  swift_retain_n();
  swift_retain_n();
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v17 = sub_24D621D5C();
      a1(0, v17);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v18 = (void *)MEMORY[0x25332B1A0](v15);
    if (v18)
    {
      os_log_type_t v19 = v18;
      id v30 = objc_msgSend(v18, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_751;
      uint64_t v29 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v35 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v20 = v34;
      sub_24DCCA5B8();
      uint64_t v22 = v29;
      uint64_t v21 = v30;
      MEMORY[0x2533282B0](0, v11, v8, v29);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v20);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
    }
  }
  id v23 = *(void **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v24 = *(void **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v25 = (void *)swift_allocObject();
  v25[2] = v3;
  v25[3] = sub_24D6E4F84;
  v25[4] = v13;
  v25[5] = sub_24D6C96A8;
  v25[6] = v14;
  unint64_t v26 = v3;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"hasNonUploadedFiles(completionHandler:)", 39, 2, v23, v24, (uint64_t)sub_24D3E5BC8, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6902B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  *(void *)(v10 + 24) = a3;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a1;
  v11[3] = a4;
  v11[4] = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D3FBC7C((uint64_t)"hasNonUploadedFiles(completionHandler:)", 39, 2, sub_24D6E4F84, v10, (uint64_t)sub_24D6D7308, (uint64_t)v11);
  swift_release();

  return swift_release();
}

uint64_t sub_24D6903B0(uint64_t a1, uint64_t (*a2)(BOOL, void))
{
  uint64_t v4 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a1 + 16) + 16) + 528);
  uint64_t v5 = swift_retain();
  uint64_t v6 = v4(v5);
  uint64_t v8 = v7;
  uint64_t result = swift_release();
  if (!v2) {
    return a2((v6 | v8) != 0, 0);
  }
  return result;
}

void sub_24D690474(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t v11 = (void *)sub_24DCC8948();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = a4;
  v12[3] = a5;
  v12[4] = v5;
  v12[5] = a1;
  v16[4] = sub_24D6C96D4;
  v16[5] = v12;
  v16[0] = MEMORY[0x263EF8330];
  v16[1] = 1107296256;
  v16[2] = sub_24D418084;
  v16[3] = &block_descriptor_761;
  uint64_t v13 = _Block_copy(v16);
  swift_retain();
  id v14 = v6;
  id v15 = a1;
  swift_release();
  objc_msgSend(v14, sel_itemIDForURL_requireProviderItemID_request_completionHandler_, v11, 0, a3, v13);
  _Block_release(v13);
}

uint64_t sub_24D69059C(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4, uint64_t a5, void *a6)
{
  if (!a1) {
    return a3();
  }
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a4;
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = a6;
  v11[3] = a1;
  v11[4] = a3;
  v11[5] = a4;
  id v12 = a1;
  swift_retain_n();
  id v13 = v12;
  id v14 = a6;
  sub_24D623CCC((uint64_t)"setAlternateContentsURLWrapper(_:forDocumentWith:request:completionHandler:)", 76, 2, (void (*)(void *, id))sub_24D6E4F8C, v10, (uint64_t)sub_24D6D7298, (uint64_t)v11);

  swift_release();

  return swift_release();
}

void sub_24D6908FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

uint64_t sub_24D690924(void *a1, uint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (!a1) {
    return a3();
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a3;
  *(void *)(v7 + 24) = a4;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = a3;
  v8[4] = a4;
  id v9 = a1;
  swift_retain_n();
  id v10 = v9;
  sub_24D62630C((uint64_t)"fetchAlternateContentsURLWrapperForDocument(with:request:completionHandler:)", 76, 2, (void (*)(void *, id))sub_24D6E4F8C, v7, (uint64_t)sub_24D6D71D0, (uint64_t)v8);

  swift_release();

  return swift_release();
}

void sub_24D690C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
}

void sub_24D690C80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v10 = v7;
  id v14 = (void *)sub_24DCC8948();
  id v15 = (void *)swift_allocObject();
  v15[2] = a3;
  v15[3] = a4;
  v15[4] = v7;
  v18[4] = a6;
  v18[5] = v15;
  v18[0] = MEMORY[0x263EF8330];
  v18[1] = 1107296256;
  v18[2] = sub_24D418084;
  v18[3] = a7;
  id v16 = _Block_copy(v18);
  swift_retain();
  id v17 = v10;
  swift_release();
  objc_msgSend(v17, sel_itemIDForURL_requireProviderItemID_request_completionHandler_, v14, 0, a2, v16);
  _Block_release(v16);
}

uint64_t sub_24D690D98(void *a1, uint64_t a2, void (*a3)(void), uint64_t a4, unsigned char *a5)
{
  uint64_t v10 = sub_24DCC92F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return ((uint64_t (*)(uint64_t))a3)(a2);
  }
  uint64_t v37 = v16;
  uint64_t v38 = v15;
  uint64_t v39 = v11;
  uint64_t v40 = v10;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a3;
  *(void *)(v19 + 24) = a4;
  uint64_t v20 = (void *)swift_allocObject();
  v20[2] = a3;
  v20[3] = a4;
  v20[4] = a1;
  uint64_t v21 = &a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v22 = (void *)MEMORY[0x25332B1A0](&a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  id v23 = a1;
  if (!v22) {
    goto LABEL_7;
  }
  if (!objc_msgSend(v22, sel_unableToStartup))
  {

LABEL_7:
    id v41 = v23;
    if ((a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
    {
      unint64_t v26 = (void *)MEMORY[0x25332B1A0](v21);
      if (v26)
      {
        id v27 = v26;
        id v36 = objc_msgSend(v26, sel_serialQueue);

        aBlock[4] = nullsub_1;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24D3D2E94;
        aBlock[3] = &block_descriptor_2697;
        uint64_t v28 = _Block_copy(aBlock);
        sub_24DCC9348();
        uint64_t v42 = MEMORY[0x263F8EE78];
        sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
        sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
        uint64_t v29 = v40;
        sub_24DCCA5B8();
        id v30 = v36;
        MEMORY[0x2533282B0](0, v18, v13, v28);
        _Block_release(v28);

        (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v29);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v18, v38);
      }
    }
    uint64_t v31 = *(void **)&a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
    uint64_t v32 = *(void **)&a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    uint64_t v33 = (void *)swift_allocObject();
    v33[2] = a5;
    v33[3] = sub_24D6E4F84;
    v33[4] = v19;
    v33[5] = sub_24D6D7160;
    v33[6] = v20;
    uint64_t v34 = a5;
    swift_retain();
    swift_retain();
    sub_24D3E2DA8((uint64_t)"didUpdateAlternateContentsDocumentForDocument(with:request:completionHandler:)", 78, 2, v31, v32, (uint64_t)sub_24D3E5BC8, (uint64_t)v33);
    swift_release();
    swift_release();
    swift_release();
    id v23 = v41;
    goto LABEL_11;
  }
  id v24 = sub_24D621D5C();
  a3();

  swift_release();
  swift_release();

LABEL_11:
  return swift_release();
}

void sub_24D691240(uint64_t a1, void (*a2)(void), uint64_t a3, void *a4)
{
  uint64_t v8 = sub_24DCC9078();
  id v9 = *(void (***)(char *, uint64_t))(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v12 = swift_dynamicCastClass();
  if (v12)
  {
    uint64_t v13 = v12;
    uint64_t v14 = *(void **)(a1 + 32);
    swift_retain();
    id v15 = objc_msgSend(v14, sel_getAlternateContentsURLWrapperForItemID_, a4);

    if (v15)
    {
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = a2;
      *(void *)(v16 + 24) = a3;
      uint64_t v17 = (void *)swift_allocObject();
      v17[2] = v13;
      v17[3] = a4;
      v17[4] = a2;
      v17[5] = a3;
      swift_retain_n();
      swift_retain();
      id v18 = a4;
      sub_24D3FBC7C((uint64_t)"didUpdateAlternateContentsDocumentForDocument(with:request:completionHandler:)", 78, 2, sub_24D6E4F84, v16, (uint64_t)sub_24D6D718C, (uint64_t)v17);
      swift_release();
      swift_release();
      swift_release();
    }
    else
    {
      id v20 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      uint64_t v21 = a4;
      uint64_t v22 = sub_24DCC9068();
      os_log_type_t v23 = sub_24DCCA128();
      int v24 = v23;
      if (os_log_type_enabled(v22, v23))
      {
        uint64_t v34 = v9;
        uint64_t v25 = swift_slowAlloc();
        int v33 = v24;
        unint64_t v26 = (uint8_t *)v25;
        uint64_t v31 = (void *)swift_slowAlloc();
        uint64_t v32 = v26;
        *(_DWORD *)unint64_t v26 = 138543362;
        id v30 = v26 + 4;
        uint64_t v35 = v21;
        id v27 = v21;
        sub_24DCCA428();
        uint64_t v28 = v31;
        *uint64_t v31 = v21;

        id v9 = v34;
        uint64_t v29 = v32;
        _os_log_impl(&dword_24D3D0000, v22, (os_log_type_t)v33, "did update alternate content was called with no alternate contents association in place for document with ID: %{public}@", v32, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v28, -1, -1);
        MEMORY[0x25332B030](v29, -1, -1);
      }
      else
      {

        uint64_t v22 = v21;
      }

      v9[1](v11, v8);
      ((void (*)(void))a2)(0);
      swift_release();
    }
  }
  else
  {
    uint64_t v34 = (void (**)(char *, uint64_t))(id)FPNotSupportedError();
    a2();
    uint64_t v19 = v34;
  }
}

uint64_t sub_24D691600(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = *(void (**)(uint64_t (*)@<X0>(uint64_t@<X8>), void *))(a1 + qword_26B1A2530);
  if (!v5) {
    return a3(0);
  }
  uint64_t v6 = MEMORY[0x270FA5388](a1);
  v9[2] = v7;
  v9[3] = v6;
  swift_retain();
  v5(sub_24D6D71AC, v9);
  uint64_t result = sub_24D43DD74((uint64_t)v5);
  if (!v3) {
    return a3(0);
  }
  return result;
}

uint64_t sub_24D6916D8@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v6 = sub_24DCC9078();
  uint64_t v41 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  id v44 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = a1;
  uint64_t v16 = sub_24D3D3C4C(objc_msgSend(v15, sel_identifier));

  swift_beginAccess();
  if (*(unsigned char *)(v16 + 41) == 1)
  {
    swift_release();
    uint64_t v17 = a3;
  }
  else
  {
    uint64_t v37 = v12;
    uint64_t v38 = v6;
    uint64_t v39 = a3;
    char v26 = *(unsigned char *)(v16 + 40);
    id v27 = *(NSObject **)(v16 + 32);
    swift_release();
    uint64_t v28 = v40[4];
    uint64_t v42 = v27;
    char v43 = v26;
    uint64_t result = (*(uint64_t (**)(NSObject **, uint64_t))(*(void *)v28 + 240))(&v42, 1);
    if (v3) {
      return result;
    }
    uint64_t v30 = v37;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v10, 1, v11) != 1)
    {
      sub_24D3F0BA0((uint64_t)v10, (uint64_t)v14, (uint64_t *)&unk_26B199410);
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1958A0);
      uint64_t v33 = v39;
      uint64_t v34 = v39 + *(int *)(v32 + 48);
      uint64_t v35 = *(int *)(v32 + 64);
      sub_24D415FD0((uint64_t)v14, v39, (uint64_t *)&unk_26B199410);
      id v36 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v30 + 56);
      v36(v33, 0, 1, v11);
      sub_24D3F0BA0((uint64_t)v14, v34, (uint64_t *)&unk_26B199410);
      v36(v34, 0, 1, v11);
      *(unsigned char *)(v33 + v35) = 0;
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v33, 0, 1, v32);
    }
    sub_24D415F74((uint64_t)v10, (uint64_t *)&unk_26B196F40);
    uint64_t v6 = v38;
    uint64_t v17 = v39;
  }
  id v18 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v19 = v15;
  id v20 = sub_24DCC9068();
  os_log_type_t v21 = sub_24DCCA128();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v39 = v17;
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v40 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v22 = 138543362;
    uint64_t v42 = v19;
    os_log_type_t v23 = v19;
    uint64_t v38 = v6;
    int v24 = v23;
    uint64_t v17 = v39;
    sub_24DCCA428();
    uint64_t v25 = v40;
    *uint64_t v40 = v19;

    uint64_t v6 = v38;
    _os_log_impl(&dword_24D3D0000, v20, v21, "did update alternate content failed to find item for: %{public}@", v22, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v25, -1, -1);
    MEMORY[0x25332B030](v22, -1, -1);
  }
  else
  {

    id v20 = v19;
  }

  (*(void (**)(char *, uint64_t))(v41 + 8))(v44, v6);
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1958A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v17, 1, 1, v31);
}

uint64_t sub_24D691DFC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_24D3FB6F8(0, &qword_26986C530);
    uint64_t v4 = sub_24DCC9C28();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D691EA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = a1;
  v8[3] = v3;
  v8[4] = a2;
  v8[5] = a3;
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v9 = v3;
  sub_24D62674C((uint64_t)"getDiagnosticAttributes(forItems:completionHandler:)", 52, 2, (void (*)(void *, id))sub_24D5B3FA4, v7, (uint64_t)sub_24D6C9724, (uint64_t)v8);
  swift_release();

  return swift_release();
}

uint64_t sub_24D691F90(objc_class *a1, unint64_t a2, char **a3, NSObject *a4, objc_class *a5)
{
  uint64_t v10 = sub_24DCC8288();
  MEMORY[0x270FA5388](v10 - 8);
  char v67 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_24DCC82A8();
  uint64_t v12 = *(void **)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  uint64_t v65 = (objc_class *)((char *)&v59 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v68 = a1;
  uint64_t v14 = *((void *)a1 + 2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v74 = swift_dynamicCastClassUnconditional();
  uint64_t v15 = swift_allocObject();
  int64_t v72 = (objc_class *)v15;
  uint64_t v73 = v14;
  *(void *)(v15 + 16) = MEMORY[0x263F8EE78];
  uint64_t v16 = (void *)(v15 + 16);
  swift_retain();
  dispatch_group_t v17 = dispatch_group_create();
  if (a2 >> 62) {
    goto LABEL_23;
  }
  uint64_t v18 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v18; uint64_t v18 = sub_24DCCA9C8())
  {
    uint64_t v60 = a3;
    id v61 = a4;
    uint64_t v62 = a5;
    unint64_t v70 = a2;
    unint64_t v71 = a2 & 0xC000000000000001;
    uint64_t v63 = (void (**)(id, uint64_t))(v12 + 1);
    int64_t v64 = v16;
    uint64_t v19 = 4;
    a3 = &selRef_createIndexerWithExtension_enabled_error_;
    uint64_t v75 = v17;
    uint64_t v69 = v18;
    while (1)
    {
      uint64_t v30 = v71 ? (void *)MEMORY[0x253328820](v19 - 4, a2) : *(id *)(a2 + 8 * v19);
      uint64_t v16 = v30;
      if (__OFADD__(v19 - 4, 1)) {
        break;
      }
      dispatch_group_enter(v17);
      unsigned int v31 = [v16 a3[389]];
      uint64_t v76 = v19 - 3;
      if (v31)
      {
        a4 = *(NSObject **)(*(void *)(v73 + 32) + 16);
        type metadata accessor for VFSFileTree(0);
        uint64_t v20 = swift_dynamicCastClassUnconditional();
        swift_retain();
        unsigned int v21 = [v16 a3[389]];
        uint64_t v22 = (void *)swift_allocObject();
        uint64_t v23 = v74;
        v22[2] = v16;
        v22[3] = v23;
        a5 = v72;
        v22[4] = v75;
        v22[5] = a5;
        int v24 = *(void **)(v20 + 216);
        uint64_t v25 = swift_allocObject();
        *(_DWORD *)(v25 + 16) = v21;
        *(void *)(v25 + 24) = v20;
        *(void *)(v25 + 32) = sub_24D6D6EBC;
        *(void *)(v25 + 40) = v22;
        dispatch_group_t v17 = v75;
        swift_retain();
        swift_retain();
        char v26 = v16;
        id v27 = v17;
        swift_retain();
        uint64_t v28 = v24;
        uint64_t v18 = v69;
        uint64_t v12 = v28;
        swift_retain();
        sub_24D3E29E4(0, (uint64_t)"performWithDiskDiagnosticAttributes(for:block:)", 47, 2, (uint64_t)sub_24D6D6ED8, v25);
        swift_release();
        swift_release();

        a2 = v70;
        uint64_t v29 = v76;
        a3 = &selRef_createIndexerWithExtension_enabled_error_;
        swift_release();
      }
      else if (objc_msgSend(v16, sel_fileID))
      {
        a4 = *(NSObject **)(*(void *)(v73 + 32) + 16);
        type metadata accessor for VFSFileTree(0);
        uint64_t v32 = swift_dynamicCastClassUnconditional();
        swift_retain();
        id v33 = objc_msgSend(v16, sel_fileID);
        uint64_t v34 = (void *)swift_allocObject();
        uint64_t v35 = v74;
        v34[2] = v16;
        v34[3] = v35;
        a5 = v72;
        v34[4] = v75;
        v34[5] = a5;
        id v36 = *(void **)(v32 + 216);
        uint64_t v37 = (void *)swift_allocObject();
        v37[2] = v33;
        v37[3] = v32;
        v37[4] = sub_24D6D6F60;
        v37[5] = v34;
        dispatch_group_t v17 = v75;
        swift_retain();
        uint64_t v38 = v16;
        uint64_t v39 = v17;
        swift_retain();
        swift_retain();
        uint64_t v40 = v36;
        uint64_t v18 = v69;
        uint64_t v12 = v40;
        swift_retain();
        sub_24D3E29E4(0, (uint64_t)"performWithDiskDiagnosticAttributes(by:block:)", 46, 2, (uint64_t)sub_24D6D6F7C, (uint64_t)v37);
        swift_release();
        swift_release();

        a2 = v70;
        a3 = &selRef_createIndexerWithExtension_enabled_error_;
        swift_release();
        uint64_t v29 = v76;
      }
      else
      {
        id v41 = objc_msgSend(v16, sel_itemID);
        if (v41)
        {
          uint64_t v42 = v41;
          char v43 = (objc_class *)objc_msgSend(objc_allocWithZone(MEMORY[0x263F05588]), sel_initWithItemID_, v41);
          a4 = swift_allocObject();
          a4[2].unint64_t isa = v43;
          a4[3].unint64_t isa = (Class)v17;
          id v44 = v68;
          a4[4].unint64_t isa = v72;
          a4[5].unint64_t isa = v44;
          uint64_t v45 = swift_allocObject();
          *(void *)(v45 + 16) = sub_24D6D6FD8;
          *(void *)(v45 + 24) = a4;
          uint64_t v46 = (void *)swift_allocObject();
          v46[2] = v74;
          v46[3] = v42;
          v46[4] = sub_24D6D6FD8;
          v46[5] = a4;
          uint64_t v47 = swift_allocObject();
          *(void *)(v47 + 16) = sub_24D417998;
          *(void *)(v47 + 24) = v45;
          swift_retain_n();
          swift_retain();
          char v48 = v75;
          swift_retain();
          a5 = v43;
          dispatch_group_t v17 = v75;
          swift_retain();
          id v49 = v42;
          swift_retain();
          uint64_t v12 = (void *)v74;
          sub_24D3FBC7C((uint64_t)"performWithDBDiagnosticAttributes(for:block:)", 45, 2, sub_24D5B2F84, v47, (uint64_t)sub_24D6D700C, (uint64_t)v46);

          a2 = v70;
          swift_release();

          uint64_t v18 = v69;
          swift_release();
          swift_release();
          swift_release();
        }
        else
        {
          sub_24DCC81E8();
          sub_24D5F77E0(MEMORY[0x263F8EE78]);
          sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
          a5 = v65;
          uint64_t v50 = v66;
          sub_24DCC8808();
          BOOL v51 = (void *)sub_24DCC8128();
          (*v63)(a5, v50);
          uint64_t v52 = (void *)sub_24DCC8818();

          objc_msgSend(v16, sel_setError_, v52);
          a4 = v17;
          uint64_t v53 = objc_sync_enter(a4);
          if (v53)
          {
            MEMORY[0x270FA5388](v53);
            *(&v59 - 2) = (uint64_t)a4;
            sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57ED98, (uint64_t)(&v59 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314);
          }
          uint64_t v12 = v64;
          swift_beginAccess();
          unint64_t v54 = v16;
          MEMORY[0x253327CA0]();
          if (*(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v12 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_24DCC9C78();
          }
          sub_24DCC9CD8();
          sub_24DCC9C48();
          swift_endAccess();
          uint64_t v55 = objc_sync_exit(a4);
          if (v55)
          {
            MEMORY[0x270FA5388](v55);
            *(&v59 - 2) = (uint64_t)a4;
            sub_24DA89268((uint64_t (*)(uint64_t))sub_24D57ED94, (uint64_t)(&v59 - 4), (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318);
          }

          dispatch_group_leave(a4);
        }
        a3 = &selRef_createIndexerWithExtension_enabled_error_;
        uint64_t v29 = v76;
      }
      ++v19;
      if (v29 == v18)
      {
        swift_bridgeObjectRelease();
        a4 = v61;
        a5 = v62;
        a3 = v60;
        goto LABEL_25;
      }
    }
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
LABEL_25:
  uint64_t v56 = *(char **)((char *)a3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue);
  uint64_t v57 = (void *)swift_allocObject();
  v57[2] = a4;
  v57[3] = a5;
  v57[4] = v72;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"getDiagnosticAttributes(forItems:completionHandler:)", 52, 2, 0, v56, (uint64_t)sub_24D6D6F00, (uint64_t)v57);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_24D6928E0(void *a1, char a2, id a3, uint64_t a4, void *a5, uint64_t a6)
{
  id v12 = objc_msgSend(a3, sel_docID);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F05588]), sel_initWithDocID_, v12);
  if (a2)
  {
    id v15 = a1;
    uint64_t v16 = (void *)sub_24DCC8818();
    objc_msgSend(v13, sel_setError_, v16);

    sub_24D6D9EB8(a1, 1, MEMORY[0x263F8EEA0]);
  }
  else
  {
    sub_24D3FB6F8(0, &qword_26B19A050);
    uint64_t v14 = (void *)sub_24DCC9558();
    objc_msgSend(v13, sel_setDiagnosticAttributes_, v14);
  }
  unsigned int v17 = objc_msgSend(a3, sel_docID);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v13;
  v18[3] = a5;
  v18[4] = a6;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_24D6D70E0;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = swift_allocObject();
  *(_DWORD *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = a4;
  *(void *)(v20 + 32) = sub_24D6D70E0;
  *(void *)(v20 + 40) = v18;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_24D417998;
  *(void *)(v21 + 24) = v19;
  swift_retain_n();
  id v22 = v13;
  id v23 = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D3FBC7C((uint64_t)"performWithDBDiagnosticAttributes(for:block:)", 45, 2, sub_24D6E5EF8, v21, (uint64_t)sub_24D6D7134, v20);

  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24D692B60(void *a1, char a2, id a3, NSObject *a4, uint64_t a5)
{
  id v10 = objc_msgSend(a3, sel_diagnosticAttributes);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_24D3FB6F8(0, &qword_26B19A050);
    id v12 = (void *)sub_24DCC9578();
  }
  else
  {
    id v12 = (void *)sub_24D42B548(MEMORY[0x263F8EE78]);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986C640);
  if ((a2 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v29 = v12;
    sub_24D6B23FC((uint64_t)a1, (uint64_t)sub_24D81BA0C, 0, isUniquelyReferenced_nonNull_native, &v29);
    swift_bridgeObjectRelease();
LABEL_9:
    sub_24D3FB6F8(0, &qword_26B19A050);
    swift_bridgeObjectRetain();
    id v27 = (void *)sub_24DCC9558();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_setDiagnosticAttributes_, v27);

    sub_24DBA3664(a4, (void *)(a5 + 16), a3);
    swift_bridgeObjectRelease();
    dispatch_group_leave(a4);
    return;
  }
  id v29 = a1;
  id v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
  if (swift_dynamicCast())
  {
    uint64_t v15 = sub_24DCC97E8();
    uint64_t v17 = v16;
    id v18 = objc_msgSend(v28, sel_domain);
    if (v18)
    {
      uint64_t v19 = (uint64_t)v18;
      char v20 = swift_isUniquelyReferenced_nonNull_native();
      sub_24D716744(v19, v15, v17, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_24DCC97E8();
      uint64_t v23 = v22;
      id v24 = objc_msgSend(v28, sel_code);
      id v25 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v24);
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      sub_24D716744((uint64_t)v25, v21, v23, v26);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_9;
    }
    __break(1u);
    swift_bridgeObjectRelease();
    __break(1u);
  }
  sub_24DCCAE18();
  __break(1u);
}

uint64_t sub_24D692E88(void *a1, char a2, id a3, uint64_t a4, void *a5, uint64_t a6)
{
  id v12 = objc_msgSend(a3, sel_fileID);
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F05588]), sel_initWithFileID_, v12);
  if (a2)
  {
    id v15 = a1;
    uint64_t v16 = (void *)sub_24DCC8818();
    objc_msgSend(v13, sel_setError_, v16);

    sub_24D6D9EB8(a1, 1, MEMORY[0x263F8EEA0]);
  }
  else
  {
    sub_24D3FB6F8(0, &qword_26B19A050);
    id v14 = (void *)sub_24DCC9558();
    objc_msgSend(v13, sel_setDiagnosticAttributes_, v14);
  }
  id v17 = objc_msgSend(a3, sel_fileID);
  id v18 = (void *)swift_allocObject();
  v18[2] = v13;
  v18[3] = a5;
  v18[4] = a6;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_24D6D7048;
  *(void *)(v19 + 24) = v18;
  char v20 = (void *)swift_allocObject();
  v20[2] = a4;
  v20[3] = sub_24D6D7048;
  v20[4] = v18;
  v20[5] = v17;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_24D417998;
  *(void *)(v21 + 24) = v19;
  swift_retain_n();
  id v22 = v13;
  id v23 = a5;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D3FBC7C((uint64_t)"performWithDBDiagnosticAttributes(for:block:)", 45, 2, sub_24D6E5EF8, v21, (uint64_t)sub_24D6D7074, (uint64_t)v20);

  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24D693104(void *a1, char a2, id a3, NSObject *a4, uint64_t a5)
{
  id v10 = objc_msgSend(a3, sel_diagnosticAttributes);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_24D3FB6F8(0, &qword_26B19A050);
    id v12 = (void *)sub_24DCC9578();
  }
  else
  {
    id v12 = (void *)sub_24D42B548(MEMORY[0x263F8EE78]);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986C640);
  if ((a2 & 1) == 0)
  {
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    id v29 = v12;
    sub_24D6B2708((uint64_t)a1, (uint64_t)sub_24D81BA0C, 0, isUniquelyReferenced_nonNull_native, &v29);
    swift_bridgeObjectRelease();
LABEL_9:
    sub_24D3FB6F8(0, &qword_26B19A050);
    swift_bridgeObjectRetain();
    id v27 = (void *)sub_24DCC9558();
    swift_bridgeObjectRelease();
    objc_msgSend(a3, sel_setDiagnosticAttributes_, v27);

    sub_24DBA3664(a4, (void *)(a5 + 16), a3);
    swift_bridgeObjectRelease();
    dispatch_group_leave(a4);
    return;
  }
  id v29 = a1;
  id v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30);
  sub_24D3FB6F8(0, (unint64_t *)&qword_26B1940A0);
  if (swift_dynamicCast())
  {
    uint64_t v15 = sub_24DCC97E8();
    uint64_t v17 = v16;
    id v18 = objc_msgSend(v28, sel_domain);
    if (v18)
    {
      uint64_t v19 = (uint64_t)v18;
      char v20 = swift_isUniquelyReferenced_nonNull_native();
      sub_24D716744(v19, v15, v17, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v21 = sub_24DCC97E8();
      uint64_t v23 = v22;
      id v24 = objc_msgSend(v28, sel_code);
      id v25 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v24);
      char v26 = swift_isUniquelyReferenced_nonNull_native();
      sub_24D716744((uint64_t)v25, v21, v23, v26);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      goto LABEL_9;
    }
    __break(1u);
    swift_bridgeObjectRelease();
    __break(1u);
  }
  sub_24DCCAE18();
  __break(1u);
}

void sub_24D69342C(id a1, char a2, void *a3, NSObject *a4, uint64_t a5)
{
  if (a2)
  {
    id v10 = a1;
    uint64_t v11 = (void *)sub_24DCC8818();
    objc_msgSend(a3, sel_setError_, v11);

    sub_24D6D9EB8(a1, 1, MEMORY[0x263F8EEA0]);
  }
  else
  {
    sub_24D3FB6F8(0, &qword_26B19A050);
    id v9 = (void *)sub_24DCC9558();
    objc_msgSend(a3, sel_setDiagnosticAttributes_, v9);
  }
  id v12 = objc_msgSend(a3, sel_diagnosticAttributes);
  if (v12)
  {
    id v13 = v12;
    sub_24D3FB6F8(0, &qword_26B19A050);
    uint64_t v14 = sub_24DCC9578();

    uint64_t v15 = sub_24DCC97E8();
    if (*(void *)(v14 + 16) && (unint64_t v17 = sub_24D4053BC(v15, v16), (v18 & 1) != 0))
    {
      id v19 = *(id *)(*(void *)(v14 + 56) + 8 * v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      self;
      char v20 = (void *)swift_dynamicCastObjCClass();
      if (v20)
      {
        id v21 = objc_msgSend(v20, sel_unsignedLongLongValue);
        type metadata accessor for VFSFileTree(0);
        uint64_t v22 = swift_dynamicCastClassUnconditional();
        uint64_t v23 = (void *)swift_allocObject();
        v23[2] = a3;
        v23[3] = a4;
        v23[4] = a5;
        id v24 = *(void **)(v22 + 216);
        id v25 = (void *)swift_allocObject();
        v25[2] = v21;
        v25[3] = v22;
        v25[4] = sub_24D6D7030;
        v25[5] = v23;
        swift_retain_n();
        id v26 = a3;
        id v27 = a4;
        swift_retain();
        id v28 = v24;
        swift_retain();
        sub_24D3E29E4(0, (uint64_t)"performWithDiskDiagnosticAttributes(by:block:)", 46, 2, (uint64_t)sub_24D6E4F4C, (uint64_t)v25);

        swift_release();
        swift_release();

        swift_release();
        return;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  sub_24DBA3664(a4, (void *)(a5 + 16), a3);

  dispatch_group_leave(a4);
}

void sub_24D69376C(void *a1, char a2, id a3, NSObject *a4, uint64_t a5)
{
  id v10 = objc_msgSend(a3, sel_diagnosticAttributes);
  if (v10)
  {
    uint64_t v11 = v10;
    sub_24D3FB6F8(0, &qword_26B19A050);
    unint64_t v12 = sub_24DCC9578();

    id v13 = a1;
    if ((a2 & 1) == 0)
    {
LABEL_3:
      swift_bridgeObjectRetain();
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v18 = v12;
      sub_24D6B2708((uint64_t)a1, (uint64_t)sub_24D81BA0C, 0, isUniquelyReferenced_nonNull_native, &v18);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    unint64_t v12 = sub_24D42B548(MEMORY[0x263F8EE78]);
    id v13 = a1;
    if ((a2 & 1) == 0) {
      goto LABEL_3;
    }
  }
  id v15 = v13;
  uint64_t v16 = (void *)sub_24DCC8818();
  objc_msgSend(a3, sel_setError_, v16);

  sub_24D6D9EB8(a1, 1, MEMORY[0x263F8EEA0]);
LABEL_6:
  sub_24D3FB6F8(0, &qword_26B19A050);
  swift_bridgeObjectRetain();
  unint64_t v17 = (void *)sub_24DCC9558();
  swift_bridgeObjectRelease();
  objc_msgSend(a3, sel_setDiagnosticAttributes_, v17);

  sub_24DBA3664(a4, (void *)(a5 + 16), a3);
  swift_bridgeObjectRelease();

  dispatch_group_leave(a4);
}

uint64_t sub_24D693974(void (*a1)(uint64_t, void))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2, 0);
  return swift_bridgeObjectRelease();
}

void sub_24D693B4C(void *a1, uint64_t a2, uint64_t a3, unint64_t *a4)
{
  id v6 = a1;
  if (a1)
  {
    sub_24D3FB6F8(0, a4);
    id v6 = (void *)sub_24DCC9C18();
  }
  if (a2) {
    uint64_t v7 = sub_24DCC8818();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v6);
}

uint64_t sub_24D693BF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v38 = a7;
  uint64_t v37 = a6;
  uint64_t v42 = a4;
  id v43 = a5;
  uint64_t v40 = a2;
  uint64_t v41 = a3;
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  id v33 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C410);
  uint64_t v12 = swift_allocBox();
  uint64_t v35 = v12;
  uint64_t v36 = a1;
  uint64_t v14 = v13;
  uint64_t v15 = *(int *)(v11 + 48);
  uint64_t v16 = *(int *)(v11 + 64);
  unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v17(v13, a1, v8);
  *(void *)(v14 + v15) = v42;
  *(void *)(v14 + v16) = v43;
  unint64_t v34 = v12 | 0x9000000000000004;
  unint64_t v18 = v33;
  v17((uint64_t)v33, a1, v8);
  unint64_t v19 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v20 = (v10 + v19 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (v20 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = (char *)swift_allocObject();
  uint64_t v24 = v38;
  *((void *)v23 + 2) = v37;
  *((void *)v23 + 3) = v24;
  id v25 = v39;
  *((void *)v23 + 4) = v39;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v23[v19], v18, v8);
  uint64_t v26 = v41;
  *(void *)&v23[v20] = v42;
  id v27 = &v23[v21];
  *(void *)id v27 = v40;
  *((void *)v27 + 1) = v26;
  unint64_t v28 = v34;
  *(void *)&v23[v22] = v34;
  id v29 = v43;
  swift_retain();
  id v30 = v25;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24D638B80(v36, 1, v28, (void (*)(void, void))sub_24D6C9734, (uint64_t)v23);
  swift_release();
  return swift_release();
}

uint64_t sub_24D693E34(void *a1, uint64_t a2, void (*a3)(void, id), uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  uint64_t v38 = a7;
  uint64_t v39 = a8;
  uint64_t v16 = sub_24DCC8A58();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  unint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return ((uint64_t (*)(void, uint64_t))a3)(0, a2);
  }
  uint64_t v34 = a9;
  unint64_t v35 = a10;
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a6, v16);
  uint64_t v20 = *(unsigned __int8 *)(v17 + 80);
  uint64_t v36 = a3;
  uint64_t v37 = a5;
  uint64_t v33 = a4;
  uint64_t v21 = (v20 + 40) & ~v20;
  unint64_t v22 = (v18 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = a3;
  uint64_t v25 = v33;
  *((void *)v24 + 3) = v33;
  *((void *)v24 + 4) = a1;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(&v24[v21], v19, v16);
  uint64_t v26 = v39;
  *(void *)&v24[v22] = v38;
  id v27 = &v24[v23];
  uint64_t v29 = v34;
  unint64_t v28 = v35;
  *(void *)id v27 = v26;
  *((void *)v27 + 1) = v29;
  *(void *)&v24[(v23 + 23) & 0xFFFFFFFFFFFFFFF8] = v28;
  swift_retain_n();
  id v30 = a1;
  swift_bridgeObjectRetain();
  sub_24D40B3C8(v28);
  sub_24D6BB16C((uint64_t)"pauseSyncForItem(at:bundleID:behavior:request:completionHandler:)", 65, 2, (uint64_t)sub_24D6D6924, (uint64_t)v24, v37, v36, v25);
  swift_release();

  return swift_release_n();
}

uint64_t sub_24D69404C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t a9)
{
  uint64_t v45 = a7;
  uint64_t v46 = a8;
  uint64_t v39 = a5;
  uint64_t v40 = a3;
  id v47 = a4;
  uint64_t v41 = a2;
  uint64_t v43 = a6;
  unint64_t v44 = a9;
  uint64_t v12 = sub_24DCC8A58();
  uint64_t v36 = v12;
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v37 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = sub_24D6E4F8C;
  v17[3] = v15;
  v17[4] = v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D6E4F30;
  *(void *)(v18 + 24) = v17;
  uint64_t v42 = *(void *)(a1 + 16);
  uint64_t v19 = swift_allocObject();
  uint64_t v38 = v19;
  *(void *)(v19 + 16) = sub_24D6E5F2C;
  *(void *)(v19 + 24) = v18;
  uint64_t v20 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v39, v12);
  unint64_t v21 = (*(unsigned __int8 *)(v13 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v22 = (v14 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v22 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v25 = (char *)swift_allocObject();
  id v26 = v47;
  *((void *)v25 + 2) = a1;
  *((void *)v25 + 3) = v26;
  *((void *)v25 + 4) = sub_24D6E5F2C;
  *((void *)v25 + 5) = v18;
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(&v25[v21], v37, v36);
  unint64_t v27 = v44;
  *(void *)&v25[v22] = v43;
  unint64_t v28 = &v25[v23];
  uint64_t v29 = v40;
  *(void *)unint64_t v28 = v41;
  *((void *)v28 + 1) = v29;
  id v30 = &v25[v24];
  uint64_t v31 = v46;
  *(void *)id v30 = v45;
  *((void *)v30 + 1) = v31;
  *(void *)&v25[(v24 + 23) & 0xFFFFFFFFFFFFFFF8] = v27;
  uint64_t v32 = swift_allocObject();
  uint64_t v33 = v38;
  *(void *)(v32 + 16) = sub_24D6E4F8C;
  *(void *)(v32 + 24) = v33;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  id v34 = v47;
  swift_bridgeObjectRetain();
  sub_24D40B3C8(v27);
  swift_retain();
  sub_24D3FBC7C((uint64_t)"pauseSyncForItem(at:bundleID:behavior:request:completionHandler:)", 65, 2, sub_24D6E5EF4, v32, (uint64_t)sub_24D6D6B2C, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D694394(uint64_t a1, void *a2, void (*a3)(void, void *), uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void, void *), uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11)
{
  void (*v21)(void *__return_ptr, id *, uint64_t);
  id v22;
  char *v23;
  uint64_t v24;
  void (*v25)(void, void *);
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  id v48;
  void (*v49)(void, void *);
  uint64_t v50;
  void (*v51)(void, void *);
  id v52;
  void *v53;
  uint64_t v54;
  void *v55;
  id v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  id v80;
  void (*v81)(void, void *);
  uint64_t v82;
  void (*v83)(void, void *);
  uint64_t v84;
  uint64_t v85;
  _DWORD v86[124];
  void v87[62];
  unsigned char v88[504];
  unsigned char v89[504];
  id v90;
  __int16 v91;
  void v92[63];
  unsigned char v93[504];
  char *v94;

  uint64_t v84 = a4;
  uint64_t v85 = a8;
  unint64_t v82 = a6;
  uint64_t v83 = a7;
  uint64_t v79 = a5;
  unint64_t v81 = a3;
  uint64_t v13 = sub_24DCC8A58();
  uint64_t v73 = *(void *)(v13 - 8);
  uint64_t v74 = v13;
  uint64_t v14 = *(void *)(v73 + 64);
  MEMORY[0x270FA5388](v13);
  uint64_t v76 = (char *)&v66 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18F680);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v78 = (uint64_t)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_24DCC8408();
  int64_t v72 = *(void *)(v75 - 8);
  MEMORY[0x270FA5388](v75);
  uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = a1;
  uint64_t v19 = *(void *)(a1 + 16);
  uint64_t v20 = *(void *)(v19 + 16);
  swift_retain();
  uint64_t v80 = a2;
  uint64_t v90 = objc_msgSend(a2, sel_identifier);
  uint64_t v91 = 256;
  unint64_t v21 = *(void (**)(void *__return_ptr, id *, uint64_t))(*(void *)v20 + 168);
  unint64_t v22 = v90;
  unint64_t v23 = v94;
  v21(v92, &v90, 1);
  if (v23)
  {
    swift_release();

    return;
  }
  unint64_t v24 = v82;
  unint64_t v70 = v19;
  unint64_t v94 = v18;
  unint64_t v71 = v14;
  uint64_t v25 = v83;
  id v26 = v84;
  unint64_t v27 = v85;

  sub_24D3F0BA0((uint64_t)v92, (uint64_t)v88, qword_26B197540);
  sub_24D3F0BA0((uint64_t)v88, (uint64_t)v89, qword_26B197540);
  if (sub_24D3F0D6C((uint64_t)v89) == 1)
  {

    swift_release();
LABEL_10:
    BOOL v51 = v81;
    uint64_t v52 = objc_msgSend(v80, sel_identifier);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A50);
    sub_24D3E4A9C(qword_26B18FAE0, (uint64_t *)&unk_26B192A50);
    uint64_t v53 = (void *)swift_allocError();
    *(void *)unint64_t v54 = v52;
    *(void *)(v54 + 8) = 0;
    *(void *)(v54 + 16) = 0;
    *(void *)(v54 + 24) = 1;
    *(_OWORD *)(v54 + 32) = 0u;
    *(_OWORD *)(v54 + 48) = 0u;
    *(_OWORD *)(v54 + 64) = 0u;
    *(unsigned char *)(v54 + 80) = 0;
    v51(0, v53);

    return;
  }
  memcpy(v93, v92, 0x1F0uLL);
  sub_24DA92954((uint64_t)v86);
  sub_24D3E33C4((uint64_t)v93);

  swift_release();
  memcpy(v87, v86, sizeof(v87));
  unint64_t v28 = v87[26];
  if (LOBYTE(v87[26]) == 255)
  {
    sub_24D472AF8((uint64_t)v87);
    goto LABEL_10;
  }
  if ((v87[54] & 4) != 0)
  {
    uint64_t v55 = (void *)sub_24DCC8948();
    uint64_t v56 = (id)FPFileIsAlreadyPausedError();

    v81(0, v56);
    goto LABEL_12;
  }
  uint64_t v29 = v87[25];
  id v30 = v27;
  if (v24 == 1)
  {
LABEL_8:
    uint64_t v69 = a11;
    unint64_t v82 = a10;
    int64_t v72 = a9;
    uint64_t v75 = *(void *)(*(void *)(v70 + 32) + 16);
    uint64_t v31 = v29;
    int64_t v68 = v29;
    type metadata accessor for VFSFileTree(0);
    uint64_t v32 = swift_dynamicCastClassUnconditional();
    uint64_t v33 = swift_allocObject();
    unint64_t v94 = 0;
    id v34 = v33;
    *(void *)(v33 + 16) = v81;
    *(void *)(v33 + 24) = v26;
    *(void *)(v33 + 32) = v77;
    *(void *)(v33 + 40) = v31;
    *(unsigned char *)(v33 + 48) = v28;
    *(void *)(v33 + 56) = a11;
    *(void *)(v33 + 64) = v25;
    unint64_t v35 = v80;
    *(void *)(v33 + 72) = v30;
    *(void *)(v33 + 80) = v35;
    unint64_t v70 = v32;
    unint64_t v81 = *(void (**)(void, void *))(v32 + 224);
    uint64_t v83 = *(void (**)(void, void *))(v32 + 216);
    uint64_t v36 = sub_24DCC9398();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v78, 1, 1, v36);
    uint64_t v37 = swift_allocObject();
    char v67 = v37;
    *(void *)(v37 + 16) = sub_24D6D6C58;
    *(void *)(v37 + 24) = v34;
    uint64_t v39 = v73;
    uint64_t v38 = v74;
    (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v76, v79, v74);
    uint64_t v40 = (*(unsigned __int8 *)(v39 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
    uint64_t v41 = (v71 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v68;
    *(void *)(v42 + 16) = v70;
    *(void *)(v42 + 24) = v43;
    *(unsigned char *)(v42 + 32) = v28;
    *(void *)(v42 + 40) = sub_24D6D6C58;
    *(void *)(v42 + 48) = v34;
    (*(void (**)(unint64_t, char *, uint64_t))(v39 + 32))(v42 + v40, v76, v38);
    unint64_t v44 = (void *)(v42 + v41);
    uint64_t v45 = v82;
    *unint64_t v44 = v72;
    v44[1] = v45;
    uint64_t v46 = (void *)swift_allocObject();
    id v47 = v67;
    v46[2] = sub_24D6E4F84;
    v46[3] = v47;
    v46[4] = v81;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_24D40B3C8(v69);
    swift_retain();
    char v48 = v80;
    id v49 = v83;
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    uint64_t v50 = v78;
    sub_24D3FD33C(v49, v78, sub_24D5DC2E0, v46, (uint64_t)sub_24D6D6D84, v42);

    swift_release();
    swift_release();
    swift_release();
    sub_24D415F74(v50, &qword_26B18F680);
    swift_release();
    swift_release();
LABEL_12:
    sub_24D472AF8((uint64_t)v87);
    return;
  }
  if (LOBYTE(v87[45]) == 2) {
    goto LABEL_19;
  }
  uint64_t v57 = v75;
  uint64_t v58 = v94;
  if (LOBYTE(v87[15]) != 2)
  {
    uint64_t v62 = v87[25];
    sub_24D3F184C((uint64_t)&v87[25]);
    if (qword_26B199AA0 != -1) {
      swift_once();
    }
    uint64_t v63 = qword_26B1A24C8;
    sub_24D3E355C((uint64_t)&v87[25]);
    if ((v87[28] & (v63 | 0x10)) == 0
      && (v87[27] & 0x51) == 0
      && LOBYTE(v87[42]) != 1
      && (v87[2] & (qword_26B1A24C8 | 0x10)) == 0
      && (v87[1] & 0x51) == 0)
    {
      uint64_t v29 = v62;
      if (LOBYTE(v87[12]) != 1) {
        goto LABEL_8;
      }
    }
LABEL_19:
    v86[0] = 16;
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D3EA320((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    int64_t v64 = v94;
    uint64_t v65 = v75;
    sub_24DCC8808();
    id v61 = (void *)sub_24DCC83E8();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v64, v65);
    goto LABEL_20;
  }
  v86[0] = 16;
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24D3EA320((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
  sub_24DCC8808();
  uint64_t v59 = sub_24DCC83E8();
  uint64_t v60 = v58;
  id v61 = (void *)v59;
  (*(void (**)(char *, uint64_t))(v72 + 8))(v60, v57);
LABEL_20:
  v25(0, v61);
  sub_24D472AF8((uint64_t)v87);
}

void sub_24D694C88(void *a1, void (*a2)(void, void *), uint64_t a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  if (a1)
  {
    id v13 = a1;
    a2(0, a1);
  }
  else
  {
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = a2;
    *(void *)(v19 + 24) = a3;
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a4;
    *(void *)(v20 + 24) = a5;
    *(unsigned char *)(v20 + 32) = a6;
    *(void *)(v20 + 40) = a7;
    *(void *)(v20 + 48) = a8;
    *(void *)(v20 + 56) = a9;
    *(void *)(v20 + 64) = a10;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = sub_24D6E4F8C;
    *(void *)(v21 + 24) = v19;
    swift_retain();
    swift_retain();
    sub_24D40B3C8(a7);
    swift_retain();
    id v22 = a10;
    swift_retain();
    sub_24D8272E0((uint64_t)"pauseSyncForItem(at:bundleID:behavior:request:completionHandler:)", 65, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6C91F0, v21, (uint64_t)sub_24D6D6E88, v20);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_24D694E68(uint64_t a1, uint64_t a2, int a3, unint64_t a4, void *a5, uint64_t a6, void *a7)
{
  id v30 = a5;
  uint64_t v31 = a2;
  uint64_t v32 = sub_24DCC8CE8();
  uint64_t v13 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v15 = (char *)v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = *(void *)(a1 + 16);
  sub_24D826B50(a4);
  unint64_t v18 = v17;
  swift_retain();
  id v19 = a7;
  v29[1] = v16;
  sub_24DA655B0(a2, a3, a4, v18, v16, v30, a6, v19);
  swift_release();

  uint64_t v20 = sub_24D826B50(a4);
  uint64_t v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B190590);
  uint64_t v23 = swift_allocObject();
  *(unsigned char *)(v23 + 152) = a3;
  *(_OWORD *)(v23 + 16) = 0u;
  *(_OWORD *)(v23 + 32) = 0u;
  *(unsigned char *)(v23 + 48) = 1;
  *(_OWORD *)(v23 + 56) = 0u;
  *(_OWORD *)(v23 + 72) = 0u;
  *(void *)(v23 + 88) = 0;
  *(void *)(v23 + 120) = v20;
  *(void *)(v23 + 128) = v22;
  uint64_t v24 = v31;
  *(void *)(v23 + 136) = 0;
  *(void *)(v23 + 144) = v24;
  *(_OWORD *)(v23 + 96) = xmmword_24DCD38D0;
  *(unsigned char *)(v23 + 112) = 0;
  sub_24D3E380C((void *)0x40100, 0, 0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v26 = v25;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v32);
  double v28 = v26 * 1000000000.0;
  if ((~COERCE__INT64(v26 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v28 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v28 < 9.22337204e18)
  {
    sub_24D826FA4(v23, (uint64_t)v28);
    return swift_release();
  }
LABEL_7:
  __break(1u);
  return result;
}

void sub_24D6950B4(void *a1, void (*a2)(uint64_t, void *), uint64_t a3, uint64_t a4)
{
  if (!a1) {
    goto LABEL_4;
  }
  _s3__C4CodeOMa_1(0);
  id v7 = a1;
  sub_24D3EA320((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
  if (sub_24DCC86A8())
  {

LABEL_4:
    a2(a4, 0);
    return;
  }
  id v8 = a1;
  a2(0, a1);
}

uint64_t sub_24D6954BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v33 = a7;
  uint64_t v32 = a6;
  uint64_t v35 = a4;
  id v36 = a5;
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  id v30 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F5D0);
  uint64_t v12 = swift_allocBox();
  uint64_t v31 = v12;
  uint64_t v14 = v13;
  uint64_t v15 = *(int *)(v11 + 48);
  uint64_t v16 = *(int *)(v11 + 64);
  unint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  v17(v13, a1, v8);
  *(void *)(v14 + v15) = v35;
  *(void *)(v14 + v16) = v36;
  unint64_t v18 = v12 | 0x9000000000000006;
  id v19 = v30;
  v17((uint64_t)v30, a1, v8);
  unint64_t v20 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v21 = (v10 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = (char *)swift_allocObject();
  uint64_t v23 = v33;
  *((void *)v22 + 2) = v32;
  *((void *)v22 + 3) = v23;
  double v25 = v34;
  uint64_t v24 = v35;
  *((void *)v22 + 4) = v34;
  *((void *)v22 + 5) = v24;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v22[v20], v19, v8);
  *(void *)&v22[v21] = v18;
  id v26 = v36;
  swift_retain();
  id v27 = v25;
  swift_retain();
  sub_24D638B80(a1, 1, v18, (void (*)(void, void))sub_24D6C973C, (uint64_t)v22);
  swift_release();
  return swift_release();
}

uint64_t sub_24D6956C8(void *a1, uint64_t a2, void (*a3)(void, id), uint64_t a4, unsigned char *a5, uint64_t a6, uint64_t a7, unint64_t a8)
{
  uint64_t v24 = a6;
  double v25 = a5;
  uint64_t v14 = sub_24DCC8A58();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return ((uint64_t (*)(void, uint64_t))a3)(0, a2);
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))((char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v14);
  unint64_t v18 = (*(unsigned __int8 *)(v15 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v19 = (v16 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (char *)swift_allocObject();
  *((void *)v20 + 2) = a3;
  *((void *)v20 + 3) = a4;
  uint64_t v21 = v24;
  *((void *)v20 + 4) = a1;
  *((void *)v20 + 5) = v21;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v20[v18], v17, v14);
  *(void *)&v20[v19] = a8;
  swift_retain_n();
  id v22 = a1;
  sub_24D40B3C8(a8);
  sub_24D6BB16C((uint64_t)"resumeSyncForItem(at:bundleID:behavior:request:completionHandler:)", 66, 2, (uint64_t)sub_24D6D4BA4, (uint64_t)v20, v25, a3, a4);
  swift_release();

  return swift_release_n();
}

uint64_t sub_24D6958A4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t v39 = a5;
  unint64_t v40 = a7;
  uint64_t v35 = a2;
  uint64_t v36 = a6;
  uint64_t v38 = a4;
  uint64_t v34 = a3;
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v32 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  *(void *)(v13 + 24) = a3;
  uint64_t v14 = swift_allocObject();
  swift_weakInit();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = sub_24D6E4F8C;
  v15[3] = v13;
  v15[4] = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_24D6D4C60;
  *(void *)(v16 + 24) = v15;
  uint64_t v17 = *(void *)(a1 + 16);
  uint64_t v33 = a1;
  uint64_t v37 = v17;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D6E5F2C;
  *(void *)(v18 + 24) = v16;
  uint64_t v19 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v36, v10);
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v21 = (v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v22 = (char *)swift_allocObject();
  *((void *)v22 + 2) = a1;
  uint64_t v24 = v38;
  uint64_t v23 = v39;
  *((void *)v22 + 3) = v38;
  *((void *)v22 + 4) = sub_24D6E5F2C;
  *((void *)v22 + 5) = v16;
  *((void *)v22 + 6) = v23;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v22[v20], v32, v19);
  unint64_t v25 = v40;
  *(void *)&v22[v21] = v40;
  id v26 = &v22[(v21 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v27 = v34;
  *(void *)id v26 = v35;
  *((void *)v26 + 1) = v27;
  uint64_t v28 = swift_allocObject();
  *(void *)(v28 + 16) = sub_24D6E4F8C;
  *(void *)(v28 + 24) = v18;
  swift_retain_n();
  swift_retain_n();
  swift_retain();
  id v29 = v24;
  sub_24D40B3C8(v25);
  swift_retain();
  sub_24D3FBC7C((uint64_t)"resumeSyncForItem(at:bundleID:behavior:request:completionHandler:)", 66, 2, sub_24D4C72D0, v28, (uint64_t)sub_24D6D4D7C, (uint64_t)v22);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D695BBC(uint64_t a1, void *a2, void (*a3)(void, id), uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, void (*a8)(void, void, void), uint64_t a9)
{
  void (*v29)(void *__return_ptr, id *, uint64_t);
  id v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  void (*v34)(void, id);
  _UNKNOWN **v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(void *, uint64_t);
  uint64_t v41;
  id v42;
  id v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void (*v47)(void *, uint64_t);
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  int v55;
  uint64_t *v56;
  uint64_t v57;
  int v58;
  uint64_t *v59;
  uint64_t v60;
  void *v61;
  char v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  void *v67;
  char v68;
  BOOL v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  void (*v77)(char *, uint64_t, uint64_t);
  char v78;
  void (*v79)(char *, uint64_t, uint64_t);
  void (*v80)(char *, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  void *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  void (*v92)(void, void, void);
  void *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void *v104;
  id v105;
  void (*v106)(void, id);
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  void (*v117)(void, void, void);
  char *v118;
  uint64_t v119;
  void (*v120)(void, id);
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  void *v126;
  id v127;
  void (*v128)(void, id);
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int v132;
  uint64_t v133;
  void *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  uint64_t v138;
  void (*v139)(char *, uint64_t, uint64_t);
  void *v140;
  void (*v141)(void, void, void);
  char *v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  void (*v150)(void, id);
  uint64_t v151;
  uint64_t v152;
  id v153;
  void v154[62];
  void v155[62];
  unsigned char v156[504];
  unsigned char v157[504];
  id v158;
  __int16 v159;
  void v160[63];
  unsigned char v161[504];
  uint64_t v162;

  uint64_t v141 = a8;
  uint64_t v146 = a7;
  id v143 = a6;
  uint64_t v151 = a5;
  uint64_t v152 = a4;
  uint64_t v150 = a3;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18F680);
  MEMORY[0x270FA5388](v11 - 8);
  char v147 = (uint64_t)&v130 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24DCC8A58();
  uint64_t v14 = *(void *)(v13 - 8);
  id v148 = v13;
  id v149 = v14;
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v142 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v144 = (char *)&v130 - v17;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v137 = (char *)&v130 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  uint64_t v140 = (uint64_t *)((char *)&v130 - v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v138 = *(void *)(v22 - 8);
  id v139 = (void (*)(char *, uint64_t, uint64_t))v22;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v136 = (uint64_t)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  id v26 = (char *)&v130 - v25;
  uint64_t v145 = a1;
  uint64_t v27 = *(void *)(a1 + 16);
  uint64_t v28 = *(void *)(v27 + 16);
  swift_retain();
  uint64_t v153 = a2;
  uint64_t v158 = objc_msgSend(a2, sel_identifier);
  uint64_t v159 = 256;
  id v29 = *(void (**)(void *__return_ptr, id *, uint64_t))(*(void *)v28 + 168);
  id v30 = v158;
  uint64_t v31 = v162;
  v29(v160, &v158, 1);
  if (v31)
  {
    swift_release();

    return;
  }
  id v134 = v26;
  uint64_t v32 = v151;
  uint64_t v162 = v27;
  uint64_t v135 = v15;

  sub_24D3F0BA0((uint64_t)v160, (uint64_t)v156, qword_26B197540);
  sub_24D3F0BA0((uint64_t)v156, (uint64_t)v157, qword_26B197540);
  if (sub_24D3F0D6C((uint64_t)v157) == 1)
  {

    swift_release();
    uint64_t v33 = v153;
    uint64_t v34 = v150;
    uint64_t v35 = &off_265308000;
LABEL_9:
    uint64_t v42 = [v33 (SEL)v35[325]];
    uint64_t v43 = (id)FPItemNotFoundError();

    v34(0, v43);
    return;
  }
  memcpy(v161, v160, 0x1F0uLL);
  sub_24DA92954((uint64_t)v154);
  sub_24D3E33C4((uint64_t)v161);

  swift_release();
  memcpy(v155, v154, sizeof(v155));
  uint64_t v36 = LOBYTE(v155[26]);
  uint64_t v35 = &off_265308000;
  if (LOBYTE(v155[26]) == 255)
  {
    sub_24D472AF8((uint64_t)v155);
    uint64_t v33 = v153;
    uint64_t v34 = v150;
    goto LABEL_9;
  }
  uint64_t v37 = v155[25];
  int v133 = a9;
  if (v32 == 2)
  {
    uint64_t v38 = swift_allocObject();
    *(unsigned char *)(v38 + 16) = 0;
    uint64_t v39 = *(void *)(v162 + 32);
    v154[0] = v37;
    LOBYTE(v154[1]) = v36;
    unint64_t v40 = *(void (**)(void *, uint64_t))(*(void *)v39 + 240);
    swift_retain();
    uint64_t v41 = (uint64_t)v140;
    v40(v154, 1);
    swift_release();
    uint64_t v137 = (char *)v38;
    uint64_t v55 = (*(uint64_t (**)(uint64_t, uint64_t, void))(v138 + 48))(v41, 1, v139);
    uint64_t v151 = 0;
    uint64_t v132 = v36;
    uint64_t v131 = v37;
    if (v55 == 1)
    {
      uint64_t v56 = (uint64_t *)&unk_26B196F40;
      uint64_t v57 = v41;
    }
    else
    {
      id v61 = v134;
      sub_24D3F0BA0(v41, (uint64_t)v134, (uint64_t *)&unk_26B199410);
      if (v155[38])
      {
        uint64_t v140 = (void *)v155[32];
        uint64_t v62 = v155[33];
        uint64_t v63 = v155[31];
        int64_t v64 = v155[30];
        uint64_t v65 = v61[4];
        uint64_t v66 = *((_DWORD *)v61 + 10);
        char v67 = (void *)v61[6];
        int64_t v68 = *((unsigned char *)v61 + 56);
        sub_24D415F74((uint64_t)v61, (uint64_t *)&unk_26B199410);
        uint64_t v69 = v65 == v64;
        unint64_t v70 = v148;
        if (v69 && v66 == v63)
        {
          if (v68)
          {
            if (v62) {
              goto LABEL_41;
            }
          }
          else if ((v62 & 1) == 0 && v67 == v140)
          {
            goto LABEL_41;
          }
        }
        v137[16] = 1;
LABEL_41:
        uint64_t v162 = *(void *)(*(void *)(v162 + 32) + 16);
        type metadata accessor for VFSFileTree(0);
        uint64_t v108 = swift_dynamicCastClassUnconditional();
        char v109 = v149;
        id v139 = *(void (**)(char *, uint64_t, uint64_t))(v149 + 16);
        uint64_t v140 = (void *)v108;
        id v110 = v144;
        v139(v144, v143, v70);
        id v111 = *(unsigned __int8 *)(v109 + 80);
        uint64_t v112 = (v111 + 80) & ~v111;
        uint64_t v138 = v111 | 7;
        unint64_t v113 = (v135 + v112 + 7) & 0xFFFFFFFFFFFFFFF8;
        char v114 = swift_allocObject();
        uint64_t v115 = v152;
        *(void *)(v114 + 16) = v150;
        *(void *)(v114 + 24) = v115;
        uint64_t v116 = v131;
        *(void *)(v114 + 32) = v145;
        *(void *)(v114 + 40) = v116;
        *(unsigned char *)(v114 + 48) = v132;
        uint64_t v117 = v141;
        *(void *)(v114 + 56) = v146;
        *(void *)(v114 + 64) = v117;
        *(void *)(v114 + 72) = v133;
        uint64_t v141 = *(void (**)(void, void, void))(v109 + 32);
        id v118 = v110;
        uint64_t v119 = v148;
        v141(v114 + v112, v118, v148);
        *(void *)(v114 + v113) = v137;
        *(void *)(v114 + ((v113 + 15) & 0xFFFFFFFFFFFFFFF8)) = v153;
        uint64_t v120 = (void (*)(void, id))v140[27];
        id v149 = v140[28];
        uint64_t v150 = v120;
        uint64_t v121 = sub_24DCC9398();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v121 - 8) + 56))(v147, 1, 1, v121);
        uint64_t v122 = swift_allocObject();
        *(void *)(v122 + 16) = sub_24D6D5190;
        *(void *)(v122 + 24) = v114;
        uint64_t v123 = v142;
        v139(v142, v143, v119);
        uint64_t v124 = swift_allocObject();
        uint64_t v125 = v131;
        *(void *)(v124 + 16) = v140;
        *(void *)(v124 + 24) = v125;
        *(unsigned char *)(v124 + 32) = v132;
        *(void *)(v124 + 40) = sub_24D6D5190;
        *(void *)(v124 + 48) = v114;
        v141(v124 + ((v111 + 56) & ~v111), v123, v119);
        uint64_t v126 = (void *)swift_allocObject();
        v126[2] = sub_24D6E4F84;
        v126[3] = v122;
        v126[4] = v149;
        swift_retain_n();
        swift_retain_n();
        swift_retain();
        swift_retain();
        sub_24D40B3C8(v146);
        swift_retain();
        swift_retain();
        unint64_t v127 = v153;
        uint64_t v128 = v150;
        swift_retain();
        swift_retain();
        id v129 = v147;
        sub_24D3FD33C(v128, v147, sub_24D5DC2E0, v126, (uint64_t)sub_24D6D5324, v124);

        swift_release();
        swift_release();
        swift_release();
        sub_24D415F74(v129, &qword_26B18F680);
        swift_release();
        sub_24D472AF8((uint64_t)v155);
        swift_release();
        goto LABEL_42;
      }
      uint64_t v56 = (uint64_t *)&unk_26B199410;
      uint64_t v57 = (uint64_t)v61;
    }
    sub_24D415F74(v57, v56);
    unint64_t v70 = v148;
    goto LABEL_41;
  }
  unint64_t v44 = swift_allocObject();
  *(void *)(v44 + 16) = v32;
  uint64_t v45 = v162;
  uint64_t v140 = (void *)v44;
  if (v32 == 1)
  {
    uint64_t v46 = *(void *)(v162 + 32);
    v154[0] = v37;
    LOBYTE(v154[1]) = v36;
    id v47 = *(void (**)(void *, uint64_t))(*(void *)v46 + 240);
    swift_retain();
    char v48 = (uint64_t)v137;
    v47(v154, 1);
    uint64_t v131 = v37;
    swift_release();
    uint64_t v58 = (*(uint64_t (**)(uint64_t, uint64_t, void))(v138 + 48))(v48, 1, v139);
    uint64_t v151 = 0;
    uint64_t v132 = v36;
    if (v58 == 1)
    {
      uint64_t v59 = (uint64_t *)&unk_26B196F40;
      uint64_t v60 = v48;
    }
    else
    {
      unint64_t v71 = v136;
      sub_24D3F0BA0(v48, v136, (uint64_t *)&unk_26B199410);
      if (v155[38])
      {
        id v139 = (void (*)(char *, uint64_t, uint64_t))v155[32];
        int64_t v72 = v155[33];
        uint64_t v73 = v155[31];
        uint64_t v74 = v155[30];
        uint64_t v75 = *(void *)(v71 + 32);
        uint64_t v76 = *(_DWORD *)(v71 + 40);
        uint64_t v77 = *(void (**)(char *, uint64_t, uint64_t))(v71 + 48);
        uint64_t v78 = *(unsigned char *)(v71 + 56);
        sub_24D415F74(v71, (uint64_t *)&unk_26B199410);
        if (v75 == v74 && v76 == v73)
        {
          if (v78)
          {
            uint64_t v50 = v148;
            BOOL v51 = v149;
            uint64_t v52 = v143;
            uint64_t v53 = v144;
            unint64_t v54 = v135;
            uint64_t v45 = v162;
            if ((v72 & 1) == 0)
            {
LABEL_36:
              id v49 = v140;
              goto LABEL_37;
            }
          }
          else
          {
            BOOL v51 = v149;
            uint64_t v52 = v143;
            uint64_t v53 = v144;
            unint64_t v54 = v135;
            if (v72)
            {
              uint64_t v50 = v148;
              goto LABEL_35;
            }
            uint64_t v50 = v148;
            uint64_t v45 = v162;
            if (v77 != v139) {
              goto LABEL_36;
            }
          }
          id v49 = v140;
          v140[2] = 0;
          goto LABEL_37;
        }
LABEL_34:
        uint64_t v50 = v148;
        BOOL v51 = v149;
        uint64_t v52 = v143;
        uint64_t v53 = v144;
        unint64_t v54 = v135;
LABEL_35:
        uint64_t v45 = v162;
        goto LABEL_36;
      }
      uint64_t v59 = (uint64_t *)&unk_26B199410;
      uint64_t v60 = v71;
    }
    sub_24D415F74(v60, v59);
    goto LABEL_34;
  }
  id v49 = (void *)v44;
  uint64_t v131 = v37;
  uint64_t v132 = v36;
  uint64_t v151 = 0;
  uint64_t v50 = v148;
  BOOL v51 = v149;
  uint64_t v52 = v143;
  uint64_t v53 = v144;
  unint64_t v54 = v135;
LABEL_37:
  uint64_t v162 = *(void *)(*(void *)(v45 + 32) + 16);
  type metadata accessor for VFSFileTree(0);
  id v143 = swift_dynamicCastClassUnconditional();
  uint64_t v79 = (void (*)(char *, uint64_t, uint64_t))v49[2];
  uint64_t v80 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
  uint64_t v137 = (char *)(v51 + 16);
  uint64_t v138 = (uint64_t)v80;
  id v139 = v79;
  v80(v53, v52, v50);
  unint64_t v81 = *(unsigned __int8 *)(v51 + 80);
  unint64_t v82 = (v81 + 40) & ~v81;
  uint64_t v130 = v81 | 7;
  uint64_t v135 = v81;
  uint64_t v136 = v54 + 7;
  uint64_t v83 = (v54 + 7 + v82) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v84 = (v83 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v85 = v52;
  id v86 = (v84 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v87 = (v86 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v88 = (void *)swift_allocObject();
  uint64_t v89 = v149;
  uint64_t v90 = v152;
  v88[2] = v150;
  v88[3] = v90;
  v88[4] = v153;
  uint64_t v91 = *(void **)(v89 + 32);
  id v149 = v89 + 32;
  id v134 = v91;
  ((void (*)(char *, char *, uint64_t))v91)((char *)v88 + v82, v144, v148);
  *(void *)((char *)v88 + v83) = v145;
  uint64_t v92 = v141;
  *(void *)((char *)v88 + v84) = v140;
  uint64_t v93 = (void *)((char *)v88 + v86);
  unint64_t v94 = v133;
  *uint64_t v93 = v92;
  v93[1] = v94;
  *(void *)((char *)v88 + v87) = v146;
  uint64_t v95 = (char *)v88 + ((v87 + 15) & 0xFFFFFFFFFFFFFFF8);
  *(void *)uint64_t v95 = v131;
  v95[8] = v132;
  uint64_t v144 = *(char **)(v143 + 224);
  uint64_t v150 = *(void (**)(void, id))(v143 + 216);
  int v96 = sub_24DCC9398();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 56))(v147, 1, 1, v96);
  uint64_t v97 = swift_allocObject();
  *(void *)(v97 + 16) = sub_24D6D4F78;
  *(void *)(v97 + 24) = v88;
  id v98 = v142;
  unint64_t v99 = v148;
  ((void (*)(char *, uint64_t, uint64_t))v138)(v142, v85, v148);
  unsigned int v100 = (v135 + 56) & ~v135;
  id v101 = (v136 + v100) & 0xFFFFFFFFFFFFFFF8;
  id v102 = swift_allocObject();
  uint64_t v103 = v131;
  *(void *)(v102 + 16) = v143;
  *(void *)(v102 + 24) = v103;
  *(unsigned char *)(v102 + 32) = v132;
  *(void *)(v102 + 40) = sub_24D6D4F78;
  *(void *)(v102 + 48) = v88;
  ((void (*)(uint64_t, char *, uint64_t))v134)(v102 + v100, v98, v99);
  *(void *)(v102 + v101) = v139;
  uint64_t v104 = (void *)swift_allocObject();
  v104[2] = sub_24D6E4F84;
  v104[3] = v97;
  v104[4] = v144;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D40B3C8(v146);
  swift_retain();
  id v105 = v153;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v106 = v150;
  swift_retain();
  swift_retain();
  uint64_t v107 = v147;
  sub_24D3FD33C(v106, v147, sub_24D5D7AB4, v104, (uint64_t)sub_24D6D5064, v102);

  swift_release();
  swift_release();
  swift_release();
  sub_24D415F74(v107, &qword_26B18F680);
  swift_release();
  sub_24D472AF8((uint64_t)v155);
  swift_release();
LABEL_42:
  swift_release();
}

void sub_24D6969C0(void *a1, void (*a2)(void, void *), uint64_t a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  int v42 = a6;
  uint64_t v41 = a5;
  uint64_t v45 = a11;
  unint64_t v46 = a7;
  uint64_t v43 = a8;
  uint64_t v44 = a9;
  uint64_t v16 = sub_24DCC8A58();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v20 = a1;
    a2(0, a1);
  }
  else
  {
    uint64_t v39 = *(void *)(a4 + 16);
    uint64_t v40 = a4;
    uint64_t v21 = swift_allocObject();
    uint64_t v38 = v21;
    *(void *)(v21 + 16) = a2;
    *(void *)(v21 + 24) = a3;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))((char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a10, v16);
    uint64_t v22 = *(unsigned __int8 *)(v17 + 80);
    uint64_t v36 = (void (*)(void, void))a2;
    uint64_t v37 = a12;
    uint64_t v23 = (v22 + 64) & ~v22;
    unint64_t v24 = (v18 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v26 = swift_allocObject();
    uint64_t v27 = v41;
    *(void *)(v26 + 16) = v40;
    *(void *)(v26 + 24) = v27;
    *(unsigned char *)(v26 + 32) = v42;
    uint64_t v28 = v43;
    uint64_t v29 = v44;
    *(void *)(v26 + 40) = v46;
    *(void *)(v26 + 48) = v28;
    *(void *)(v26 + 56) = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v26 + v23, v19, v16);
    id v30 = (void *)(v26 + v24);
    uint64_t v31 = v37;
    *id v30 = v36;
    v30[1] = a3;
    *(void *)(v26 + v25) = v45;
    *(void *)(v26 + ((v25 + 15) & 0xFFFFFFFFFFFFFFF8)) = v31;
    uint64_t v32 = swift_allocObject();
    uint64_t v33 = v38;
    *(void *)(v32 + 16) = sub_24D6E4F8C;
    *(void *)(v32 + 24) = v33;
    swift_retain_n();
    swift_retain();
    sub_24D40B3C8(v46);
    swift_retain();
    swift_retain();
    id v34 = v31;
    swift_retain();
    sub_24D8272E0((uint64_t)"resumeSyncForItem(at:bundleID:behavior:request:completionHandler:)", 66, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6C91F0, v32, (uint64_t)sub_24D6D54CC, v26);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_24D696CBC(uint64_t a1, void (*a2)(void), int a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v64 = a5;
  unint64_t v65 = a4;
  int v80 = a3;
  uint64_t v79 = a2;
  int64_t v68 = a11;
  uint64_t v69 = a8;
  uint64_t v66 = a9;
  uint64_t v67 = a10;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(qword_26B1923D0);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v76 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v63 = (char *)&v58 - v17;
  uint64_t v18 = sub_24DCC9328();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v61 = v18;
  uint64_t v62 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v74 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v78 = (char *)&v58 - v22;
  uint64_t v77 = sub_24DCC9398();
  uint64_t v75 = *(void *)(v77 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v77);
  int64_t v72 = (char *)&v58 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v73 = (char *)&v58 - v25;
  uint64_t v26 = sub_24DCC8A58();
  uint64_t v59 = v26;
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void *)(v27 + 64);
  MEMORY[0x270FA5388](v26);
  uint64_t v60 = (char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08AB8]), sel_init);
  uint64_t v70 = *(void *)(a1 + 16);
  unint64_t v71 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))((char *)&v58 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v26);
  unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  unint64_t v31 = (v28 + v30 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v58 = (v31 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v58 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v32 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v34 = swift_allocObject();
  unint64_t v35 = v65;
  *(void *)(v34 + 16) = v64;
  *(void *)(v34 + 24) = a6;
  uint64_t v36 = v79;
  *(void *)(v34 + 32) = a1;
  *(void *)(v34 + 40) = v36;
  *(unsigned char *)(v34 + 48) = v80;
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v34 + v30, v60, v59);
  uint64_t v37 = (void *)(v34 + v31);
  uint64_t v38 = v68;
  uint64_t v40 = v66;
  uint64_t v39 = v67;
  *uint64_t v37 = v69;
  v37[1] = v40;
  *(void *)(v34 + v58) = v39;
  *(void *)(v34 + v32) = v38;
  uint64_t v41 = v62;
  uint64_t v42 = (uint64_t)v63;
  *(void *)(v34 + v33) = v35;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v43 = v38;
  unint64_t v44 = v35;
  sub_24D40B3C8(v35);
  qos_class_self();
  sub_24DCC9308();
  uint64_t v45 = v41;
  unint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 48);
  uint64_t v47 = v61;
  int v48 = v46(v42, 1);
  id v49 = (unsigned int *)MEMORY[0x263F8F090];
  if (v48 == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v45 + 104))(v78, *MEMORY[0x263F8F090], v47);
    sub_24D415F74(v42, qword_26B1923D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v78, v42, v47);
  }
  uint64_t v50 = v73;
  sub_24DCC9378();
  qos_class_self();
  uint64_t v51 = (uint64_t)v76;
  sub_24DCC9308();
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v46)(v51, 1, v47) == 1)
  {
    (*(void (**)(char *, void, uint64_t))(v45 + 104))(v74, *v49, v47);
    sub_24D415F74(v51, qword_26B1923D0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v45 + 32))(v74, v51, v47);
  }
  uint64_t v52 = v72;
  sub_24DCC9378();
  unint64_t v53 = v44;
  unint64_t v54 = v71;
  sub_24D8B5FF0(1u, v79, v80, v53, v71, v52, (void (*)(void))sub_24D6D56C4, (void (*)(void))v34);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v75 + 8);
  uint64_t v56 = v77;
  v55(v52, v77);

  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v55)(v50, v56);
}

void sub_24D697240(void *a1, void (*a2)(void, void *), uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, void *a11, unint64_t a12)
{
  id v50 = a8;
  uint64_t v51 = (char *)a7;
  int v53 = a6;
  uint64_t v52 = a5;
  uint64_t v55 = a10;
  id v56 = a11;
  uint64_t v54 = a9;
  uint64_t v16 = sub_24DCC8A58();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(void *)(v17 + 64);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18F680);
  MEMORY[0x270FA5388](v20 - 8);
  uint64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v23 = a1;
    a2(0, a1);
  }
  else
  {
    uint64_t v24 = *(void *)(*(void *)(*(void *)(a4 + 16) + 32) + 16);
    uint64_t v47 = a4;
    uint64_t v48 = v24;
    type metadata accessor for VFSFileTree(0);
    uint64_t v25 = swift_dynamicCastClassUnconditional();
    unint64_t v49 = a12;
    uint64_t v44 = v16;
    uint64_t v26 = v25;
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v54;
    *(void *)(v27 + 16) = v50;
    *(void *)(v27 + 24) = v28;
    *(void *)(v27 + 32) = a4;
    *(void *)(v27 + 40) = a2;
    uint64_t v29 = v55;
    *(void *)(v27 + 48) = a3;
    *(void *)(v27 + 56) = v29;
    uint64_t v30 = v52;
    *(void *)(v27 + 64) = v56;
    *(void *)(v27 + 72) = v30;
    *(unsigned char *)(v27 + 80) = v53;
    *(void *)(v27 + 88) = a12;
    uint64_t v31 = *(void *)(v26 + 224);
    uint64_t v45 = a3;
    uint64_t v46 = v31;
    id v50 = *(id *)(v26 + 216);
    uint64_t v32 = sub_24DCC9398();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v22, 1, 1, v32);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = sub_24D6D57F8;
    *(void *)(v33 + 24) = v27;
    uint64_t v34 = v44;
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))((char *)&v43 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), v51, v44);
    unint64_t v35 = (*(unsigned __int8 *)(v17 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
    uint64_t v51 = v22;
    unint64_t v36 = (v18 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v37 = swift_allocObject();
    uint64_t v38 = v52;
    *(void *)(v37 + 16) = v26;
    *(void *)(v37 + 24) = v38;
    *(unsigned char *)(v37 + 32) = v53;
    *(void *)(v37 + 40) = sub_24D6D57F8;
    *(void *)(v37 + 48) = v27;
    (*(void (**)(unint64_t, char *, uint64_t))(v17 + 32))(v37 + v35, v19, v34);
    *(void *)(v37 + v36) = 0;
    uint64_t v39 = (void *)swift_allocObject();
    v39[2] = sub_24D6E4F84;
    v39[3] = v33;
    v39[4] = v46;
    swift_retain_n();
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    id v40 = v56;
    sub_24D40B3C8(v49);
    id v41 = v50;
    swift_retain();
    swift_retain();
    uint64_t v42 = (uint64_t)v51;
    sub_24D3FD33C(v41, (uint64_t)v51, sub_24D5DC2E0, v39, (uint64_t)sub_24D6D5064, v37);

    swift_release();
    swift_release();
    swift_release();
    sub_24D415F74(v42, &qword_26B18F680);
    swift_release();
    swift_release();
  }
}

void sub_24D69766C(void *a1, void (*a2)(void, void *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, char a10, unint64_t a11)
{
  if (a1)
  {
    id v14 = a1;
    a2(0, a1);
  }
  else
  {
    uint64_t v20 = swift_allocObject();
    *(void *)(v20 + 16) = a5;
    *(void *)(v20 + 24) = a6;
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = a7;
    *(void *)(v21 + 24) = a4;
    *(void *)(v21 + 32) = a8;
    *(void *)(v21 + 40) = a9;
    *(unsigned char *)(v21 + 48) = a10;
    *(void *)(v21 + 56) = a11;
    *(void *)(v21 + 64) = a5;
    *(void *)(v21 + 72) = a6;
    *(void *)(v21 + 80) = a2;
    *(void *)(v21 + 88) = a3;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_24D6E4F8C;
    *(void *)(v22 + 24) = v20;
    swift_retain_n();
    swift_retain();
    swift_retain();
    id v23 = a8;
    sub_24D40B3C8(a11);
    swift_retain();
    swift_retain();
    sub_24D8272E0((uint64_t)"resumeSyncForItem(at:bundleID:behavior:request:completionHandler:)", 66, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6C91F0, v22, (uint64_t)sub_24D6D5A30, v21);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_24D697878(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, int a5, uint64_t a6, void (*a7)(void, id), unint64_t a8, void *a9, unint64_t *a10)
{
  unint64_t v44 = a8;
  uint64_t v45 = a7;
  int v46 = a5;
  uint64_t v47 = a4;
  uint64_t v15 = sub_24DCC8CE8();
  uint64_t v49 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = (char *)v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  int v18 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v48 = v15;
  if (v18 == 1)
  {
    uint64_t v43 = *(void **)(a2 + 16);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C630);
    uint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_24DCCECE0;
    uint64_t v20 = a3;
    id v21 = objc_msgSend(a3, sel_identifier);
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v23 = v22;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v17, v15);
    double v25 = v23 * 1000000000.0;
    if ((~COERCE__INT64(v23 * 1000000000.0) & 0x7FF0000000000000) == 0)
    {
LABEL_16:
      __break(1u);
      goto LABEL_17;
    }
    if (v25 <= -9.22337204e18)
    {
LABEL_17:
      __break(1u);
      goto LABEL_18;
    }
    if (v25 >= 9.22337204e18)
    {
LABEL_18:
      __break(1u);
      return result;
    }
    *(void *)(v19 + 32) = v21;
    *(_OWORD *)(v19 + 40) = xmmword_24DCD6EB0;
    *(void *)(v19 + 56) = 0x2000000000000000;
    *(void *)(v19 + 64) = (uint64_t)v25;
    *(_OWORD *)(v19 + 72) = 0u;
    *(_OWORD *)(v19 + 88) = 0u;
    *(_OWORD *)(v19 + 104) = 0u;
    *(_OWORD *)(v19 + 120) = 0u;
    *(_OWORD *)(v19 + 131) = 0u;
    *(unsigned char *)(v19 + 147) = 8;
    sub_24D82BA18(MEMORY[0x263F8EE78], v19);
    uint64_t result = swift_bridgeObjectRelease();
    if (v10) {
      return result;
    }
  }
  else
  {
    uint64_t v20 = a3;
  }
  v42[1] = v10;
  uint64_t v43 = a9;
  unint64_t v26 = *(void *)(a2 + 16);
  unint64_t v27 = a6;
  sub_24D826B50(a6);
  unint64_t v29 = v28;
  unint64_t v30 = v44;
  swift_retain();
  swift_retain();
  id v31 = v20;
  uint64_t v32 = v17;
  char v33 = v46;
  uint64_t v34 = v47;
  sub_24DA66018(v47, v46, v27, v29, v26, v45, v30, v43, a10, v31);
  swift_release();
  swift_release();

  uint64_t v35 = sub_24D826B50(v27);
  uint64_t v37 = v36;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B190590);
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 152) = v33;
  *(_OWORD *)(v38 + 16) = 0u;
  *(_OWORD *)(v38 + 32) = 0u;
  *(unsigned char *)(v38 + 48) = 1;
  *(_OWORD *)(v38 + 56) = 0u;
  *(_OWORD *)(v38 + 72) = 0u;
  *(void *)(v38 + 88) = 0;
  *(void *)(v38 + 120) = v35;
  *(void *)(v38 + 128) = v37;
  *(void *)(v38 + 136) = 0;
  *(void *)(v38 + 144) = v34;
  *(_OWORD *)(v38 + 96) = xmmword_24DCD38D0;
  *(unsigned char *)(v38 + 112) = 0;
  sub_24D3E380C((void *)0x40100, 0, 0);
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v40 = v39;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v32, v48);
  double v41 = v40 * 1000000000.0;
  if ((~COERCE__INT64(v40 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v41 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v41 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  sub_24D826FA4(v38, (uint64_t)v41);
  return swift_release();
}

void sub_24D697C5C(void *a1, void (*a2)(void, void *), uint64_t a3, void (*a4)(uint64_t, void), uint64_t a5, uint64_t a6)
{
  if (!a1) {
    goto LABEL_4;
  }
  _s3__C4CodeOMa_1(0);
  id v10 = a1;
  sub_24D3EA320((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
  if (sub_24DCC86A8())
  {

LABEL_4:
    a4(a6, 0);
    return;
  }
  id v11 = a1;
  a2(0, a1);
}

void sub_24D697D68(void *a1, void (*a2)(void, uint64_t), uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10, uint64_t a11, char a12)
{
  if (a1)
  {
    id v16 = a1;
    sub_24DCC8368();
    sub_24D4C5C60();
    if (sub_24DCC86A8())
    {
      id v17 = objc_msgSend(a4, sel_identifier);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B192A50);
      sub_24D3E4A9C(qword_26B18FAE0, (uint64_t *)&unk_26B192A50);
      uint64_t v18 = swift_allocError();
      *(void *)uint64_t v19 = v17;
      *(void *)(v19 + 8) = 0;
      *(void *)(v19 + 16) = 0;
      *(void *)(v19 + 24) = 1;
      *(_OWORD *)(v19 + 32) = 0u;
      *(_OWORD *)(v19 + 48) = 0u;
      *(void *)(v19 + 64) = 0;
      *(void *)(v19 + 72) = a1;
      *(unsigned char *)(v19 + 80) = 0;
      id v20 = a1;
      a2(0, v18);
      id v21 = (void *)v18;
    }
    else
    {
      id v29 = a1;
      sub_24DCC83A8();
      char v30 = sub_24DCC86A8();

      if (v30)
      {
        id v31 = (void *)sub_24DCC8948();
        id v32 = (id)FPFileNotPausedError();

        a2(0, (uint64_t)v32);
LABEL_11:

        return;
      }
      id v33 = a1;
      a2(0, (uint64_t)a1);
      id v21 = a1;
    }

    goto LABEL_11;
  }
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = a2;
  *(void *)(v25 + 24) = a3;
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = a7;
  *(void *)(v26 + 24) = a8;
  *(void *)(v26 + 32) = a9;
  *(void *)(v26 + 40) = a2;
  *(void *)(v26 + 48) = a3;
  *(void *)(v26 + 56) = a4;
  *(void *)(v26 + 64) = a6;
  *(void *)(v26 + 72) = a10;
  *(void *)(v26 + 80) = a11;
  *(unsigned char *)(v26 + 88) = a12;
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = sub_24D6E4F8C;
  *(void *)(v27 + 24) = v25;
  swift_retain_n();
  swift_retain();
  swift_retain();
  id v28 = a4;
  swift_retain();
  sub_24D40B3C8(a10);
  swift_retain();
  sub_24D8272E0((uint64_t)"resumeSyncForItem(at:bundleID:behavior:request:completionHandler:)", 66, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6C91F0, v27, (uint64_t)sub_24D6D5ACC, v26);
  swift_release();
  swift_release();

  swift_release();
}

uint64_t sub_24D6980CC(unint64_t *a1, void (*a2)(void, id), uint64_t a3, void (*a4)(id, void), uint64_t *a5, void *a6, unint64_t *a7, uint64_t a8, uint64_t *a9, unsigned __int8 a10)
{
  uint64_t v57 = a8;
  int v58 = a10;
  uint64_t v59 = a9;
  uint64_t v17 = sub_24DCC8CE8();
  uint64_t v52 = *(void *)(v17 - 8);
  uint64_t v53 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v51 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (uint64_t *)swift_allocObject();
  v19[2] = (uint64_t)a1;
  v19[3] = (uint64_t)a2;
  id v50 = a2;
  v19[4] = a3;
  v19[5] = (uint64_t)a4;
  v19[6] = (uint64_t)a5;
  v19[7] = (uint64_t)a6;
  swift_beginAccess();
  unint64_t v20 = a1[2];
  uint64_t v54 = a7;
  id v21 = (uint64_t *)a7[2];
  swift_retain_n();
  swift_retain_n();
  swift_retain_n();
  id v22 = a6;
  id v55 = v22;
  uint64_t v60 = v21;
  if (v20 == 1)
  {
    id v23 = objc_msgSend(v22, sel_identifier);
    unint64_t v24 = v57;
    if (((v24 >> 58) & 0x3C | (v24 >> 1) & 3) == 0x1E)
    {
      unint64_t v25 = *(void *)((v57 & 0xFFFFFFFFFFFFFF9) + 0x10);
      sub_24D40B3C8(v25);
      unint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF9) + 0x10);
      uint64_t v27 = v26;
    }
    else
    {
      uint64_t v45 = swift_allocObject();
      *(void *)(v45 + 16) = v24;
      unint64_t v25 = v45 | 0x7000000000000004;
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v24;
      uint64_t v27 = v46 | 0x7000000000000004;
      sub_24D40B3C8(v24);
      unint64_t v26 = v24;
    }
    sub_24D40B3C8(v26);
    sub_24D826B7C(v27);
    uint64_t v48 = v47;
    sub_24D4170B0(v27);
    sub_24D40B3C8(v24);
    swift_retain();
    uint64_t v49 = v54;
    swift_retain();
    sub_24DA64B0C(v23, v25, v48, v60, (void (*)(void))sub_24D6D5B5C, v19, v49, v59, v58, v24);
    sub_24D4170B0(v24);
    swift_release();
    swift_release();
    sub_24D4170B0(v25);

    goto LABEL_12;
  }
  id v28 = v22;
  uint64_t v29 = v57;
  sub_24D826B50(v57);
  uint64_t v54 = v30;
  swift_retain();
  swift_retain();
  swift_retain();
  id v31 = v28;
  id v32 = (unint64_t *)v21;
  id v33 = v59;
  char v34 = v58;
  sub_24DA66AF8((uint64_t)v59, v58, v29, (unint64_t)v54, v32, a1, v50, a3, a4, a5, v31);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v54 = (unint64_t *)v31;

  uint64_t v35 = sub_24D826B50(v29);
  uint64_t v37 = v36;
  __swift_instantiateConcreteTypeFromMangledName(qword_26B190590);
  uint64_t v38 = swift_allocObject();
  *(unsigned char *)(v38 + 152) = v34;
  *(_OWORD *)(v38 + 16) = 0u;
  *(_OWORD *)(v38 + 32) = 0u;
  *(unsigned char *)(v38 + 48) = 1;
  *(_OWORD *)(v38 + 56) = 0u;
  *(_OWORD *)(v38 + 72) = 0u;
  *(void *)(v38 + 88) = 0;
  *(void *)(v38 + 120) = v35;
  *(void *)(v38 + 128) = v37;
  *(void *)(v38 + 136) = 0;
  *(void *)(v38 + 144) = v33;
  *(_OWORD *)(v38 + 96) = xmmword_24DCD38D0;
  *(unsigned char *)(v38 + 112) = 0;
  sub_24D3E380C((void *)0x40100, 0, 0);
  double v39 = v51;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v41 = v40;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v39, v53);
  double v43 = v41 * 1000000000.0;
  if ((~COERCE__INT64(v41 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v43 <= -9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v43 < 9.22337204e18)
  {
    uint64_t v44 = v56;
    sub_24D826FA4(v38, (uint64_t)v43);
    if (v44)
    {

      swift_release();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
    swift_release();
LABEL_12:

    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
LABEL_16:
  __break(1u);
  return result;
}

void sub_24D69858C(void *a1, uint64_t a2, void (*a3)(void, void *), uint64_t a4, void (*a5)(uint64_t, void), uint64_t a6, uint64_t a7)
{
  if (!a1) {
    goto LABEL_6;
  }
  swift_beginAccess();
  if (!*(void *)(a2 + 16))
  {
    _s3__C4CodeOMa_1(0);
    id v13 = a1;
    sub_24D3EA320((unint64_t *)&qword_26B194040, _s3__C4CodeOMa_1);
    if ((sub_24DCC86A8() & 1) == 0)
    {
      id v14 = a1;
      a3(0, a1);

      goto LABEL_8;
    }

LABEL_6:
    a5(a7, 0);
    return;
  }
  id v12 = a1;
  a3(0, a1);
LABEL_8:
}

void sub_24D6986D8(void *a1, void (*a2)(void), uint64_t *a3, uint64_t a4, uint64_t a5, int a6, unint64_t a7)
{
  uint64_t v14 = sub_24DCC8CE8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    unint64_t v19 = *(void *)(a4 + 16);
    sub_24D826B50(a7);
    unint64_t v21 = v20;
    swift_retain();
    uint64_t v29 = a2;
    sub_24DA64174(a5, a6, a7, v21, v19, a2, a3);
    swift_release();
    uint64_t v22 = sub_24D826B50(a7);
    uint64_t v24 = v23;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B190590);
    uint64_t v25 = swift_allocObject();
    *(unsigned char *)(v25 + 152) = a6;
    *(_OWORD *)(v25 + 16) = 0u;
    *(_OWORD *)(v25 + 32) = 0u;
    *(unsigned char *)(v25 + 48) = 1;
    *(_OWORD *)(v25 + 56) = 0u;
    *(_OWORD *)(v25 + 72) = 0u;
    *(void *)(v25 + 88) = 0;
    *(void *)(v25 + 120) = v22;
    *(void *)(v25 + 128) = v24;
    *(void *)(v25 + 136) = 0;
    *(void *)(v25 + 144) = a5;
    *(_OWORD *)(v25 + 96) = xmmword_24DCD38D0;
    *(unsigned char *)(v25 + 112) = 0;
    sub_24D3E380C((void *)0x40100, 0, 0);
    sub_24DCC8CD8();
    sub_24DCC8C88();
    double v27 = v26;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    double v28 = v27 * 1000000000.0;
    if ((~COERCE__INT64(v27 * 1000000000.0) & 0x7FF0000000000000) != 0)
    {
      if (v28 > -9.22337204e18)
      {
        if (v28 < 9.22337204e18)
        {
          sub_24D826FA4(v25, (uint64_t)v28);
          swift_release();
          return;
        }
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_11:
    __break(1u);
    return;
  }
  id v18 = a1;
  ((void (*)(void *))a2)(a1);
}

uint64_t sub_24D698C48(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v22 = a3;
  id v25 = a2;
  uint64_t v5 = sub_24DCC8A58();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C420);
  uint64_t v10 = swift_allocBox();
  uint64_t v12 = v11;
  uint64_t v13 = *(int *)(v9 + 48);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v14(v11, a1, v5);
  *(void *)(v12 + v13) = v25;
  v14((uint64_t)v8, a1, v5);
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = (char *)swift_allocObject();
  uint64_t v17 = v23;
  *((void *)v16 + 2) = v22;
  *((void *)v16 + 3) = v17;
  id v18 = v24;
  *((void *)v16 + 4) = v24;
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(&v16[v15], v8, v5);
  id v19 = v25;
  swift_retain();
  id v20 = v18;
  sub_24D638B80(a1, 0, v10 | 0xA000000000000000, (void (*)(void, void))sub_24D6C9744, (uint64_t)v16);
  swift_release();
  return swift_release();
}

uint64_t sub_24D698E1C(void *a1, uint64_t a2, void (*a3)(void, void, void, id), uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v12 = sub_24DCC8A58();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  if (!a1) {
    return ((uint64_t (*)(void, void, void, uint64_t))a3)(0, 0, 0, a2);
  }
  id v25 = a5;
  id v15 = a1;
  uint64_t v16 = sub_24D3D3C4C(objc_msgSend(v15, sel_identifier));
  swift_beginAccess();
  if (*(unsigned char *)(v16 + 41) == 1)
  {

    swift_release();
    return ((uint64_t (*)(void, void, void, uint64_t))a3)(0, 0, 0, a2);
  }
  int v24 = *(unsigned __int8 *)(v16 + 40);
  uint64_t v18 = *(void *)(v16 + 32);
  swift_release();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(&v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], a6, v12);
  unint64_t v19 = (*(unsigned __int8 *)(v13 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  *(void *)(v20 + 32) = v18;
  *(unsigned char *)(v20 + 40) = v24;
  unint64_t v21 = v25;
  *(void *)(v20 + 48) = v15;
  *(void *)(v20 + 56) = v21;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v13 + 32))(v20 + v19, &v23[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)], v12);
  swift_retain_n();
  id v22 = v15;
  sub_24D6BC5A0((uint64_t)"fetchLatestVersion(for:request:completionHandler:)", 50, 2, (uint64_t)sub_24D6D4348, v20, v21, a3, a4);
  swift_release();

  return swift_release_n();
}

uint64_t sub_24D699058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, void *a6, void *a7, uint64_t a8)
{
  uint64_t v31 = a8;
  id v32 = a6;
  uint64_t v35 = a7;
  int v34 = a5;
  uint64_t v33 = a4;
  v30[2] = a3;
  uint64_t v11 = sub_24DCC8A58();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a2;
  *(void *)(v15 + 24) = a3;
  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = sub_24D6D43C8;
  v17[3] = v15;
  v17[4] = v16;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D6D44A0;
  *(void *)(v18 + 24) = v17;
  v30[1] = *(void *)(a1 + 16);
  uint64_t v19 = a1;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_24D6D44C0;
  *(void *)(v20 + 24) = v18;
  uint64_t v21 = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v31, v11);
  unint64_t v22 = (*(unsigned __int8 *)(v12 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v23 = swift_allocObject();
  id v25 = v32;
  uint64_t v24 = v33;
  *(void *)(v23 + 16) = v19;
  *(void *)(v23 + 24) = v24;
  *(unsigned char *)(v23 + 32) = v34;
  *(void *)(v23 + 40) = sub_24D6D44C0;
  *(void *)(v23 + 48) = v18;
  double v26 = v35;
  *(void *)(v23 + 56) = v25;
  *(void *)(v23 + 64) = v26;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v23 + v22, v14, v21);
  swift_retain_n();
  swift_retain();
  swift_retain();
  id v27 = v25;
  id v28 = v26;
  sub_24D3FBC7C((uint64_t)"fetchLatestVersion(for:request:completionHandler:)", 50, 2, sub_24D6D4504, v20, (uint64_t)sub_24D6D4620, v23);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D699310(uint64_t a1, uint64_t a2, char a3, void (*a4)(void, void, void, id), uint64_t a5, id a6, char *a7, void *a8)
{
  void (*v24)(void *__return_ptr, uint64_t *, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  int v29;
  uint64_t v30;
  void (*v31)(id *, uint64_t);
  id v32;
  uint64_t v33;
  id v34;
  void (*v35)(void, void, void, id);
  id v36;
  id v37;
  int v38;
  void *v39;
  id v40;
  void (**v41)(char *, id);
  id v42;
  id v43;
  id v44;
  id v45;
  void *v46;
  id v47;
  uint64_t v48;
  id v49;
  id v50;
  char *v51;
  char *v52;
  uint64_t v53;
  void *v54;
  unint64_t v55;
  char *v56;
  unint64_t v57;
  uint64_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void (**v64)(char *, id);
  void *v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  void *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  id v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  void (**v77)(char *, id);
  void *v78;
  void *v79;
  void *v80;
  void *v81;
  id v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  id v88;
  id v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  void *v94;
  void *v95;
  void *v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  id v101;
  id v102;
  void *v103;
  void *v104;
  id v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  void *v111;
  id v112;
  id v113;
  uint64_t v114;
  void *v115;
  void *v116;
  id v117;
  id v118;
  char *v119;
  id v120;
  uint64_t v121;
  char *v122;
  char *v123;
  void *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void *v128;
  void *v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  unint64_t v134;
  unint64_t v135;
  char *v136;
  uint64_t v137;
  char *v138;
  void (*v139)(void, void, void, id);
  uint64_t v140;
  void *v141;
  char *v142;
  char *v143;
  id v144;
  id v145;
  id v146;
  char *v147;
  void *v148;
  uint64_t v149;
  id v150;
  id v151;
  id v152;
  unint64_t v153;
  void *v154;
  void (*v155)(uint64_t, id, uint64_t);
  uint64_t v156;
  char *v157;
  uint64_t v158;
  id v159;
  id v160;
  id v161;
  id v162;
  uint64_t v163;
  void *v164;
  id v165;
  id v166;
  char *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  void (**v173)(char *, id);
  char *v174;
  uint64_t (**v175)(id, uint64_t, id);
  id v176;
  void (*v177)(void, void, void, id);
  char *v178;
  uint64_t v179;
  uint64_t v180;
  id v181;
  id v182[62];
  unsigned char v183[504];
  unsigned char v184[504];
  uint64_t v185;
  char v186;
  char v187;
  void v188[65];

  uint64_t v179 = a5;
  uint64_t v166 = a8;
  long long v174 = a7;
  uint64_t v176 = a6;
  char v177 = a4;
  v188[63] = *MEMORY[0x263EF8340];
  uint64_t v11 = (char *)sub_24DCC8408();
  uint64_t v12 = (void (**)(char *, id))*((void *)v11 - 1);
  uint64_t v172 = v11;
  long long v173 = v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v171 = (char *)&v149 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v170 = sub_24DCC8A58();
  v168 = *(void *)(v170 - 8);
  uint64_t v14 = *(void *)(v168 + 64);
  uint64_t v15 = MEMORY[0x270FA5388](v170);
  char v167 = (char *)&v149 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unsigned int v169 = (uint64_t)&v149 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F60);
  MEMORY[0x270FA5388](v17 - 8);
  os_log_t v178 = (char *)&v149 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
  id v175 = *(uint64_t (***)(id, uint64_t, id))(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (char *)&v149 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *(void *)(a1 + 16);
  uint64_t v23 = *(void *)(v22 + 16);
  v185 = a2;
  v186 = a3;
  uint64_t v187 = 0;
  uint64_t v24 = *(void (**)(void *__return_ptr, uint64_t *, uint64_t))(*(void *)v23 + 168);
  swift_retain();
  id v25 = v180;
  v24(v188, &v185, 1);
  if (v25)
  {
    swift_release();
    return;
  }
  double v26 = v22;
  uint64_t v164 = v21;
  uint64_t v165 = (id)v19;
  id v28 = v178;
  id v27 = v179;
  uint64_t v163 = v14;
  sub_24D3F0BA0((uint64_t)v188, (uint64_t)v183, qword_26B197540);
  sub_24D3F0BA0((uint64_t)v183, (uint64_t)v184, qword_26B197540);
  uint64_t v29 = sub_24D3F0D6C((uint64_t)v184);
  uint64_t v180 = 0;
  if (v29 == 1)
  {
    swift_release();
LABEL_10:
    int v34 = v176;
    uint64_t v35 = v177;
LABEL_11:
    uint64_t v36 = objc_msgSend(v34, sel_identifier);
    uint64_t v37 = (id)FPItemNotFoundError();

    v35(0, 0, 0, v37);
    return;
  }
  swift_release();
  memcpy(v182, v188, sizeof(v182));
  if (!v182[30])
  {
    sub_24D3E33C4((uint64_t)v182);
    goto LABEL_10;
  }
  char v30 = *(void *)(v26 + 40);
  uint64_t v181 = v182[30];
  uint64_t v31 = *(void (**)(id *, uint64_t))(*(void *)v30 + 240);
  id v32 = v182[30];
  swift_retain();
  uint64_t v33 = v180;
  v31(&v181, 1);
  swift_release();
  if (v33)
  {
    sub_24D3E33C4((uint64_t)v182);

    return;
  }
  uint64_t v180 = 0;
  uint64_t v38 = v175[6](v28, 1, v165);
  int v34 = v176;
  if (v38 == 1)
  {

    sub_24D3E33C4((uint64_t)v182);
    sub_24D415F74((uint64_t)v28, (uint64_t *)&unk_26B196F60);
    uint64_t v35 = v177;
    goto LABEL_11;
  }
  double v39 = v164;
  sub_24D3F0BA0((uint64_t)v28, (uint64_t)v164, (uint64_t *)&unk_26B196F50);
  double v40 = v182[36];
  uint64_t v35 = v177;
  if (v182[36] == (id)1)
  {
    sub_24D415F74((uint64_t)v39, (uint64_t *)&unk_26B196F50);
    sub_24D3E33C4((uint64_t)v182);

    goto LABEL_11;
  }
  uint64_t v162 = v32;
  double v41 = (void (**)(char *, id))v182[41];
  uint64_t v165 = v182[40];
  uint64_t v161 = v182[39];
  os_log_t v178 = (char *)v182[38];
  id v175 = (uint64_t (**)(id, uint64_t, id))v182[34];
  uint64_t v176 = v182[35];
  if (((uint64_t)v182[29] & 4) == 0)
  {
    uint64_t v42 = v182[34];
    double v43 = v182[38];
    long long v173 = (void (**)(char *, id))v182[41];
    uint64_t v44 = v182[37];
    uint64_t v45 = v182[35];
    uint64_t v172 = (char *)sub_24DCC97E8();
    uint64_t v160 = v40;
    long long v174 = (char *)objc_allocWithZone(MEMORY[0x263F087E8]);
    sub_24D3F9C18((uint64_t)v42, (unint64_t)v45);
    swift_bridgeObjectRetain();
    sub_24D3F9C18((uint64_t)v44, (unint64_t)v43);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v46 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    uint64_t v47 = objc_msgSend(v174, sel_initWithDomain_code_userInfo_, v46, 16, 0);

    v35(0, 0, 0, v47);
    sub_24D400D4C((uint64_t)v175, (unint64_t)v176, (uint64_t)v160, (uint64_t)v44, (unint64_t)v178);

    sub_24D3E33C4((uint64_t)v182);
LABEL_18:
    uint64_t v48 = (uint64_t)v164;
LABEL_21:
    sub_24D415F74(v48, (uint64_t *)&unk_26B196F50);
    return;
  }
  uint64_t v159 = v182[37];
  if (LOBYTE(v182[55]) == 1)
  {
    LODWORD(v181) = 22;
    uint64_t v49 = v182[38];
    id v50 = v182[37];
    sub_24D3F9C18((uint64_t)v182[34], (unint64_t)v182[35]);
    swift_bridgeObjectRetain();
    sub_24D3F9C18((uint64_t)v50, (unint64_t)v49);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D3EA320((unint64_t *)&qword_26B196AF0, MEMORY[0x263F06080]);
    uint64_t v51 = v171;
    uint64_t v52 = v172;
    sub_24DCC8808();
    uint64_t v53 = (uint64_t)v40;
    uint64_t v54 = (void *)sub_24DCC83E8();
    v173[1](v51, v52);
    v35(0, 0, 0, v54);
    sub_24D400D4C((uint64_t)v175, (unint64_t)v176, v53, (uint64_t)v159, (unint64_t)v178);

    sub_24D3E33C4((uint64_t)v182);
    uint64_t v48 = (uint64_t)v39;
    goto LABEL_21;
  }
  id v55 = v39[3];
  uint64_t v158 = v39[2];
  uint64_t v56 = (char *)v39[5];
  uint64_t v57 = v39[6];
  uint64_t v171 = (char *)v39[4];
  uint64_t v172 = v56;
  int v58 = v39[7];
  uint64_t v151 = (id)v39[8];
  uint64_t v59 = (void *)v39[9];
  uint64_t v160 = v182[36];
  sub_24D3F9B98((uint64_t)v182[34], (unint64_t)v182[35], (uint64_t)v182[36], (uint64_t)v182[37], (unint64_t)v182[38]);
  uint64_t v60 = v158;
  sub_24D3F9C18(v158, v55);
  swift_bridgeObjectRetain();
  uint64_t v61 = (uint64_t)v172;
  sub_24D3F9C18((uint64_t)v172, v57);
  swift_bridgeObjectRetain();
  id v156 = v58;
  swift_bridgeObjectRetain();
  sub_24D3F9C18(v60, v55);
  sub_24D3F9C18(v61, v57);
  swift_bridgeObjectRetain();
  uint64_t v153 = v55;
  uint64_t v62 = sub_24DCC8B28();
  id v155 = (void (*)(uint64_t, id, uint64_t))v57;
  uint64_t v63 = sub_24DCC8B28();
  uint64_t v64 = v41;
  unint64_t v65 = (void *)v63;
  long long v173 = v64;
  char v154 = v59;
  if (v59)
  {
    uint64_t v66 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v66 = 0;
  }
  uint64_t v157 = (char *)self;
  uint64_t v152 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F055A8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v62, v65, v66);
  uint64_t v67 = (uint64_t)v172;
  int64_t v68 = (unint64_t)v155;
  sub_24D400DCC((uint64_t)v172, (unint64_t)v155);
  uint64_t v69 = (void *)v62;
  uint64_t v70 = v158;
  unint64_t v71 = v153;
  sub_24D400DCC(v158, v153);

  sub_24D400DCC(v70, v71);
  swift_bridgeObjectRelease();
  sub_24D400DCC(v67, v68);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v72 = *(void *)&v174[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_providerDomainID];
  uint64_t v73 = v152;
  uint64_t v74 = objc_msgSend(v157, sel_etagForVersion_providerDomainID_, v152, v72);

  uint64_t v152 = (id)sub_24DCC97E8();
  uint64_t v76 = v75;

  sub_24D3F9C18((uint64_t)v175, (unint64_t)v176);
  sub_24D3F9C18((uint64_t)v159, (unint64_t)v178);
  uint64_t v77 = v173;
  swift_bridgeObjectRetain();
  uint64_t v78 = (void *)sub_24DCC8B28();
  uint64_t v79 = (void *)sub_24DCC8B28();
  if (v77)
  {
    int v80 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v80 = 0;
  }
  unint64_t v81 = v162;
  unint64_t v82 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F055A8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v78, v79, v80);
  sub_24D400DCC((uint64_t)v159, (unint64_t)v178);
  sub_24D400DCC((uint64_t)v175, (unint64_t)v176);

  uint64_t v83 = objc_msgSend(v157, sel_etagForVersion_providerDomainID_, v82, v72);
  uint64_t v84 = sub_24DCC97E8();
  id v86 = v85;

  if ((id)v84 != v152 || v86 != v76)
  {
    uint64_t v87 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v87)
    {
      v177(0, 0, 0, 0);
      goto LABEL_33;
    }
    uint64_t v150 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F054B8]), sel_initWithProviderDomainID_itemIdentifier_, v72, v81);
    type metadata accessor for GSRemoteVersionsManager();
    uint64_t v88 = (id)swift_allocObject();
    uint64_t v89 = objc_msgSend(objc_allocWithZone((Class)FPGSStorageManager), sel_init);
    uint64_t v152 = v88;
    *((void *)v88 + 2) = v89;
    uint64_t v90 = v158;
    uint64_t v91 = v153;
    sub_24D3F9C18(v158, v153);
    swift_bridgeObjectRetain();
    uint64_t v92 = (uint64_t)v172;
    uint64_t v93 = (unint64_t)v155;
    sub_24D3F9C18((uint64_t)v172, (unint64_t)v155);
    swift_bridgeObjectRetain();
    unint64_t v94 = v154;
    swift_bridgeObjectRetain();
    sub_24D3F9C18(v90, v91);
    sub_24D3F9C18(v92, v93);
    swift_bridgeObjectRetain();
    uint64_t v95 = (void *)sub_24DCC8B28();
    int v96 = (void *)sub_24DCC8B28();
    if (v94)
    {
      unint64_t v94 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
    }
    uint64_t v151 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F055A8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v95, v96, v94);
    uint64_t v97 = (uint64_t)v172;
    id v98 = (unint64_t)v155;
    sub_24D400DCC((uint64_t)v172, (unint64_t)v155);
    unint64_t v99 = v158;
    unsigned int v100 = v153;
    sub_24D400DCC(v158, v153);

    sub_24D400DCC(v99, v100);
    swift_bridgeObjectRelease();
    sub_24D400DCC(v97, v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v101 = v150;
    id v102 = v166;
    sub_24DCC88C8();
    uint64_t v103 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    uint64_t v104 = v151;
    id v105 = objc_msgSend(v157, sel_versionFaultName_identifier_ext_, v151, v101, v103);

    uint64_t v172 = (char *)sub_24DCC97E8();
    uint64_t v107 = v106;

    id v156 = sub_24DCC97E8();
    char v109 = v108;
    id v155 = *(void (**)(uint64_t, id, uint64_t))(v168 + 16);
    v155(v169, v102, v170);
    id v110 = (void *)*((void *)v152 + 2);
    uint64_t v171 = (char *)v162;
    uint64_t v162 = v101;
    swift_retain();
    uint64_t v157 = v174;
    swift_retain();
    long long v174 = v107;
    swift_bridgeObjectRetain();
    id v111 = (void *)sub_24DCC8948();
    uint64_t v181 = 0;
    uint64_t v112 = objc_msgSend(v110, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v111, 0, &v181);

    unint64_t v113 = v181;
    uint64_t v158 = v109;
    if (v112)
    {
      char v114 = (uint64_t)v172;
      uint64_t v115 = (void *)sub_24DCC97B8();
      uint64_t v116 = (void *)sub_24DCC97B8();
      uint64_t v181 = 0;
      uint64_t v117 = objc_msgSend(v112, sel_additionWithName_inNameSpace_error_, v115, v116, &v181);

      id v118 = v181;
      uint64_t v119 = v167;
      if (v117)
      {
        uint64_t v120 = v117;
        uint64_t v121 = v27;
        uint64_t v122 = v157;
        uint64_t v123 = v171;
        uint64_t v124 = v162;
        uint64_t v125 = v169;
        sub_24D6CDE00(v117, v177, v121, v157, v171, v162, v169, (uint64_t)v152, v114, (uint64_t)v174);

        swift_release();
        uint64_t v126 = v170;
        unint64_t v127 = v168;
LABEL_42:

        (*(void (**)(uint64_t, uint64_t))(v127 + 8))(v125, v126);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_release();
        sub_24D400D4C((uint64_t)v175, (unint64_t)v176, (uint64_t)v160, (uint64_t)v159, (unint64_t)v178);
        sub_24D3E33C4((uint64_t)v182);

        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
      uint64_t v132 = v118;
      int v133 = (void *)sub_24DCC8828();

      uint64_t v166 = v133;
      swift_willThrow();

      uint64_t v180 = 0;
      uint64_t v130 = v169;
      uint64_t v131 = v170;
    }
    else
    {
      uint64_t v128 = v113;
      id v129 = (void *)sub_24DCC8828();

      uint64_t v166 = v129;
      swift_willThrow();
      uint64_t v180 = 0;
      uint64_t v130 = v169;
      uint64_t v131 = v170;
      uint64_t v119 = v167;
    }
    v155((uint64_t)v119, (id)v130, v131);
    unint64_t v127 = v168;
    id v134 = (*(unsigned __int8 *)(v168 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v168 + 80);
    uint64_t v135 = (v163 + v134 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v136 = (char *)swift_allocObject();
    uint64_t v137 = v170;
    uint64_t v138 = v171;
    id v139 = v177;
    *((void *)v136 + 2) = v171;
    *((void *)v136 + 3) = v139;
    uint64_t v140 = v27;
    *((void *)v136 + 4) = v27;
    uint64_t v141 = v162;
    *((void *)v136 + 5) = v162;
    (*(void (**)(char *, char *, uint64_t))(v127 + 32))(&v136[v134], v167, v137);
    *(void *)&v136[v135] = v152;
    uint64_t v142 = &v136[(v135 + 15) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v124 = v141;
    id v143 = v174;
    *(void *)uint64_t v142 = v172;
    *((void *)v142 + 1) = v143;
    uint64_t v172 = v138;
    uint64_t v144 = v141;
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v145 = v166;
    uint64_t v146 = v166;
    char v147 = v157;
    sub_24D6BC5A0((uint64_t)"fetchLatestVersion(for:request:completionHandler:)", 50, 2, (uint64_t)sub_24D6D4698, (uint64_t)v136, v157, v177, v140);
    swift_release();

    id v148 = v145;
    uint64_t v125 = v169;

    uint64_t v126 = v170;
    uint64_t v123 = v138;
    swift_release();
    goto LABEL_42;
  }
  swift_bridgeObjectRelease_n();
  v177(0, 0, 0, 0);
LABEL_33:
  sub_24D400D4C((uint64_t)v175, (unint64_t)v176, (uint64_t)v160, (uint64_t)v159, (unint64_t)v178);
  sub_24D3E33C4((uint64_t)v182);

  sub_24D415F74((uint64_t)v164, (uint64_t *)&unk_26B196F50);
}

uint64_t sub_24D69A3B0(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v27 = a7;
  uint64_t v28 = a8;
  uint64_t v29 = a2;
  uint64_t v24 = a3;
  uint64_t v25 = a9;
  uint64_t v12 = sub_24DCC8A58();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for FPFileTree();
  uint64_t v26 = swift_dynamicCastClassUnconditional();
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a6, v12);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v17 = (v14 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = (char *)swift_allocObject();
  *((void *)v18 + 2) = v24;
  *((void *)v18 + 3) = a4;
  *((void *)v18 + 4) = a5;
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v18[v16], v15, v12);
  uint64_t v19 = v28;
  *(void *)&v18[v17] = v27;
  uint64_t v20 = &v18[(v17 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v21 = v25;
  *(void *)uint64_t v20 = v19;
  *((void *)v20 + 1) = v21;
  v30[0] = 0;
  v30[1] = 0;
  v30[2] = 1;
  long long v31 = 0u;
  long long v32 = 0u;
  uint64_t v33 = 0;
  swift_retain();
  swift_retain();
  id v22 = a5;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24D5BCB70(v29, 0, 0, v30, 0, 1, (uint64_t)sub_24D6D4964, (uint64_t)v18);
  swift_release();
  return swift_release();
}

void sub_24D69A5D8(uint64_t a1, void (*a2)(uint64_t, uint64_t, id, id), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v58 = a8;
  uint64_t v55 = a7;
  uint64_t v56 = a6;
  uint64_t v57 = a5;
  uint64_t v53 = a4;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v54 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24DCC8A58();
  uint64_t v59 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for StagedRemoteVersion(0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v48 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986BFB0);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (void **)((char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24D415FD0(a1, (uint64_t)v21, &qword_26986BFB0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v22 = *v21;
    id v23 = v22;
    a2(0, 0, 0, v22);
  }
  else
  {
    uint64_t v52 = a3;
    sub_24D40BC84((uint64_t)v21, (uint64_t)v18, type metadata accessor for StagedRemoteVersion);
    uint64_t v24 = &v18[*(int *)(v16 + 20)];
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v59 + 16);
    id v50 = v15;
    v25(v15, v24, v13);
    sub_24D7C43F4((uint64_t *)v60);
    long long v64 = v60[0];
    long long v63 = *(_OWORD *)((char *)&v60[1] + 8);
    sub_24D3F0BA0((uint64_t)&v61, (uint64_t)v62, (uint64_t *)&unk_26B199D80);
    sub_24D5D7D58((uint64_t)&v64);
    sub_24D5D7D58((uint64_t)&v63);
    sub_24D43E368((uint64_t)v62);
    uint64_t v26 = (void *)sub_24DCC8B28();
    uint64_t v27 = (void *)sub_24DCC8B28();
    sub_24D3F0BA0((uint64_t)v62, (uint64_t)v65, (uint64_t *)&unk_26B199D80);
    uint64_t v51 = a2;
    uint64_t v49 = v18;
    if (v65[1])
    {
      uint64_t v28 = (void *)sub_24DCC97B8();
      sub_24D58F9DC((uint64_t)v62);
    }
    else
    {
      uint64_t v28 = 0;
    }
    uint64_t v29 = self;
    id v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F055A8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v26, v27, v28);
    sub_24D5D7D88((uint64_t)&v63);
    sub_24D5D7D88((uint64_t)&v64);

    sub_24D5DA4D8((uint64_t *)v60);
    uint64_t v31 = v57;
    sub_24DCC88C8();
    long long v32 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v29, sel_versionFaultName_identifier_ext_, v30, v53, v32);

    uint64_t v34 = sub_24DCC97E8();
    unint64_t v36 = v35;

    uint64_t v37 = (void (*)(char *, uint64_t))sub_24D428D08(MEMORY[0x263F8EE78]);
    uint64_t v38 = sub_24DCC97E8();
    uint64_t v40 = v39;
    uint64_t v41 = v59;
    uint64_t v42 = v54;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v59 + 56))(v54, 1, 1, v13);
    uint64_t v43 = v52;
    swift_retain();
    uint64_t v53 = v13;
    uint64_t v44 = (uint64_t)v42;
    uint64_t v45 = v58;
    swift_bridgeObjectRetain();
    uint64_t v46 = v34;
    uint64_t v47 = (uint64_t)v50;
    sub_24D7BDD18(v31, v37, v46, v36, v38, v40, (uint64_t)v50, v44, 0, (char *)0xF000000000000000, 1, 1, v56, v51, v43, v55, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_24D415F74(v44, (uint64_t *)&unk_26B199050);
    (*(void (**)(uint64_t, uint64_t))(v41 + 8))(v47, v53);
    sub_24D3FC974((uint64_t)v49, type metadata accessor for StagedRemoteVersion);
  }
}

void sub_24D69AB38(uint64_t a1, void (*a2)(uint64_t, uint64_t, id, id), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a4;
  uint64_t v25 = a5;
  uint64_t v7 = sub_24DCC8A58();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C610);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (id *)((char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24D415FD0(a1, (uint64_t)v16, &qword_26986C610);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    id v17 = *v16;
    id v18 = *v16;
    a2(0, 0, 0, v17);
  }
  else
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986C618);
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v13, (char *)v16 + *(int *)(v19 + 48), v7);
    sub_24D3FB6F8(0, &qword_26B194038);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v13, v7);
    id v20 = sub_24D609184((uint64_t)v11, 1);
    id v21 = v20;
    a2(v24, v25, v20, 0);

    id v22 = *(void (**)(char *, uint64_t))(v8 + 8);
    v22(v13, v7);
    v22((char *)v16, v7);
  }
}

void sub_24D69B07C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a2)
  {
    uint64_t v8 = (void *)sub_24DCC97B8();
    if (a4)
    {
LABEL_3:
      uint64_t v9 = sub_24DCC8818();
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v8 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  uint64_t v9 = 0;
LABEL_6:
  id v10 = (id)v9;
  (*(void (**)(uint64_t, void *, uint64_t))(a5 + 16))(a5, v8, a3);
}

void sub_24D69B114(void *a1, void *a2, void (*a3)(void *, id), uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190800);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    swift_beginAccess();
    uint64_t v15 = MEMORY[0x25332B1A0](a5 + 16);
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = a3;
      *(void *)(v17 + 24) = a4;
      id v18 = a1;
      swift_retain_n();
      id v19 = v18;
      if (sub_24D409A60(v19))
      {
        uint64_t v20 = sub_24DCC9DF8();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v14, 1, 1, v20);
        id v21 = (void *)swift_allocObject();
        v21[2] = 0;
        v21[3] = 0;
        v21[4] = v19;
        v21[5] = v16;
        v21[6] = a6;
        v21[7] = sub_24D4189D0;
        v21[8] = v17;
        id v22 = v16;
        sub_24D40B3C8(a6);
        swift_retain();
        sub_24D3D3434((uint64_t)v14, (uint64_t)&unk_26986C6F8, (uint64_t)v21);

        swift_release();
        swift_release();

        swift_release();
      }
      else
      {

        id v25 = v19;
        a3(a1, 0);

        swift_release();
        swift_release();
      }
    }
    else
    {
      id v23 = a1;
      id v24 = (id)FPDomainUnavailableError();
      a3(0, v24);
    }
  }
  else
  {
    a3(0, a2);
  }
}

uint64_t sub_24D69B380(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = &v2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v15 = (void *)MEMORY[0x25332B1A0](v14);
  swift_retain_n();
  if (v15)
  {
    if (objc_msgSend(v15, sel_unableToStartup))
    {
      id v16 = sub_24D621D5C();
      a1();

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v17 = (void *)MEMORY[0x25332B1A0](v14);
    if (v17)
    {
      id v18 = v17;
      id v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_798;
      uint64_t v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v20 = v26;
      id v19 = v27;
      MEMORY[0x2533282B0](0, v11, v8, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
    }
  }
  id v21 = *(void **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v22 = *(void **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v23 = (void *)swift_allocObject();
  v23[2] = v3;
  v23[3] = sub_24D6E4F84;
  v23[4] = v12;
  v23[5] = sub_24D6C9748;
  v23[6] = v13;
  id v24 = v3;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"disableDBQueryStatistics(completionHandler:)", 44, 2, v21, v22, (uint64_t)sub_24D3E5BC8, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D69B7D8(uint64_t a1, uint64_t (*a2)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v3 = (void *)(*(void *)(swift_dynamicCastClassUnconditional() + qword_26B1A27B0)
                + OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics);
  swift_beginAccess();
  *uint64_t v3 = 0;
  swift_bridgeObjectRelease();
  return a2(0);
}

uint64_t sub_24D69B898(void (*a1)(void), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v30 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v29 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a2;
  uint64_t v14 = &v2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v15 = (void *)MEMORY[0x25332B1A0](v14);
  swift_retain_n();
  if (v15)
  {
    if (objc_msgSend(v15, sel_unableToStartup))
    {
      id v16 = sub_24D621D5C();
      a1();

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v17 = (void *)MEMORY[0x25332B1A0](v14);
    if (v17)
    {
      id v18 = v17;
      id v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_812;
      uint64_t v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v20 = v26;
      id v19 = v27;
      MEMORY[0x2533282B0](0, v11, v8, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v11, v29);
    }
  }
  id v21 = *(void **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v22 = *(void **)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v23 = (void *)swift_allocObject();
  v23[2] = v3;
  v23[3] = sub_24D6E4F84;
  v23[4] = v12;
  v23[5] = sub_24D6C9754;
  v23[6] = v13;
  id v24 = v3;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"resetDBQueryStatistics(completionHandler:)", 42, 2, v21, v22, (uint64_t)sub_24D3E5BC8, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D69BCF0(uint64_t a1, uint64_t (*a2)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  uint64_t v3 = (char *)*(id *)(swift_dynamicCastClassUnconditional() + qword_26B1A27B0);
  unint64_t v4 = sub_24D42B554(MEMORY[0x263F8EE78]);
  uint64_t v5 = (unint64_t *)&v3[OBJC_IVAR____TtC9libfssync27PQLConnectionWithStatistics_dbStatistics];
  swift_beginAccess();
  *uint64_t v5 = v4;

  swift_bridgeObjectRelease();
  return a2(0);
}

void sub_24D69BDD8(void *a1, int a2, void *aBlock, void (*a4)(void))
{
  uint64_t v6 = _Block_copy(aBlock);
  _Block_copy(v6);
  id v7 = a1;
  a4();
  _Block_release(v6);
  _Block_release(v6);
}

uint64_t sub_24D69BE54(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a3;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  *(unsigned char *)(v7 + 32) = a1;
  swift_retain_n();
  sub_24D626B8C((uint64_t)"getDBQueryStatistics(withQueryPlan:completionHandler:)", 54, 2, (void (*)(void *, id))sub_24D6C9760, v6, (uint64_t)sub_24D6C978C, v7);
  swift_release();

  return swift_release();
}

uint64_t sub_24D69BF34(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(unsigned char *)(v9 + 24) = a4;
  *(void *)(v9 + 32) = a2;
  *(void *)(v9 + 40) = a3;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_24D6E4F90;
  *(void *)(v10 + 24) = v8;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_24D3FBC7C((uint64_t)"getDBQueryStatistics(withQueryPlan:completionHandler:)", 54, 2, sub_24D4C72D0, v10, (uint64_t)sub_24D6D4248, v9);
  swift_release();
  swift_release();

  return swift_release();
}

void sub_24D69C06C(uint64_t a1, char a2, void (*a3)(uint64_t, id))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
  id v5 = *(id *)(swift_dynamicCastClassUnconditional() + qword_26B1A27B0);
  sub_24D7C9C84(a2);
  uint64_t v7 = v6;

  if (v7)
  {
    a3(v7, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    id v8 = (id)FPNotSupportedError();
    a3(0, v8);
  }
}

void sub_24D69C278(void *a1, uint64_t a2, uint64_t a3)
{
  id v5 = a1;
  if (a1)
  {
    sub_24D3FB6F8(0, &qword_26986C528);
    id v5 = (void *)sub_24DCC9558();
  }
  if (a2) {
    uint64_t v6 = sub_24DCC8818();
  }
  else {
    uint64_t v6 = 0;
  }
  id v7 = (id)v6;
  (*(void (**)(uint64_t, void *))(a3 + 16))(a3, v5);
}

uint64_t sub_24D69C334(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190800);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_24DCC9DF8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  void v9[4] = v2;
  v9[5] = a1;
  v9[6] = a2;
  id v10 = v2;
  sub_24D3F9C18(a1, a2);
  sub_24D3D3434((uint64_t)v7, (uint64_t)&unk_26986C438, (uint64_t)v9);
  return swift_release();
}

uint64_t sub_24D69C44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  uint64_t v7 = sub_24DCC9078();
  v6[12] = v7;
  v6[13] = *(void *)(v7 - 8);
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24D69C520, 0, 0);
}

uint64_t sub_24D69C520()
{
  uint64_t v1 = (uint64_t *)(v0 + 72);
  int v2 = objc_sync_enter(*(id *)(v0 + 72));
  uint64_t v3 = *(char **)(v0 + 72);
  if (v2)
  {
    uint64_t v4 = *v1;
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v4);
  }
  uint64_t v5 = *(void *)&v3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs];
  swift_retain();
  int v6 = objc_sync_exit(v3);
  uint64_t v7 = (void *)*v1;
  if (v6)
  {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v7);
  }

  if (v5)
  {
    uint64_t v8 = v5;
  }
  else
  {
    uint64_t v9 = *v1;
    *(void *)(swift_task_alloc() + 16) = v9;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B192AD8);
    sub_24DCCA208();
    swift_task_dealloc();
    uint64_t v8 = *(void *)(v0 + 40);
    if (!v8) {
      goto LABEL_15;
    }
    swift_retain();
  }
  swift_retain();
  swift_release();
  uint64_t v10 = *(void *)(v8 + 16);
  swift_retain();
  swift_release();
  uint64_t v11 = *(void *)(v10 + qword_269891678);
  *(void *)(v0 + 128) = v11;
  swift_retain();
  swift_release();
  if (v11)
  {
    sub_24DCC86D8();
    swift_allocObject();
    sub_24DCC86C8();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199DB0);
    sub_24D5FBA94();
    sub_24DCC86B8();
    swift_release();
    uint64_t v19 = *(void *)(v0 + 48);
    *(void *)(v0 + 136) = v19;
    id v23 = (uint64_t (*)(uint64_t, char))((char *)&dword_2698706C8 + dword_2698706C8);
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v20;
    void *v20 = v0;
    v20[1] = sub_24D69CA68;
    return v23(v19, 0);
  }
LABEL_15:
  id v12 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v13 = sub_24DCC9068();
  os_log_type_t v14 = sub_24DCCA108();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl(&dword_24D3D0000, v13, v14, "Couldn't send TTR, fpDiagnosticsManager resolved to nil", v15, 2u);
    MEMORY[0x25332B030](v15, -1, -1);
  }
  uint64_t v16 = *(void *)(v0 + 120);
  uint64_t v17 = *(void *)(v0 + 96);
  uint64_t v18 = *(void *)(v0 + 104);

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  id v22 = *(uint64_t (**)(void))(v0 + 8);
  return v22();
}

uint64_t sub_24D69CA68()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0) {
    int v2 = sub_24D69CC0C;
  }
  else {
    int v2 = sub_24D69CB9C;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24D69CB9C()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24D69CC0C()
{
  uint64_t v1 = (void *)v0[19];
  id v2 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v3 = v1;
  uint64_t v4 = sub_24DCC9068();
  os_log_type_t v5 = sub_24DCCA108();
  if (os_log_type_enabled(v4, v5))
  {
    int v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)int v6 = 138412290;
    swift_getErrorValue();
    id v8 = sub_24DBA2828(v0[3]);
    v0[8] = v8;
    sub_24DCCA428();
    *uint64_t v7 = v8;

    _os_log_impl(&dword_24D3D0000, v4, v5, "Error starting TTR: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v7, -1, -1);
    MEMORY[0x25332B030](v6, -1, -1);
    swift_release();
  }
  else
  {
    swift_release();
  }
  (*(void (**)(void, void))(v0[13] + 8))(v0[14], v0[12]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_24D69CF60(uint64_t a1)
{
  v2[10] = a1;
  v2[11] = v1;
  sub_24DCC8288();
  v2[12] = swift_task_alloc();
  uint64_t v3 = sub_24DCC82A8();
  v2[13] = v3;
  v2[14] = *(void *)(v3 - 8);
  v2[15] = swift_task_alloc();
  uint64_t v4 = sub_24DCC8A58();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v5 = sub_24DCC9078();
  v2[19] = v5;
  v2[20] = *(void *)(v5 - 8);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for VFSItem(0);
  v2[23] = v6;
  v2[24] = *(void *)(v6 - 8);
  v2[25] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  v2[26] = swift_task_alloc();
  v2[27] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24D69D1B0, 0, 0);
}

uint64_t sub_24D69D1B0()
{
  uint64_t v55 = v0;
  int v1 = objc_sync_enter(*(id *)(v0 + 88));
  id v2 = *(char **)(v0 + 88);
  if (v1)
  {
    uint64_t v3 = *(void *)(v0 + 88);
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, v3);
  }
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs];
  swift_retain();
  int v5 = objc_sync_exit(v2);
  uint64_t v6 = *(void **)(v0 + 88);
  if (v5)
  {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v6);
  }

  if (!v4)
  {
    uint64_t v7 = *(void *)(v0 + 88);
    *(void *)(swift_task_alloc() + 16) = v7;
    __swift_instantiateConcreteTypeFromMangledName(qword_26B192AD8);
    sub_24DCCA208();
    swift_task_dealloc();
    uint64_t v4 = *(void *)(v0 + 64);
    if (!v4) {
      goto LABEL_16;
    }
  }
  *(void *)(v0 + 224) = v4;
  uint64_t v8 = *(void *)(*(void *)(v4 + 16) + qword_269891678);
  *(void *)(v0 + 232) = v8;
  if (!v8)
  {
    swift_release();
LABEL_16:
    id v28 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v29 = sub_24DCC9068();
    os_log_type_t v30 = sub_24DCCA128();
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v31 = 0;
      _os_log_impl(&dword_24D3D0000, v29, v30, "Couldn't trigger full feedback flow, fpfs nil", v31, 2u);
      MEMORY[0x25332B030](v31, -1, -1);
    }
    uint64_t v33 = *(void *)(v0 + 160);
    uint64_t v32 = *(void *)(v0 + 168);
    uint64_t v34 = *(void *)(v0 + 152);
    uint64_t v36 = *(void *)(v0 + 112);
    uint64_t v35 = *(void *)(v0 + 120);
    uint64_t v37 = *(void *)(v0 + 104);

    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    sub_24DCC8158();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
    sub_24DCC8808();
    sub_24DCC8128();
    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
    swift_willThrow();
    goto LABEL_24;
  }
  uint64_t v10 = *(void *)(v0 + 208);
  uint64_t v9 = *(void *)(v0 + 216);
  uint64_t v11 = *(void *)(v0 + 184);
  uint64_t v12 = *(void *)(v0 + 192);
  swift_retain();
  sub_24D40BD70(1, 1, 0, v9);
  sub_24D415FD0(v9, v10, (uint64_t *)&unk_26B199BC0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v14 = *(void *)(v0 + 136);
    uint64_t v13 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 80);
    sub_24D415F74(*(void *)(v0 + 208), (uint64_t *)&unk_26B199BC0);
    id v17 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v13, v16, v15);
    uint64_t v18 = sub_24DCC9068();
    os_log_type_t type = sub_24DCCA128();
    BOOL v19 = os_log_type_enabled(v18, type);
    uint64_t v20 = *(void *)(v0 + 176);
    uint64_t v21 = *(void *)(v0 + 160);
    uint64_t v23 = *(void *)(v0 + 136);
    uint64_t v22 = *(void *)(v0 + 144);
    uint64_t v24 = *(void *)(v0 + 128);
    if (v19)
    {
      log = v18;
      uint64_t v51 = *(void *)(v0 + 152);
      id v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v49 = swift_slowAlloc();
      uint64_t v54 = v49;
      *(_DWORD *)id v25 = 136315138;
      sub_24D3EA320((unint64_t *)&qword_26B18F640, MEMORY[0x263F06EA8]);
      uint64_t v26 = sub_24DCCAD78();
      *(void *)(v0 + 72) = sub_24D418FB4(v26, v27, &v54);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v24);
      _os_log_impl(&dword_24D3D0000, log, type, "Failed to find VFSItem for domain, from URL: %s", v25, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v49, -1, -1);
      MEMORY[0x25332B030](v25, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v51);
    }
    else
    {
      uint64_t v43 = *(void *)(v0 + 152);
      (*(void (**)(void, void))(v23 + 8))(*(void *)(v0 + 144), *(void *)(v0 + 128));

      (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v43);
    }
    uint64_t v44 = *(void *)(v0 + 216);
    uint64_t v46 = *(void *)(v0 + 112);
    uint64_t v45 = *(void *)(v0 + 120);
    uint64_t v47 = *(void *)(v0 + 104);
    sub_24DCC8148();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
    sub_24DCC8808();
    sub_24DCC8128();
    (*(void (**)(uint64_t, uint64_t))(v46 + 8))(v45, v47);
    swift_willThrow();
    swift_release();
    swift_release();
    sub_24D415F74(v44, (uint64_t *)&unk_26B199BC0);
LABEL_24:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v48 = *(uint64_t (**)(void))(v0 + 8);
    return v48();
  }
  uint64_t v38 = *(void *)(v0 + 200);
  sub_24D40BC84(*(void *)(v0 + 208), v38, type metadata accessor for VFSItem);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B194190);
  uint64_t inited = swift_initStackObject();
  *(void *)(v0 + 240) = inited;
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  char v40 = *(unsigned char *)(v38 + 8);
  *(void *)(inited + 32) = *(void *)v38;
  *(unsigned char *)(inited + 40) = v40;
  *(unsigned char *)(inited + 41) = 0;
  typea = (uint64_t (*)(uint64_t, char))((char *)&dword_2698706C8 + dword_2698706C8);
  uint64_t v41 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v41;
  *uint64_t v41 = v0;
  v41[1] = sub_24D69D948;
  return typea(inited, 0);
}

uint64_t sub_24D69D948()
{
  *(void *)(*(void *)v1 + 256) = v0;
  swift_task_dealloc();
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B199600);
  swift_arrayDestroy();
  if (v0) {
    id v2 = sub_24D69DBB4;
  }
  else {
    id v2 = sub_24D69DAA4;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24D69DAA4()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  swift_release();
  swift_release();
  sub_24D3FC974(v2, type metadata accessor for VFSItem);
  sub_24D415F74(v1, (uint64_t *)&unk_26B199BC0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24D69DBB4()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  swift_release();
  swift_release();
  sub_24D3FC974(v2, type metadata accessor for VFSItem);
  sub_24D415F74(v1, (uint64_t *)&unk_26B199BC0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_24D69DCC0(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v26 = a2;
  uint64_t v27 = a4;
  int v25 = a3;
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190800);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_24DCC9DF8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 1, 1, v15);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  unint64_t v17 = (v10 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  *(unsigned char *)(v18 + 32) = v25;
  *(void *)(v18 + 40) = v5;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v9 + 32))(v18 + v16, v11, v8);
  BOOL v19 = (void *)(v18 + v17);
  uint64_t v20 = v26;
  *BOOL v19 = v27;
  v19[1] = a5;
  *(void *)(v18 + ((v17 + 23) & 0xFFFFFFFFFFFFFFF8)) = v20;
  id v21 = v5;
  swift_retain();
  id v22 = v20;
  sub_24D3D3434((uint64_t)v14, (uint64_t)&unk_26986C448, v18);
  return swift_release();
}

uint64_t sub_24D69DEDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 40) = a8;
  *(void *)(v8 + 48) = v10;
  *(void *)(v8 + 24) = a6;
  *(void *)(v8 + 32) = a7;
  *(void *)(v8 + 16) = a5;
  *(unsigned char *)(v8 + 96) = a4;
  return MEMORY[0x270FA2498](sub_24D69DF10, 0, 0);
}

uint64_t sub_24D69DF10()
{
  if (*(unsigned char *)(v0 + 96) == 1)
  {
    id v1 = objc_msgSend(*(id *)(v0 + 48), sel_provider);
    if (v1)
    {
      uint64_t v2 = v1;
      uint64_t v3 = *(void **)(v0 + 48);
      id v4 = objc_msgSend(v1, sel_descriptor);

      id v5 = objc_msgSend(v4, sel_localizedName);
      uint64_t v6 = sub_24DCC97E8();
      uint64_t v8 = v7;

      id v9 = objc_msgSend(v3, sel_providerDomainID);
      type metadata accessor for FPFeedbackUIManager();
      uint64_t v10 = (void *)swift_allocObject();
      *(void *)(v0 + 56) = v10;
      v10[2] = v6;
      v10[3] = v8;
      v10[4] = v9;
      uint64_t v11 = sub_24DCC8918();
      uint64_t v13 = v12;
      *(void *)(v0 + 64) = v12;
      uint64_t v14 = (void *)swift_task_alloc();
      *(void *)(v0 + 72) = v14;
      *uint64_t v14 = v0;
      v14[1] = sub_24D69E148;
      return sub_24D4281C4(v11, v13, 0);
    }
    else
    {
      (*(void (**)(void))(v0 + 32))();
      uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
      return v18();
    }
  }
  else
  {
    unint64_t v16 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v16;
    *unint64_t v16 = v0;
    v16[1] = sub_24D69E2E4;
    uint64_t v17 = *(void *)(v0 + 24);
    return sub_24D69CF60(v17);
  }
}

uint64_t sub_24D69E148(char a1)
{
  *(unsigned char *)(*(void *)v1 + 97) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_24D69E268, 0, 0);
}

uint64_t sub_24D69E268()
{
  (*(void (**)(BOOL))(v0 + 32))(*(unsigned char *)(v0 + 97) == 0);
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24D69E2E4()
{
  *(void *)(*(void *)v1 + 88) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_24D69E460;
  }
  else {
    uint64_t v2 = sub_24D69E3F8;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24D69E3F8()
{
  (*(void (**)(void))(v0 + 32))(0);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_24D69E460()
{
  uint64_t v1 = *(void **)(v0 + 88);
  (*(void (**)(void))(v0 + 32))(0);

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24D69E7A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_26986C458 + dword_26986C458);
  id v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_24D3D369C;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_24D69EA0C(void *a1, int a2, void *a3, void *aBlock, void *a5)
{
  v5[3] = a3;
  v5[4] = a5;
  v5[2] = a1;
  v5[5] = _Block_copy(aBlock);
  uint64_t v9 = sub_24DCC97E8();
  uint64_t v11 = v10;
  v5[6] = v10;
  uint64_t v17 = (uint64_t (*)(id, uint64_t, uint64_t, id))((char *)&dword_26986C458 + dword_26986C458);
  id v12 = a1;
  id v13 = a3;
  id v14 = a5;
  uint64_t v15 = (void *)swift_task_alloc();
  v5[7] = v15;
  *uint64_t v15 = v5;
  v15[1] = sub_24D69EB20;
  return v17(v12, v9, v11, v13);
}

uint64_t sub_24D69EB20()
{
  uint64_t v2 = v0;
  uint64_t v4 = *v1;
  uint64_t v3 = *v1;
  id v5 = *(void **)(*v1 + 32);
  uint64_t v6 = *(void **)(*v1 + 24);
  uint64_t v7 = *(void **)(*v1 + 16);
  uint64_t v8 = *v1;
  swift_task_dealloc();

  swift_bridgeObjectRelease();
  uint64_t v9 = *(void *)(v3 + 40);
  if (v2)
  {
    uint64_t v10 = (void *)sub_24DCC8818();

    (*(void (**)(uint64_t, void *))(v9 + 16))(v9, v10);
  }
  else
  {
    (*(void (**)(void, void))(v9 + 16))(*(void *)(v3 + 40), 0);
  }
  _Block_release(*(const void **)(v4 + 40));
  uint64_t v11 = *(uint64_t (**)(void))(v8 + 8);
  return v11();
}

uint64_t sub_24D69ECF8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_24DCC9078();
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = v0[5];
  uint64_t v4 = v0[6];
  __swift_project_boxed_opaque_existential_1(v0 + 2, v3);
  (*(void (**)(void, void, uint64_t, uint64_t))(v4 + 24))(v1[7], v1[8], v3, v4);
  uint64_t v5 = MEMORY[0x263F8EE78];
  unint64_t v6 = sub_24D43037C(MEMORY[0x263F8EE78]);
  unint64_t v7 = sub_24D42A3EC(v5);
  swift_beginAccess();
  v1[10] = v6;
  v1[11] = v7;
  uint64_t v8 = MEMORY[0x263F8EE88];
  v1[12] = MEMORY[0x263F8EE88];
  v1[13] = v8;
  v1[14] = v8;
  *((unsigned char *)v1 + 120) = 0;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *((unsigned char *)v1 + 72) = 1;
  return result;
}

uint64_t sub_24D69F0A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t (*a4)(void), uint64_t a5)
{
  uint64_t v43 = a4;
  uint64_t v44 = a5;
  uint64_t v42 = a1;
  uint64_t v7 = type metadata accessor for VFSItem(0);
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v36 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B194240);
  MEMORY[0x270FA5388](v41);
  char v40 = (id *)((char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_24DCC92F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24DCC9398();
  uint64_t v14 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  unint64_t v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = *(void *)(a2 + 16);
  uint64_t v17 = *(void **)(v34 + 64);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a2;
  *(void *)(v18 + 24) = a3;
  aBlock[4] = sub_24D6D7934;
  aBlock[5] = v18;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D3D2E94;
  aBlock[3] = &block_descriptor_2911;
  uint64_t v19 = _Block_copy(aBlock);
  id v20 = v17;
  uint64_t v35 = a2;
  swift_retain();
  sub_24D40B3C8(a3);
  sub_24DCC9348();
  uint64_t v45 = MEMORY[0x263F8EE78];
  sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
  sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
  sub_24DCCA5B8();
  MEMORY[0x2533282B0](0, v16, v13, v19);
  id v21 = v40;
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v39);
  swift_release();
  sub_24D415FD0(v42, (uint64_t)v21, (uint64_t *)&unk_26B194240);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    return v43();
  }
  uint64_t v22 = v38;
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(v37 + 48))(v21, 1, v38) == 1) {
    return v43();
  }
  uint64_t v24 = v36;
  sub_24D40BC84((uint64_t)v21, v36, type metadata accessor for VFSItem);
  uint64_t v25 = v24 + *(int *)(v22 + 28);
  if (*(unsigned char *)(v25 + *(int *)(type metadata accessor for ItemMetadata() + 80)))
  {
    v43();
  }
  else
  {
    type metadata accessor for VFSFileTree(0);
    uint64_t v26 = swift_dynamicCastClassUnconditional();
    uint64_t v27 = (void *)swift_allocObject();
    id v28 = v43;
    uint64_t v29 = v44;
    v27[2] = v35;
    v27[3] = v28;
    v27[4] = v29;
    os_log_type_t v30 = (void *)swift_allocObject();
    v30[2] = v26;
    void v30[3] = sub_24D6D7974;
    v30[4] = v27;
    uint64_t v31 = *(void **)(v26 + 216);
    uint64_t v32 = (void *)swift_allocObject();
    v32[2] = v26;
    v32[3] = sub_24D6D799C;
    v32[4] = v30;
    swift_retain_n();
    swift_retain();
    swift_retain();
    swift_retain();
    id v33 = v31;
    swift_retain();
    sub_24D3E29E4(0, (uint64_t)"eventBarrier(_:)", 16, 2, (uint64_t)sub_24D6D79C4, (uint64_t)v32);
    swift_release();
    swift_release();
    swift_release();

    swift_release();
  }
  return sub_24D3FC974(v24, type metadata accessor for VFSItem);
}

uint64_t sub_24D69F674(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  if ((*(unsigned char *)(*(void *)(a1 + 16) + 112) & 0x40) != 0)
  {
    type metadata accessor for VFSFileTree(0);
    a1 = swift_dynamicCastClassUnconditional();
    uint64_t v3 = *(void (**)(uint64_t, void, void, void))(a1 + 16);
    if (v3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1908F8);
      __swift_instantiateConcreteTypeFromMangledName(qword_26B18FC00);
      uint64_t v4 = swift_allocObject();
      *(_OWORD *)(v4 + 16) = xmmword_24DCCECD0;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      swift_retain();
      v3(v4, MEMORY[0x263F8EE78], 0, 0);
      sub_24D43DD74((uint64_t)v3);
      a1 = swift_bridgeObjectRelease();
    }
  }
  return a2(a1);
}

uint64_t sub_24D69F7E8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_24DCC93F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v18[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void **)(*(void *)(v4 + 16) + 64);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v13 = v12;
  LOBYTE(v12) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    swift_beginAccess();
    sub_24D40B3C8(a1);
    sub_24D814B4C(&v19, a1);
    swift_endAccess();
    sub_24D4170B0(v19);
    type metadata accessor for FPFileTree();
    uint64_t v15 = swift_dynamicCastClassUnconditional();
    unint64_t v16 = (void *)swift_allocObject();
    v16[2] = v4;
    v16[3] = a1;
    v16[4] = a2;
    v16[5] = a3;
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = v15;
    v17[3] = sub_24D6D788C;
    v17[4] = v16;
    swift_retain();
    sub_24D40B3C8(a1);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_24D3E29E4(0, (uint64_t)"eventBarrier(_:)", 16, 2, (uint64_t)sub_24D5D7A44, (uint64_t)v17);
    swift_release();
    swift_release();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_24D69FA58(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  v19[1] = a4;
  id v20 = a3;
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19[0] = sub_24DCC9398();
  uint64_t v10 = *(void *)(v19[0] - 8);
  MEMORY[0x270FA5388](v19[0]);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = *(void **)(*(void *)(a1 + 16) + 64);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = a2;
  aBlock[4] = sub_24D6D78B8;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_24D3D2E94;
  aBlock[3] = &block_descriptor_2905;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v13;
  swift_retain();
  sub_24D40B3C8(a2);
  sub_24DCC9348();
  uint64_t v21 = MEMORY[0x263F8EE78];
  sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
  sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
  sub_24DCCA5B8();
  MEMORY[0x2533282B0](0, v12, v9, v15);
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, void))(v10 + 8))(v12, v19[0]);
  uint64_t v17 = swift_release();
  return v20(v17);
}

unint64_t sub_24D69FD40(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  unint64_t v3 = sub_24DC84528(a2);
  swift_endAccess();
  return sub_24D6D78DC(v3);
}

uint64_t sub_24D69FDA4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v48 = a2;
  uint64_t v7 = sub_24DCC93F8();
  uint64_t v50 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (uint8_t **)((char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_24DCC9078();
  uint64_t v49 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = dispatch_group_create();
  id v14 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D40B3C8(a1);
  sub_24D40B3C8(a1);
  uint64_t v15 = sub_24DCC9068();
  os_log_type_t v16 = sub_24DCCA148();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v44 = v10;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v45 = v7;
    uint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v46 = v4;
    uint64_t v43 = v19;
    *(void *)&v52[0] = v19;
    uint64_t v47 = a3;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v42 = v18 + 4;
    sub_24D40B3C8(a1);
    id v20 = v13;
    unint64_t v21 = sub_24D3D865C(a1);
    unint64_t v23 = v22;
    sub_24D4170B0(a1);
    uint64_t v24 = v21;
    id v13 = v20;
    unint64_t v51 = sub_24D418FB4(v24, v23, (uint64_t *)v52);
    a3 = v47;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);
    _os_log_impl(&dword_24D3D0000, v15, v16, "🚀  waiting for stabilization of FS and FP trees for %s", v18, 0xCu);
    uint64_t v25 = v43;
    swift_arrayDestroy();
    uint64_t v4 = v46;
    MEMORY[0x25332B030](v25, -1, -1);
    uint64_t v26 = v18;
    uint64_t v7 = v45;
    MEMORY[0x25332B030](v26, -1, -1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v44);
  }
  else
  {
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);

    (*(void (**)(char *, uint64_t))(v49 + 8))(v12, v10);
  }
  dispatch_group_enter(v13);
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = a1;
  *(void *)(v27 + 24) = v13;
  id v28 = *(void **)(v4 + 16);
  uint64_t v29 = (void *)v28[8];
  void *v9 = v29;
  uint64_t v30 = v50;
  (*(void (**)(void *, void, uint64_t))(v50 + 104))(v9, *MEMORY[0x263F8F0E0], v7);
  sub_24D40B3C8(a1);
  uint64_t v31 = v13;
  id v32 = v29;
  LOBYTE(v29) = sub_24DCC9418();
  (*(void (**)(void *, uint64_t))(v30 + 8))(v9, v7);
  if ((v29 & 1) == 0)
  {
    __break(1u);
LABEL_9:
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v28);
  }
  swift_beginAccess();
  sub_24D40B3C8(a1);
  sub_24D814B4C(&v51, a1);
  swift_endAccess();
  sub_24D4170B0(v51);
  type metadata accessor for VFSFileTree(0);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  swift_retain();
  if (objc_sync_enter(v28)) {
    goto LABEL_9;
  }
  uint64_t v33 = v4;
  id v34 = *(id *)((char *)v28 + qword_26B199590);
  if (objc_sync_exit(v28)) {
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v28);
  }
  swift_release();
  memset(v52, 0, 96);
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = v33;
  v35[3] = a1;
  v35[4] = sub_24D6D7648;
  v35[5] = v27;
  sub_24D40B3C8(a1);
  swift_retain();
  swift_retain();
  sub_24D3DC118(0, 2, (uint64_t)v52, 0, 0, (uint64_t)sub_24D6D7670, (uint64_t)v35);
  swift_release();

  swift_release();
  swift_release();
  dispatch_group_enter(v31);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = a1;
  *(void *)(v36 + 24) = v31;
  sub_24D40B3C8(a1);
  uint64_t v37 = v31;
  sub_24D69F7E8(a1, (uint64_t)sub_24D6D76C0, v36);
  swift_release();
  uint64_t v38 = (void *)v28[8];
  uint64_t v39 = (void *)swift_allocObject();
  v39[2] = a1;
  v39[3] = v33;
  v39[4] = v48;
  v39[5] = a3;
  sub_24D40B3C8(a1);
  swift_retain();
  id v40 = v38;
  swift_retain();
  sub_24D3E2DA8((uint64_t)"waitForSyncEngineStabilization(request:_:)", 42, 2, 0, v40, (uint64_t)sub_24D6D772C, (uint64_t)v39);

  return swift_release();
}

void sub_24D6A03E0(unint64_t a1, NSObject *a2, const char *a3)
{
  uint64_t v6 = sub_24DCC9078();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D40B3C8(a1);
  sub_24D40B3C8(a1);
  uint64_t v11 = sub_24DCC9068();
  os_log_type_t v12 = sub_24DCCA148();
  if (os_log_type_enabled(v11, v12))
  {
    unint64_t v23 = a2;
    uint64_t v13 = swift_slowAlloc();
    unint64_t v21 = a3;
    id v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v15;
    *(_DWORD *)id v14 = 136315138;
    id v20 = v14 + 4;
    sub_24D40B3C8(a1);
    unint64_t v16 = sub_24D3D865C(a1);
    uint64_t v22 = v6;
    uint64_t v17 = v16;
    unint64_t v19 = v18;
    sub_24D4170B0(a1);
    uint64_t v24 = sub_24D418FB4(v17, v19, &v25);
    sub_24DCCA428();
    a2 = v23;
    swift_bridgeObjectRelease();
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);
    _os_log_impl(&dword_24D3D0000, v11, v12, v21, v14, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v15, -1, -1);
    MEMORY[0x25332B030](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v22);
  }
  else
  {
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  dispatch_group_leave(a2);
}

uint64_t sub_24D6A0640(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24DCC9078();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  unint64_t v51 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v45 - v12;
  id v14 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D40B3C8(a1);
  sub_24D40B3C8(a1);
  uint64_t v15 = sub_24DCC9068();
  os_log_type_t v16 = sub_24DCCA148();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v46 = (uint8_t *)a2;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v48 = v8;
    unint64_t v18 = (uint8_t *)v17;
    uint64_t v19 = swift_slowAlloc();
    uint64_t v50 = a4;
    uint64_t v20 = v19;
    v53[0] = v19;
    uint64_t v47 = v9;
    *(_DWORD *)unint64_t v18 = 136315138;
    uint64_t v49 = a3;
    sub_24D40B3C8(a1);
    unint64_t v21 = sub_24D3D865C(a1);
    unint64_t v23 = v22;
    sub_24D4170B0(a1);
    uint64_t v52 = sub_24D418FB4(v21, v23, v53);
    a3 = v49;
    uint64_t v9 = v47;
    sub_24DCCA428();
    a2 = (uint64_t)v46;
    swift_bridgeObjectRelease();
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);
    _os_log_impl(&dword_24D3D0000, v15, v16, "🚀  processing pending ingestions for %s", v18, 0xCu);
    swift_arrayDestroy();
    uint64_t v24 = v20;
    a4 = v50;
    MEMORY[0x25332B030](v24, -1, -1);
    uint64_t v25 = v18;
    uint64_t v8 = v48;
    MEMORY[0x25332B030](v25, -1, -1);
  }
  else
  {
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);
  }

  uint64_t v26 = *(void (**)(char *, uint64_t))(v9 + 8);
  v26(v13, v8);
  uint64_t v27 = *(void *)(a2 + 16);
  sub_24D866B24("waitForSyncEngineStabilization(request:_:)", 42, 2, (uint64_t)sub_24D6D7738, a2);
  id v28 = (id)fpfs_current_or_default_log();
  uint64_t v29 = v51;
  sub_24DCC9088();
  sub_24D40B3C8(a1);
  sub_24D40B3C8(a1);
  uint64_t v30 = sub_24DCC9068();
  os_log_type_t v31 = sub_24DCCA148();
  if (os_log_type_enabled(v30, v31))
  {
    uint64_t v49 = a3;
    id v32 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v50 = a4;
    uint64_t v34 = v33;
    v53[0] = v33;
    uint64_t v48 = v8;
    *(_DWORD *)id v32 = 136315138;
    uint64_t v46 = v32 + 4;
    sub_24D40B3C8(a1);
    unint64_t v35 = sub_24D3D865C(a1);
    uint64_t v47 = v9;
    unint64_t v37 = v36;
    sub_24D4170B0(a1);
    uint64_t v38 = v35;
    a3 = v49;
    uint64_t v52 = sub_24D418FB4(v38, v37, v53);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);
    _os_log_impl(&dword_24D3D0000, v30, v31, "🚀  waiting for db stabilization for %s", v32, 0xCu);
    swift_arrayDestroy();
    uint64_t v39 = v34;
    a4 = v50;
    MEMORY[0x25332B030](v39, -1, -1);
    MEMORY[0x25332B030](v32, -1, -1);

    uint64_t v40 = v48;
    uint64_t v41 = v51;
  }
  else
  {
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);

    uint64_t v41 = v29;
    uint64_t v40 = v8;
  }
  v26(v41, v40);
  uint64_t v42 = swift_allocObject();
  *(void *)(v42 + 16) = a3;
  *(void *)(v42 + 24) = a4;
  uint64_t v43 = (void *)swift_allocObject();
  v43[2] = v27;
  v43[3] = a3;
  v43[4] = a4;
  v43[5] = a1;
  swift_retain();
  sub_24D40B3C8(a1);
  swift_retain();
  swift_retain();
  sub_24D8272E0((uint64_t)"waitForStabilization(request:_:)", 32, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6E4F84, v42, (uint64_t)sub_24D6D77A4, (uint64_t)v43);
  swift_release();
  return swift_release();
}

uint64_t sub_24D6A0BA8(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v12 = sub_24DCC93F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (unint64_t *)((char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!a1)
  {
    unint64_t v30 = a6;
    uint64_t v31 = a4;
    uint64_t v17 = *(void *)(a4 + 16);
    unint64_t v18 = *(void **)(v17 + 64);
    *uint64_t v15 = v18;
    uint64_t v19 = *(void (**)(void))(v13 + 104);
    unsigned int v33 = *MEMORY[0x263F8F0E0];
    id v32 = (void (*)(void *, void, uint64_t))v19;
    v19(v15);
    id v20 = v18;
    char v21 = sub_24DCC9418();
    unint64_t v22 = *(uint64_t (**)(void *, uint64_t))(v13 + 8);
    uint64_t result = v22(v15, v12);
    if (v21)
    {
      uint64_t v24 = *(void *)(v17 + qword_26B1A2650);
      if (v24 == a5)
      {
        uint64_t v16 = 0;
        return a2(v16);
      }
      uint64_t v25 = *(void **)(v17 + 64);
      *uint64_t v15 = v25;
      v32(v15, v33, v12);
      id v26 = v25;
      char v27 = sub_24DCC9418();
      uint64_t result = v22(v15, v12);
      if (v27)
      {
        id v28 = (void *)swift_allocObject();
        id v28[2] = a2;
        v28[3] = a3;
        unint64_t v29 = v30;
        v28[4] = v31;
        v28[5] = v24;
        v28[6] = v29;
        swift_retain();
        swift_retain();
        sub_24D40B3C8(v29);
        sub_24D69FDA4(v29, (uint64_t)sub_24D6E4F50, (uint64_t)v28);
        return swift_release();
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    return result;
  }
  uint64_t v16 = a1;
  return a2(v16);
}

uint64_t sub_24D6A0DDC(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_24DCC93F8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (uint64_t *)((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(v12 + qword_26B1A2650);
  uint64_t v14 = *(void **)(v12 + 64);
  *uint64_t v11 = v14;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v15 = v14;
  LOBYTE(v14) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v14)
  {
    uint64_t v17 = (void *)swift_allocObject();
    v17[2] = a3;
    v17[3] = a4;
    v17[4] = a1;
    v17[5] = v13;
    v17[6] = a2;
    swift_retain();
    swift_retain();
    sub_24D40B3C8(a2);
    sub_24D69FDA4(a2, (uint64_t)sub_24D6D762C, (uint64_t)v17);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24D6A0F84(unint64_t a1, uint64_t a2, void *a3, void (*a4)(void), uint64_t a5)
{
  void (*v29)(uint64_t *__return_ptr, id *, uint64_t);
  id v30;
  uint64_t v31;
  void (*v32)(void);
  char *v33;
  id v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  unint64_t v42;
  uint64_t v43;
  void *v44;
  id v45;
  id v46;
  uint8_t *v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  void (*v51)(void);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void v57[62];
  void v58[62];
  unsigned char v59[504];
  void v60[63];
  id v61;
  __int16 v62;
  uint64_t v63[63];
  unsigned char v64[504];
  uint64_t v65;

  unint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v56 = a3;
  uint64_t v7 = sub_24DCC9078();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v47 - v12;
  id v14 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D40B3C8(a1);
  sub_24D40B3C8(a1);
  id v15 = sub_24DCC9068();
  os_log_type_t v16 = sub_24DCCA148();
  BOOL v17 = os_log_type_enabled(v15, v16);
  uint64_t v54 = v7;
  uint64_t v55 = v8;
  uint64_t v49 = a1;
  uint64_t v50 = v11;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v53 = a2;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v48 = swift_slowAlloc();
    v63[0] = v48;
    *(_DWORD *)uint64_t v19 = 136315138;
    uint64_t v47 = v19 + 4;
    sub_24D40B3C8(a1);
    unint64_t v20 = sub_24D3D865C(a1);
    unint64_t v22 = v21;
    sub_24D4170B0(a1);
    v60[0] = sub_24D418FB4(v20, v22, v63);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);
    _os_log_impl(&dword_24D3D0000, v15, v16, "🚧  processing barrier request %s", v19, 0xCu);
    uint64_t v23 = v48;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v23, -1, -1);
    uint64_t v24 = v19;
    a2 = v53;
    MEMORY[0x25332B030](v24, -1, -1);

    uint64_t v25 = *(void (**)(char *, uint64_t))(v55 + 8);
    v25(v13, v54);
  }
  else
  {
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);

    uint64_t v25 = *(void (**)(char *, uint64_t))(v8 + 8);
    v25(v13, v7);
  }
  uint64_t v26 = *(void *)(a2 + 16);
  uint64_t v27 = *(void *)(v26 + 16);
  id v28 = v56;
  uint64_t v61 = v56;
  uint64_t v62 = 256;
  unint64_t v29 = *(void (**)(uint64_t *__return_ptr, id *, uint64_t))(*(void *)v27 + 168);
  swift_retain();
  unint64_t v30 = v28;
  uint64_t v31 = v65;
  v29(v63, &v61, 1);
  if (v31)
  {
    swift_release();

    return;
  }
  uint64_t v53 = a2;

  sub_24D3F0BA0((uint64_t)v63, (uint64_t)v59, qword_26B197540);
  sub_24D3F0BA0((uint64_t)v59, (uint64_t)v60, qword_26B197540);
  if (sub_24D3F0D6C((uint64_t)v60) == 1)
  {
    swift_release();
    id v32 = v51;
  }
  else
  {
    memcpy(v64, v63, 0x1F0uLL);
    sub_24DA92954((uint64_t)v57);
    sub_24D3E33C4((uint64_t)v64);
    swift_release();
    memcpy(v58, v57, sizeof(v58));
    id v32 = v51;
    if (LOBYTE(v58[55]) == 1)
    {
      uint64_t v38 = v58[26];
      if (LOBYTE(v58[26]) != 255)
      {
        uint64_t v39 = v58[25];
        unint64_t v65 = *(void *)(*(void *)(v26 + 32) + 16);
        type metadata accessor for VFSFileTree(0);
        uint64_t v40 = swift_dynamicCastClassUnconditional();
        v57[0] = v39;
        LOBYTE(v57[1]) = v38;
        uint64_t v41 = (void *)swift_allocObject();
        uint64_t v42 = v49;
        uint64_t v43 = v53;
        v41[2] = v49;
        v41[3] = v43;
        v41[4] = v32;
        v41[5] = v52;
        sub_24D46A3CC((uint64_t)v57, (uint64_t)(v41 + 6));
        v41[8] = v30;
        uint64_t v56 = *(id *)(v40 + 216);
        uint64_t v44 = (void *)swift_allocObject();
        v44[2] = v40;
        v44[3] = sub_24D6E2C90;
        v44[4] = v41;
        swift_retain();
        sub_24D40B3C8(v42);
        uint64_t v45 = v30;
        swift_retain();
        swift_retain();
        swift_retain();
        uint64_t v46 = v56;
        swift_retain();
        sub_24D3E29E4(0, (uint64_t)"eventBarrier(_:)", 16, 2, (uint64_t)sub_24D6E5E2C, (uint64_t)v44);

        swift_release();
        sub_24D472AF8((uint64_t)v58);
        swift_release();
        swift_release();
        return;
      }
    }
    sub_24D472AF8((uint64_t)v58);
  }
  unsigned int v33 = v50;
  uint64_t v34 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  unint64_t v35 = sub_24DCC9068();
  unint64_t v36 = sub_24DCCA148();
  if (os_log_type_enabled(v35, v36))
  {
    unint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v37 = 0;
    _os_log_impl(&dword_24D3D0000, v35, v36, "🚧  item is not a live directory", v37, 2u);
    MEMORY[0x25332B030](v37, -1, -1);
  }

  v25(v33, v54);
  v32(0);
}

uint64_t sub_24D6A1578(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, void *a7)
{
  uint64_t v44 = a7;
  uint64_t v45 = a4;
  uint64_t v46 = a2;
  uint64_t v11 = sub_24DCC9078();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v14 = (char *)v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D40B3C8(a1);
  sub_24D40B3C8(a1);
  os_log_type_t v16 = sub_24DCC9068();
  os_log_type_t v17 = sub_24DCCA148();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v42 = a5;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v40 = v11;
    uint64_t v19 = (uint8_t *)v18;
    uint64_t v20 = swift_slowAlloc();
    uint64_t v41 = a3;
    uint64_t v21 = v20;
    uint64_t v48 = v20;
    int v43 = a6;
    *(_DWORD *)uint64_t v19 = 136315138;
    v39[1] = v19 + 4;
    sub_24D40B3C8(a1);
    unint64_t v22 = sub_24D3D865C(a1);
    unint64_t v24 = v23;
    sub_24D4170B0(a1);
    uint64_t v25 = v22;
    a5 = v42;
    uint64_t v47 = sub_24D418FB4(v25, v24, &v48);
    LOBYTE(a6) = v43;
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);
    _os_log_impl(&dword_24D3D0000, v16, v17, "🚧  FS barrier observed for %s", v19, 0xCu);
    swift_arrayDestroy();
    uint64_t v26 = v21;
    a3 = v41;
    MEMORY[0x25332B030](v26, -1, -1);
    MEMORY[0x25332B030](v19, -1, -1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v40);
  }
  else
  {
    sub_24D4170B0(a1);
    sub_24D4170B0(a1);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  uint64_t v27 = *(void *)(v46 + 16);
  uint64_t v28 = v46;
  uint64_t v29 = *(void *)(*(void *)(*(void *)(v27 + 40) + 16) + 80);
  uint64_t v30 = swift_allocObject();
  *(unsigned char *)(v30 + 16) = 0;
  uint64_t v31 = (void *)swift_allocObject();
  uint64_t v32 = v45;
  v31[2] = a3;
  v31[3] = v32;
  v31[4] = v30;
  v31[5] = v29;
  uint64_t v48 = a5;
  char v49 = a6;
  unsigned int v33 = (void *)swift_allocObject();
  v33[2] = sub_24D6E2D34;
  v33[3] = v31;
  v33[4] = v28;
  v33[5] = v29;
  v33[6] = v30;
  v33[7] = a1;
  sub_24D46A3CC((uint64_t)&v48, (uint64_t)(v33 + 8));
  uint64_t v34 = v44;
  v33[10] = v44;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_24D6E2DA0;
  *(void *)(v35 + 24) = v33;
  unint64_t v36 = (void *)swift_allocObject();
  v36[2] = v27;
  v36[3] = a1;
  v36[4] = sub_24D6E2DA0;
  v36[5] = v33;
  swift_retain();
  sub_24D40B3C8(a1);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D40B3C8(a1);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v37 = v34;
  swift_retain();
  sub_24D8272E0((uint64_t)"waitForRescan(request:_:)", 25, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6E4F84, v35, (uint64_t)sub_24D6E2E2C, (uint64_t)v36);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D6A19E0(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, unint64_t a7, uint64_t a8, unsigned __int8 a9, void *a10)
{
  uint64_t v42 = a8;
  uint64_t v43 = a4;
  uint64_t v16 = sub_24DCC8CE8();
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v20 = a1;
    a2(a1);

    return;
  }
  uint64_t v40 = v17;
  uint64_t v41 = a3;
  unint64_t v36 = a7;
  uint64_t v37 = a6;
  int v38 = a9;
  uint64_t v21 = v42;
  uint64_t v39 = a10;
  uint64_t v22 = *(void *)(v43 + 16);
  sub_24D865F50();
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v24 = v23;
  (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v16);
  double v25 = v24 * 1000000000.0;
  if ((~COERCE__INT64(v24 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v26 = v39;
  uint64_t v27 = v43;
  char v28 = v38;
  if (v25 <= -9.22337204e18)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v25 >= 9.22337204e18)
  {
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v40 = (uint64_t)v25;
  uint64_t v29 = a5[3];
  if (v29 < a5[5] && a5[2] >= 1)
  {
    uint64_t v30 = (unsigned char *)(v37 + 16);
    a5[3] = v29 + 1;
    swift_beginAccess();
    *uint64_t v30 = 1;
    uint64_t v27 = v43;
    sub_24D867AAC();
  }
  uint64_t v44 = v21;
  char v45 = v28;
  uint64_t v31 = (void *)swift_allocObject();
  uint64_t v32 = v41;
  v31[2] = a2;
  v31[3] = v32;
  v31[4] = v27;
  sub_24D46A3CC((uint64_t)&v44, (uint64_t)(v31 + 5));
  unint64_t v33 = v36;
  uint64_t v34 = v40;
  v31[7] = v36;
  v31[8] = v34;
  v31[9] = v26;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_24D40B3C8(v33);
  id v35 = v26;
  sub_24DA68C50(0x206E776F6E6B6E75, 0xED0000736D657469, v33, v34, (void (*)(void *))sub_24D6E2EC8, (uint64_t)v31, v22, v22, v34);
  swift_release();
  swift_release();
}

void sub_24D6A1D28(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, void *a9)
{
  if (a1)
  {
    id v12 = a1;
    a2(a1);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = a3;
    uint64_t v21 = a5;
    char v22 = a6;
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = a4;
    sub_24D46A3CC((uint64_t)&v21, (uint64_t)(v19 + 3));
    v19[5] = a7;
    v19[6] = a8;
    v19[7] = a2;
    v19[8] = a3;
    v19[9] = a9;
    swift_retain_n();
    swift_retain();
    sub_24D40B3C8(a7);
    id v20 = a9;
    sub_24D3FBC7C((uint64_t)"waitForChanges(below:request:completionHandler:)", 48, 2, sub_24D6E4F84, v18, (uint64_t)sub_24D6E2EE4, (uint64_t)v19);
    swift_release();
    swift_release();
  }
}

void sub_24D6A1EAC(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4, uint64_t a5, char a6, unint64_t a7, uint64_t a8, void *a9)
{
  if (a1)
  {
    id v12 = a1;
    a2(a1);
  }
  else
  {
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = a2;
    *(void *)(v18 + 24) = a3;
    uint64_t v21 = a5;
    char v22 = a6;
    uint64_t v19 = (void *)swift_allocObject();
    void v19[2] = a4;
    sub_24D46A3CC((uint64_t)&v21, (uint64_t)(v19 + 3));
    v19[5] = a7;
    v19[6] = a8;
    v19[7] = a2;
    v19[8] = a3;
    v19[9] = a9;
    swift_retain_n();
    swift_retain();
    sub_24D40B3C8(a7);
    id v20 = a9;
    sub_24D8272E0((uint64_t)"waitForChanges(below:request:completionHandler:)", 48, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6E4F84, v18, (uint64_t)sub_24D6E306C, (uint64_t)v19);
    swift_release();
    swift_release();
  }
}

uint64_t sub_24D6A2048(uint64_t a1, uint64_t a2, char a3, unint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v20 = *(void *)(a1 + 16);
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a6;
  v16[3] = a7;
  v16[4] = a1;
  v16[5] = a8;
  void v16[6] = a4;
  v16[7] = a5;
  uint64_t v21 = a2;
  char v22 = a3;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = v20;
  sub_24D46A3CC((uint64_t)&v21, v17 + 24);
  *(void *)(v17 + 40) = a5;
  swift_retain();
  swift_retain();
  id v18 = a8;
  sub_24D40B3C8(a4);
  swift_retain();
  sub_24D6A9380(0xD000000000000017, 0x800000024DD04810, a4, a5, (uint64_t (*)(uint64_t))sub_24D6E30F8, v17, (uint64_t)sub_24D6E30E8, (uint64_t)v16);
  swift_release();
  return swift_release();
}

void sub_24D6A21A8(void *a1, void (*a2)(void *), uint64_t a3, uint64_t a4, void *a5, unint64_t a6, uint64_t a7)
{
  if (a1)
  {
    id v10 = a1;
    a2(a1);
  }
  else
  {
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = a2;
    *(void *)(v15 + 24) = a3;
    uint64_t v16 = (void *)swift_allocObject();
    v16[2] = a4;
    v16[3] = a5;
    v16[4] = a6;
    v16[5] = a7;
    void v16[6] = a2;
    v16[7] = a3;
    swift_retain_n();
    swift_retain();
    id v17 = a5;
    sub_24D40B3C8(a6);
    sub_24D8272E0((uint64_t)"waitForChanges(below:request:completionHandler:)", 48, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6E4F84, v15, (uint64_t)sub_24D6E33F8, (uint64_t)v16);
    swift_release();
    swift_release();
  }
}

uint64_t sub_24D6A2330(uint64_t a1, char a2, unint64_t a3, uint64_t a4, void (*a5)(void *), uint64_t a6)
{
  unint64_t v16 = 0xEB0000000020776FLL;
  sub_24D3D4384(a1, a2);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v15 = a1;
  LOBYTE(v16) = a2;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v6;
  sub_24D46A3CC((uint64_t)&v15, v12 + 24);
  *(void *)(v12 + 40) = a4;
  swift_retain();
  sub_24DA5A898(0x6C6562206E616373, 0xEB0000000020776FLL, a3, a4, (uint64_t (*)(uint64_t))sub_24D6E2FF4, v12, a5, a6);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_24D6A245C(void *a1, void (*a2)(void *, uint64_t), uint64_t a3, uint64_t a4)
{
  if (a1)
  {
    id v7 = a1;
    a2(a1, 1);
  }
  else
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    *(void *)(v9 + 24) = a3;
    id v10 = (void *)swift_allocObject();
    v10[2] = a2;
    v10[3] = a3;
    v10[4] = a4;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_24D417998;
    *(void *)(v11 + 24) = v9;
    swift_retain_n();
    swift_retain();
    swift_retain();
    sub_24D3FBC7C((uint64_t)"testingOperations(request:completionHandler:)", 45, 2, sub_24D5B2F84, v11, (uint64_t)sub_24D6D7A34, (uint64_t)v10);
    swift_release();
    swift_release();
    swift_release();
  }
}

void sub_24D6A25CC(void (*a1)(void *, BOOL))
{
  uint64_t v3 = sub_24D6A2674();
  if (v1)
  {
    uint64_t v4 = v1;
  }
  else
  {
    uint64_t v4 = (void *)sub_24D58FD90(v3);
    swift_bridgeObjectRelease();
  }
  a1(v4, v1 != 0);
  sub_24D6D9EB8(v4, v1 != 0, MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6A2674()
{
  uint64_t v2 = v0;
  uint64_t v3 = sub_24DCC93F8();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (uint64_t *)((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = *(void **)(v2 + 64);
  *uint64_t v6 = v7;
  (*(void (**)(void *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F8F0E0], v3);
  id v8 = v7;
  LOBYTE(v7) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v4 + 8))(v6, v3);
  if (v7)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    uint64_t result = (*(uint64_t (**)(uint64_t))(**(void **)(v2 + 24) + 176))(result);
    if (!v1)
    {
      uint64_t v10 = sub_24D7864B8(result);
      uint64_t v11 = (*(uint64_t (**)(uint64_t))(**(void **)(v2 + 16) + 296))(v10);
      sub_24D7864B8(v11);
      uint64_t v12 = *(void **)(v2 + qword_26B1A2620);
      swift_retain();
      sub_24DBA3C4C(v12, (uint64_t)&v14, v2);
      return v14;
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24D6A285C(id a1, char a2, void (*a3)(id, uint64_t), uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    id v14 = a1;
    a3(a1, 1);
    sub_24D6D9EB8(a1, 1, MEMORY[0x263F8EEA0]);
  }
  else
  {
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = a3;
    *(void *)(v11 + 24) = a4;
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = a1;
    v12[3] = a6;
    v12[4] = a5;
    v12[5] = a3;
    v12[6] = a4;
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 16) = sub_24D417998;
    *(void *)(v13 + 24) = v11;
    swift_retain();
    sub_24D3DEC74(a1, 0);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    sub_24D8272E0((uint64_t)"runTestingOperations(_:request:completionHandler:)", 50, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6D7AD0, v13, (uint64_t)sub_24D6D7AA4, (uint64_t)v12);
    swift_release();
    swift_release();
    swift_release();
  }
}

uint64_t sub_24D6A2A2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v61 = a4;
  uint64_t v62 = a5;
  uint64_t v73 = a3;
  uint64_t v8 = sub_24DCC8288();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v70 = (char *)&v57 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_24DCC82A8();
  uint64_t v10 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  int64_t v68 = (char *)&v57 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v12 = *(void *)(v58 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x270FA5388](v58);
  uint64_t v67 = (uint64_t)&v57 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v76 = (uint64_t)&v57 - v16;
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v57 - v17;
  dispatch_group_t v72 = dispatch_group_create();
  uint64_t v19 = swift_allocObject();
  swift_bridgeObjectRetain();
  unint64_t v20 = sub_24D42B248(MEMORY[0x263F8EE78]);
  uint64_t v71 = v19;
  *(void *)(v19 + 16) = v20;
  uint64_t v74 = (void *)(v19 + 16);
  uint64_t v77 = a2;
  swift_bridgeObjectRetain();
  sub_24D6B3C24(&v77);
  if (v5) {
    goto LABEL_23;
  }
  uint64_t v60 = 0;
  uint64_t v21 = v77[2];
  if (!v21)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    swift_release();
    unint64_t v51 = *(void **)(*(void *)(v73 + 16) + 64);
    uint64_t v52 = (void *)swift_allocObject();
    uint64_t v53 = v62;
    v52[2] = v61;
    v52[3] = v53;
    v52[4] = v71;
    id v54 = v51;
    swift_retain();
    swift_retain();
    dispatch_group_t v55 = v72;
    sub_24D3E2DA8((uint64_t)"runTestingOperations(_:request:completionHandler:)", 50, 2, 0, v54, (uint64_t)sub_24D6D7AF0, (uint64_t)v52);

    swift_release();
    return swift_release();
  }
  uint64_t v22 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v23 = (v22 + 32) & ~v22;
  uint64_t v59 = v77;
  double v24 = (char *)v77 + v23;
  uint64_t v75 = *(void *)(v12 + 72);
  unint64_t v65 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v66 = v23;
  uint64_t v63 = v22 | 7;
  uint64_t v64 = v23 + v13;
  while (1)
  {
    sub_24D415FD0((uint64_t)v24, (uint64_t)v18, &qword_26B18FF40);
    if ((sub_24D82D2A4((uint64_t)v18, a1) & 1) == 0) {
      break;
    }
    dispatch_group_t v25 = v72;
    dispatch_group_enter(v72);
    uint64_t v26 = v67;
    sub_24D415FD0((uint64_t)v18, v67, &qword_26B18FF40);
    uint64_t v27 = swift_allocObject();
    uint64_t v28 = v71;
    *(void *)(v27 + 16) = v25;
    *(void *)(v27 + 24) = v28;
    sub_24D3F0BA0(v26, v27 + v66, &qword_26B18FF40);
    swift_retain();
    uint64_t v29 = v25;
    sub_24D6A3884((uint64_t)v18, (uint64_t)sub_24D6D8E2C, v27);
    swift_release();
LABEL_5:
    sub_24D415F74((uint64_t)v18, &qword_26B18FF40);
    v24 += v75;
    if (!--v21) {
      goto LABEL_19;
    }
  }
  uint64_t v30 = a1;
  uint64_t v31 = v76;
  sub_24D415FD0((uint64_t)v18, v76, &qword_26B18FF40);
  sub_24DCC8148();
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
  uint64_t v32 = v68;
  uint64_t v33 = v69;
  sub_24DCC8808();
  uint64_t v34 = sub_24DCC8128();
  (*v65)(v32, v33);
  id v35 = v74;
  swift_beginAccess();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v78 = (void *)*v35;
  uint64_t v37 = v78;
  *id v35 = 0x8000000000000000;
  unint64_t v39 = sub_24D6ADA20(v31);
  uint64_t v40 = v37[2];
  BOOL v41 = (v38 & 1) == 0;
  uint64_t v42 = v40 + v41;
  if (!__OFADD__(v40, v41))
  {
    char v43 = v38;
    if (v37[3] < v42)
    {
      sub_24D703338(v42, isUniquelyReferenced_nonNull_native);
      unint64_t v44 = sub_24D6ADA20(v76);
      if ((v43 & 1) != (v45 & 1)) {
        goto LABEL_22;
      }
      unint64_t v39 = v44;
      uint64_t v46 = v78;
      if ((v43 & 1) == 0) {
        goto LABEL_16;
      }
LABEL_14:
      uint64_t v47 = v46[7];

      *(void *)(v47 + 8 * v39) = v34;
LABEL_18:
      *uint64_t v74 = v46;
      swift_bridgeObjectRelease();
      sub_24D415F74(v76, &qword_26B18FF40);
      swift_endAccess();
      a1 = v30;
      goto LABEL_5;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v46 = v78;
      if (v38) {
        goto LABEL_14;
      }
    }
    else
    {
      sub_24DC7C2FC();
      uint64_t v46 = v78;
      if (v43) {
        goto LABEL_14;
      }
    }
LABEL_16:
    v46[(v39 >> 6) + 8] |= 1 << v39;
    sub_24D415FD0(v76, v46[6] + v39 * v75, &qword_26B18FF40);
    *(void *)(v46[7] + 8 * v39) = v34;
    uint64_t v48 = v46[2];
    BOOL v49 = __OFADD__(v48, 1);
    uint64_t v50 = v48 + 1;
    if (v49) {
      goto LABEL_21;
    }
    v46[2] = v50;
    goto LABEL_18;
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  sub_24DCCAF18();
  __break(1u);
LABEL_23:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_24D6A3078(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v78 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v79 = (id *)((char *)&v77 - v8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  int v80 = (id *)((char *)&v77 - v10);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v77 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (id *)((char *)&v77 - v15);
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v77 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C4C0);
  uint64_t v20 = MEMORY[0x270FA5388](v19 - 8);
  uint64_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (uint64_t)&v22[*(int *)(v20 + 56)];
  sub_24D415FD0(a1, (uint64_t)v22, &qword_26B18FF40);
  uint64_t v24 = v23;
  sub_24D415FD0(a2, v23, &qword_26B18FF40);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_24D415FD0((uint64_t)v22, (uint64_t)v18, &qword_26B18FF40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
    if (swift_getEnumCaseMultiPayload() != 6)
    {
      unint64_t v39 = (uint64_t *)&unk_26B1936D0;
      uint64_t v40 = (uint64_t)v18;
LABEL_38:
      sub_24D415F74(v40, v39);
      goto LABEL_39;
    }
    dispatch_group_t v25 = (id *)&v18[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C660) + 48)];
    uint64_t v26 = v24;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v33 = v24;
      uint64_t v34 = v80;
      sub_24D415FD0(v33, (uint64_t)v80, &qword_26B18FF40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (!EnumCaseMultiPayload)
      {
        uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986F100);
        uint64_t v37 = (uint64_t)v34 + *(int *)(v69 + 48);

        goto LABEL_24;
      }
      if (EnumCaseMultiPayload == 1)
      {
        unint64_t v36 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986C670);
        uint64_t v37 = (uint64_t)v34 + v36[12];
        char v38 = (uint64_t *)((char *)v34 + v36[20]);

        sub_24D3E386C(*v38, v38[1], v38[2], v38[3], v38[4], v38[5], v38[6], v38[7], v38[8]);
LABEL_24:
        sub_24D415F74(v37, (uint64_t *)&unk_26B196F60);

LABEL_33:
        sub_24D415F74((uint64_t)v25, (uint64_t *)&unk_26B199BC0);
        goto LABEL_34;
      }
      uint64_t v70 = &qword_26B1936E0;
      uint64_t v71 = (uint64_t)v34;
LABEL_36:
      sub_24D415F74(v71, v70);
      unint64_t v39 = (uint64_t *)&unk_26B199BC0;
      goto LABEL_37;
    }
    sub_24D415FD0(v24, (uint64_t)v13, &qword_26B18FF40);
    int v54 = swift_getEnumCaseMultiPayload();
    if (v54)
    {
      if (v54 != 1)
      {
        uint64_t v70 = (uint64_t *)&unk_26B1936D0;
        uint64_t v71 = (uint64_t)v13;
        goto LABEL_36;
      }
      dispatch_group_t v55 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C650);
      uint64_t v56 = (uint64_t)&v13[v55[12]];
      uint64_t v57 = v55[16];
      uint64_t v58 = v22;
      uint64_t v59 = (uint64_t *)&v13[v55[20]];

      uint64_t v60 = *v59;
      unint64_t v61 = v59[1];
      uint64_t v62 = v59[2];
      uint64_t v63 = v59[3];
      unint64_t v64 = v59[4];
      uint64_t v22 = v58;
      uint64_t v26 = v24;
      sub_24D400D4C(v60, v61, v62, v63, v64);
      unint64_t v65 = *(void **)&v13[v57];
    }
    else
    {
      uint64_t v73 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F330);
      uint64_t v56 = (uint64_t)&v13[*(int *)(v73 + 48)];
      unint64_t v65 = *(void **)&v13[*(int *)(v73 + 80)];
    }

    sub_24D415F74(v56, (uint64_t *)&unk_26B196F40);
    goto LABEL_33;
  }
  sub_24D415FD0((uint64_t)v22, (uint64_t)v16, &qword_26B18FF40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
  dispatch_group_t v25 = v16;
  if (swift_getEnumCaseMultiPayload() != 6)
  {
    unint64_t v39 = &qword_26B1936E0;
LABEL_37:
    uint64_t v40 = (uint64_t)v25;
    goto LABEL_38;
  }
  uint64_t v26 = v24;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v41 = v78;
    sub_24D415FD0(v24, v78, &qword_26B18FF40);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
    int v42 = swift_getEnumCaseMultiPayload();
    if (v42)
    {
      if (v42 != 1)
      {
        uint64_t v67 = (uint64_t *)&unk_26B1936D0;
        uint64_t v68 = v41;
        goto LABEL_30;
      }
      char v43 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C650);
      uint64_t v44 = v41 + v43[12];
      uint64_t v45 = v43[16];
      uint64_t v46 = v22;
      uint64_t v47 = (uint64_t *)(v41 + v43[20]);

      uint64_t v48 = *v47;
      unint64_t v49 = v47[1];
      uint64_t v50 = v47[2];
      uint64_t v51 = v47[3];
      unint64_t v52 = v47[4];
      uint64_t v22 = v46;
      sub_24D400D4C(v48, v49, v50, v51, v52);
      uint64_t v53 = *(void **)(v41 + v45);
    }
    else
    {
      uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F330);
      uint64_t v44 = v41 + *(int *)(v72 + 48);
      uint64_t v53 = *(void **)(v41 + *(int *)(v72 + 80));
    }

    sub_24D415F74(v44, (uint64_t *)&unk_26B196F40);
    goto LABEL_28;
  }
  uint64_t v27 = v24;
  uint64_t v28 = v79;
  sub_24D415FD0(v27, (uint64_t)v79, &qword_26B18FF40);
  int v29 = swift_getEnumCaseMultiPayload();
  if (!v29)
  {
    uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986F100);
    uint64_t v31 = (uint64_t)v28 + *(int *)(v66 + 48);

    goto LABEL_21;
  }
  if (v29 != 1)
  {
    uint64_t v67 = &qword_26B1936E0;
    uint64_t v68 = (uint64_t)v28;
LABEL_30:
    sub_24D415F74(v68, v67);

LABEL_39:
    uint64_t v75 = 0;
    uint64_t v74 = (uint64_t *)&unk_26986C4C0;
    goto LABEL_40;
  }
  uint64_t v30 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986C670);
  uint64_t v31 = (uint64_t)v28 + v30[12];
  uint64_t v32 = (uint64_t *)((char *)v28 + v30[20]);

  sub_24D3E386C(*v32, v32[1], v32[2], v32[3], v32[4], v32[5], v32[6], v32[7], v32[8]);
LABEL_21:
  sub_24D415F74(v31, (uint64_t *)&unk_26B196F60);

LABEL_28:
LABEL_34:
  uint64_t v74 = &qword_26B18FF40;
  sub_24D415F74(v26, &qword_26B18FF40);
  uint64_t v75 = 1;
LABEL_40:
  sub_24D415F74((uint64_t)v22, v74);
  return v75;
}

void sub_24D6A36D0(void *a1, dispatch_group_t group)
{
  if (a1)
  {
    id v4 = (id)MEMORY[0x270FA5388](a1);
    sub_24D6006D8(group, (void (*)(void))sub_24D6D8EA4);
  }
  dispatch_group_leave(group);
}

uint64_t sub_24D6A3774(uint64_t *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24D415FD0(a2, (uint64_t)v8, &qword_26B18FF40);
  swift_beginAccess();
  id v9 = a3;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = *a1;
  *a1 = 0x8000000000000000;
  sub_24D7165CC((uint64_t)a3, (uint64_t)v8, isUniquelyReferenced_nonNull_native);
  *a1 = v12;
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v8, &qword_26B18FF40);
  return swift_endAccess();
}

uint64_t sub_24D6A3884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1900B0);
  uint64_t v42 = *(void *)(v46 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v46);
  uint64_t v47 = (uint64_t)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  id v9 = (void **)((char *)&v41 - v8);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (uint64_t (*)())((char *)&v41 - v15);
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v41 - v17;
  uint64_t v19 = (void *)sub_24DCC93F8();
  uint64_t v20 = *(v19 - 1);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (void **)((char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v23 = *(void **)(v4 + 64);
  void *v22 = v23;
  (*(void (**)(void *, void, void *))(v20 + 104))(v22, *MEMORY[0x263F8F0E0], v19);
  id v24 = v23;
  uint64_t v25 = sub_24DCC9418();
  (*(void (**)(void *, void *))(v20 + 8))(v22, v19);
  if ((v25 & 1) == 0)
  {
    __break(1u);
LABEL_19:
    id v9 = sub_24DA148AC(0, v9[2] + 1, 1, v9);
    void *v22 = v9;
    goto LABEL_7;
  }
  uint64_t v45 = a1;
  sub_24D89E1F8(0, (uint64_t)v18);
  uint64_t v26 = v4 + qword_26B1A2688;
  swift_beginAccess();
  if (!*(void *)(*(void *)v26 + 16)
    || (swift_bridgeObjectRetain(), sub_24D6ADA20((uint64_t)v18), char v28 = v27, swift_bridgeObjectRelease(), (v28 & 1) == 0))
  {
    sub_24D415FD0((uint64_t)v18, (uint64_t)v16, &qword_26B18FF40);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v48[0] = *(void *)v26;
    *(void *)uint64_t v26 = 0x8000000000000000;
    sub_24D716454(MEMORY[0x263F8EE78], (uint64_t)v16, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v26 = v48[0];
    swift_bridgeObjectRelease();
    sub_24D415F74((uint64_t)v16, &qword_26B18FF40);
    swift_endAccess();
  }
  sub_24D415FD0((uint64_t)v18, (uint64_t)v13, &qword_26B18FF40);
  uint64_t v16 = sub_24D6A40D4();
  uint64_t v19 = sub_24DC33740(v48, (uint64_t)v13);
  if (!*v30)
  {
    ((void (*)(void *, void))v19)(v48, 0);
    sub_24D415F74((uint64_t)v13, &qword_26B18FF40);
    ((void (*)(unsigned char *, void))v16)(v49, 0);
    goto LABEL_11;
  }
  uint64_t v22 = v30;
  uint64_t v41 = v9;
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v43;
  *(void *)(v25 + 24) = v44;
  id v9 = (void *)*v22;
  swift_retain();
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  void *v22 = v9;
  if ((v31 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_7:
  unint64_t v33 = v9[2];
  unint64_t v32 = v9[3];
  if (v33 >= v32 >> 1)
  {
    id v9 = sub_24DA148AC((void *)(v32 > 1), v33 + 1, 1, v9);
    void *v22 = v9;
  }
  v9[2] = v33 + 1;
  uint64_t v34 = &v9[2 * v33];
  v34[4] = sub_24D475708;
  v34[5] = v25;
  ((void (*)(void *, void))v19)(v48, 0);
  sub_24D415F74((uint64_t)v13, &qword_26B18FF40);
  ((void (*)(unsigned char *, void))v16)(v49, 0);
  id v9 = v41;
LABEL_11:
  sub_24D415FD0(v45, (uint64_t)v9, &qword_26B18FF40);
  swift_storeEnumTagMultiPayload();
  if (*(unsigned char *)(v4 + qword_26B199578) == 1)
  {
    sub_24D415FD0((uint64_t)v9, v47, (uint64_t *)&unk_26B1900B0);
    id v35 = (unint64_t *)(v4 + qword_26B1A2628);
    swift_beginAccess();
    unint64_t v36 = *v35;
    char v37 = swift_isUniquelyReferenced_nonNull_native();
    *id v35 = v36;
    if ((v37 & 1) == 0)
    {
      unint64_t v36 = sub_24DA14DD0(0, *(void *)(v36 + 16) + 1, 1, v36);
      *id v35 = v36;
    }
    unint64_t v39 = *(void *)(v36 + 16);
    unint64_t v38 = *(void *)(v36 + 24);
    if (v39 >= v38 >> 1)
    {
      unint64_t v36 = sub_24DA14DD0(v38 > 1, v39 + 1, 1, v36);
      *id v35 = v36;
    }
    *(void *)(v36 + 16) = v39 + 1;
    sub_24D3F0BA0(v47, v36+ ((*(unsigned __int8 *)(v42 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80))+ *(void *)(v42 + 72) * v39, (uint64_t *)&unk_26B1900B0);
    swift_endAccess();
  }
  sub_24D415F74((uint64_t)v9, (uint64_t *)&unk_26B1900B0);
  return sub_24D415F74((uint64_t)v18, &qword_26B18FF40);
}

uint64_t sub_24D6A3E78(void (*a1)(uint64_t, void))
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  a1(v2, 0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D6A3EE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)swift_retain();
  if (objc_sync_enter(v2)) {
    goto LABEL_19;
  }
  uint64_t v3 = qword_26B1995A8;
  char v4 = v0[qword_26B1995A8];
  if (objc_sync_exit(v1)) {
    goto LABEL_20;
  }
  uint64_t result = swift_release();
  if ((v4 & 1) == 0) {
    return result;
  }
  uint64_t v6 = qword_26B1A2648;
  uint64_t v7 = *(void *)&v1[qword_26B1A2648];
  if (v7)
  {
    if (*(void *)(v7 + 168))
    {
      swift_getObjectType();
      swift_retain();
      swift_unknownObjectRetain();
      sub_24DCCA2B8();
      swift_unknownObjectRelease();
      if (*(void *)(v7 + 168))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        sub_24DCCA288();
        swift_unknownObjectRelease();
      }
    }
    else
    {
      swift_retain();
    }
    *(void *)(v7 + 168) = 0;
    swift_unknownObjectRelease();
    sub_24D69ECF8();
    swift_release();
  }
  *(void *)&v1[v6] = 0;
  swift_release();
  uint64_t v8 = (void *)swift_retain();
  if (objc_sync_enter(v8)) {
    goto LABEL_19;
  }
  id v9 = *(id *)&v1[qword_26B199580];
  if (objc_sync_exit(v1)) {
    goto LABEL_20;
  }
  swift_release();
  objc_msgSend(v9, sel_removeWatcher_, v1);

  uint64_t v10 = (void *)swift_retain();
  if (objc_sync_enter(v10)) {
LABEL_19:
  }
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v1);
  v1[v3] = 0;
  if (objc_sync_exit(v1)) {
LABEL_20:
  }
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v1);

  return swift_release();
}

uint64_t (*sub_24D6A40D4())()
{
  return j__swift_endAccess;
}

uint64_t sub_24D6A4138()
{
  *(void *)(*(void *)v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_24D6A4B50;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_24D6A4254;
  }
  return MEMORY[0x270FA2498](v2, 0, 0);
}

uint64_t sub_24D6A4254()
{
  uint64_t v93 = v0;
  uint64_t v1 = v0;
  uint64_t v4 = (void *)v0[3];
  uint64_t v3 = v0 + 3;
  uint64_t v2 = v4;
  if (!v4)
  {
    uint64_t v14 = (void *)v1[11];
    unint64_t v13 = v1[12];
    id v15 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v16 = v14;
    sub_24D40B3C8(v13);
    id v17 = v16;
    sub_24D40B3C8(v13);
    id v18 = sub_24DCC9068();
    os_log_type_t v19 = sub_24DCCA118();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v21 = v1[17];
    uint64_t v23 = v1[13];
    uint64_t v22 = v1[14];
    id v24 = (void *)v1[11];
    unint64_t v25 = v1[12];
    if (v20)
    {
      uint64_t v89 = v1[17];
      uint64_t v86 = v1[13];
      uint64_t v26 = swift_slowAlloc();
      uint64_t v80 = v22;
      char v27 = (void *)swift_slowAlloc();
      uint64_t v83 = swift_slowAlloc();
      uint64_t v92 = v83;
      *(_DWORD *)uint64_t v26 = 138412546;
      v3[1] = v24;
      os_log_type_t type = v19;
      id v28 = v24;
      sub_24DCCA428();
      *char v27 = v24;

      *(_WORD *)(v26 + 12) = 2082;
      sub_24D40B3C8(v25);
      unint64_t v29 = sub_24D3D865C(v25);
      unint64_t v31 = v30;
      sub_24D4170B0(v25);
      v3[2] = sub_24D418FB4(v29, v31, &v92);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D4170B0(v25);
      sub_24D4170B0(v25);
      _os_log_impl(&dword_24D3D0000, v18, type, "[patchAppLibrary] No error and no container for: %@ (request: %{public}s)", (uint8_t *)v26, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v27, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v83, -1, -1);
      MEMORY[0x25332B030](v26, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v89, v86);
    }
    else
    {

      sub_24D4170B0(v25);
      sub_24D4170B0(v25);

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    }
    goto LABEL_22;
  }
  id v5 = v2;
  id v6 = sub_24D7C479C();
  uint64_t v7 = sub_24DCC97E8();
  uint64_t v9 = v8;
  if (v7 == sub_24DCC97E8() && v9 == v10)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v12 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if ((v12 & 1) == 0)
    {

      goto LABEL_22;
    }
  }
  id v32 = objc_msgSend(self, sel_appLibraryFromContainerItem_documentsItem_, v5, v1[11]);
  if (v32)
  {
    unint64_t v33 = v32;
    if (objc_msgSend(v32, sel_isValidAppLibrary))
    {

      goto LABEL_23;
    }
    uint64_t v53 = (void *)v1[11];
    unint64_t v54 = v1[12];
    id v55 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v56 = v53;
    sub_24D40B3C8(v54);
    id v57 = v33;
    id v58 = v56;
    sub_24D40B3C8(v54);
    id v59 = v57;
    uint64_t v60 = sub_24DCC9068();
    os_log_type_t v85 = sub_24DCCA128();
    BOOL v61 = os_log_type_enabled(v60, v85);
    uint64_t v62 = v1[14];
    uint64_t v90 = v1[13];
    uint64_t v91 = v1[15];
    uint64_t v63 = (void *)v1[11];
    unint64_t v88 = v1[12];
    if (v61)
    {
      typeb = v60;
      uint64_t v64 = swift_slowAlloc();
      uint64_t v73 = (void *)swift_slowAlloc();
      uint64_t v82 = swift_slowAlloc();
      uint64_t v92 = v82;
      *(_DWORD *)uint64_t v64 = 138412802;
      v3[5] = v59;
      unint64_t v65 = v59;
      sub_24DCCA428();
      *uint64_t v73 = v33;
      os_log_t v76 = v65;

      *(_WORD *)(v64 + 12) = 2112;
      v3[6] = v63;
      id v66 = v63;
      uint64_t v67 = v3 + 7;
      sub_24DCCA428();
      v73[1] = v63;

      *(_WORD *)(v64 + 22) = 2082;
      sub_24D40B3C8(v88);
      unint64_t v68 = sub_24D3D865C(v88);
      unint64_t v70 = v69;
      sub_24D4170B0(v88);
      *uint64_t v67 = sub_24D418FB4(v68, v70, &v92);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D4170B0(v88);
      sub_24D4170B0(v88);
      _os_log_impl(&dword_24D3D0000, typeb, v85, "[patchAppLibrary] App library: %@ for: %@ is not valid (request: %{public}s)", (uint8_t *)v64, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v73, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v82, -1, -1);
      MEMORY[0x25332B030](v64, -1, -1);

      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v91, v90);
    }
    else
    {

      sub_24D4170B0(v88);
      sub_24D4170B0(v88);

      (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v91, v90);
    }
  }
  else
  {
    id v35 = (void *)v1[11];
    unint64_t v34 = v1[12];
    id v36 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v37 = v35;
    sub_24D40B3C8(v34);
    id v38 = v37;
    sub_24D40B3C8(v34);
    unint64_t v39 = sub_24DCC9068();
    os_log_type_t v40 = sub_24DCCA118();
    BOOL v41 = os_log_type_enabled(v39, v40);
    uint64_t v42 = v1[16];
    uint64_t v44 = v1[13];
    uint64_t v43 = v1[14];
    uint64_t v46 = (void *)v1[11];
    unint64_t v45 = v1[12];
    if (v41)
    {
      uint64_t v87 = v1[14];
      uint64_t v47 = v3 + 4;
      os_log_type_t typea = v40;
      uint64_t v48 = swift_slowAlloc();
      uint64_t v74 = (void *)swift_slowAlloc();
      uint64_t v81 = swift_slowAlloc();
      uint64_t v92 = v81;
      *(_DWORD *)uint64_t v48 = 138412546;
      *(void *)uint64_t v84 = v42;
      v3[3] = v46;
      uint64_t v75 = v39;
      id v49 = v46;
      sub_24DCCA428();
      *uint64_t v74 = v46;

      *(_WORD *)(v48 + 12) = 2082;
      sub_24D40B3C8(v45);
      unint64_t v50 = sub_24D3D865C(v45);
      unint64_t v52 = v51;
      sub_24D4170B0(v45);
      *uint64_t v47 = sub_24D418FB4(v50, v52, &v92);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D4170B0(v45);
      sub_24D4170B0(v45);
      _os_log_impl(&dword_24D3D0000, v75, typea, "[patchAppLibrary] App library: cannot build app Library for %@ (request: %{public}s)", (uint8_t *)v48, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v74, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v81, -1, -1);
      MEMORY[0x25332B030](v48, -1, -1);

      (*(void (**)(os_log_type_t *, uint64_t))(v87 + 8))(*(os_log_type_t **)v84, v44);
    }
    else
    {

      sub_24D4170B0(v45);
      sub_24D4170B0(v45);

      (*(void (**)(uint64_t, uint64_t))(v43 + 8))(v42, v44);
    }
  }
LABEL_22:
  unint64_t v33 = 0;
LABEL_23:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v71 = (uint64_t (*)(void *))v1[1];
  return v71(v33);
}

uint64_t sub_24D6A4B50()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_24D6A4BD8(uint64_t a1, void *a2, unint64_t a3, uint64_t a4)
{
  uint64_t v42 = a4;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1907F8);
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v41 = v9;
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9078();
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  MEMORY[0x270FA5388](v11);
  unint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v15 = a2;
  sub_24D40B3C8(a3);
  id v16 = v15;
  sub_24D40B3C8(a3);
  id v17 = sub_24DCC9068();
  os_log_type_t v18 = sub_24DCCA118();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    os_log_t v33 = v17;
    uint64_t v20 = v19;
    uint64_t v21 = (void *)swift_slowAlloc();
    uint64_t v35 = swift_slowAlloc();
    uint64_t v43 = (uint64_t)v16;
    uint64_t v44 = v35;
    *(_DWORD *)uint64_t v20 = 138543618;
    uint64_t v34 = v8;
    id v37 = v10;
    uint64_t v38 = v7;
    id v22 = v16;
    uint64_t v36 = a1;
    id v23 = v22;
    sub_24DCCA428();
    *uint64_t v21 = v16;

    *(_WORD *)(v20 + 12) = 2082;
    sub_24D40B3C8(a3);
    unint64_t v24 = sub_24D3D865C(a3);
    unint64_t v26 = v25;
    sub_24D4170B0(a3);
    uint64_t v43 = sub_24D418FB4(v24, v26, &v44);
    uint64_t v7 = v38;
    a1 = v36;
    sub_24DCCA428();
    uint64_t v10 = v37;
    swift_bridgeObjectRelease();
    sub_24D4170B0(a3);
    sub_24D4170B0(a3);
    os_log_t v27 = v33;
    _os_log_impl(&dword_24D3D0000, v33, v18, "[pathAppLibrary] resolving container item for %{public}@ (request: %{public}s", (uint8_t *)v20, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v21, -1, -1);
    uint64_t v28 = v35;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v28, -1, -1);
    MEMORY[0x25332B030](v20, -1, -1);

    uint64_t v8 = v34;
  }
  else
  {

    sub_24D4170B0(a3);
    sub_24D4170B0(a3);
  }
  (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v40);
  id v29 = objc_msgSend(v16, sel_parentItemID);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  unint64_t v30 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = v16;
  *(void *)(v31 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v31 + v30, v10, v7);
  id v32 = v16;
  sub_24D40B3C8(a3);
  sub_24D3E1828(v29, 0, 0, a3, (uint64_t)sub_24D6DD4EC, v31);
  swift_release();
}

uint64_t sub_24D6A5010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[3] = a7;
  v8[4] = a8;
  v8[2] = a4;
  id v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_26986C708 + dword_26986C708);
  uint64_t v12 = (void *)swift_task_alloc();
  v8[5] = v12;
  *uint64_t v12 = v8;
  v12[1] = sub_24D418EA0;
  return v14(a4, a5, a6);
}

uint64_t sub_24D6A50D8()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v2 = (void (*)(void *, uint64_t))v0[3];
  id v3 = v1;
  v2(v1, 1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void *sub_24D6A5168()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) != 1) {
    return 0;
  }
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_24D6DED1C;
  v2[3] = v0;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_3735;
  id v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v4 = objc_msgSend(v1, sel_fetchSwift_error_, v3, aBlock);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    return v2;
  }
  if ((objc_msgSend(v4, sel_next) & 1) == 0)
  {
    swift_release();

    return 0;
  }
  uint64_t v2 = objc_msgSend(v4, sel_longAtIndex_, 0);
  swift_release();

  return v2;
}

uint64_t sub_24D6A5378()
{
  return 0;
}

void *sub_24D6A54C0()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) != 1) {
    return 0;
  }
  uint64_t v1 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_24D6DEDF0;
  v2[3] = v0;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_3762;
  id v3 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v4 = objc_msgSend(v1, sel_fetchSwift_error_, v3, aBlock);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v4)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    return v2;
  }
  if ((objc_msgSend(v4, sel_next) & 1) == 0)
  {
    swift_release();

    return 0;
  }
  uint64_t v2 = objc_msgSend(v4, sel_longAtIndex_, 0);
  swift_release();

  return v2;
}

uint64_t sub_24D6A56D0()
{
  sub_24DCCA728();
  sub_24DCC9968();
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1941F8);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECD0;
  *(_OWORD *)(inited + 32) = xmmword_24DCD6EC0;
  sub_24D6DE514(0, 0xE000000000000000, inited);
  swift_setDeallocating();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  return 0;
}

void *sub_24D6A5834()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) != 1) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1941F8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24DCCECD0;
  *(_OWORD *)(v1 + 32) = xmmword_24DCD6ED0;
  uint64_t v2 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  *(void *)(v3 + 24) = v1;
  id v4 = (void *)swift_allocObject();
  v4[2] = sub_24D6E5F00;
  v4[3] = v3;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v4;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_3745;
  id v5 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v6 = objc_msgSend(v2, sel_fetchSwift_error_, v5, aBlock);
  _Block_release(v5);
  id v7 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v6)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    return v4;
  }
  if ((objc_msgSend(v6, sel_next) & 1) == 0)
  {
    swift_release();

    return 0;
  }
  id v4 = objc_msgSend(v6, sel_longAtIndex_, 0);
  swift_release();

  return v4;
}

void *sub_24D6A5A98()
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v0 + 32) != 1) {
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1941F8);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_24DCCECD0;
  *(_OWORD *)(v1 + 32) = xmmword_24DCD6EE0;
  uint64_t v2 = *(void **)(v0 + qword_26B1A2590);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v0;
  *(void *)(v3 + 24) = v1;
  id v4 = (void *)swift_allocObject();
  v4[2] = sub_24D6DEDC4;
  v4[3] = v3;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v4;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_3755;
  id v5 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v6 = objc_msgSend(v2, sel_fetchSwift_error_, v5, aBlock);
  _Block_release(v5);
  id v7 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v6)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    return v4;
  }
  if ((objc_msgSend(v6, sel_next) & 1) == 0)
  {
    swift_release();

    return 0;
  }
  id v4 = objc_msgSend(v6, sel_longAtIndex_, 0);
  swift_release();

  return v4;
}

uint64_t sub_24D6A5CFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return 0;
}

id sub_24D6A5E38(uint64_t a1)
{
  void aBlock[6] = *(id *)MEMORY[0x263EF8340];
  if (*(unsigned char *)(v1 + 32) != 1) {
    return 0;
  }
  uint64_t v3 = *(void **)(v1 + qword_26B1A2590);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(void *)(v4 + 24) = a1;
  id v5 = (void *)swift_allocObject();
  v5[2] = sub_24D6DEE40;
  v5[3] = v4;
  aBlock[4] = sub_24D3E3980;
  aBlock[5] = v5;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_24D3E38DC;
  aBlock[3] = &block_descriptor_3772;
  id v6 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v7 = objc_msgSend(v3, sel_fetchSwift_error_, v6, aBlock);
  _Block_release(v6);
  id v8 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v7)
  {
    sub_24DCC8828();

    swift_willThrow();
    swift_release();
    return v8;
  }
  if ((objc_msgSend(v7, sel_next) & 1) == 0)
  {
    swift_release();

    return 0;
  }
  id v8 = objc_msgSend(v7, sel_longAtIndex_, 0);
  swift_release();

  return v8;
}

uint64_t sub_24D6A6070()
{
  return 0;
}

uint64_t sub_24D6A61C4()
{
  return 0;
}

uint64_t sub_24D6A628C()
{
  return 0;
}

uint64_t sub_24D6A63A0(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_24DCC9858();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  unint64_t v19 = 0xD000000000000010;
  unint64_t v20 = 0x800000024DCFD0B0;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_24DCC9968();
  (*(void (**)(void **__return_ptr, uint64_t))(**(void **)(a2 + 16) + 96))(&v18, v8);
  uint64_t v9 = v18;
  sub_24DCC97E8();
  sub_24DCC9848();
  uint64_t v10 = sub_24DCC97F8();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v12 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    id v14 = (void *)sub_24DCC8B28();
    sub_24D416034(v10, v12);
    id v15 = objc_msgSend(a1, sel_bindObjectParameter_, v14);

    sub_24DCC97E8();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9968();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1941F8);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCCECD0;
    *(_OWORD *)(inited + 32) = xmmword_24DCD6EC0;
    sub_24D6DE514(0, 0xE000000000000000, inited);
    swift_setDeallocating();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    return v19;
  }
  return result;
}

uint64_t sub_24D6A6660()
{
  return 0;
}

uint64_t sub_24D6A675C()
{
  return 0;
}

uint64_t sub_24D6A6820()
{
  return 0;
}

id sub_24D6A6918(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v151 = a2;
  uint64_t v152 = a3;
  id v149 = a1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  id v147 = *(id *)(v5 - 8);
  id v148 = (char *)v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v150 = (uint64_t)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = type metadata accessor for VFSItem(0);
  id v144 = *(id *)(v145 - 8);
  MEMORY[0x270FA5388](v145);
  unint64_t v143 = (unint64_t)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  unint64_t v11 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v146 = (char *)&v137 - v12;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  id v16 = (char *)&v137 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  unint64_t v19 = (char *)&v137 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  id v22 = (char *)&v137 - v21;
  uint64_t v23 = MEMORY[0x270FA5388](v20);
  unint64_t v25 = (char *)&v137 - v24;
  uint64_t v26 = MEMORY[0x270FA5388](v23);
  uint64_t v28 = (char *)&v137 - v27;
  uint64_t v29 = MEMORY[0x270FA5388](v26);
  unint64_t v31 = (char *)&v137 - v30;
  MEMORY[0x270FA5388](v29);
  uint64_t v142 = v4;
  os_log_t v33 = (char *)&v137 - v32;
  sub_24D415FD0(v4, (uint64_t)&v137 - v32, (uint64_t *)&unk_26B1936D0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_24D415FD0((uint64_t)v33, (uint64_t)v28, (uint64_t *)&unk_26B1936D0);
      uint64_t v81 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C650);
      uint64_t v82 = (uint64_t)&v28[v81[12]];
      uint64_t v83 = v81[16];
      uint64_t v84 = *(void *)&v28[v81[24]];
      uint64_t v85 = *(void *)&v28[v81[28]];
      uint64_t v86 = (uint64_t *)&v28[v81[20]];
      uint64_t v87 = *(void **)&v28[v81[32]];
      if ((*((unsigned int (**)(uint64_t, uint64_t, char *))v147 + 6))(v82, 1, v148) != 1)
      {
        id v148 = v33;
        if (!*(void *)&v28[v83])
        {
          sub_24D415F74(v82, (uint64_t *)&unk_26B199410);

          sub_24D400D4C(*v86, v86[1], v86[2], v86[3], v86[4]);
          goto LABEL_32;
        }
        id v139 = *(id *)&v28[v83];
        uint64_t v145 = v85;
        uint64_t v146 = (char *)v84;
        id v147 = v87;
        if (v86[2] != 1)
        {
          uint64_t v88 = v86[2];
          unint64_t v90 = v86[6];
          unint64_t v89 = v86[7];
          unint64_t v91 = v86[4];
          uint64_t v92 = v86[5];
          uint64_t v93 = v86[3];
          uint64_t v94 = *v86;
          unint64_t v95 = v86[1];
          uint64_t v96 = v150;
          sub_24D3F0BA0(v82, v150, (uint64_t *)&unk_26B199410);
          *(void *)&long long v157 = v94;
          *((void *)&v157 + 1) = v95;
          id v97 = (id)v94;
          unint64_t v98 = v95;
          uint64_t v158 = v88;
          uint64_t v159 = v93;
          uint64_t v99 = v93;
          unint64_t v160 = v91;
          uint64_t v161 = v92;
          unint64_t v100 = v91;
          unint64_t v162 = v90;
          unint64_t v163 = v89;
          id v144 = sub_24D7C4E88(v96, v149, 0);
          swift_bridgeObjectRetain();
          id v101 = v139;
          id v149 = v101;
          id v139 = sub_24D7C8F00(v101, 0);

          id v140 = v97;
          uint64_t v142 = v92;
          unint64_t v143 = v90;
          unint64_t v141 = v89;
          sub_24D3F9B98((uint64_t)v97, v98, v88, v99, v91);
          id v138 = sub_24D6B6598(&v157);
          sub_24D400D4C((uint64_t)v97, v98, v88, v99, v91);
          uint64_t v102 = (uint64_t)v146;
          uint64_t v103 = sub_24DA275AC((uint64_t)v146);
          id v104 = objc_allocWithZone(MEMORY[0x263F05550]);
          id v105 = (void *)sub_24DCC97B8();
          swift_bridgeObjectRelease();
          uint64_t v135 = v102;
          uint64_t v106 = v104;
          uint64_t v107 = v144;
          id v108 = v139;
          char v109 = v138;
          id v110 = v147;
          id v42 = objc_msgSend(v106, sel_initWithOperationIdentifier_sourceItem_targetItemIdentifier_targetItemBaseVersion_changedFields_domainVersion_rawFields_snapshotVersion_, v105, v144, v139, v138, v103, v147, v135, v145);

          sub_24D400D4C((uint64_t)v140, v98, v88, v99, v100);
          sub_24D415F74(v150, (uint64_t *)&unk_26B199410);
          os_log_t v33 = v148;
          goto LABEL_22;
        }

        sub_24D415F74(v82, (uint64_t *)&unk_26B199410);
        uint64_t v128 = *v86;
        unint64_t v129 = v86[1];
        uint64_t v130 = v86[2];
        uint64_t v131 = v86[3];
        unint64_t v132 = v86[4];
LABEL_31:
        uint64_t v133 = sub_24D400D4C(v128, v129, v130, v131, v132);
LABEL_32:
        MEMORY[0x270FA5388](v133);
        uint64_t v135 = v142;
        sub_24DA89268((uint64_t (*)(uint64_t))sub_24D6D8EFC, (uint64_t)v134, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/TestingOperation.swift", 110, 2, 189);
      }

      sub_24D400D4C(*v86, v86[1], v86[2], v86[3], v86[4]);
      uint64_t v127 = v82;
      break;
    case 2u:
      id v148 = v33;
      sub_24D415FD0((uint64_t)v33, (uint64_t)v25, (uint64_t *)&unk_26B1936D0);
      id v49 = (void *)*((void *)v25 + 2);
      if (!v49)
      {

        uint64_t v128 = *((void *)v25 + 3);
        unint64_t v129 = *((void *)v25 + 4);
        uint64_t v130 = *((void *)v25 + 5);
        uint64_t v131 = *((void *)v25 + 6);
        unint64_t v132 = *((void *)v25 + 7);
        goto LABEL_31;
      }
      id v149 = (void *)*((void *)v25 + 12);
      uint64_t v50 = *((void *)v25 + 5);
      if (v50 == 1)
      {

        goto LABEL_32;
      }
      id v144 = (id)*((void *)v25 + 10);
      uint64_t v51 = *((void *)v25 + 8);
      uint64_t v145 = *((void *)v25 + 9);
      uint64_t v53 = *((void *)v25 + 6);
      unint64_t v52 = *((void *)v25 + 7);
      unint64_t v54 = *((void *)v25 + 4);
      uint64_t v150 = *((void *)v25 + 3);
      uint64_t v55 = *(void *)v25;
      *(void *)&long long v157 = v150;
      *((void *)&v157 + 1) = v54;
      unint64_t v56 = v54;
      uint64_t v158 = v50;
      uint64_t v159 = v53;
      uint64_t v57 = v53;
      unint64_t v160 = v52;
      uint64_t v161 = v51;
      unint64_t v58 = v52;
      unint64_t v162 = v145;
      unint64_t v163 = (unint64_t)v144;
      char v59 = v25[8];
      uint64_t v155 = 0x2F73662F70665F5FLL;
      unint64_t v156 = 0xE800000000000000;
      swift_bridgeObjectRetain();
      sub_24D3D4384(v55, v59);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v146 = (char *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v60 = v49;
      id v147 = v60;
      id v140 = sub_24D7C8F00(v60, 0);

      uint64_t v61 = v150;
      unint64_t v141 = v56;
      uint64_t v142 = v57;
      unint64_t v143 = v58;
      sub_24D3F9B98(v150, v56, v50, v57, v58);
      id v62 = sub_24D6B6598(&v157);
      sub_24D400D4C(v61, v56, v50, v57, v58);
      id v63 = objc_allocWithZone(MEMORY[0x263F05538]);
      uint64_t v64 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      unint64_t v65 = v146;
      id v66 = v140;
      uint64_t v67 = v149;
      id v42 = objc_msgSend(v63, sel_initWithOperationIdentifier_sourceItemIdentifier_targetItemIdentifier_targetItemBaseVersion_domainVersion_, v64, v146, v140, v62, v149);

      sub_24D400D4C(v150, v141, v50, v142, v143);
      os_log_t v33 = v148;
LABEL_22:
      sub_24D415F74((uint64_t)v33, (uint64_t *)&unk_26B1936D0);
      return v42;
    case 3u:
      sub_24D415FD0((uint64_t)v33, (uint64_t)v22, (uint64_t *)&unk_26B1936D0);
      unint64_t v68 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F5C0);
      uint64_t v69 = (uint64_t)&v22[v68[12]];
      unint64_t v70 = &v22[v68[16]];
      uint64_t v71 = *((void *)v70 + 1);
      if ((*((unsigned int (**)(uint64_t, uint64_t, char *))v147 + 6))(v69, 1, v148) != 1)
      {
        uint64_t v72 = *(void *)&v22[v68[20]];
        uint64_t v73 = *(void *)v70;
        uint64_t v74 = v150;
        sub_24D3F0BA0(v69, v150, (uint64_t *)&unk_26B199410);
        id v75 = sub_24D7C4E88(v74, v149, 0);
        *(void *)&long long v157 = v73;
        *((void *)&v157 + 1) = v71;
        uint64_t v155 = 47;
        unint64_t v156 = 0xE100000000000000;
        uint64_t v153 = 58;
        unint64_t v154 = 0xE100000000000000;
        unint64_t v136 = sub_24D3F0EB8();
        v134[0] = MEMORY[0x263F8D310];
        v134[1] = v136;
        sub_24DCCA478();
        swift_bridgeObjectRelease();
        os_log_t v76 = (void *)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        objc_msgSend(v75, sel_setFilename_, v76);

        id v77 = objc_allocWithZone(MEMORY[0x263F05520]);
        swift_bridgeObjectRetain();
        uint64_t v78 = (void *)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        id v42 = objc_msgSend(v77, sel_initWithOperationIdentifier_renamedItem_snapshotVersion_, v78, v75, v72);

        uint64_t v43 = v74;
        uint64_t v44 = (uint64_t *)&unk_26B199410;
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
      uint64_t v127 = v69;
      break;
    case 4u:
      sub_24D415FD0((uint64_t)v33, (uint64_t)v19, (uint64_t *)&unk_26B1936D0);
      uint64_t v45 = *(void *)v19;
      char v46 = v19[8];
      *(void *)&long long v157 = 0x2F73662F70665F5FLL;
      *((void *)&v157 + 1) = 0xE800000000000000;
      swift_bridgeObjectRetain();
      sub_24D3D4384(v45, v46);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v47 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      uint64_t v48 = (objc_class *)MEMORY[0x263F05528];
      goto LABEL_16;
    case 5u:
      sub_24D415FD0((uint64_t)v33, (uint64_t)v19, (uint64_t *)&unk_26B1936D0);
      uint64_t v111 = *(void *)v19;
      char v112 = v19[8];
      *(void *)&long long v157 = 0x2F73662F70665F5FLL;
      *((void *)&v157 + 1) = 0xE800000000000000;
      swift_bridgeObjectRetain();
      sub_24D3D4384(v111, v112);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v47 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      uint64_t v48 = (objc_class *)MEMORY[0x263F05518];
      goto LABEL_16;
    case 6u:
      sub_24D415FD0((uint64_t)v33, (uint64_t)v16, (uint64_t *)&unk_26B1936D0);
      uint64_t v115 = (uint64_t)&v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C660) + 48)];
      uint64_t v116 = *(void *)v16;
      char v117 = v16[8];
      uint64_t v118 = (uint64_t)v146;
      sub_24D3F0BA0(v115, (uint64_t)v146, (uint64_t *)&unk_26B199BC0);
      sub_24D415FD0(v118, (uint64_t)v11, (uint64_t *)&unk_26B199BC0);
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v144 + 6))(v11, 1, v145) == 1)
      {
        id v119 = 0;
      }
      else
      {
        uint64_t v120 = (uint64_t)v11;
        uint64_t v121 = v143;
        sub_24D40BC84(v120, v143, type metadata accessor for VFSItem);
        uint64_t v122 = v149;
        id v119 = sub_24D7C4C24(v121, v122, 1);
        sub_24D3FC974(v121, type metadata accessor for VFSItem);
      }
      *(void *)&long long v157 = 0x2F73662F70665F5FLL;
      *((void *)&v157 + 1) = 0xE800000000000000;
      swift_bridgeObjectRetain();
      sub_24D3D4384(v116, v117);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v123 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v124 = objc_allocWithZone(MEMORY[0x263F05540]);
      uint64_t v125 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v42 = objc_msgSend(v124, sel_initWithOperationIdentifier_itemIdentifier_item_, v125, v123, v119);

      uint64_t v44 = (uint64_t *)&unk_26B199BC0;
      uint64_t v43 = v118;
      goto LABEL_21;
    case 7u:
      sub_24D415FD0((uint64_t)v33, (uint64_t)v19, (uint64_t *)&unk_26B1936D0);
      uint64_t v79 = *(void *)v19;
      char v80 = v19[8];
      *(void *)&long long v157 = 0x2F73662F70665F5FLL;
      *((void *)&v157 + 1) = 0xE800000000000000;
      swift_bridgeObjectRetain();
      sub_24D3D4384(v79, v80);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      uint64_t v47 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      uint64_t v48 = (objc_class *)MEMORY[0x263F05548];
LABEL_16:
      id v113 = objc_allocWithZone(v48);
      char v114 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v42 = objc_msgSend(v113, sel_initWithOperationIdentifier_itemIdentifier_, v114, v47);

      goto LABEL_22;
    default:
      sub_24D415FD0((uint64_t)v33, (uint64_t)v31, (uint64_t *)&unk_26B1936D0);
      uint64_t v34 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F330);
      uint64_t v35 = (uint64_t)&v31[v34[12]];
      uint64_t v36 = *(void **)&v31[v34[20]];
      if ((*((unsigned int (**)(uint64_t, uint64_t, char *))v147 + 6))(v35, 1, v148) != 1)
      {
        uint64_t v37 = *(void *)&v31[v34[16]];
        uint64_t v38 = v150;
        sub_24D3F0BA0(v35, v150, (uint64_t *)&unk_26B199410);
        id v39 = sub_24D7C4E88(v38, v149, 0);
        id v40 = objc_allocWithZone(MEMORY[0x263F05530]);
        swift_bridgeObjectRetain();
        uint64_t v41 = (void *)sub_24DCC97B8();
        swift_bridgeObjectRelease();
        id v42 = objc_msgSend(v40, sel_initWithOperationIdentifier_sourceItem_domainVersion_snapshotVersion_, v41, v39, v36, v37);

        uint64_t v43 = v38;
        uint64_t v44 = (uint64_t *)&unk_26B199410;
LABEL_21:
        sub_24D415F74(v43, v44);
        goto LABEL_22;
      }

      uint64_t v127 = v35;
      break;
  }
  uint64_t v133 = sub_24D415F74(v127, (uint64_t *)&unk_26B196F40);
  goto LABEL_32;
}

id sub_24D6A78C0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v212 = a3;
  id v209 = a1;
  uint64_t v210 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
  v208 = *(unsigned int (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v211 = (char *)&v189 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (void **)((char *)&v189 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (id *)((char *)&v189 - v11);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (id *)((char *)&v189 - v14);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)&v189 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v21 = (id *)((char *)&v189 - v20);
  uint64_t v22 = MEMORY[0x270FA5388](v19);
  uint64_t v24 = (id *)((char *)&v189 - v23);
  MEMORY[0x270FA5388](v22);
  v207 = (void *)v3;
  uint64_t v26 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))((char *)&v189 - v25);
  sub_24D415FD0(v3, (uint64_t)&v189 - v25, &qword_26B1936E0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v24 = v21;
      sub_24D415FD0((uint64_t)v26, (uint64_t)v21, &qword_26B1936E0);
      uint64_t v96 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986C670);
      uint64_t v97 = (uint64_t)v21 + v96[12];
      uint64_t v98 = *(uint64_t *)((char *)v21 + v96[24]);
      uint64_t v99 = *(id *)((char *)v21 + v96[28]);
      unint64_t v100 = (char *)v21 + v96[20];
      id v101 = *(id *)((char *)v21 + v96[32]);
      if (v208[6](v97, 1, v4) != 1)
      {
        uint64_t v102 = (char *)v24 + v96[16];
        if (v102[8] == 255)
        {
          sub_24D415F74(v97, (uint64_t *)&unk_26B196F50);

          uint64_t v164 = *(void *)v100;
          uint64_t v165 = *((void *)v100 + 1);
          uint64_t v166 = *((void *)v100 + 2);
          uint64_t v167 = *((void *)v100 + 3);
          uint64_t v168 = *((void *)v100 + 4);
          uint64_t v169 = *((void *)v100 + 5);
          uint64_t v170 = *((void *)v100 + 6);
          uint64_t v171 = *((void *)v100 + 7);
          long long v172 = *((_OWORD *)v100 + 4);
          long long v173 = (void *)*((void *)v100 + 11);
          id v187 = (id)*((void *)v100 + 10);
          id v188 = v173;
          uint64_t v186 = *((void *)&v172 + 1);
          sub_24D3E386C(v164, v165, v166, v167, v168, v169, v170, v171, v172);
        }
        else
        {
          LODWORD(v193) = v102[8];
          v197 = v99;
          v199 = v24;
          uint64_t v198 = v98;
          id v200 = v101;
          v208 = v26;
          uint64_t v206 = *((void *)v100 + 8);
          if (v206)
          {
            uint64_t v191 = *(void **)v102;
            id v204 = (id)*((void *)v100 + 11);
            char v190 = (void *)*((void *)v100 + 10);
            id v203 = (id)*((void *)v100 + 9);
            uint64_t v103 = *((void *)v100 + 6);
            uint64_t v192 = *((void *)v100 + 7);
            uint64_t v104 = v192;
            v207 = (void *)v103;
            uint64_t v105 = *((void *)v100 + 4);
            uint64_t v201 = *((void *)v100 + 5);
            uint64_t v106 = v201;
            uint64_t v205 = v105;
            uint64_t v108 = *((void *)v100 + 2);
            uint64_t v202 = *((void *)v100 + 3);
            char v107 = v202;
            uint64_t v109 = *(void *)v100;
            uint64_t v110 = *((void *)v100 + 1);
            uint64_t v111 = (uint64_t)v211;
            sub_24D3F0BA0(v97, (uint64_t)v211, (uint64_t *)&unk_26B196F50);
            uint64_t v217 = v109;
            LODWORD(v218) = v110;
            uint64_t v219 = v108;
            char v220 = v107 & 1;
            uint64_t v221 = v105;
            uint64_t v222 = v106;
            char v223 = v103;
            uint64_t v224 = v104;
            uint64_t v225 = v206;
            uint64_t v112 = v206;
            id v113 = v190;
            uint64_t v226 = (uint64_t)v203;
            v227 = v190;
            id v228 = v204;
            id v209 = sub_24D7C5108(v111, v209, 0);
            uint64_t v215 = 0x2F73662F70665F5FLL;
            unint64_t v216 = 0xE800000000000000;
            swift_bridgeObjectRetain();
            sub_24D3D4384((uint64_t)v191, v193);
            sub_24DCC9968();
            swift_bridgeObjectRelease();
            uint64_t v193 = sub_24DCC97B8();
            swift_bridgeObjectRelease();
            uint64_t v185 = v112;
            v196 = (void *)v109;
            uint64_t v194 = v110;
            v195 = (void *)v108;
            uint64_t v114 = v202;
            uint64_t v115 = v205;
            uint64_t v116 = v201;
            uint64_t v117 = v192;
            sub_24D3F1CF8(v109, v110, v108, v202, v205, v201, (uint64_t)v207, v192, v185);
            uint64_t v191 = (void *)sub_24D6B6694((uint64_t)&v217);
            uint64_t v118 = v206;
            uint64_t v119 = v110;
            uint64_t v120 = v108;
            uint64_t v121 = (uint64_t)v207;
            uint64_t v122 = v117;
            sub_24D3E386C(v109, v119, v120, v114, v115, v116, (uint64_t)v207, v117, v206);
            uint64_t v123 = v198;
            uint64_t v124 = sub_24DA275AC(v198);
            id v125 = objc_allocWithZone(MEMORY[0x263F05550]);
            uint64_t v126 = (void *)sub_24DCC97B8();
            swift_bridgeObjectRelease();
            id v187 = (id)v123;
            uint64_t v127 = v125;
            uint64_t v128 = v209;
            unint64_t v129 = (void *)v193;
            uint64_t v130 = v191;
            id v131 = v200;
            id v36 = objc_msgSend(v127, sel_initWithOperationIdentifier_sourceItem_targetItemIdentifier_targetItemBaseVersion_changedFields_domainVersion_rawFields_snapshotVersion_, v126, v209, v193, v191, v124, v200, v187, v197);

            id v187 = v113;
            id v188 = v204;
            uint64_t v186 = (uint64_t)v203;
            sub_24D3E386C((uint64_t)v196, v194, (uint64_t)v195, v202, v205, v201, v121, v122, v118);
            sub_24D415F74((uint64_t)v211, (uint64_t *)&unk_26B196F50);
            v211 = (char *)*v199;
            goto LABEL_15;
          }

          sub_24D415F74(v97, (uint64_t *)&unk_26B196F50);
          uint64_t v174 = *(void *)v100;
          uint64_t v175 = *((void *)v100 + 1);
          uint64_t v176 = *((void *)v100 + 2);
          uint64_t v177 = *((void *)v100 + 3);
          uint64_t v178 = *((void *)v100 + 4);
          uint64_t v179 = *((void *)v100 + 5);
          uint64_t v180 = *((void *)v100 + 6);
          uint64_t v181 = *((void *)v100 + 7);
          long long v182 = *((_OWORD *)v100 + 4);
          v183 = (void *)*((void *)v100 + 11);
          id v187 = (id)*((void *)v100 + 10);
          id v188 = v183;
          uint64_t v186 = *((void *)&v182 + 1);
          sub_24D3E386C(v174, v175, v176, v177, v178, v179, v180, v181, v182);
          uint64_t v24 = v199;
        }
LABEL_32:

        MEMORY[0x270FA5388](v184);
        id v187 = v207;
        sub_24DA89268((uint64_t (*)(uint64_t))sub_24D6D8F2C, (uint64_t)&v185, (uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/interfaces/job/TestingOperation.swift", 110, 2, 189);
      }

      uint64_t v154 = *(void *)v100;
      uint64_t v155 = *((void *)v100 + 1);
      uint64_t v156 = *((void *)v100 + 2);
      uint64_t v157 = *((void *)v100 + 3);
      uint64_t v158 = *((void *)v100 + 4);
      uint64_t v159 = *((void *)v100 + 5);
      uint64_t v160 = *((void *)v100 + 6);
      uint64_t v161 = *((void *)v100 + 7);
      long long v162 = *((_OWORD *)v100 + 4);
      unint64_t v163 = (void *)*((void *)v100 + 11);
      id v187 = (id)*((void *)v100 + 10);
      id v188 = v163;
      uint64_t v186 = *((void *)&v162 + 1);
      sub_24D3E386C(v154, v155, v156, v157, v158, v159, v160, v161, v162);
      uint64_t v143 = v97;
      goto LABEL_29;
    case 2u:
      sub_24D415FD0((uint64_t)v26, (uint64_t)v18, &qword_26B1936E0);
      int v42 = v18[16];
      if (v42 == 255)
      {

        uint64_t v144 = *((void *)v18 + 3);
        uint64_t v145 = *((void *)v18 + 4);
        uint64_t v146 = *((void *)v18 + 5);
        uint64_t v147 = *((void *)v18 + 6);
        uint64_t v148 = *((void *)v18 + 7);
        uint64_t v149 = *((void *)v18 + 8);
        uint64_t v150 = *((void *)v18 + 9);
        uint64_t v151 = *((void *)v18 + 10);
        long long v152 = *(_OWORD *)(v18 + 88);
        uint64_t v153 = (void *)*((void *)v18 + 14);
        id v187 = (id)*((void *)v18 + 13);
        id v188 = v153;
        uint64_t v186 = *((void *)&v152 + 1);
        sub_24D3E386C(v144, v145, v146, v147, v148, v149, v150, v151, v152);
        uint64_t v24 = (id *)v18;
      }
      else
      {
        id v204 = (id)*((void *)v18 + 16);
        v208 = v26;
        uint64_t v43 = *((void *)v18 + 11);
        if (v43)
        {
          uint64_t v44 = (void *)*((void *)v18 + 13);
          uint64_t v45 = (void *)*((void *)v18 + 14);
          uint64_t v46 = *((void *)v18 + 12);
          uint64_t v47 = *((void *)v18 + 9);
          uint64_t v201 = *((void *)v18 + 10);
          uint64_t v205 = v47;
          uint64_t v48 = *((void *)v18 + 7);
          uint64_t v206 = *((void *)v18 + 8);
          uint64_t v202 = *((void *)v18 + 6);
          uint64_t v50 = (id *)*((void *)v18 + 4);
          id v49 = (void *)*((void *)v18 + 5);
          v207 = (void *)*((void *)v18 + 3);
          uint64_t v51 = *(void **)v18;
          uint64_t v52 = *((void *)v18 + 1);
          uint64_t v217 = (uint64_t)v207;
          LODWORD(v218) = v50;
          uint64_t v53 = v50;
          uint64_t v219 = (uint64_t)v49;
          unint64_t v54 = v49;
          char v220 = v202 & 1;
          uint64_t v221 = v48;
          uint64_t v222 = v206;
          char v223 = v47;
          uint64_t v224 = v201;
          uint64_t v225 = v43;
          uint64_t v226 = v46;
          v227 = v44;
          uint64_t v55 = v46;
          id v209 = v44;
          id v228 = v45;
          uint64_t v56 = v43;
          uint64_t v194 = v43;
          swift_bridgeObjectRetain();
          uint64_t v57 = v51;
          id v203 = sub_24D7C8F00(v57, 0);
          v211 = v57;

          uint64_t v215 = 0x2F73662F70665F5FLL;
          unint64_t v216 = 0xE800000000000000;
          sub_24D3D4384(v52, v42);
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          v196 = (void *)sub_24DCC97B8();
          swift_bridgeObjectRelease();
          v197 = v45;
          uint64_t v198 = v55;
          uint64_t v185 = v56;
          uint64_t v58 = (uint64_t)v207;
          char v59 = v53;
          v199 = v53;
          uint64_t v60 = (uint64_t)v53;
          uint64_t v61 = (uint64_t)v54;
          id v200 = v54;
          uint64_t v62 = (uint64_t)v54;
          uint64_t v63 = v202;
          uint64_t v64 = v48;
          uint64_t v65 = v48;
          uint64_t v66 = v206;
          uint64_t v67 = v205;
          uint64_t v68 = v201;
          sub_24D3F1CF8((uint64_t)v207, v60, v62, v202, v65, v206, v205, v201, v185);
          v195 = (void *)sub_24D6B6694((uint64_t)&v217);
          uint64_t v69 = v194;
          uint64_t v70 = v58;
          uint64_t v71 = (uint64_t)v59;
          uint64_t v72 = v61;
          uint64_t v73 = v63;
          uint64_t v74 = v64;
          uint64_t v75 = v68;
          sub_24D3E386C(v70, v71, v72, v63, v64, v66, v67, v68, v194);
          id v76 = objc_allocWithZone(MEMORY[0x263F05538]);
          id v77 = (void *)sub_24DCC97B8();
          swift_bridgeObjectRelease();
          uint64_t v78 = v203;
          uint64_t v79 = v196;
          char v80 = v195;
          id v81 = v204;
          id v36 = objc_msgSend(v76, sel_initWithOperationIdentifier_sourceItemIdentifier_targetItemIdentifier_targetItemBaseVersion_domainVersion_, v77, v203, v196, v195, v204);

          id v188 = v197;
          id v187 = v209;
          uint64_t v186 = v198;
          sub_24D3E386C((uint64_t)v207, (uint64_t)v199, (uint64_t)v200, v73, v74, v206, v205, v75, v69);
LABEL_15:
          uint64_t v26 = v208;
          goto LABEL_23;
        }

        uint64_t v24 = (id *)v18;
      }
      goto LABEL_32;
    case 3u:
      sub_24D415FD0((uint64_t)v26, (uint64_t)v15, &qword_26B1936E0);
      uint64_t v82 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C678);
      uint64_t v83 = (uint64_t)v15 + v82[12];
      uint64_t v84 = (uint64_t *)((char *)v15 + v82[16]);
      uint64_t v85 = v84[1];
      if (v208[6](v83, 1, v4) == 1)
      {
        swift_bridgeObjectRelease();
        sub_24D415F74(v83, (uint64_t *)&unk_26B196F60);
        uint64_t v24 = v15;
        goto LABEL_32;
      }
      uint64_t v86 = *(uint64_t *)((char *)v15 + v82[20]);
      uint64_t v87 = *v84;
      uint64_t v88 = (uint64_t)v211;
      sub_24D3F0BA0(v83, (uint64_t)v211, (uint64_t *)&unk_26B196F50);
      id v89 = sub_24D7C5108(v88, v209, 0);
      uint64_t v217 = v87;
      uint64_t v218 = v85;
      uint64_t v215 = 47;
      unint64_t v216 = 0xE100000000000000;
      uint64_t v213 = 58;
      unint64_t v214 = 0xE100000000000000;
      id v187 = (id)sub_24D3F0EB8();
      id v188 = v187;
      uint64_t v185 = MEMORY[0x263F8D310];
      uint64_t v186 = (uint64_t)v187;
      sub_24DCCA478();
      swift_bridgeObjectRelease();
      unint64_t v90 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      objc_msgSend(v89, sel_setFilename_, v90);

      id v91 = objc_allocWithZone(MEMORY[0x263F05520]);
      swift_bridgeObjectRetain();
      uint64_t v92 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(v91, sel_initWithOperationIdentifier_renamedItem_snapshotVersion_, v92, v89, v86);

      sub_24D415F74(v88, (uint64_t *)&unk_26B196F50);
      v211 = (char *)*v15;
      goto LABEL_23;
    case 4u:
      sub_24D415FD0((uint64_t)v26, (uint64_t)v12, &qword_26B1936E0);
      id v37 = *v12;
      swift_bridgeObjectRetain();
      uint64_t v38 = (char *)sub_24D7C8F00(v37, 0);

      id v39 = objc_allocWithZone(MEMORY[0x263F05528]);
      id v40 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      v211 = v38;
      id v41 = objc_msgSend(v39, sel_initWithOperationIdentifier_itemIdentifier_, v40, v38);
      goto LABEL_18;
    case 5u:
      sub_24D415FD0((uint64_t)v26, (uint64_t)v12, &qword_26B1936E0);
      id v132 = *v12;
      swift_bridgeObjectRetain();
      id v37 = v132;
      uint64_t v94 = (char *)sub_24D7C8F00(v37, 0);

      unint64_t v95 = (objc_class *)MEMORY[0x263F05518];
      goto LABEL_17;
    case 6u:
      sub_24D415FD0((uint64_t)v26, (uint64_t)v9, &qword_26B1936E0);
      uint64_t v135 = *v9;
      id v134 = v9[1];
      unint64_t v136 = v26;
      if (v134)
      {
        id v137 = v134;
        v211 = (char *)sub_24D7C5660(v137, v209, 1);
      }
      else
      {
        v211 = 0;
      }
      swift_bridgeObjectRetain();
      id v138 = v135;
      id v139 = sub_24D7C8F00(v138, 0);

      id v140 = objc_allocWithZone(MEMORY[0x263F05540]);
      unint64_t v141 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(v140, sel_initWithOperationIdentifier_itemIdentifier_item_, v141, v139, v211);

      uint64_t v26 = v136;
      goto LABEL_23;
    case 7u:
      sub_24D415FD0((uint64_t)v26, (uint64_t)v12, &qword_26B1936E0);
      id v93 = *v12;
      swift_bridgeObjectRetain();
      id v37 = v93;
      uint64_t v94 = (char *)sub_24D7C8F00(v37, 0);

      unint64_t v95 = (objc_class *)MEMORY[0x263F05548];
LABEL_17:
      id v133 = objc_allocWithZone(v95);
      id v40 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      v211 = v94;
      id v41 = objc_msgSend(v133, sel_initWithOperationIdentifier_itemIdentifier_, v40, v94);
LABEL_18:
      id v36 = v41;

      goto LABEL_23;
    default:
      uint64_t v27 = v26;
      sub_24D415FD0((uint64_t)v26, (uint64_t)v24, &qword_26B1936E0);
      uint64_t v28 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986F100);
      uint64_t v29 = (uint64_t)v24 + v28[12];
      uint64_t v30 = *(id *)((char *)v24 + v28[20]);
      if (v208[6](v29, 1, v4) == 1)
      {

        uint64_t v143 = v29;
LABEL_29:
        sub_24D415F74(v143, (uint64_t *)&unk_26B196F60);
        goto LABEL_32;
      }
      uint64_t v31 = *(uint64_t *)((char *)v24 + v28[16]);
      uint64_t v32 = (uint64_t)v211;
      sub_24D3F0BA0(v29, (uint64_t)v211, (uint64_t *)&unk_26B196F50);
      id v33 = sub_24D7C5108(v32, v209, 0);
      id v34 = objc_allocWithZone(MEMORY[0x263F05530]);
      swift_bridgeObjectRetain();
      uint64_t v35 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v36 = objc_msgSend(v34, sel_initWithOperationIdentifier_sourceItem_domainVersion_snapshotVersion_, v35, v33, v30, v31);

      sub_24D415F74(v32, (uint64_t *)&unk_26B196F50);
      v211 = (char *)*v24;
      uint64_t v26 = v27;
LABEL_23:

      sub_24D415F74((uint64_t)v26, &qword_26B1936E0);
      return v36;
  }
}

uint64_t sub_24D6A891C(uint64_t a1, void (*a2)(uint64_t))
{
  sub_24DCCA728();
  uint64_t v3 = sub_24DCC9968();
  a2(v3);
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

void *sub_24D6A89C0(unsigned char *a1, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t result = a2(&v4);
  *a1 = 0;
  return result;
}

void *sub_24D6A8A3C(unsigned char *a1, void *(*a2)(uint64_t *__return_ptr))
{
  uint64_t result = a2(&v4);
  *a1 = v4;
  return result;
}

uint64_t sub_24D6A8ABC(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26B197B60);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199BC0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 0, 1, v8);
  return sub_24D3E17AC((uint64_t)v7, a1, qword_26B197B60);
}

uint64_t sub_24D6A8BC4(uint64_t *a1, void (*a2)(long long *__return_ptr))
{
  a2(&v5);
  uint64_t v3 = *a1;
  *(_OWORD *)a1 = v5;

  return sub_24D43DD74(v3);
}

uint64_t sub_24D6A8C58(uint64_t *a1, void (*a2)(uint64_t *__return_ptr))
{
  a2(&v5);
  uint64_t v3 = *a1;
  *a1 = v5;

  return sub_24D6DEF9C(v3);
}

void sub_24D6A8CEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void))
{
  id v9 = (id)fpfs_adopt_log();
  if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    sub_24DCCA238();
    sub_24DCC9968();
    sub_24DCCA768();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9898();
    swift_bridgeObjectRelease();
    __fp_log_adopt();
    swift_release();
  }
  a7();
  if (v11)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      __fp_leave_section_Debug();
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    __fp_leave_section_Debug();
  }
  id v10 = (id)fpfs_adopt_log();
}

uint64_t sub_24D6A8E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(char *__return_ptr))
{
  uint64_t v16 = *MEMORY[0x263EF8340];
  id v10 = (id)fpfs_adopt_log();
  if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    sub_24DCCA238();
    sub_24DCC9968();
    sub_24DCCA768();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9898();
    swift_bridgeObjectRelease();
    __fp_log_adopt();
    swift_release();
  }
  a7(&v15);
  if (v7)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      __fp_leave_section_Debug();
    }
    id v11 = (id)fpfs_adopt_log();
  }
  else
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      __fp_leave_section_Debug();
    }
    id v13 = (id)fpfs_adopt_log();

    char v12 = v15;
  }
  return v12 & 1;
}

void sub_24D6A9030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *__return_ptr))
{
  v12[2] = *MEMORY[0x263EF8340];
  id v10 = (id)fpfs_adopt_log();
  if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    sub_24DCCA238();
    sub_24DCC9968();
    sub_24DCCA768();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9898();
    swift_bridgeObjectRelease();
    __fp_log_adopt();
    swift_release();
  }
  a7(v12);
  if (v7)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      __fp_leave_section_Debug();
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    __fp_leave_section_Debug();
  }
  id v11 = (id)fpfs_adopt_log();
}

void sub_24D6A91D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(void *__return_ptr))
{
  v12[1] = *MEMORY[0x263EF8340];
  id v10 = (id)fpfs_adopt_log();
  if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    sub_24DCCA238();
    sub_24DCC9968();
    sub_24DCCA768();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    sub_24DCC9898();
    swift_bridgeObjectRelease();
    __fp_log_adopt();
    swift_release();
  }
  a7(v12);
  if (v7)
  {
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      __fp_leave_section_Debug();
    }
  }
  else if ((*(unsigned char *)(a2 + 8) & 1) == 0)
  {
    __fp_leave_section_Debug();
  }
  id v11 = (id)fpfs_adopt_log();
}

void sub_24D6A9380(uint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v119 = a2;
  unint64_t v120 = a3;
  uint64_t v15 = sub_24DCC9078();
  uint64_t v16 = *(NSObject **)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v123 = (uint64_t)v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a5(v17);
  if (!v8)
  {
    uint64_t v106 = a5;
    uint64_t v107 = a6;
    dispatch_group_t v115 = v16;
    uint64_t v116 = (void *)v15;
    uint64_t v110 = a7;
    uint64_t v111 = a8;
    uint64_t v121 = 0;
    uint64_t v122 = v21;
    int v105 = v20;
    uint64_t v117 = a1;
    unint64_t v118 = a4;
    uint64_t v22 = v19;
    id v23 = objc_msgSend(objc_allocWithZone((Class)FPLoggerScope), sel_init);
    id v24 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v25 = v23;
    unint64_t v26 = v119;
    swift_bridgeObjectRetain();
    unint64_t v27 = v120;
    sub_24D40B3C8(v120);
    swift_bridgeObjectRetain();
    id v28 = v25;
    swift_bridgeObjectRetain();
    sub_24D40B3C8(v27);
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_24DCC9068();
    os_log_type_t v30 = sub_24DCCA118();
    int v31 = v30;
    BOOL v32 = os_log_type_enabled(v29, v30);
    uint64_t v109 = v28;
    if (v32)
    {
      uint64_t v33 = swift_slowAlloc();
      os_log_t v112 = v29;
      uint64_t v34 = v33;
      uint64_t v35 = (void *)swift_slowAlloc();
      uint64_t v108 = v35;
      uint64_t v114 = swift_slowAlloc();
      uint64_t v124 = v114;
      *(_DWORD *)uint64_t v34 = 138413314;
      id v36 = objc_msgSend(v28, sel_enter);
      uint64_t v126 = (uint64_t)v36;
      v103[1] = &v127;
      sub_24DCCA428();
      *uint64_t v35 = v36;

      *(_WORD *)(v34 + 12) = 2082;
      swift_bridgeObjectRetain();
      int v104 = v31;
      uint64_t v126 = sub_24D418FB4(v117, v26, &v124);
      sub_24DCCA428();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v34 + 22) = 2080;
      uint64_t v37 = sub_24DCC9E38();
      uint64_t v126 = sub_24D418FB4(v37, v38, &v124);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 32) = 2080;
      unint64_t v39 = sub_24D3D865C(v27);
      id v40 = v22;
      unint64_t v41 = v27;
      unint64_t v43 = v42;
      sub_24D4170B0(v41);
      uint64_t v126 = sub_24D418FB4(v39, v43, &v124);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      unint64_t v44 = v41;
      uint64_t v22 = v40;
      sub_24D4170B0(v44);
      *(_WORD *)(v34 + 42) = 2080;
      uint64_t v45 = MEMORY[0x253327CD0](v40, &type metadata for VFSItemID);
      unint64_t v47 = v46;
      swift_bridgeObjectRelease();
      uint64_t v126 = sub_24D418FB4(v45, v47, &v124);
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_log_t v48 = v112;
      _os_log_impl(&dword_24D3D0000, v112, (os_log_type_t)v104, "%@ 🚧  waiting for %{public}s prior to %s for %s: %s", (uint8_t *)v34, 0x34u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      id v49 = v108;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v49, -1, -1);
      uint64_t v50 = v114;
      swift_arrayDestroy();
      MEMORY[0x25332B030](v50, -1, -1);
      MEMORY[0x25332B030](v34, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_24D4170B0(v27);
      swift_bridgeObjectRelease_n();

      sub_24D4170B0(v27);
      swift_bridgeObjectRelease();
    }
    ((void (*)(uint64_t, void *))v115[1].isa)(v123, v116);
    uint64_t v51 = v110;
    uint64_t v52 = swift_allocObject();
    *(unsigned char *)(v52 + 16) = 0;
    uint64_t v53 = (void *)swift_allocObject();
    uint64_t v116 = v53;
    uint64_t v53[2] = v52;
    v53[3] = v51;
    v53[4] = v111;
    uint64_t isa = (uint64_t)v22[2].isa;
    os_log_t v112 = v22;
    uint64_t v55 = v122;
    uint64_t v123 = isa;
    uint64_t v124 = MEMORY[0x263F8EE78];
    uint64_t v108 = (void *)v52;
    if (isa)
    {
      uint64_t v114 = v122 + 32;
      dispatch_group_t v115 = v22 + 4;
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v56 = 0;
      do
      {
        int64_t v57 = *(void *)(v55 + 16);
        if (v57)
        {
          uint64_t v58 = &v115[2 * v56];
          Class v59 = v58->isa;
          char v60 = (char)v58[1].isa;
          uint64_t v126 = MEMORY[0x263F8EE78];
          sub_24D7C71DC(0, v57, 0);
          uint64_t v61 = v126;
          uint64_t v62 = (char *)v114;
          do
          {
            char v64 = *v62++;
            char v63 = v64;
            uint64_t v126 = v61;
            unint64_t v66 = *(void *)(v61 + 16);
            unint64_t v65 = *(void *)(v61 + 24);
            if (v66 >= v65 >> 1)
            {
              sub_24D7C71DC(v65 > 1, v66 + 1, 1);
              uint64_t v61 = v126;
            }
            *(void *)(v61 + 16) = v66 + 1;
            uint64_t v67 = v61 + 16 * v66;
            *(void *)(v67 + 32) = v59;
            *(unsigned char *)(v67 + 40) = v60;
            *(unsigned char *)(v67 + 41) = 0;
            *(unsigned char *)(v67 + 42) = v63;
            --v57;
          }
          while (v57);
          uint64_t v55 = v122;
        }
        else
        {
          uint64_t v61 = MEMORY[0x263F8EE78];
        }
        ++v56;
        sub_24D786354(v61);
      }
      while (v56 != v123);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_retain();
      swift_retain();
    }
    swift_bridgeObjectRelease();
    uint64_t v68 = v124;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1994B0);
    uint64_t v69 = swift_dynamicCastClassUnconditional();
    uint64_t v70 = *(void *)(v68 + 16);
    if (v70)
    {
      uint64_t v71 = *(void *)(*(void *)(v69 + 24) + 64);
      uint64_t v72 = swift_retain();
      uint64_t v73 = 0;
      while (1)
      {
        uint64_t v74 = v73 + 100;
        if (__OFADD__(v73, 100)) {
          break;
        }
        if (v70 >= v74) {
          uint64_t v75 = v73 + 100;
        }
        else {
          uint64_t v75 = v70;
        }
        if (v75 < v73) {
          goto LABEL_35;
        }
        MEMORY[0x270FA5388](v72);
        v103[-6] = v71;
        v103[-5] = v68;
        v103[-4] = v68 + 32;
        v103[-3] = v76;
        v103[-2] = v77;
        swift_bridgeObjectRetain();
        uint64_t v78 = v121;
        sub_24D830468((uint64_t)sub_24D6D920C, (uint64_t)&v103[-8]);
        uint64_t v121 = v78;
        if (v78)
        {
          swift_release();
          swift_release();
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_32;
        }
        uint64_t v72 = swift_bridgeObjectRelease();
        uint64_t v73 = v75;
        if (v70 <= v74)
        {
          swift_release();
          goto LABEL_27;
        }
      }
      __break(1u);
LABEL_35:
      __break(1u);
    }
    else
    {
LABEL_27:
      swift_bridgeObjectRelease();
      dispatch_group_t v79 = dispatch_group_create();
      uint64_t v80 = v113;
      Class v81 = v112[2].isa;
      dispatch_group_t v115 = v79;
      if (v81)
      {
        os_log_t v82 = v112 + 5;
        uint64_t v83 = v115;
        unint64_t v84 = v119;
        do
        {
          uint64_t v123 = (uint64_t)v82[-1].isa;
          uint64_t v85 = v123;
          int isa_low = LOBYTE(v82->isa);
          v82 += 2;
          LODWORD(v122) = isa_low;
          dispatch_group_enter(v83);
          uint64_t v87 = swift_allocObject();
          swift_weakInit();
          uint64_t v124 = v85;
          char v125 = isa_low;
          uint64_t v88 = swift_allocObject();
          *(void *)(v88 + 16) = v83;
          *(void *)(v88 + 24) = v87;
          *(void *)(v88 + 32) = v117;
          *(void *)(v88 + 40) = v84;
          sub_24D46A3CC((uint64_t)&v124, v88 + 48);
          unint64_t v89 = v120;
          *(void *)(v88 + 64) = v120;
          *(void *)(v88 + 72) = sub_24D6E3190;
          *(void *)(v88 + 80) = v116;
          swift_bridgeObjectRetain();
          sub_24D40B3C8(v89);
          unint64_t v90 = v83;
          swift_retain();
          swift_retain();
          sub_24D4488A4(v123, v122, v89, v118, (void (*)(void))sub_24D6E31F4, (void (*)(void))v88);
          swift_release();
          swift_release();
          Class v81 = (Class)((char *)v81 - 1);
        }
        while (v81);
      }
      swift_bridgeObjectRelease();
      uint64_t v91 = v80;
      uint64_t v92 = *(void **)(v80 + 64);
      uint64_t v93 = swift_allocObject();
      uint64_t v94 = v107;
      *(void *)(v93 + 16) = v108;
      *(unsigned char *)(v93 + 24) = v105 & 1;
      *(void *)(v93 + 32) = v91;
      *(void *)(v93 + 40) = sub_24D6E3190;
      uint64_t v95 = v117;
      *(void *)(v93 + 48) = v116;
      *(void *)(v93 + 56) = v95;
      unint64_t v96 = v120;
      *(void *)(v93 + 64) = v119;
      *(void *)(v93 + 72) = v96;
      uint64_t v97 = v106;
      *(void *)(v93 + 80) = v118;
      *(void *)(v93 + 88) = v97;
      uint64_t v98 = v110;
      uint64_t v99 = v111;
      *(void *)(v93 + 96) = v94;
      *(void *)(v93 + 104) = v98;
      *(void *)(v93 + 112) = v99;
      swift_bridgeObjectRetain();
      sub_24D40B3C8(v96);
      swift_retain();
      swift_retain();
      swift_retain();
      id v100 = v92;
      swift_retain();
      swift_retain();
      dispatch_group_t v101 = v115;
      sub_24D3E2DA8((uint64_t)"waitForPropagation(for:request:barrierTimestamp:jobs:completionHandler:)", 72, 2, 0, v100, (uint64_t)sub_24D6E3298, v93);
      swift_release();
      swift_release();

      swift_release();
LABEL_32:
      uint64_t v102 = v109;
      sub_24DA465BC(v109);
    }
  }
}

void sub_24D6A9D24(void *a1, NSObject *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, char a7, unint64_t a8, void (*a9)(void *), uint64_t a10)
{
  void (*v38)(void **__return_ptr, uint64_t *);
  NSObject *v39;
  void *v40;
  uint64_t inited;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  void *v55;
  uint64_t v56;
  os_log_t v57;
  void *v58;
  uint64_t v59;
  NSObject *v60;
  int v61;
  uint64_t v62;
  void (*v63)(void *);
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  char v75;

  uint64_t v17 = sub_24DCC9078();
  unint64_t v65 = *(void *)(v17 - 8);
  unint64_t v66 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = a6;
  uint64_t v75 = a7;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (a1)
    {
      char v64 = Strong;
      uint64_t v62 = a10;
      char v63 = a9;
      id v21 = a1;
      id v22 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      id v23 = a1;
      swift_bridgeObjectRetain();
      sub_24D40B3C8(a8);
      id v24 = a1;
      swift_bridgeObjectRetain();
      sub_24D40B3C8(a8);
      id v25 = sub_24DCC9068();
      os_log_type_t v26 = sub_24DCCA148();
      uint64_t v61 = v26;
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        char v60 = a2;
        uint64_t v28 = v27;
        uint64_t v58 = (void *)swift_slowAlloc();
        Class v59 = swift_slowAlloc();
        uint64_t v73 = (void *)v59;
        *(_DWORD *)uint64_t v28 = 136446978;
        int64_t v57 = v25;
        swift_bridgeObjectRetain();
        uint64_t v72 = sub_24D418FB4(a4, a5, (uint64_t *)&v73);
        sub_24DCCA428();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v28 + 12) = 2080;
        uint64_t v29 = sub_24D3D4384(a6, a7);
        uint64_t v72 = sub_24D418FB4(v29, v30, (uint64_t *)&v73);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 22) = 2080;
        unint64_t v31 = sub_24D3D865C(a8);
        unint64_t v33 = v32;
        sub_24D4170B0(a8);
        uint64_t v72 = sub_24D418FB4(v31, v33, (uint64_t *)&v73);
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        sub_24D4170B0(a8);
        *(_WORD *)(v28 + 32) = 2112;
        swift_getErrorValue();
        id v34 = sub_24DBA2828(v67);
        uint64_t v72 = (uint64_t)v34;
        sub_24DCCA428();
        uint64_t v35 = v58;
        *uint64_t v58 = v34;

        id v25 = v57;
        _os_log_impl(&dword_24D3D0000, v57, (os_log_type_t)v61, "🚧  %{public}s of %s failed for %s: %@", (uint8_t *)v28, 0x2Au);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v35, -1, -1);
        uint64_t v36 = v59;
        swift_arrayDestroy();
        MEMORY[0x25332B030](v36, -1, -1);
        uint64_t v37 = v28;
        a2 = v60;
        MEMORY[0x25332B030](v37, -1, -1);
      }
      else
      {
        sub_24D4170B0(a8);
        swift_bridgeObjectRelease_n();
        sub_24D4170B0(a8);
      }
      (*(void (**)(char *, uint64_t))(v65 + 8))(v19, v66);
      unint64_t v38 = *(void (**)(void **__return_ptr, uint64_t *))(**(void **)(v64 + 16) + 160);
      swift_retain();
      v38(&v73, &v74);
      swift_release();
      unint64_t v39 = a2;
      id v40 = v73;
      if (v73)
      {
        type metadata accessor for NSFileProviderError(0);
        uint64_t v72 = -2005;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_24DCCECD0;
        *(void *)(inited + 32) = sub_24DCC97E8();
        *(void *)(inited + 40) = v42;
        swift_getErrorValue();
        unint64_t v43 = v68;
        unint64_t v44 = v69;
        *(void *)(inited + 72) = v69;
        boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 48));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v44 - 8) + 16))(boxed_opaque_existential_0, v43, v44);
        *(void *)(inited + 80) = sub_24DCC97E8();
        *(void *)(inited + 88) = v46;
        type metadata accessor for NSFileProviderItemIdentifier(0);
        *(void *)(inited + 120) = v47;
        *(void *)(inited + 96) = v40;
        os_log_t v48 = v40;
        sub_24D428D08(inited);
        sub_24D3EA320(&qword_26B193F20, type metadata accessor for NSFileProviderError);
        sub_24DCC8808();
        id v49 = v73;
        v63(v73);

        swift_release();
      }
      else
      {
        type metadata accessor for NSFileProviderError(0);
        uint64_t v72 = -2005;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
        uint64_t v50 = swift_initStackObject();
        *(_OWORD *)(v50 + 16) = xmmword_24DCCECE0;
        *(void *)(v50 + 32) = sub_24DCC97E8();
        *(void *)(v50 + 40) = v51;
        swift_getErrorValue();
        uint64_t v52 = v70;
        uint64_t v53 = v71;
        *(void *)(v50 + 72) = v71;
        unint64_t v54 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v50 + 48));
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v53 - 8) + 16))(v54, v52, v53);
        sub_24D428D08(v50);
        sub_24D3EA320(&qword_26B193F20, type metadata accessor for NSFileProviderError);
        sub_24DCC8808();
        uint64_t v55 = v73;
        v63(v73);
        swift_release();
      }
      a2 = v39;
    }
    else
    {
      swift_release();
    }
  }
  dispatch_group_leave(a2);
}

uint64_t sub_24D6AA438(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t (*a12)(void), uint64_t a13)
{
  uint64_t v41 = a6;
  uint64_t v20 = sub_24DCC9078();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  id v23 = (char *)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_beginAccess();
  if ((*(unsigned char *)(a1 + 16) & 1) == 0)
  {
    uint64_t v39 = v21;
    id v25 = a12;
    if (a2)
    {
      id v40 = a12;
      uint64_t v26 = swift_allocObject();
      *(void *)(v26 + 16) = a4;
      *(void *)(v26 + 24) = a5;
      uint64_t v27 = (void *)swift_allocObject();
      uint64_t v28 = v41;
      v27[2] = a3;
      v27[3] = v28;
      v27[4] = a7;
      v27[5] = a8;
      v27[6] = a9;
      void v27[7] = a10;
      uint64_t v29 = v40;
      v27[8] = a11;
      v27[9] = v29;
      v27[10] = a13;
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain();
      sub_24D40B3C8(a8);
      swift_retain();
      swift_retain();
      sub_24D8272E0((uint64_t)"waitForPropagation(for:request:barrierTimestamp:jobs:completionHandler:)", 72, 2, 0, (uint64_t)sub_24D3F0D64, 0, (uint64_t)sub_24D6E4F84, v26, (uint64_t)sub_24D6E3370, (uint64_t)v27);
      swift_release();
      return swift_release();
    }
    else
    {
      id v30 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      swift_bridgeObjectRetain();
      sub_24D40B3C8(a8);
      swift_bridgeObjectRetain();
      sub_24D40B3C8(a8);
      unint64_t v31 = sub_24DCC9068();
      os_log_type_t v32 = sub_24DCCA148();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = swift_slowAlloc();
        v38[0] = swift_slowAlloc();
        uint64_t v43 = v38[0];
        *(_DWORD *)uint64_t v33 = 136446466;
        v38[1] = a13;
        swift_bridgeObjectRetain();
        uint64_t v42 = sub_24D418FB4(v41, a7, &v43);
        id v40 = a12;
        sub_24DCCA428();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v33 + 12) = 2080;
        unint64_t v34 = sub_24D3D865C(a8);
        unint64_t v36 = v35;
        sub_24D4170B0(a8);
        uint64_t v42 = sub_24D418FB4(v34, v36, &v43);
        id v25 = v40;
        sub_24DCCA428();
        swift_bridgeObjectRelease();
        sub_24D4170B0(a8);
        _os_log_impl(&dword_24D3D0000, v31, v32, "🚧  finished %{public}s for %s", (uint8_t *)v33, 0x16u);
        uint64_t v37 = v38[0];
        swift_arrayDestroy();
        MEMORY[0x25332B030](v37, -1, -1);
        MEMORY[0x25332B030](v33, -1, -1);
      }
      else
      {
        sub_24D4170B0(a8);
        swift_bridgeObjectRelease_n();
        sub_24D4170B0(a8);
      }

      (*(void (**)(char *, uint64_t))(v39 + 8))(v23, v20);
      return v25(0);
    }
  }
  return result;
}

uint64_t sub_24D6AA828(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, unint64_t a4)
{
  unint64_t v87 = a4;
  uint64_t v88 = a2;
  uint64_t v89 = a3;
  uint64_t v6 = sub_24DCC93F8();
  uint64_t v86 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9078();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v78 - v14;
  uint64_t result = sub_24D84C5F4(1);
  if (v4) {
    return result;
  }
  char v17 = result;
  uint64_t v83 = v9;
  uint64_t v84 = v10;
  uint64_t v78 = v8;
  uint64_t v85 = 0;
  uint64_t v18 = v86;
  uint64_t v81 = v6;
  os_log_t v82 = (char *)a1;
  uint64_t v19 = v88;
  id v20 = (id)fpfs_current_or_default_log();
  if ((v17 & 1) == 0)
  {
    sub_24DCC9088();
    uint64_t v27 = sub_24DCC9068();
    os_log_type_t v28 = sub_24DCCA148();
    BOOL v29 = os_log_type_enabled(v27, v28);
    uint64_t v31 = v83;
    uint64_t v30 = v84;
    if (v29)
    {
      os_log_type_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v32 = 0;
      _os_log_impl(&dword_24D3D0000, v27, v28, "🚀  waiting for engine stabilization", v32, 2u);
      MEMORY[0x25332B030](v32, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v31);
    uint64_t v33 = v82;
    if (qword_26B1974B0 != -1) {
      swift_once();
    }
    unint64_t v34 = (void *)qword_26B1A23E8;
    unint64_t v35 = v87;
    sub_24D3D865C(v87);
    unint64_t v36 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    id v37 = objc_msgSend(v34, sel_forceRunningWithReason_, v36);

    uint64_t v84 = swift_allocObject();
    *(void *)(v84 + 16) = v37;
    unint64_t v38 = (void *)swift_retain();
    int v39 = objc_sync_enter(v38);
    uint64_t v40 = v81;
    if (!v39)
    {
      id v41 = *(id *)&v33[qword_26B199580];
      if (objc_sync_exit(v33)) {
        sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v33);
      }
      swift_release();
      sub_24D3D865C(v35);
      uint64_t v42 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v43 = objc_msgSend(v41, sel_forceRunningWithReason_, v42);

      uint64_t v83 = swift_allocObject();
      *(void *)(v83 + 16) = v43;
      if (qword_26B197988 != -1) {
        swift_once();
      }
      unint64_t v44 = (void *)qword_26B1A24B0;
      sub_24D3D865C(v35);
      uint64_t v45 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v46 = objc_msgSend(v44, sel_forceRunningWithReason_, v45);

      uint64_t v80 = swift_allocObject();
      *(void *)(v80 + 16) = v46;
      if (qword_26B1997F0 != -1) {
        swift_once();
      }
      unint64_t v47 = (void *)qword_26B1A2490;
      sub_24D3D865C(v35);
      os_log_t v48 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v49 = objc_msgSend(v47, sel_forceRunningWithReason_, v48);

      uint64_t v79 = swift_allocObject();
      *(void *)(v79 + 16) = v49;
      if (qword_26B194290 != -1) {
        swift_once();
      }
      uint64_t v50 = (void *)qword_26B1A2380;
      sub_24D3D865C(v35);
      uint64_t v51 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      id v52 = objc_msgSend(v50, sel_forceRunningWithReason_, v51);

      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v52;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1992E0);
      uint64_t v54 = swift_dynamicCastClass();
      if (!v54)
      {
        uint64_t v86 = 0;
        uint64_t v63 = v53;
        char v64 = 0;
        uint64_t v55 = 0;
        goto LABEL_28;
      }
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1994B0);
      uint64_t v55 = *(void **)(*(void *)(swift_dynamicCastClassUnconditional() + 40) + qword_26B1A26F0);
      if (!v55)
      {
        uint64_t v86 = v54;
        uint64_t v63 = v53;
        swift_retain();
        char v64 = 0;
        goto LABEL_28;
      }
      uint64_t v56 = *(void **)(v55[16] + 64);
      int64_t v57 = v78;
      *uint64_t v78 = v56;
      (*(void (**)(void *, void, uint64_t))(v18 + 104))(v57, *MEMORY[0x263F8F0E0], v40);
      swift_retain();
      id v58 = v56;
      swift_retain();
      LOBYTE(v56) = sub_24DCC9418();
      (*(void (**)(void *, uint64_t))(v18 + 8))(v57, v40);
      if (v56)
      {
        uint64_t v59 = v55[28];
        BOOL v60 = __OFADD__(v59, 1);
        uint64_t v61 = v59 + 1;
        if (!v60)
        {
          v55[28] = v61;
          if (v55[24])
          {
            uint64_t v62 = v85;
            sub_24D8C92B8();
            uint64_t v85 = v62;
            if (v62)
            {
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              swift_release();
              return swift_release();
            }
          }
          char v64 = sub_24D6D7880;
          uint64_t v86 = v54;
          uint64_t v63 = v53;
LABEL_28:
          uint64_t v65 = v89;
          unint64_t v66 = (void *)swift_allocObject();
          v66[2] = v64;
          v66[3] = v55;
          uint64_t v68 = v79;
          uint64_t v67 = v80;
          v66[4] = sub_24D6E5C5C;
          v66[5] = v67;
          uint64_t v69 = v83;
          uint64_t v70 = v84;
          v66[6] = sub_24D6E5C5C;
          v66[7] = v69;
          v66[8] = sub_24D6E5C5C;
          v66[9] = v70;
          v66[10] = sub_24D6E5C5C;
          v66[11] = v68;
          v66[12] = sub_24D6E5C5C;
          v66[13] = v63;
          v66[14] = v88;
          v66[15] = v65;
          uint64_t v71 = swift_allocObject();
          *(void *)(v71 + 16) = sub_24D6D7834;
          *(void *)(v71 + 24) = v66;
          uint64_t v81 = v71;
          uint64_t v72 = &v82[qword_26B1A2668];
          swift_beginAccess();
          uint64_t v73 = *(void **)v72;
          sub_24D40B3C8(v87);
          os_log_t v82 = (char *)v64;
          uint64_t v88 = (uint64_t (*)(void))v55;
          sub_24D3EBEF0((uint64_t)v64);
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v72 = v73;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v73 = sub_24DA1554C(0, v73[2] + 1, 1, v73);
            *(void *)uint64_t v72 = v73;
          }
          unint64_t v76 = v73[2];
          unint64_t v75 = v73[3];
          if (v76 >= v75 >> 1)
          {
            uint64_t v73 = sub_24DA1554C((void *)(v75 > 1), v76 + 1, 1, v73);
            *(void *)uint64_t v72 = v73;
          }
          v73[2] = v76 + 1;
          uint64_t v77 = &v73[3 * v76];
          v77[4] = v87;
          v77[5] = sub_24D46A450;
          v77[6] = v81;
          swift_endAccess();
          swift_release();
          sub_24D43DD74((uint64_t)v82);
          swift_release();
          swift_release();
          swift_release();
          swift_release();
          return swift_release();
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
    }
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v33);
  }
  sub_24DCC9088();
  uint64_t v21 = sub_24DCC9068();
  os_log_type_t v22 = sub_24DCCA148();
  BOOL v23 = os_log_type_enabled(v21, v22);
  uint64_t v24 = v83;
  uint64_t v25 = v84;
  if (v23)
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v26 = 0;
    _os_log_impl(&dword_24D3D0000, v21, v22, "🚀  engine is stable", v26, 2u);
    MEMORY[0x25332B030](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v24);
  return v19(0);
}

uint64_t sub_24D6AB1DC(uint64_t a1, unint64_t a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t v9 = sub_24DCC9078();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v47 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v47 - v13;
  uint64_t v51 = a1;
  uint64_t v15 = *(uint64_t (**)(uint64_t))(**(void **)(*(void *)(a1 + 32) + 16) + 416);
  uint64_t v16 = swift_retain();
  LOBYTE(v15) = v15(v16);
  swift_release();
  id v17 = (id)fpfs_current_or_default_log();
  if (v15)
  {
    sub_24DCC9088();
    sub_24D40B3C8(a2);
    uint64_t v18 = sub_24DCC9068();
    os_log_type_t v19 = sub_24DCCA118();
    BOOL v20 = os_log_type_enabled(v18, v19);
    uint64_t v52 = v4;
    if (v20)
    {
      id v49 = a3;
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v50 = a4;
      uint64_t v23 = v22;
      v54[0] = v22;
      *(_DWORD *)uint64_t v21 = 136315138;
      unint64_t v24 = sub_24D3D865C(a2);
      uint64_t v48 = v9;
      uint64_t v55 = sub_24D418FB4(v24, v25, v54);
      a3 = v49;
      sub_24DCCA428();
      swift_bridgeObjectRelease();
      sub_24D4170B0(a2);
      _os_log_impl(&dword_24D3D0000, v18, v19, "waiting for rescan to start for %s", v21, 0xCu);
      swift_arrayDestroy();
      uint64_t v26 = v23;
      a4 = v50;
      MEMORY[0x25332B030](v26, -1, -1);
      MEMORY[0x25332B030](v21, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v48);
    }
    else
    {
      sub_24D4170B0(a2);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v12, v9);
    }
    if (qword_26B1997F0 != -1) {
      swift_once();
    }
    unint64_t v34 = (void *)qword_26B1A2490;
    sub_24D3D865C(a2);
    unint64_t v35 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
    id v36 = objc_msgSend(v34, sel_forceRunningWithReason_, v35);

    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v36;
    unint64_t v38 = (void *)swift_allocObject();
    void v38[2] = sub_24D6E5C5C;
    v38[3] = v37;
    v38[4] = a2;
    v38[5] = a3;
    v38[6] = a4;
    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = sub_24D6E2E94;
    *(void *)(v39 + 24) = v38;
    uint64_t v40 = (void **)(v51 + qword_26B1A2668);
    swift_beginAccess();
    id v41 = *v40;
    sub_24D40B3C8(a2);
    sub_24D40B3C8(a2);
    swift_retain();
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v40 = v41;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      id v41 = sub_24DA1554C(0, v41[2] + 1, 1, v41);
      *uint64_t v40 = v41;
    }
    unint64_t v44 = v41[2];
    unint64_t v43 = v41[3];
    if (v44 >= v43 >> 1)
    {
      id v41 = sub_24DA1554C((void *)(v43 > 1), v44 + 1, 1, v41);
      *uint64_t v40 = v41;
    }
    v41[2] = v44 + 1;
    uint64_t v45 = &v41[3 * v44];
    v45[4] = a2;
    v45[5] = sub_24D475708;
    v45[6] = v39;
    swift_endAccess();
    return swift_release();
  }
  else
  {
    sub_24DCC9088();
    sub_24D40B3C8(a2);
    uint64_t v27 = sub_24DCC9068();
    os_log_type_t v28 = sub_24DCCA118();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v52 = v4;
      uint64_t v29 = swift_slowAlloc();
      uint64_t v48 = v9;
      uint64_t v30 = (uint8_t *)v29;
      uint64_t v31 = swift_slowAlloc();
      v54[0] = v31;
      uint64_t v50 = a4;
      *(_DWORD *)uint64_t v30 = 136315138;
      unint64_t v32 = sub_24D3D865C(a2);
      id v49 = a3;
      uint64_t v55 = sub_24D418FB4(v32, v33, v54);
      sub_24DCCA428();
      a3 = v49;
      swift_bridgeObjectRelease();
      sub_24D4170B0(a2);
      _os_log_impl(&dword_24D3D0000, v27, v28, "no rescan pending for %s", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v31, -1, -1);
      MEMORY[0x25332B030](v30, -1, -1);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v48);
    }
    else
    {
      sub_24D4170B0(a2);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v14, v9);
    }
    return a3(0);
  }
}

uint64_t sub_24D6AB7FC(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, unint64_t a4, uint64_t (*a5)(uint64_t), uint64_t a6)
{
  uint64_t v11 = sub_24DCC9078();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  a2(v13);
  id v16 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  sub_24D40B3C8(a4);
  sub_24D40B3C8(a4);
  id v17 = sub_24DCC9068();
  os_log_type_t v18 = sub_24DCCA118();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v33 = a6;
    uint64_t v19 = swift_slowAlloc();
    unint64_t v34 = a5;
    BOOL v20 = (uint8_t *)v19;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v32 = v12;
    uint64_t v22 = v21;
    uint64_t v36 = v21;
    *(_DWORD *)BOOL v20 = 136315138;
    v30[1] = v20 + 4;
    sub_24D40B3C8(a4);
    uint64_t v23 = a1;
    unint64_t v24 = sub_24D3D865C(a4);
    uint64_t v31 = v11;
    unint64_t v26 = v25;
    sub_24D4170B0(a4);
    uint64_t v35 = sub_24D418FB4(v24, v26, &v36);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    sub_24D4170B0(a4);
    sub_24D4170B0(a4);
    _os_log_impl(&dword_24D3D0000, v17, v18, "rescan ended for %s", v20, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v22, -1, -1);
    uint64_t v27 = v20;
    os_log_type_t v28 = v34;
    MEMORY[0x25332B030](v27, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v15, v31);
    return v28(v23);
  }
  else
  {
    sub_24D4170B0(a4);
    sub_24D4170B0(a4);

    (*(void (**)(char *, uint64_t))(v12 + 8))(v15, v11);
    return a5(a1);
  }
}

uint64_t sub_24D6ABA9C(uint64_t a1)
{
  uint64_t v2 = sub_24DCC93F8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (uint64_t *)((char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(*(void *)(a1 + 128) + 64);
  *uint64_t v5 = v6;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F8F0E0], v2);
  id v7 = v6;
  LOBYTE(v6) = sub_24DCC9418();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v3 + 8))(v5, v2);
  if (v6)
  {
    uint64_t v9 = *(void *)(a1 + 224);
    if (v9 > 0)
    {
      *(void *)(a1 + 224) = v9 - 1;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

void sub_24D6ABC14(uint64_t a1, uint64_t a2, void *a3, void *a4, void (*a5)(void *, void **, id), uint64_t a6)
{
  v20[0] = a1;
  v20[1] = a2;
  uint64_t v19 = a3;
  if (a4)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      v18[0] = a1;
      v18[1] = a2;
      id v17 = a3;
      uint64_t v12 = swift_allocObject();
      *(void *)(v12 + 16) = a5;
      *(void *)(v12 + 24) = a6;
      sub_24D3F0BA0((uint64_t)v18, v12 + 32, (uint64_t *)&unk_26B199D80);
      sub_24D3F0BA0((uint64_t)&v17, v12 + 48, (uint64_t *)&unk_26986C620);
      id v13 = a4;
      id v14 = a3;
      swift_retain();
      swift_bridgeObjectRetain();
      sub_24D5AE460(a4, 0, (void (*)(id))sub_24D6D4A60, v12);
      swift_release();

      swift_release();
    }
    else
    {
      id v15 = a4;
      id v16 = (id)FPDomainUnavailableError();
      a5(v20, &v19, v16);
    }
  }
  else
  {
    a5(v20, &v19, 0);
  }
}

void sub_24D6ABD98(void *a1, void *a2, void *a3, void (*a4)(void), uint64_t a5)
{
  os_log_type_t v18 = a3;
  uint64_t v19 = a2;
  if (a1)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      id v16 = a3;
      id v17 = a2;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = a4;
      *(void *)(v10 + 24) = a5;
      sub_24D3F0BA0((uint64_t)&v17, v10 + 32, (uint64_t *)&unk_26986C620);
      sub_24D3F0BA0((uint64_t)&v16, v10 + 40, (uint64_t *)&unk_26986C620);
      id v11 = a1;
      id v12 = a3;
      swift_retain();
      id v13 = a2;
      sub_24D5AE460(a1, 0, (void (*)(id))sub_24D6E06DC, v10);
      swift_release();

      swift_release();
    }
    else
    {
      id v14 = a1;
      id v15 = (id)FPDomainUnavailableError();
      a4();
    }
  }
  else
  {
    ((void (*)(void, void **, void **))a4)(0, &v19, &v18);
  }
}

void sub_24D6ABF04(uint64_t a1, char *a2, uint8_t *a3, void (*a4)(void, void *), uint64_t a5, int a6)
{
  LODWORD(v53) = a6;
  uint64_t v59 = a5;
  BOOL v60 = a4;
  uint64_t v54 = a2;
  uint64_t v8 = sub_24DCC8288();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v56 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC82A8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  id v13 = (char *)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_24DCC9078();
  uint64_t v14 = *(void *)(v55 - 8);
  MEMORY[0x270FA5388](v55);
  id v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  id v17 = *(void **)(a1 + 32);
  uint64_t v18 = *(unsigned __int8 *)(a1 + 40);
  int v19 = *(unsigned __int8 *)(a1 + 41);
  uint64_t v57 = v11;
  uint64_t v58 = v10;
  if (v19 == 1)
  {
    uint64_t v52 = a3;
    uint64_t v20 = qword_26B194080;
    id v21 = v17;
    if (v20 != -1) {
      swift_once();
    }
    uint64_t v22 = sub_24DCC97E8();
    uint64_t v24 = v23;
    if (v22 == sub_24DCC97E8() && v24 == v25)
    {
      swift_bridgeObjectRelease_n();
      sub_24D40160C(v17, v18, 1);
      a3 = v52;
      goto LABEL_16;
    }
    char v27 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_24D40160C(v17, v18, 1);
    a3 = v52;
    if (v27) {
      goto LABEL_16;
    }
  }
  else if (!v17 && v18 == 2)
  {
    goto LABEL_16;
  }
  os_log_type_t v28 = v54;
  uint64_t v29 = *((void *)v54 + 2);
  uint64_t v30 = v63;
  sub_24D418298(v29, 0);
  uint64_t v63 = v30;
  if (v30) {
    return;
  }
  if ((v32 & 0x100) == 0)
  {
    uint64_t v33 = *(void *)(*(void *)(v29 + 32) + 16);
    uint64_t v61 = v31;
    char v62 = v32;
    unint64_t v34 = (void *)swift_allocObject();
    v34[2] = a3;
    v34[3] = v28;
    uint64_t v35 = v59;
    v34[4] = v60;
    v34[5] = v35;
    uint64_t v36 = *(void (**)(uint8_t **, void, void (*)(uint64_t), void *))(*(void *)v33 + 744);
    swift_retain();
    uint64_t v37 = a3;
    swift_retain();
    swift_retain();
    v36(&v61, v53 & 1, sub_24D6DCB5C, v34);
    swift_release();
    swift_release();
    return;
  }
LABEL_16:
  id v38 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v39 = a3;
  uint64_t v40 = sub_24DCC9068();
  os_log_type_t v41 = sub_24DCCA118();
  if (os_log_type_enabled(v40, v41))
  {
    uint64_t v42 = (uint8_t *)swift_slowAlloc();
    unint64_t v43 = (void *)swift_slowAlloc();
    uint64_t v54 = v13;
    uint64_t v52 = v42;
    *(_DWORD *)uint64_t v42 = 138543362;
    uint64_t v61 = v39;
    unint64_t v44 = v39;
    uint64_t v53 = v16;
    uint64_t v45 = v44;
    id v13 = v54;
    sub_24DCCA428();
    void *v43 = v39;
    id v46 = v43;

    uint64_t v47 = v52;
    id v16 = v53;
    _os_log_impl(&dword_24D3D0000, v40, v41, "[Pin] Item %{public}@ can't be pinned.", v52, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v46, -1, -1);
    MEMORY[0x25332B030](v47, -1, -1);
  }
  else
  {

    uint64_t v40 = v39;
  }
  uint64_t v49 = v57;
  uint64_t v48 = v58;
  uint64_t v50 = v55;

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v50);
  sub_24DCC8158();
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
  sub_24DCC8808();
  uint64_t v51 = (void *)sub_24DCC8128();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v13, v48);
  v60(0, v51);
}

void sub_24D6AC4BC(uint64_t a1, void *a2, NSObject *a3, void (*a4)(void, void *), uint64_t a5)
{
  char v62 = a4;
  uint64_t v59 = a3;
  uint64_t v8 = sub_24DCC9078();
  uint64_t v60 = *(void *)(v8 - 8);
  uint64_t v61 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v54 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v54 - v12;
  uint64_t v14 = type metadata accessor for VFSItem(0);
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v15 = *(void *)(v57 + 64);
  uint64_t v16 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v58 = (uint64_t)&v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)&v54 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B194250);
  MEMORY[0x270FA5388](v19);
  id v21 = (void **)((char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24D415FD0(a1, (uint64_t)v21, &qword_26B194250);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v22 = *v21;
    id v23 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v24 = a2;
    id v25 = v22;
    unint64_t v26 = v24;
    id v27 = v22;
    os_log_type_t v28 = sub_24DCC9068();
    os_log_type_t v29 = sub_24DCCA128();
    int v30 = v29;
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v31 = swift_slowAlloc();
      LODWORD(v58) = v30;
      uint64_t v32 = v31;
      uint64_t v33 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 138543618;
      uint64_t v59 = v28;
      uint64_t v63 = v26;
      unint64_t v34 = v26;
      sub_24DCCA428();
      void *v33 = v26;

      *(_WORD *)(v32 + 12) = 2114;
      id v35 = v22;
      uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v63 = v36;
      sub_24DCCA428();
      v33[1] = v36;
      os_log_type_t v28 = v59;

      _os_log_impl(&dword_24D3D0000, v28, (os_log_type_t)v58, "[Pin] Request failed for item %{public}@ with error %{public}@.", (uint8_t *)v32, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v33, -1, -1);
      MEMORY[0x25332B030](v32, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v60 + 8))(v11, v61);
    id v46 = v22;
    v62(0, v22);
  }
  else
  {
    sub_24D40BC84((uint64_t)v21, (uint64_t)v18, type metadata accessor for VFSItem);
    id v37 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    id v38 = a2;
    uint64_t v39 = sub_24DCC9068();
    os_log_type_t v40 = sub_24DCCA118();
    uint64_t v41 = (uint64_t)v18;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v55 = (void *)swift_slowAlloc();
      uint64_t v56 = v42;
      *(_DWORD *)uint64_t v42 = 138543362;
      uint64_t v54 = v42 + 4;
      uint64_t v63 = v38;
      unint64_t v43 = v38;
      sub_24DCCA428();
      unint64_t v44 = v55;
      void *v55 = v38;

      uint64_t v45 = v56;
      _os_log_impl(&dword_24D3D0000, v39, v40, "[Pin] Request Completed for item %{public}@.", v56, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
      swift_arrayDestroy();
      MEMORY[0x25332B030](v44, -1, -1);
      MEMORY[0x25332B030](v45, -1, -1);
    }
    else
    {

      uint64_t v39 = v38;
    }

    (*(void (**)(char *, uint64_t))(v60 + 8))(v13, v61);
    uint64_t v47 = v58;
    uint64_t v48 = v59;
    uint64_t v49 = *(void *)(*((void *)v59[2].isa + 4) + 16);
    sub_24D40B474((uint64_t)v18, v58, type metadata accessor for VFSItem);
    unint64_t v50 = (*(unsigned __int8 *)(v57 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v51 = (void *)swift_allocObject();
    uint64_t v52 = (void (*)(void, void))v62;
    v51[2] = v48;
    v51[3] = v52;
    v51[4] = a5;
    sub_24D40BC84(v47, (uint64_t)v51 + v50, type metadata accessor for VFSItem);
    uint64_t v53 = *(void (**)(uint64_t (*)(), void *))(*(void *)v49 + 672);
    swift_retain();
    swift_retain();
    swift_retain();
    v53(sub_24D6DCED0, v51);
    swift_release();
    swift_release();
    sub_24D3FC974(v41, type metadata accessor for VFSItem);
  }
}

uint64_t sub_24D6ACB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for VFSItem(0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  sub_24D40B474(a4, (uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for VFSItem);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  id v13 = (void *)swift_allocObject();
  v13[2] = a2;
  v13[3] = a3;
  v13[4] = a1;
  sub_24D40BC84((uint64_t)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t)v13 + v12, type metadata accessor for VFSItem);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D6E4F8C;
  *(void *)(v14 + 24) = v11;
  swift_retain_n();
  swift_retain();
  swift_retain();
  sub_24D3FBC7C((uint64_t)"updatePinning(of:to:request:completionHandler:)", 47, 2, sub_24D6E5EFC, v14, (uint64_t)sub_24D6DD2A0, (uint64_t)v13);
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D6ACD24(void (*a1)(int *, void), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (int *)sub_24D3E7C08(MEMORY[0x263F8EE78]);
  id v7 = sub_24D4077D0(a4, 64, 0, v6);
  swift_bridgeObjectRelease();
  a1(v7, 0);
}

uint64_t sub_24D6ACDB4(uint64_t a1, long long *a2, int a3)
{
  uint64_t v5 = v3;
  int v19 = a3;
  uint64_t v8 = type metadata accessor for FPFeedbackManagerState();
  uint64_t v9 = v8 - 8;
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_defaultActor_initialize();
  *(unsigned char *)(v3 + 161) = 0;
  sub_24D433858(a1, (uint64_t)v18);
  sub_24D433858((uint64_t)v18, (uint64_t)v17);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986EF60);
  uint64_t v12 = swift_allocObject();
  *(unsigned char *)(v12 + 72) = 0;
  sub_24D433858((uint64_t)v17, v12 + 16);
  uint64_t v13 = sub_24DCC8CE8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  uint64_t v14 = *(int *)(v9 + 28);
  *(void *)&v11[v14] = sub_24D428E40(MEMORY[0x263F8EE78]);
  uint64_t v15 = &v11[*(int *)(v9 + 32)];
  *(void *)uint64_t v15 = 0;
  v15[8] = 1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  sub_24D40BC84((uint64_t)v11, v12 + *(void *)(*(void *)v12 + 136), (uint64_t (*)(void))type metadata accessor for FPFeedbackManagerState);
  *(void *)(v12 + 56) = 0xD000000000000016;
  *(void *)(v12 + 64) = 0x800000024DD02900;
  swift_retain();
  sub_24DBC0AC8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  swift_release();
  if (v4)
  {
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C5D0);
    swift_defaultActor_destroy();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
    __swift_destroy_boxed_opaque_existential_1(a1);
    swift_deallocPartialClassInstance();
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    *(void *)(v5 + 112) = v12;
    sub_24D57EC10(a2, v5 + 120);
    *(unsigned char *)(v5 + 160) = v19 & 1;
  }
  return v5;
}

uint64_t sub_24D6AD000@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_24DCC91D8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_24D6AD080(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return sub_24DCC91E8();
}

unint64_t sub_24D6AD0F0(void *a1)
{
  sub_24DCCAFF8();
  sub_24DCCB018();
  if (a1)
  {
    type metadata accessor for CFString(0);
    sub_24D3EA320(&qword_26986C5F0, type metadata accessor for CFString);
    id v2 = a1;
    sub_24DCC8E48();
  }
  uint64_t v3 = sub_24DCCB048();

  return sub_24D6AE2A4((uint64_t)a1, v3);
}

unint64_t sub_24D6AD1D8(uint64_t a1)
{
  sub_24D6D0A84(a1 + 24, (uint64_t)v5);
  sub_24DCCAFF8();
  sub_24DCC98F8();
  sub_24DCCB008();
  sub_24D6D0A84((uint64_t)v5, (uint64_t)&v6);
  int v2 = v7;
  switch(v7)
  {
    case 0xFAu:
    case 0xFBu:
    case 0xFCu:
    case 0xFDu:
    case 0xFEu:
      goto LABEL_8;
    default:
      sub_24DCCB008();
      if (v2 == 255)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        if (v2)
        {
          if (v2 == 1)
          {
            sub_24DCCB008();
            sub_24DCCB038();
          }
          else
          {
LABEL_8:
            sub_24DCCB008();
          }
        }
        else
        {
          sub_24DCCB008();
          sub_24DCCB028();
        }
      }
      if (*(unsigned char *)(a1 + 33) == 70)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        sub_24DCCB008();
      }
      uint64_t v3 = sub_24DCCB048();
      return sub_24D6AE3C4((void *)a1, v3);
  }
}

unint64_t sub_24D6AD3B8(uint64_t a1)
{
  sub_24DCCAFF8();
  long long v5 = *(_OWORD *)(a1 + 16);
  __int16 v6 = *(_WORD *)(a1 + 32);
  sub_24D6D0A84((uint64_t)&v5 + 8, (uint64_t)v7);
  sub_24DCC98F8();
  sub_24DCCB008();
  sub_24D6D0A84((uint64_t)v7, (uint64_t)&v8);
  int v2 = v9;
  switch(v9)
  {
    case 0xFAu:
    case 0xFBu:
    case 0xFCu:
    case 0xFDu:
    case 0xFEu:
      goto LABEL_8;
    default:
      sub_24DCCB008();
      if (v2 == 255)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        if (v2)
        {
          if (v2 == 1)
          {
            sub_24DCCB008();
            sub_24DCCB038();
          }
          else
          {
LABEL_8:
            sub_24DCCB008();
          }
        }
        else
        {
          sub_24DCCB008();
          sub_24DCCB028();
        }
      }
      if (SHIBYTE(v6) == 70)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        sub_24DCCB008();
      }
      sub_24DCC98F8();
      uint64_t v3 = sub_24DCCB048();
      return sub_24D6AE678((long long *)a1, v3);
  }
}

unint64_t sub_24D6AD5B4(unsigned __int8 a1)
{
  uint64_t v2 = sub_24DA6BF68();

  return sub_24D6AE95C(a1, v2);
}

unint64_t sub_24D6AD5F8(uint64_t a1, char a2)
{
  sub_24DCCAFF8();
  if (a2)
  {
    sub_24DCCB008();
    if (a2 == 1) {
      sub_24DCCB038();
    }
  }
  else
  {
    sub_24DCCB008();
    sub_24DCCB028();
  }
  uint64_t v4 = sub_24DCCB048();

  return sub_24D6AED84(a1, a2, v4);
}

unint64_t sub_24D6AD6B8(uint64_t a1)
{
  uint64_t v2 = sub_24DCCAFE8();

  return sub_24D6AEE54(a1, v2);
}

unint64_t sub_24D6AD6FC(uint64_t a1)
{
  uint64_t v2 = sub_24DCCA668();

  return sub_24D6AEEF0(a1, v2);
}

unint64_t sub_24D6AD740(unsigned __int8 a1)
{
  sub_24DCCAFF8();
  sub_24DCC98F8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_24DCCB048();

  return sub_24D6AEFB8(a1, v2);
}

unint64_t sub_24D6AD808(uint64_t a1)
{
  uint64_t v2 = sub_24DCCA388();
  return sub_24D6B1284(a1, v2, (unint64_t *)&unk_26B1940B0);
}

unint64_t sub_24D6AD858(uint64_t a1)
{
  sub_24DCCAFF8();
  sub_24DCC8A58();
  sub_24D3EA320((unint64_t *)&qword_26B192330, MEMORY[0x263F06EA8]);
  sub_24DCC9688();
  type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  sub_24DCC98F8();
  uint64_t v2 = sub_24DCCB048();

  return sub_24D6AF164(a1, v2);
}

unint64_t sub_24D6AD928(uint64_t a1)
{
  sub_24DCCAFF8();
  sub_24DCC8A58();
  sub_24D3EA320((unint64_t *)&qword_26B192330, MEMORY[0x263F06EA8]);
  sub_24DCC9688();
  type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  sub_24DCCA3A8();
  uint64_t v2 = sub_24DCCB048();

  return sub_24D6AF314(a1, v2);
}

uint64_t sub_24D6AD9F4(uint64_t a1)
{
  return sub_24D3F7F14(a1, (void (*)(unsigned char *, uint64_t))sub_24DA6BBD4, (uint64_t (*)(uint64_t, uint64_t))sub_24D6AF4D8);
}

unint64_t sub_24D6ADA20(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
  MEMORY[0x270FA5388](v5 - 8);
  unsigned __int8 v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCCAFF8();
  sub_24D415FD0(a1, (uint64_t)v10, &qword_26B18FF40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24D3F0BA0((uint64_t)v10, (uint64_t)v4, &qword_26B1936E0);
    sub_24DCCB008();
    sub_24DC35CD4();
    uint64_t v11 = (uint64_t)v4;
    uint64_t v12 = &qword_26B1936E0;
  }
  else
  {
    sub_24D3F0BA0((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_26B1936D0);
    sub_24DCCB008();
    sub_24DC35834();
    uint64_t v11 = (uint64_t)v7;
    uint64_t v12 = (uint64_t *)&unk_26B1936D0;
  }
  sub_24D415F74(v11, v12);
  uint64_t v13 = sub_24DCCB048();
  return sub_24D6AF894(a1, v13);
}

unint64_t sub_24D6ADC0C(int a1)
{
  sub_24DCCAFF8();
  sub_24DCCB028();
  uint64_t v2 = sub_24DCCB048();

  return sub_24D6AFCB0(a1, v2);
}

unint64_t sub_24D6ADC78(uint64_t a1)
{
  sub_24DCCAFF8();
  sub_24D6EAB4C();
  uint64_t v2 = sub_24DCCB048();

  return sub_24D6AFD4C(a1, v2);
}

unint64_t sub_24D6ADCE4(unsigned __int8 a1)
{
  sub_24DCCAFF8();
  int v2 = a1 >> 2;
  if (v2 == 55 || v2 == 63)
  {
    sub_24DCCB008();
  }
  else
  {
    sub_24DCCB008();
    sub_24DB19AE8((uint64_t)v5, a1);
  }
  uint64_t v3 = sub_24DCCB048();

  return sub_24D6B03E4(a1, v3);
}

uint64_t sub_24D6ADD88(uint64_t a1)
{
  return sub_24D3F7F14(a1, (void (*)(unsigned char *, uint64_t))sub_24DB19AE8, (uint64_t (*)(uint64_t, uint64_t))sub_24D6B0808);
}

unint64_t sub_24D6ADDB4(void *a1, void *a2, void *a3, char a4)
{
  sub_24DCCAFF8();
  sub_24D607CBC((uint64_t)v10, a1, a2, a3, a4);
  uint64_t v8 = sub_24DCCB048();

  return sub_24D6B0B98((unint64_t)a1, (unint64_t)a2, (unint64_t)a3, a4, v8);
}

unint64_t sub_24D6ADE4C(uint64_t a1)
{
  sub_24DCCAFF8();
  sub_24D608028();
  uint64_t v2 = sub_24DCCB048();

  return sub_24D6B0D48(a1, v2);
}

unint64_t sub_24D6ADEBC(unsigned __int8 a1)
{
  sub_24DCCAFF8();
  sub_24DCC98F8();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_24DCCB048();
  return sub_24D6B0E60(a1, v2);
}

unint64_t sub_24D6ADF78(uint64_t a1)
{
  sub_24DCCAFF8();
  sub_24D6FAF14();
  uint64_t v2 = sub_24DCCB048();

  return sub_24D6B0FF4(a1, v2);
}

unint64_t sub_24D6ADFE4(uint64_t a1)
{
  uint64_t v2 = sub_24DCCA388();
  return sub_24D6B1284(a1, v2, (unint64_t *)&unk_26986C538);
}

unint64_t sub_24D6AE034(uint64_t a1)
{
  return sub_24D6AE064(a1, MEMORY[0x263F8E7C8]);
}

unint64_t sub_24D6AE04C(uint64_t a1)
{
  return sub_24D6AE064(a1, MEMORY[0x263F8E7D0]);
}

unint64_t sub_24D6AE064(uint64_t a1, void (*a2)(uint64_t))
{
  sub_24DCCAFF8();
  a2(a1);
  uint64_t v4 = sub_24DCCB048();
  return sub_24D6B1398(a1, v4);
}

unint64_t sub_24D6AE0D4(char a1)
{
  sub_24DCCAFF8();
  switch(a1)
  {
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      sub_24DCCB008();
      break;
    default:
      sub_24DCCB008();
      sub_24DBBA7C4(a1);
      sub_24DCC98F8();
      swift_bridgeObjectRelease();
      break;
  }
  uint64_t v2 = sub_24DCCB048();

  return sub_24D6B1434(a1, v2);
}

unint64_t sub_24D6AE20C(uint64_t a1)
{
  sub_24DCC8A58();
  sub_24D3EA320((unint64_t *)&qword_26B192330, MEMORY[0x263F06EA8]);
  uint64_t v2 = sub_24DCC9678();

  return sub_24D6B1D08(a1, v2);
}

unint64_t sub_24D6AE2A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = v2;
    uint64_t v8 = ~v4;
    do
    {
      uint64_t v9 = *(void **)(*(void *)(v6 + 48) + 8 * v5);
      if (v9)
      {
        if (a1)
        {
          type metadata accessor for CFString(0);
          sub_24D3EA320(&qword_26986C5F0, type metadata accessor for CFString);
          id v10 = v9;
          char v11 = sub_24DCC8E38();

          if (v11) {
            return v5;
          }
        }
      }
      else if (!a1)
      {
        return v5;
      }
      unint64_t v5 = (v5 + 1) & v8;
    }
    while (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) != 0);
  }
  return v5;
}

unint64_t sub_24D6AE3C4(void *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = a1;
    uint64_t v7 = ~v4;
    uint64_t v8 = *(void *)(v2 + 48);
    uint64_t v20 = (uint64_t)(a1 + 3);
    uint64_t v9 = *a1;
    uint64_t v10 = a1[1];
    while (1)
    {
      uint64_t v11 = v8 + 40 * v5;
      uint64_t v13 = *(void *)(v11 + 16);
      uint64_t v12 = *(void *)(v11 + 24);
      int v14 = *(unsigned __int8 *)(v11 + 32);
      uint64_t v15 = *(char *)(v11 + 33);
      if (*(void *)v11 != v9 || *(void *)(v11 + 8) != v10)
      {
        char v17 = sub_24DCCAE28();
        uint64_t v6 = a1;
        if ((v17 & 1) == 0) {
          goto LABEL_4;
        }
      }
      if (v13 != v6[2]) {
        goto LABEL_4;
      }
      sub_24D6D0A84(v20, (uint64_t)v22);
      switch(v14)
      {
        case 250:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v23);
          uint64_t v6 = a1;
          if (v23[8] != 250) {
            goto LABEL_4;
          }
          goto LABEL_25;
        case 251:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v24);
          uint64_t v6 = a1;
          if (v24[8] != 251) {
            goto LABEL_4;
          }
          goto LABEL_25;
        case 252:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v27);
          uint64_t v6 = a1;
          if (v27[8] != 252) {
            goto LABEL_4;
          }
          goto LABEL_25;
        case 253:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v28);
          uint64_t v6 = a1;
          if (v28[8] != 253) {
            goto LABEL_4;
          }
          goto LABEL_25;
        case 254:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v29);
          uint64_t v6 = a1;
          if (v29[8] != 254) {
            goto LABEL_4;
          }
          goto LABEL_25;
        default:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)&v25);
          uint64_t v6 = a1;
          if ((v26 + 6) < 5u) {
            goto LABEL_4;
          }
          if (v14 == 255)
          {
            if (v26 != 255) {
              goto LABEL_4;
            }
          }
          else
          {
            if (v26 == 255) {
              goto LABEL_4;
            }
            if (v14)
            {
              if (v14 == 1)
              {
                if (v26 != 1 || v12 != v25) {
                  goto LABEL_4;
                }
              }
              else if (v12)
              {
                if (v26 != 2 || v25 != 1) {
                  goto LABEL_4;
                }
              }
              else if (v26 != 2 || v25)
              {
                goto LABEL_4;
              }
            }
            else if (v26 || v12 != v25)
            {
              goto LABEL_4;
            }
          }
LABEL_25:
          uint64_t v18 = *((char *)v6 + 33);
          if (v15 == 70)
          {
            if (v18 == 70) {
              return v5;
            }
          }
          else if (v18 != 70 && qword_24DCD7300[v15] == qword_24DCD7300[v18])
          {
            return v5;
          }
LABEL_4:
          unint64_t v5 = (v5 + 1) & v7;
          if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
            return v5;
          }
          break;
      }
    }
  }
  return v5;
}

unint64_t sub_24D6AE678(long long *a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v17 = ~v4;
    uint64_t v18 = *(void *)(v2 + 48);
    long long v19 = *a1;
    long long v20 = a1[1];
    __int16 v21 = *((_WORD *)a1 + 16);
    while (1)
    {
      uint64_t v6 = v18 + 56 * v5;
      uint64_t v7 = *(void *)(v6 + 16);
      uint64_t v8 = *(void *)(v6 + 24);
      int v9 = *(unsigned __int8 *)(v6 + 32);
      uint64_t v10 = *(char *)(v6 + 33);
      uint64_t v11 = *(void *)(v6 + 40);
      uint64_t v12 = *(void *)(v6 + 48);
      BOOL v13 = *(void *)v6 == (void)v19 && *(void *)(v6 + 8) == *((void *)&v19 + 1);
      if (!v13 && (sub_24DCCAE28() & 1) == 0 || v7 != (void)v20) {
        goto LABEL_4;
      }
      sub_24D6D0A84((uint64_t)&v20 + 8, (uint64_t)v22);
      switch(v9)
      {
        case 250:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v23);
          if (v23[8] != 250) {
            goto LABEL_4;
          }
          goto LABEL_29;
        case 251:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v24);
          if (v24[8] != 251) {
            goto LABEL_4;
          }
          goto LABEL_29;
        case 252:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v27);
          if (v27[8] != 252) {
            goto LABEL_4;
          }
          goto LABEL_29;
        case 253:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v28);
          if (v28[8] != 253) {
            goto LABEL_4;
          }
          goto LABEL_29;
        case 254:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)v29);
          if (v29[8] != 254) {
            goto LABEL_4;
          }
          goto LABEL_29;
        default:
          sub_24D6D0A84((uint64_t)v22, (uint64_t)&v25);
          if ((v26 + 6) < 5u) {
            goto LABEL_4;
          }
          if (v9 == 255)
          {
            if (v26 != 255) {
              goto LABEL_4;
            }
          }
          else
          {
            if (v26 == 255) {
              goto LABEL_4;
            }
            if (v9)
            {
              if (v9 == 1)
              {
                if (v26 != 1 || v8 != v25) {
                  goto LABEL_4;
                }
              }
              else if (v8)
              {
                if (v26 != 2 || v25 != 1) {
                  goto LABEL_4;
                }
              }
              else if (v26 != 2 || v25)
              {
                goto LABEL_4;
              }
            }
            else if (v26 || v8 != v25)
            {
              goto LABEL_4;
            }
          }
LABEL_29:
          if (v10 == 70)
          {
            if (SHIBYTE(v21) != 70) {
              goto LABEL_4;
            }
          }
          else if (SHIBYTE(v21) == 70 || qword_24DCD7300[v10] != qword_24DCD7300[SHIBYTE(v21)])
          {
            goto LABEL_4;
          }
          BOOL v14 = v11 == *((void *)a1 + 5) && v12 == *((void *)a1 + 6);
          if (v14 || (sub_24DCCAE28() & 1) != 0) {
            return v5;
          }
LABEL_4:
          unint64_t v5 = (v5 + 1) & v17;
          if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
            return v5;
          }
          break;
      }
    }
  }
  return v5;
}

unint64_t sub_24D6AE95C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      unint64_t v8 = 0x6574617473;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x6F635F7972746572;
          unint64_t v7 = 0xEB00000000746E75;
          break;
        case 2:
          unint64_t v7 = 0xEF657461645F7972;
          unint64_t v8 = 0x7465725F7478656ELL;
          break;
        case 3:
          unint64_t v8 = 0x7272655F7473616CLL;
          unint64_t v7 = 0xEF657461645F726FLL;
          break;
        case 4:
          unint64_t v8 = 0x7272655F7473616CLL;
          unint64_t v7 = 0xEA0000000000726FLL;
          break;
        case 5:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x797469726F697270;
          break;
        case 6:
          unint64_t v7 = 0x800000024DCFA810;
          unint64_t v8 = 0xD000000000000011;
          break;
        case 7:
          unint64_t v8 = 0xD00000000000001ALL;
          unint64_t v7 = 0x800000024DCFA830;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      unint64_t v10 = 0x6574617473;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEB00000000746E75;
          if (v8 == 0x6F635F7972746572) {
            goto LABEL_24;
          }
          goto LABEL_25;
        case 2:
          unint64_t v9 = 0xEF657461645F7972;
          if (v8 != 0x7465725F7478656ELL) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 3:
          unint64_t v9 = 0xEF657461645F726FLL;
          if (v8 != 0x7272655F7473616CLL) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 4:
          unint64_t v9 = 0xEA0000000000726FLL;
          if (v8 != 0x7272655F7473616CLL) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 5:
          unint64_t v9 = 0xE800000000000000;
          if (v8 != 0x797469726F697270) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 6:
          unint64_t v9 = 0x800000024DCFA810;
          if (v8 != 0xD000000000000011) {
            goto LABEL_25;
          }
          goto LABEL_24;
        case 7:
          unint64_t v10 = 0xD00000000000001ALL;
          unint64_t v9 = 0x800000024DCFA830;
          goto LABEL_23;
        default:
LABEL_23:
          if (v8 != v10) {
            goto LABEL_25;
          }
LABEL_24:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_25:
          char v11 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_24D6AED84(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t result = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = ~v5;
    BOOL v8 = a2 == 2;
    BOOL v9 = a1 == 1 && a2 == 2;
    if (a1) {
      BOOL v8 = 0;
    }
    do
    {
      uint64_t v10 = *(void *)(v3 + 48) + 16 * result;
      uint64_t v11 = *(void *)v10;
      int v12 = *(unsigned __int8 *)(v10 + 8);
      if (v12)
      {
        if (v12 == 1)
        {
          if (a2 == 1 && v11 == a1) {
            return result;
          }
        }
        else if (v11)
        {
          if (v9) {
            return result;
          }
        }
        else if (v8)
        {
          return result;
        }
      }
      else if (!a2 && v11 == a1)
      {
        return result;
      }
      unint64_t result = (result + 1) & v7;
    }
    while (((*(void *)(v3 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0);
  }
  return result;
}

unint64_t sub_24D6AEE54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24D6AEEF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_24D6D0AE0(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x253328710](v9, a1);
      sub_24D5B3E28((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_24D6AEFB8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0x800000024DCFAE10;
          unint64_t v8 = 0xD000000000000010;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v8 = 0xD000000000000012;
          unint64_t v7 = 0x800000024DCFAE30;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE500000000000000;
            if (v8 != 0x6574617473) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE500000000000000;
        unint64_t v8 = 0x6574617473;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        unint64_t v10 = 0xD000000000000010;
      }
      else {
        unint64_t v10 = 0xD000000000000012;
      }
      if (v9 == 1) {
        unint64_t v11 = 0x800000024DCFAE10;
      }
      else {
        unint64_t v11 = 0x800000024DCFAE30;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_24D6AF164(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v10 = a2 & ~v9;
  if ((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    uint64_t v12 = *(void *)(v6 + 72);
    while (1)
    {
      sub_24D40B474(*(void *)(v2 + 48) + v12 * v10, (uint64_t)v8, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      if (MEMORY[0x253326A50](v8, a1))
      {
        uint64_t v13 = *(int *)(v5 + 20);
        uint64_t v14 = *(void *)&v8[v13];
        uint64_t v15 = *(void *)&v8[v13 + 8];
        uint64_t v16 = (void *)(a1 + v13);
        BOOL v17 = v14 == *v16 && v15 == v16[1];
        if (v17 || (sub_24DCCAE28() & 1) != 0) {
          break;
        }
      }
      sub_24D3FC974((uint64_t)v8, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v2 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        return v10;
      }
    }
    sub_24D3FC974((uint64_t)v8, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
  }
  return v10;
}

unint64_t sub_24D6AF314(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v11 = a2 & ~v10;
  if ((*(void *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v10;
    uint64_t v13 = *(void *)(v7 + 72);
    while (1)
    {
      sub_24D40B474(*(void *)(v3 + 48) + v13 * v11, (uint64_t)v9, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
      if (MEMORY[0x253326A50](v9, a1))
      {
        sub_24D3FB6F8(0, &qword_26B19A050);
        if (sub_24DCCA398()) {
          break;
        }
      }
      sub_24D3FC974((uint64_t)v9, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)(v3 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        return v11;
      }
    }
    sub_24D3FC974((uint64_t)v9, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  }
  return v11;
}

unint64_t sub_24D6AF4D8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE600000000000000;
      unint64_t v8 = 0x444955556264;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0x800000024DCFAA50;
          unint64_t v8 = 0xD000000000000010;
          break;
        case 2:
          unint64_t v8 = 0x6D61657274537366;
          unint64_t v7 = 0xEC00000044495555;
          break;
        case 3:
          unint64_t v8 = 0x6D61657274537366;
          unint64_t v7 = 0xEF4449746E657645;
          break;
        case 4:
          unint64_t v8 = 0xD000000000000011;
          unint64_t v7 = 0x800000024DCFAA80;
          break;
        case 5:
          unint64_t v8 = 0x65566E69616D6F64;
          unint64_t v7 = 0xED00006E6F697372;
          break;
        case 6:
          unint64_t v8 = 0x4665727574616566;
          unint64_t v7 = 0xEC0000007367616CLL;
          break;
        case 7:
          unint64_t v8 = 0x696C756465686373;
          unint64_t v7 = 0xEF6574617453676ELL;
          break;
        case 8:
          unint64_t v8 = 0x6E6547726F727265;
          unint64_t v7 = 0xEF6E6F6974617265;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE600000000000000;
      uint64_t v10 = 0x444955556264;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0x800000024DCFAA50;
          if (v8 == 0xD000000000000010) {
            goto LABEL_27;
          }
          goto LABEL_28;
        case 2:
          uint64_t v11 = 0x6D61657274537366;
          uint64_t v12 = 1145656661;
          goto LABEL_23;
        case 3:
          unint64_t v9 = 0xEF4449746E657645;
          if (v8 != 0x6D61657274537366) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 4:
          unint64_t v9 = 0x800000024DCFAA80;
          if (v8 != 0xD000000000000011) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 5:
          unint64_t v9 = 0xED00006E6F697372;
          if (v8 != 0x65566E69616D6F64) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 6:
          uint64_t v11 = 0x4665727574616566;
          uint64_t v12 = 1936154988;
LABEL_23:
          unint64_t v9 = v12 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          if (v8 != v11) {
            goto LABEL_28;
          }
          goto LABEL_27;
        case 7:
          uint64_t v10 = 0x696C756465686373;
          unint64_t v9 = 0xEF6574617453676ELL;
          goto LABEL_26;
        case 8:
          unint64_t v9 = 0xEF6E6F6974617265;
          if (v8 != 0x6E6547726F727265) {
            goto LABEL_28;
          }
          goto LABEL_27;
        default:
LABEL_26:
          if (v8 != v10) {
            goto LABEL_28;
          }
LABEL_27:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_28:
          char v13 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v13) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_24D6AF894(uint64_t a1, uint64_t a2)
{
  uint64_t v43 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
  MEMORY[0x270FA5388](v4 - 8);
  id v38 = (void **)((char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v37 = (uint64_t)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C4C0);
  MEMORY[0x270FA5388](v42);
  unint64_t v9 = (char *)v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v41 = (uint64_t)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v36 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v18 = (char *)v36 - v17;
  uint64_t v44 = v2;
  uint64_t v19 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v20 = a2 & ~v19;
  uint64_t v40 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
  {
    uint64_t v21 = ~v19;
    uint64_t v22 = *(void *)(v16 + 72);
    uint64_t v39 = ~v19;
    v36[1] = v10;
    do
    {
      sub_24D415FD0(*(void *)(v44 + 48) + v22 * v20, (uint64_t)v18, &qword_26B18FF40);
      uint64_t v26 = (uint64_t)&v9[*(int *)(v42 + 48)];
      sub_24D415FD0((uint64_t)v18, (uint64_t)v9, &qword_26B18FF40);
      sub_24D415FD0(v43, v26, &qword_26B18FF40);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_24D415FD0((uint64_t)v9, v41, &qword_26B18FF40);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          uint64_t v23 = v41;
          id v24 = &qword_26B1936E0;
LABEL_4:
          sub_24D415F74(v23, v24);
          uint64_t v25 = (uint64_t *)&unk_26986C4C0;
          goto LABEL_5;
        }
        id v27 = v38;
        uint64_t v28 = v41;
        sub_24D3F0BA0(v26, (uint64_t)v38, &qword_26B1936E0);
        char v29 = sub_24DAC7B84(v28, v27);
        uint64_t v30 = (uint64_t)v27;
        uint64_t v21 = v39;
        sub_24D415F74(v30, &qword_26B1936E0);
        uint64_t v31 = v28;
        uint64_t v32 = &qword_26B1936E0;
      }
      else
      {
        sub_24D415FD0((uint64_t)v9, (uint64_t)v15, &qword_26B18FF40);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v23 = (uint64_t)v15;
          id v24 = (uint64_t *)&unk_26B1936D0;
          goto LABEL_4;
        }
        uint64_t v33 = v37;
        sub_24D3F0BA0(v26, v37, (uint64_t *)&unk_26B1936D0);
        char v29 = sub_24DAC7028((uint64_t)v15, v33);
        uint64_t v34 = v33;
        uint64_t v21 = v39;
        sub_24D415F74(v34, (uint64_t *)&unk_26B1936D0);
        uint64_t v31 = (uint64_t)v15;
        uint64_t v32 = (uint64_t *)&unk_26B1936D0;
      }
      sub_24D415F74(v31, v32);
      uint64_t v25 = &qword_26B18FF40;
      if (v29)
      {
        sub_24D415F74((uint64_t)v9, &qword_26B18FF40);
        sub_24D415F74((uint64_t)v18, &qword_26B18FF40);
        return v20;
      }
LABEL_5:
      sub_24D415F74((uint64_t)v9, v25);
      sub_24D415F74((uint64_t)v18, &qword_26B18FF40);
      unint64_t v20 = (v20 + 1) & v21;
    }
    while (((*(void *)(v40 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) != 0);
  }
  return v20;
}

unint64_t sub_24D6AFCB0(int a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(_DWORD *)(v7 + 4 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(_DWORD *)(v7 + 4 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24D6AFD4C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = ~v4;
    uint64_t v7 = *(void **)a1;
    unsigned int v42 = *(unsigned __int8 *)(a1 + 8);
    BOOL v8 = v42 == 2;
    char v9 = *(unsigned char *)(a1 + 9);
    long long v47 = *(_OWORD *)(a1 + 16);
    long long v48 = *(_OWORD *)(a1 + 32);
    __int16 v49 = *(_WORD *)(a1 + 48);
    BOOL v10 = v7 == (void *)1 && v42 == 2;
    if (v7) {
      BOOL v8 = 0;
    }
    BOOL v33 = v8;
    BOOL v34 = v10;
    uint64_t v37 = v2 + 64;
    uint64_t v38 = v6;
    uint64_t v40 = v7;
    char v36 = v9;
    while (1)
    {
      uint64_t v12 = *(void *)(v46 + 48) + 56 * v5;
      uint64_t v13 = *(void **)v12;
      uint64_t v14 = *(unsigned __int8 *)(v12 + 8);
      char v15 = *(unsigned char *)(v12 + 9);
      uint64_t v17 = *(void *)(v12 + 16);
      uint64_t v16 = *(void *)(v12 + 24);
      if (v15)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_11;
        }
        uint64_t v45 = *(void *)(v12 + 32);
        char v43 = *(unsigned char *)(v12 + 9);
        int v44 = *(unsigned __int8 *)(v12 + 48);
        uint64_t v39 = *(void *)(v12 + 40);
        uint64_t v41 = *(char *)(v12 + 49);
        uint64_t v18 = *(void *)(v12 + 24);
        uint64_t v19 = v7;
        uint64_t v20 = sub_24DCC97E8();
        uint64_t v22 = v21;
        if (v20 == sub_24DCC97E8() && v22 == v23)
        {
          sub_24D4018B8(v13, v14, 1);
          sub_24D4018B8(v13, v14, 1);
          uint64_t v16 = v18;
          swift_bridgeObjectRetain();
          sub_24D4018B8(v13, v14, 1);
          sub_24D4018B8(v19, v42, 1);
          swift_bridgeObjectRelease_n();
          sub_24D40160C(v19, v42, 1);

          sub_24D40160C(v13, v14, 1);
          uint64_t v3 = v37;
          uint64_t v6 = v38;
          char v9 = v36;
          char v15 = v43;
        }
        else
        {
          char v35 = sub_24DCCAE28();
          char v11 = 1;
          sub_24D4018B8(v13, v14, 1);
          sub_24D4018B8(v13, v14, 1);
          uint64_t v16 = v18;
          swift_bridgeObjectRetain();
          sub_24D4018B8(v13, v14, 1);
          sub_24D4018B8(v19, v42, 1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24D40160C(v19, v42, 1);

          sub_24D40160C(v13, v14, 1);
          uint64_t v3 = v37;
          uint64_t v6 = v38;
          char v9 = v36;
          char v15 = v43;
          if ((v35 & 1) == 0) {
            goto LABEL_10;
          }
        }
      }
      else
      {
        if (v9) {
          goto LABEL_11;
        }
        if (*(unsigned char *)(v12 + 8))
        {
          if (v14 == 1)
          {
            if (v42 != 1 || v13 != v7) {
              goto LABEL_11;
            }
          }
          else if (v13)
          {
            if (!v34) {
              goto LABEL_11;
            }
          }
          else if (!v33)
          {
            goto LABEL_11;
          }
        }
        else if (v42 || v13 != v7)
        {
          goto LABEL_11;
        }
        uint64_t v45 = *(void *)(v12 + 32);
        int v44 = *(unsigned __int8 *)(v12 + 48);
        uint64_t v39 = *(void *)(v12 + 40);
        uint64_t v41 = *(char *)(v12 + 49);
        swift_bridgeObjectRetain();
      }
      BOOL v25 = v17 == (void)v47 && v16 == *((void *)&v47 + 1);
      if (!v25 && (sub_24DCCAE28() & 1) == 0 || v45 != (void)v48) {
        break;
      }
      sub_24D6D0A84((uint64_t)&v48 + 8, (uint64_t)v50);
      switch(v44)
      {
        case 250:
          sub_24D6D0A84((uint64_t)v50, (uint64_t)v51);
          if (v51[8] != 250) {
            goto LABEL_9;
          }
          goto LABEL_59;
        case 251:
          sub_24D6D0A84((uint64_t)v50, (uint64_t)v52);
          if (v52[8] != 251) {
            goto LABEL_9;
          }
          goto LABEL_59;
        case 252:
          sub_24D6D0A84((uint64_t)v50, (uint64_t)v55);
          if (v55[8] != 252) {
            goto LABEL_9;
          }
          goto LABEL_59;
        case 253:
          sub_24D6D0A84((uint64_t)v50, (uint64_t)v56);
          if (v56[8] != 253) {
            goto LABEL_9;
          }
          goto LABEL_59;
        case 254:
          sub_24D6D0A84((uint64_t)v50, (uint64_t)v57);
          if (v57[8] != 254) {
            goto LABEL_9;
          }
          goto LABEL_59;
        default:
          sub_24D6D0A84((uint64_t)v50, (uint64_t)&v53);
          if ((v54 + 6) < 5u) {
            goto LABEL_9;
          }
          if (v44 == 255)
          {
            if (v54 != 255) {
              goto LABEL_9;
            }
          }
          else
          {
            if (v54 == 255) {
              goto LABEL_9;
            }
            if (v44)
            {
              if (v44 == 1)
              {
                if (v54 != 1 || v39 != v53) {
                  goto LABEL_9;
                }
              }
              else if (v39)
              {
                if (v54 != 2 || v53 != 1) {
                  goto LABEL_9;
                }
              }
              else if (v54 != 2 || v53)
              {
                goto LABEL_9;
              }
            }
            else if (v54 || v39 != v53)
            {
              goto LABEL_9;
            }
          }
LABEL_59:
          int v26 = SHIBYTE(v49);
          if (v41 == 70)
          {
            sub_24D40160C(v13, v14, v15);
            swift_bridgeObjectRelease();
            BOOL v27 = v26 == 70;
          }
          else
          {
            if (SHIBYTE(v49) == 70)
            {
              char v11 = v15;
              uint64_t v6 = v38;
              goto LABEL_10;
            }
            char v28 = v15;
            uint64_t v29 = v3;
            uint64_t v30 = qword_24DCD7300[v41];
            uint64_t v31 = qword_24DCD7300[SHIBYTE(v49)];
            sub_24D40160C(v13, v14, v28);
            swift_bridgeObjectRelease();
            BOOL v27 = v30 == v31;
            uint64_t v3 = v29;
          }
          uint64_t v6 = v38;
          uint64_t v7 = v40;
          if (v27) {
            return v5;
          }
LABEL_11:
          unint64_t v5 = (v5 + 1) & v6;
          if (((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
            return v5;
          }
          break;
      }
    }
LABEL_9:
    char v11 = v15;
LABEL_10:
    sub_24D40160C(v13, v14, v11);
    swift_bridgeObjectRelease();
    uint64_t v7 = v40;
    goto LABEL_11;
  }
  return v5;
}

unint64_t sub_24D6B03E4(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return v4;
  }
  unsigned int v5 = a1;
  uint64_t v6 = ~v3;
  int v7 = a1 & 0xFC;
  int v8 = a1 & 0xE0;
  if (a1) {
    uint64_t v9 = 0x6D617473656D6974;
  }
  else {
    uint64_t v9 = 0x797469726F697270;
  }
  if (a1) {
    unint64_t v10 = 0xE900000000000070;
  }
  else {
    unint64_t v10 = 0xE800000000000000;
  }
  int v11 = (a1 >> 2) | 8;
  unint64_t v12 = (unint64_t)"reconciledWithFP";
  unint64_t v13 = 0x800000024DCFAE10;
  unint64_t v14 = (unint64_t)"state_conditions";
  unint64_t v15 = 0x800000024DCFAE30;
  while (1)
  {
    unsigned int v16 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v4);
    if (v16 >> 2 == 55)
    {
      if (v7 == 220) {
        return v4;
      }
      goto LABEL_10;
    }
    if (v16 >> 2 != 63) {
      break;
    }
    if (v5 > 0xFB) {
      return v4;
    }
LABEL_10:
    unint64_t v4 = (v4 + 1) & v6;
    if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      return v4;
    }
  }
  if (v11 == 63) {
    goto LABEL_10;
  }
  switch(v16 >> 5)
  {
    case 1u:
      if (v8 != 32) {
        goto LABEL_10;
      }
      if (v16) {
        uint64_t v21 = 0x6D617473656D6974;
      }
      else {
        uint64_t v21 = 0x797469726F697270;
      }
      if (v16) {
        unint64_t v22 = 0xE900000000000070;
      }
      else {
        unint64_t v22 = 0xE800000000000000;
      }
      if (v21 == v9 && v22 == v10) {
        goto LABEL_73;
      }
      unint64_t v24 = v10;
      unint64_t v33 = v13;
      char v35 = (const char *)v12;
      uint64_t v37 = v9;
      unint64_t v29 = v15;
      uint64_t v31 = (const char *)v14;
      char v25 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v15 = v29;
      unint64_t v14 = (unint64_t)v31;
      unint64_t v13 = v33;
      unint64_t v12 = (unint64_t)v35;
      uint64_t v9 = v37;
      int v8 = 32;
      unint64_t v10 = v24;
      if ((v25 & 1) == 0) {
        goto LABEL_10;
      }
      return v4;
    case 2u:
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 'A':
          if (v5 != 65) {
            goto LABEL_10;
          }
          break;
        case 'B':
          if (v5 != 66) {
            goto LABEL_10;
          }
          break;
        case 'C':
          if (v5 != 67) {
            goto LABEL_10;
          }
          break;
        default:
          if (v5 != 64) {
            goto LABEL_10;
          }
          break;
      }
      return v4;
    case 3u:
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 'a':
          if (v5 != 97) {
            goto LABEL_10;
          }
          break;
        case 'b':
          if (v5 != 98) {
            goto LABEL_10;
          }
          break;
        case 'c':
          if (v5 != 99) {
            goto LABEL_10;
          }
          break;
        default:
          if (v5 != 96) {
            goto LABEL_10;
          }
          break;
      }
      return v4;
    case 4u:
      if (v16 == 128)
      {
        if (v5 != 128) {
          goto LABEL_10;
        }
      }
      else if (v5 != 129)
      {
        goto LABEL_10;
      }
      return v4;
    default:
      if (v5 >= 0x20) {
        goto LABEL_10;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (v16 == 1)
        {
          unint64_t v17 = v12 | 0x8000000000000000;
          unint64_t v18 = 0xD000000000000010;
          if (v5) {
            goto LABEL_21;
          }
LABEL_68:
          unint64_t v20 = 0xE500000000000000;
          if (v18 != 0x6574617473) {
            goto LABEL_70;
          }
          goto LABEL_69;
        }
        unint64_t v18 = 0xD000000000000012;
        unint64_t v17 = v14 | 0x8000000000000000;
        if (!v5) {
          goto LABEL_68;
        }
      }
      else
      {
        unint64_t v17 = 0xE500000000000000;
        unint64_t v18 = 0x6574617473;
        if (!v5) {
          goto LABEL_68;
        }
      }
LABEL_21:
      if (v5 == 1) {
        unint64_t v19 = 0xD000000000000010;
      }
      else {
        unint64_t v19 = 0xD000000000000012;
      }
      if (v5 == 1) {
        unint64_t v20 = v13;
      }
      else {
        unint64_t v20 = v15;
      }
      if (v18 != v19) {
        goto LABEL_70;
      }
LABEL_69:
      if (v17 == v20)
      {
LABEL_73:
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_70:
      unint64_t v28 = v10;
      unint64_t v30 = v15;
      unint64_t v34 = v13;
      char v36 = (const char *)v12;
      int v39 = v8;
      uint64_t v38 = v9;
      uint64_t v32 = (const char *)v14;
      char v26 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v15 = v30;
      unint64_t v14 = (unint64_t)v32;
      unint64_t v13 = v34;
      unint64_t v12 = (unint64_t)v36;
      uint64_t v9 = v38;
      int v8 = v39;
      unint64_t v10 = v28;
      if ((v26 & 1) == 0) {
        goto LABEL_10;
      }
      return v4;
  }
}

unint64_t sub_24D6B0808(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
    return v4;
  }
  unsigned int v5 = a1;
  uint64_t v6 = ~v3;
  int v20 = a1 & 0xE0;
  if (a1) {
    uint64_t v7 = 0x6D617473656D6974;
  }
  else {
    uint64_t v7 = 0x797469726F697270;
  }
  if (a1) {
    unint64_t v8 = 0xE900000000000070;
  }
  else {
    unint64_t v8 = 0xE800000000000000;
  }
  while (2)
  {
    unsigned int v9 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v4);
    switch(v9 >> 5)
    {
      case 1u:
        if (v20 != 32) {
          goto LABEL_9;
        }
        if (v9) {
          uint64_t v14 = 0x6D617473656D6974;
        }
        else {
          uint64_t v14 = 0x797469726F697270;
        }
        if (v9) {
          unint64_t v15 = 0xE900000000000070;
        }
        else {
          unint64_t v15 = 0xE800000000000000;
        }
        if (v14 == v7 && v15 == v8) {
          goto LABEL_65;
        }
        char v17 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v17 & 1) == 0) {
          goto LABEL_9;
        }
        return v4;
      case 2u:
        switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
        {
          case 'A':
            if (v5 != 65) {
              goto LABEL_9;
            }
            break;
          case 'B':
            if (v5 != 66) {
              goto LABEL_9;
            }
            break;
          case 'C':
            if (v5 != 67) {
              goto LABEL_9;
            }
            break;
          default:
            if (v5 != 64) {
              goto LABEL_9;
            }
            break;
        }
        return v4;
      case 3u:
        switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
        {
          case 'a':
            if (v5 != 97) {
              goto LABEL_9;
            }
            break;
          case 'b':
            if (v5 != 98) {
              goto LABEL_9;
            }
            break;
          case 'c':
            if (v5 != 99) {
              goto LABEL_9;
            }
            break;
          default:
            if (v5 != 96) {
              goto LABEL_9;
            }
            break;
        }
        return v4;
      case 4u:
        if (v9 == 128)
        {
          if (v5 != 128) {
            goto LABEL_9;
          }
        }
        else if (v5 != 129)
        {
          goto LABEL_9;
        }
        return v4;
      default:
        if (v5 >= 0x20) {
          goto LABEL_9;
        }
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
        {
          if (v9 == 1)
          {
            unint64_t v10 = 0x800000024DCFAE10;
            unint64_t v11 = 0xD000000000000010;
            if (v5) {
              goto LABEL_15;
            }
LABEL_60:
            unint64_t v13 = 0xE500000000000000;
            if (v11 != 0x6574617473) {
              goto LABEL_62;
            }
            goto LABEL_61;
          }
          unint64_t v11 = 0xD000000000000012;
          unint64_t v10 = 0x800000024DCFAE30;
          if (!v5) {
            goto LABEL_60;
          }
        }
        else
        {
          unint64_t v10 = 0xE500000000000000;
          unint64_t v11 = 0x6574617473;
          if (!v5) {
            goto LABEL_60;
          }
        }
LABEL_15:
        if (v5 == 1) {
          unint64_t v12 = 0xD000000000000010;
        }
        else {
          unint64_t v12 = 0xD000000000000012;
        }
        if (v5 == 1) {
          unint64_t v13 = 0x800000024DCFAE10;
        }
        else {
          unint64_t v13 = 0x800000024DCFAE30;
        }
        if (v11 != v12) {
          goto LABEL_62;
        }
LABEL_61:
        if (v10 == v13)
        {
LABEL_65:
          swift_bridgeObjectRelease_n();
          return v4;
        }
LABEL_62:
        char v18 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v18) {
          return v4;
        }
LABEL_9:
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
        return v4;
    }
  }
}

unint64_t sub_24D6B0B98(unint64_t a1, unint64_t a2, unint64_t a3, char a4, uint64_t a5)
{
  unint64_t i = a5 & ~(-1 << *(unsigned char *)(v5 + 32));
  if ((*(void *)(v5 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    uint64_t v23 = -1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = *(void *)(v5 + 48) + 32 * i;
    id v9 = *(id *)v8;
    unint64_t v10 = *(void **)(v8 + 8);
    unint64_t v11 = *(void **)(v8 + 16);
    char v12 = *(unsigned char *)(v8 + 24);
    sub_24D433278(*(id *)v8, v10, v11, v12);
    unint64_t v24 = a1;
    LOBYTE(a1) = sub_24D606C64(v9, v10, v11, v12, a1, a2, a3, a4);
    sub_24D58F884(v9, v10, v11, v12);
    if ((a1 & 1) == 0)
    {
      for (unint64_t i = (i + 1) & ~v23;
            ((*(void *)(v5 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0;
            unint64_t i = (i + 1) & ~v23)
      {
        uint64_t v16 = *(void *)(v5 + 48) + 32 * i;
        id v17 = *(id *)v16;
        char v18 = *(void **)(v16 + 8);
        unint64_t v19 = *(void **)(v16 + 16);
        char v20 = *(unsigned char *)(v16 + 24);
        sub_24D433278(*(id *)v16, v18, v19, v20);
        char v21 = sub_24D606C64(v17, v18, v19, v20, v24, a2, a3, a4);
        sub_24D58F884(v17, v18, v19, v20);
        if (v21) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_24D6B0D48(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_24D3F0BA0(*(void *)(v2 + 48) + 48 * i, (uint64_t)v9, (uint64_t *)&unk_26B1926A0);
    if ((sub_24D60784C((uint64_t)v9, a1) & 1) == 0)
    {
      for (unint64_t i = (i + 1) & ~v4; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & ~v4)
      {
        sub_24D3F0BA0(*(void *)(v2 + 48) + 48 * i, (uint64_t)v8, (uint64_t *)&unk_26B1926A0);
        if (sub_24D60784C((uint64_t)v8, a1)) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_24D6B0E60(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE700000000000000;
          uint64_t v8 = 0x64695F6D657469;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x657079745F626F6ALL;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE400000000000000;
            if (v8 != 1684957547) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE400000000000000;
        uint64_t v8 = 1684957547;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x64695F6D657469;
      }
      else {
        uint64_t v10 = 0x657079745F626F6ALL;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE700000000000000;
      }
      else {
        unint64_t v11 = 0xE800000000000000;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_24D6B0FF4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = *(void **)(a1 + 16);
    unsigned int v23 = *(unsigned __int8 *)(a1 + 24);
    BOOL v7 = v23 == 2;
    char v8 = *(unsigned char *)(a1 + 25);
    BOOL v9 = v6 == (void *)1 && v23 == 2;
    if (v6) {
      BOOL v7 = 0;
    }
    BOOL v19 = v7;
    BOOL v20 = v9;
    uint64_t v22 = v5;
    char v21 = *(unsigned char *)(a1 + 25);
    do
    {
      uint64_t v10 = *(void *)(*(void *)(v2 + 48) + 8 * v4);
      unint64_t v11 = *(void **)(v10 + 16);
      uint64_t v12 = *(unsigned __int8 *)(v10 + 24);
      if (*(unsigned char *)(v10 + 25))
      {
        if (v8)
        {
          uint64_t v13 = sub_24DCC97E8();
          uint64_t v15 = v14;
          if (v13 == sub_24DCC97E8() && v15 == v16)
          {
            sub_24D4018B8(v11, v12, 1);
            sub_24D4018B8(v11, v12, 1);
            swift_retain();
            sub_24D4018B8(v6, v23, 1);
            swift_bridgeObjectRelease_n();
            sub_24D40160C(v6, v23, 1);

            sub_24D40160C(v11, v12, 1);
            swift_release();
            return v4;
          }
          char v24 = sub_24DCCAE28();
          sub_24D4018B8(v11, v12, 1);
          sub_24D4018B8(v11, v12, 1);
          swift_retain();
          sub_24D4018B8(v6, v23, 1);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_24D40160C(v6, v23, 1);

          sub_24D40160C(v11, v12, 1);
          swift_release();
          uint64_t v5 = v22;
          char v8 = v21;
          if (v24) {
            return v4;
          }
        }
      }
      else if ((v8 & 1) == 0)
      {
        if (*(unsigned char *)(v10 + 24))
        {
          if (v12 == 1)
          {
            if (v23 == 1 && v11 == v6) {
              return v4;
            }
          }
          else if (v11)
          {
            if (v20) {
              return v4;
            }
          }
          else if (v19)
          {
            return v4;
          }
        }
        else if (!v23 && v11 == v6)
        {
          return v4;
        }
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_24D6B1284(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t i = a2 & ~v5;
  if ((*(void *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_24D3FB6F8(0, a3);
    id v7 = *(id *)(*(void *)(v3 + 48) + 8 * i);
    char v8 = sub_24DCCA398();

    if ((v8 & 1) == 0)
    {
      uint64_t v9 = ~v5;
      for (unint64_t i = (i + 1) & v9; ((*(void *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v9)
      {
        id v10 = *(id *)(*(void *)(v3 + 48) + 8 * i);
        char v11 = sub_24DCCA398();

        if (v11) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_24D6B1398(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_24D6B1434(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    int v5 = a1;
    uint64_t v6 = ~v3;
    while (1)
    {
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 0x1C:
          if (v5 == 28) {
            return v4;
          }
          goto LABEL_4;
        case 0x1D:
          if (v5 == 29) {
            return v4;
          }
          goto LABEL_4;
        case 0x1E:
          if (v5 == 30) {
            return v4;
          }
          goto LABEL_4;
        case 0x1F:
          if (v5 == 31) {
            return v4;
          }
          goto LABEL_4;
        case 0x20:
          if (v5 == 32) {
            return v4;
          }
          goto LABEL_4;
        case 0x21:
          if (v5 == 33) {
            return v4;
          }
          goto LABEL_4;
        case 0x22:
          if (v5 != 34) {
            goto LABEL_4;
          }
          return v4;
        default:
          if ((v5 - 28) < 7) {
            goto LABEL_4;
          }
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1684957547;
          switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
          {
            case 0x1D:
              unint64_t v8 = 0x6C617461645F7369;
              unint64_t v7 = 0xEB00000000737365;
              goto LABEL_51;
            case 0x1E:
              unint64_t v8 = 1702521203;
              goto LABEL_51;
            case 0x1F:
              unint64_t v8 = 0x656B636F6C5F7369;
              goto LABEL_38;
            case 0x20:
              unint64_t v8 = 0xD000000000000011;
              uint64_t v9 = "posix_permissions";
              goto LABEL_48;
            case 0x21:
              unint64_t v8 = 0x6E6F697461657263;
              unsigned int v10 = 1952539743;
              goto LABEL_35;
            case 0x22:
              unint64_t v8 = 0xD000000000000019;
              uint64_t v9 = "content_modification_date";
              goto LABEL_48;
            case 0x23:
              unint64_t v8 = 0x6573755F7473616CLL;
              unint64_t v7 = 0xEE00657461645F64;
              goto LABEL_51;
            case 0x24:
              unint64_t v7 = 0xE800000000000000;
              unint64_t v8 = 0x617461645F676174;
              goto LABEL_51;
            case 0x25:
              unint64_t v8 = 0x657469726F766166;
              unint64_t v7 = 0xED00006B6E61725FLL;
              goto LABEL_51;
            case 0x26:
              unint64_t v8 = 0x616B6361705F7369;
              unint64_t v7 = 0xEA00000000006567;
              goto LABEL_51;
            case 0x27:
              unint64_t v8 = 0x65646469685F7369;
              unint64_t v7 = 0xE90000000000006ELL;
              goto LABEL_51;
            case 0x28:
              char v11 = "extension_hidden";
              goto LABEL_50;
            case 0x29:
              char v11 = "child_item_count";
              goto LABEL_50;
            case 0x2A:
              unint64_t v8 = 0xD000000000000013;
              uint64_t v9 = "extended_attributes";
              goto LABEL_48;
            case 0x2B:
              unint64_t v8 = 0x6C61636973796870;
              unsigned int v10 = 2053731167;
LABEL_35:
              unint64_t v7 = v10 | 0xED00006500000000;
              goto LABEL_51;
            case 0x2C:
              unint64_t v8 = 0x74636976655F7369;
              unint64_t v7 = 0xEC000000656C6261;
              goto LABEL_51;
            case 0x2D:
              unint64_t v8 = 0x656E6E69705F7369;
LABEL_38:
              unint64_t v7 = 0xE900000000000064;
              goto LABEL_51;
            case 0x2E:
              unint64_t v8 = 0xD000000000000013;
              uint64_t v9 = "is_in_pinned_folder";
              goto LABEL_48;
            case 0x2F:
              unint64_t v8 = 0xD000000000000016;
              uint64_t v9 = "before_bounce_filename";
              goto LABEL_48;
            case 0x30:
              unint64_t v8 = 0x69746E6172617571;
              unint64_t v7 = 0xEF626F6C625F656ELL;
              goto LABEL_51;
            case 0x31:
              unint64_t v8 = 0x72636E79735F7369;
              unint64_t v7 = 0xEB00000000746F6FLL;
              goto LABEL_51;
            case 0x32:
              unint64_t v8 = 0x726F6E67695F7369;
              unint64_t v7 = 0xED0000746F6F7265;
              goto LABEL_51;
            case 0x33:
              char v11 = "closest_syncroot";
              goto LABEL_50;
            case 0x34:
              unint64_t v7 = 0xE700000000000000;
              unint64_t v8 = 0x657079745F736FLL;
              goto LABEL_51;
            case 0x35:
              unint64_t v8 = 0x756F635F6B6E696CLL;
              unint64_t v7 = 0xEA0000000000746ELL;
              goto LABEL_51;
            case 0x36:
              unint64_t v8 = 0xD000000000000018;
              uint64_t v9 = "collaboration_identifier";
LABEL_48:
              unint64_t v7 = (unint64_t)(v9 - 32) | 0x8000000000000000;
              break;
            case 0x37:
              char v11 = "is_detached_root";
LABEL_50:
              unint64_t v7 = (unint64_t)(v11 - 32) | 0x8000000000000000;
              unint64_t v8 = 0xD000000000000010;
              break;
            default:
              goto LABEL_51;
          }
          break;
      }
LABEL_51:
      unint64_t v12 = 0xE400000000000000;
      unint64_t v13 = 1684957547;
      switch(v5)
      {
        case 1:
          uint64_t v14 = 0x6C617461645F7369;
          uint64_t v15 = 7566181;
          goto LABEL_83;
        case 2:
          if (v8 != 1702521203) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 3:
          uint64_t v16 = 0x656B636F6C5F7369;
          goto LABEL_76;
        case 4:
          unint64_t v13 = 0xD000000000000011;
          id v17 = "posix_permissions";
          goto LABEL_94;
        case 5:
          uint64_t v18 = 0x6E6F697461657263;
          uint64_t v19 = 1952539743;
          goto LABEL_72;
        case 6:
          unint64_t v13 = 0xD000000000000019;
          id v17 = "content_modification_date";
          goto LABEL_94;
        case 7:
          unint64_t v12 = 0xEE00657461645F64;
          if (v8 != 0x6573755F7473616CLL) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 8:
          unint64_t v12 = 0xE800000000000000;
          if (v8 != 0x617461645F676174) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 9:
          uint64_t v18 = 0x657469726F766166;
          unint64_t v20 = 0x6B6E61725FLL;
          goto LABEL_86;
        case 10:
          unint64_t v12 = 0xEA00000000006567;
          if (v8 != 0x616B6361705F7369) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 11:
          unint64_t v12 = 0xE90000000000006ELL;
          if (v8 != 0x65646469685F7369) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 12:
          char v21 = "extension_hidden";
          goto LABEL_100;
        case 13:
          char v21 = "child_item_count";
          goto LABEL_100;
        case 14:
          unint64_t v13 = 0xD000000000000013;
          id v17 = "extended_attributes";
          goto LABEL_94;
        case 15:
          uint64_t v18 = 0x6C61636973796870;
          uint64_t v19 = 2053731167;
LABEL_72:
          unint64_t v20 = v19 & 0xFFFF0000FFFFFFFFLL | 0x6500000000;
          goto LABEL_86;
        case 16:
          unint64_t v12 = 0xEC000000656C6261;
          if (v8 != 0x74636976655F7369) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 17:
          uint64_t v16 = 0x656E6E69705F7369;
LABEL_76:
          unint64_t v12 = 0xE900000000000064;
          if (v8 != v16) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 18:
          unint64_t v13 = 0xD000000000000013;
          id v17 = "is_in_pinned_folder";
          goto LABEL_94;
        case 19:
          unint64_t v13 = 0xD000000000000016;
          id v17 = "before_bounce_filename";
          goto LABEL_94;
        case 20:
          unint64_t v12 = 0xEF626F6C625F656ELL;
          if (v8 != 0x69746E6172617571) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 21:
          uint64_t v14 = 0x72636E79735F7369;
          uint64_t v15 = 7630703;
LABEL_83:
          unint64_t v12 = v15 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
          if (v8 != v14) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 22:
          uint64_t v18 = 0x726F6E67695F7369;
          unint64_t v20 = 0x746F6F7265;
LABEL_86:
          unint64_t v12 = v20 & 0xFFFFFFFFFFFFLL | 0xED00000000000000;
          if (v8 != v18) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 23:
          char v21 = "closest_syncroot";
          goto LABEL_100;
        case 24:
          unint64_t v12 = 0xE700000000000000;
          if (v8 != 0x657079745F736FLL) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 25:
          unint64_t v12 = 0xEA0000000000746ELL;
          if (v8 != 0x756F635F6B6E696CLL) {
            goto LABEL_97;
          }
          goto LABEL_96;
        case 26:
          unint64_t v13 = 0xD000000000000018;
          id v17 = "collaboration_identifier";
LABEL_94:
          unint64_t v12 = (unint64_t)(v17 - 32) | 0x8000000000000000;
          goto LABEL_95;
        case 27:
          char v21 = "is_detached_root";
LABEL_100:
          unint64_t v12 = (unint64_t)(v21 - 32) | 0x8000000000000000;
          if (v8 != 0xD000000000000010) {
            goto LABEL_97;
          }
          goto LABEL_96;
        default:
LABEL_95:
          if (v8 != v13) {
            goto LABEL_97;
          }
LABEL_96:
          if (v7 == v12)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_97:
          char v22 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v22) {
            return v4;
          }
LABEL_4:
          unint64_t v4 = (v4 + 1) & v6;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_24D6B1D08(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_24DCC8A58();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    unint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    char v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_24D3EA320(&qword_26B1949E0, MEMORY[0x263F06EA8]);
      char v15 = sub_24DCC9798();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t sub_24D6B1EC8(uint64_t a1)
{
  return sub_24D3F0F10(a1);
}

uint64_t sub_24D6B1ED4(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = sub_24DCCA968();
    __break(1u);
  }
  else if (a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986C4D0);
    uint64_t result = sub_24DCC9CA8();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_24D6B1F78(uint64_t a1)
{
  return sub_24D6B1FE4(a1, type metadata accessor for NSFileProviderItemCapabilities);
}

uint64_t sub_24D6B1F90(uint64_t a1)
{
  return sub_24D3F0F10(a1);
}

uint64_t sub_24D6B1F9C(uint64_t a1)
{
  return sub_24D3F0F10(a1);
}

uint64_t sub_24D6B1FA8(uint64_t a1)
{
  return sub_24D3F0F10(a1);
}

uint64_t sub_24D6B1FB4(uint64_t a1)
{
  return sub_24D3F0F10(a1);
}

uint64_t sub_24D6B1FC0(uint64_t a1)
{
  return sub_24D3F0F10(a1);
}

uint64_t sub_24D6B1FCC(uint64_t a1)
{
  return sub_24D6B1FE4(a1, type metadata accessor for NSFileProviderItemIdentifier);
}

uint64_t sub_24D6B1FE4(uint64_t a1, void (*a2)(void))
{
  if (a1 < 0)
  {
    uint64_t result = sub_24DCCA968();
    __break(1u);
  }
  else if (a1)
  {
    a2(0);
    uint64_t result = sub_24DCC9CA8();
    *(void *)(result + 16) = a1;
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

uint64_t sub_24D6B2088(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = (uint64_t (*)(void))((char *)a3 + *a3);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v4;
  void *v4 = v3;
  v4[1] = sub_24D3D3790;
  return v6();
}

uint64_t sub_24D6B2154(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v7 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_24D3D3790;
  return v7();
}

uint64_t sub_24D6B2220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_24DCC9DF8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_24DCC9DE8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_24D415F74(a1, (uint64_t *)&unk_26B190800);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_24DCC9DB8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24D6B23CC@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  *a2 = result;
  return result;
}

uint64_t sub_24D6B23FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24D81B75C();
  if (!v8) {
    goto LABEL_23;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  unsigned __int8 v54 = v9;
  uint64_t v12 = (void *)*a5;
  unint64_t v14 = sub_24D4053BC(v7, v8);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      char v21 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_24DC7C724();
      char v21 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v21[(v14 >> 6) + 8] |= 1 << v14;
    char v25 = (uint64_t *)(v21[6] + 16 * v14);
    *char v25 = v10;
    v25[1] = v11;
    *(void *)(v21[7] + 8 * v14) = v54;
    uint64_t v26 = v21[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v21[2] = v28;
LABEL_13:
    sub_24D81B75C();
    if (v30)
    {
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      unint64_t v34 = v31;
      do
      {
        uint64_t v41 = (void *)*a5;
        unint64_t v42 = sub_24D4053BC(v32, v33);
        uint64_t v44 = v41[2];
        BOOL v45 = (v43 & 1) == 0;
        BOOL v27 = __OFADD__(v44, v45);
        uint64_t v46 = v44 + v45;
        if (v27) {
          goto LABEL_24;
        }
        char v47 = v43;
        if (v41[3] < v46)
        {
          sub_24D7038B0(v46, 1);
          unint64_t v42 = sub_24D4053BC(v32, v33);
          if ((v47 & 1) != (v48 & 1)) {
            goto LABEL_26;
          }
        }
        __int16 v49 = (void *)*a5;
        if (v47)
        {
          uint64_t v35 = 8 * v42;
          id v36 = *(id *)(v49[7] + 8 * v42);
          swift_bridgeObjectRelease();

          uint64_t v37 = v49[7];
          *(void *)(v37 + v35) = v36;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          unint64_t v50 = (uint64_t *)(v49[6] + 16 * v42);
          *unint64_t v50 = v32;
          v50[1] = v33;
          *(void *)(v49[7] + 8 * v42) = v34;
          uint64_t v51 = v49[2];
          BOOL v27 = __OFADD__(v51, 1);
          uint64_t v52 = v51 + 1;
          if (v27) {
            goto LABEL_25;
          }
          void v49[2] = v52;
        }
        sub_24D81B75C();
        uint64_t v32 = v38;
        uint64_t v33 = v39;
        unint64_t v34 = v40;
      }
      while (v39);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_24D3E6690();
    return swift_release();
  }
  sub_24D7038B0(v17, a4 & 1);
  unint64_t v19 = sub_24D4053BC(v10, v11);
  if ((v18 & 1) == (v20 & 1))
  {
    unint64_t v14 = v19;
    char v21 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v22 = 8 * v14;
    id v23 = *(id *)(v21[7] + 8 * v14);
    swift_bridgeObjectRelease();

    uint64_t v24 = v21[7];
    *(void *)(v24 + v22) = v23;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

uint64_t sub_24D6B2708(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  sub_24D81B75C();
  if (!v8) {
    goto LABEL_24;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v8;
  uint64_t v12 = v9;
  char v13 = (void *)*a5;
  unint64_t v15 = sub_24D4053BC(v7, v8);
  uint64_t v16 = v13[2];
  BOOL v17 = (v14 & 1) == 0;
  uint64_t v18 = v16 + v17;
  if (__OFADD__(v16, v17))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v19 = v14;
  if (v13[3] >= v18)
  {
    if (a4)
    {
      uint64_t v22 = (void *)*a5;
      if (v14) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_24DC7C724();
      uint64_t v22 = (void *)*a5;
      if (v19) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v22[(v15 >> 6) + 8] |= 1 << v15;
    char v25 = (uint64_t *)(v22[6] + 16 * v15);
    *char v25 = v10;
    v25[1] = v11;
    *(void *)(v22[7] + 8 * v15) = v12;
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_26:
      __break(1u);
      goto LABEL_27;
    }
    v22[2] = v28;
LABEL_13:
    sub_24D81B75C();
    if (v30)
    {
      uint64_t v32 = v29;
      uint64_t v33 = v30;
      uint64_t v34 = v31;
      do
      {
        uint64_t v40 = (void *)*a5;
        unint64_t v42 = sub_24D4053BC(v32, v33);
        uint64_t v43 = v40[2];
        BOOL v44 = (v41 & 1) == 0;
        uint64_t v45 = v43 + v44;
        if (__OFADD__(v43, v44)) {
          goto LABEL_25;
        }
        char v46 = v41;
        if (v40[3] < v45)
        {
          sub_24D7038B0(v45, 1);
          unint64_t v47 = sub_24D4053BC(v32, v33);
          if ((v46 & 1) != (v48 & 1)) {
            goto LABEL_27;
          }
          unint64_t v42 = v47;
        }
        __int16 v49 = (void *)*a5;
        if (v46)
        {
          swift_bridgeObjectRelease();
          uint64_t v35 = v49[7];
          uint64_t v36 = 8 * v42;

          *(void *)(v35 + v36) = v34;
        }
        else
        {
          v49[(v42 >> 6) + 8] |= 1 << v42;
          unint64_t v50 = (uint64_t *)(v49[6] + 16 * v42);
          *unint64_t v50 = v32;
          v50[1] = v33;
          *(void *)(v49[7] + 8 * v42) = v34;
          uint64_t v51 = v49[2];
          BOOL v27 = __OFADD__(v51, 1);
          uint64_t v52 = v51 + 1;
          if (v27) {
            goto LABEL_26;
          }
          void v49[2] = v52;
        }
        sub_24D81B75C();
        uint64_t v32 = v37;
        uint64_t v33 = v38;
        uint64_t v34 = v39;
      }
      while (v38);
    }
LABEL_24:
    swift_release();
    swift_bridgeObjectRelease();
    sub_24D3E6690();
    return swift_release();
  }
  sub_24D7038B0(v18, a4 & 1);
  unint64_t v20 = sub_24D4053BC(v10, v11);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v15 = v20;
    uint64_t v22 = (void *)*a5;
    if ((v19 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    uint64_t v23 = v22[7];
    uint64_t v24 = 8 * v15;

    *(void *)(v23 + v24) = v12;
    goto LABEL_13;
  }
LABEL_27:
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

void *sub_24D6B29F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v1 = a1[1];
  switch(v1 >> 62)
  {
    case 1uLL:
      uint64_t v5 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      *(_OWORD *)a1 = xmmword_24DCD6EF0;
      uint64_t v6 = v2 >> 32;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_12;
      }
      if (v6 < (int)v2) {
        goto LABEL_15;
      }
      if (sub_24DCC84D8() && __OFSUB__((int)v2, sub_24DCC84F8())) {
        goto LABEL_16;
      }
      sub_24DCC8518();
      swift_allocObject();
      uint64_t v7 = sub_24DCC84B8();
      swift_release();
      uint64_t v5 = v7;
LABEL_12:
      if (v6 < (int)v2)
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
      }
      uint64_t result = sub_24D6B2D10((int)v2, v2 >> 32);
      *a1 = v2;
      a1[1] = v5 | 0x4000000000000000;
      return result;
    case 2uLL:
      uint64_t v8 = *a1;
      uint64_t v10 = v1 & 0x3FFFFFFFFFFFFFFFLL;
      sub_24DCC8A68();
      uint64_t result = sub_24D6B2D10(*(void *)(v8 + 16), *(void *)(v8 + 24));
      *a1 = v8;
      a1[1] = v10 | 0x8000000000000000;
      return result;
    case 3uLL:
      MEMORY[0x270FA5388](a1);
      return sub_24DBABBD4((void *(*)(void *__return_ptr, uint64_t))sub_24D6DAD34);
    default:
      LOWORD(v9) = a1[1];
      BYTE2(v9) = BYTE2(a1[1]);
      HIBYTE(v9) = BYTE3(a1[1]);
      __int16 v11 = WORD2(a1[1]);
      unsigned __int8 v12 = BYTE6(a1[1]);
      MEMORY[0x270FA5388](a1);
      uint64_t result = sub_24DBABBD4((void *(*)(void *__return_ptr, uint64_t))sub_24D6DAD34);
      *a1 = v2;
      a1[1] = v9 | ((unint64_t)v11 << 32) | ((unint64_t)HIBYTE(v11) << 40) | ((unint64_t)v12 << 48);
      return result;
  }
}

void *sub_24D6B2D10(uint64_t a1, uint64_t a2)
{
  uint64_t result = (void *)sub_24DCC84D8();
  if (result)
  {
    uint64_t result = (void *)sub_24DCC84F8();
    if (__OFSUB__(a1, result))
    {
      __break(1u);
    }
    else if (!__OFSUB__(a2, a1))
    {
      uint64_t v5 = sub_24DCC84E8();
      MEMORY[0x270FA5388](v5);
      return sub_24DBABBD4((void *(*)(void *__return_ptr, uint64_t))sub_24D6DAD34);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D6B2DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  v34[2] = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  v34[0] = a1;
  uint64_t v31 = *(void *)(a1 + 16);
  if (v31)
  {
    uint64_t v3 = a2 + 56;
    uint64_t v32 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    while (1)
    {
      uint64_t v5 = *(void **)(v32 + 8 * v4++);
      sub_24DCC97E8();
      sub_24DCCAFF8();
      id v33 = v5;
      sub_24DCC98F8();
      uint64_t v6 = sub_24DCCB048();
      swift_bridgeObjectRelease();
      uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v8 = v6 & ~v7;
      if ((*(void *)(v3 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
      {
        uint64_t v9 = sub_24DCC97E8();
        uint64_t v11 = v10;
        if (v9 == sub_24DCC97E8() && v11 == v12)
        {
LABEL_20:
          swift_bridgeObjectRelease_n();
LABEL_21:

          v34[1] = v4;
          char v23 = *(unsigned char *)(v2 + 32);
          unint64_t v24 = (unint64_t)((1 << v23) + 63) >> 6;
          size_t v25 = 8 * v24;
          if ((v23 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            MEMORY[0x270FA5388](isStackAllocationSafe);
            memcpy((char *)&v31 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v25);
            sub_24D6B352C((unint64_t *)((char *)&v31 - ((v25 + 15) & 0x3FFFFFFFFFFFFFF0)), v24, v2, v8, v34);
            uint64_t v27 = v26;
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v28 = (void *)swift_slowAlloc();
            memcpy(v28, (const void *)(v2 + 56), v25);
            sub_24D6B352C((unint64_t *)v28, v24, v2, v8, v34);
            uint64_t v27 = v29;
            swift_release();
            swift_bridgeObjectRelease();
            MEMORY[0x25332B030](v28, -1, -1);
          }
          return v27;
        }
        char v14 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v14) {
          goto LABEL_21;
        }
        uint64_t v15 = ~v7;
        while (1)
        {
          unint64_t v8 = (v8 + 1) & v15;
          if (((*(void *)(v3 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
            break;
          }
          uint64_t v16 = sub_24DCC97E8();
          uint64_t v18 = v17;
          if (v16 == sub_24DCC97E8() && v18 == v19) {
            goto LABEL_20;
          }
          char v21 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v21) {
            goto LABEL_21;
          }
        }
      }

      if (v4 == v31)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
  }
  return v2;
}

uint64_t sub_24D6B317C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  void v39[2] = *MEMORY[0x263EF8340];
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return MEMORY[0x263F8EE88];
  }
  v39[0] = a1;
  uint64_t v33 = *(void *)(a1 + 16);
  if (v33)
  {
    uint64_t v38 = (char *)(a2 + 56);
    uint64_t v34 = a1 + 32;
    v32[1] = a1;
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = v34 + 24 * v3;
      uint64_t v5 = *(void **)v4;
      uint64_t v6 = *(void *)(v4 + 8);
      int v7 = *(unsigned __int8 *)(v4 + 16);
      sub_24DCCAFF8();
      sub_24DCC97E8();
      id v8 = v5;
      sub_24DCC98F8();
      swift_bridgeObjectRelease();
      uint64_t v37 = v6;
      id v35 = v8;
      sub_24DCCB018();
      if (v7 != 1) {
        sub_24DCCB008();
      }
      uint64_t v36 = v3 + 1;
      uint64_t v9 = sub_24DCCB048();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)&v38[(v11 >> 3) & 0xFFFFFFFFFFFFFF8] >> v11)) {
        break;
      }
LABEL_4:

      uint64_t v3 = v36;
      if (v36 == v33)
      {
        swift_bridgeObjectRelease();
        return v2;
      }
    }
    uint64_t v12 = ~v10;
    while (1)
    {
      uint64_t v14 = *(void *)(v2 + 48) + 24 * v11;
      uint64_t v15 = *(void *)(v14 + 8);
      char v16 = *(unsigned char *)(v14 + 16);
      uint64_t v17 = sub_24DCC97E8();
      uint64_t v19 = v18;
      if (v17 == sub_24DCC97E8() && v19 == v20)
      {
        swift_bridgeObjectRelease_n();
        if (v16) {
          goto LABEL_22;
        }
      }
      else
      {
        char v22 = sub_24DCCAE28();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0) {
          goto LABEL_13;
        }
        if (v16)
        {
LABEL_22:
          if (v7) {
            goto LABEL_23;
          }
          goto LABEL_13;
        }
      }
      if (v15 == v37) {
        char v13 = v7;
      }
      else {
        char v13 = 1;
      }
      if ((v13 & 1) == 0)
      {
LABEL_23:

        v39[1] = v36;
        char v24 = *(unsigned char *)(v2 + 32);
        unint64_t v25 = (unint64_t)((1 << v24) + 63) >> 6;
        size_t v26 = 8 * v25;
        if ((v24 & 0x3Fu) <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
        {
          MEMORY[0x270FA5388](isStackAllocationSafe);
          memcpy((char *)v32 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0), v38, v26);
          sub_24D6B37FC((void *)((char *)v32 - ((v26 + 15) & 0x3FFFFFFFFFFFFFF0)), v25, v2, v11, v39);
          uint64_t v28 = v27;
          swift_release();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v29 = (void *)swift_slowAlloc();
          memcpy(v29, v38, v26);
          sub_24D6B37FC((unint64_t *)v29, v25, v2, v11, v39);
          uint64_t v28 = v30;
          swift_release();
          swift_bridgeObjectRelease();
          MEMORY[0x25332B030](v29, -1, -1);
        }
        return v28;
      }
LABEL_13:
      unint64_t v11 = (v11 + 1) & v12;
      if (((*(void *)&v38[(v11 >> 3) & 0xFFFFFFFFFFFFFF8] >> v11) & 1) == 0) {
        goto LABEL_4;
      }
    }
  }
  return v2;
}

void sub_24D6B352C(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v35 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    sub_24DB4C19C(a1, a2, v35, a3);
    return;
  }
  uint64_t v38 = a3 + 56;
  uint64_t v36 = a5;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_31;
    }
    uint64_t v10 = *(void **)(v8 + 8 * v7 + 32);
    a5[1] = v7 + 1;
    sub_24DCC97E8();
    sub_24DCCAFF8();
    id v37 = v10;
    sub_24DCC98F8();
    uint64_t v11 = sub_24DCCB048();
    swift_bridgeObjectRelease();
    uint64_t v12 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v13 = v11 & ~v12;
    unint64_t v14 = v13 >> 6;
    uint64_t v15 = 1 << v13;
    if (((1 << v13) & *(void *)(v38 + 8 * (v13 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v16 = sub_24DCC97E8();
    uint64_t v18 = v17;
    if (v16 == sub_24DCC97E8() && v18 == v19)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v21 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v21 & 1) == 0)
      {
        uint64_t v22 = ~v12;
        for (unint64_t i = v13 + 1; ; unint64_t i = v24 + 1)
        {
          unint64_t v24 = i & v22;
          if (((*(void *)(v38 + (((i & v22) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v22)) & 1) == 0) {
            break;
          }
          uint64_t v25 = sub_24DCC97E8();
          uint64_t v27 = v26;
          if (v25 == sub_24DCC97E8() && v27 == v28)
          {
            swift_bridgeObjectRelease_n();
LABEL_29:

            unint64_t v14 = v24 >> 6;
            uint64_t v15 = 1 << v24;
            goto LABEL_24;
          }
          char v30 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_29;
          }
        }
LABEL_4:

        a5 = v36;
        goto LABEL_5;
      }
    }

LABEL_24:
    unint64_t v31 = a1[v14];
    a1[v14] = v31 & ~v15;
    a5 = v36;
    if ((v15 & v31) != 0)
    {
      uint64_t v32 = v35 - 1;
      if (__OFSUB__(v35, 1)) {
        goto LABEL_32;
      }
      --v35;
      if (!v32) {
        return;
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
}

void sub_24D6B37FC(unint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = a3;
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)a1 + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v7 = v6 - 1;
  uint64_t v9 = *a5;
  unint64_t v8 = a5[1];
  unint64_t v10 = *(void *)(*a5 + 16);
  uint64_t v35 = v7;
  if (v8 == v10)
  {
LABEL_2:
    swift_retain();
    sub_24DB4C438(a1, a2, v35, v5);
    return;
  }
  uint64_t v40 = a3 + 56;
  uint64_t v36 = a5;
  while (1)
  {
    if ((v8 & 0x8000000000000000) != 0)
    {
      __break(1u);
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      return;
    }
    if (v8 >= v10) {
      goto LABEL_31;
    }
    uint64_t v11 = v9 + 24 * v8;
    unint64_t v13 = *(void **)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    int v14 = *(unsigned __int8 *)(v11 + 48);
    a5[1] = v8 + 1;
    sub_24DCCAFF8();
    sub_24DCC97E8();
    id v37 = v13;
    sub_24DCC98F8();
    swift_bridgeObjectRelease();
    int v39 = v14;
    uint64_t v38 = v12;
    sub_24DCCB018();
    if (v14 != 1) {
      sub_24DCCB008();
    }
    uint64_t v15 = sub_24DCCB048();
    uint64_t v16 = -1 << *(unsigned char *)(v5 + 32);
    unint64_t v17 = v15 & ~v16;
    if (((*(void *)(v40 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
    {
LABEL_4:

      goto LABEL_5;
    }
    uint64_t v18 = ~v16;
    while (1)
    {
      uint64_t v20 = v5;
      uint64_t v21 = *(void *)(v5 + 48) + 24 * v17;
      uint64_t v22 = *(void *)(v21 + 8);
      char v23 = *(unsigned char *)(v21 + 16);
      uint64_t v24 = sub_24DCC97E8();
      uint64_t v26 = v25;
      if (v24 == sub_24DCC97E8() && v26 == v27) {
        break;
      }
      char v29 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v29 & 1) == 0) {
        goto LABEL_15;
      }
      if ((v23 & 1) == 0) {
        goto LABEL_12;
      }
LABEL_24:
      if (v39) {
        goto LABEL_25;
      }
LABEL_15:
      unint64_t v17 = (v17 + 1) & v18;
      uint64_t v5 = v20;
      if (((*(void *)(v40 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease_n();
    if (v23) {
      goto LABEL_24;
    }
LABEL_12:
    char v19 = v39;
    if (v22 != v38) {
      char v19 = 1;
    }
    if (v19) {
      goto LABEL_15;
    }
LABEL_25:

    uint64_t v30 = (v17 >> 3) & 0x1FFFFFFFFFFFFFF8;
    uint64_t v31 = *(unint64_t *)((char *)a1 + v30);
    *(unint64_t *)((char *)a1 + v30) = v31 & ~(1 << v17);
    if ((v31 & (1 << v17)) == 0)
    {
      uint64_t v5 = v20;
      goto LABEL_5;
    }
    uint64_t v32 = v35 - 1;
    if (__OFSUB__(v35, 1)) {
      goto LABEL_32;
    }
    uint64_t v5 = v20;
    --v35;
    if (!v32) {
      break;
    }
LABEL_5:
    a5 = v36;
    uint64_t v9 = *v36;
    unint64_t v8 = v36[1];
    unint64_t v10 = *(void *)(*v36 + 16);
    if (v8 == v10) {
      goto LABEL_2;
    }
  }
}

uint64_t sub_24D6B3AC8(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  unint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24D6AD808((uint64_t)a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = v8[3];
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      uint64_t v16 = *v4;
      if (v14)
      {
LABEL_8:
        uint64_t v17 = v16[7];
        uint64_t result = *(void *)(v17 + 8 * v10);
        *(void *)(v17 + 8 * v10) = a1;
        return result;
      }
      goto LABEL_11;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24DC78F4C();
      goto LABEL_7;
    }
    sub_24D6FD0D4(v13, a3 & 1);
    unint64_t v19 = sub_24D6AD808((uint64_t)a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_11:
      sub_24D7180A8(v10, (uint64_t)a2, a1, v16);
      id v21 = a2;
      return 0;
    }
  }
  sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

uint64_t sub_24D6B3BE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t result = a3();
  if (!v3) {
    return v5;
  }
  return result;
}

uint64_t sub_24D6B3C24(void **a1)
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_24D8F2834(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_24D6B3CD0(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_24D6B3CD0(uint64_t *a1)
{
  uint64_t v220 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C4C0);
  MEMORY[0x270FA5388](v220);
  uint64_t v3 = (char *)&v198 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v209 = *(void *)(v229 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v229);
  uint64_t v206 = (uint64_t)&v198 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v223 = (uint64_t)&v198 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  unint64_t v10 = (char *)&v198 - v9;
  uint64_t v11 = MEMORY[0x270FA5388](v8);
  uint64_t v13 = (void **)((char *)&v198 - v12);
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (void **)((char *)&v198 - v15);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  unint64_t v19 = (char *)&v198 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v219 = (id *)((char *)&v198 - v21);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v198 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v225 = (uint64_t)&v198 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v224 = (uint64_t)&v198 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v31 = (char *)&v198 - v30;
  uint64_t v32 = MEMORY[0x270FA5388](v29);
  uint64_t v205 = (char *)&v198 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  uint64_t v201 = (uint64_t)&v198 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v200 = (uint64_t)&v198 - v36;
  id v228 = a1;
  uint64_t v37 = a1[1];
  uint64_t result = sub_24DCCAD68();
  uint64_t v202 = result;
  if (result >= v37)
  {
    if (v37 < 0) {
      goto LABEL_181;
    }
    if (v37) {
      return sub_24D6B4EB8(0, v37, 1, v228);
    }
    return result;
  }
  if (v37 >= 0) {
    uint64_t v39 = v37;
  }
  else {
    uint64_t v39 = v37 + 1;
  }
  if (v37 < -1) {
    goto LABEL_190;
  }
  uint64_t v212 = v10;
  uint64_t v213 = v19;
  unint64_t v214 = v16;
  uint64_t v215 = v13;
  unint64_t v216 = v24;
  uint64_t v40 = v217;
  if (v37 < 2)
  {
    uint64_t v45 = (char *)MEMORY[0x263F8EE78];
    unint64_t v208 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v209 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v209 + 80));
    uint64_t v199 = MEMORY[0x263F8EE78];
    if (v37 != 1)
    {
      unint64_t v139 = *(void *)(MEMORY[0x263F8EE78] + 16);
      goto LABEL_144;
    }
    uint64_t v44 = 1;
    id v203 = v31;
  }
  else
  {
    id v203 = v31;
    uint64_t v41 = v39 >> 1;
    uint64_t v42 = sub_24DCC9CA8();
    *(void *)(v42 + 16) = v41;
    uint64_t v43 = *(unsigned __int8 *)(v209 + 80);
    uint64_t v199 = v42;
    unint64_t v208 = v42 + ((v43 + 32) & ~v43);
    uint64_t v44 = v37;
  }
  uint64_t v46 = 0;
  uint64_t v45 = (char *)MEMORY[0x263F8EE78];
  uint64_t v218 = v3;
  do
  {
    uint64_t v47 = v46;
    uint64_t v48 = v46 + 1;
    if (v46 + 1 >= v44)
    {
      uint64_t v65 = v46 + 1;
      goto LABEL_92;
    }
    uint64_t v49 = v46;
    uint64_t v50 = *v228;
    uint64_t v51 = *(void *)(v209 + 72);
    uint64_t v52 = v200;
    sub_24D415FD0(*v228 + v51 * v48, v200, &qword_26B18FF40);
    uint64_t v211 = v50;
    uint64_t v227 = v51;
    uint64_t v53 = v50 + v51 * v49;
    uint64_t v47 = v49;
    uint64_t v54 = v201;
    sub_24D415FD0(v53, v201, &qword_26B18FF40);
    uint64_t v55 = v217;
    int v56 = sub_24D6A3078(v52, v54);
    uint64_t v217 = v55;
    if (v55)
    {
      sub_24D415F74(v54, &qword_26B18FF40);
      uint64_t v197 = v52;
      goto LABEL_157;
    }
    int v57 = v56;
    sub_24D415F74(v54, &qword_26B18FF40);
    sub_24D415F74(v52, &qword_26B18FF40);
    uint64_t v222 = v47 + 2;
    if (v47 + 2 >= v44) {
      goto LABEL_24;
    }
    uint64_t v207 = v47;
    uint64_t v226 = v227 * v48;
    uint64_t v58 = v211;
    uint64_t v221 = v227 * (v47 + 2);
    uint64_t v59 = (uint64_t)v205;
    while (1)
    {
      uint64_t v60 = v44;
      sub_24D415FD0(v58 + v221, v59, &qword_26B18FF40);
      uint64_t v61 = (uint64_t)v203;
      sub_24D415FD0(v58 + v226, (uint64_t)v203, &qword_26B18FF40);
      uint64_t v62 = v217;
      int v63 = sub_24D6A3078(v59, v61);
      uint64_t v217 = v62;
      if (v62)
      {
        sub_24D415F74(v61, &qword_26B18FF40);
        uint64_t v197 = v59;
LABEL_157:
        sub_24D415F74(v197, &qword_26B18FF40);
        goto LABEL_158;
      }
      int v64 = v63;
      sub_24D415F74(v61, &qword_26B18FF40);
      sub_24D415F74(v59, &qword_26B18FF40);
      if ((v57 ^ v64)) {
        break;
      }
      v58 += v227;
      ++v222;
      uint64_t v44 = v60;
      uint64_t v59 = (uint64_t)v205;
      if (v60 == v222)
      {
        uint64_t v222 = v60;
        uint64_t v47 = v207;
        goto LABEL_24;
      }
    }
    uint64_t v44 = v60;
    uint64_t v47 = v207;
LABEL_24:
    uint64_t v66 = v202;
    if ((v57 & 1) == 0)
    {
      uint64_t v65 = v222;
LABEL_38:
      if (v65 >= v44) {
        goto LABEL_92;
      }
      goto LABEL_39;
    }
    uint64_t v65 = v222;
    if (v222 < v47) {
      goto LABEL_185;
    }
    if (v47 >= v222) {
      goto LABEL_38;
    }
    uint64_t v226 = v44;
    uint64_t v198 = v45;
    uint64_t v67 = v47;
    uint64_t v68 = 0;
    uint64_t v69 = v227 * (v222 - 1);
    uint64_t v70 = v222 * v227;
    uint64_t v71 = v67;
    uint64_t v207 = v67;
    uint64_t v72 = v67 * v227;
    do
    {
      if (v71 != v65 + v68 - 1)
      {
        uint64_t v73 = v211;
        if (!v211) {
          goto LABEL_188;
        }
        unint64_t v74 = v211 + v72;
        sub_24D3F0BA0(v211 + v72, v206, &qword_26B18FF40);
        if (v72 < v69 || v74 >= v73 + v70)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v72 != v69)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        sub_24D3F0BA0(v206, v73 + v69, &qword_26B18FF40);
        uint64_t v65 = v222;
      }
      ++v71;
      --v68;
      v69 -= v227;
      v70 -= v227;
      v72 += v227;
    }
    while (v71 < v65 + v68);
    uint64_t v3 = v218;
    uint64_t v45 = v198;
    uint64_t v66 = v202;
    uint64_t v47 = v207;
    uint64_t v44 = v226;
    if (v65 >= v226) {
      goto LABEL_92;
    }
LABEL_39:
    if (__OFSUB__(v65, v47)) {
      goto LABEL_182;
    }
    if (v65 - v47 >= v66) {
      goto LABEL_92;
    }
    if (__OFADD__(v47, v66)) {
      goto LABEL_183;
    }
    if (v47 + v66 >= v44) {
      uint64_t v75 = v44;
    }
    else {
      uint64_t v75 = v47 + v66;
    }
    if (v75 < v47)
    {
LABEL_184:
      __break(1u);
LABEL_185:
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      uint64_t result = sub_24DCCA968();
      __break(1u);
      return result;
    }
    if (v65 == v75) {
      goto LABEL_92;
    }
    uint64_t v207 = v47;
    uint64_t v198 = v45;
    uint64_t v221 = *(void *)(v209 + 72);
    uint64_t v226 = v65 * v221;
    uint64_t v227 = v221 * (v65 - 1);
    uint64_t v204 = v75;
    while (2)
    {
      uint64_t v79 = 0;
      uint64_t v80 = v207;
      uint64_t v222 = v65;
      while (2)
      {
        uint64_t v81 = *v228;
        uint64_t v82 = v224;
        sub_24D415FD0(v226 + v79 + *v228, v224, &qword_26B18FF40);
        uint64_t v83 = v227 + v79 + v81;
        uint64_t v84 = v225;
        sub_24D415FD0(v83, v225, &qword_26B18FF40);
        uint64_t v85 = (uint64_t)&v3[*(int *)(v220 + 48)];
        sub_24D415FD0(v82, (uint64_t)v3, &qword_26B18FF40);
        sub_24D415FD0(v84, v85, &qword_26B18FF40);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          uint64_t v92 = (uint64_t)v216;
          sub_24D415FD0((uint64_t)v3, (uint64_t)v216, &qword_26B18FF40);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
          if (swift_getEnumCaseMultiPayload() != 6)
          {
            uint64_t v76 = v92;
            uint64_t v77 = (uint64_t *)&unk_26B1936D0;
            goto LABEL_49;
          }
          uint64_t v93 = v92 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C660) + 48);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v94 = v214;
            sub_24D415FD0(v85, (uint64_t)v214, &qword_26B18FF40);
            __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
            int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload)
            {
              if (EnumCaseMultiPayload != 1)
              {
                uint64_t v131 = (uint64_t)v214;
                id v132 = &qword_26B1936E0;
LABEL_89:
                sub_24D415F74(v131, v132);
                sub_24D415F74(v93, (uint64_t *)&unk_26B199BC0);
                uint64_t v3 = v218;
                goto LABEL_50;
              }
              unint64_t v96 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986C670);
              uint64_t v97 = v214;
              uint64_t v211 = (uint64_t)v214 + v96[12];
              uint64_t v98 = (uint64_t *)((char *)v214 + v96[20]);

              sub_24D3E386C(*v98, v98[1], v98[2], v98[3], v98[4], v98[5], v98[6], v98[7], v98[8]);
              sub_24D415F74(v211, (uint64_t *)&unk_26B196F60);
              uint64_t v99 = *v97;
            }
            else
            {
              uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986F100);
              uint64_t v122 = (uint64_t)v94 + *(int *)(v121 + 48);

              sub_24D415F74(v122, (uint64_t *)&unk_26B196F60);
              uint64_t v99 = *v94;
            }

LABEL_79:
            uint64_t v118 = v93;
          }
          else
          {
            uint64_t v111 = (uint64_t)v213;
            sub_24D415FD0(v85, (uint64_t)v213, &qword_26B18FF40);
            int v112 = swift_getEnumCaseMultiPayload();
            if (!v112)
            {
              uint64_t v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F330);
              uint64_t v128 = v111 + *(int *)(v127 + 48);

              sub_24D415F74(v128, (uint64_t *)&unk_26B196F40);
              goto LABEL_79;
            }
            if (v112 != 1)
            {
              uint64_t v131 = (uint64_t)v213;
              id v132 = (uint64_t *)&unk_26B1936D0;
              goto LABEL_89;
            }
            uint64_t v113 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C650);
            uint64_t v114 = v113[12];
            uint64_t v211 = v93;
            uint64_t v115 = (uint64_t)v213;
            uint64_t v210 = &v213[v114];
            uint64_t v116 = v113[16];
            uint64_t v117 = &v213[v113[20]];

            sub_24D400D4C(*(void *)v117, *((void *)v117 + 1), *((void *)v117 + 2), *((void *)v117 + 3), *((void *)v117 + 4));
            sub_24D415F74((uint64_t)v210, (uint64_t *)&unk_26B196F40);
            uint64_t v118 = v211;
          }
          sub_24D415F74(v118, (uint64_t *)&unk_26B199BC0);
          uint64_t v3 = v218;
LABEL_81:
          sub_24D415F74(v85, &qword_26B18FF40);
          sub_24D415F74((uint64_t)v3, &qword_26B18FF40);
          sub_24D415F74(v225, &qword_26B18FF40);
          sub_24D415F74(v224, &qword_26B18FF40);
          uint64_t v129 = *v228;
          if (!*v228) {
            goto LABEL_186;
          }
          uint64_t v130 = v129 + v227 + v79;
          sub_24D3F0BA0(v129 + v226 + v79, v223, &qword_26B18FF40);
          swift_arrayInitWithTakeFrontToBack();
          sub_24D3F0BA0(v223, v130, &qword_26B18FF40);
          uint64_t v78 = v222;
          v79 -= v221;
          if (v222 == ++v80) {
            goto LABEL_51;
          }
          continue;
        }
        break;
      }
      sub_24D415FD0((uint64_t)v3, (uint64_t)v219, &qword_26B18FF40);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
      if (swift_getEnumCaseMultiPayload() != 6)
      {
        uint64_t v76 = (uint64_t)v219;
        uint64_t v77 = &qword_26B1936E0;
LABEL_49:
        sub_24D415F74(v76, v77);
        goto LABEL_50;
      }
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v100 = (uint64_t)v212;
        sub_24D415FD0(v85, (uint64_t)v212, &qword_26B18FF40);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
        int v101 = swift_getEnumCaseMultiPayload();
        if (v101)
        {
          if (v101 != 1)
          {
            uint64_t v133 = v100;
            id v134 = (uint64_t *)&unk_26B1936D0;
            goto LABEL_87;
          }
          uint64_t v102 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C650);
          uint64_t v211 = v100 + v102[12];
          uint64_t v103 = v102[16];
          int v104 = (uint64_t *)(v100 + v102[20]);

          uint64_t v105 = *v104;
          unint64_t v106 = v104[1];
          uint64_t v107 = v104[2];
          uint64_t v108 = v104[3];
          unint64_t v109 = v104[4];
          uint64_t v3 = v218;
          sub_24D400D4C(v105, v106, v107, v108, v109);

          uint64_t v110 = v211;
        }
        else
        {
          uint64_t v123 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F330);
          uint64_t v124 = v100;
          uint64_t v125 = v100 + *(int *)(v123 + 48);

          uint64_t v110 = v125;
        }
        sub_24D415F74(v110, (uint64_t *)&unk_26B196F40);
LABEL_77:
        uint64_t v126 = v219;

        goto LABEL_81;
      }
      uint64_t v86 = v215;
      sub_24D415FD0(v85, (uint64_t)v215, &qword_26B18FF40);
      int v87 = swift_getEnumCaseMultiPayload();
      if (!v87)
      {
        uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986F100);
        uint64_t v120 = (uint64_t)v86 + *(int *)(v119 + 48);

        sub_24D415F74(v120, (uint64_t *)&unk_26B196F60);
        uint64_t v91 = *v86;
LABEL_72:

        goto LABEL_77;
      }
      if (v87 == 1)
      {
        uint64_t v88 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986C670);
        uint64_t v89 = v215;
        uint64_t v211 = (uint64_t)v215 + v88[12];
        unint64_t v90 = (uint64_t *)((char *)v215 + v88[20]);

        sub_24D3E386C(*v90, v90[1], v90[2], v90[3], v90[4], v90[5], v90[6], v90[7], v90[8]);
        sub_24D415F74(v211, (uint64_t *)&unk_26B196F60);
        uint64_t v91 = *v89;
        goto LABEL_72;
      }
      uint64_t v133 = (uint64_t)v215;
      id v134 = &qword_26B1936E0;
LABEL_87:
      sub_24D415F74(v133, v134);
      uint64_t v135 = v219;

LABEL_50:
      sub_24D415F74((uint64_t)v3, (uint64_t *)&unk_26986C4C0);
      sub_24D415F74(v225, &qword_26B18FF40);
      sub_24D415F74(v224, &qword_26B18FF40);
      uint64_t v78 = v222;
LABEL_51:
      uint64_t v65 = v78 + 1;
      v227 += v221;
      v226 += v221;
      if (v65 != v204) {
        continue;
      }
      break;
    }
    uint64_t v65 = v204;
    uint64_t v45 = v198;
    uint64_t v47 = v207;
LABEL_92:
    if (v65 < v47) {
      goto LABEL_180;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v222 = v65;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v45 = sub_24D8F2454(0, *((void *)v45 + 2) + 1, 1, v45);
    }
    unint64_t v138 = *((void *)v45 + 2);
    unint64_t v137 = *((void *)v45 + 3);
    unint64_t v139 = v138 + 1;
    if (v138 >= v137 >> 1) {
      uint64_t v45 = sub_24D8F2454((char *)(v137 > 1), v138 + 1, 1, v45);
    }
    *((void *)v45 + 2) = v139;
    id v140 = v45 + 32;
    unint64_t v141 = &v45[16 * v138 + 32];
    uint64_t v142 = v222;
    *(void *)unint64_t v141 = v47;
    *((void *)v141 + 1) = v142;
    if (v138)
    {
      while (2)
      {
        unint64_t v143 = v139 - 1;
        if (v139 >= 4)
        {
          uint64_t v148 = &v140[16 * v139];
          uint64_t v149 = *((void *)v148 - 8);
          uint64_t v150 = *((void *)v148 - 7);
          BOOL v154 = __OFSUB__(v150, v149);
          uint64_t v151 = v150 - v149;
          if (v154) {
            goto LABEL_165;
          }
          uint64_t v153 = *((void *)v148 - 6);
          uint64_t v152 = *((void *)v148 - 5);
          BOOL v154 = __OFSUB__(v152, v153);
          uint64_t v146 = v152 - v153;
          char v147 = v154;
          if (v154) {
            goto LABEL_166;
          }
          unint64_t v155 = v139 - 2;
          uint64_t v156 = &v140[16 * v139 - 32];
          uint64_t v158 = *(void *)v156;
          uint64_t v157 = *((void *)v156 + 1);
          BOOL v154 = __OFSUB__(v157, v158);
          uint64_t v159 = v157 - v158;
          if (v154) {
            goto LABEL_168;
          }
          BOOL v154 = __OFADD__(v146, v159);
          uint64_t v160 = v146 + v159;
          if (v154) {
            goto LABEL_171;
          }
          if (v160 >= v151)
          {
            uint64_t v178 = &v140[16 * v143];
            uint64_t v180 = *(void *)v178;
            uint64_t v179 = *((void *)v178 + 1);
            BOOL v154 = __OFSUB__(v179, v180);
            uint64_t v181 = v179 - v180;
            if (v154) {
              goto LABEL_175;
            }
            BOOL v171 = v146 < v181;
          }
          else
          {
LABEL_111:
            if (v147) {
              goto LABEL_167;
            }
            unint64_t v155 = v139 - 2;
            uint64_t v161 = &v140[16 * v139 - 32];
            uint64_t v163 = *(void *)v161;
            uint64_t v162 = *((void *)v161 + 1);
            BOOL v164 = __OFSUB__(v162, v163);
            uint64_t v165 = v162 - v163;
            char v166 = v164;
            if (v164) {
              goto LABEL_170;
            }
            uint64_t v167 = &v140[16 * v143];
            uint64_t v169 = *(void *)v167;
            uint64_t v168 = *((void *)v167 + 1);
            BOOL v154 = __OFSUB__(v168, v169);
            uint64_t v170 = v168 - v169;
            if (v154) {
              goto LABEL_173;
            }
            if (__OFADD__(v165, v170)) {
              goto LABEL_174;
            }
            if (v165 + v170 < v146) {
              goto LABEL_123;
            }
            BOOL v171 = v146 < v170;
          }
          if (v171) {
            unint64_t v143 = v155;
          }
        }
        else
        {
          if (v139 == 3)
          {
            uint64_t v145 = *((void *)v45 + 4);
            uint64_t v144 = *((void *)v45 + 5);
            BOOL v154 = __OFSUB__(v144, v145);
            uint64_t v146 = v144 - v145;
            char v147 = v154;
            goto LABEL_111;
          }
          uint64_t v172 = *((void *)v45 + 4);
          uint64_t v173 = *((void *)v45 + 5);
          BOOL v154 = __OFSUB__(v173, v172);
          uint64_t v165 = v173 - v172;
          char v166 = v154;
LABEL_123:
          if (v166) {
            goto LABEL_169;
          }
          uint64_t v174 = &v140[16 * v143];
          uint64_t v176 = *(void *)v174;
          uint64_t v175 = *((void *)v174 + 1);
          BOOL v154 = __OFSUB__(v175, v176);
          uint64_t v177 = v175 - v176;
          if (v154) {
            goto LABEL_172;
          }
          if (v177 < v165) {
            goto LABEL_140;
          }
        }
        unint64_t v182 = v143 - 1;
        if (v143 - 1 >= v139)
        {
          __break(1u);
LABEL_162:
          __break(1u);
LABEL_163:
          __break(1u);
LABEL_164:
          __break(1u);
LABEL_165:
          __break(1u);
LABEL_166:
          __break(1u);
LABEL_167:
          __break(1u);
LABEL_168:
          __break(1u);
LABEL_169:
          __break(1u);
LABEL_170:
          __break(1u);
LABEL_171:
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
          goto LABEL_184;
        }
        if (!*v228) {
          goto LABEL_187;
        }
        v183 = v45;
        uint64_t v184 = &v140[16 * v182];
        uint64_t v185 = *(void *)v184;
        uint64_t v186 = &v140[16 * v143];
        uint64_t v187 = *((void *)v186 + 1);
        uint64_t v188 = v217;
        sub_24D6B5150(*v228 + *(void *)(v209 + 72) * *(void *)v184, *v228 + *(void *)(v209 + 72) * *(void *)v186, *v228 + *(void *)(v209 + 72) * v187, v208);
        uint64_t v217 = v188;
        if (v188) {
          goto LABEL_158;
        }
        if (v187 < v185) {
          goto LABEL_162;
        }
        if (v143 > *((void *)v183 + 2)) {
          goto LABEL_163;
        }
        *(void *)uint64_t v184 = v185;
        *(void *)&v140[16 * v182 + 8] = v187;
        unint64_t v189 = *((void *)v183 + 2);
        if (v143 >= v189) {
          goto LABEL_164;
        }
        uint64_t v45 = v183;
        unint64_t v139 = v189 - 1;
        memmove(&v140[16 * v143], v186 + 16, 16 * (v189 - 1 - v143));
        *((void *)v183 + 2) = v189 - 1;
        uint64_t v3 = v218;
        if (v189 <= 2) {
          goto LABEL_140;
        }
        continue;
      }
    }
    unint64_t v139 = 1;
LABEL_140:
    uint64_t v44 = v228[1];
    uint64_t v46 = v222;
  }
  while (v222 < v44);
  uint64_t v40 = v217;
LABEL_144:
  uint64_t v217 = v40;
  if (v139 >= 2)
  {
    uint64_t v190 = *v228;
    do
    {
      unint64_t v191 = v139 - 2;
      if (v139 < 2) {
        goto LABEL_176;
      }
      if (!v190) {
        goto LABEL_189;
      }
      uint64_t v192 = *(void *)&v45[16 * v191 + 32];
      uint64_t v193 = *(void *)&v45[16 * v139 + 24];
      uint64_t v194 = v217;
      sub_24D6B5150(v190 + *(void *)(v209 + 72) * v192, v190 + *(void *)(v209 + 72) * *(void *)&v45[16 * v139 + 16], v190 + *(void *)(v209 + 72) * v193, v208);
      uint64_t v217 = v194;
      if (v194) {
        break;
      }
      if (v193 < v192) {
        goto LABEL_177;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v45 = sub_24D8F2820((uint64_t)v45);
      }
      if (v191 >= *((void *)v45 + 2)) {
        goto LABEL_178;
      }
      v195 = &v45[16 * v191 + 32];
      *(void *)v195 = v192;
      *((void *)v195 + 1) = v193;
      unint64_t v196 = *((void *)v45 + 2);
      if (v139 > v196) {
        goto LABEL_179;
      }
      memmove(&v45[16 * v139 + 16], &v45[16 * v139 + 32], 16 * (v196 - v139));
      *((void *)v45 + 2) = v196 - 1;
      unint64_t v139 = v196 - 1;
    }
    while (v196 > 2);
  }
LABEL_158:
  swift_bridgeObjectRelease();
  *(void *)(v199 + 16) = 0;
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D6B4EB8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v8 = MEMORY[0x270FA5388](v29);
  uint64_t v36 = (uint64_t)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v34 = (uint64_t)&v26 - v11;
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v33 = (uint64_t)&v26 - v14;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v15 = *(void *)(v13 + 72);
    uint64_t v16 = v15 * (a3 - 1);
    uint64_t v30 = a4;
    uint64_t v31 = v15;
    uint64_t v37 = v15 * a3;
    uint64_t v27 = a1;
LABEL_4:
    uint64_t v17 = 0;
    uint64_t v32 = a3;
    while (1)
    {
      uint64_t v35 = a1;
      uint64_t v19 = *a4;
      uint64_t v20 = v33;
      sub_24D415FD0(v37 + v17 + *a4, v33, &qword_26B18FF40);
      uint64_t v21 = v34;
      sub_24D415FD0(v16 + v17 + v19, v34, &qword_26B18FF40);
      uint64_t v22 = v38;
      char v23 = sub_24D6A3078(v20, v21);
      sub_24D415F74(v21, &qword_26B18FF40);
      uint64_t result = sub_24D415F74(v20, &qword_26B18FF40);
      uint64_t v38 = v22;
      if (v22) {
        break;
      }
      if ((v23 & 1) == 0)
      {
        uint64_t v18 = v32;
        a4 = v30;
LABEL_11:
        a3 = v18 + 1;
        v16 += v31;
        v37 += v31;
        a1 = v27;
        if (a3 != v28) {
          goto LABEL_4;
        }
        return result;
      }
      a4 = v30;
      uint64_t v24 = *v30;
      if (!*v30)
      {
        __break(1u);
        return result;
      }
      uint64_t v25 = v24 + v16 + v17;
      sub_24D3F0BA0(v24 + v37 + v17, v36, &qword_26B18FF40);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_24D3F0BA0(v36, v25, &qword_26B18FF40);
      uint64_t v18 = v32;
      v17 -= v31;
      a1 = v35 + 1;
      if (v32 == v35 + 1) {
        goto LABEL_11;
      }
    }
  }
  return result;
}

uint64_t sub_24D6B5150(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v10 = MEMORY[0x270FA5388](v52);
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v14 = MEMORY[0x270FA5388](v11);
  uint64_t v16 = (char *)&v46 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v53 = *(void *)(v20 + 72);
  if (!v53)
  {
    __break(1u);
LABEL_68:
    __break(1u);
LABEL_69:
    __break(1u);
    goto LABEL_70;
  }
  if (a2 - a1 == 0x8000000000000000 && v53 == -1) {
    goto LABEL_68;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v53 == -1) {
    goto LABEL_69;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v53;
  unint64_t v56 = a1;
  unint64_t v55 = a4;
  uint64_t v23 = v21 / v53;
  if (v22 >= v21 / v53)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      uint64_t v25 = v23 * v53;
      uint64_t v19 = v13;
      uint64_t v50 = (char *)v17;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v32 = a4 + v25;
      unint64_t v54 = a4 + v25;
      unint64_t v56 = a2;
      if (v25 < 1 || a1 >= a2) {
        goto LABEL_65;
      }
      uint64_t v34 = -v53;
      unint64_t v47 = a1;
      uint64_t v48 = -v53;
      unint64_t v49 = a4;
      while (1)
      {
        sub_24D415FD0(v32 + v34, (uint64_t)v13, &qword_26B18FF40);
        unint64_t v35 = a2;
        unint64_t v36 = a2 + v34;
        uint64_t v37 = a2 + v34;
        uint64_t v38 = v34;
        uint64_t v16 = v50;
        sub_24D415FD0(v37, (uint64_t)v50, &qword_26B18FF40);
        char v39 = sub_24D6A3078((uint64_t)v13, (uint64_t)v16);
        if (v5) {
          goto LABEL_64;
        }
        char v40 = v39;
        uint64_t v53 = 0;
        unint64_t v51 = a3 + v38;
        sub_24D415F74((uint64_t)v16, &qword_26B18FF40);
        sub_24D415F74((uint64_t)v13, &qword_26B18FF40);
        if (v40)
        {
          unint64_t v41 = a3;
          BOOL v26 = a3 >= v35;
          a3 = v51;
          if (v26 && v51 < v35)
          {
            unint64_t v42 = v49;
            if (v41 != v35) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v42 = v49;
          }
          uint64_t v34 = v48;
          v56 += v48;
        }
        else
        {
          unint64_t v43 = v54;
          v54 += v38;
          unint64_t v44 = a3;
          BOOL v26 = a3 >= v43;
          a3 = v51;
          if (v26 && v51 < v43)
          {
            unint64_t v42 = v49;
            if (v44 != v43) {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v36 = v35;
            uint64_t v34 = v48;
          }
          else
          {
            swift_arrayInitWithTakeFrontToBack();
            unint64_t v36 = v35;
            uint64_t v34 = v48;
            unint64_t v42 = v49;
          }
        }
        unint64_t v32 = v54;
        if (v54 > v42)
        {
          a2 = v36;
          uint64_t v5 = v53;
          if (v36 > v47) {
            continue;
          }
        }
        goto LABEL_65;
      }
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v53;
    if (a4 < a1 || a1 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v51 = a4 + v24;
    unint64_t v54 = a4 + v24;
    BOOL v26 = v24 < 1 || a2 >= a3;
    if (v26) {
      goto LABEL_65;
    }
    while (1)
    {
      sub_24D415FD0(a2, (uint64_t)v19, &qword_26B18FF40);
      sub_24D415FD0(a4, (uint64_t)v16, &qword_26B18FF40);
      char v27 = sub_24D6A3078((uint64_t)v19, (uint64_t)v16);
      if (v5) {
        break;
      }
      char v28 = v27;
      sub_24D415F74((uint64_t)v16, &qword_26B18FF40);
      sub_24D415F74((uint64_t)v19, &qword_26B18FF40);
      unint64_t v29 = v56;
      if (v28)
      {
        unint64_t v30 = a2 + v53;
        if (v56 < a2 || v56 >= v30)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v56 == a2)
        {
          unint64_t v29 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
      }
      else
      {
        unint64_t v31 = v55 + v53;
        if (v56 < v55 || v56 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v56 != v55)
        {
          swift_arrayInitWithTakeBackToFront();
        }
        unint64_t v55 = v31;
        unint64_t v30 = a2;
      }
      unint64_t v56 = v29 + v53;
      a4 = v55;
      if (v55 < v51)
      {
        a2 = v30;
        if (v30 < a3) {
          continue;
        }
      }
      goto LABEL_65;
    }
LABEL_64:
    sub_24D415F74((uint64_t)v16, &qword_26B18FF40);
    sub_24D415F74((uint64_t)v19, &qword_26B18FF40);
LABEL_65:
    sub_24D8F260C(&v56, &v55, (uint64_t *)&v54);
    return 1;
  }
LABEL_70:
  uint64_t result = sub_24DCCAA08();
  __break(1u);
  return result;
}

uint64_t (*sub_24D6B5708(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_24D6B5824(v6, a2, a3);
  return sub_24D6B5770;
}

uint64_t (*sub_24D6B5774(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_24D6B59E4(v6, a2, a3);
  return sub_24D6B5770;
}

void sub_24D6B57DC(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_24D6B5824(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x253328820](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_24D6E5EB4;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_24D6B58A4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x253328820](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_24D6E5EB0;
  }
  __break(1u);
  return result;
}

void (*sub_24D6B5924(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v3 = *(void **)(a3 + 8 * a2 + 32);
    *(void *)uint64_t result = v3;
    id v4 = v3;
    return sub_24D6B598C;
  }
  __break(1u);
  return result;
}

void sub_24D6B598C(id *a1)
{
}

uint64_t (*sub_24D6B5994(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)(a3 + 16) > a2)
  {
    uint64_t v3 = a3 + 16 * a2;
    uint64_t v4 = *(void *)(v3 + 32);
    LOBYTE(v3) = *(unsigned char *)(v3 + 40);
    *(void *)uint64_t result = v4;
    *((unsigned char *)result + 8) = v3;
    return nullsub_1;
  }
  __break(1u);
  return result;
}

uint64_t (*sub_24D6B59E4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x253328820](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_24D6B5A64;
  }
  __break(1u);
  return result;
}

uint64_t sub_24D6B5A64()
{
  return swift_release();
}

uint64_t sub_24D6B5A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(void *)(a6 + 64) = 0;
  *(_OWORD *)(a6 + 32) = 0u;
  *(_OWORD *)(a6 + 48) = 0u;
  *(unsigned char *)(a6 + 72) = 2;
  *(void *)(a6 + 88) = 0;
  *(void *)(a6 + 96) = 0;
  *(void *)(a6 + 80) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_dispatchTimer) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_publishedProgress) = 0;
  uint64_t v12 = (_OWORD *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_complementaryProgressSubscriber);
  *uint64_t v12 = 0u;
  v12[1] = 0u;
  *(void *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_complementaryProgress) = 0;
  uint64_t v13 = OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_log;
  *(void *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_log) = 0;
  id v14 = (id)fpfs_current_log();
  uint64_t v15 = *(void **)(a6 + v13);
  *(void *)(a6 + v13) = v14;

  *(void *)(a6 + 104) = a1;
  *(void *)(a6 + 112) = &off_26FFCD620;
  *(void *)(a6 + 24) = a3;
  *(void *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_dispatchQueue) = a4;
  uint64_t v16 = a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_fileURL;
  uint64_t v17 = sub_24DCC8A58();
  uint64_t v18 = *(void *)(v17 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v16, a2, v17);
  *(void *)(a6 + 16) = MEMORY[0x263F8EE78];
  *(unsigned char *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_needsNotifyGlobalProgress) = 0;
  *(void *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_activeChildProgress) = MEMORY[0x263F8EE88];
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a2, v17);
  *(void *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_fileSizeCache) = MEMORY[0x263F8EE80];
  *(unsigned char *)(a6 + OBJC_IVAR____TtC9libfssync18FPFSGlobalProgress_useComplementaryProgress) = a5;
  return a6;
}

uint64_t sub_24D6B5C14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void **a7)
{
  uint64_t v13 = *a7;
  uint64_t v18 = *(void *)a2;
  uint64_t v12 = v18;
  char v19 = *(unsigned char *)(a2 + 8);
  char v14 = v19;
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = a5;
  v15[3] = a6;
  v15[4] = a1;
  sub_24D46A3CC((uint64_t)&v18, (uint64_t)(v15 + 5));
  v15[7] = a3;
  v15[8] = a4;
  v15[9] = v13;
  swift_retain();
  swift_retain();
  sub_24D40B3C8(a3);
  id v16 = v13;
  sub_24D6A2330(v12, v14, a3, a4, (void (*)(void *))sub_24D6E2F64, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_24D6B5D18(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v3 = *((unsigned char *)a2 + 8);
  uint64_t v5 = *a2;
  char v6 = v3;
  return (*(uint64_t (**)(uint64_t *, uint64_t))(**(void **)(a1 + 24) + 472))(&v5, a3);
}

void *sub_24D6B5DA8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  char v4 = *((unsigned char *)a2 + 8);
  uint64_t v6 = *a2;
  char v7 = v4;
  uint64_t result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(**(void **)(a1 + 32) + 576))(&v6, a3);
  if (v3) {
    return &unk_26FFA3908;
  }
  return result;
}

uint64_t sub_24D6B5E30(uint64_t a1, void **a2, unint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = *a2;
  uint64_t v11 = *(void *)(a1 + 16);
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = v11;
  void v12[3] = v10;
  v12[4] = a4;
  swift_retain();
  id v13 = v10;
  sub_24D6A9380(0xD000000000000017, 0x800000024DD04880, a3, a4, (uint64_t (*)(uint64_t))sub_24D6E343C, (uint64_t)v12, a5, a6);
  return swift_release();
}

uint64_t type metadata accessor for FPDDomainFPFSBackend(uint64_t a1)
{
  return sub_24D3FC810(a1, (uint64_t *)&unk_26B190158);
}

uint64_t sub_24D6B5F28()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_24D6B5F60(void *a1)
{
  sub_24D60CD58(a1, v1);
}

uint64_t sub_24D6B5F68()
{
  return sub_24D60CDB4(v0);
}

uint64_t sub_24D6B5F70(uint64_t a1)
{
  return sub_24D60D060(a1, v1);
}

uint64_t sub_24D6B5F78(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_24DCCA838();
    char v4 = (void **)(a1 + 32);
    type metadata accessor for FPFileTree();
    while (1)
    {
      uint64_t v5 = *v4;
      swift_dynamicCastClassUnconditional();
      uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
      id v7 = v5;
      swift_retain();
      id v8 = objc_msgSend(Strong, sel_provider);

      if (!v8) {
        break;
      }
      id v9 = objc_msgSend(v8, sel_identifier);

      uint64_t v10 = (void *)swift_unknownObjectUnownedLoadStrong();
      id v11 = objc_msgSend(v10, sel_identifier);

      if (!v11)
      {
        __break(1u);
        break;
      }
      objc_msgSend(objc_allocWithZone(MEMORY[0x263F054B8]), sel_initWithProviderID_domainIdentifier_itemIdentifier_, v9, v11, v7);

      swift_release();
      sub_24DCCA808();
      sub_24DCCA848();
      sub_24DCCA858();
      sub_24DCCA818();
      ++v4;
      if (!--v2) {
        return v12;
      }
    }
    uint64_t result = sub_24DCCA978();
    __break(1u);
  }
  return result;
}

uint64_t sub_24D6B618C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v12 = MEMORY[0x263F8EE78];
    sub_24DCCA838();
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C770) - 8);
    uint64_t v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    while (1)
    {
      sub_24D64CD54(v9, a2, &v11);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      sub_24DCCA808();
      sub_24DCCA848();
      sub_24DCCA858();
      sub_24DCCA818();
      v9 += v10;
      if (!--v5) {
        return v12;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24D6B62C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v5)
  {
    uint64_t v14 = MEMORY[0x263F8EE78];
    sub_24DCCA838();
    for (unint64_t i = (void **)(a1 + 32); ; ++i)
    {
      uint64_t v12 = *i;
      uint64_t v10 = v12;
      sub_24D65033C(&v12, a2, a3, (uint64_t)&v11, &v13);

      if (v3) {
        break;
      }
      sub_24DCCA808();
      sub_24DCCA848();
      sub_24DCCA858();
      sub_24DCCA818();
      if (!--v5) {
        return v14;
      }
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_24D6B63CC(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(uint64_t, uint64_t, uint64_t), void (*a7)(uint64_t, void, uint64_t), uint64_t (*a8)(uint64_t, uint64_t, uint64_t))
{
  int64_t v26 = a3 >> 1;
  uint64_t v8 = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v9 = MEMORY[0x263F8EE78];
  if (!v8) {
    return v9;
  }
  uint64_t v10 = result;
  uint64_t v28 = MEMORY[0x263F8EE78];
  uint64_t result = sub_24D3E4C28(0, v8 & ~(v8 >> 63), 0);
  if ((v8 & 0x8000000000000000) == 0)
  {
    uint64_t v21 = v8;
    uint64_t v11 = 0;
    uint64_t v9 = v28;
    for (unint64_t i = (unsigned __int8 *)(v10 + 16 * a2 + 10); ; i += 16)
    {
      uint64_t v13 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        break;
      }
      if (a2 + v11 >= v26 || v11 >= v8) {
        goto LABEL_13;
      }
      uint64_t v14 = *(void *)(i - 10);
      uint64_t v15 = *(i - 2);
      uint64_t v16 = *(i - 1);
      int v17 = *i;
      a6(v14, v15, v16);
      a7(v14, v15 | (v17 << 16) | (v16 << 8), a4);
      sub_24DCC9968();
      swift_bridgeObjectRelease();
      sub_24DCC9968();
      uint64_t result = a8(v14, v15, v16);
      unint64_t v19 = *(void *)(v28 + 16);
      unint64_t v18 = *(void *)(v28 + 24);
      if (v19 >= v18 >> 1) {
        uint64_t result = sub_24D3E4C28(v18 > 1, v19 + 1, 1);
      }
      *(void *)(v28 + 16) = v19 + 1;
      uint64_t v20 = v28 + 16 * v19;
      *(void *)(v20 + 32) = 40;
      *(void *)(v20 + 40) = 0xE100000000000000;
      ++v11;
      uint64_t v8 = v21;
      if (v13 == v21) {
        return v9;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
LABEL_15:
  __break(1u);
  return result;
}

id sub_24D6B6598(long long *a1)
{
  long long v9 = *a1;
  long long v8 = *(long long *)((char *)a1 + 24);
  sub_24D5D7D58((uint64_t)&v9);
  sub_24D5D7D58((uint64_t)&v8);
  uint64_t v2 = (void *)sub_24DCC8B28();
  uint64_t v3 = (void *)sub_24DCC8B28();
  if (*((void *)a1 + 7))
  {
    swift_bridgeObjectRetain();
    char v4 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  id v5 = objc_allocWithZone(MEMORY[0x263F055A8]);
  id v6 = objc_msgSend(v5, sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v2, v3, v4, v8);

  sub_24D5D7D88((uint64_t)&v8);
  sub_24D5D7D88((uint64_t)&v9);
  return v6;
}

uint64_t sub_24D6B6694(uint64_t a1)
{
  uint64_t v2 = sub_24DCC9858();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v5 = &v19[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_OWORD *)unint64_t v19 = *(_OWORD *)a1;
  *(_OWORD *)&v19[9] = *(_OWORD *)(a1 + 9);
  sub_24DCC9868();
  sub_24DCC9848();
  uint64_t v6 = sub_24DCC97F8();
  unint64_t v8 = v7;
  swift_bridgeObjectRelease();
  long long v9 = *(uint64_t (**)(unsigned char *, uint64_t))(v3 + 8);
  uint64_t result = v9(v5, v2);
  if (v8 >> 60 == 15)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(_OWORD *)unint64_t v19 = *(_OWORD *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 64);
  *(void *)&v19[16] = *(void *)(a1 + 56);
  *(void *)&v19[24] = v11;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1995F0);
  sub_24DCC9868();
  sub_24DCC9848();
  uint64_t v12 = sub_24DCC97F8();
  unint64_t v14 = v13;
  swift_bridgeObjectRelease();
  uint64_t result = v9(v5, v2);
  if (v14 >> 60 == 15)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  uint64_t v15 = (void *)sub_24DCC8B28();
  uint64_t v16 = (void *)sub_24DCC8B28();
  if (*(void *)(a1 + 88))
  {
    swift_bridgeObjectRetain();
    int v17 = (void *)sub_24DCC97B8();
    swift_bridgeObjectRelease();
  }
  else
  {
    int v17 = 0;
  }
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F055A8]), sel_initWithContentVersion_metadataVersion_lastEditorDeviceName_, v15, v16, v17);

  sub_24D416034(v12, v14);
  sub_24D416034(v6, v8);
  return (uint64_t)v18;
}

uint64_t sub_24D6B68F8(uint64_t a1, void *a2)
{
  uint64_t v88 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v87 = (uint64_t)v70 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v86 = (uint64_t)v70 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v85 = (uint64_t)v70 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v84 = (uint64_t)v70 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v83 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v74 = (uint64_t)v70 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v73 = (uint64_t)v70 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v72 = (uint64_t)v70 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v71 = (uint64_t)v70 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)v70 - v23;
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v82 = (uint64_t)v70 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v89 = (uint64_t)v70 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v81 = (uint64_t)v70 - v30;
  uint64_t v31 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v31)
  {
    uint64_t v77 = v29;
    v70[1] = v2;
    uint64_t v92 = MEMORY[0x263F8EE78];
    sub_24DCCA838();
    uint64_t result = sub_24DC87F98(a1);
    uint64_t v33 = result;
    uint64_t v35 = v34;
    int v37 = v36 & 1;
    uint64_t v79 = a1;
    uint64_t v80 = a1 + 56;
    uint64_t v78 = v12;
    uint64_t v76 = v24;
    while ((v33 & 0x8000000000000000) == 0 && v33 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(v80 + (((unint64_t)v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v33) & 1) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(a1 + 36) != v35) {
        goto LABEL_27;
      }
      uint64_t v45 = v81;
      sub_24D415FD0(*(void *)(a1 + 48) + *(void *)(v83 + 72) * v33, v81, &qword_26B18FF40);
      uint64_t v46 = v89;
      sub_24D3F0BA0(v45, v89, &qword_26B18FF40);
      uint64_t v47 = v82;
      sub_24D415FD0(v46, v82, &qword_26B18FF40);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_24D3F0BA0(v47, v87, &qword_26B1936E0);
        uint64_t v48 = v73;
        sub_24D415FD0(v46, v73, &qword_26B18FF40);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v49 = v48;
          uint64_t v50 = v86;
          sub_24D3F0BA0(v49, v86, &qword_26B1936E0);
          uint64_t v51 = v77;
          sub_24D89DB98(1, v77);
          sub_24D415F74(v50, &qword_26B1936E0);
        }
        else
        {
          uint64_t v55 = v48;
          uint64_t v56 = v85;
          sub_24D3F0BA0(v55, v85, (uint64_t *)&unk_26B1936D0);
          uint64_t v51 = v77;
          sub_24D89D6E0(1, v77);
          sub_24D415F74(v56, (uint64_t *)&unk_26B1936D0);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v57 = v74;
        sub_24D415FD0(v51, v74, &qword_26B18FF40);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v38 = v86;
          sub_24D3F0BA0(v57, v86, &qword_26B1936E0);
          uint64_t v90 = 0x205046206D6F7266;
          unint64_t v91 = 0xE800000000000000;
          sub_24D89C2BC();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          uint64_t v39 = v90;
          uint64_t v40 = v91;
          sub_24D415F74(v38, &qword_26B1936E0);
        }
        else
        {
          uint64_t v58 = v85;
          sub_24D3F0BA0(v57, v85, (uint64_t *)&unk_26B1936D0);
          uint64_t v90 = 0x205346206D6F7266;
          unint64_t v91 = 0xE800000000000000;
          sub_24D89CCB4();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          uint64_t v39 = v90;
          uint64_t v40 = v91;
          sub_24D415F74(v58, (uint64_t *)&unk_26B1936D0);
        }
        sub_24D415F74(v77, &qword_26B18FF40);
        uint64_t v41 = v39;
        uint64_t v42 = v87;
        sub_24D6A78C0(v88, v41, v40);
        swift_bridgeObjectRelease();
        sub_24D415F74(v42, &qword_26B1936E0);
        uint64_t v24 = v76;
      }
      else
      {
        int v75 = v37;
        sub_24D3F0BA0(v47, v84, (uint64_t *)&unk_26B1936D0);
        uint64_t v52 = v71;
        sub_24D415FD0(v46, v71, &qword_26B18FF40);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v53 = v52;
          uint64_t v54 = v86;
          sub_24D3F0BA0(v53, v86, &qword_26B1936E0);
          sub_24D89DB98(1, (uint64_t)v24);
          sub_24D415F74(v54, &qword_26B1936E0);
        }
        else
        {
          uint64_t v59 = v52;
          uint64_t v60 = v85;
          sub_24D3F0BA0(v59, v85, (uint64_t *)&unk_26B1936D0);
          sub_24D89D6E0(1, (uint64_t)v24);
          sub_24D415F74(v60, (uint64_t *)&unk_26B1936D0);
        }
        swift_storeEnumTagMultiPayload();
        uint64_t v61 = v72;
        sub_24D415FD0((uint64_t)v24, v72, &qword_26B18FF40);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          uint64_t v62 = v86;
          sub_24D3F0BA0(v61, v86, &qword_26B1936E0);
          uint64_t v90 = 0x205046206D6F7266;
          unint64_t v91 = 0xE800000000000000;
          sub_24D89C2BC();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          uint64_t v63 = v90;
          uint64_t v64 = v91;
          uint64_t v65 = v62;
          uint64_t v66 = &qword_26B1936E0;
        }
        else
        {
          uint64_t v67 = v85;
          sub_24D3F0BA0(v61, v85, (uint64_t *)&unk_26B1936D0);
          uint64_t v90 = 0x205346206D6F7266;
          unint64_t v91 = 0xE800000000000000;
          sub_24D89CCB4();
          sub_24DCC9968();
          swift_bridgeObjectRelease();
          uint64_t v63 = v90;
          uint64_t v64 = v91;
          uint64_t v65 = v67;
          uint64_t v66 = (uint64_t *)&unk_26B1936D0;
        }
        sub_24D415F74(v65, v66);
        uint64_t v24 = v76;
        sub_24D415F74((uint64_t)v76, &qword_26B18FF40);
        uint64_t v68 = v63;
        uint64_t v69 = v84;
        sub_24D6A6918(v88, v68, v64);
        swift_bridgeObjectRelease();
        sub_24D415F74(v69, (uint64_t *)&unk_26B1936D0);
        LOBYTE(v37) = v75;
      }
      sub_24D415F74(v89, &qword_26B18FF40);
      sub_24DCCA808();
      sub_24DCCA848();
      sub_24DCCA858();
      sub_24DCCA818();
      a1 = v79;
      uint64_t result = sub_24DC8803C(v33, v35, v37 & 1, v79);
      uint64_t v33 = result;
      uint64_t v35 = v43;
      int v37 = v44 & 1;
      if (!--v31)
      {
        sub_24D4C6A6C(result, v43, v44 & 1);
        return v92;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  return result;
}

uint64_t sub_24D6B7148(uint64_t a1, uint64_t (*a2)(unsigned char *))
{
  uint64_t v16 = MEMORY[0x263F8EE78];
  uint64_t v13 = a1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  uint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v14 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      v6 &= v6 - 1;
      goto LABEL_19;
    }
    if (__OFADD__(v8++, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v8 >= v14) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v13 + 8 * v8);
    if (!v10) {
      break;
    }
LABEL_18:
    uint64_t v6 = (v10 - 1) & v10;
LABEL_19:
    swift_retain_n();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B190330);
    sub_24D3E4A9C(&qword_26986C578, &qword_26B190330);
    sub_24DCCA688();
    uint64_t v12 = a2(v15);
    sub_24D5B3E28((uint64_t)v15);
    if (v2)
    {
      swift_release();
      swift_release();
      return swift_bridgeObjectRelease();
    }
    uint64_t result = swift_release();
    if (v12)
    {
      MEMORY[0x253327CA0](result);
      if (*(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_24DCC9C78();
      }
      sub_24DCC9CD8();
      uint64_t result = sub_24DCC9C48();
    }
  }
  int64_t v11 = v8 + 1;
  if (v8 + 1 >= v14) {
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v13 + 8 * v11);
  if (v10) {
    goto LABEL_17;
  }
  int64_t v11 = v8 + 2;
  if (v8 + 2 >= v14) {
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v13 + 8 * v11);
  if (v10) {
    goto LABEL_17;
  }
  int64_t v11 = v8 + 3;
  if (v8 + 3 >= v14) {
    goto LABEL_29;
  }
  uint64_t v10 = *(void *)(v13 + 8 * v11);
  if (v10) {
    goto LABEL_17;
  }
  int64_t v11 = v8 + 4;
  if (v8 + 4 >= v14)
  {
LABEL_29:
    swift_release();
    return v16;
  }
  uint64_t v10 = *(void *)(v13 + 8 * v11);
  if (v10)
  {
LABEL_17:
    int64_t v8 = v11;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v8 >= v14) {
      goto LABEL_29;
    }
    uint64_t v10 = *(void *)(v13 + 8 * v8);
    ++v11;
    if (v10) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

unint64_t sub_24D6B73E8(unint64_t a1, uint64_t a2, void *a3, unint64_t a4)
{
  unint64_t v8 = a1;
  unint64_t v21 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v9 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9)
  {
    while (1)
    {
      unint64_t v10 = 0;
      uint64_t v18 = v8 & 0xFFFFFFFFFFFFFF8;
      unint64_t v19 = v8 & 0xC000000000000001;
      uint64_t v16 = a2;
      unint64_t v17 = v8;
      while (v19)
      {
        id v11 = (id)MEMORY[0x253328820](v10, v8);
LABEL_9:
        uint64_t v12 = v11;
        unint64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_17;
        }
        id v20 = v11;
        char v14 = sub_24D672898(&v20, a2, a3, a4);
        if (v4)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a4;
        }
        if (v14)
        {
          sub_24DCCA808();
          sub_24DCCA848();
          sub_24DCCA858();
          sub_24DCCA818();
          a2 = v16;
          unint64_t v8 = v17;
        }
        else
        {
        }
        ++v10;
        if (v13 == v9)
        {
          a4 = v21;
          goto LABEL_20;
        }
      }
      if (v10 < *(void *)(v18 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v9 = sub_24DCCA9C8();
      if (!v9) {
        goto LABEL_19;
      }
    }
    id v11 = *(id *)(v8 + 8 * v10 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a4 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return a4;
}

unint64_t sub_24D6B759C(unint64_t a1, void *a2, unint64_t a3)
{
  unint64_t v6 = a1;
  unint64_t v19 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      unint64_t v9 = v6 & 0xC000000000000001;
      unint64_t v16 = v6;
      uint64_t v17 = v6 & 0xFFFFFFFFFFFFFF8;
      uint64_t v15 = v7;
      while (v9)
      {
        id v10 = (id)MEMORY[0x253328820](v8, v6);
LABEL_9:
        id v11 = v10;
        unint64_t v12 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v10;
        char v13 = sub_24D674008(&v18, a2, a3);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return a3;
        }
        if (v13)
        {
          sub_24DCCA808();
          sub_24DCCA848();
          sub_24DCCA858();
          sub_24DCCA818();
          uint64_t v7 = v15;
          unint64_t v6 = v16;
        }
        else
        {
        }
        ++v8;
        if (v12 == v7)
        {
          a3 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v17 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_24DCCA9C8();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v10 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  a3 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return a3;
}

uint64_t sub_24D6B7744(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (a1 >> 62) {
    goto LABEL_23;
  }
  uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v5)
  {
    while (1)
    {
      unint64_t v6 = 0;
      while ((a1 & 0xC000000000000001) != 0)
      {
        id v7 = (id)MEMORY[0x253328820](v6, a1);
LABEL_9:
        unint64_t v8 = v7;
        unint64_t v9 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_22;
        }
        id v10 = objc_msgSend(v7, sel_name);
        if (v10)
        {
          id v11 = v10;
          uint64_t v12 = sub_24DCC97E8();
          uint64_t v14 = v13;

          if (v12 == a2 && v14 == a3)
          {
            swift_bridgeObjectRelease();
LABEL_18:
            sub_24DCCA808();
            sub_24DCCA848();
            sub_24DCCA858();
            sub_24DCCA818();
            goto LABEL_5;
          }
          char v16 = sub_24DCCAE28();
          swift_bridgeObjectRelease();
          if (v16) {
            goto LABEL_18;
          }
        }

LABEL_5:
        ++v6;
        if (v9 == v5) {
          return v19;
        }
      }
      if (v6 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        break;
      }
      __break(1u);
LABEL_22:
      __break(1u);
LABEL_23:
      uint64_t v5 = sub_24DCCA9C8();
      if (!v5) {
        return MEMORY[0x263F8EE78];
      }
    }
    id v7 = *(id *)(a1 + 8 * v6 + 32);
    goto LABEL_9;
  }
  return MEMORY[0x263F8EE78];
}

void sub_24D6B7900(uint64_t a1@<X8>)
{
  sub_24D4F2E78(*(void **)(v1 + 24), a1);
}

uint64_t sub_24D6B791C()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6B7A04()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(void **)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D614E34(v3, v0 + v2, v4);
}

uint64_t sub_24D6B7A94()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D6B7AC0(uint64_t a1)
{
  return sub_24D6E3EF0(a1, sub_24D629C18);
}

uint64_t sub_24D6B7ADC()
{
  return swift_deallocObject();
}

uint64_t sub_24D6B7AEC(uint64_t a1)
{
  return sub_24D62A890(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_24D6B7AF8(void *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(v2 + 16))(*a1, a1[1], a2);
}

uint64_t sub_24D6B7B2C(uint64_t a1)
{
  return sub_24D62AC14(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D6B7B34(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned char *a6, void (*a7)(id, void, void, uint64_t), uint64_t a8)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  int v41 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v11 = sub_24DCC92F8();
  uint64_t v36 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  MEMORY[0x270FA5388](v14);
  char v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a7;
  *(void *)(v17 + 24) = a8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D6D40A8;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v20 = (void *)MEMORY[0x25332B1A0](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      a7(v21, 0, 0, 1);

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v22 = (void *)MEMORY[0x25332B1A0](v19);
    if (v22)
    {
      uint64_t v23 = v22;
      id v33 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_2281;
      uint64_t v24 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v42 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v25 = v33;
      MEMORY[0x2533282B0](0, v16, v13, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
    }
  }
  uint64_t v26 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v27 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v28 = (void *)swift_allocObject();
  id v28[2] = a6;
  v28[3] = sub_24D6D40E0;
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  v28[4] = v18;
  v28[5] = v29;
  v28[6] = v30;
  uint64_t v31 = a6;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8(v39, v40, v41, v26, v27, (uint64_t)sub_24D3E5BC8, (uint64_t)v28);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D6B7FA8()
{
  return 0;
}

uint64_t sub_24D6B81D8()
{
  return 0;
}

uint64_t sub_24D6B8408()
{
  return 0;
}

uint64_t sub_24D6B8524()
{
  return 0;
}

uint64_t sub_24D6B86C0(uint64_t a1, unsigned char *a2, uint64_t a3, void *a4, void *a5, void *a6, void *a7, void *a8, void *a9, uint64_t a10, uint64_t a11)
{
  uint64_t v59 = a4;
  uint64_t v60 = a1;
  uint64_t v17 = sub_24DCC92F8();
  uint64_t v54 = *(void *)(v17 - 8);
  uint64_t v55 = v17;
  MEMORY[0x270FA5388](v17);
  uint64_t v52 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_24DCC9398();
  uint64_t v51 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v50 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v20 = (void *)swift_allocObject();
  uint64_t v58 = a3;
  void v20[2] = a3;
  id v21 = a2;
  uint64_t v22 = v59;
  v20[3] = v59;
  v20[4] = a5;
  uint64_t v61 = a5;
  id v62 = a6;
  v20[5] = a6;
  void v20[6] = a7;
  id v63 = a7;
  id v64 = a8;
  v20[7] = a8;
  v20[8] = a9;
  v20[9] = a10;
  v20[10] = a11;
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_24D6D3ECC;
  *(void *)(v23 + 24) = v20;
  uint64_t v57 = v23;
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v60;
  v24[3] = sub_24D6D3ECC;
  v24[4] = v20;
  uint64_t v25 = &v21[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v26 = (void *)MEMORY[0x25332B1A0](&v21[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_bridgeObjectRetain();
  uint64_t v56 = a11;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v26)
  {
    swift_retain_n();
    uint64_t v27 = v58;
    swift_retain();
    id v28 = v22;
    swift_bridgeObjectRetain();
    id v29 = v62;
    id v30 = v63;
    swift_bridgeObjectRetain();
    if (objc_msgSend(v26, sel_unableToStartup))
    {
      uint64_t v31 = (uint64_t)v28;
      id v32 = sub_24D621D5C();
      sub_24D5A8BF4(v27, v31, v61, (uint64_t)v62, (uint64_t)v63, v64, a9, a10, v56);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  else
  {
    swift_retain_n();
    swift_retain();
    id v33 = v22;
    swift_bridgeObjectRetain();
    id v34 = v62;
    id v35 = v63;
    swift_bridgeObjectRetain();
  }
  uint64_t v36 = v57;
  if ((v21[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v37 = (void *)MEMORY[0x25332B1A0](v25);
    if (v37)
    {
      uint64_t v38 = v37;
      id v64 = objc_msgSend(v37, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_2193;
      uint64_t v39 = _Block_copy(aBlock);
      uint64_t v40 = v50;
      sub_24DCC9348();
      uint64_t v65 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      int v41 = v52;
      uint64_t v42 = v55;
      sub_24DCCA5B8();
      uint64_t v43 = v64;
      MEMORY[0x2533282B0](0, v40, v41, v39);
      _Block_release(v39);

      (*(void (**)(char *, uint64_t))(v54 + 8))(v41, v42);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v40, v53);
    }
  }
  char v44 = *(void **)&v21[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v45 = *(void **)&v21[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v46 = (void *)swift_allocObject();
  v46[2] = v21;
  v46[3] = sub_24D47571C;
  v46[4] = v36;
  v46[5] = sub_24D6D3F20;
  v46[6] = v24;
  uint64_t v47 = v21;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"attachInheritedUserInfo(_:completionHandler:)", 45, 2, v44, v45, (uint64_t)sub_24D3E5BC8, (uint64_t)v46);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6B8C68(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F43736676 && a2 == 0xEB00000000737265;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746E756F436264 && a2 == 0xEA00000000007372 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024DD02EF0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x800000024DD02F10)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_24D6B8E3C(uint64_t a1, unsigned char *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v53 = a2;
  uint64_t v9 = sub_24DCC92F8();
  uint64_t v50 = *(void *)(v9 - 8);
  uint64_t v51 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v48 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_24DCC9398();
  uint64_t v47 = *(void *)(v49 - 8);
  MEMORY[0x270FA5388](v49);
  uint64_t v46 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24DCC8A58();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = (void (*)(void *))swift_allocObject();
  *((void *)v16 + 2) = a3;
  *((void *)v16 + 3) = a4;
  *((void *)v16 + 4) = a5;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = sub_24D6E3E38;
  *(void *)(v17 + 24) = v16;
  uint64_t v52 = v17;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a1, v12);
  unint64_t v18 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v19 = (v14 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  unint64_t v21 = v20 + v18;
  uint64_t v22 = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v21, v15, v12);
  uint64_t v23 = (void (**)(void *))(v22 + v19);
  *uint64_t v23 = sub_24D6E3E38;
  v23[1] = v16;
  uint64_t v24 = v53;
  uint64_t v25 = &v53[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v26 = (void *)MEMORY[0x25332B1A0](&v53[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  id v27 = a3;
  swift_retain();
  id v28 = a5;
  if (v26)
  {
    id v29 = v28;
    if (objc_msgSend(v26, sel_unableToStartup))
    {
      id v30 = sub_24D621D5C();
      sub_24D60D180(v30, v27, a4, v29);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((v24[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v31 = (void *)MEMORY[0x25332B1A0](v25);
    if (v31)
    {
      id v32 = v31;
      id v45 = objc_msgSend(v31, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_4571;
      id v33 = _Block_copy(aBlock);
      id v34 = v46;
      sub_24DCC9348();
      uint64_t v54 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      id v35 = v24;
      uint64_t v36 = v48;
      uint64_t v37 = v51;
      sub_24DCCA5B8();
      uint64_t v38 = v45;
      MEMORY[0x2533282B0](0, v34, v36, v33);
      _Block_release(v33);

      uint64_t v39 = v36;
      uint64_t v24 = v35;
      (*(void (**)(char *, uint64_t))(v50 + 8))(v39, v37);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v49);
    }
  }
  uint64_t v40 = *(void **)&v24[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  int v41 = *(void **)&v24[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v42 = (void *)swift_allocObject();
  void v42[2] = v24;
  v42[3] = sub_24D6E4F84;
  v42[4] = v52;
  v42[5] = sub_24D6B7AC0;
  v42[6] = v22;
  uint64_t v43 = v24;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"copyDatabase(to:completionHandler:)", 35, 2, v40, v41, (uint64_t)sub_24D3E5BC8, (uint64_t)v42);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release();
}

void sub_24D6B93F4(void *a1)
{
  v98[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v84 = sub_24DCC8D88();
  uint64_t v83 = *(void *)(v84 - 8);
  MEMORY[0x270FA5388](v84);
  uint64_t v82 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v87 = (char *)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v88 = (char *)&v77 - v8;
  MEMORY[0x270FA5388](v7);
  uint64_t v89 = (char *)&v77 - v9;
  uint64_t v10 = sub_24DCC8A58();
  unint64_t v91 = *(void **)(v10 - 8);
  uint64_t v92 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v80 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v77 - v13;
  uint64_t v15 = sub_24DCC9078();
  uint64_t v93 = *(void *)(v15 - 8);
  uint64_t v94 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v85 = (char *)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v90 = (char *)&v77 - v18;
  uint64_t v19 = sub_24DCC8698();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)&v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190940);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  uint64_t v24 = (void *)*MEMORY[0x263EFF6A8];
  *(void *)(inited + 32) = *MEMORY[0x263EFF6A8];
  id v25 = v24;
  sub_24D3FB960(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_24DCC88D8();
  if (!v1)
  {
    uint64_t v26 = swift_bridgeObjectRelease();
    MEMORY[0x270FA5388](v26);
    *(&v77 - 2) = a1;
    *(&v77 - 1) = v22;
    sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D6D3DAC);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
    return;
  }
  swift_bridgeObjectRelease();
  uint64_t v86 = 0;
  id v27 = (id)fpfs_current_or_default_log();
  id v28 = v90;
  sub_24DCC9088();
  id v29 = v91;
  id v30 = (void (*)(char *, void *, uint64_t))v91[2];
  uint64_t v79 = a1;
  uint64_t v31 = a1;
  uint64_t v32 = v92;
  v30(v14, v31, v92);
  id v33 = v1;
  id v34 = v1;
  id v35 = sub_24DCC9068();
  os_log_type_t v36 = sub_24DCCA128();
  BOOL v37 = os_log_type_enabled(v35, v36);
  id v95 = v1;
  if (v37)
  {
    uint64_t v38 = swift_slowAlloc();
    uint64_t v77 = (void *)swift_slowAlloc();
    uint64_t v78 = (void *)swift_slowAlloc();
    v98[0] = v78;
    *(_DWORD *)uint64_t v38 = 136315394;
    uint64_t v81 = (void (*)(char *, uint64_t))(v38 + 4);
    uint64_t v39 = (void *)sub_24DCC8948();
    id v40 = objc_msgSend(v39, sel_fp_shortDescription);

    uint64_t v41 = sub_24DCC97E8();
    unint64_t v43 = v42;

    uint64_t v97 = sub_24D418FB4(v41, v43, (uint64_t *)v98);
    sub_24DCCA428();
    swift_bridgeObjectRelease();
    uint64_t v81 = (void (*)(char *, uint64_t))v29[1];
    v81(v14, v32);
    *(_WORD *)(v38 + 12) = 2112;
    swift_getErrorValue();
    id v44 = sub_24DBA2828(v96);
    uint64_t v97 = (uint64_t)v44;
    id v45 = v95;
    sub_24DCCA428();
    uint64_t v46 = v77;
    void *v77 = v44;

    _os_log_impl(&dword_24D3D0000, v35, v36, "Can't unlink %s: %@", (uint8_t *)v38, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
    swift_arrayDestroy();
    MEMORY[0x25332B030](v46, -1, -1);
    uint64_t v47 = v78;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v47, -1, -1);
    MEMORY[0x25332B030](v38, -1, -1);

    uint64_t v48 = *(void (**)(char *, uint64_t))(v93 + 8);
    v48(v90, v94);
  }
  else
  {
    uint64_t v81 = (void (*)(char *, uint64_t))v29[1];
    v81(v14, v32);

    uint64_t v48 = *(void (**)(char *, uint64_t))(v93 + 8);
    v48(v28, v94);
  }
  uint64_t v49 = (uint64_t)v88;
  id v50 = objc_msgSend(self, sel_fp_secureTempDirectory);
  uint64_t v51 = (uint64_t)v87;
  if (v50)
  {
    uint64_t v52 = v50;
    sub_24DCC89E8();

    uint64_t v53 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29[7];
    v53(v51, 0, 1, v32);
  }
  else
  {
    uint64_t v53 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29[7];
    v53((uint64_t)v87, 1, 1, v32);
  }
  sub_24D3F0BA0(v51, v49, (uint64_t *)&unk_26B199050);
  uint64_t v54 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v29[6];
  if (v54(v49, 1, v32) == 1)
  {
    sub_24D415F74(v49, (uint64_t *)&unk_26B199050);
    uint64_t v55 = (uint64_t)v89;
    v53((uint64_t)v89, 1, 1, v32);
  }
  else
  {
    uint64_t v56 = v49;
    uint64_t v57 = v82;
    sub_24DCC8D78();
    sub_24DCC8D08();
    (*(void (**)(char *, uint64_t))(v83 + 8))(v57, v84);
    uint64_t v55 = (uint64_t)v89;
    sub_24DCC8988();
    uint64_t v58 = v91;
    uint64_t v59 = v92;
    swift_bridgeObjectRelease();
    uint64_t v60 = v56;
    uint64_t v61 = v81;
    v81((char *)v60, v59);
    v53(v55, 0, 1, v59);
    if (v54(v55, 1, v59) != 1)
    {
      uint64_t v69 = v80;
      ((void (*)(char *, uint64_t, uint64_t))v58[4])(v80, v55, v59);
      id v70 = objc_msgSend(self, sel_defaultManager);
      sub_24DCC8A18();
      uint64_t v71 = v59;
      uint64_t v72 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      sub_24DCC8A18();
      uint64_t v73 = (void *)sub_24DCC97B8();
      swift_bridgeObjectRelease();
      v98[0] = 0;
      unsigned int v74 = objc_msgSend(v70, sel_moveItemAtPath_toPath_error_, v72, v73, v98);

      if (v74)
      {
        id v75 = v98[0];
        v61(v69, v71);
      }
      else
      {
        id v76 = v98[0];
        sub_24DCC8828();

        swift_willThrow();
        v61(v69, v71);
      }
      return;
    }
  }
  sub_24D415F74(v55, (uint64_t *)&unk_26B199050);
  id v62 = (id)fpfs_current_or_default_log();
  id v63 = v85;
  sub_24DCC9088();
  id v64 = sub_24DCC9068();
  os_log_type_t v65 = sub_24DCCA128();
  BOOL v66 = os_log_type_enabled(v64, v65);
  id v67 = v95;
  if (v66)
  {
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    _os_log_impl(&dword_24D3D0000, v64, v65, "Couldn't get tmp URL for fallback for forceRecursiveRemove", v68, 2u);
    MEMORY[0x25332B030](v68, -1, -1);
  }
  else
  {
  }
  v48(v63, v94);
}

uint64_t sub_24D6B9EEC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v59 = (char *)&v55 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24DCC8CE8();
  uint64_t v60 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v57 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v58 = (char *)&v55 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1922F0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v9 = (char *)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v55 - v10;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_24DCC8A58();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  uint64_t v22 = (char *)&v55 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v55 - v23;
  id v25 = objc_msgSend(self, sel_fp_backupManifestDirectory);
  if (!v25)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    goto LABEL_6;
  }
  uint64_t v26 = v25;
  uint64_t v56 = v2;
  sub_24DCC89E8();

  id v27 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
  v27(v14, v22, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v14, 0, 1, v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
LABEL_6:
    id v34 = (uint64_t *)&unk_26B199050;
LABEL_7:
    sub_24D415F74((uint64_t)v14, v34);
    return 0;
  }
  v27(v24, v14, v15);
  sub_24DCC8988();
  id v28 = objc_msgSend(self, sel_defaultManager);
  sub_24DCC8A18();
  id v29 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  unsigned int v30 = objc_msgSend(v28, sel_fileExistsAtPath_, v29);

  if (!v30)
  {
    os_log_type_t v36 = *(void (**)(char *, uint64_t))(v16 + 8);
    v36(v19, v15);
    v36(v24, v15);
    return 0;
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190940);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  uint64_t v32 = (void *)*MEMORY[0x263EFF610];
  *(void *)(inited + 32) = *MEMORY[0x263EFF610];
  id v33 = v32;
  sub_24D3FB960(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  sub_24DCC88D8();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_24DCC8698();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v11, 0, 1, v37);
  uint64_t v38 = v56;
  sub_24D415FD0((uint64_t)v11, (uint64_t)v9, (uint64_t *)&unk_26B1922F0);
  sub_24DCC8698();
  uint64_t v39 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v9, 1, v37) == 1)
  {
    sub_24D415F74((uint64_t)v9, (uint64_t *)&unk_26B1922F0);
    uint64_t v14 = v59;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v60 + 56))(v59, 1, 1, v38);
LABEL_13:
    sub_24D415F74((uint64_t)v11, (uint64_t *)&unk_26B1922F0);
    unint64_t v43 = *(void (**)(char *, uint64_t))(v16 + 8);
    v43(v19, v15);
    v43(v24, v15);
    id v34 = (uint64_t *)&unk_26B196B10;
    goto LABEL_7;
  }
  id v40 = v59;
  sub_24DCC85F8();
  uint64_t v14 = v40;
  uint64_t v41 = v56;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v37);
  uint64_t v42 = v60;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v14, 1, v41) == 1) {
    goto LABEL_13;
  }
  id v44 = v58;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v58, v14, v41);
  id v45 = v57;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v47 = v46;
  uint64_t v48 = *(uint64_t (**)(char *, uint64_t))(v42 + 8);
  uint64_t result = v48(v45, v41);
  double v49 = v47 * 1000000000.0;
  if ((~COERCE__INT64(v47 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v49 <= -9.22337204e18)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  if (v49 >= 9.22337204e18)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v45, v44, v41);
  sub_24DCC8C88();
  double v51 = v50;
  uint64_t result = v48(v45, v41);
  double v52 = v51 * 1000000000.0;
  if ((~COERCE__INT64(v51 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  if (v52 <= -9.22337204e18)
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (v52 >= 9.22337204e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v53 = (uint64_t)v52;
  v48(v58, v41);
  sub_24D415F74((uint64_t)v11, (uint64_t *)&unk_26B1922F0);
  uint64_t v54 = *(void (**)(char *, uint64_t))(v16 + 8);
  v54(v19, v15);
  v54(v24, v15);
  uint64_t result = (uint64_t)v49 - v53;
  if (__OFSUB__((uint64_t)v49, v53)) {
LABEL_28:
  }
    __break(1u);
  return result;
}

uint64_t sub_24D6BA72C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned char *a6, void *a7, uint64_t a8)
{
  uint64_t v39 = a4;
  uint64_t v40 = a5;
  int v43 = a3;
  uint64_t v41 = a1;
  uint64_t v42 = a2;
  uint64_t v11 = sub_24DCC92F8();
  uint64_t v37 = *(void *)(v11 - 8);
  uint64_t v38 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v35 = *(void *)(v14 - 8);
  uint64_t v36 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a7;
  *(void *)(v17 + 24) = a8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D6E4F44;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v20 = (void *)MEMORY[0x25332B1A0](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  id v21 = a7;
  swift_retain();
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      id v22 = sub_24D621D5C();
      sub_24D3EA070((uint64_t)v21, a8);

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v23 = (void *)MEMORY[0x25332B1A0](v19);
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_2100;
      uint64_t v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v44 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v27 = v38;
      sub_24DCCA5B8();
      MEMORY[0x2533282B0](0, v16, v13, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v27);
      (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v36);
    }
  }
  id v28 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v29 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  unsigned int v30 = (void *)swift_allocObject();
  void v30[2] = a6;
  void v30[3] = sub_24D4729FC;
  uint64_t v31 = v39;
  uint64_t v32 = v40;
  v30[4] = v18;
  v30[5] = v31;
  v30[6] = v32;
  id v33 = a6;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8(v41, v42, v43, v28, v29, (uint64_t)sub_24D3E5BC8, (uint64_t)v30);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D6BAB9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned char *a6, void (**a7)(void, void, void))
{
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  int v49 = a3;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v9 = sub_24DCC92F8();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24DCC9398();
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v20 = (char *)&v41 - v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a7;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_24D6E4F2C;
  *(void *)(v22 + 24) = v21;
  uint64_t v23 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v24 = (void *)MEMORY[0x25332B1A0](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a7);
  if (v24)
  {
    if (objc_msgSend(v24, sel_unableToStartup))
    {
      id v25 = sub_24D621D5C();
      uint64_t v26 = sub_24DCC8A58();
      uint64_t v27 = *(void *)(v26 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v20, 1, 1, v26);
      sub_24D415FD0((uint64_t)v20, (uint64_t)v18, (uint64_t *)&unk_26B199050);
      id v28 = 0;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v18, 1, v26) != 1)
      {
        id v28 = (void *)sub_24DCC8948();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v26);
      }
      id v29 = (void *)sub_24DCC8818();
      ((void (**)(void, void *, void *))a7)[2](a7, v28, v29);

      sub_24D415F74((uint64_t)v20, (uint64_t *)&unk_26B199050);
      swift_release_n();
      swift_release();

      return;
    }
  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    unsigned int v30 = (void *)MEMORY[0x25332B1A0](v23);
    if (v30)
    {
      uint64_t v31 = v30;
      id v32 = objc_msgSend(v30, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1866;
      id v33 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v50 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v34 = v44;
      sub_24DCCA5B8();
      MEMORY[0x2533282B0](0, v14, v11, v33);
      _Block_release(v33);

      (*(void (**)(char *, uint64_t))(v43 + 8))(v11, v34);
      (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v42);
    }
  }
  uint64_t v35 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v36 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = a6;
  v37[3] = sub_24D6D2ED0;
  uint64_t v38 = v45;
  uint64_t v39 = v46;
  v37[4] = v22;
  v37[5] = v38;
  v37[6] = v39;
  uint64_t v40 = a6;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8(v47, v48, v49, v35, v36, (uint64_t)sub_24D3E5BC8, (uint64_t)v37);
  swift_release_n();
  swift_release();
  swift_release();
}

uint64_t sub_24D6BB16C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned char *a6, void (*a7)(void, id), uint64_t a8)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  int v41 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v11 = sub_24DCC92F8();
  uint64_t v36 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a7;
  *(void *)(v17 + 24) = a8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D6E4F8C;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v20 = (void *)MEMORY[0x25332B1A0](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      a7(0, v21);

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v22 = (void *)MEMORY[0x25332B1A0](v19);
    if (v22)
    {
      uint64_t v23 = v22;
      id v33 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_4039;
      uint64_t v24 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v42 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      id v25 = v33;
      MEMORY[0x2533282B0](0, v16, v13, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
    }
  }
  uint64_t v26 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v27 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v28 = (void *)swift_allocObject();
  id v28[2] = a6;
  v28[3] = sub_24D6C91F0;
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  v28[4] = v18;
  v28[5] = v29;
  v28[6] = v30;
  uint64_t v31 = a6;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8(v39, v40, v41, v26, v27, (uint64_t)sub_24D3E5BC8, (uint64_t)v28);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void sub_24D6BB5DC(uint64_t a1, id a2, int a3, uint64_t a4, uint64_t a5, unsigned char *a6, void (**a7)(void, void, void, void))
{
  uint64_t v48 = a4;
  uint64_t v49 = a5;
  LODWORD(v52) = a3;
  uint64_t v50 = a1;
  id v51 = a2;
  uint64_t v9 = sub_24DCC92F8();
  uint64_t v46 = *(void *)(v9 - 8);
  uint64_t v47 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v44 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_24DCC9398();
  uint64_t v43 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = a7;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_24D6E5F10;
  *(void *)(v20 + 24) = v19;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_24D6D259C;
  *(void *)(v21 + 24) = v20;
  uint64_t v22 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v23 = (void *)MEMORY[0x25332B1A0](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a7);
  swift_retain();
  if (v23)
  {
    if (objc_msgSend(v23, sel_unableToStartup))
    {
      uint64_t v52 = v19;
      id v51 = sub_24D621D5C();
      uint64_t v24 = sub_24DCC8A58();
      uint64_t v25 = *(void *)(v24 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56))(v18, 1, 1, v24);
      sub_24D415FD0((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_26B199050);
      int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48))(v16, 1, v24);
      _Block_copy(a7);
      uint64_t v27 = 0;
      if (v26 != 1)
      {
        uint64_t v27 = (void *)sub_24DCC8948();
        (*(void (**)(char *, uint64_t))(v25 + 8))(v16, v24);
      }
      id v28 = v51;
      uint64_t v29 = (void *)sub_24DCC8818();
      ((void (**)(void, void, void *, void *))a7)[2](a7, 0, v27, v29);

      _Block_release(a7);
      sub_24D415F74((uint64_t)v18, (uint64_t *)&unk_26B199050);

      swift_release();
      swift_release_n();
      swift_release();

      return;
    }
  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v30 = (void *)MEMORY[0x25332B1A0](v22);
    if (v30)
    {
      uint64_t v31 = v30;
      id v42 = objc_msgSend(v30, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1788;
      id v32 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v53 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      id v33 = v44;
      uint64_t v34 = v47;
      sub_24DCCA5B8();
      uint64_t v35 = v42;
      MEMORY[0x2533282B0](0, v12, v33, v32);
      _Block_release(v32);

      (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v34);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v12, v45);
    }
  }
  uint64_t v36 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v37 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v38 = (void *)swift_allocObject();
  void v38[2] = a6;
  v38[3] = sub_24D6D25C8;
  uint64_t v39 = v48;
  uint64_t v40 = v49;
  v38[4] = v21;
  v38[5] = v39;
  v38[6] = v40;
  int v41 = a6;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8(v50, (uint64_t)v51, v52, v36, v37, (uint64_t)sub_24D3E5BC8, (uint64_t)v38);
  swift_release();
  swift_release_n();
  swift_release();
  swift_release();
}

void sub_24D6BBC20(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned char *a6, void (*a7)(void, char *, id), uint64_t a8)
{
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  int v45 = a3;
  uint64_t v43 = a1;
  uint64_t v44 = a2;
  uint64_t v11 = sub_24DCC92F8();
  uint64_t v39 = *(void *)(v11 - 8);
  uint64_t v40 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v37 = *(void *)(v14 - 8);
  uint64_t v38 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a7;
  *(void *)(v20 + 24) = a8;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_24D6E5A74;
  *(void *)(v21 + 24) = v20;
  uint64_t v22 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v23 = (void *)MEMORY[0x25332B1A0](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  if (v23)
  {
    if (objc_msgSend(v23, sel_unableToStartup))
    {
      id v24 = sub_24D621D5C();
      uint64_t v25 = sub_24DCC8A58();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v19, 1, 1, v25);
      a7(0, v19, v24);
      sub_24D415F74((uint64_t)v19, (uint64_t *)&unk_26B199050);

      swift_release_n();
      swift_release();

      return;
    }
  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    int v26 = (void *)MEMORY[0x25332B1A0](v22);
    if (v26)
    {
      uint64_t v27 = v26;
      id v28 = objc_msgSend(v26, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_4055;
      uint64_t v29 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v46 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v30 = v40;
      sub_24DCCA5B8();
      MEMORY[0x2533282B0](0, v16, v13, v29);
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v30);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v16, v38);
    }
  }
  uint64_t v31 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v32 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v33 = (void *)swift_allocObject();
  v33[2] = a6;
  v33[3] = sub_24D6E5F08;
  uint64_t v34 = v41;
  uint64_t v35 = v42;
  v33[4] = v21;
  v33[5] = v34;
  v33[6] = v35;
  uint64_t v36 = a6;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8(v43, v44, v45, v31, v32, (uint64_t)sub_24D3E5BC8, (uint64_t)v33);
  swift_release_n();
  swift_release();
  swift_release();
}

uint64_t sub_24D6BC12C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned char *a6, void (*a7)(void, void, id), uint64_t a8)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  int v41 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v11 = sub_24DCC92F8();
  uint64_t v36 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a7;
  *(void *)(v17 + 24) = a8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D6D9868;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v20 = (void *)MEMORY[0x25332B1A0](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      a7(0, 0, v21);

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v22 = (void *)MEMORY[0x25332B1A0](v19);
    if (v22)
    {
      uint64_t v23 = v22;
      id v33 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_3100;
      id v24 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v42 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v25 = v33;
      MEMORY[0x2533282B0](0, v16, v13, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
    }
  }
  int v26 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v27 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v28 = (void *)swift_allocObject();
  id v28[2] = a6;
  v28[3] = sub_24D6D3024;
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  v28[4] = v18;
  v28[5] = v29;
  v28[6] = v30;
  uint64_t v31 = a6;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8(v39, v40, v41, v26, v27, (uint64_t)sub_24D3E5BC8, (uint64_t)v28);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D6BC5A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, unsigned char *a6, void (*a7)(void, void, void, id), uint64_t a8)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  int v41 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  uint64_t v11 = sub_24DCC92F8();
  uint64_t v36 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_24DCC9398();
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a7;
  *(void *)(v17 + 24) = a8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = sub_24D6D43C8;
  *(void *)(v18 + 24) = v17;
  uint64_t v19 = &a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v20 = (void *)MEMORY[0x25332B1A0](&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      a7(0, 0, 0, v21);

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  if ((a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v22 = (void *)MEMORY[0x25332B1A0](v19);
    if (v22)
    {
      uint64_t v23 = v22;
      id v33 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_2358;
      id v24 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v42 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v25 = v33;
      MEMORY[0x2533282B0](0, v16, v13, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v11);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
    }
  }
  int v26 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v27 = *(void **)&a6[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v28 = (void *)swift_allocObject();
  id v28[2] = a6;
  v28[3] = sub_24D6D43CC;
  uint64_t v29 = v37;
  uint64_t v30 = v38;
  v28[4] = v18;
  v28[5] = v29;
  v28[6] = v30;
  uint64_t v31 = a6;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8(v39, v40, v41, v26, v27, (uint64_t)sub_24D3E5BC8, (uint64_t)v28);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D6BCA18(uint64_t a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24DCC9398();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8A58();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D5B3F9C;
  *(void *)(v14 + 24) = v13;
  uint64_t v43 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
  uint64_t v18 = (void *)(v17 + v16);
  *uint64_t v18 = sub_24D5B3F9C;
  v18[1] = v13;
  uint64_t v19 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v20 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      uint64_t v22 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v22);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v23 = (void *)MEMORY[0x25332B1A0](v19);
    if (v23)
    {
      id v24 = v23;
      id v36 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_2176;
      uint64_t v25 = _Block_copy(aBlock);
      int v26 = v37;
      sub_24DCC9348();
      uint64_t v44 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v27 = v39;
      uint64_t v28 = v42;
      sub_24DCCA5B8();
      uint64_t v29 = v36;
      MEMORY[0x2533282B0](0, v26, v27, v25);
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v28);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v40);
    }
  }
  uint64_t v30 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v31 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v32 = (void *)swift_allocObject();
  void v32[2] = a2;
  v32[3] = sub_24D6E4F84;
  v32[4] = v43;
  v32[5] = sub_24D6B7AC0;
  v32[6] = v17;
  id v33 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"copyDatabase(to:completionHandler:)", 35, 2, v30, v31, (uint64_t)sub_24D3E5BC8, (uint64_t)v32);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release();
}

uint64_t sub_24D6BD374()
{
  return objectdestroy_32Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6BD390(uint64_t a1)
{
  return sub_24D62BA58(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_24D6BD39C()
{
  return objectdestroy_46Tm();
}

void sub_24D6BD3A4(uint64_t a1)
{
  sub_24D62C6D8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_24D6BD3B8(uint64_t a1)
{
  sub_24D62CD1C(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_24D6BD3C8()
{
  sub_24D62D62C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40));
}

void sub_24D6BD3EC(void *a1, unsigned __int8 a2)
{
  if (a2 != 255) {
    sub_24D6D9EB8(a1, a2 & 1, MEMORY[0x263F8EEA0]);
  }
}

void sub_24D6BD42C(char *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = 1;
  if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_invalidated) & 1) == 0)
  {
    *(unsigned char *)(v3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_invalidated) = 1;
    if ((*(unsigned char *)(v3 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started) & 1) == 0) {
      dispatch_group_leave(*(dispatch_group_t *)(v3
    }
                                               + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_initializationGroup));
    char v4 = 0;
  }
  *a1 = v4;
}

uint64_t sub_24D6BD498()
{
  return sub_24D6300FC(*(char **)(v0 + 16));
}

void sub_24D6BD4B4(uint64_t a1, void *a2)
{
  sub_24D633C30(a1, a2, *(unsigned __int8 *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_24D6BD4D4()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6BD4F0(uint64_t a1)
{
  return sub_24D6371AC(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24));
}

uint64_t sub_24D6BD504(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D6379B8);
}

uint64_t sub_24D6BD520()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6BD558()
{
  return objectdestroy_104Tm();
}

uint64_t sub_24D6BD560(uint64_t a1)
{
  return sub_24D638284(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6BD570()
{
  return objectdestroy_46Tm();
}

uint64_t sub_24D6BD578(uint64_t a1)
{
  return sub_24D638950(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24D6BD588()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  uint64_t v5 = (v4 & 0xFFFFFFFFFFFFFFF8) + v0;
  unint64_t v6 = ((v4 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6BD658()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = v2 + *(void *)(v1 + 64);
  unint64_t v4 = ((v3 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v2;
  int v6 = *(unsigned __int8 *)(v0 + v3);
  uint64_t v7 = *(void **)((v3 & 0xFFFFFFFFFFFFFFF8) + v0 + 8);
  uint64_t v8 = *(void *)(v0 + v4);
  uint64_t v9 = v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void (**)(void, void))v9;
  uint64_t v11 = *(void *)(v9 + 8);

  return sub_24D63BA4C(v5, v6, v7, v8, v10, v11);
}

uint64_t sub_24D6BD704()
{
  return swift_deallocObject();
}

uint64_t sub_24D6BD754(uint64_t a1)
{
  return sub_24D6E3EF0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24D63F05C);
}

uint64_t sub_24D6BD770@<X0>(uint64_t a1@<X8>)
{
  return sub_24D6D25D4(a1);
}

uint64_t sub_24D6BD7A4@<X0>(void *a1@<X8>)
{
  return sub_24D5E5D8C(*(void *)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_24D6BD7C4()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);

  unint64_t v3 = (char *)v0 + v2;
  uint64_t v4 = sub_24DCC8FC8();
  (*(void (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6BD8E4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (void *)v1[2];
  int v6 = (void *)v1[3];
  uint64_t v7 = (void *)v1[4];
  uint64_t v8 = (uint64_t)v1 + v4;
  uint64_t v9 = (void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = *v9;
  uint64_t v11 = v9[1];

  return sub_24D644CA4(a1, v5, v6, v7, v8, v10, v11);
}

void sub_24D6BD994(uint64_t a1)
{
  sub_24D647638(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_24D6BD9C0(uint64_t a1)
{
  return sub_24D6D5B74(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24D649310);
}

uint64_t sub_24D6BD9DC(uint64_t a1, void *a2, void *a3)
{
  return (*(uint64_t (**)(uint64_t, void, void))(v3 + 16))(a1, *a2, *a3);
}

uint64_t sub_24D6BDA0C()
{
  return objectdestroy_104Tm();
}

uint64_t sub_24D6BDA18()
{
  uint64_t v1 = sub_24DCC8A58();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_24D6BDAA8()
{
  sub_24DCC8A58();

  return sub_24D64B420();
}

uint64_t sub_24D6BDB1C(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void, void, uint64_t))(v1 + 16))(MEMORY[0x263F8EE78], MEMORY[0x263F8EE78], 0, 0, 0, a1);
}

uint64_t sub_24D6BDB60()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6BDB7C(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D64BD64);
}

uint64_t sub_24D6BDB98()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_24D6BDBC4(uint64_t a1)
{
  return sub_24D64D558(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D6BDBD0()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6BDBEC(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D64F614);
}

uint64_t sub_24D6BDC08()
{
  return (*(uint64_t (**)(void, void, double))(v0 + 16))(0, 0, 0.0);
}

uint64_t sub_24D6BDC3C()
{
  return objectdestroy_294Tm();
}

uint64_t sub_24D6BDC44(uint64_t a1)
{
  return sub_24D651618(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_24D6BDC54(void *a1)
{
  return sub_24D654AF4(a1, *(uint64_t (**)(void, void))(v1 + 16), *(void *)(v1 + 24), "state - asyncWithSyncEngine error: %@.");
}

uint64_t sub_24D6BDC78(uint64_t a1)
{
  return sub_24D654A08(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D6BDC84()
{
  return objectdestroy_46Tm();
}

void sub_24D6BDC8C(uint64_t a1)
{
  sub_24D6551A8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24D6BDC9C()
{
  return objectdestroy_104Tm();
}

void sub_24D6BDCA4()
{
  sub_24D6553D8(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D6BDCB0(uint64_t a1)
{
  return sub_24D655F94(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24D6BDCBC(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24D6BDD00()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6BDD1C()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6BDD38(uint64_t a1)
{
  return sub_24D65A5E4(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24D6BDD48@<X0>(uint64_t *a1@<X8>)
{
  return sub_24D65BABC(*(void **)(v1 + 16), a1);
}

void *sub_24D6BDD78@<X0>(void *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

uint64_t sub_24D6BDDBC()
{
  return objectdestroy_46Tm();
}

uint64_t sub_24D6BDDC4(uint64_t a1)
{
  return sub_24D65C568(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24D6BDDD0()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6BDDEC(void *a1, uint64_t a2)
{
  return sub_24D65FDA8(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_24D6BDDF8()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6BDE20(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D663988);
}

uint64_t sub_24D6BDE38(uint64_t a1, char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D5B3F9C;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = sub_24D5B3F9C;
  v14[4] = v12;
  v14[5] = a1;
  unint64_t v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  unint64_t v16 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  uint64_t v17 = a2;
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v18 = sub_24D621D5C();
      uint64_t v19 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v19);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v17[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v20 = (void *)MEMORY[0x25332B1A0](v15);
    if (v20)
    {
      id v21 = v20;
      id v30 = objc_msgSend(v20, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1998;
      uint64_t v22 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v35 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v23 = v34;
      sub_24DCCA5B8();
      id v24 = v30;
      MEMORY[0x2533282B0](0, v11, v8, v22);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v23);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
    }
  }
  uint64_t v25 = *(void **)&v17[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  int v26 = *(void **)&v17[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v17;
  v27[3] = sub_24D6E4F84;
  v27[4] = v13;
  v27[5] = sub_24D6E4FC4;
  v27[6] = v14;
  uint64_t v28 = v17;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"reindexAllItems(with:completionHandler:)", 40, 2, v25, v26, (uint64_t)sub_24D3E5BC8, (uint64_t)v27);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6BE2EC(uint64_t a1, char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D5B3F9C;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a2;
  v14[3] = sub_24D5B3F9C;
  v14[4] = v12;
  v14[5] = a1;
  unint64_t v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  unint64_t v16 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  uint64_t v17 = a2;
  swift_bridgeObjectRetain();
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v18 = sub_24D621D5C();
      uint64_t v19 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v19);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v17[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v20 = (void *)MEMORY[0x25332B1A0](v15);
    if (v20)
    {
      id v21 = v20;
      id v30 = objc_msgSend(v20, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1979;
      uint64_t v22 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v35 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v23 = v34;
      sub_24DCCA5B8();
      id v24 = v30;
      MEMORY[0x2533282B0](0, v11, v8, v22);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v23);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
    }
  }
  uint64_t v25 = *(void **)&v17[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  int v26 = *(void **)&v17[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = v17;
  v27[3] = sub_24D6E4F84;
  v27[4] = v13;
  v27[5] = sub_24D6E4FC0;
  v27[6] = v14;
  uint64_t v28 = v17;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"reindexItems(with:identifiers:completionHandler:)", 49, 2, v25, v26, (uint64_t)sub_24D3E5BC8, (uint64_t)v27);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6BE7A8()
{
  uint64_t v87 = *MEMORY[0x263EF8340];
  uint64_t v0 = sub_24DCC8D88();
  uint64_t v67 = *(void *)(v0 - 8);
  uint64_t v68 = v0;
  MEMORY[0x270FA5388](v0);
  BOOL v66 = (char *)&v61 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_24DCC8CE8();
  uint64_t v74 = *(void *)(v2 - 8);
  uint64_t v75 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v73 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_24DCC8288();
  uint64_t v76 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_24DCC82A8();
  uint64_t v82 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8A58();
  uint64_t v77 = *(void *)(v9 - 8);
  uint64_t v78 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v83 = (char *)&v61 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v80 = (char *)&v61 - v12;
  id v81 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08850]), sel_init);
  memset(&v86, 0, 28);
  memset(&v86.st_atimespec, 0, 112);
  sub_24DCC8A18();
  uint64_t v13 = sub_24DCC9898();
  swift_bridgeObjectRelease();
  int v14 = lstat((const char *)(v13 + 32), &v86);
  swift_release();
  if (!v14)
  {
    int st_mode = v86.st_mode;
    int v16 = sub_24DCC9118() & st_mode;
    if (v16 == (unsigned __int16)sub_24DCC9118())
    {
      sub_24DCC8A18();
      uint64_t v17 = sub_24DCC9898();
      swift_bridgeObjectRelease();
      unlink((const char *)(v17 + 32));
      swift_release();
    }
  }
  sub_24DCC8A18();
  fpfs_openflags_0(0x100000);
  sub_24DCC9898();
  unsigned int v18 = fpfs_lp_openat();
  uint64_t v19 = swift_release();
  if ((v18 & 0x80000000) != 0)
  {
    int v50 = MEMORY[0x253327160](v19);
    sub_24D90CF14(v50, 1, 0, 0xAu);
    swift_willThrow();

    return swift_bridgeObjectRelease();
  }
  else
  {
    unsigned int v72 = v18;
    swift_bridgeObjectRelease();
    uint64_t v20 = sub_24DCC8918();
    uint64_t v69 = v4;
    id v21 = v8;
    uint64_t v22 = v20;
    uint64_t v24 = v23;
    uint64_t v25 = sub_24DCC8918();
    int v26 = v6;
    uint64_t v28 = v27;
    sub_24DCC89A8();
    sub_24DCC89A8();
    uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C6E0);
    uint64_t inited = swift_initStackObject();
    long long v63 = xmmword_24DCCECE0;
    *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
    uint64_t v65 = v22;
    *(void *)(inited + 32) = v22;
    *(void *)(inited + 40) = v24;
    id v30 = v21;
    uint64_t v61 = v25;
    *(void *)(inited + 48) = v25;
    *(void *)(inited + 56) = v28;
    uint64_t v71 = v24;
    swift_bridgeObjectRetain();
    uint64_t v70 = v28;
    uint64_t v31 = v26;
    swift_bridgeObjectRetain();
    sub_24D429200(inited);
    sub_24DCC8158();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    uint64_t v32 = sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
    uint64_t v33 = v79;
    sub_24DCC8808();
    uint64_t v34 = sub_24DCC8128();
    uint64_t v35 = *(void (**)(char *, uint64_t))(v82 + 8);
    v82 += 8;
    id v62 = v35;
    v35(v21, v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    id v36 = (id)v34;
    sub_24DCC8178();
    sub_24D3EA320((unint64_t *)&qword_26B1943D0, MEMORY[0x263F06038]);
    uint64_t v37 = v69;
    LOBYTE(v34) = sub_24DCC86A8();

    (*(void (**)(char *, uint64_t))(v76 + 8))(v31, v37);
    if (v34) {
      goto LABEL_8;
    }
    id v38 = v36;
    LODWORD(v84) = sub_24DCC8328();
    sub_24D4C5C60();
    char v39 = sub_24DCC86A8();

    if ((v39 & 1) != 0
      || (id v40 = v38,
          LODWORD(v84) = sub_24DCC83F8(),
          char v41 = sub_24DCC86A8(),
          v40,
          (v41 & 1) != 0))
    {
LABEL_8:
      uint64_t v76 = v32;

      MEMORY[0x270FA5388](v42);
      uint64_t v43 = v83;
      *(&v61 - 2) = (uint64_t)v81;
      *(&v61 - 1) = (uint64_t)v43;
      uint64_t v44 = (uint64_t)v73;
      sub_24DCC8CD8();
      uint64_t v45 = v61;
      uint64_t v46 = v70;
      uint64_t v47 = sub_24DB93544(v44, sub_24D6DC44C, (uint64_t)(&v61 - 4));
      uint64_t v49 = v48;
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v44, v75);
      if (v49)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v84 = v45;
        uint64_t v85 = v46;
        sub_24DCC9968();
        uint64_t v52 = v66;
        sub_24DCC8D78();
        sub_24DCC8D08();
        (*(void (**)(char *, uint64_t))(v67 + 8))(v52, v68);
        sub_24DCC9968();
        swift_bridgeObjectRelease();
        uint64_t v47 = v84;
        uint64_t v49 = v85;
      }
      uint64_t v53 = swift_initStackObject();
      *(_OWORD *)(v53 + 16) = v63;
      uint64_t v54 = v71;
      *(void *)(v53 + 32) = v65;
      *(void *)(v53 + 40) = v54;
      *(void *)(v53 + 48) = v47;
      *(void *)(v53 + 56) = v49;
      sub_24D429200(v53);
      sub_24DCC8158();
      sub_24D5F77E0(MEMORY[0x263F8EE78]);
      uint64_t v55 = v79;
      sub_24DCC8808();
      sub_24DCC8128();
      v62(v30, v55);
      swift_willThrow();
      uint64_t v56 = v78;
      uint64_t v57 = *(void (**)(char *, uint64_t))(v77 + 8);
      v57(v80, v78);
      swift_bridgeObjectRelease();

      uint64_t v58 = v83;
      uint64_t v59 = v56;
    }
    else
    {
      uint64_t v60 = v78;
      uint64_t v57 = *(void (**)(char *, uint64_t))(v77 + 8);
      v57(v80, v78);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v58 = v83;
      uint64_t v59 = v60;
    }
    v57(v58, v59);
    return sub_24D40CB10(v72);
  }
}

uint64_t sub_24D6BF070(uint64_t a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v41 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_24DCC9078();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  if (*(void *)(a1 + 16))
  {
    uint64_t v38 = v6;
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = sub_24D5B3F9C;
    *(void *)(v17 + 24) = v16;
    unsigned int v18 = (void *)swift_allocObject();
    void v18[2] = a1;
    v18[3] = sub_24D5B3F9C;
    v18[4] = v16;
    uint64_t v19 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
    uint64_t v20 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
    swift_retain_n();
    _Block_copy(a3);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v20)
    {
      if (objc_msgSend(v20, sel_unableToStartup))
      {
        id v21 = sub_24D621D5C();
        uint64_t v22 = (void *)sub_24DCC8818();
        ((void (**)(void, void *))a3)[2](a3, v22);

        swift_release();
        swift_release();

LABEL_13:
        swift_release();
        return swift_release();
      }
    }
    if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
    {
      uint64_t v27 = (void *)MEMORY[0x25332B1A0](v19);
      if (v27)
      {
        uint64_t v28 = v27;
        id v37 = objc_msgSend(v27, sel_serialQueue);

        aBlock[4] = nullsub_1;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24D3D2E94;
        aBlock[3] = &block_descriptor_1959;
        uint64_t v29 = _Block_copy(aBlock);
        sub_24DCC9348();
        uint64_t v42 = MEMORY[0x263F8EE78];
        sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
        sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
        uint64_t v30 = v38;
        sub_24DCCA5B8();
        uint64_t v31 = v37;
        MEMORY[0x2533282B0](0, v11, v8, v29);
        _Block_release(v29);

        (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v30);
        (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v40);
      }
    }
    uint64_t v32 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
    uint64_t v33 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    uint64_t v34 = (void *)swift_allocObject();
    v34[2] = a2;
    void v34[3] = sub_24D6E4F84;
    v34[4] = v17;
    v34[5] = sub_24D6E4F78;
    v34[6] = v18;
    uint64_t v35 = a2;
    swift_retain();
    swift_retain();
    sub_24D3E2DA8((uint64_t)"saveFPCKTelemetryReport(_:completionHandler:)", 45, 2, v32, v33, (uint64_t)sub_24D3E5BC8, (uint64_t)v34);
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_13;
  }
  _Block_copy(a3);
  id v23 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  uint64_t v24 = sub_24DCC9068();
  os_log_type_t v25 = sub_24DCCA128();
  if (os_log_type_enabled(v24, v25))
  {
    int v26 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)int v26 = 0;
    _os_log_impl(&dword_24D3D0000, v24, v25, "🧹 Skipping telemetry report save, report was empty", v26, 2u);
    MEMORY[0x25332B030](v26, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  a3[2](a3, 0);
  return swift_release();
}

uint64_t sub_24D6BF674(void *a1, uint64_t a2, char *a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9398();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D5B3F9C;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a3;
  v16[3] = a1;
  v16[4] = a2;
  v16[5] = sub_24D5B3F9C;
  void v16[6] = v14;
  uint64_t v17 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  unsigned int v18 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a4);
  uint64_t v19 = a3;
  id v20 = a1;
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      uint64_t v22 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a4)[2](a4, v22);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v23 = (void *)MEMORY[0x25332B1A0](v17);
    if (v23)
    {
      uint64_t v24 = v23;
      id v33 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1940;
      os_log_type_t v25 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v38 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v26 = v37;
      sub_24DCCA5B8();
      uint64_t v27 = v33;
      MEMORY[0x2533282B0](0, v13, v10, v25);
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v26);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
    }
  }
  uint64_t v28 = *(void **)&v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v29 = *(void **)&v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v30 = (void *)swift_allocObject();
  void v30[2] = v19;
  void v30[3] = sub_24D6E4F84;
  v30[4] = v15;
  v30[5] = sub_24D6BD504;
  v30[6] = v16;
  uint64_t v31 = v19;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"dumpState(to:options:request:completionHandler:)", 48, 2, v28, v29, (uint64_t)sub_24D3E5BC8, (uint64_t)v30);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6BFB34(void *a1, void *a2, unsigned char *a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v37 = *(void *)(v8 - 8);
  uint64_t v38 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v35 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_24DCC9398();
  uint64_t v34 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D5B3F9C;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = a2;
  v14[4] = sub_24D5B3F9C;
  v14[5] = v12;
  uint64_t v15 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v16 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a4);
  id v17 = a1;
  id v18 = a2;
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v19 = sub_24D621D5C();
      id v20 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a4)[2](a4, v20);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v21 = (void *)MEMORY[0x25332B1A0](v15);
    if (v21)
    {
      uint64_t v22 = v21;
      id v33 = objc_msgSend(v21, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1921;
      id v23 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v39 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v24 = v35;
      uint64_t v25 = v38;
      sub_24DCCA5B8();
      uint64_t v26 = v33;
      MEMORY[0x2533282B0](0, v11, v24, v23);
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v37 + 8))(v24, v25);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v36);
    }
  }
  uint64_t v27 = *(void **)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v28 = *(void **)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v29 = (void *)swift_allocObject();
  void v29[2] = a3;
  v29[3] = sub_24D6E4F84;
  v29[4] = v13;
  v29[5] = sub_24D6E4FBC;
  v29[6] = v14;
  uint64_t v30 = a3;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"waitForChanges(below:request:completionHandler:)", 48, 2, v27, v28, (uint64_t)sub_24D3E5BC8, (uint64_t)v29);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6BFFFC(void *a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v33 = *(void *)(v6 - 8);
  uint64_t v34 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v31 = *(void *)(v9 - 8);
  uint64_t v32 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D5B3F9C;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = sub_24D5B3F9C;
  v14[4] = v12;
  uint64_t v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v16 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  id v17 = a1;
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v18 = sub_24D621D5C();
      id v19 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v19);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v20 = (void *)MEMORY[0x25332B1A0](v15);
    if (v20)
    {
      id v21 = v20;
      id v30 = objc_msgSend(v20, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1902;
      uint64_t v22 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v35 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v23 = v34;
      sub_24DCCA5B8();
      uint64_t v24 = v30;
      MEMORY[0x2533282B0](0, v11, v8, v22);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v8, v23);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
    }
  }
  uint64_t v25 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v26 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = a2;
  v27[3] = sub_24D6E4F84;
  v27[4] = v13;
  v27[5] = sub_24D6E4F74;
  v27[6] = v14;
  uint64_t v28 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"waitForStabilization(for:completionHandler:)", 44, 2, v25, v26, (uint64_t)sub_24D3E5BC8, (uint64_t)v27);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C04AC(uint64_t a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24DCC9398();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8A58();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D5B3F9C;
  *(void *)(v14 + 24) = v13;
  uint64_t v43 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
  id v18 = (void *)(v17 + v16);
  *id v18 = sub_24D5B3F9C;
  v18[1] = v13;
  id v19 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v20 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      uint64_t v22 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v22);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v23 = (void *)MEMORY[0x25332B1A0](v19);
    if (v23)
    {
      uint64_t v24 = v23;
      id v36 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1844;
      uint64_t v25 = _Block_copy(aBlock);
      uint64_t v26 = v37;
      sub_24DCC9348();
      uint64_t v44 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v27 = v39;
      uint64_t v28 = v42;
      sub_24DCCA5B8();
      uint64_t v29 = v36;
      MEMORY[0x2533282B0](0, v26, v27, v25);
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v28);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v40);
    }
  }
  id v30 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v31 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v32 = (void *)swift_allocObject();
  void v32[2] = a2;
  v32[3] = sub_24D6E4F84;
  v32[4] = v43;
  v32[5] = sub_24D6BD754;
  v32[6] = v17;
  uint64_t v33 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"setPutBackInfoOnItemAt(_:completionHandler:)", 44, 2, v30, v31, (uint64_t)sub_24D3E5BC8, (uint64_t)v32);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release();
}

id sub_24D6C0A44(char *a1, uint64_t a2, uint64_t a3, char *a4, char *a5, void (**a6)(const void *, void *))
{
  uint64_t v162 = a5;
  uint64_t v160 = a4;
  uint64_t v142 = a3;
  uint64_t v141 = a2;
  uint64_t v128 = sub_24DCC92F8();
  uint64_t v127 = *(void *)(v128 - 8);
  MEMORY[0x270FA5388](v128);
  uint64_t v125 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_24DCC9398();
  uint64_t v124 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v123 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_24DCC8A58();
  uint64_t v140 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  uint64_t v139 = v10;
  uint64_t v150 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC8288();
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v135 = (char *)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = sub_24DCC82A8();
  unint64_t v136 = *(void (***)(char *, uint64_t))(v137 - 8);
  MEMORY[0x270FA5388](v137);
  id v134 = (char *)&v123 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v153 = sub_24DCC8CE8();
  uint64_t v159 = *(void *)(v153 - 8);
  MEMORY[0x270FA5388](v153);
  uint64_t v152 = (char *)&v123 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B190208);
  MEMORY[0x270FA5388](v145);
  char v147 = (uint64_t (*)(uint64_t))((char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v146 = (uint64_t (*)(void))type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  uint64_t v148 = *((void *)v146 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v146);
  uint64_t v149 = (uint64_t)&v123 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v155 = (uint64_t)&v123 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v138 = (uint64_t)&v123 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v130 = (uint64_t)&v123 - v23;
  uint64_t v156 = v24;
  MEMORY[0x270FA5388](v22);
  uint64_t v158 = (uint64_t)&v123 - v25;
  uint64_t v26 = sub_24DCC8FC8();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v123 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v31 = MEMORY[0x270FA5388](v30 - 8);
  uint64_t v33 = (char *)&v123 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v35 = (char *)&v123 - v34;
  uint64_t v36 = type metadata accessor for Signpost(0);
  uint64_t v131 = *(void *)(v36 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v36);
  uint64_t v154 = (uint64_t)&v123 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v133 = (uint64_t)&v123 - v40;
  uint64_t v132 = v41;
  MEMORY[0x270FA5388](v39);
  uint64_t v163 = (uint64_t)&v123 - v42;
  uint64_t v161 = swift_allocObject();
  *(void *)(v161 + 16) = a6;
  unint64_t v143 = a6;
  _Block_copy(a6);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v43 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 56))(v35, 1, 1, v26);
  uint64_t v144 = sub_24DCC8A18();
  uint64_t v45 = v44;
  sub_24D415FD0((uint64_t)v35, (uint64_t)v33, &qword_26B1990B0);
  int v46 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v27 + 48))(v33, 1, v26);
  uint64_t v157 = a1;
  if (v46 == 1)
  {
    id v47 = v43;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v33, &qword_26B1990B0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v29, v33, v26);
  }
  uint64_t v48 = v163;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v163, v29, v26);
  *(void *)(v48 + *(int *)(v36 + 20)) = v43;
  uint64_t v129 = v36;
  uint64_t v49 = v48 + *(int *)(v36 + 24);
  *(void *)uint64_t v49 = "Materialization";
  *(void *)(v49 + 8) = 15;
  *(unsigned char *)(v49 + 16) = 2;
  id v50 = v43;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v51 = swift_allocObject();
  *(_OWORD *)(v51 + 16) = xmmword_24DCCECE0;
  *(void *)(v51 + 56) = MEMORY[0x263F8D310];
  *(void *)(v51 + 64) = sub_24D3F7B98();
  *(void *)(v51 + 32) = v144;
  *(void *)(v51 + 40) = v45;
  uint64_t v122 = v51;
  LOBYTE(v121) = 2;
  uint64_t v120 = 2;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v35, &qword_26B1990B0);
  id v52 = objc_msgSend(self, sel_discreteProgressWithTotalUnitCount_, 1);
  objc_msgSend(v52, sel_setCancellable_, 1);
  uint64_t v53 = *(void *)&v162[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_progressMonitor];
  uint64_t v54 = v152;
  uint64_t v55 = sub_24DCC8CD8();
  if (qword_26B190218 != -1) {
    uint64_t v55 = swift_once();
  }
  MEMORY[0x270FA5388](v55);
  uint64_t v56 = v160;
  *(&v123 - 6) = v157;
  *(&v123 - 5) = v56;
  uint64_t v120 = (uint64_t)v52;
  uint64_t v121 = (uint64_t)v54;
  uint64_t v122 = v53;
  uint64_t v57 = v147;
  sub_24DCCA208();
  uint64_t v58 = v159 + 8;
  uint64_t v59 = *(void (***)(char *, uint64_t))(v159 + 8);
  ((void (*)(char *, uint64_t))v59)(v54, v153);
  uint64_t v60 = v148;
  if ((*(unsigned int (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t (*)(void)))(v148 + 48))(v57, 1, v146) != 1)
  {
    uint64_t v135 = 0;
    unint64_t v136 = v59;
    uint64_t v137 = v53;
    uint64_t v159 = v58;
    uint64_t v65 = v158;
    uint64_t v146 = type metadata accessor for DownloadProgressMonitor.URLProgressKey;
    sub_24D40BC84((uint64_t)v57, v158, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    uint64_t v66 = swift_allocObject();
    uint64_t v67 = v52;
    uint64_t v144 = (uint64_t)v52;
    swift_unknownObjectWeakInit();
    char v147 = type metadata accessor for DownloadProgressMonitor.URLProgressKey;
    uint64_t v68 = v65;
    uint64_t v69 = v130;
    sub_24D40B474(v68, v130, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    uint64_t v70 = *(unsigned __int8 *)(v60 + 80);
    uint64_t v71 = (v70 + 24) & ~v70;
    uint64_t v72 = v70;
    uint64_t v148 = v70 | 7;
    uint64_t v73 = swift_allocObject();
    *(void *)(v73 + 16) = v66;
    sub_24D40BC84(v69, v73 + v71, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    uint64_t v169 = sub_24D6BD78C;
    uint64_t v170 = v73;
    id aBlock = (id)MEMORY[0x263EF8330];
    uint64_t v166 = 1107296256;
    uint64_t v167 = sub_24D3D2E94;
    uint64_t v168 = &block_descriptor_1829;
    uint64_t v74 = _Block_copy(&aBlock);
    swift_retain();
    sub_24D3EBEF0((uint64_t)sub_24D6BD78C);
    swift_release();
    objc_msgSend(v67, sel_setCancellationHandler_, v74);
    _Block_release(v74);
    swift_release();
    swift_release();
    uint64_t v75 = v133;
    sub_24D40B474(v163, v133, type metadata accessor for Signpost);
    uint64_t v76 = v158;
    uint64_t v77 = v138;
    uint64_t v78 = v147;
    sub_24D40B474(v158, v138, v147);
    sub_24D40B474(v75, v154, type metadata accessor for Signpost);
    sub_24D40B474(v77, v155, v78);
    unint64_t v79 = (*(unsigned __int8 *)(v131 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v131 + 80);
    unint64_t v80 = (v132 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v145 = v72;
    uint64_t v81 = v72 + 8;
    uint64_t v82 = (v72 + 8 + v80) & ~v72;
    unint64_t v83 = (v156 + v82 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v84 = swift_allocObject();
    sub_24D40BC84(v75, v84 + v79, type metadata accessor for Signpost);
    *(void *)(v84 + v80) = v162;
    sub_24D40BC84(v77, v84 + v82, v146);
    uint64_t v85 = (void *)(v84 + v83);
    uint64_t v86 = v161;
    *uint64_t v85 = sub_24D5B3F9C;
    v85[1] = v86;
    uint64_t v87 = swift_allocObject();
    *(void *)(v87 + 16) = sub_24D6BD794;
    *(void *)(v87 + 24) = v84;
    uint64_t v138 = v87;
    uint64_t v88 = v140;
    (*(void (**)(char *, char *, uint64_t))(v140 + 16))(v150, v157, v151);
    sub_24D3F7E8C(v141, (uint64_t)&v171);
    sub_24D40B474(v76, v149, v147);
    unint64_t v89 = (*(unsigned __int8 *)(v88 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v88 + 80);
    unint64_t v90 = (v139 + v89 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v91 = (v90 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v92 = (v91 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v93 = (v92 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v94 = (v81 + v93) & ~v145;
    id v95 = (char *)swift_allocObject();
    *((void *)v95 + 2) = sub_24D6BD794;
    *((void *)v95 + 3) = v84;
    *((void *)v95 + 4) = v160;
    (*(void (**)(char *, char *, uint64_t))(v88 + 32))(&v95[v89], v150, v151);
    sub_24D3F7E7C(&v171, &v95[v90]);
    *(void *)&v95[v91] = v142;
    uint64_t v96 = (void *)v144;
    *(void *)&v95[v92] = v144;
    uint64_t v157 = v95;
    uint64_t v97 = v162;
    *(void *)&v95[v93] = v162;
    sub_24D40BC84(v149, (uint64_t)&v95[v94], v146);
    uint64_t v98 = &v97[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
    uint64_t v99 = (void *)MEMORY[0x25332B1A0](&v97[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
    swift_retain_n();
    uint64_t v100 = v97;
    swift_retain_n();
    int v101 = v100;
    uint64_t v102 = v160;
    id v103 = v96;
    if (v99)
    {
      if (objc_msgSend(v99, sel_unableToStartup))
      {
        id v104 = sub_24D621D5C();
        sub_24DCCA2C8();
        sub_24DCC8F98();
        uint64_t v105 = v152;
        uint64_t v106 = sub_24DCC8CD8();
        MEMORY[0x270FA5388](v106);
        uint64_t v120 = v137;
        uint64_t v121 = v155;
        uint64_t v122 = (uint64_t)v105;
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B193FD8);
        sub_24DCCA208();

        ((void (*)(char *, uint64_t))v136)(v105, v153);
        uint64_t v107 = (void *)sub_24DCC8818();
        v143[2](v143, v107);

        swift_release();
        swift_release();

LABEL_18:
        swift_release_n();
        sub_24D3FC974(v154, type metadata accessor for Signpost);

        sub_24D3FC974(v155, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
        swift_release();
        sub_24D3FC974(v158, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
        sub_24D3FC974(v163, type metadata accessor for Signpost);
        swift_release();
        return (id)v144;
      }
    }
    if ((v101[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
    {
      uint64_t v108 = (void *)MEMORY[0x25332B1A0](v98);
      if (v108)
      {
        unint64_t v109 = v108;
        id v110 = objc_msgSend(v108, sel_serialQueue);

        uint64_t v169 = (uint64_t (*)())nullsub_1;
        uint64_t v170 = 0;
        id aBlock = (id)MEMORY[0x263EF8330];
        uint64_t v166 = 1107296256;
        uint64_t v167 = sub_24D3D2E94;
        uint64_t v168 = &block_descriptor_1821;
        uint64_t v111 = _Block_copy(&aBlock);
        int v112 = v123;
        sub_24DCC9348();
        uint64_t v164 = MEMORY[0x263F8EE78];
        sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
        sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
        uint64_t v113 = v125;
        uint64_t v114 = v128;
        sub_24DCCA5B8();
        MEMORY[0x2533282B0](0, v112, v113, v111);
        _Block_release(v111);

        (*(void (**)(char *, uint64_t))(v127 + 8))(v113, v114);
        (*(void (**)(char *, uint64_t))(v124 + 8))(v112, v126);
      }
    }
    uint64_t v115 = *(void **)&v101[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
    uint64_t v116 = *(void **)&v101[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    uint64_t v117 = (void *)swift_allocObject();
    v117[2] = v101;
    v117[3] = sub_24D6E4F84;
    v117[4] = v138;
    v117[5] = sub_24D6BD79C;
    v117[6] = v157;
    uint64_t v118 = v101;
    swift_retain();
    swift_retain();
    sub_24D3E2DA8((uint64_t)"startProvidingItem(at:readerID:readingOptions:request:completionHandler:)", 73, 2, v115, v116, (uint64_t)sub_24D3E5BC8, (uint64_t)v117);
    swift_release();
    swift_release();
    swift_release();
    goto LABEL_18;
  }
  sub_24D415F74((uint64_t)v57, (uint64_t *)&unk_26B190208);
  sub_24DCC8138();
  sub_24D5F77E0(MEMORY[0x263F8EE78]);
  sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
  uint64_t v61 = v134;
  uint64_t v62 = v137;
  sub_24DCC8808();
  long long v63 = (void *)sub_24DCC8128();
  v136[1](v61, v62);
  uint64_t v64 = (void *)sub_24DCC8818();
  v143[2](v143, v64);

  sub_24D3FC974(v163, type metadata accessor for Signpost);
  swift_release();
  return v52;
}

uint64_t sub_24D6C1ECC(void *a1, void *a2, uint64_t a3, unsigned char *a4, void (**a5)(void, void, void, void))
{
  long long v63 = a4;
  uint64_t v57 = a3;
  uint64_t v61 = a2;
  uint64_t v7 = sub_24DCC8A58();
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v58 = v8;
  uint64_t v55 = (char *)&v49 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8FC8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1990B0);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = type metadata accessor for Signpost(0);
  uint64_t v52 = *(void *)(v19 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v53 = v21;
  uint64_t v54 = (uint64_t)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v49 - v22;
  uint64_t v56 = swift_allocObject();
  *(void *)(v56 + 16) = a5;
  uint64_t v64 = a5;
  _Block_copy(a5);
  if (qword_26B1990F8 != -1) {
    swift_once();
  }
  uint64_t v24 = (void *)qword_26B1A23B0;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v18, 1, 1, v9);
  uint64_t v62 = a1;
  id v25 = objc_msgSend(a1, sel_description);
  uint64_t v51 = sub_24DCC97E8();
  uint64_t v27 = v26;

  sub_24D415FD0((uint64_t)v18, (uint64_t)v16, &qword_26B1990B0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9) == 1)
  {
    id v28 = v24;
    uint64_t v29 = v12;
    sub_24DCC8FA8();
    sub_24D415F74((uint64_t)v16, &qword_26B1990B0);
  }
  else
  {
    uint64_t v29 = v12;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v16, v9);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v29, v9);
  *(void *)&v23[*(int *)(v19 + 20)] = v24;
  uint64_t v30 = &v23[*(int *)(v19 + 24)];
  *(void *)uint64_t v30 = "DownloadVersion";
  *((void *)v30 + 1) = 15;
  v30[16] = 2;
  id v31 = v24;
  swift_bridgeObjectRetain();
  sub_24DCCA2D8();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F20);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_24DCCECE0;
  *(void *)(v32 + 56) = MEMORY[0x263F8D310];
  *(void *)(v32 + 64) = sub_24D3F7B98();
  *(void *)(v32 + 32) = v51;
  *(void *)(v32 + 40) = v27;
  id v50 = v23;
  sub_24DCC8F88();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
  swift_bridgeObjectRelease();
  sub_24D415F74((uint64_t)v18, &qword_26B1990B0);
  uint64_t v33 = v54;
  sub_24D40B474((uint64_t)v23, v54, type metadata accessor for Signpost);
  uint64_t v35 = v59;
  uint64_t v34 = v60;
  uint64_t v36 = v55;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v55, v57, v60);
  unint64_t v37 = (*(unsigned __int8 *)(v52 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v52 + 80);
  unint64_t v38 = (v53 + v37 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (*(unsigned __int8 *)(v35 + 80) + v38 + 16) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
  uint64_t v40 = swift_allocObject();
  uint64_t v42 = v61;
  uint64_t v41 = v62;
  *(void *)(v40 + 16) = v61;
  *(void *)(v40 + 24) = v41;
  sub_24D40BC84(v33, v40 + v37, type metadata accessor for Signpost);
  uint64_t v43 = (void (**)(uint64_t, uint64_t, uint64_t))(v40 + v38);
  uint64_t v44 = v56;
  void *v43 = sub_24D6D2300;
  v43[1] = (void (*)(uint64_t, uint64_t, uint64_t))v44;
  (*(void (**)(unint64_t, char *, uint64_t))(v35 + 32))(v40 + v39, v36, v34);
  swift_retain_n();
  uint64_t v45 = v64;
  _Block_copy(v64);
  swift_retain();
  id v46 = v42;
  id v47 = v41;
  sub_24D6BB5DC((uint64_t)"downloadVersion(with:version:originalURL:completionHandler:)", (id)0x3C, 2, (uint64_t)sub_24D6BD990, v40, v63, v45);
  _Block_release(v45);
  swift_release();
  swift_release_n();
  sub_24D3FC974((uint64_t)v50, type metadata accessor for Signpost);
  return swift_release();
}

id sub_24D6C2520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v13 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  uint64_t v14 = (void *)sub_24DCC8948();
  uint64_t v15 = sub_24DCC8CE8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(a7, 1, v15) != 1)
  {
    uint64_t v17 = (void *)sub_24DCC8C38();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a7, v15);
  }
  uint64_t v18 = sub_24DCC8788();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(a8, 1, v18) != 1)
  {
    uint64_t v20 = (void *)sub_24DCC8768();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a8, v18);
  }
  id v21 = objc_msgSend(v24, sel_initWithVersion_displayName_originalURL_physicalURL_identifier_modificationDate_lastEditorNameComponents_size_, a1, v13, v14, a5, a6, v17, v20, a9);

  uint64_t v22 = sub_24DCC8A58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(a4, v22);
  return v21;
}

uint64_t sub_24D6C2744(uint64_t a1, void *a2, char *a3, void (**a4)(void, void))
{
  id v51 = a2;
  uint64_t v7 = sub_24DCC92F8();
  uint64_t v48 = *(void *)(v7 - 8);
  uint64_t v49 = v7;
  MEMORY[0x270FA5388](v7);
  id v46 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_24DCC9398();
  uint64_t v45 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v44 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC8A58();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D6D1DA4;
  *(void *)(v15 + 24) = v14;
  uint64_t v50 = v15;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v17 = (v12 + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a3;
  unint64_t v19 = v18 + v16;
  uint64_t v20 = v18;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19, v13, v10);
  id v21 = v51;
  *(void *)(v20 + v17) = v51;
  uint64_t v22 = (uint64_t (**)())(v20 + ((v17 + 15) & 0xFFFFFFFFFFFFFFF8));
  void *v22 = sub_24D6D1DA4;
  v22[1] = (uint64_t (*)())v14;
  uint64_t v23 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v24 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a4);
  id v25 = a3;
  id v26 = v21;
  if (v24)
  {
    if (objc_msgSend(v24, sel_unableToStartup))
    {
      id v27 = sub_24D621D5C();
      id v28 = objc_msgSend(self, sel_providingNotRequiredResponseWithSyncRootID_, 0);
      ((void (**)(void, id))a4)[2](a4, v28);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((v25[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v29 = (void *)MEMORY[0x25332B1A0](v23);
    if (v29)
    {
      uint64_t v30 = v29;
      id v51 = objc_msgSend(v29, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1749;
      id v31 = _Block_copy(aBlock);
      uint64_t v32 = v44;
      sub_24DCC9348();
      uint64_t v52 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v33 = v20;
      uint64_t v34 = v46;
      uint64_t v35 = v49;
      sub_24DCCA5B8();
      uint64_t v36 = v51;
      MEMORY[0x2533282B0](0, v32, v34, v31);
      _Block_release(v31);

      unint64_t v37 = v34;
      uint64_t v20 = v33;
      (*(void (**)(char *, uint64_t))(v48 + 8))(v37, v35);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v32, v47);
    }
  }
  unint64_t v38 = *(void **)&v25[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  unint64_t v39 = *(void **)&v25[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v40 = (void *)swift_allocObject();
  v40[2] = v25;
  v40[3] = sub_24D6E5EE8;
  v40[4] = v50;
  v40[5] = sub_24D6BD9A0;
  v40[6] = v20;
  uint64_t v41 = v25;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"movingItem(at:with:completionHandler:)", 38, 2, v38, v39, (uint64_t)sub_24D3E5BC8, (uint64_t)v40);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release();
}

uint64_t sub_24D6C2D34(void *a1, int a2, void *a3, unsigned char *a4, void (**a5)(void, void))
{
  uint64_t v10 = sub_24DCC92F8();
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  MEMORY[0x270FA5388](v10);
  unint64_t v37 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_24DCC9398();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a5;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D5B3F9C;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = swift_allocObject();
  *(_DWORD *)(v16 + 16) = a2;
  *(void *)(v16 + 24) = a1;
  *(void *)(v16 + 32) = a3;
  *(void *)(v16 + 40) = sub_24D5B3F9C;
  *(void *)(v16 + 48) = v14;
  unint64_t v17 = &a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v18 = (void *)MEMORY[0x25332B1A0](&a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a5);
  id v19 = a1;
  id v20 = a3;
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      uint64_t v22 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a5)[2](a5, v22);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v23 = (void *)MEMORY[0x25332B1A0](v17);
    if (v23)
    {
      uint64_t v24 = v23;
      id v35 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1723;
      id v25 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v41 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      id v26 = v37;
      uint64_t v27 = v40;
      sub_24DCCA5B8();
      id v28 = v35;
      MEMORY[0x2533282B0](0, v13, v26, v25);
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v27);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v38);
    }
  }
  uint64_t v29 = *(void **)&a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v30 = *(void **)&a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v31 = (void *)swift_allocObject();
  v31[2] = a4;
  v31[3] = sub_24D6E4F84;
  v31[4] = v15;
  v31[5] = sub_24D6BD9B4;
  v31[6] = v16;
  uint64_t v32 = a4;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"evictItem(with:evictionReason:request:completionHandler:)", 57, 2, v29, v30, (uint64_t)sub_24D3E5BC8, (uint64_t)v31);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C3204(void *a1, uint64_t a2, uint64_t a3, void *a4, unsigned char *a5, void (**a6)(void, void))
{
  uint64_t v12 = sub_24DCC92F8();
  uint64_t v41 = *(void *)(v12 - 8);
  uint64_t v42 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v39 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24DCC9398();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  unint64_t v37 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a6;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_24D5B3F9C;
  *(void *)(v16 + 24) = v15;
  unint64_t v17 = (void *)swift_allocObject();
  v17[2] = sub_24D5B3F9C;
  v17[3] = v15;
  v17[4] = a2;
  v17[5] = a3;
  v17[6] = a4;
  v17[7] = a1;
  uint64_t v18 = &a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v19 = (void *)MEMORY[0x25332B1A0](&a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a6);
  id v20 = a4;
  id v21 = a1;
  if (v19)
  {
    if (objc_msgSend(v19, sel_unableToStartup))
    {
      id v22 = sub_24D621D5C();
      uint64_t v23 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a6)[2](a6, v23);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v24 = (void *)MEMORY[0x25332B1A0](v18);
    if (v24)
    {
      id v25 = v24;
      id v36 = objc_msgSend(v24, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1704;
      id v26 = _Block_copy(aBlock);
      uint64_t v27 = v37;
      sub_24DCC9348();
      uint64_t v43 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      id v28 = v39;
      uint64_t v29 = v42;
      sub_24DCCA5B8();
      uint64_t v30 = v36;
      MEMORY[0x2533282B0](0, v27, v28, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v40);
    }
  }
  id v31 = *(void **)&a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v32 = *(void **)&a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = a5;
  v33[3] = sub_24D6E4F84;
  v33[4] = v16;
  v33[5] = sub_24D6BD9C0;
  v33[6] = v17;
  uint64_t v34 = a5;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"materializeItem(with:requestedRange:request:completionHandler:)", 63, 2, v31, v32, (uint64_t)sub_24D3E5BC8, (uint64_t)v33);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C36E0(void *a1, char a2, int a3, int a4, void *a5, void *a6, void (**a7)(void, void, void, void))
{
  int v53 = a4;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_24DCC8A58();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v50 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  id v51 = (char *)&v45 - v20;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = a7;
  _Block_copy(a7);
  if (a2)
  {
    int v48 = a3;
    uint64_t v49 = a5;
    id v52 = a6;
    id v22 = a1;
    uint64_t v23 = sub_24D3D3C4C(objc_msgSend(v22, sel_identifier));

    swift_beginAccess();
    uint64_t v24 = *(void **)(v23 + 32);
    uint64_t v25 = *(unsigned __int8 *)(v23 + 40);
    if (*(unsigned char *)(v23 + 41))
    {
      uint64_t v46 = v17;
      uint64_t v47 = v16;
      uint64_t v26 = qword_26B194080;
      id v27 = v24;
      if (v26 != -1) {
        swift_once();
      }
      uint64_t v28 = sub_24DCC97E8();
      uint64_t v30 = v29;
      if (v28 == sub_24DCC97E8() && v30 == v31)
      {
        swift_bridgeObjectRelease_n();
        sub_24D40160C(v24, v25, 1);
        uint64_t v17 = v46;
        uint64_t v16 = v47;
LABEL_17:
        id v35 = v52;
        if (objc_sync_enter(v35)) {
          sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v35);
        }
        sub_24D3DE190((char *)v35, &v54);
        if (objc_sync_exit(v35)) {
          sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v35);
        }

        if (*(void *)(v54 + 16))
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v15, v54 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
          uint64_t v36 = 0;
        }
        else
        {
          uint64_t v36 = 1;
        }
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, v36, 1, v16);
        swift_bridgeObjectRelease();
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
        {
          uint64_t v42 = v51;
          (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v51, v15, v16);
          sub_24D3FB6F8(0, &qword_26B194038);
          uint64_t v43 = (uint64_t)v50;
          (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v50, v42, v16);
          id v44 = sub_24D609184(v43, 0);
          ((void (**)(void, void, id, void))a7)[2](a7, 0, v44, 0);

          swift_release();
          (*(void (**)(char *, uint64_t))(v17 + 8))(v42, v16);
          return swift_release();
        }
        sub_24D415F74((uint64_t)v15, (uint64_t *)&unk_26B199050);
        goto LABEL_24;
      }
      char v34 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_24D40160C(v24, v25, 1);
      uint64_t v17 = v46;
      uint64_t v16 = v47;
      if (v34) {
        goto LABEL_17;
      }
    }
    else
    {
      if (v24) {
        BOOL v33 = 0;
      }
      else {
        BOOL v33 = v25 == 2;
      }
      if (v33) {
        goto LABEL_17;
      }
    }
LABEL_24:
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_24D6D1DDC;
    *(void *)(v37 + 24) = v21;
    uint64_t v38 = swift_allocObject();
    uint64_t v39 = v49;
    *(void *)(v38 + 16) = v22;
    *(void *)(v38 + 24) = v39;
    *(void *)(v38 + 32) = sub_24D6D1DDC;
    *(void *)(v38 + 40) = v21;
    *(unsigned char *)(v38 + 48) = v53 & 1;
    *(unsigned char *)(v38 + 49) = v48 & 1;
    swift_retain_n();
    id v40 = v22;
    id v41 = v39;
    sub_24D62794C((uint64_t)"url(for:creatingPlaceholderIfMissing:ignoreAlternateContentsURL:forBookmarkResolution:request:completionHandler:)", 113, 2, (void (*)(id, void *, uint64_t *))sub_24D6E5EBC, v37, (uint64_t)sub_24D6BDA14, v38);
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  a7[2](a7, 0, 0, 0);

  return swift_release();
}

uint64_t sub_24D6C3D2C(void *a1, uint64_t a2, char *a3, void (**a4)(void, void, void, void, void, void, void))
{
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9398();
  uint64_t v36 = *(void *)(v11 - 8);
  uint64_t v37 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D4C6424;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = sub_24D4C6424;
  v16[3] = v14;
  v16[4] = a3;
  v16[5] = a1;
  void v16[6] = a2;
  uint64_t v17 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v18 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a4);
  uint64_t v19 = a3;
  id v20 = a1;
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
      id v22 = (void *)sub_24DCC9C18();
      sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
      uint64_t v23 = (void *)sub_24DCC9C18();
      uint64_t v24 = (void *)sub_24DCC8818();
      ((void (**)(void, void *, void *, void, void, void, void *))a4)[2](a4, v22, v23, 0, 0, 0, v24);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v25 = (void *)MEMORY[0x25332B1A0](v17);
    if (v25)
    {
      uint64_t v26 = v25;
      id v35 = objc_msgSend(v25, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1674;
      id v27 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v40 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v28 = v39;
      sub_24DCCA5B8();
      uint64_t v29 = v35;
      MEMORY[0x2533282B0](0, v13, v10, v27);
      _Block_release(v27);

      (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v28);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v13, v37);
    }
  }
  uint64_t v30 = *(void **)&v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v31 = *(void **)&v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v32 = (void *)swift_allocObject();
  void v32[2] = v19;
  v32[3] = sub_24D6E5E7C;
  v32[4] = v15;
  v32[5] = sub_24D6BDB7C;
  v32[6] = v16;
  BOOL v33 = v19;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"enumerateMaterializedSet(fromSyncAnchor:suggestedBatchSize:completionHandler:)", 78, 2, v30, v31, (uint64_t)sub_24D3E5BC8, (uint64_t)v32);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C4264(unsigned char *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v29 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24D6D1DA4;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D6D1DA4;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v14 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      id v15 = sub_24D621D5C();
      a2[2](a2, 0);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v16 = (void *)MEMORY[0x25332B1A0](v13);
    if (v16)
    {
      uint64_t v17 = v16;
      id v26 = objc_msgSend(v16, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1656;
      uint64_t v25 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v30 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v19 = v25;
      uint64_t v18 = v26;
      MEMORY[0x2533282B0](0, v9, v6, v25);
      _Block_release(v19);

      (*(void (**)(char *, uint64_t))(v29 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v28);
    }
  }
  id v20 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v21 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v22 = (void *)swift_allocObject();
  v22[2] = a1;
  v22[3] = sub_24D6E4F40;
  v22[4] = v11;
  v22[5] = sub_24D6E5EE4;
  v22[6] = v12;
  uint64_t v23 = a1;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"currentMaterializedSetSyncAnchor(completionHandler:)", 52, 2, v20, v21, (uint64_t)sub_24D3E5BC8, (uint64_t)v22);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C46FC(void *a1, void *a2, char *a3, const void *a4)
{
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC9398();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v59 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_24DCC9078();
  uint64_t v65 = *(void *)(v13 - 8);
  uint64_t v66 = v13;
  MEMORY[0x270FA5388](v13);
  id v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  uint64_t v64 = a4;
  _Block_copy(a4);
  id v17 = (id)fpfs_current_or_default_log();
  sub_24DCC9088();
  id v18 = a1;
  uint64_t v19 = sub_24DCC9068();
  os_log_type_t v20 = sub_24DCCA118();
  BOOL v21 = os_log_type_enabled(v19, v20);
  uint64_t v62 = v10;
  uint64_t v63 = v7;
  uint64_t v60 = v11;
  uint64_t v61 = v9;
  if (v21)
  {
    uint64_t v22 = swift_slowAlloc();
    uint64_t v57 = swift_slowAlloc();
    aBlock[0] = v57;
    *(_DWORD *)uint64_t v22 = 136315394;
    v56[1] = v22 + 4;
    uint64_t v23 = sub_24DCC8B68();
    uint64_t v24 = v6;
    unint64_t v26 = v25;
    uint64_t v27 = sub_24DCC8AA8();
    uint64_t v58 = v16;
    unint64_t v29 = v28;
    unint64_t v30 = v26;
    uint64_t v6 = v24;
    sub_24D400DCC(v23, v30);
    uint64_t v69 = sub_24D418FB4(v27, v29, aBlock);
    sub_24DCCA428();

    uint64_t v16 = v58;
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2048;
    uint64_t v31 = v67;
    uint64_t v69 = (uint64_t)v67;
    sub_24DCCA428();
    _os_log_impl(&dword_24D3D0000, v19, v20, "FPFS backend - enumerate pending %s, %ld", (uint8_t *)v22, 0x16u);
    uint64_t v32 = v57;
    swift_arrayDestroy();
    MEMORY[0x25332B030](v32, -1, -1);
    MEMORY[0x25332B030](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v65 + 8))(v15, v66);
    BOOL v33 = v68;
    char v34 = v31;
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v65 + 8))(v15, v66);
    char v34 = v67;
    BOOL v33 = v68;
  }
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = sub_24D6D1D7C;
  *(void *)(v35 + 24) = v16;
  uint64_t v36 = (void *)swift_allocObject();
  void v36[2] = sub_24D6D1D7C;
  v36[3] = v16;
  v36[4] = v33;
  v36[5] = v18;
  v36[6] = v34;
  uint64_t v37 = &v33[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v38 = (void *)MEMORY[0x25332B1A0](&v33[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  id v39 = v18;
  uint64_t v40 = v33;
  if (v38)
  {
    if (objc_msgSend(v38, sel_unableToStartup))
    {
      id v41 = sub_24D621D5C();
      sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
      uint64_t v42 = (void *)sub_24DCC9C18();
      sub_24D3FB6F8(0, (unint64_t *)&unk_26B1940B0);
      uint64_t v43 = (void *)sub_24DCC9C18();
      id v44 = (void *)sub_24DCC8818();
      (*((void (**)(const void *, void *, void *, void, void, void, void, void *, double))v64 + 2))(v64, v42, v43, 0, 0, 0, 0, v44, 0.0);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v40[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v45 = (void *)MEMORY[0x25332B1A0](v37);
    if (v45)
    {
      uint64_t v46 = v45;
      uint64_t v68 = (char *)objc_msgSend(v45, sel_serialQueue);

      aBlock[4] = (uint64_t)nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24D3D2E94;
      aBlock[3] = (uint64_t)&block_descriptor_1638;
      uint64_t v67 = _Block_copy(aBlock);
      uint64_t v47 = v59;
      sub_24DCC9348();
      uint64_t v69 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      int v48 = v61;
      sub_24DCCA5B8();
      uint64_t v50 = v67;
      uint64_t v49 = v68;
      MEMORY[0x2533282B0](0, v47, v48, v67);
      _Block_release(v50);

      (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v6);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v47, v62);
    }
  }
  id v51 = *(void **)&v40[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v52 = *(void **)&v40[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  int v53 = (void *)swift_allocObject();
  uint64_t v53[2] = v40;
  v53[3] = sub_24D6E5E78;
  v53[4] = v35;
  v53[5] = sub_24D6BDBEC;
  v53[6] = v36;
  uint64_t v54 = v40;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"enumeratePendingSet(fromSyncAnchor:suggestedBatchSize:completionHandler:)", 73, 2, v51, v52, (uint64_t)sub_24D3E5BC8, (uint64_t)v53);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C4E90(char *a1, void (**a2)(void, void, void, double))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v30 = *(void *)(v4 - 8);
  uint64_t v31 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24D6D1D54;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = sub_24D6D1D54;
  void v12[3] = v10;
  v12[4] = a1;
  uint64_t v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v14 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  id v15 = a1;
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      id v16 = sub_24D621D5C();
      a2[2](a2, 0, 0, 0.0);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v15[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v17 = (void *)MEMORY[0x25332B1A0](v13);
    if (v17)
    {
      id v18 = v17;
      id v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1620;
      uint64_t v19 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v32 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v20 = v31;
      sub_24DCCA5B8();
      BOOL v21 = v27;
      MEMORY[0x2533282B0](0, v9, v6, v19);
      _Block_release(v19);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v20);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
  uint64_t v22 = *(void **)&v15[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v23 = *(void **)&v15[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v15;
  v24[3] = sub_24D6E4F3C;
  v24[4] = v11;
  v24[5] = sub_24D6E4F70;
  v24[6] = v12;
  unint64_t v25 = v15;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"currentPendingSetSyncAnchor(completionHandler:)", 47, 2, v22, v23, (uint64_t)sub_24D3E5BC8, (uint64_t)v24);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C533C(unsigned char *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v42 = *(uint8_t **)(v4 - 8);
  uint64_t v43 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v40 = *(uint8_t **)(v7 - 8);
  id v41 = (void *)v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_24DCC9078();
  uint64_t v44 = *(void *)(v10 - 8);
  id v45 = (id)v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a2;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D4C7228;
  *(void *)(v14 + 24) = v13;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D4C7228;
  *(void *)(v15 + 24) = v13;
  id v16 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v17 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v17)
  {
    if (objc_msgSend(v17, sel_unableToStartup))
    {
      id v18 = sub_24D621D5C();
      _Block_copy(a2);
      id v19 = (id)fpfs_current_or_default_log();
      sub_24DCC9088();
      id v20 = v18;
      BOOL v21 = sub_24DCC9068();
      os_log_type_t v22 = sub_24DCCA128();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v43 = v21;
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        id v41 = (void *)swift_slowAlloc();
        uint64_t v42 = v23;
        *(_DWORD *)uint64_t v23 = 138412290;
        uint64_t v40 = v23 + 4;
        swift_getErrorValue();
        id v24 = sub_24DBA2828(v46);
        aBlock[0] = v24;
        sub_24DCCA428();
        unint64_t v25 = v41;
        *id v41 = v24;
        BOOL v21 = v43;

        os_log_type_t v26 = v22;
        id v27 = v42;
        _os_log_impl(&dword_24D3D0000, v21, v26, "state - asyncWithSyncEngine error: %@.", v42, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26B199EB0);
        swift_arrayDestroy();
        MEMORY[0x25332B030](v25, -1, -1);
        MEMORY[0x25332B030](v27, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, id))(v44 + 8))(v12, v45);
      uint64_t v37 = (void *)sub_24DCC8818();
      ((void (**)(void, void, void *))a2)[2](a2, 0, v37);

      _Block_release(a2);
      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v28 = (void *)MEMORY[0x25332B1A0](v16);
    if (v28)
    {
      uint64_t v29 = v28;
      id v45 = objc_msgSend(v28, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1602;
      uint64_t v30 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v47 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v31 = v43;
      sub_24DCCA5B8();
      uint64_t v32 = v45;
      MEMORY[0x2533282B0](0, v9, v6, v30);
      _Block_release(v30);

      (*((void (**)(char *, NSObject *))v42 + 1))(v6, v31);
      (*((void (**)(char *, void *))v40 + 1))(v9, v41);
    }
  }
  BOOL v33 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  char v34 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v35 = (void *)swift_allocObject();
  v35[2] = a1;
  v35[3] = sub_24D6E5EDC;
  v35[4] = v14;
  v35[5] = sub_24D6E5EE0;
  v35[6] = v15;
  uint64_t v36 = a1;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"state(completionHandler:)", 25, 2, v33, v34, (uint64_t)sub_24D3E5BC8, (uint64_t)v35);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C59CC(char *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24D5B3F9C;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = (void *)swift_allocObject();
  void v12[2] = a1;
  void v12[3] = sub_24D5B3F9C;
  v12[4] = v10;
  uint64_t v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v14 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  uint64_t v15 = a1;
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      id v16 = sub_24D621D5C();
      id v17 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a2)[2](a2, v17);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v15[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v18 = (void *)MEMORY[0x25332B1A0](v13);
    if (v18)
    {
      id v19 = v18;
      id v28 = objc_msgSend(v18, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1584;
      id v20 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v33 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v21 = v32;
      sub_24DCCA5B8();
      os_log_type_t v22 = v28;
      MEMORY[0x2533282B0](0, v9, v6, v20);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v21);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v30);
    }
  }
  uint64_t v23 = *(void **)&v15[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v24 = *(void **)&v15[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  unint64_t v25 = (void *)swift_allocObject();
  v25[2] = v15;
  v25[3] = sub_24D6E4F84;
  v25[4] = v11;
  v25[5] = sub_24D6E4F6C;
  v25[6] = v12;
  os_log_type_t v26 = v15;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"wakeForPush(completionHandler:)", 31, 2, v23, v24, (uint64_t)sub_24D3E5BC8, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C5E7C(unsigned char *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24D5B3F9C;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D5B3F9C;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v14 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      id v15 = sub_24D621D5C();
      id v16 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a2)[2](a2, v16);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v17 = (void *)MEMORY[0x25332B1A0](v13);
    if (v17)
    {
      id v18 = v17;
      id v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1558;
      os_log_type_t v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      id v20 = v26;
      id v19 = v27;
      MEMORY[0x2533282B0](0, v9, v6, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
  uint64_t v21 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  os_log_type_t v22 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v23 = (void *)swift_allocObject();
  v23[2] = a1;
  v23[3] = sub_24D6E4F84;
  v23[4] = v11;
  v23[5] = sub_24D6E5ED8;
  v23[6] = v12;
  id v24 = a1;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"workingSetDidChange(completionHandler:)", 39, 2, v21, v22, (uint64_t)sub_24D3E5BC8, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

void sub_24D6C6320(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, char *a5, void (**a6)(void, void, void))
{
  uint64_t v29 = a1;
  uint64_t v11 = sub_24DCC9078();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a6;
  id v16 = (void *)MEMORY[0x25332B1A0](&a5[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  _Block_copy(a6);
  if (v16)
  {
    id v17 = objc_msgSend(v16, sel_extensionBackend);
    id v18 = (void *)swift_allocObject();
    void v18[2] = sub_24D418090;
    v18[3] = v15;
    v18[4] = a3;
    v18[5] = a4;
    void v18[6] = a5;
    v18[7] = a2;
    aBlock[4] = sub_24D6D1D20;
    aBlock[5] = v18;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_24D6017D4;
    aBlock[3] = &block_descriptor_1543;
    id v19 = _Block_copy(aBlock);
    swift_retain();
    swift_unknownObjectRetain();
    swift_unknownObjectRetain();
    id v20 = a5;
    id v21 = a2;
    swift_release();
    objc_msgSend(v17, sel_enumerateWithSettings_lifetimeExtender_observer_completionHandler_, v29, a3, a4, v19);
    _Block_release(v19);
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    id v22 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v23 = sub_24DCC9068();
    os_log_type_t v24 = sub_24DCCA128();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v25 = 0;
      _os_log_impl(&dword_24D3D0000, v23, v24, "Missing domain in enumerateWithSettings for search", v25, 2u);
      MEMORY[0x25332B030](v25, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    id v26 = (id)FPNotSupportedError();
    if (v26) {
      id v27 = (void *)sub_24DCC8818();
    }
    else {
      id v27 = 0;
    }
    ((void (**)(void, void, void *))a6)[2](a6, 0, v27);
    swift_release();
  }
}

void sub_24D6C6638(void *a1, uint64_t a2, uint64_t a3, char *a4, void (**a5)(void, void, void))
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a5;
  _Block_copy(a5);
  _Block_copy(a5);
  id v11 = objc_msgSend(a1, sel_searchQuery);
  if (v11)
  {
    uint64_t v12 = v11;
    _Block_copy(a5);
    sub_24D6C6320((uint64_t)a1, v12, a2, a3, a4, a5);
    _Block_release(a5);
    swift_release();

    goto LABEL_14;
  }
  id v28 = objc_msgSend(a1, sel_enumeratedItemID);
  id v13 = objc_msgSend(v28, sel_identifier);
  uint64_t v14 = sub_24DCC97E8();
  uint64_t v16 = v15;
  if (v14 == sub_24DCC97E8() && v16 == v17)
  {

    swift_bridgeObjectRelease_n();
    id v20 = v28;
    goto LABEL_10;
  }
  char v19 = sub_24DCCAE28();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v20 = v28;
  if (v19)
  {
LABEL_10:
    id v26 = (id)FPNotSupportedError();
    if (v26) {
      id v27 = (void *)sub_24DCC8818();
    }
    else {
      id v27 = 0;
    }
    ((void (**)(void, void, void *))a5)[2](a5, 0, v27);
    swift_release();

    goto LABEL_14;
  }
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_24D3D5FB4;
  *(void *)(v21 + 24) = v10;
  id v22 = (void *)swift_allocObject();
  v22[2] = sub_24D3D5FB4;
  v22[3] = v10;
  v22[4] = a1;
  v22[5] = v28;
  v22[6] = a2;
  v22[7] = a3;
  v22[8] = a4;
  swift_retain_n();
  id v23 = a1;
  id v24 = v28;
  swift_unknownObjectRetain();
  swift_unknownObjectRetain();
  unint64_t v25 = a4;
  sub_24D62410C((uint64_t)"enumerate(with:lifetimeExtender:observer:completionHandler:)", 60, 2, (void (*)(void *, id))sub_24D6E4F8C, v21, (uint64_t)sub_24D6BDCEC, (uint64_t)v22);
  swift_release();

  swift_release();
  swift_release();
LABEL_14:

  _Block_release(a5);
}

uint64_t sub_24D6C691C(uint64_t a1, char a2, void *a3, char *a4, void (**a5)(void, void, void))
{
  uint64_t v10 = sub_24DCC92F8();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  MEMORY[0x270FA5388](v10);
  uint64_t v38 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24DCC9398();
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  id v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a5;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D6D1C30;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_24D6D1C30;
  *(void *)(v16 + 24) = v14;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a4;
  *(unsigned char *)(v16 + 48) = a2;
  *(void *)(v16 + 56) = a3;
  uint64_t v17 = &a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v18 = (void *)MEMORY[0x25332B1A0](&a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a5);
  swift_bridgeObjectRetain();
  char v19 = a4;
  id v20 = a3;
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      sub_24D429330(MEMORY[0x263F8EE78]);
      type metadata accessor for NSFileProviderItemIdentifier(0);
      sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
      sub_24D3EA320((unint64_t *)&unk_26B199E40, type metadata accessor for NSFileProviderItemIdentifier);
      id v22 = (void *)sub_24DCC9558();
      id v23 = (void *)sub_24DCC8818();
      ((void (**)(void, void *, void *))a5)[2](a5, v22, v23);
      swift_bridgeObjectRelease();

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v24 = (void *)MEMORY[0x25332B1A0](v17);
    if (v24)
    {
      unint64_t v25 = v24;
      id v36 = objc_msgSend(v24, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1518;
      id v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v42 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      id v27 = v38;
      uint64_t v28 = v41;
      sub_24DCCA5B8();
      uint64_t v29 = v36;
      MEMORY[0x2533282B0](0, v13, v27, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v28);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v13, v39);
    }
  }
  uint64_t v30 = *(void **)&v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v31 = *(void **)&v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v32 = (void *)swift_allocObject();
  void v32[2] = v19;
  v32[3] = sub_24D6BDCF0;
  v32[4] = v15;
  v32[5] = sub_24D6BDCF8;
  v32[6] = v16;
  uint64_t v33 = v19;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"fetchFSItems(forItemIdentifiers:materializingIfNeeded:request:completionHandler:)", 81, 2, v30, v31, (uint64_t)sub_24D3E5BC8, (uint64_t)v32);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6C6E94(uint64_t a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v32 = *(void *)(v9 - 8);
  uint64_t v33 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  id v13 = (void *)swift_allocObject();
  v13[2] = sub_24D6D1BF0;
  v13[3] = v12;
  v13[4] = a1;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = sub_24D6D1BF0;
  v14[4] = v12;
  uint64_t v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v16 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  _Block_copy(a3);
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v17 = sub_24D621D5C();
      sub_24D3FB6F8(0, (unint64_t *)&unk_26B199E90);
      id v18 = (void *)sub_24DCC9C18();
      ((void (**)(void, void *))a3)[2](a3, v18);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    char v19 = (void *)MEMORY[0x25332B1A0](v15);
    if (v19)
    {
      id v20 = v19;
      id v31 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1500;
      uint64_t v30 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v36 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v21 = v35;
      sub_24DCCA5B8();
      id v23 = v30;
      id v22 = v31;
      MEMORY[0x2533282B0](0, v11, v8, v30);
      _Block_release(v23);

      (*(void (**)(char *, uint64_t))(v34 + 8))(v8, v21);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v11, v33);
    }
  }
  id v24 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  unint64_t v25 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v26 = (void *)swift_allocObject();
  v26[2] = a2;
  v26[3] = sub_24D6BDD18;
  v26[4] = v13;
  v26[5] = sub_24D6E4F68;
  v26[6] = v14;
  id v27 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"decorate(_:completionHandler:)", 30, 2, v24, v25, (uint64_t)sub_24D3E5BC8, (uint64_t)v26);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_bridgeObjectRelease();
  return swift_release_n();
}

void *sub_24D6C7378(uint64_t a1)
{
  v52[30] = *(id *)MEMORY[0x263EF8340];
  uint64_t v3 = sub_24DCC9858();
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v4 = *(void **)(a1 + 40);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1992F0);
  swift_dynamicCastClassUnconditional();
  swift_retain();
  id v5 = sub_24D6A5E38(3);
  if (!v1)
  {
    id v6 = v5;
    swift_release();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    id v7 = sub_24D6A5E38(501);
    swift_release();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    id v8 = sub_24D6A5E38(2);
    swift_release();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    id v9 = sub_24D6A5E38(1);
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1941F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCD57D0;
    *(void *)(inited + 32) = 0xD000000000000023;
    *(void *)(inited + 40) = 0x800000024DD041A0;
    id v50 = v9;
    id v12 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v6);
    sub_24DBA51F0(2);
    uint64_t v14 = v13;

    *(void *)(inited + 48) = v14;
    *(void *)(inited + 56) = 0xD00000000000001FLL;
    *(void *)(inited + 64) = 0x800000024DD041D0;
    id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v7);
    sub_24DBA51F0(2);
    uint64_t v17 = v16;

    *(void *)(inited + 72) = v17;
    *(void *)(inited + 80) = 0xD000000000000023;
    *(void *)(inited + 88) = 0x800000024DD041F0;
    id v18 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v8);
    sub_24DBA51F0(2);
    uint64_t v20 = v19;

    *(void *)(inited + 96) = v20;
    *(void *)(inited + 104) = 0xD000000000000018;
    *(void *)(inited + 112) = 0x800000024DD04220;
    id v21 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v50);
    sub_24DBA51F0(2);
    uint64_t v23 = v22;

    *(void *)(inited + 120) = v23;
    sub_24D42ADC4(inited);
    swift_dynamicCastClassUnconditional();
    swift_retain();
    id v24 = sub_24D6A54C0();
    swift_release();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    id v51 = sub_24D6A5A98();
    swift_release();
    swift_dynamicCastClassUnconditional();
    swift_retain();
    unint64_t v25 = sub_24D6A5834();
    swift_release();
    uint64_t v26 = swift_initStackObject();
    *(_OWORD *)(v26 + 16) = xmmword_24DCD6E80;
    *(void *)(v26 + 32) = 0xD00000000000002DLL;
    *(void *)(v26 + 40) = 0x800000024DD04240;
    id v27 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v24);
    sub_24DBA51F0(2);
    uint64_t v29 = v28;

    *(void *)(v26 + 48) = v29;
    *(void *)(v26 + 56) = 0xD000000000000022;
    *(void *)(v26 + 64) = 0x800000024DD04270;
    id v30 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v51);
    sub_24DBA51F0(2);
    uint64_t v32 = v31;

    *(void *)(v26 + 72) = v32;
    *(void *)(v26 + 80) = 0xD000000000000034;
    *(void *)(v26 + 88) = 0x800000024DD042A0;
    id v33 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, v25);
    sub_24DBA51F0(2);
    uint64_t v35 = v34;

    *(void *)(v26 + 96) = v35;
    sub_24D42ADC4(v26);
    uint64_t v36 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1940C8);
    uint64_t v37 = (void *)sub_24DCC9558();
    swift_bridgeObjectRelease();
    v52[0] = 0;
    id v38 = objc_msgSend(v36, sel_dataWithJSONObject_options_error_, v37, 0, v52);

    id v39 = v52[0];
    if (v38)
    {
      uint64_t v40 = sub_24DCC8B68();
      unint64_t v42 = v41;

      sub_24DCC9848();
      uint64_t v4 = (void *)sub_24DCC9808();
      sub_24D400DCC(v40, v42);
      uint64_t v43 = (void *)sub_24DCC9558();
      swift_bridgeObjectRelease();
      v52[0] = 0;
      id v44 = objc_msgSend(v36, sel_dataWithJSONObject_options_error_, v43, 0, v52);

      id v45 = v52[0];
      if (v44)
      {
        uint64_t v46 = sub_24DCC8B68();
        unint64_t v48 = v47;

        sub_24DCC9848();
        sub_24DCC9808();
        sub_24D400DCC(v46, v48);
        return v4;
      }
      uint64_t v49 = v45;
      swift_bridgeObjectRelease();
      sub_24DCC8828();
    }
    else
    {
      uint64_t v4 = v39;
      swift_bridgeObjectRelease();
      sub_24DCC8828();
    }
    swift_willThrow();
    return v4;
  }
  swift_release();
  return v4;
}

uint64_t sub_24D6C7AA4(void *a1, char a2, char *a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9398();
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D5B3F9C;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_24D5B3F9C;
  *(void *)(v16 + 24) = v14;
  *(void *)(v16 + 32) = a1;
  *(void *)(v16 + 40) = a3;
  *(unsigned char *)(v16 + 48) = a2;
  uint64_t v17 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v18 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a4);
  id v19 = a1;
  uint64_t v20 = a3;
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      uint64_t v22 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a4)[2](a4, v22);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((v20[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v23 = (void *)MEMORY[0x25332B1A0](v17);
    if (v23)
    {
      id v24 = v23;
      id v33 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1461;
      unint64_t v25 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v38 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v26 = v37;
      sub_24DCCA5B8();
      id v27 = v33;
      MEMORY[0x2533282B0](0, v13, v10, v25);
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v26);
      (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
    }
  }
  uint64_t v28 = *(void **)&v20[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v29 = *(void **)&v20[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v30 = (void *)swift_allocObject();
  void v30[2] = v20;
  void v30[3] = sub_24D6E4F84;
  v30[4] = v15;
  v30[5] = sub_24D6BDE14;
  v30[6] = v16;
  uint64_t v31 = v20;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"reimportItems(below:markItemDataless:completionHandler:)", 56, 2, v28, v29, (uint64_t)sub_24D3E5BC8, (uint64_t)v30);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

id sub_24D6C7F64(char a1)
{
  id result = (id)MEMORY[0x25332B1A0](v1 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain);
  if (result)
  {
    uint64_t v4 = result;
    id v5 = (objc_class *)type metadata accessor for FPFSIndexer();
    id v6 = (char *)objc_allocWithZone(v5);
    *(void *)&v6[OBJC_IVAR____TtC9libfssync11FPFSIndexer_enumerator] = 0;
    id v7 = &v6[OBJC_IVAR____TtC9libfssync11FPFSIndexer_lastIndexedAnchor];
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1934B0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
    *(void *)&v6[OBJC_IVAR____TtC9libfssync11FPFSIndexer_spotlightIndexer] = 0;
    id result = objc_msgSend(v4, sel_provider);
    if (result)
    {
      uint64_t v9 = result;
      id v10 = objc_msgSend(result, sel_asAppExtensionBackedProvider);

      v12.receiver = v6;
      v12.super_class = v5;
      id v11 = objc_msgSendSuper2(&v12, sel_initWithExtension_domain_enabled_, v10, v4, a1 & 1);

      return v11;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_24D6C80C0()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EEA0]);
}

void sub_24D6C80D8(void *a1, __int16 a2)
{
  sub_24D666040(a1, a2 & 0x1FF, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t objectdestroy_140Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_24D4170B0(*(void *)(v0 + v4));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6C81F0(void *a1, unsigned char *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v34 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_24DCC9398();
  uint64_t v33 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a4;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D6DDE30;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = sub_24D6DDE30;
  v14[3] = v12;
  v14[4] = a1;
  uint64_t v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v16 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  uint64_t v17 = a4;
  id v18 = a1;
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v19 = sub_24D621D5C();
      swift_beginAccess();
      *(unsigned char *)(a3 + 16) = 0;
      dispatch_group_leave(v17);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v20 = (void *)MEMORY[0x25332B1A0](v15);
    if (v20)
    {
      id v21 = v20;
      id v32 = objc_msgSend(v20, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_3532;
      uint64_t v22 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v38 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v23 = v34;
      uint64_t v24 = v37;
      sub_24DCCA5B8();
      unint64_t v25 = v32;
      MEMORY[0x2533282B0](0, v11, v23, v22);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v36 + 8))(v23, v24);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v11, v35);
    }
  }
  uint64_t v26 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v27 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v28 = (void *)swift_allocObject();
  id v28[2] = a2;
  v28[3] = sub_24D6C9674;
  v28[4] = v13;
  v28[5] = sub_24D6DDE8C;
  v28[6] = v14;
  uint64_t v29 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"isItemDataless(for:completion:)", 31, 2, v26, v27, (uint64_t)sub_24D3E5BC8, (uint64_t)v28);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

void sub_24D6C86BC(void *a1, unsigned char *a2, uint64_t a3, void *a4)
{
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v40 = *(void *)(v8 - 8);
  uint64_t v41 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v38 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_24DCC9398();
  uint64_t v37 = *(void *)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a3;
  *(void *)(v14 + 24) = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D6DDEE4;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = sub_24D6DDEE4;
  v16[3] = v14;
  v16[4] = a1;
  uint64_t v17 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v18 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain();
  id v19 = a4;
  id v20 = a1;
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      uint64_t v22 = sub_24DCC8A58();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v13, 1, 1, v22);
      uint64_t v23 = swift_projectBox();
      swift_beginAccess();
      sub_24D6DDF0C((uint64_t)v13, v23);
      dispatch_group_leave(v19);
      sub_24D415F74((uint64_t)v13, (uint64_t *)&unk_26B199050);

      swift_release_n();
      swift_release();
      swift_release();

      return;
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v24 = (void *)MEMORY[0x25332B1A0](v17);
    if (v24)
    {
      unint64_t v25 = v24;
      id v35 = objc_msgSend(v24, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_3558;
      uint64_t v26 = _Block_copy(aBlock);
      id v27 = v36;
      sub_24DCC9348();
      uint64_t v42 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v28 = v38;
      uint64_t v29 = v41;
      sub_24DCCA5B8();
      id v30 = v35;
      MEMORY[0x2533282B0](0, v27, v28, v26);
      _Block_release(v26);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v28, v29);
      (*(void (**)(char *, uint64_t))(v37 + 8))(v27, v39);
    }
  }
  uint64_t v31 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v32 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = a2;
  v33[3] = sub_24D6DDEEC;
  v33[4] = v15;
  v33[5] = sub_24D6DDEFC;
  v33[6] = v16;
  uint64_t v34 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"materializedURL(for:completion:)", 32, 2, v31, v32, (uint64_t)sub_24D3E5BC8, (uint64_t)v33);
  swift_release_n();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_24D6C8C44()
{
  return swift_deallocObject();
}

uint64_t sub_24D6C8C5C()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6C8C78(uint64_t a1)
{
  sub_24D66B124(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_24D6C8C84()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6C8CA0(uint64_t a1)
{
  return sub_24D66BE14(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_24D6C8CAC()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_24DCC9078();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8A18();
  int v13 = 0;
  char v14 = 1;
  uint64_t result = sub_24DBAA3E0(4294967294, v9, v10, 0x200000, 0, 0, (uint64_t)&v13, (uint64_t)sub_24D66CB64, 0);
  if (v14)
  {
    __break(1u);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return result;
}

uint64_t sub_24D6C9040(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D66CD64);
}

uint64_t sub_24D6C905C(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D66D4E4);
}

uint64_t sub_24D6C9074()
{
  return objectdestroy_32Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6C9090()
{
  return objectdestroy_466Tm();
}

uint64_t sub_24D6C9098(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D66E1CC);
}

uint64_t sub_24D6C90B4()
{
  return objectdestroy_32Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6C90D0()
{
  return objectdestroy_466Tm();
}

uint64_t sub_24D6C90D8(uint64_t a1)
{
  return sub_24D6D5B74(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24D6765FC);
}

uint64_t sub_24D6C90F8(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D679ED0);
}

uint64_t sub_24D6C9110()
{
  return objectdestroy_294Tm();
}

uint64_t sub_24D6C9118(uint64_t a1)
{
  return sub_24D67A608(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6C9128()
{
  sub_24D40160C(*(id *)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(unsigned char *)(v0 + 25));

  return swift_deallocObject();
}

uint64_t sub_24D6C9170()
{
  sub_24D4170B0(*(void *)(v0 + 32));
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6C91D0(uint64_t a1, uint64_t a2)
{
  return sub_24D6DF328(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24D681264);
}

uint64_t sub_24D6C91F8()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6C9268()
{
  return sub_24D681930(*(NSObject **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(uint64_t **)(v0 + 56), *(void **)(v0 + 64), *(void **)(v0 + 72), *(void *)(v0 + 80), *(void **)(v0 + 88));
}

uint64_t sub_24D6C92B0(uint64_t a1)
{
  return sub_24D6E3EF0(a1, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24D6842DC);
}

uint64_t sub_24D6C92D4()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6C93C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = v1 + v4;
  uint64_t v10 = *(void (**)(id))(v1 + v5);
  uint64_t v11 = *(void (**)(id))(v1 + v5 + 8);
  uint64_t v12 = *(void **)(v1 + v6);
  uint64_t v13 = *(void *)(v1 + v7);
  double v14 = *(double *)(v1 + v8);
  double v15 = *(double *)(v1 + v8 + 8);
  uint64_t v16 = (uint64_t *)(v1 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];

  sub_24D687478(a1, v9, v10, v11, v12, v13, v17, v18, v14, v15);
}

uint64_t sub_24D6C94A4(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_24D6C94D4()
{
  return objectdestroy_104Tm();
}

uint64_t sub_24D6C94E8(uint64_t a1)
{
  return sub_24D687E7C(a1, *(id *)(v1 + 16), *(uint64_t (**)(id, void))(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

void sub_24D6C94F8(uint64_t a1)
{
  sub_24D688960(a1, *(void *)(v1 + 16), *(void (**)(void, id))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6C9504(uint64_t a1)
{
  return sub_24D689144(a1, *(void **)(v1 + 16));
}

uint64_t sub_24D6C951C(uint64_t a1)
{
  return sub_24D68BEF0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_24D6C9530(uint64_t a1)
{
  return sub_24D68C380(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_24D6C953C()
{
  return objectdestroy_665Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6C9558(void *a1)
{
  return sub_24D68C8B4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6C9568(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D68D788);
}

uint64_t sub_24D6C9584(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D68DB6C);
}

uint64_t objectdestroy_412Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6C95F0(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D68DFEC);
}

uint64_t sub_24D6C9608()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEE8]);
}

uint64_t sub_24D6C9624(uint64_t a1)
{
  return sub_24D68EB9C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24D6C9634()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEE8]);
}

uint64_t sub_24D6C9650(uint64_t a1)
{
  return sub_24D68F11C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24D6C9660(uint64_t a1)
{
  return sub_24D68F3A4(a1, *(void (**)(void))(v1 + 16));
}

uint64_t sub_24D6C9668(uint64_t a1)
{
  return sub_24D68FBC4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24D6C9674(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_24D6C96A8(uint64_t a1)
{
  return sub_24D6902B0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_24D6C96B8()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6C96D4(void *a1, uint64_t a2)
{
  return sub_24D69059C(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40));
}

uint64_t sub_24D6C96E0()
{
  return objectdestroy_294Tm();
}

uint64_t sub_24D6C96E8(void *a1, uint64_t a2)
{
  return sub_24D690924(a1, a2, *(uint64_t (**)(void))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_24D6C96F4()
{
  return objectdestroy_294Tm();
}

uint64_t sub_24D6C96FC(void *a1, uint64_t a2)
{
  return sub_24D690D98(a1, a2, *(void (**)(void))(v2 + 16), *(void *)(v2 + 24), *(unsigned char **)(v2 + 32));
}

uint64_t sub_24D6C9708()
{
  return objectdestroy_665Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6C9724(objc_class *a1)
{
  return sub_24D691F90(a1, *(void *)(v1 + 16), *(char ***)(v1 + 24), *(NSObject **)(v1 + 32), *(objc_class **)(v1 + 40));
}

uint64_t sub_24D6C9748(uint64_t a1)
{
  return sub_24D69B7D8(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24D6C9754(uint64_t a1)
{
  return sub_24D69BCF0(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24D6C9760(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24D6C978C(uint64_t a1)
{
  return sub_24D69BF34(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32));
}

uint64_t sub_24D6C979C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_24D3D3790;
  return sub_24D69C44C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_24D6C9868()
{
  uint64_t v2 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  char v5 = *(unsigned char *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = v0 + v3;
  uint64_t v8 = *(void *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = swift_task_alloc();
  long long v10 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v9;
  *(void *)uint64_t v9 = v1;
  *(void *)(v9 + 8) = sub_24D3D3790;
  *(void *)(v9 + 48) = v8;
  *(_OWORD *)(v9 + 32) = v10;
  *(void *)(v9 + 16) = v6;
  *(void *)(v9 + 24) = v7;
  *(unsigned char *)(v9 + 96) = v5;
  return MEMORY[0x270FA2498](sub_24D69DF10, 0, 0);
}

uint64_t sub_24D6C99A8(uint64_t a1, void *a2, void *a3, uint64_t a4)
{
  uint64_t v40 = a4;
  id v36 = a3;
  id v34 = a2;
  uint64_t v6 = sub_24DCC8A58();
  uint64_t v35 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_24DCC93F8();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  double v15 = (uint64_t *)((char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v38 = *(void *)(a1 + 16);
  uint64_t v16 = type metadata accessor for VFSFileTree(0);
  uint64_t v17 = *(void **)(swift_dynamicCastClassUnconditional() + 216);
  *double v15 = v17;
  (*(void (**)(void *, void, uint64_t))(v13 + 104))(v15, *MEMORY[0x263F8F0E0], v12);
  id v18 = v17;
  LOBYTE(v17) = sub_24DCC9418();
  (*(void (**)(void *, uint64_t))(v13 + 8))(v15, v12);
  if ((v17 & 1) == 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v19 = *(void *)(v38 + 32) + 16;
  uint64_t v37 = v16;
  objc_msgSend(*(id *)(swift_dynamicCastClassUnconditional() + 232), sel_suspend);
  uint64_t v20 = *(void *)(v40 + 16);
  if (!v20) {
    goto LABEL_7;
  }
  uint64_t v33 = v19;
  id v21 = (void (**)(char *, uint64_t))(v35 + 8);
  swift_bridgeObjectRetain();
  uint64_t v22 = 32;
  do
  {
    id v23 = *(id *)(v40 + v22);
    id v24 = objc_msgSend(v23, sel_knownFolder);
    sub_24DCC89E8();

    id v25 = objc_msgSend(v23, sel_logicalLocation);
    sub_24DCC89E8();

    sub_24D6BE7A8();
    if (v4)
    {

      id v30 = *v21;
      (*v21)(v9, v6);
      v30(v11, v6);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }

    uint64_t v26 = *v21;
    (*v21)(v9, v6);
    v26(v11, v6);
    v22 += 16;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
LABEL_7:
  double v15 = v36;
  if (objc_sync_enter(v15)) {
    goto LABEL_18;
  }
  *((unsigned char *)v15 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_urlsAreInTransientState) = 0;
  id v27 = (char *)v15 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs;
  uint64_t v28 = *(void **)((char *)v15 + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___cachedURLs);
  *(void *)id v27 = 0;
  unsigned __int8 v29 = v27[8];
  v27[8] = -1;
  sub_24D6BD3EC(v28, v29);
  if (objc_sync_exit(v15)) {
    goto LABEL_19;
  }

  swift_dynamicCastClassUnconditional();
  double v15 = v15;
  swift_retain();
  if (objc_sync_enter(v15)) {
LABEL_18:
  }
    sub_24DA82DB0((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 314, (uint64_t)v15);
  sub_24D3DE190((char *)v15, aBlock);
  if (!v4)
  {
    if (!objc_sync_exit(v15))
    {

      sub_24DC41B70(aBlock[0]);
      swift_release();
      swift_bridgeObjectRelease();
      aBlock[4] = (uint64_t)nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_24D3D2E94;
      aBlock[3] = (uint64_t)&block_descriptor_3269;
      id v32 = _Block_copy(aBlock);
      objc_msgSend(v34, sel_didRefreshRootURLsWithCompletionHandler_, v32);
      _Block_release(v32);
      goto LABEL_16;
    }
LABEL_19:
    sub_24DA82DC4((uint64_t)"/Library/Caches/com.apple.xbs/Sources/FileProviderTools/fssync/libfssync/utilities/Utilities.swift", 98, 2, 318, (uint64_t)v15);
  }
  if (objc_sync_exit(v15)) {
    goto LABEL_19;
  }
  swift_release();

LABEL_16:
  objc_msgSend(*(id *)(swift_dynamicCastClassUnconditional() + 232), sel_resume);
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D6C9F18(uint64_t a1, void *a2, char *a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v41 = *(void *)(v8 - 8);
  uint64_t v42 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v39 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24DCC9398();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a4;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  uint64_t v13 = v12 | 0x3000000000000004;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D5B3F9C;
  *(void *)(v14 + 24) = v11;
  double v15 = (void *)swift_allocObject();
  v15[2] = sub_24D5B3F9C;
  v15[3] = v11;
  v15[4] = a3;
  v15[5] = a1;
  v15[6] = v13;
  uint64_t v16 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v17 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  _Block_copy(a4);
  id v18 = a2;
  uint64_t v19 = a3;
  swift_retain();
  if (v17)
  {
    if (objc_msgSend(v17, sel_unableToStartup))
    {
      id v20 = sub_24D621D5C();
      id v21 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a4)[2](a4, v21);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v22 = (void *)MEMORY[0x25332B1A0](v16);
    if (v22)
    {
      id v23 = v22;
      id v36 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1375;
      uint64_t v35 = _Block_copy(aBlock);
      id v24 = v37;
      sub_24DCC9348();
      uint64_t v43 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      id v25 = v39;
      uint64_t v26 = v42;
      sub_24DCCA5B8();
      uint64_t v28 = v35;
      id v27 = v36;
      MEMORY[0x2533282B0](0, v24, v25, v35);
      _Block_release(v28);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v25, v26);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v24, v40);
    }
  }
  unsigned __int8 v29 = *(void **)&v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v30 = *(void **)&v19[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v31 = (void *)swift_allocObject();
  v31[2] = v19;
  v31[3] = sub_24D6E4F84;
  v31[4] = v14;
  v31[5] = sub_24D6C9098;
  v31[6] = v15;
  id v32 = v19;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"detachKnownFolders(_:request:completionHandler:)", 48, 2, v29, v30, (uint64_t)sub_24D3E5BC8, (uint64_t)v31);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CA434(uint64_t a1, void *a2, void *a3, char *a4, void (**a5)(void, void))
{
  id v44 = a2;
  uint64_t v9 = sub_24DCC92F8();
  uint64_t v42 = *(void *)(v9 - 8);
  uint64_t v43 = v9;
  MEMORY[0x270FA5388](v9);
  uint64_t v40 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_24DCC9398();
  uint64_t v39 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v41);
  uint64_t v38 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a5;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a1;
  *(void *)(v13 + 24) = a3;
  uint64_t v14 = v13 | 0x3000000000000006;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D5B3F9C;
  *(void *)(v15 + 24) = v12;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = sub_24D5B3F9C;
  v16[3] = v12;
  v16[4] = a4;
  v16[5] = a1;
  id v17 = v44;
  void v16[6] = v14;
  v16[7] = v17;
  id v18 = &a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v19 = (void *)MEMORY[0x25332B1A0](&a4[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  _Block_copy(a5);
  id v20 = a3;
  id v21 = a4;
  swift_retain();
  if (v19)
  {
    if (objc_msgSend(v19, sel_unableToStartup))
    {
      id v22 = sub_24D621D5C();
      id v23 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a5)[2](a5, v23);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((v21[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v24 = (void *)MEMORY[0x25332B1A0](v18);
    if (v24)
    {
      id v25 = v24;
      id v44 = objc_msgSend(v24, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1355;
      uint64_t v37 = _Block_copy(aBlock);
      uint64_t v26 = v38;
      sub_24DCC9348();
      uint64_t v45 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      id v27 = v40;
      uint64_t v28 = v43;
      sub_24DCCA5B8();
      unsigned __int8 v29 = v37;
      id v30 = v44;
      MEMORY[0x2533282B0](0, v26, v27, v37);
      _Block_release(v29);

      (*(void (**)(char *, uint64_t))(v42 + 8))(v27, v28);
      (*(void (**)(char *, uint64_t))(v39 + 8))(v26, v41);
    }
  }
  uint64_t v31 = *(void **)&v21[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v32 = *(void **)&v21[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v33 = (void *)swift_allocObject();
  v33[2] = v21;
  v33[3] = sub_24D6E4F84;
  v33[4] = v15;
  v33[5] = sub_24D6C90D8;
  v33[6] = v16;
  uint64_t v34 = v21;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"attachKnownFolders(_:options:request:completionHandler:)", 56, 2, v31, v32, (uint64_t)sub_24D3E5BC8, (uint64_t)v33);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CA95C(void *a1, uint64_t a2, unsigned char *a3, void (**a4)(void, void))
{
  uint64_t v8 = sub_24DCC92F8();
  uint64_t v35 = *(void *)(v8 - 8);
  uint64_t v36 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC9398();
  uint64_t v33 = *(void *)(v11 - 8);
  uint64_t v34 = v11;
  MEMORY[0x270FA5388](v11);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a4;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_24D5B3F9C;
  *(void *)(v15 + 24) = v14;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = sub_24D5B3F9C;
  v16[3] = v14;
  v16[4] = a1;
  v16[5] = a2;
  id v17 = &a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v18 = (void *)MEMORY[0x25332B1A0](&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a4);
  id v19 = a1;
  if (v18)
  {
    if (objc_msgSend(v18, sel_unableToStartup))
    {
      id v20 = sub_24D621D5C();
      id v21 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a4)[2](a4, v21);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v22 = (void *)MEMORY[0x25332B1A0](v17);
    if (v22)
    {
      id v23 = v22;
      id v32 = objc_msgSend(v22, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1324;
      id v24 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v37 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v25 = v36;
      sub_24DCCA5B8();
      uint64_t v26 = v32;
      MEMORY[0x2533282B0](0, v13, v10, v24);
      _Block_release(v24);

      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v25);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v13, v34);
    }
  }
  id v27 = *(void **)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v28 = *(void **)&a3[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  unsigned __int8 v29 = (void *)swift_allocObject();
  void v29[2] = a3;
  v29[3] = sub_24D6E4F84;
  v29[4] = v15;
  v29[5] = sub_24D6E4FB0;
  v29[6] = v16;
  id v30 = a3;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"ingestFromCacheItem(with:requestedFields:request:completionHandler:)", 68, 2, v27, v28, (uint64_t)sub_24D3E5BC8, (uint64_t)v29);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CAE10(uint64_t result)
{
  if (result)
  {
    unint64_t v1 = result;
    if (result < 15)
    {
      return 0;
    }
    else
    {
      sub_24DCC8518();
      swift_allocObject();
      sub_24DCC8508();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_24DCC8AC8();
        uint64_t result = swift_allocObject();
        *(void *)(result + 16) = 0;
        *(void *)(result + 24) = 0;
      }
      else
      {
        return 0;
      }
    }
  }
  return result;
}

void sub_24D6CAEAC(uint64_t a1, void *a2, char *a3, void (**a4)(const void *, void *, void *))
{
  uint64_t v80 = a1;
  uint64_t v81 = a3;
  unint64_t v79 = a2;
  uint64_t v5 = sub_24DCC92F8();
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v71 = (char *)&v66 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v70 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v69 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v74 = (uint64_t)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v75 = (char *)&v66 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v66 - v15;
  MEMORY[0x270FA5388](v14);
  id v18 = (char *)&v66 - v17;
  uint64_t v19 = sub_24DCC8A58();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = *(void *)(v20 + 64);
  MEMORY[0x270FA5388](v19);
  id v22 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = swift_allocObject();
  id v24 = a4;
  *(void *)(v23 + 16) = a4;
  uint64_t v25 = &v81[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v26 = (void *)MEMORY[0x25332B1A0](&v81[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  if (!v26)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, 1, 1, v19);
    id v50 = v24;
    _Block_copy(v24);
    id v51 = sub_24D621D5C();
    sub_24D415FD0((uint64_t)v18, (uint64_t)v16, (uint64_t *)&unk_26B199050);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19) == 1)
    {
      id v52 = 0;
    }
    else
    {
      id v52 = (void *)sub_24DCC8948();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v16, v19);
    }
    uint64_t v64 = (void *)sub_24DCC8818();
    v50[2](v50, v52, v64);

    sub_24D415F74((uint64_t)v18, (uint64_t *)&unk_26B199050);
LABEL_15:
    swift_release();
    return;
  }
  uint64_t v67 = v7;
  id v77 = v26;
  uint64_t v27 = swift_allocObject();
  uint64_t v78 = v25;
  *(void *)(v27 + 16) = sub_24D5B3204;
  *(void *)(v27 + 24) = v23;
  uint64_t v76 = v27;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))((char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0), v80, v19);
  unint64_t v28 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v80 = v23;
  unint64_t v29 = (v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = swift_allocObject();
  uint64_t v68 = v20;
  uint64_t v33 = v22;
  uint64_t v34 = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v32 + v28, v33, v19);
  uint64_t v35 = (void (**)(uint64_t, uint64_t))(v32 + v29);
  uint64_t v37 = (void (*)(uint64_t, uint64_t))v80;
  uint64_t v36 = v81;
  *uint64_t v35 = sub_24D5B3204;
  v35[1] = v37;
  *(void *)(v32 + v30) = v36;
  uint64_t v38 = v24;
  uint64_t v39 = v79;
  *(void *)(v32 + v31) = v79;
  uint64_t v40 = v78;
  uint64_t v41 = (void *)MEMORY[0x25332B1A0](v78);
  swift_retain_n();
  _Block_copy(v38);
  swift_retain();
  uint64_t v42 = v36;
  id v43 = v39;
  if (!v41)
  {
LABEL_9:
    if ((v42[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
    {
      int v53 = (void *)MEMORY[0x25332B1A0](v40);
      if (v53)
      {
        uint64_t v54 = v53;
        id v55 = objc_msgSend(v53, sel_serialQueue);

        aBlock[4] = nullsub_1;
        aBlock[5] = 0;
        aBlock[0] = MEMORY[0x263EF8330];
        aBlock[1] = 1107296256;
        aBlock[2] = sub_24D3D2E94;
        aBlock[3] = &block_descriptor_1302;
        uint64_t v56 = _Block_copy(aBlock);
        uint64_t v57 = v69;
        sub_24DCC9348();
        uint64_t v82 = MEMORY[0x263F8EE78];
        sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
        sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
        uint64_t v58 = v71;
        uint64_t v59 = v73;
        sub_24DCCA5B8();
        MEMORY[0x2533282B0](0, v57, v58, v56);
        _Block_release(v56);

        (*(void (**)(char *, uint64_t))(v72 + 8))(v58, v59);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v57, v67);
      }
    }
    uint64_t v60 = *(void **)&v42[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
    uint64_t v61 = *(void **)&v42[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
    uint64_t v62 = (void *)swift_allocObject();
    v62[2] = v42;
    v62[3] = sub_24D6E5ED4;
    v62[4] = v76;
    v62[5] = sub_24D6C92A4;
    v62[6] = v32;
    uint64_t v63 = v42;
    swift_retain();
    swift_retain();
    sub_24D3E2DA8((uint64_t)"trashItem(at:request:completionHandler:)", 40, 2, v60, v61, (uint64_t)sub_24D3E5BC8, (uint64_t)v62);
    swift_release();

    swift_release_n();
    swift_release();
    goto LABEL_15;
  }
  if ((objc_msgSend(v41, sel_unableToStartup) & 1) == 0)
  {

    goto LABEL_9;
  }
  id v44 = sub_24D621D5C();
  uint64_t v45 = v68;
  uint64_t v46 = (uint64_t)v75;
  uint64_t v47 = v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v75, 1, 1, v34);
  uint64_t v48 = v74;
  sub_24D415FD0(v46, v74, (uint64_t *)&unk_26B199050);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v45 + 48))(v48, 1, v47) == 1)
  {
    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = (void *)sub_24DCC8948();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v48, v47);
  }
  uint64_t v65 = (void *)sub_24DCC8818();
  v38[2](v38, v49, v65);

  sub_24D415F74(v46, (uint64_t *)&unk_26B199050);
  swift_release();

  swift_release_n();
  swift_release();
}

uint64_t sub_24D6CB720(uint64_t a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v41 = *(void *)(v6 - 8);
  uint64_t v42 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v39 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_24DCC9398();
  uint64_t v38 = *(void *)(v40 - 8);
  MEMORY[0x270FA5388](v40);
  uint64_t v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8A58();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a3;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D5B3F9C;
  *(void *)(v14 + 24) = v13;
  uint64_t v43 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, v9);
  unint64_t v15 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v16 = (v11 + v15 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v15, v12, v9);
  id v18 = (void *)(v17 + v16);
  *id v18 = sub_24D5B3F9C;
  v18[1] = v13;
  uint64_t v19 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v20 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  if (v20)
  {
    if (objc_msgSend(v20, sel_unableToStartup))
    {
      id v21 = sub_24D621D5C();
      id v22 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v22);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v23 = (void *)MEMORY[0x25332B1A0](v19);
    if (v23)
    {
      id v24 = v23;
      id v36 = objc_msgSend(v23, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1284;
      uint64_t v25 = _Block_copy(aBlock);
      uint64_t v26 = v37;
      sub_24DCC9348();
      uint64_t v44 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v27 = v39;
      uint64_t v28 = v42;
      sub_24DCCA5B8();
      unint64_t v29 = v36;
      MEMORY[0x2533282B0](0, v26, v27, v25);
      _Block_release(v25);

      (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v28);
      (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v40);
    }
  }
  unint64_t v30 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  unint64_t v31 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v32 = (void *)swift_allocObject();
  void v32[2] = a2;
  v32[3] = sub_24D6E4F84;
  v32[4] = v43;
  v32[5] = sub_24D6C92B0;
  v32[6] = v17;
  uint64_t v33 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"resolveConflict(at:completionHandler:)", 38, 2, v30, v31, (uint64_t)sub_24D3E5BC8, (uint64_t)v32);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release();
  return swift_release();
}

uint64_t sub_24D6CBCB8(uint64_t a1, char a2)
{
  uint64_t v19 = *MEMORY[0x263EF8340];
  uint64_t v2 = MEMORY[0x263F8EE78];
  if ((a2 & 1) == 0)
  {
    id v3 = objc_msgSend(objc_allocWithZone((Class)FPGSStorageManager), sel_init);
    uint64_t v4 = (void *)sub_24DCC8948();
    *(void *)&v18[0] = 0;
    id v5 = objc_msgSend(v3, sel_permanentStorageForItemAtURL_allocateIfNone_error_, v4, 0, v18);

    if (v5)
    {
      uint64_t v6 = *MEMORY[0x263F40698];
      id v7 = *(id *)&v18[0];
      id v8 = objc_msgSend(v5, sel_enumeratorForAdditionsInNameSpace_withOptions_withoutOptions_ordering_, v6, 0, 0, 0);
      uint64_t v14 = v2;
      if (v8)
      {
        uint64_t v9 = v8;
        while (1)
        {
          if (objc_msgSend(v9, sel_nextObject, v14))
          {
            sub_24DCCA528();
            swift_unknownObjectRelease();
          }
          else
          {
            memset(v15, 0, sizeof(v15));
          }
          sub_24D3F0BA0((uint64_t)v15, (uint64_t)&v16, qword_26B197F50);
          if (!*((void *)&v17 + 1)) {
            break;
          }
          sub_24D3F7E7C(&v16, v18);
          sub_24D3F7E8C((uint64_t)v18, (uint64_t)&v16);
          sub_24D3FB6F8(0, (unint64_t *)&qword_26986C6C0);
          if (swift_dynamicCast())
          {
            id v10 = *(id *)&v15[0];
            MEMORY[0x253327CA0]();
            if (*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              sub_24DCC9C78();
            }
            sub_24DCC9CD8();
            sub_24DCC9C48();
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
        }
      }
      else
      {
        long long v16 = 0u;
        long long v17 = 0u;
      }

      sub_24D415F74((uint64_t)&v16, qword_26B197F50);
      return v14;
    }
    else
    {
      id v11 = *(id *)&v18[0];
      uint64_t v12 = (void *)sub_24DCC8828();

      swift_willThrow();
    }
  }
  return v2;
}

uint64_t sub_24D6CBF5C(void *a1, char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v53 = *(void *)(v6 - 8);
  uint64_t v54 = v6;
  MEMORY[0x270FA5388](v6);
  id v51 = (char *)&v47 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_24DCC9398();
  uint64_t v50 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v49 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a3;
  _Block_copy(a3);
  id v10 = a1;
  char v11 = sub_24DA7EB38((uint64_t)a1);
  uint64_t v12 = (void *)sub_24DCC8818();
  id v13 = objc_msgSend(v12, sel_userInfo);

  uint64_t v14 = sub_24DCC9578();
  if (!*(void *)(v14 + 16) || (unint64_t v15 = sub_24D4053BC(0xD00000000000001FLL, 0x800000024DD01C30), (v16 & 1) == 0))
  {
    long long aBlock = 0u;
    long long v58 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_24D3F7E8C(*(void *)(v14 + 56) + 32 * v15, (uint64_t)&aBlock);
  swift_bridgeObjectRelease();
  if (!*((void *)&v58 + 1))
  {
LABEL_8:
    sub_24D415F74((uint64_t)&aBlock, qword_26B197F50);
    uint64_t v17 = 0;
    goto LABEL_9;
  }
  if (swift_dynamicCast()) {
    uint64_t v17 = v56;
  }
  else {
    uint64_t v17 = 0;
  }
LABEL_9:
  id v18 = (void *)sub_24DCC8818();
  id v19 = objc_msgSend(v18, sel_userInfo);

  uint64_t v20 = sub_24DCC9578();
  uint64_t v21 = sub_24DCC97E8();
  if (*(void *)(v20 + 16) && (unint64_t v23 = sub_24D4053BC(v21, v22), (v24 & 1) != 0))
  {
    sub_24D3F7E8C(*(void *)(v20 + 56) + 32 * v23, (uint64_t)&aBlock);
  }
  else
  {
    long long aBlock = 0u;
    long long v58 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v58 + 1))
  {
    sub_24D415F74((uint64_t)&aBlock, qword_26B197F50);
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    if (v11) {
      goto LABEL_21;
    }
LABEL_24:
    if (!v17)
    {
      swift_bridgeObjectRelease();
      a3[2](a3, 0);
      return swift_release();
    }
    goto LABEL_25;
  }
  int v25 = swift_dynamicCast();
  if (v25) {
    uint64_t v26 = v55;
  }
  else {
    uint64_t v26 = 0;
  }
  if (v25) {
    uint64_t v27 = v56;
  }
  else {
    uint64_t v27 = 0;
  }
  if (!v11) {
    goto LABEL_24;
  }
LABEL_21:
  if (!v17)
  {
    uint64_t v28 = 0;
    goto LABEL_26;
  }
LABEL_25:
  unint64_t v29 = (void *)sub_24DCC97B8();
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_24D3D3C4C(v29);
LABEL_26:
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_24D5B3F9C;
  *(void *)(v30 + 24) = v9;
  *(void *)(v30 + 32) = a2;
  *(unsigned char *)(v30 + 40) = v11;
  *(void *)(v30 + 48) = v26;
  *(void *)(v30 + 56) = v27;
  *(void *)(v30 + 64) = v28;
  *(void *)(v30 + 72) = a1;
  unint64_t v31 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v32 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  id v33 = a1;
  swift_retain();
  if (v32)
  {
    swift_retain();
    a2;
    if (objc_msgSend(v32, sel_unableToStartup))
    {

      swift_release();
      swift_release();

      return swift_release();
    }
  }
  else
  {
    swift_retain();
    uint64_t v34 = a2;
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v35 = (void *)MEMORY[0x25332B1A0](v31);
    if (v35)
    {
      id v36 = v35;
      id v48 = objc_msgSend(v35, sel_serialQueue);

      uint64_t v59 = nullsub_1;
      uint64_t v60 = 0;
      *(void *)&long long aBlock = MEMORY[0x263EF8330];
      *((void *)&aBlock + 1) = 1107296256;
      *(void *)&long long v58 = sub_24D3D2E94;
      *((void *)&v58 + 1) = &block_descriptor_1214;
      uint64_t v47 = _Block_copy(&aBlock);
      uint64_t v37 = v49;
      sub_24DCC9348();
      uint64_t v55 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v38 = v51;
      uint64_t v39 = v54;
      sub_24DCCA5B8();
      uint64_t v41 = v47;
      uint64_t v40 = v48;
      MEMORY[0x2533282B0](0, v37, v38, v47);
      _Block_release(v41);

      (*(void (**)(char *, uint64_t))(v53 + 8))(v38, v39);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v52);
    }
  }
  uint64_t v42 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v43 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v44 = (void *)swift_allocObject();
  v44[2] = a2;
  v44[3] = nullsub_1;
  v44[4] = 0;
  v44[5] = sub_24D6C9514;
  v44[6] = v30;
  uint64_t v45 = a2;
  swift_retain();
  sub_24D3E2DA8((uint64_t)"signalErrorResolved(_:completionHandler:)", 41, 2, v42, v43, (uint64_t)sub_24D3E5BC8, (uint64_t)v44);
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_24D6CC654(char a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v32 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D5B3F9C;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_24D5B3F9C;
  *(void *)(v14 + 24) = v12;
  *(unsigned char *)(v14 + 32) = a1;
  unint64_t v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  char v16 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v17 = sub_24D621D5C();
      id v18 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v18);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v19 = (void *)MEMORY[0x25332B1A0](v15);
    if (v19)
    {
      uint64_t v20 = v19;
      id v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1199;
      uint64_t v28 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v33 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v22 = v28;
      uint64_t v21 = v29;
      MEMORY[0x2533282B0](0, v11, v8, v28);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v6);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    }
  }
  unint64_t v23 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  char v24 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  int v25 = (void *)swift_allocObject();
  v25[2] = a2;
  v25[3] = sub_24D6E4F84;
  v25[4] = v13;
  v25[5] = sub_24D6E4F60;
  v25[6] = v14;
  uint64_t v26 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"updateShouldRetryThrottledOperations(_:completionHandler:)", 58, 2, v23, v24, (uint64_t)sub_24D3E5BC8, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CCB00(uint64_t a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D5B3F9C;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = sub_24D5B3F9C;
  v14[4] = v12;
  unint64_t v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  char v16 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  swift_unknownObjectRetain();
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v17 = sub_24D621D5C();
      id v18 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v18);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v19 = (void *)MEMORY[0x25332B1A0](v15);
    if (v19)
    {
      uint64_t v20 = v19;
      id v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1147;
      uint64_t v21 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v34 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v22 = v33;
      sub_24DCCA5B8();
      unint64_t v23 = v29;
      MEMORY[0x2533282B0](0, v11, v8, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v22);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    }
  }
  char v24 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  int v25 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a2;
  v26[3] = sub_24D6E4F84;
  v26[4] = v13;
  v26[5] = sub_24D6E4F5C;
  v26[6] = v14;
  uint64_t v27 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"subscribe(toUploadProgressUpdates:completionHandler:)", 53, 2, v24, v25, (uint64_t)sub_24D3E5BC8, (uint64_t)v26);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CCFB4(uint64_t a1, unsigned char *a2, void (**a3)(void, void))
{
  uint64_t v6 = sub_24DCC92F8();
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  MEMORY[0x270FA5388](v6);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC9398();
  uint64_t v30 = *(void *)(v9 - 8);
  uint64_t v31 = v9;
  MEMORY[0x270FA5388](v9);
  char v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = sub_24D5B3F9C;
  *(void *)(v13 + 24) = v12;
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = a1;
  v14[3] = sub_24D5B3F9C;
  v14[4] = v12;
  unint64_t v15 = &a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  char v16 = (void *)MEMORY[0x25332B1A0](&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a3);
  swift_unknownObjectRetain();
  if (v16)
  {
    if (objc_msgSend(v16, sel_unableToStartup))
    {
      id v17 = sub_24D621D5C();
      id v18 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a3)[2](a3, v18);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v19 = (void *)MEMORY[0x25332B1A0](v15);
    if (v19)
    {
      uint64_t v20 = v19;
      id v29 = objc_msgSend(v19, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1128;
      uint64_t v21 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v34 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v22 = v33;
      sub_24DCCA5B8();
      unint64_t v23 = v29;
      MEMORY[0x2533282B0](0, v11, v8, v21);
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v32 + 8))(v8, v22);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v31);
    }
  }
  char v24 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  int v25 = *(void **)&a2[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a2;
  v26[3] = sub_24D6E4F84;
  v26[4] = v13;
  v26[5] = sub_24D6E4F58;
  v26[6] = v14;
  uint64_t v27 = a2;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"subscribe(toDownloadProgressUpdates:completionHandler:)", 55, 2, v24, v25, (uint64_t)sub_24D3E5BC8, (uint64_t)v26);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CD468(unsigned char *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24D5B3F9C;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D5B3F9C;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v14 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      id v15 = sub_24D621D5C();
      char v16 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a2)[2](a2, v16);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v17 = (void *)MEMORY[0x25332B1A0](v13);
    if (v17)
    {
      id v18 = v17;
      id v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1098;
      uint64_t v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v20 = v26;
      id v19 = v27;
      MEMORY[0x2533282B0](0, v9, v6, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
  uint64_t v21 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  uint64_t v22 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  unint64_t v23 = (void *)swift_allocObject();
  v23[2] = a1;
  v23[3] = sub_24D6E4F84;
  v23[4] = v11;
  v23[5] = sub_24D6E5ECC;
  v23[6] = v12;
  char v24 = a1;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"resetCounters(completionHandler:)", 33, 2, v21, v22, (uint64_t)sub_24D3E5BC8, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CD90C(unsigned char *a1, void (**a2)(void, void, void))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v33 = *(void *)(v4 - 8);
  uint64_t v34 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24D6D1408;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D6E4F38;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = (void *)swift_allocObject();
  v13[2] = sub_24D6E4F38;
  v13[3] = v11;
  v13[4] = sub_24D6D1408;
  v13[5] = v10;
  uint64_t v14 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  id v15 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  swift_retain_n();
  _Block_copy(a2);
  if (v15)
  {
    if (objc_msgSend(v15, sel_unableToStartup))
    {
      id v16 = sub_24D621D5C();
      id v17 = (void *)sub_24DCC8818();
      ((void (**)(void, void, void *))a2)[2](a2, 0, v17);

      swift_release();
      swift_release();

      goto LABEL_9;
    }
  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    id v18 = (void *)MEMORY[0x25332B1A0](v14);
    if (v18)
    {
      id v19 = v18;
      id v30 = objc_msgSend(v18, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_1079;
      uint64_t v29 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v35 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      uint64_t v20 = v34;
      sub_24DCCA5B8();
      uint64_t v22 = v29;
      uint64_t v21 = v30;
      MEMORY[0x2533282B0](0, v9, v6, v29);
      _Block_release(v22);

      (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v20);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
    }
  }
  unint64_t v23 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  char v24 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  int v25 = (void *)swift_allocObject();
  v25[2] = a1;
  v25[3] = sub_24D6E4F84;
  v25[4] = v12;
  v25[5] = sub_24D6E4F98;
  v25[6] = v13;
  uint64_t v26 = a1;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"hasNonUploadedFiles(completionHandler:)", 39, 2, v23, v24, (uint64_t)sub_24D3E5BC8, (uint64_t)v25);
  swift_release();
  swift_release();
  swift_release();
LABEL_9:
  swift_release_n();
  return swift_release_n();
}

uint64_t sub_24D6CDE00(void *a1, void (*a2)(void, void, void, id), uint64_t a3, unsigned char *a4, void *a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v47 = a5;
  id v48 = a6;
  uint64_t v49 = a4;
  uint64_t v15 = sub_24DCC8A58();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 64);
  MEMORY[0x270FA5388](v15);
  id v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v21 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    uint64_t v44 = a9;
    uint64_t v45 = a10;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))((char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), a7, v15);
    unint64_t v26 = (*(unsigned __int8 *)(v16 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    unint64_t v27 = (v17 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v43 = a8;
    uint64_t v28 = (char *)swift_allocObject();
    uint64_t v29 = v47;
    *((void *)v28 + 2) = v47;
    *((void *)v28 + 3) = a2;
    uint64_t v46 = a2;
    id v30 = v48;
    *((void *)v28 + 4) = a3;
    *((void *)v28 + 5) = v30;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v28[v26], v18, v15);
    uint64_t v31 = v44;
    *(void *)&v28[v27] = v43;
    uint64_t v32 = &v28[(v27 + 15) & 0xFFFFFFFFFFFFFFF8];
    uint64_t v33 = v45;
    *(void *)uint64_t v32 = v31;
    *((void *)v32 + 1) = v33;
    swift_retain_n();
    id v34 = v29;
    id v35 = v30;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_24D6BC5A0((uint64_t)"fetchLatestVersion(for:request:completionHandler:)", 50, 2, (uint64_t)sub_24D6D4698, (uint64_t)v28, v49, v46, a3);
    swift_release();
    return swift_release_n();
  }
  id v22 = a1;
  id v23 = [v22 url];
  if (!v23)
  {
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v21, 1, 1, v15);
    goto LABEL_12;
  }
  char v24 = v23;
  sub_24DCC89E8();

  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v18, v15);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v21, 1, v15);
  if (result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  sub_24D3FB6F8(0, &qword_26B194038);
  id v36 = sub_24D609184((uint64_t)v21, 1);
  id v37 = objc_msgSend(v22, sel_name);
  if (v37)
  {
    uint64_t v38 = v37;
    uint64_t v39 = sub_24DCC97E8();
    uint64_t v41 = v40;
  }
  else
  {
    uint64_t v39 = 0;
    uint64_t v41 = 0;
  }
  id v42 = v36;
  a2(v39, v41, v36, 0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D6CE1E0(unsigned char *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24D5B3F9C;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D5B3F9C;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v14 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      id v15 = sub_24D621D5C();
      uint64_t v16 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a2)[2](a2, v16);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v17 = (void *)MEMORY[0x25332B1A0](v13);
    if (v17)
    {
      id v18 = v17;
      id v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_992;
      unint64_t v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v20 = v26;
      uint64_t v19 = v27;
      MEMORY[0x2533282B0](0, v9, v6, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
  uint64_t v21 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v22 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v23 = (void *)swift_allocObject();
  v23[2] = a1;
  v23[3] = sub_24D6E4F84;
  v23[4] = v11;
  v23[5] = sub_24D6E5EC8;
  v23[6] = v12;
  char v24 = a1;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"disableDBQueryStatistics(completionHandler:)", 44, 2, v21, v22, (uint64_t)sub_24D3E5BC8, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CE684(unsigned char *a1, void (**a2)(void, void))
{
  uint64_t v4 = sub_24DCC92F8();
  uint64_t v30 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24DCC9398();
  uint64_t v28 = *(void *)(v7 - 8);
  uint64_t v29 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a2;
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = sub_24D5B2F8C;
  *(void *)(v11 + 24) = v10;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_24D5B2F8C;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = &a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain];
  uint64_t v14 = (void *)MEMORY[0x25332B1A0](&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_domain]);
  swift_retain_n();
  _Block_copy(a2);
  if (v14)
  {
    if (objc_msgSend(v14, sel_unableToStartup))
    {
      id v15 = sub_24D621D5C();
      uint64_t v16 = (void *)sub_24DCC8818();
      ((void (**)(void, void *))a2)[2](a2, v16);

      swift_release();
      swift_release();

      return swift_release_n();
    }
  }
  if ((a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_started] & 1) == 0)
  {
    uint64_t v17 = (void *)MEMORY[0x25332B1A0](v13);
    if (v17)
    {
      id v18 = v17;
      id v27 = objc_msgSend(v17, sel_serialQueue);

      aBlock[4] = nullsub_1;
      aBlock[5] = 0;
      aBlock[0] = MEMORY[0x263EF8330];
      aBlock[1] = 1107296256;
      aBlock[2] = sub_24D3D2E94;
      aBlock[3] = &block_descriptor_973;
      unint64_t v26 = _Block_copy(aBlock);
      sub_24DCC9348();
      uint64_t v31 = MEMORY[0x263F8EE78];
      sub_24D3EA320((unint64_t *)&unk_26B196BB0, MEMORY[0x263F8F030]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199D90);
      sub_24D3E4A9C((unint64_t *)&qword_26B199DA0, (uint64_t *)&unk_26B199D90);
      sub_24DCCA5B8();
      uint64_t v20 = v26;
      uint64_t v19 = v27;
      MEMORY[0x2533282B0](0, v9, v6, v26);
      _Block_release(v20);

      (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v28 + 8))(v9, v29);
    }
  }
  uint64_t v21 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_log];
  id v22 = *(void **)&a1[OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_queue];
  id v23 = (void *)swift_allocObject();
  v23[2] = a1;
  v23[3] = sub_24D6E4F84;
  v23[4] = v11;
  v23[5] = sub_24D6E5EC4;
  v23[6] = v12;
  char v24 = a1;
  swift_retain();
  swift_retain();
  sub_24D3E2DA8((uint64_t)"resetDBQueryStatistics(completionHandler:)", 42, 2, v21, v22, (uint64_t)sub_24D3E5BC8, (uint64_t)v23);
  swift_release();
  swift_release();
  swift_release();
  return swift_release_n();
}

uint64_t sub_24D6CEB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  sub_24DCC8288();
  v4[6] = swift_task_alloc();
  uint64_t v5 = sub_24DCC82A8();
  v4[7] = v5;
  v4[8] = *(void *)(v5 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v6 = sub_24DCC9078();
  v4[10] = v6;
  v4[11] = *(void *)(v6 - 8);
  v4[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_24D6CEC74, 0, 0);
}

uint64_t sub_24D6CEC74()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_provider);
  *(void *)(v0 + 104) = v1;
  if (v1)
  {
    uint64_t v2 = *(void **)(v0 + 16);
    id v3 = objc_msgSend(v1, sel_descriptor);
    id v4 = objc_msgSend(v3, sel_localizedName);

    uint64_t v5 = sub_24DCC97E8();
    uint64_t v7 = v6;

    id v8 = objc_msgSend(v2, sel_providerDomainID);
    type metadata accessor for FPFeedbackUIManager();
    uint64_t v9 = (void *)swift_allocObject();
    *(void *)(v0 + 112) = v9;
    v9[2] = v5;
    v9[3] = v7;
    void v9[4] = v8;
    uint64_t v10 = sub_24DCC8818();
    *(void *)(v0 + 120) = v10;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_24D6CEF90;
    uint64_t v13 = *(void *)(v0 + 24);
    uint64_t v12 = *(void *)(v0 + 32);
    return sub_24D42BD90(v13, v12, v10);
  }
  else
  {
    id v15 = (id)fpfs_current_or_default_log();
    sub_24DCC9088();
    uint64_t v16 = sub_24DCC9068();
    os_log_type_t v17 = sub_24DCCA128();
    if (os_log_type_enabled(v16, v17))
    {
      id v18 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v18 = 0;
      _os_log_impl(&dword_24D3D0000, v16, v17, "No provider for domain in launchFeedback", v18, 2u);
      MEMORY[0x25332B030](v18, -1, -1);
    }
    uint64_t v20 = *(void *)(v0 + 88);
    uint64_t v19 = *(void *)(v0 + 96);
    uint64_t v22 = *(void *)(v0 + 72);
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v23 = *(void *)(v0 + 56);
    uint64_t v24 = *(void *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    sub_24DCC8158();
    sub_24D5F77E0(MEMORY[0x263F8EE78]);
    sub_24D3EA320((unint64_t *)&qword_26986C390, MEMORY[0x263F06060]);
    sub_24DCC8808();
    sub_24DCC8128();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v22, v23);
    swift_willThrow();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    int v25 = *(uint64_t (**)(void))(v0 + 8);
    return v25();
  }
}

uint64_t sub_24D6CEF90()
{
  uint64_t v2 = *(void **)(*(void *)v1 + 120);
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();

  if (v0) {
    id v3 = sub_24D6CF150;
  }
  else {
    id v3 = sub_24D6CF0BC;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_24D6CF0BC()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24D6CF150()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_24D6CF1E0()
{
  return type metadata accessor for FPDDomainFPFSBackend(0);
}

void sub_24D6CF1E8()
{
  sub_24D6CF3D4(319, &qword_26B1933E8, (void (*)(uint64_t))type metadata accessor for FPDDomainFPFSBackend.PendingSetState);
  if (v0 <= 0x3F)
  {
    sub_24D6CF3D4(319, (unint64_t *)&qword_26B199060, MEMORY[0x263F06EA8]);
    if (v1 <= 0x3F)
    {
      sub_24D6CF428();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_24D6CF3D4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_24DCCA3F8();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_24D6CF428()
{
  if (!qword_26B196B88)
  {
    unint64_t v0 = sub_24DCC91F8();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B196B88);
    }
  }
}

void destroy for FPDDomainFPFSBackend.ErrorGeneration(uint64_t a1)
{
  swift_release();
  unint64_t v2 = *(void **)(a1 + 16);
}

void *_s9libfssync20FPDDomainFPFSBackendC15ErrorGenerationVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  unint64_t v4 = (void *)a2[2];
  a1[2] = v4;
  swift_retain();
  id v5 = v4;
  return a1;
}

void *assignWithCopy for FPDDomainFPFSBackend.ErrorGeneration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  unint64_t v4 = (void *)a2[2];
  id v5 = (void *)a1[2];
  a1[2] = v4;
  id v6 = v4;

  return a1;
}

uint64_t assignWithTake for FPDDomainFPFSBackend.ErrorGeneration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  unint64_t v4 = *(void **)(a1 + 16);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);

  return a1;
}

uint64_t getEnumTagSinglePayload for VFSEventAggregator.FileIDAndPath(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for VFSEventAggregator.FileIDAndPath(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPDDomainFPFSBackend.ErrorGeneration()
{
  return &type metadata for FPDDomainFPFSBackend.ErrorGeneration;
}

uint64_t initializeWithCopy for WeakEnumerator(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithCopy for WeakEnumerator(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakCopyAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t initializeWithTake for WeakEnumerator(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeInit();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t assignWithTake for WeakEnumerator(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_unknownObjectWeakTakeAssign();
  *(void *)(result + 8) = *(void *)(a2 + 8);
  return result;
}

uint64_t getEnumTagSinglePayload for WeakEnumerator(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  if ((*(void *)(a1 + 8) & 0xF000000000000007) != 0) {
    int v2 = *(_DWORD *)a1 & 0x7FFFFFFF;
  }
  else {
    int v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WeakEnumerator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      *(void *)(result + 8) = 1;
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WeakEnumerator()
{
  return &type metadata for WeakEnumerator;
}

void *initializeBufferWithCopyOfBuffer for FPDDomainFPFSBackend.StartStatus(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = (id)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  *a1 = v3;
  return a1;
}

void destroy for FPDDomainFPFSBackend.StartStatus(void *a1)
{
}

uint64_t *assignWithCopy for FPDDomainFPFSBackend.StartStatus(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  id v4 = (id)(*a2 & 0x3FFFFFFFFFFFFFFFLL);
  uint64_t v5 = *a1;
  *a1 = v3;

  return a1;
}

uint64_t *assignWithTake for FPDDomainFPFSBackend.StartStatus(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for FPDDomainFPFSBackend.StartStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7E && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 126);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for FPDDomainFPFSBackend.StartStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7D)
  {
    *(void *)uint64_t result = a2 - 126;
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7E) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)uint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_24D6CF8F4(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

void *sub_24D6CF910(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

unint64_t *sub_24D6CF920(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *uint64_t result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FPDDomainFPFSBackend.StartStatus()
{
  return &type metadata for FPDDomainFPFSBackend.StartStatus;
}

void *sub_24D6CF95C(void *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_24DCC8D88();
    (*(void (**)(void *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_24DCC8CE8();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    id v15 = (char *)a1 + v14;
    uint64_t v16 = &a2[v14];
    uint64_t v28 = v13;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = a3[8];
    *(void *)((char *)a1 + a3[7]) = *(void *)&a2[a3[7]];
    *(void *)((char *)a1 + v19) = *(void *)&a2[v19];
    uint64_t v20 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
    uint64_t v21 = *(void **)&a2[v20];
    *(void *)((char *)a1 + v20) = v21;
    uint64_t v22 = a3[12];
    *((unsigned char *)a1 + a3[11]) = a2[a3[11]];
    *((unsigned char *)a1 + v22) = a2[v22];
    uint64_t v23 = a3[13];
    uint64_t v24 = (char *)a1 + v23;
    int v25 = &a2[v23];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v26 = v21;
    v28(v24, v25, v11);
    *((unsigned char *)a1 + a3[14]) = a2[a3[14]];
  }
  return a1;
}

uint64_t sub_24D6CFBC4(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + a2[5];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v11(v5, v6);
  uint64_t v8 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6)) {
    v11(v8, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v9 = a1 + a2[13];

  return ((uint64_t (*)(uint64_t, uint64_t))v11)(v9, v6);
}

uint64_t sub_24D6CFD30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  id v15 = (const void *)(a2 + v13);
  id v26 = v12;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12((uint64_t)v14, (uint64_t)v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v19 = *(void **)(a2 + v18);
  *(void *)(a1 + v18) = v19;
  uint64_t v20 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v20) = *(unsigned char *)(a2 + v20);
  uint64_t v21 = a3[13];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v24 = v19;
  v26(v22, v23, v10);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_24D6CFF48(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v25(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  id v15 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  int v16 = v15((const void *)(a1 + v12), 1, v10);
  int v17 = v15(v14, 1, v10);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v19 = v25;
      v25((uint64_t)v13, (uint64_t)v14, v10);
      goto LABEL_8;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v13, v14, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
LABEL_7:
  uint64_t v19 = v25;
LABEL_8:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[10];
  uint64_t v21 = *(void **)(a1 + v20);
  uint64_t v22 = *(void **)(a2 + v20);
  *(void *)(a1 + v20) = v22;
  id v23 = v22;

  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  v19(a1 + a3[13], a2 + a3[13], v10);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_24D6D01EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (const void *)(a2 + v7);
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(void *, const void *, uint64_t))(v11 + 32);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (void *)(a1 + v13);
  id v15 = (const void *)(a2 + v13);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(a2 + v13, 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v19) = *(unsigned char *)(a2 + v19);
  v12((void *)(a1 + a3[13]), (const void *)(a2 + a3[13]), v10);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_24D6D03D4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_24DCC8CE8();
  uint64_t v11 = *(void *)(v10 - 8);
  int v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 40);
  v25(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (const void *)(a2 + v12);
  id v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  int v16 = v15(a1 + v12, 1, v10);
  int v17 = v15((uint64_t)v14, 1, v10);
  if (!v16)
  {
    if (!v17)
    {
      uint64_t v24 = (uint64_t)v14;
      uint64_t v19 = v25;
      v25((uint64_t)v13, v24, v10);
      goto LABEL_8;
    }
    (*(void (**)(void *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v13, v14, v10);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v10);
LABEL_7:
  uint64_t v19 = v25;
LABEL_8:
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[10];
  uint64_t v21 = *(void **)(a1 + v20);
  *(void *)(a1 + v20) = *(void *)(a2 + v20);

  uint64_t v22 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v22) = *(unsigned char *)(a2 + v22);
  v19(a1 + a3[13], a2 + a3[13], v10);
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_24D6D0658(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_24DCC8D88();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_8:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_24DCC8CE8();
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[5];
LABEL_7:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_8;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[6];
    goto LABEL_7;
  }
  unint64_t v16 = *(void *)(a1 + a3[7]);
  if (v16 >= 0xFFFFFFFF) {
    LODWORD(v16) = -1;
  }
  return (v16 + 1);
}

uint64_t sub_24D6D07BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D6D07D0);
}

uint64_t sub_24D6D07D0(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_24DCC8D88();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_24DCC8CE8();
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[5];
    }
    else
    {
      uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
      if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
      {
        *(void *)(a1 + a4[7]) = (a2 - 1);
        return result;
      }
      uint64_t v10 = result;
      uint64_t v14 = *(void *)(result - 8);
      uint64_t v15 = a4[6];
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_24D6D0930()
{
  sub_24DCC8D88();
  if (v0 <= 0x3F)
  {
    sub_24DCC8CE8();
    if (v1 <= 0x3F)
    {
      sub_24D6CF3D4(319, (unint64_t *)&qword_26B199090, MEMORY[0x263F07490]);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_24D6D0A84(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24D6D0AE0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24D6D0B58()
{
  _Block_release(*(const void **)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_24D6D0BB0()
{
  unint64_t v2 = (void *)v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (void *)v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = (void *)v0[6];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *uint64_t v7 = v1;
  v7[1] = sub_24D3D3790;
  uint64_t v8 = (uint64_t (*)(void *, int, void *, void *, void *))((char *)&dword_26986C4D8 + dword_26986C4D8);
  return v8(v2, v3, v4, v5, v6);
}

uint64_t sub_24D6D0C78()
{
  return objectdestroy_921Tm(MEMORY[0x263F8EEE8]);
}

uint64_t sub_24D6D0C90()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (int *)v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *uint64_t v5 = v1;
  v5[1] = sub_24D3D3790;
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_26986C4E8 + dword_26986C4E8);
  return v6(v2, v3, v4);
}

uint64_t sub_24D6D0D50()
{
  return objectdestroy_921Tm(MEMORY[0x263F8EEE8]);
}

uint64_t sub_24D6D0D68(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_24D3D3790;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *))((char *)&dword_26986C4F8 + dword_26986C4F8);
  return v8(a1, v4, v5, v6);
}

uint64_t sub_24D6D0E34(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_24D3D3790;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26986C508 + dword_26986C508);
  return v6(a1, v4);
}

uint64_t sub_24D6D0EEC(char a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(v1 + 16) + 16))(*(void *)(v1 + 16), a1 & 1);
}

uint64_t objectdestroy_828Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_824Tm()
{
  swift_unknownObjectRelease();

  sub_24D400DCC(*(void *)(v0 + 40), *(void *)(v0 + 48));

  return swift_deallocObject();
}

void sub_24D6D1058(void *a1, uint64_t a2)
{
  sub_24D69C278(a1, a2, *(void *)(v2 + 16));
}

void sub_24D6D1068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_24D69B07C(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t objectdestroy_787Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D6D1148(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v6 = (void (*)(void, void, void, id))v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = (void *)v2[4];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_24D698E1C(a1, a2, v6, v7, v8, v9);
}

uint64_t sub_24D6D11D0()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_24D6D120C(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (void (*)(void, id))v2[2];
  uint64_t v8 = v2[3];
  uint64_t v9 = (unsigned char *)v2[4];
  uint64_t v10 = v2[5];
  unint64_t v11 = *(void *)((char *)v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D6956C8(a1, a2, v7, v8, v9, v10, (uint64_t)v2 + v6, v11);
}

uint64_t sub_24D6D12C4(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D693E34(a1, a2, *(void (**)(void, id))(v2 + 16), *(void *)(v2 + 24), *(unsigned char **)(v2 + 32), v2 + v6, *(void *)(v2 + v7), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v2 + ((((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

void sub_24D6D1394(void *a1, uint64_t a2)
{
  sub_24D693B4C(a1, a2, *(void *)(v2 + 16), &qword_26986C530);
}

uint64_t sub_24D6D13C0()
{
  return objectdestroy_665Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D13DC()
{
  return objectdestroy_294Tm();
}

uint64_t sub_24D6D13E4()
{
  return objectdestroy_294Tm();
}

uint64_t sub_24D6D13EC()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D1408(char a1, uint64_t a2)
{
  sub_24DB78EE0(a1, a2, *(void *)(v2 + 16));
}

void sub_24D6D141C(uint64_t a1, uint64_t a2)
{
  sub_24D68F6D0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D6D1424()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEE8]);
}

uint64_t sub_24D6D1444()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEE8]);
}

void sub_24D6D1464(void *a1, uint64_t a2)
{
  sub_24D68D538(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D6D146C()
{
  return objectdestroy_665Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D1488(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_24D3FB6F8(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_24D6D14CC(void *a1, uint64_t a2)
{
  sub_24D693B4C(a1, a2, *(void *)(v2 + 16), (unint64_t *)&unk_26986C538);
}

uint64_t sub_24D6D14FC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_632Tm()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D1594(uint64_t a1)
{
  return sub_24D689E28(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(unsigned char *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72));
}

void sub_24D6D15D4(uint64_t a1, void *a2, uint64_t a3)
{
  sub_24D6887C8(a1, a2, a3, *(void *)(v3 + 16), &qword_26B194820);
}

void sub_24D6D1604(void *a1, char a2)
{
  sub_24D68838C(a1, a2 & 1, *(void *)(v2 + 16), *(void (**)(void, void, id))(v2 + 24), *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_24D6D1620()
{
  return objectdestroy_104Tm();
}

void sub_24D6D1628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  sub_24D687C9C(a1, a2, a3, a4, a5, a6, a7, a8, *(void *)(v8 + 16));
}

void sub_24D6D1650(uint64_t a1, void *a2, uint64_t a3)
{
  sub_24D6887C8(a1, a2, a3, *(void *)(v3 + 16), &qword_26986C550);
}

uint64_t objectdestroy_581Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D1740(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = v1 + v4;
  unint64_t v7 = *(void (**)(void, void, id))(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void **)v9;
  int v11 = *(unsigned __int8 *)(v9 + 8);

  sub_24D685E7C(a1, v6, v7, v8, v10, v11);
}

uint64_t objectdestroy_557Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D18D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = *(void (**)(char *, id))(v1 + v5);
  uint64_t v8 = *(void (**)(char *, id))(v1 + v5 + 8);
  uint64_t v9 = *(void **)(v1 + v6);
  uint64_t v10 = *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D682E34(a1, v1 + v4, v7, v8, v9, v10);
}

void sub_24D6D198C(void *a1, uint64_t a2)
{
  sub_24D682540(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D6D1994()
{
  return objectdestroy_294Tm();
}

uint64_t objectdestroy_496Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D19EC()
{
  return objectdestroy_466Tm();
}

uint64_t sub_24D6D19F8()
{
  return objectdestroy_466Tm();
}

uint64_t objectdestroy_466Tm()
{
  swift_release();

  swift_bridgeObjectRelease();
  sub_24D4170B0(*(void *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t objectdestroy_449Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D1AB8()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D1AD4()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_428Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D1B4C(uint64_t a1)
{
  return sub_24D6680A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(unsigned __int8 *)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(void **)(v1 + 72));
}

void sub_24D6D1B84(void *a1, uint64_t a2)
{
  sub_24D666654(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D6D1B8C()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D1BA8(uint64_t a1)
{
  return sub_24D663008(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48));
}

void sub_24D6D1BBC(uint64_t a1, uint64_t a2)
{
  sub_24D660450(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D6D1BC4()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D1BE0(uint64_t a1, uint64_t a2)
{
  sub_24D65FABC(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D6D1BE8()
{
  return objectdestroy_46Tm();
}

void sub_24D6D1BF0(uint64_t a1)
{
  sub_24D65A7D4(a1, *(void *)(v1 + 16));
}

uint64_t sub_24D6D1BF8()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D1C10()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEA0]);
}

void sub_24D6D1C30(uint64_t a1, uint64_t a2)
{
  sub_24D65A06C(a1, a2, *(void *)(v2 + 16));
}

uint64_t objectdestroy_357Tm()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6D1C8C(uint64_t a1)
{
  return sub_24D659494(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(unsigned char *)(v1 + 48), *(void **)(v1 + 56));
}

uint64_t objectdestroy_351Tm()
{
  swift_release();

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6D1D08(uint64_t a1)
{
  return sub_24D6565E0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void **)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64));
}

uint64_t sub_24D6D1D20(uint64_t a1, uint64_t a2)
{
  return sub_24D6DF328(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_24D658A5C);
}

uint64_t sub_24D6D1D3C()
{
  return objectdestroy_104Tm();
}

uint64_t sub_24D6D1D44()
{
  return objectdestroy_46Tm();
}

uint64_t sub_24D6D1D54(char a1, uint64_t a2)
{
  return (*(uint64_t (**)(void, void, uint64_t))(*(void *)(v2 + 16) + 16))(*(void *)(v2 + 16), a1 & 1, a2);
}

uint64_t sub_24D6D1D70()
{
  return objectdestroy_294Tm();
}

void sub_24D6D1D7C(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  sub_24D651090(a8, a1, a2, a3, a4, a5, a6, a7, *(void *)(v8 + 16));
}

uint64_t sub_24D6D1D84()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D1DA4()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_24D6D1DBC()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D1DDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24D64AEEC(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_24D6D1DE4()
{
  return objectdestroy_104Tm();
}

uint64_t sub_24D6D1DEC(uint64_t a1)
{
  return sub_24D64A404(a1, *(void **)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(unsigned __int8 *)(v1 + 49));
}

uint64_t objectdestroy_226Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_212Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D1E9C(uint64_t a1)
{
  return sub_24D648C74(a1, *(unsigned int *)(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), *(void (**)(void))(v1 + 40), *(void *)(v1 + 48));
}

uint64_t objectdestroy_205Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 19) & 0xFFFFFFFFFFFFFFF8) + 11) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D1F8C(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 19) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 11) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(unsigned int *)(v1 + v6);
  uint64_t v9 = *(void (**)(void, void *))(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v5 + 8);
  int v11 = *(void **)(v1 + v7);
  uint64_t v12 = *(void **)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_24D64821C(a1, v1 + v4, v9, v10, v8, v11, v12);
}

uint64_t objectdestroy_195Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D2150(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = *(void **)(v1 + 16);
  uint64_t v7 = v1 + v4;
  uint64_t v8 = *(void **)(v1 + v5);
  uint64_t v9 = v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = *(void (**)(void))v9;
  uint64_t v11 = *(void *)(v9 + 8);

  return sub_24D6476A8(a1, v6, v7, v8, v10, v11);
}

uint64_t sub_24D6D2204()
{
  return objectdestroy_1755Tm(MEMORY[0x263EF8310]);
}

uint64_t sub_24D6D221C()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  unint64_t v4 = (void *)v0[4];
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  *unint64_t v5 = v1;
  v5[1] = sub_24D3D3790;
  unint64_t v6 = (uint64_t (*)(void *, void *, void *))((char *)&dword_26986C558 + dword_26986C558);
  return v6(v2, v3, v4);
}

uint64_t sub_24D6D22D0()
{
  return objectdestroy_921Tm(MEMORY[0x263F8EEE8]);
}

uint64_t sub_24D6D22E8()
{
  return objectdestroy_921Tm(MEMORY[0x263F8EEE8]);
}

void sub_24D6D2300(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24D6464C0(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t objectdestroy_187Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_24DCC8A58();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_24DCC8FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);

  return swift_deallocObject();
}

uint64_t sub_24D6D24B0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v7 = *(void **)(v1 + 16);
  uint64_t v8 = *(void **)(v1 + 24);
  uint64_t v9 = *(void *)(v1 + v5);
  uint64_t v10 = *(void *)(v1 + v5 + 8);
  uint64_t v11 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_24D645AA8(a1, v7, v8, v1 + v4, v9, v10, v11);
}

uint64_t sub_24D6D259C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

void sub_24D6D25C8(uint64_t a1)
{
  sub_24D627854(a1, *(void (**)(id *, char *, uint64_t))(v1 + 16));
}

uint64_t sub_24D6D25D4@<X0>(uint64_t a1@<X8>)
{
  return sub_24D5E2E38(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), a1);
}

uint64_t objectdestroy_161Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_24DCC8A58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_24D6D26F4()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_24D640BD8(v2, v3);
}

uint64_t objectdestroy_164Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = (int *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  unint64_t v5 = (v3 + *(unsigned __int8 *)(*(void *)v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v4 + 80);
  uint64_t v6 = v0 + v2;
  uint64_t v7 = sub_24DCC8FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);

  uint64_t v8 = sub_24DCC8A58();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v0 + v5, v8);

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D2930(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v1 + v5);
  uint64_t v9 = *(uint64_t (**)(uint64_t))(v1 + ((*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D640D04(a1, v1 + v4, v8, v1 + v7, v9);
}

uint64_t objectdestroy_171Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (((v4 + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (int *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  unint64_t v8 = (*(unsigned __int8 *)(*(void *)v7 + 80) + v6 + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v7 + 80);
  swift_release();

  uint64_t v9 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v9(v0 + v3, v1);
  __swift_destroy_boxed_opaque_existential_1(v0 + v4);

  v9(v0 + v8, v1);

  return swift_deallocObject();
}

uint64_t sub_24D6D2BF4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  return sub_24D640EF4(a1, *(void (**)(void *))(v1 + 16), *(void **)(v1 + 24), *(void **)(v1 + 32), (void *)(v1 + v4), v1 + v5, *(void *)(v1 + v6), *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), v1+ ((*(unsigned __int8 *)(v7 + 80) + ((((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

uint64_t objectdestroy_143Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D2E20(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void (**)(uint64_t, void))(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = *(char **)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D63DA68(a1, v6, v1 + v4, v7, v8, v9);
}

uint64_t sub_24D6D2ED0(uint64_t a1)
{
  return sub_24D682D50(a1, *(void (**)(char *, uint64_t))(v1 + 16));
}

uint64_t sub_24D6D2EF0()
{
  return objectdestroy_46Tm();
}

uint64_t sub_24D6D2EFC()
{
  return objectdestroy_104Tm();
}

uint64_t objectdestroy_90Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D2F58()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_60Tm_0()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6D2FC8()
{
  return objectdestroy_46Tm();
}

uint64_t sub_24D6D2FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D62898C(a1, a2, a3, *(uint64_t (**)(void *, uint64_t, uint64_t))(v3 + 16));
}

uint64_t sub_24D6D2FDC()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D302C()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6D3064()
{
  return objectdestroy_2033Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D3080()
{
  return sub_24D3E5BAC((uint64_t (*)(void, void, void, void, void))sub_24D629154);
}

uint64_t sub_24D6D3098(uint64_t a1)
{
  return sub_24D629320(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(char **)(v1 + 32), *(void **)(v1 + 40), *(uint64_t **)(v1 + 48));
}

uint64_t sub_24D6D30BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a2 + 8) = *(void *)(a1 + 8);
  return a2;
}

uint64_t sub_24D6D30F8(uint64_t a1)
{
  return a1;
}

void sub_24D6D3120(uint64_t a1)
{
  if ((~a1 & 0xF000000000000007) != 0) {
}
  }

uint64_t sub_24D6D3138()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EEA0]);
}

id sub_24D6D3154()
{
  return sub_24D61F0AC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

unint64_t sub_24D6D3160(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return (unint64_t)(id)(result & 0x3FFFFFFFFFFFFFFFLL);
  }
  return result;
}

uint64_t sub_24D6D3178()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

void sub_24D6D31B0()
{
  sub_24D61F7A0(v0, &OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_enumerationAnchorChangedSource);
}

void sub_24D6D31D4()
{
  sub_24D61F7A0(v0, &OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend_itemsChangedSource);
}

uint64_t sub_24D6D31F8(uint64_t a1, uint64_t a2)
{
  return sub_24D61F818(a1, a2);
}

uint64_t sub_24D6D3214()
{
  return sub_24D61FC20();
}

void sub_24D6D321C()
{
  sub_24D61FCEC(v0);
}

void sub_24D6D3224()
{
  sub_24D61FE04(v0);
}

uint64_t sub_24D6D322C()
{
  return objectdestroy_2065Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D3244(char a1)
{
  sub_24D61FE58(a1 & 1, v1);
}

uint64_t sub_24D6D3250()
{
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

void sub_24D6D3298()
{
  sub_24D6207B0(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6D32B4()
{
  return sub_24D620460(v0);
}

uint64_t sub_24D6D32C4()
{
  return sub_24D6522F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_24D6D32E0(void *a1)
{
  sub_24D652658(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t objectdestroy_2073Tm()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B190150) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);

  uint64_t v4 = v0 + v2;
  unint64_t v5 = (int *)type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, int *))(*((void *)v5 - 1) + 48))(v0 + v2, 1, v5))
  {
    uint64_t v13 = v3;
    uint64_t v6 = sub_24DCC8D88();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v0 + v2, v6);
    uint64_t v7 = v4 + v5[5];
    uint64_t v8 = sub_24DCC8CE8();
    uint64_t v9 = *(void *)(v8 - 8);
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v10(v7, v8);
    uint64_t v11 = v4 + v5[6];
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v11, 1, v8)) {
      v10(v11, v8);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    v10(v4 + v5[13], v8);
    uint64_t v3 = v13;
  }

  return swift_deallocObject();
}

uint64_t sub_24D6D3534()
{
  return sub_24D3EA070(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6D353C()
{
  uint64_t v1 = (int *)type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v11 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_24DCC8D88();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  unint64_t v5 = v0 + v2 + v1[5];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  unint64_t v9 = v0 + v2 + v1[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8(v3 + v1[13], v6);

  return swift_deallocObject();
}

uint64_t sub_24D6D3740(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  double v7 = v1[4];
  uint64_t v8 = *(void **)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D653564(v7, a1, v5, v6, (uint64_t)v1 + v4, v8);
}

uint64_t sub_24D6D37EC()
{
  uint64_t v1 = (int *)type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0);
  unint64_t v2 = (*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v11 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_24DCC8D88();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
  unint64_t v5 = v0 + v2 + v1[5];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  unint64_t v9 = v0 + v2 + v1[6];
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  v8(v3 + v1[13], v6);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D3A04()
{
  uint64_t v1 = *(void *)(type metadata accessor for FPDDomainFPFSBackend.PendingSetState(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D653784(*(char **)(v0 + 16), v0 + v2, *(char **)(v0 + v3), *(void (**)(uint64_t))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(double *)(v0 + 24));
}

uint64_t sub_24D6D3AAC(uint64_t a1)
{
  return sub_24D6EAB30(a1, *(uint64_t (**)(void))(v1 + 16));
}

void sub_24D6D3AB8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B190150) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = *(char **)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_24D6520D8(v3, v0 + v2, v4);
}

uint64_t sub_24D6D3B4C@<X0>(uint64_t a1@<X8>)
{
  return sub_24D61FA0C(*(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), a1);
}

uint64_t sub_24D6D3B6C()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D6D3C10(void *a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D61962C(a1, v1 + v4, v5);
}

void sub_24D6D3CB0()
{
  sub_24D6189EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), "database has already been dropped");
}

uint64_t sub_24D6D3CD8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D3D10()
{
  if (*(void *)(v0 + 16)) {
    sub_24D805554();
  }
}

uint64_t objectdestroy_2128Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D3D84()
{
  sub_24D6189EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), "database was already dropped");
}

uint64_t sub_24D6D3DAC@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D60E7C0(a1);
}

uint64_t sub_24D6D3DC8()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D3E00(uint64_t a1)
{
  return sub_24D612BE4(a1, *(void *)(v1 + 16));
}

unint64_t sub_24D6D3E0C(unint64_t result)
{
  if (result >> 62)
  {
    if (result >> 62 != 1) {
      return result;
    }
    result &= 0x3FFFFFFFFFFFFFFFuLL;
  }
  return (unint64_t)(id)result;
}

void sub_24D6D3E28(unint64_t a1)
{
  if (a1 >> 62)
  {
    if (a1 >> 62 != 1) {
      return;
    }
    a1 &= 0x3FFFFFFFFFFFFFFFuLL;
  }
}

void sub_24D6D3E4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24D62AF68(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_24D6D3E5C()
{
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D3ECC()
{
  sub_24D5A8BF4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void **)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80));
}

uint64_t sub_24D6D3F04()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D3F20(uint64_t a1)
{
  return sub_24D65A850(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24D6D3F30()
{
  return objectdestroy_2199Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D3F48()
{
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 32);
  uint64_t result = sub_24D40589C(*(void *)(v0 + 24));
  if (!v1) {
    return v2(result);
  }
  return result;
}

uint64_t sub_24D6D3F94(uint64_t a1)
{
  return sub_24D628618(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_24D6D3F9C()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D3FB4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_24D6D3FE4()
{
  return objectdestroy_921Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D4000()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D4028()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D4060()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D4070()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_24D6D409C(void *a1)
{
  sub_24D60214C(a1, *(void *)(v1 + 16), *(void (**)(uint64_t *__return_ptr))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6D40A8(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(unsigned __int8 *)(a1 + 24));
}

void sub_24D6D40E0(void *a1)
{
  uint64_t v3 = *(void (**)(void *))(v1 + 16);
  v5[1] = 0;
  v5[2] = 0;
  v5[0] = a1;
  char v6 = 1;
  id v4 = a1;
  v3(v5);
}

void sub_24D6D414C(void *a1)
{
  uint64_t v3 = *(void (**)(void *))(v1 + 16);
  v5[0] = a1;
  memset(&v5[1], 0, 24);
  char v6 = 1;
  id v4 = a1;
  v3(v5);
}

uint64_t sub_24D6D41BC@<X0>(void *a1@<X8>)
{
  return sub_24D6E3FA8(a1);
}

void sub_24D6D41D4()
{
  sub_24D6A8CEC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void (**)(void))(v0 + 64));
}

uint64_t sub_24D6D4200()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D4210()
{
  return sub_24D6A8ABC(*(void *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

uint64_t sub_24D6D421C()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D4230()
{
  return objectdestroy_921Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D4248()
{
  sub_24D69C06C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(uint64_t, id))(v0 + 32));
}

uint64_t sub_24D6D426C()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D6D4348(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void **)(v1 + 48);
  uint64_t v8 = *(void **)(v1 + 56);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  int v10 = *(unsigned __int8 *)(v1 + 40);

  return sub_24D699058(a1, v4, v5, v6, v10, v7, v8, v9);
}

uint64_t sub_24D6D43CC(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(void *, uint64_t *, uint64_t))(v1 + 16);
  v5[0] = 0;
  v5[1] = 0;
  uint64_t v4 = 0;
  return v2(v5, &v4, a1);
}

uint64_t sub_24D6D4414(void *a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(v3 + 16))(*a1, a1[1], *a2, a3);
}

uint64_t sub_24D6D4450()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_24D6D4488()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D44A0(uint64_t *a1, void **a2, void *a3)
{
  sub_24D6ABC14(*a1, a1[1], *a2, a3, *(void (**)(void *, void **, id))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_24D6D44C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(uint64_t (**)(void *, uint64_t *, uint64_t))(v4 + 16);
  v8[0] = a1;
  v8[1] = a2;
  uint64_t v7 = a3;
  return v5(v8, &v7, a4);
}

uint64_t sub_24D6D4504(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, uint64_t))(v1 + 16))(0, 0, 0, a1);
}

uint64_t sub_24D6D453C()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_24D6D4620()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  sub_24D699310(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void (**)(void, void, void, id))(v0 + 40), *(void *)(v0 + 48), *(id *)(v0 + 56), *(char **)(v0 + 64), (void *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))));
}

uint64_t objectdestroy_2383Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6D47AC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D69A3B0(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24D6D4860()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_24D6D4964(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = (void (*)(uint64_t, uint64_t, id, id))v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = *(void *)((char *)v1 + v5);
  uint64_t v10 = (uint64_t)v1 + v4;
  uint64_t v11 = (void *)((char *)v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];

  sub_24D69A5D8(a1, v6, v7, v8, v10, v9, v12, v13);
}

uint64_t sub_24D6D4A18()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6D4A60(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(long long *, uint64_t *, uint64_t))(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 48);
  long long v6 = *(_OWORD *)(v1 + 32);
  uint64_t v5 = v3;
  return v2(&v6, &v5, a1);
}

uint64_t objectdestroy_784Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_24D4170B0(*(void *)(v0 + v4));

  return swift_deallocObject();
}

uint64_t sub_24D6D4BA4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (void *)v1[4];
  uint64_t v8 = v1[5];
  unint64_t v9 = *(void *)((char *)v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D6958A4(a1, v5, v6, v7, v8, (uint64_t)v1 + v4, v9);
}

uint64_t sub_24D6D4C48()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D4C60(void **a1, void *a2)
{
  sub_24D5AFCC0(*a1, a2, *(void (**)(void **, id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_24D6D4C70()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_24D4170B0(*(void *)(v0 + v4));
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D4D7C()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D695BBC(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void, id))(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), v0 + v2, *(void *)(v0 + v3), *(void (**)(void, void, void))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24D6D4E34()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D4E44()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + v4));

  return swift_deallocObject();
}

void sub_24D6D4F78(void *a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24D697D68(a1, *(void (**)(void, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v7), *(void *)(v1 + v7 + 8), *(void *)(v1 + ((v7 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v1 + ((((v7 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24D6D5068()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D5080()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 56));
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D5190(void *a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D6969C0(a1, *(void (**)(void, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), v1 + v4, *(void *)(v1 + v5), *(void **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6D5250()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D6D5324()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v6 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
  int v7 = *(unsigned __int8 *)(v0 + 32);

  return sub_24DC5D7CC(v2, v3, v7, v4, v5, v6);
}

uint64_t sub_24D6D5390()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D53A8()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D54CC()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D696CBC(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v0 + ((((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6D5598()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_release();

  sub_24D4170B0(*(void *)(v0 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

void sub_24D6D56C4(void *a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 49) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  sub_24D697240(a1, *(void (**)(void, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned __int8 *)(v1 + 48), v1 + v4, *(void **)(v1 + v5), *(void *)(v1 + v5 + 8), *(void *)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void **)(v1 + ((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((((((v5 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6D5798()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  sub_24D4170B0(*(void *)(v0 + 88));

  return swift_deallocObject();
}

void sub_24D6D57F8(void *a1)
{
  sub_24D69766C(a1, *(void (**)(void, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void **)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(void *)(v1 + 88));
}

uint64_t objectdestroy_2431Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D6D5920()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  int v8 = *(unsigned __int8 *)(v0 + 32);

  return sub_24DC5E508(v3, v4, v8, v5, v6, v0 + v2, v7);
}

uint64_t sub_24D6D59B8()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D59D0()
{
  swift_release();
  swift_release();

  sub_24D4170B0(*(void *)(v0 + 56));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D5A30()
{
  return sub_24D697878(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(void *)(v0 + 56), *(void (**)(void, id))(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(unint64_t **)(v0 + 88));
}

uint64_t sub_24D6D5A6C()
{
  swift_release();
  swift_release();
  swift_release();

  swift_release();
  sub_24D4170B0(*(void *)(v0 + 72));

  return swift_deallocObject();
}

uint64_t sub_24D6D5ACC()
{
  return sub_24D6980CC(*(unint64_t **)(v0 + 16), *(void (**)(void, id))(v0 + 24), *(void *)(v0 + 32), *(void (**)(id, void))(v0 + 40), *(uint64_t **)(v0 + 48), *(void **)(v0 + 56), *(unint64_t **)(v0 + 64), *(void *)(v0 + 72), *(uint64_t **)(v0 + 80), *(unsigned char *)(v0 + 88));
}

uint64_t sub_24D6D5B0C()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D5B5C(uint64_t a1)
{
  return sub_24D6D5B74(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24D69858C);
}

uint64_t sub_24D6D5B74(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7]);
}

uint64_t sub_24D6D5B8C()
{
  sub_24D4170B0(*(void *)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_24D6D5BC4(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t))(v1 + 16))(0, a1);
}

uint64_t sub_24D6D5BF4()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = v3 + *(void *)(v2 + 64);
  unint64_t v5 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v4 + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_24D4170B0(*(void *)(v0 + v5));

  return swift_deallocObject();
}

void sub_24D6D5CEC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  unint64_t v6 = *(void (**)(id, void))(v1 + 16);
  uint64_t v7 = *(uint64_t (**)(uint64_t))(v1 + 24);
  uint64_t v8 = v1 + v4;
  uint64_t v9 = v1 + ((v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = *(void *)v9;
  int v11 = *(unsigned __int8 *)(v9 + 8);
  uint64_t v12 = *(void **)(v1 + ((v5 + 23) & 0xFFFFFFFFFFFFFFF8));

  sub_24D639654(a1, v6, v7, v8, v10, v11, v12);
}

uint64_t sub_24D6D5DA4()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D5DC0()
{
  return sub_24D6D670C((uint64_t (*)(void, unint64_t, void, void, void, void, unint64_t))sub_24D63A1C0);
}

uint64_t sub_24D6D5DEC()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v20 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  uint64_t v21 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v22 = (v23 + 16) & ~v23;
  uint64_t v3 = v0 + v22;
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v22 + v1[7];
  unint64_t v5 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v6 = v4 + v5[7];
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int v11 = (uint64_t *)(v4 + v5[33]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_24D400DCC(*v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v3 + v1[8];
  uint64_t v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v3 + v1[12];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v15, 1, v25))
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v15, v25);
  }
  unint64_t v17 = (v20 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (((((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24D4170B0(*(void *)(v0 + v17));
  swift_release();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v0 + ((v21 + v18 + 8) & ~v21), v25);

  return swift_deallocObject();
}

void sub_24D6D61DC(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v10 = *(void *)(v1 + v5);
  uint64_t v11 = *(void *)(v1 + v7);
  unint64_t v12 = *(void (**)(void, void *))(v1 + v6);
  uint64_t v13 = *(void *)(v1 + v6 + 8);
  uint64_t v14 = *(void **)(v1 + v8);
  uint64_t v15 = v1 + ((*(unsigned __int8 *)(v9 + 80) + v8 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));

  sub_24D63A948(a1, (uint64_t (*)(uint64_t))(v1 + v4), v10, v12, v13, v11, v14, v15);
}

uint64_t objectdestroy_2539Tm()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  uint64_t v20 = *(unsigned __int8 *)(v24 + 80);
  swift_release();
  uint64_t v22 = (v23 + 24) & ~v23;
  uint64_t v3 = v0 + v22;
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v22 + v1[7];
  unint64_t v5 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v6 = v4 + v5[7];
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(v4 + v5[33]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_24D400DCC(*v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v3 + v1[8];
  uint64_t v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v3 + v1[12];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v15, 1, v25))
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v15, v25);
  }
  unint64_t v17 = (v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24D4170B0(*(void *)(v0 + v17));

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v0 + ((v20 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v20), v25);

  return swift_deallocObject();
}

uint64_t sub_24D6D66E0()
{
  return sub_24D6D670C((uint64_t (*)(void, unint64_t, void, void, void, void, unint64_t))sub_24D63B0EC);
}

uint64_t sub_24D6D670C(uint64_t (*a1)(void, unint64_t, void, void, void, void, unint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(sub_24DCC8A58() - 8);
  return a1(*(void *)(v1 + 16), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), v1+ ((*(unsigned __int8 *)(v7 + 80) + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)));
}

uint64_t objectdestroy_781Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  sub_24D4170B0(*(void *)(v0 + v4));

  return swift_deallocObject();
}

uint64_t sub_24D6D6924(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D69404C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), v1 + v4, *(void *)(v1 + v5), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6D69E4()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D69FC()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  swift_bridgeObjectRelease();
  sub_24D4170B0(*(void *)(v0 + v4));

  return swift_deallocObject();
}

void sub_24D6D6B2C()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24D694394(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void, void *))(v0 + 32), *(void *)(v0 + 40), v0 + v2, *(void *)(v0 + v3), *(void (**)(void, void *))(v0 + v4), *(void *)(v0 + v4 + 8), *(void *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v0 + ((((v4 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6D6C00()
{
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 56));
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D6C58(void *a1)
{
  sub_24D694C88(a1, *(void (**)(void, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(unsigned char *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t sub_24D6D6C90()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6D6D84()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  int v11 = *(unsigned __int8 *)(v0 + 32);

  return sub_24DC5CF80(v3, v4, v11, v5, v6, v7, v9, v10);
}

uint64_t sub_24D6D6E20()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D6E38()
{
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D6E88()
{
  return sub_24D6D92EC((uint64_t (*)(void, void, void, void, void, void, void))sub_24D694E68);
}

uint64_t sub_24D6D6EBC(uint64_t a1, char a2)
{
  return sub_24D6D75C8(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D6928E0);
}

void sub_24D6D6ED8()
{
  sub_24D9A9F60(*(_DWORD *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void *, uint64_t))(v0 + 32));
}

uint64_t sub_24D6D6EE8()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D6F00()
{
  return sub_24D693974(*(void (**)(uint64_t, void))(v0 + 16));
}

uint64_t objectdestroy_2625Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D6F60(uint64_t a1, char a2)
{
  return sub_24D6D75C8(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D692E88);
}

void sub_24D6D6F7C()
{
  sub_24D9AA150(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void *, uint64_t))(v0 + 32));
}

uint64_t sub_24D6D6F88()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D6FD8(uint64_t a1, char a2)
{
  return sub_24D6D75C8(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D69342C);
}

uint64_t sub_24D6D6FF0()
{
  return objectdestroy_665Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D700C()
{
  sub_24DB32370(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(uint64_t, uint64_t))(v0 + 32));
}

void sub_24D6D7030(void *a1, char a2)
{
  sub_24D69376C(a1, a2 & 1, *(id *)(v2 + 16), *(NSObject **)(v2 + 24), *(void *)(v2 + 32));
}

void sub_24D6D7048(void *a1, char a2)
{
  sub_24D693104(a1, a2 & 1, *(id *)(v2 + 16), *(NSObject **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_24D6D7058()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D7074()
{
  sub_24DB31E44(*(void *)(v0 + 16), *(void (**)(void *, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t objectdestroy_2654Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D70E0(void *a1, char a2)
{
  sub_24D692B60(a1, a2 & 1, *(id *)(v2 + 16), *(NSObject **)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t objectdestroy_747Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D7134()
{
  sub_24DB31C88(*(_DWORD *)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void *, uint64_t))(v0 + 32));
}

uint64_t sub_24D6D7158()
{
  return objectdestroy_294Tm();
}

void sub_24D6D7160(uint64_t a1)
{
  sub_24D691240(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_24D6D7170()
{
  return objectdestroy_665Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D718C()
{
  return sub_24D691600(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32));
}

uint64_t sub_24D6D71AC@<X0>(uint64_t a1@<X8>)
{
  return sub_24D6916D8(*(void **)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_24D6D71C8()
{
  return objectdestroy_46Tm();
}

void sub_24D6D71D0(uint64_t a1)
{
  uint64_t v2 = *(void (**)(void))(v1 + 24);
  id v3 = objc_msgSend(*(id *)(a1 + 32), sel_getAlternateContentsURLWrapperForItemID_, *(void *)(v1 + 16));
  v2();
}

uint64_t sub_24D6D723C()
{
  return objectdestroy_104Tm();
}

uint64_t objectdestroy_104Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D7298(uint64_t a1)
{
  uint64_t v2 = v1[3];
  id v3 = (uint64_t (*)(uint64_t, void))v1[4];
  objc_msgSend(*(id *)(a1 + 32), sel_setAlternateContentsURLWrapper_forDocumentWithItemID_, v1[2], v2);
  return v3(v2, 0);
}

uint64_t sub_24D6D72EC()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D7308()
{
  return sub_24D6903B0(*(void *)(v0 + 16), *(uint64_t (**)(BOOL, void))(v0 + 24));
}

uint64_t type metadata accessor for FPDDomainFPFSBackend.Counters(uint64_t a1)
{
  return sub_24D3FC810(a1, (uint64_t *)&unk_26986C7B0);
}

uint64_t sub_24D6D734C()
{
  return objectdestroy_2199Tm(MEMORY[0x263F8EEE8]);
}

uint64_t sub_24D6D7364()
{
  return sub_24DB490C4(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_24D6D7384()
{
  return objectdestroy_2199Tm(MEMORY[0x263F8EEE8]);
}

uint64_t objectdestroy_2199Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D73F4()
{
  return sub_24DB48FFC(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_24D6D7418()
{
  return sub_24D6DF2A0((uint64_t (*)(void, void, void, void, void, void))sub_24D68E1CC);
}

uint64_t sub_24D6D7444()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D7460()
{
  sub_24D68DDC8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), (void (*)(void))sub_24DA0F690);
}

uint64_t sub_24D6D7494()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D74AC()
{
  sub_24D68E600(*(void (**)(void *, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t objectdestroy_2794Tm()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D7520()
{
  sub_24D68DDC8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void **)(v0 + 40), (void (*)(void))sub_24DA0F3E0);
}

uint64_t sub_24D6D7554()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D7570()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EEA0]);
}

void sub_24D6D7588(void *a1, char a2)
{
  sub_24D68CC54(a1, a2 & 1, *(void (**)(unint64_t, void *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_24D6D7598()
{
  return objectdestroy_2834Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6D75B0(uint64_t a1, char a2)
{
  return sub_24D6D75C8(a1, a2, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D6A285C);
}

uint64_t sub_24D6D75C8(uint64_t a1, char a2, uint64_t (*a3)(uint64_t, void, void, void, void, void))
{
  return a3(a1, a2 & 1, v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_24D6D75E0()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D75F8(void *a1)
{
  sub_24D6A245C(a1, *(void (**)(void *, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24D6D7608()
{
  return sub_24D6A0DDC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D6D762C(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D6A0BA8);
}

void sub_24D6D7648()
{
  sub_24D6A03E0(*(void *)(v0 + 16), *(NSObject **)(v0 + 24), "🚀  FSTree stable for %s");
}

uint64_t sub_24D6D7670(uint64_t a1)
{
  return sub_24D69F0A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t objectdestroy_2850Tm()
{
  sub_24D4170B0(*(void *)(v0 + 16));

  return swift_deallocObject();
}

void sub_24D6D76C0()
{
  sub_24D6A03E0(*(void *)(v0 + 16), *(NSObject **)(v0 + 24), "🚀  FPTree stable for %s");
}

uint64_t sub_24D6D76E4()
{
  sub_24D4170B0(*(void *)(v0 + 16));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D772C()
{
  return sub_24D6A0640(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

void sub_24D6D7738()
{
}

uint64_t sub_24D6D775C()
{
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_24D6D77A4()
{
  return sub_24D6AA828(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D6D77C4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D7834(uint64_t a1)
{
  return sub_24DA5F97C(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(void))(v1 + 32), *(void *)(v1 + 40), *(uint64_t (**)(uint64_t))(v1 + 48), *(void *)(v1 + 56), *(uint64_t (**)(uint64_t))(v1 + 64), *(void *)(v1 + 72), *(uint64_t (**)(uint64_t))(v1 + 80), *(void *)(v1 + 88), *(void (**)(uint64_t))(v1 + 96), *(void *)(v1 + 104), *(uint64_t (**)(uint64_t))(v1 + 112));
}

uint64_t sub_24D6D7880()
{
  return sub_24D6ABA9C(v0);
}

uint64_t sub_24D6D788C()
{
  return sub_24D69FA58(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D6D7898()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

unint64_t sub_24D6D78B8()
{
  return sub_24D69FD40(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

unint64_t sub_24D6D78DC(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_24D4170B0(result);
  }
  return result;
}

uint64_t objectdestroy_2901Tm()
{
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 24));

  return swift_deallocObject();
}

unint64_t sub_24D6D7934()
{
  return sub_24D69FD40(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6D7958()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D7974()
{
  return sub_24D69F674(*(void *)(v0 + 16), *(uint64_t (**)(uint64_t))(v0 + 24));
}

uint64_t sub_24D6D7980()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D799C()
{
  return sub_24DC6E994(v0[2], v0[3], v0[4]);
}

uint64_t sub_24D6D79A8()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D79C4()
{
  sub_24DC6E218(*(void **)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t objectdestroy_2847Tm()
{
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 48));

  return swift_deallocObject();
}

uint64_t sub_24D6D7A1C()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6D7A34()
{
  sub_24D6A25CC(*(void (**)(void *, BOOL))(v0 + 16));
}

uint64_t sub_24D6D7A54()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D7AA4()
{
  return sub_24D418C80((uint64_t (*)(void, void, void, void, void))sub_24D6A2A2C);
}

void sub_24D6D7AD0(void *a1)
{
  sub_24D4659F4(a1, *(void (**)(void **))(v1 + 16));
}

uint64_t sub_24D6D7AD8()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D7AF0()
{
  return sub_24D6A3E78(*(void (**)(uint64_t, void))(v0 + 16));
}

uint64_t sub_24D6D7AFC()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40) - 8) + 80);

  swift_release();
  uint64_t v2 = v0 + ((v1 + 32) & ~v1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:

        uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26986F100);
        uint64_t v5 = v2 + *(int *)(v4 + 48);
        uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 48))(v5, 1, v61)) {
          goto LABEL_56;
        }
        uint64_t v110 = v4;

        sub_24D400DCC(*(void *)(v5 + 16), *(void *)(v5 + 24));
        swift_bridgeObjectRelease();
        sub_24D400DCC(*(void *)(v5 + 40), *(void *)(v5 + 48));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v107 = v61;
        uint64_t v62 = v5 + *(int *)(v61 + 48);
        uint64_t v63 = (int *)type metadata accessor for ItemMetadata();
        uint64_t v100 = v62 + v63[7];
        uint64_t v64 = sub_24DCC8CE8();
        uint64_t v65 = *(void *)(v64 - 8);
        uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v65 + 8);
        v66(v100, v64);
        int v101 = v66;
        v66(v62 + v63[8], v64);
        swift_bridgeObjectRelease();
        uint64_t v67 = v62 + v63[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v67, 1, v64)) {
          v101(v67, v64);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v68 = (uint64_t *)(v62 + v63[33]);
        unint64_t v69 = v68[1];
        if (v69 >> 60 != 15) {
          sub_24D400DCC(*v68, v69);
        }
        swift_bridgeObjectRelease();
        uint64_t v16 = v107;
        goto LABEL_51;
      case 1u:

        uint64_t v72 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_26986C670);
        uint64_t v73 = v2 + v72[12];
        uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(v73, 1, v74))
        {
          uint64_t v111 = v72;

          sub_24D400DCC(*(void *)(v73 + 16), *(void *)(v73 + 24));
          swift_bridgeObjectRelease();
          sub_24D400DCC(*(void *)(v73 + 40), *(void *)(v73 + 48));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v108 = v74;
          uint64_t v75 = v73 + *(int *)(v74 + 48);
          uint64_t v76 = (int *)type metadata accessor for ItemMetadata();
          uint64_t v102 = v75 + v76[7];
          uint64_t v77 = sub_24DCC8CE8();
          uint64_t v78 = *(void *)(v77 - 8);
          unint64_t v79 = *(void (**)(uint64_t, uint64_t))(v78 + 8);
          v79(v102, v77);
          id v103 = v79;
          v79(v75 + v76[8], v77);
          swift_bridgeObjectRelease();
          uint64_t v80 = v75 + v76[29];
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v80, 1, v77)) {
            v103(v80, v77);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v81 = (uint64_t *)(v75 + v76[33]);
          unint64_t v82 = v81[1];
          if (v82 >> 60 != 15) {
            sub_24D400DCC(*v81, v82);
          }
          swift_bridgeObjectRelease();
          uint64_t v72 = v111;
          uint64_t v83 = v73 + *(int *)(v108 + 52);
          uint64_t v84 = *(void **)(v83 + 16);
          if (v84 != (void *)1)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (*(void *)(v83 + 192))
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          sub_24D466534(*(void *)(v73 + *(int *)(v108 + 68)), *(void *)(v73 + *(int *)(v108 + 68) + 8));
        }
        if (*(void *)(v2 + v72[20] + 64))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        id v3 = *(id *)(v2 + v72[32]);
        goto LABEL_86;
      case 2u:

        if (*(void *)(v2 + 88))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        id v3 = *(id *)(v2 + 128);
        goto LABEL_86;
      case 3u:

        uint64_t v32 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C678) + 48);
        uint64_t v85 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F50);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 48))(v32, 1, v85)) {
          goto LABEL_84;
        }

        sub_24D400DCC(*(void *)(v32 + 16), *(void *)(v32 + 24));
        swift_bridgeObjectRelease();
        sub_24D400DCC(*(void *)(v32 + 40), *(void *)(v32 + 48));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v109 = v85;
        uint64_t v86 = v32 + *(int *)(v85 + 48);
        uint64_t v87 = (int *)type metadata accessor for ItemMetadata();
        uint64_t v104 = v86 + v87[7];
        uint64_t v88 = sub_24DCC8CE8();
        uint64_t v89 = *(void *)(v88 - 8);
        unint64_t v90 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
        v90(v104, v88);
        uint64_t v105 = v90;
        v90(v86 + v87[8], v88);
        swift_bridgeObjectRelease();
        uint64_t v91 = v86 + v87[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v89 + 48))(v91, 1, v88)) {
          v105(v91, v88);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v92 = (uint64_t *)(v86 + v87[33]);
        unint64_t v93 = v92[1];
        if (v93 >> 60 != 15) {
          sub_24D400DCC(*v92, v93);
        }
        swift_bridgeObjectRelease();
        uint64_t v43 = v109;
        goto LABEL_79;
      case 4u:
      case 5u:
      case 7u:
        id v3 = *(id *)v2;
        goto LABEL_86;
      case 6u:

        id v3 = *(id *)(v2 + 8);
        goto LABEL_86;
      default:
        goto LABEL_87;
    }
  }
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F330);
      uint64_t v5 = v2 + *(int *)(v4 + 48);
      uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v5, 1, v6))
      {
        uint64_t v110 = v4;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v97 = v6;
        uint64_t v7 = v5 + *(int *)(v6 + 48);
        uint64_t v8 = (int *)type metadata accessor for ItemMetadata();
        uint64_t v9 = v7 + v8[7];
        uint64_t v10 = sub_24DCC8CE8();
        uint64_t v11 = *(void *)(v10 - 8);
        unint64_t v12 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
        v12(v9, v10);
        v12(v7 + v8[8], v10);
        swift_bridgeObjectRelease();
        uint64_t v13 = v7 + v8[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10)) {
          v12(v13, v10);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = (uint64_t *)(v7 + v8[33]);
        unint64_t v15 = v14[1];
        if (v15 >> 60 != 15) {
          sub_24D400DCC(*v14, v15);
        }
        swift_bridgeObjectRelease();
        uint64_t v16 = v97;
LABEL_51:
        uint64_t v70 = v5 + *(int *)(v16 + 52);
        uint64_t v71 = *(void **)(v70 + 16);
        if (v71 != (void *)1)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v70 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)(v5 + *(int *)(v16 + 68)), *(void *)(v5 + *(int *)(v16 + 68) + 8));
        uint64_t v4 = v110;
      }
LABEL_56:
      id v3 = *(id *)(v2 + *(int *)(v4 + 80));
      goto LABEL_86;
    case 1u:
      unint64_t v17 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C650);
      uint64_t v18 = v2 + v17[12];
      uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v98 = v19;
        uint64_t v106 = v18;
        uint64_t v20 = v18 + *(int *)(v19 + 48);
        uint64_t v21 = (int *)type metadata accessor for ItemMetadata();
        uint64_t v22 = v20 + v21[7];
        uint64_t v23 = sub_24DCC8CE8();
        uint64_t v24 = *(void *)(v23 - 8);
        uint64_t v25 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
        v25(v22, v23);
        v25(v20 + v21[8], v23);
        swift_bridgeObjectRelease();
        uint64_t v26 = v20 + v21[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v26, 1, v23)) {
          v25(v26, v23);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v27 = (uint64_t *)(v20 + v21[33]);
        unint64_t v28 = v27[1];
        if (v28 >> 60 != 15) {
          sub_24D400DCC(*v27, v28);
        }
        swift_bridgeObjectRelease();
        uint64_t v29 = v106 + *(int *)(v98 + 52);
        uint64_t v30 = *(void **)(v29 + 16);
        if (v30 != (void *)1)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v29 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)(v106 + *(int *)(v98 + 68)), *(void *)(v106 + *(int *)(v98 + 68) + 8));
      }

      uint64_t v31 = (uint64_t *)(v2 + v17[20]);
      if (v31[2] != 1)
      {
        sub_24D400DCC(*v31, v31[1]);
        swift_bridgeObjectRelease();
        sub_24D400DCC(v31[3], v31[4]);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      id v3 = *(id *)(v2 + v17[32]);
      goto LABEL_86;
    case 2u:

      if (*(void *)(v2 + 40) != 1)
      {
        sub_24D400DCC(*(void *)(v2 + 24), *(void *)(v2 + 32));
        swift_bridgeObjectRelease();
        sub_24D400DCC(*(void *)(v2 + 48), *(void *)(v2 + 56));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      id v3 = *(id *)(v2 + 96);
LABEL_86:

      break;
    case 3u:
      uint64_t v32 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986F5C0) + 48);
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v32, 1, v33))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v99 = v33;
        uint64_t v34 = v32 + *(int *)(v33 + 48);
        id v35 = (int *)type metadata accessor for ItemMetadata();
        uint64_t v36 = v34 + v35[7];
        uint64_t v37 = sub_24DCC8CE8();
        uint64_t v38 = *(void *)(v37 - 8);
        uint64_t v39 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
        v39(v36, v37);
        v39(v34 + v35[8], v37);
        swift_bridgeObjectRelease();
        uint64_t v40 = v34 + v35[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v40, 1, v37)) {
          v39(v40, v37);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v41 = (uint64_t *)(v34 + v35[33]);
        unint64_t v42 = v41[1];
        if (v42 >> 60 != 15) {
          sub_24D400DCC(*v41, v42);
        }
        swift_bridgeObjectRelease();
        uint64_t v43 = v99;
LABEL_79:
        uint64_t v94 = v32 + *(int *)(v43 + 52);
        id v95 = *(void **)(v94 + 16);
        if (v95 != (void *)1)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v94 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        sub_24D466534(*(void *)(v32 + *(int *)(v43 + 68)), *(void *)(v32 + *(int *)(v43 + 68) + 8));
      }
LABEL_84:
      swift_bridgeObjectRelease();
      break;
    case 6u:
      uint64_t v44 = v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986C660) + 48);
      uint64_t v45 = (int *)type metadata accessor for VFSItem(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v45 - 1) + 48))(v44, 1, v45))
      {
        swift_bridgeObjectRelease();
        uint64_t v46 = v44 + v45[7];
        uint64_t v47 = (int *)type metadata accessor for ItemMetadata();
        uint64_t v48 = v46 + v47[7];
        uint64_t v49 = sub_24DCC8CE8();
        uint64_t v50 = *(void *)(v49 - 8);
        id v51 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
        v51(v48, v49);
        v51(v46 + v47[8], v49);
        swift_bridgeObjectRelease();
        uint64_t v52 = v46 + v47[29];
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48))(v52, 1, v49)) {
          v51(v52, v49);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v53 = (uint64_t *)(v46 + v47[33]);
        unint64_t v54 = v53[1];
        if (v54 >> 60 != 15) {
          sub_24D400DCC(*v53, v54);
        }
        swift_bridgeObjectRelease();
        uint64_t v55 = v44 + v45[8];
        uint64_t v56 = *(void **)(v55 + 16);
        if (v56 != (void *)1)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(void *)(v55 + 192))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        uint64_t v57 = v44 + v45[12];
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v57, 1, v58))
        {
          uint64_t v59 = sub_24DCC8A58();
          uint64_t v60 = *(void *)(v59 - 8);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v57, 1, v59)) {
            (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v57, v59);
          }
        }
      }
      break;
    default:
      break;
  }
LABEL_87:

  return swift_deallocObject();
}

void sub_24D6D8E2C(void *a1)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  id v3 = *(NSObject **)(v1 + 16);

  sub_24D6A36D0(a1, v3);
}

uint64_t sub_24D6D8EA4()
{
  return sub_24D6A3774(*(uint64_t **)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_24D6D8EC8()
{
  return objectdestroy_294Tm();
}

void sub_24D6D8ED0(void *a1, char a2)
{
  sub_24D68C560(a1, a2 & 1, *(void (**)(uint64_t, id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_24D6D8EE0()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6D8EFC()
{
  return sub_24D6A891C(*(void *)(v0 + 16), (void (*)(uint64_t))sub_24D89CCB4);
}

uint64_t sub_24D6D8F2C()
{
  return sub_24D6A891C(*(void *)(v0 + 16), (void (*)(uint64_t))sub_24D89C2BC);
}

uint64_t sub_24D6D8F5C()
{
  return objectdestroy_921Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_921Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D8FBC()
{
  return sub_24D68BFEC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(void))(v0 + 32));
}

uint64_t sub_24D6D8FE0()
{
  return sub_24D506070();
}

uint64_t sub_24D6D8FFC()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D900C()
{
  return sub_24D6037E8(v0, (void (*)(uint64_t))sub_24D604160);
}

uint64_t sub_24D6D903C()
{
  return sub_24D604C5C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6D9058(uint64_t a1, char a2)
{
  return sub_24D604D6C(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D6D9074()
{
  return sub_24D606944();
}

uint64_t sub_24D6D9090()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D90A0()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D90B0()
{
  return sub_24D6037E8(v0, (void (*)(uint64_t))sub_24D6039C8);
}

uint64_t sub_24D6D90E0()
{
  return sub_24D604B4C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6D90FC()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D910C()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_24D6D916C()
{
  sub_24D689F94(*(void **)(v0 + 16), *(unsigned __int8 *)(v0 + 24), *(char **)(v0 + 32), *(void *)(v0 + 40), *(char **)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void (**)(void))(v0 + 72));
}

uint64_t sub_24D6D91A8(void *a1)
{
  return sub_24D6061C4(a1, *(unsigned char *)(v1 + 16));
}

unint64_t sub_24D6D91B8(void *a1, char a2)
{
  return sub_24D6E32DC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_24D4E4B98, (void (*)(uint64_t, void, uint64_t))sub_24D8F5C48, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D5135B0);
}

uint64_t sub_24D6D91F8(void *a1)
{
  return sub_24D60660C(a1, *(unsigned char *)(v1 + 16), **(void **)(v1 + 24), *(unsigned char *)(*(void *)(v1 + 24) + 8));
}

unint64_t sub_24D6D920C(void *a1, char a2)
{
  return sub_24D6E32DC(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))sub_24D4018B8, (void (*)(uint64_t, void, uint64_t))sub_24D8F594C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_24D40160C);
}

void (*sub_24D6D924C())(uint64_t *, void)
{
  return sub_24D6893CC();
}

uint64_t sub_24D6D9254()
{
  return swift_deallocObject();
}

uint64_t sub_24D6D9270()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6D92C0()
{
  return sub_24D6D92EC((uint64_t (*)(void, void, void, void, void, void, void))sub_24D6880F4);
}

uint64_t sub_24D6D92EC(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64));
}

uint64_t sub_24D6D9320()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v20 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  uint64_t v22 = *(unsigned __int8 *)(v24 + 80);
  swift_release();
  uint64_t v21 = (v23 + 24) & ~v23;
  uint64_t v3 = v0 + v21;
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v21 + v1[7];
  uint64_t v5 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v6 = v4 + v5[7];
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(v4 + v5[33]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_24D400DCC(*v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v3 + v1[8];
  uint64_t v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v3 + v1[12];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v15, 1, v25))
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v15, v25);
  }
  unint64_t v17 = (v20 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + v22 + 16) & ~v22;

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v0 + v18, v25);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6D9724()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24D6878E4(*(double *)(v0 + v8), *(double *)(v0 + v8 + 8), *(void *)(v0 + 16), v0 + v2, *(void *)(v0 + v3), *(void (**)(id))(v0 + v4), *(void *)(v0 + v4 + 8), v0 + v6, *(void *)(v0 + v7), *(void *)(v0 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v8 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24D6D9868(void *a1, void *a2)
{
  return (*(uint64_t (**)(void, void))(v2 + 16))(*a1, *a2);
}

uint64_t sub_24D6D9898(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v1 + 16);
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return v2(&v5, &v4, a1);
}

uint64_t sub_24D6D98DC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, uint64_t))(v1 + 16))(0, MEMORY[0x263F8EE78], a1);
}

uint64_t sub_24D6D9914()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v25 = v2;
  uint64_t v20 = *(unsigned __int8 *)(v24 + 80);
  swift_release();
  uint64_t v22 = (v23 + 24) & ~v23;
  uint64_t v3 = v0 + v22;
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v22 + v1[7];
  uint64_t v5 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v6 = v4 + v5[7];
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v11 = (uint64_t *)(v4 + v5[33]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_24D400DCC(*v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v3 + v1[8];
  uint64_t v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v3 + v1[12];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v15, 1, v25))
  {
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v15, v25);
  }
  unint64_t v17 = (v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + v20 + 16) & ~v20;

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v24 + 8))(v0 + v18, v25);

  return swift_deallocObject();
}

void sub_24D6D9CEC()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  sub_24D686290(*(void *)(v0 + 16), v0 + v2, *(char **)(v0 + v3), *(void (**)(void, void, void))(v0 + v4), *(void *)(v0 + v4 + 8), v0 + v6, *(unsigned __int8 *)(v0 + v6 + *(void *)(v5 + 64)));
}

void sub_24D6D9E00(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = (void (*)(void, void, void *))v2[2];
  uint64_t v9 = v2[3];
  uint64_t v10 = (void *)v2[4];
  int v11 = *((unsigned __int8 *)v2 + v7);
  unint64_t v12 = *(void **)((char *)v2 + (v7 & 0xFFFFFFFFFFFFFFF8) + 8);

  sub_24D686784(a1, v4, v8, v9, v10, (uint64_t)v2 + v6, v11, v12);
}

void sub_24D6D9EB8(id a1, char a2, void (*a3)(id))
{
  if (a2) {

  }
  else {
    a3(a1);
  }
}

uint64_t objectdestroy_3112Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = ((v3 + *(void *)(v2 + 64)) & 0xFFFFFFFFFFFFFFF8) + v0;
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

id sub_24D6D9FBC(unint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = (void (*)(uint64_t, unint64_t, uint64_t))v2[2];
  uint64_t v9 = v2[3];
  uint64_t v10 = v2[4];
  char v11 = *((unsigned char *)v2 + v7);
  uint64_t v12 = *(void *)((char *)v2 + (v7 & 0xFFFFFFFFFFFFFFF8) + 8);

  return sub_24D686A30(a1, a2, v8, v9, v10, (uint64_t)v2 + v6, v11, v12);
}

id sub_24D6DA074@<X0>(void **a1@<X0>, void *a2@<X8>)
{
  id result = sub_24D684B9C(*a1, *(void *)(v2 + 24), *(char **)(v2 + 32));
  *a2 = result;
  return result;
}

uint64_t sub_24D6DA0BC()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v2 = v0 + ((v19 + 16) & ~v19);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  uint64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DA440()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D684608(v0 + v2, *(void *)(v0 + v3), *(uint64_t (**)(void))(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_24D6DA4E0()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v24 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v2 = sub_24DCC8A58();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  uint64_t v22 = *(unsigned __int8 *)(v25 + 80);
  uint64_t v20 = *(void *)(v25 + 64);
  swift_release();
  uint64_t v23 = (v24 + 24) & ~v24;
  uint64_t v3 = v0 + v23;
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v23 + v1[7];
  uint64_t v5 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v6 = v4 + v5[7];
  uint64_t v7 = sub_24DCC8CE8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
  v9(v6, v7);
  v9(v4 + v5[8], v7);
  swift_bridgeObjectRelease();
  uint64_t v10 = v4 + v5[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v10, 1, v7)) {
    v9(v10, v7);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v11 = (uint64_t *)(v4 + v5[33]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_24D400DCC(*v11, v12);
  }
  swift_bridgeObjectRelease();
  uint64_t v13 = v3 + v1[8];
  uint64_t v14 = *(void **)(v13 + 16);
  if (v14 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v13 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = v3 + v1[12];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48))(v15, 1, v16)
    && !(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48))(v15, 1, v26))
  {
    (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v15, v26);
  }
  unint64_t v17 = (v21 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v18 = (((v17 + 15) & 0xFFFFFFFFFFFFFFF8) + v22 + 16) & ~v22;

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v25 + 8))(v0 + v18, v26);

  return swift_deallocObject();
}

uint64_t sub_24D6DA8C8()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v6 = (v4 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return sub_24D6832CC(*(void *)(v0 + 16), v0 + v2, *(char **)(v0 + v3), *(void (**)(uint64_t, id))(v0 + v4), *(void *)(v0 + v4 + 8), (int *)(v0 + v6), *(void **)(v0 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6DA9E0(void *a1, uint64_t a2)
{
  return sub_24D6838F0(a1, a2, *(void (**)(char *, void))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_24D6DA9EC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DAA64(void *a1, void *a2)
{
  return sub_24D682188(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 80), *(void *)(v2 + 88), *(void *)(v2 + 96), *(void *)(v2 + 104));
}

uint64_t objectdestroy_532Tm()
{
  sub_24D4170B0(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DAAF4()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DAB0C(void **a1, void *a2)
{
  sub_24D5AFFC8(*a1, a2, *(void (**)(void **, id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_24D6DAB1C()
{
  swift_release();
  swift_release();

  sub_24D4170B0(*(void *)(v0 + 64));
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DAB7C(uint64_t a1)
{
  sub_24D67C664(a1, *(void **)(v1 + 16), *(void (***)(char *, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(char **)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(unsigned char *)(v1 + 80), *(unsigned char *)(v1 + 81));
}

uint64_t sub_24D6DABC0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DAC28(void *a1, __int16 a2)
{
  sub_24D67D5AC(a1, a2 & 0x1FF, *(void **)(v2 + 16), *(void (**)(void, void *))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(unsigned __int8 *)(v2 + 49), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(char **)(v2 + 80), *(void (**)(char *, uint64_t))(v2 + 88));
}

uint64_t sub_24D6DAC70()
{
  swift_release();

  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DACD0(uint64_t a1)
{
  return sub_24D6DF1F0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24D67B3EC);
}

ssize_t sub_24D6DACE8@<X0>(ssize_t *a1@<X8>)
{
  ssize_t result = fgetxattr(*(_DWORD *)(v1 + 16), "com.apple.fileprovider.trash-put-back#PN", 0, 0, 0, 0);
  *a1 = result;
  return result;
}

ssize_t sub_24D6DAD34@<X0>(ssize_t *a1@<X8>)
{
  return sub_24D6DAD4C(a1);
}

ssize_t sub_24D6DAD4C@<X0>(ssize_t *a1@<X8>)
{
  unint64_t v3 = *(void **)(v1 + 24);
  if (v3) {
    size_t v4 = *(void *)(v1 + 32) - (void)v3;
  }
  else {
    size_t v4 = 0;
  }
  ssize_t result = fgetxattr(*(_DWORD *)(v1 + 16), "com.apple.fileprovider.trash-put-back#PN", v3, v4, 0, 0);
  *a1 = result;
  return result;
}

uint64_t sub_24D6DADA0()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B190020) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = type metadata accessor for TelemetrySignpost(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 1, v3))
  {
    unint64_t v4 = v0 + v2 + *(int *)(type metadata accessor for TelemetrySignposter(0) + 24);
    uint64_t v5 = sub_24DCC8FF8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
    swift_release();
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DAF04(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B190020) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D5FD7C0(a1, v1 + v4, v5);
}

uint64_t sub_24D6DAFA8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B190020) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  sub_24D4170B0(*(void *)(v0 + 16));
  uint64_t v4 = type metadata accessor for TelemetrySignpost(0);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v0 + v2, 1, v4))
  {
    unint64_t v5 = v0 + v2 + *(int *)(type metadata accessor for TelemetrySignposter(0) + 24);
    uint64_t v6 = sub_24DCC8FF8();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

char *sub_24D6DB158(uint64_t a1)
{
  uint64_t v3 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B190020) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = v4 + *(void *)(v3 + 64);
  unint64_t v6 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v5 + 31) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D5FDB20(a1, *(void *)(v1 + 16), v1 + v4, *(void (**)(void))(v1 + v6), *(void *)(v1 + v6 + 8), *(unsigned __int8 *)(v1 + v6 + 16), *(void *)(v1 + v7), *(void *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void **)(v1 + v8), *(void (***)(char *, unint64_t))(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v1 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 16));
}

uint64_t sub_24D6DB250()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v22 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v20 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v21 = (v22 + 16) & ~v22;
  uint64_t v2 = v0 + v21;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v21 + v1[7];
  unint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  uint64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  unint64_t v18 = (((v20 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + ((v18 + 15) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DB604(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D5FE7C0(a1, v1 + v4, *(void (**)(uint64_t))(v1 + v5), *(void (**)(uint64_t))(v1 + v5 + 8), *(void *)(v1 + v6), *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + v7), *(unsigned char *)(v1 + v7 + 8), *(unsigned char *)(v1 + v7 + 9), *(void *)(v1 + ((v7 + 17) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6DB6F0()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v22 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v20 = *(void *)(*((void *)v1 - 1) + 64);
  uint64_t v21 = (v22 + 16) & ~v22;
  uint64_t v2 = v0 + v21;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v21 + v1[7];
  unint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  uint64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  unint64_t v18 = (((v20 + v21 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  sub_24D4170B0(*(void *)(v0 + v18));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DBAA4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 31) & 0xFFFFFFFFFFFFFFF8;
  sub_24D5FF0B4(a1, v1 + v4, *(void (**)(void *))(v1 + v5), *(void *)(v1 + v5 + 8), *(void *)(v1 + v6), *(void *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned __int8 *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v1 + v7), *(unsigned char *)(v1 + v7 + 8), *(unsigned char *)(v1 + v7 + 9), *(void *)(v1 + ((v7 + 17) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6DBB90()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 64));

  uint64_t v2 = v0 + ((v19 + 80) & ~v19);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  unint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  uint64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_24D6DBF10(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  return sub_24D5FFF70(a1, *(void (**)(uint64_t *))(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(uint8_t **)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(unsigned __int8 *)(v1 + 57), *(void *)(v1 + 64), *(void *)(v1 + 72), v1 + ((*(unsigned __int8 *)(v3 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)));
}

void sub_24D6DBFA0()
{
}

uint64_t sub_24D6DBFB8()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DBFD4(uint64_t a1)
{
  sub_24D67AFF0(a1, *(void *)(v1 + 16), *(void (**)(void, void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24D6DBFE0()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DBFFC()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DC054(uint64_t a1)
{
  return sub_24D6DF1F0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24D67ECB0);
}

uint64_t sub_24D6DC06C@<X0>(int a1@<W0>, uint64_t *a2@<X8>)
{
  return sub_24D67E5F0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24D6DC088(uint64_t a1, uint64_t a2)
{
  if (a2 != 1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

id sub_24D6DC09C(id result, uint64_t a2, char a3)
{
  if (a3) {
    return result;
  }
  return result;
}

void sub_24D6DC0A8(id a1, uint64_t a2, char a3)
{
  if (a3) {
}
  }

uint64_t sub_24D6DC0B4()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DC104()
{
  return sub_24D6DF2A0((uint64_t (*)(void, void, void, void, void, void))sub_24D67FBEC);
}

uint64_t sub_24D6DC130(int a1)
{
  return sub_24D67F748(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_24D6DC13C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

uint64_t sub_24D6DC17C()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DC194()
{
  return objectdestroy_665Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_665Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DC20C()
{
  return sub_24D418C80((uint64_t (*)(void, void, void, void, void))sub_24D67A79C);
}

uint64_t sub_24D6DC23C()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DC254()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();

  swift_bridgeObjectRelease();
  sub_24D4170B0(*(void *)(v0 + 40));

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DC360()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D677188(*(char ***)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(char **)(v0 + 48), *(unsigned int (***)(char *, uint64_t, uint64_t))(v0 + 56), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8));
}

void sub_24D6DC3FC(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  sub_24D679378(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

void sub_24D6DC420(uint64_t a1)
{
  sub_24D679BAC(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D6DC428()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DC440()
{
  sub_24D679CAC(*(void (**)(void *))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24D6DC44C(uint64_t a1, uint64_t a2)
{
  return sub_24D675FF4(a1, a2, *(void **)(v2 + 16)) & 1;
}

uint64_t sub_24D6DC46C@<X0>(int a1@<W0>, void *a2@<X8>)
{
  return sub_24D6797FC(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_24D6DC488()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DC4A0()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 96) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v6 = v0 + v4;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, v1);
  v7(v0 + v5, v1);

  return swift_deallocObject();
}

void sub_24D6DC5D4()
{
  uint64_t v1 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  sub_24D6711E4(*(void *)(v0 + 16), *(void (**)(void *))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void **)(v0 + 80), *(char **)(v0 + 88), v0 + ((v2 + 96) & ~v2), v0 + ((*(void *)(v1 + 64) + v2 + ((v2 + 96) & ~v2)) & ~v2));
}

uint64_t sub_24D6DC678()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 24));
  swift_release();

  swift_release();
  uint64_t v6 = v0 + v4;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, v1);
  v7(v0 + v5, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DC7C4()
{
  return sub_24D6DC940((uint64_t (*)(void, void, void, void, void, void, char *, char *, void, void, void))sub_24D671890);
}

uint64_t sub_24D6DC7DC()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = (*(void *)(v2 + 64) + v3 + v4) & ~v3;
  sub_24D4170B0(*(void *)(v0 + 16));
  swift_release();

  swift_release();
  swift_release();
  uint64_t v6 = v0 + v4;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v7(v6, v1);
  v7(v0 + v5, v1);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DC928()
{
  return sub_24D6DC940((uint64_t (*)(void, void, void, void, void, void, char *, char *, void, void, void))sub_24D671B40);
}

uint64_t sub_24D6DC940(uint64_t (*a1)(void, void, void, void, void, void, char *, char *, void, void, void))
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 64) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = (v6 + v4 + v5) & ~v4;
  return a1(*((void *)v1 + 2), *((void *)v1 + 3), *((void *)v1 + 4), *((void *)v1 + 5), *((void *)v1 + 6), *((void *)v1 + 7), &v1[v5], &v1[v7], *(void *)&v1[(v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8], *(void *)&v1[(((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8], *(void *)&v1[((((v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8]);
}

void sub_24D6DCA0C()
{
  sub_24D674A44(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_24D6DCA34()
{
  sub_24D4170B0(*(void *)(v0 + 24));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DCA8C(uint64_t a1)
{
  sub_24D670D18(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32), *(void ***)(v1 + 40), *(NSObject **)(v1 + 48));
}

uint64_t sub_24D6DCA9C()
{
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DCAE4(uint64_t a1)
{
  return sub_24D601018(a1, *(void (**)(void **))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6DCAF0()
{
  return objectdestroy_3309Tm();
}

void sub_24D6DCAF8(void *a1, void *a2)
{
  sub_24D69B114(a1, a2, *(void (**)(void *, id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_24D6DCB04()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DCB1C()
{
  return objectdestroy_2033Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DCB38()
{
}

uint64_t sub_24D6DCB50(uint64_t a1)
{
  return sub_24D5AFBA8(a1, *(uint64_t (**)(uint64_t *, uint64_t))(v1 + 16));
}

void sub_24D6DCB5C(uint64_t a1)
{
  sub_24D6AC4BC(a1, *(void **)(v1 + 16), *(NSObject **)(v1 + 24), *(void (**)(void, void *))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6DCB68()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  swift_release();
  uint64_t v2 = v0 + ((v19 + 40) & ~v19);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  uint64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }

  return swift_deallocObject();
}

uint64_t sub_24D6DCED0()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_24D6ACB34(v2, v3, v4, v5);
}

uint64_t sub_24D6DCF38()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  swift_release();
  uint64_t v2 = v0 + ((v19 + 40) & ~v19);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  uint64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }

  return swift_deallocObject();
}

void sub_24D6DD2A0()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  sub_24D6ACD24(*(void (**)(int *, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t sub_24D6DD310(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1 + 5;
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = sub_24D3D3790;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_26986C6F0 + dword_26986C6F0);
  return v12(a1, v4, v5, v6, v7, v8, v9, v10);
}

void sub_24D6DD404(uint64_t a1)
{
  sub_24D6A4BD8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), **(void **)(v1 + 32));
}

uint64_t sub_24D6DD414()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1907F8);
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  sub_24D4170B0(*(void *)(v0 + 24));
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_24D6DD4EC(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26B1907F8) - 8);
  uint64_t v6 = *(void **)(v2 + 16);
  unint64_t v7 = *(void *)(v2 + 24);
  uint64_t v8 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_24D919530(a1, v4, v6, v7, v8);
}

uint64_t sub_24D6DD574()
{
  return objectdestroy_3309Tm();
}

uint64_t sub_24D6DD57C()
{
  swift_release();
  swift_release();

  sub_24D4170B0(*(void *)(v0 + 48));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DD5D4(uint64_t a1)
{
  return sub_24D6DF1F0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24D66CF70);
}

uint64_t sub_24D6DD5EC()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DD604()
{
  return objectdestroy_2033Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DD620()
{
  sub_24D6ABF04(*(void *)(v0 + 16), *(char **)(v0 + 24), *(uint8_t **)(v0 + 32), *(void (**)(void, void *))(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56));
}

uint64_t sub_24D6DD648()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DD660()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DD6B8()
{
  return sub_24D6DF2A0((uint64_t (*)(void, void, void, void, void, void))sub_24D66C240);
}

uint64_t sub_24D6DD6E4()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DD73C(void *a1)
{
  sub_24D66C4FC(a1, *(void **)(v1 + 16), *(void (**)(void, void *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void **)(v1 + 48), *(unsigned char *)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72));
}

uint64_t objectdestroy_3201Tm()
{
  sub_24D4170B0(*(void *)(v0 + 32));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DD7C0()
{
  sub_24D466320(v0 + 16, *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_24D6DD7E4()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_610Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DD848(void *a1)
{
  sub_24D66B6D4(a1, *(void **)(v1 + 16), *(NSObject **)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40));
}

uint64_t sub_24D6DD854()
{
  sub_24D4170B0(*(void *)(v0 + 24));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DD8A4()
{
  sub_24D466304((void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_24D6DD8CC()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DD8E4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DD94C(uint64_t a1)
{
  sub_24D668690(a1, *(void (**)(void, id))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint8_t **)(v1 + 40), *(void **)(v1 + 48), *(void **)(v1 + 56), *(unsigned __int8 *)(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88));
}

void sub_24D6DD98C()
{
  sub_24D66AD20(*(void (**)(void))(v0 + 16));
}

uint64_t sub_24D6DD998()
{
  return sub_24D6DDD74((uint64_t (*)(void, uint64_t, void, void))sub_24D66ADE0);
}

uint64_t objectdestroy_3502Tm()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v19 + 24) & ~v19);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  char v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  uint64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DDD48()
{
  return sub_24D6DDD74((uint64_t (*)(void, uint64_t, void, void))sub_24D66AC84);
}

uint64_t sub_24D6DDD74(uint64_t (*a1)(void, uint64_t, void, void))
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = (void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  return a1(*(void *)(v1 + 16), v5, *v6, v6[1]);
}

uint64_t sub_24D6DDE14()
{
  return objectdestroy_32Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DDE30(char a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(NSObject **)(v1 + 24);
  swift_beginAccess();
  *(unsigned char *)(v4 + 16) = a1;
  dispatch_group_leave(v3);
}

uint64_t sub_24D6DDE84()
{
  return objectdestroy_294Tm();
}

uint64_t sub_24D6DDE8C(uint64_t a1)
{
  return sub_24D666738(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_24D6DDE9C()
{
  sub_24D666870(*(void (**)(void, id))(v0 + 16));
}

void sub_24D6DDEA8()
{
  sub_24D6668D0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(void, id))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D6DDEC8()
{
  return objectdestroy_32Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DDEE4(uint64_t a1)
{
  sub_24D667B7C(a1, *(void *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_24D6DDEEC(uint64_t a1)
{
  return sub_24D666BD8(a1, *(void (**)(char *))(v1 + 16));
}

uint64_t sub_24D6DDEF4()
{
  return objectdestroy_294Tm();
}

uint64_t sub_24D6DDEFC(uint64_t a1)
{
  return sub_24D666CAC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_24D6DDF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D6DDF74()
{
  return sub_24D666DE4(*(void (**)(char *))(v0 + 16));
}

uint64_t sub_24D6DDF80()
{
  return sub_24D666EB8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void (**)(uint64_t))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D6DDFA0()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DDFB8(uint64_t a1)
{
  return sub_24D6673A4(a1, *(void (**)(char *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t objectdestroy_2778Tm()
{
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DE024()
{
  return sub_24D6DF2A0((uint64_t (*)(void, void, void, void, void, void))sub_24D663C1C);
}

uint64_t sub_24D6DE050()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DE068()
{
  sub_24D665AE0(*(void (**)(void *, void))(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t *sub_24D6DE074(uint64_t *a1)
{
  return a1;
}

uint64_t sub_24D6DE0C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_24D6DE12C()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DE144()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DE194()
{
  sub_24D663300(*(void **)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), *(void *)(v0 + 40), *(void (**)(void))(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_24D6DE1BC()
{
  sub_24D6D3E28(*(void *)(v0 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DE204(uint64_t a1)
{
  return sub_24D66097C(a1, *(char **)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

uint64_t sub_24D6DE218()
{
  swift_release();
  sub_24D6D3E28(*(void *)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_24D6DE260()
{
  return sub_24D660CE4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24D6DE26C()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DE27C()
{
  sub_24D6D3E28(*(void *)(v0 + 24));

  return swift_deallocObject();
}

uint64_t sub_24D6DE2BC()
{
  return sub_24D661E04(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6DE2C4()
{
  return swift_deallocObject();
}

void sub_24D6DE2D4()
{
  sub_24D660D64(*(void (**)(char *, uint64_t))(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_24D6DE2F0()
{
  return sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D6DE334);
}

uint64_t sub_24D6DE334@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D661CE0(*(void *)(v1 + 16), *(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_24D6DE354()
{
  return objectdestroy_46Tm();
}

uint64_t objectdestroy_46Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DE3A8()
{
  return sub_24D6629BC(*(char **)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t sub_24D6DE3B4()
{
  return sub_24D662B30();
}

uint64_t sub_24D6DE3BC()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DE3CC(unint64_t a1, uint64_t a2)
{
  return sub_24D65FFA8(a1, a2, *(void (**)(uint64_t, uint64_t))(v2 + 16));
}

uint64_t sub_24D6DE3D4(void *a1, uint64_t a2)
{
  return sub_24D5A5D78(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t sub_24D6DE3DC()
{
  return objectdestroy_3684Tm();
}

uint64_t sub_24D6DE3E8()
{
  swift_release();
  swift_bridgeObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DE438()
{
  return sub_24D65C8A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned __int8 *)(v0 + 32), v0 + 40, *(char **)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
}

uint64_t sub_24D6DE464()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DE480(void *a1, uint64_t a2, char a3)
{
  return sub_24D65F590(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void (**)(uint64_t, void))(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_24D6DE490()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DE4AC()
{
  return sub_24DCB0424(*(void *)(v0 + 16), *(uint64_t (**)(void, uint64_t, void))(v0 + 24));
}

uint64_t sub_24D6DE4B8(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D6DE4E4(void *a1)
{
  return sub_24D6A63A0(a1, v1);
}

uint64_t sub_24D6DE4EC()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DE4FC()
{
  return sub_24D6A6660();
}

uint64_t sub_24D6DE504()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DE514(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24DCCA728();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  int64_t v4 = *(void *)(a3 + 16);
  uint64_t v29 = a3;
  if (v4)
  {
    uint64_t v30 = MEMORY[0x263F8EE78];
    sub_24D7C720C(0, v4, 0);
    uint64_t v5 = (uint64_t *)(a3 + 32);
    unint64_t v6 = *(void *)(v30 + 16);
    int64_t v7 = v4;
    do
    {
      uint64_t v9 = *v5++;
      uint64_t v8 = v9;
      unint64_t v10 = *(void *)(v30 + 24);
      if (v6 >= v10 >> 1) {
        sub_24D7C720C(v10 > 1, v6 + 1, 1);
      }
      *(void *)(v30 + 16) = v6 + 1;
      *(void *)(v30 + 8 * v6++ + 32) = v8;
      --v7;
    }
    while (v7);
  }
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E50);
  sub_24D3E4A9C(&qword_26B199EE0, &qword_26B197E50);
  sub_24D3F0EB8();
  sub_24DCC9B28();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  if (v4)
  {
    uint64_t v31 = MEMORY[0x263F8EE78];
    sub_24D7C720C(0, v4, 0);
    unint64_t v11 = (uint64_t *)(a3 + 32);
    unint64_t v12 = *(void *)(v31 + 16);
    int64_t v13 = v4;
    do
    {
      uint64_t v15 = *v11++;
      uint64_t v14 = v15;
      unint64_t v16 = *(void *)(v31 + 24);
      if (v12 >= v16 >> 1) {
        sub_24D7C720C(v16 > 1, v12 + 1, 1);
      }
      *(void *)(v31 + 16) = v12 + 1;
      *(void *)(v31 + 8 * v12++ + 32) = v14;
      --v13;
    }
    while (v13);
    a3 = v29;
  }
  swift_bridgeObjectRetain();
  sub_24DCC9B28();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  if (v4)
  {
    uint64_t v32 = MEMORY[0x263F8EE78];
    sub_24D7C720C(0, v4, 0);
    uint64_t v17 = (uint64_t *)(a3 + 32);
    unint64_t v18 = *(void *)(v32 + 16);
    int64_t v19 = v4;
    do
    {
      uint64_t v21 = *v17++;
      uint64_t v20 = v21;
      unint64_t v22 = *(void *)(v32 + 24);
      if (v18 >= v22 >> 1) {
        sub_24D7C720C(v22 > 1, v18 + 1, 1);
      }
      *(void *)(v32 + 16) = v18 + 1;
      *(void *)(v32 + 8 * v18++ + 32) = v20;
      --v19;
    }
    while (v19);
    a3 = v29;
  }
  swift_bridgeObjectRetain();
  sub_24DCC9B28();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  sub_24DCC9968();
  sub_24DCC9968();
  if (v4)
  {
    uint64_t v33 = MEMORY[0x263F8EE78];
    sub_24D7C720C(0, v4, 0);
    uint64_t v23 = (uint64_t *)(a3 + 32);
    unint64_t v24 = *(void *)(v33 + 16);
    do
    {
      uint64_t v26 = *v23++;
      uint64_t v25 = v26;
      unint64_t v27 = *(void *)(v33 + 24);
      if (v24 >= v27 >> 1) {
        sub_24D7C720C(v27 > 1, v24 + 1, 1);
      }
      *(void *)(v33 + 16) = v24 + 1;
      *(void *)(v33 + 8 * v24++ + 32) = v25;
      --v4;
    }
    while (v4);
  }
  swift_bridgeObjectRetain();
  sub_24DCC9B28();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  return 0;
}

uint64_t sub_24D6DED1C()
{
  return sub_24D6A5378();
}

uint64_t sub_24D6DED24()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DED34()
{
  return objectdestroy_2065Tm(MEMORY[0x263F8EEA0]);
}

uint64_t sub_24D6DED4C()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DED5C()
{
  return objectdestroy_2065Tm(MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_2065Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return swift_deallocObject();
}

uint64_t sub_24D6DEDC4(uint64_t a1)
{
  return sub_24D6A5CFC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D6DEDE0()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DEDF0()
{
  return sub_24D6A56D0();
}

uint64_t sub_24D6DEDF8()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DEE08()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DEE40()
{
  return sub_24D6A6070();
}

uint64_t sub_24D6DEE48()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DEE58()
{
  return sub_24D6A61C4();
}

uint64_t sub_24D6DEE60()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DEE70()
{
  return sub_24D6A628C();
}

uint64_t sub_24D6DEE78()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DEE88(void *a1)
{
  return sub_24DC88174(a1, *(void **)(v1 + 16)) & 1;
}

uint64_t sub_24D6DEEA8()
{
  return sub_24D6A6820();
}

uint64_t sub_24D6DEEB0()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DEEC0()
{
  return sub_24D6A675C();
}

uint64_t sub_24D6DEEF8()
{
  return sub_24D6A675C();
}

void sub_24D6DEF30(void *a1@<X8>)
{
  sub_24D6A91D8(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(void *__return_ptr))(v1 + 64));
  if (!v2) {
    *a1 = v4;
  }
}

uint64_t sub_24D6DEF70()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DEF80()
{
  return sub_24D6A8C58(*(uint64_t **)(v0 + 16), *(void (**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_24D6DEF8C()
{
  return swift_deallocObject();
}

uint64_t sub_24D6DEF9C(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_24D6DEFAC()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_2224Tm()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DF010(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_24D6DF03C()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DF054(uint64_t *a1, void *a2)
{
  sub_24D5AFE94(*a1, a2, *(void (**)(uint64_t *, id))(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_24D6DF064(uint64_t a1)
{
  uint64_t v3 = *(void (**)(unint64_t, uint64_t))(v1 + 16);
  unint64_t v4 = sub_24D429330(MEMORY[0x263F8EE78]);
  v3(v4, a1);

  return swift_bridgeObjectRelease();
}

uint64_t sub_24D6DF0C0()
{
  swift_bridgeObjectRelease();

  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DF120()
{
  return sub_24D659694(*(void *)(v0 + 16), *(char **)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40), *(void **)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72));
}

uint64_t sub_24D6DF14C()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6DF164()
{
  return sub_24D659F44(*(void (**)(uint64_t, void))(v0 + 16));
}

uint64_t sub_24D6DF170()
{
  swift_release();

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DF1D8(uint64_t a1)
{
  return sub_24D6DF1F0(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void))sub_24D659C94);
}

uint64_t sub_24D6DF1F0(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

void sub_24D6DF20C()
{
  dispatch_group_leave(*(dispatch_group_t *)(v0 + 16));
}

uint64_t sub_24D6DF214()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6DF274()
{
  return sub_24D6DF2A0((uint64_t (*)(void, void, void, void, void, void))sub_24D659DEC);
}

uint64_t sub_24D6DF2A0(uint64_t (*a1)(void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7]);
}

uint64_t objectdestroy_1539Tm()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6DF328(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[2], v3[3], v3[4], v3[5], v3[6], v3[7]);
}

uint64_t sub_24D6DF344()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6DF35C(uint64_t *a1, void *a2)
{
  sub_24D5AFCE8(*a1, a2, *(void (**)(uint64_t *, id))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_24D6DF36C()
{
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 32));

  swift_release();
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_24D6DF3DC(uint64_t a1)
{
  sub_24D656AEC(a1, *(void (**)(char *, void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void **)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 72), *(char **)(v1 + 80), *(unsigned char *)(v1 + 88));
}

uint64_t sub_24D6DF41C()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v21 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v19 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 32));

  uint64_t v20 = (v21 + 48) & ~v21;
  uint64_t v2 = v0 + v20;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v20 + v1[7];
  unint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  int64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  objc_release(*(id *)(v0
                     + ((((((v19 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DF7D8(void *a1, char a2)
{
  char v4 = a2 & 1;
  uint64_t v5 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_24D657FEC(a1, v4, *(void (**)(char *, void *))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), (uint64_t *)(v2 + v6), *(void *)(v2 + v7), *(void *)(v2 + v8), *(void **)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8)), *(unsigned char *)(v2 + ((v8 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(void *)(v2 + ((v8 + 31) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6DF8C4()
{
  return sub_24D6E0164();
}

void sub_24D6DF8E0()
{
}

uint64_t sub_24D6DF8F8()
{
  return objectdestroy_3309Tm();
}

void sub_24D6DF900(uint64_t a1)
{
  sub_24D600E14(a1, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6DF910(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D658724(a1, v5, v1 + v4, v6);
}

void sub_24D6DF9B0(id a1, char a2)
{
  if (a2) {
}
  }

uint64_t objectdestroy_3907Tm()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  uint64_t v2 = v0 + ((v19 + 24) & ~v19);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  unint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  int64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  swift_release();

  return swift_deallocObject();
}

void sub_24D6DFD3C()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_24D6588B0(*(void *)(v0 + 16), (uint64_t *)(v0 + v2), *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t objectdestroy_3895Tm()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v21 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v19 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v20 = (v21 + 24) & ~v21;
  uint64_t v2 = v0 + v20;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v20 + v1[7];
  unint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  int64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  swift_release();
  sub_24D4170B0(*(void *)(v0 + ((((v19 + v20 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

uint64_t sub_24D6E0164()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D600B70(*(void *)(v0 + 16), (uint64_t *)(v0 + v2), *(uint64_t (**)(uint64_t, void))(v0 + v3), *(void *)(v0 + v3 + 8), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6E0208(void *a1)
{
  return sub_24D654AF4(a1, *(uint64_t (**)(void, void))(v1 + 16), *(void *)(v1 + 24), "state - fpfs.db.asyncRead error: %@.");
}

uint64_t sub_24D6E022C()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E0248()
{
  unint64_t v2 = *(uint64_t (**)(uint64_t, void))(v0 + 24);
  uint64_t result = sub_24D84C5F4(0);
  if (!v1)
  {
    if (result) {
      uint64_t v4 = 1;
    }
    else {
      uint64_t v4 = 2;
    }
    return v2(v4, 0);
  }
  return result;
}

void sub_24D6E02AC()
{
  sub_24D651784(*(void **)(v0 + 16), *(char **)(v0 + 24), *(void (**)(uint64_t, void *, double))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D6E02CC(uint64_t a1)
{
  return (*(uint64_t (**)(void, void, void, void, void, void, uint64_t, double))(v1 + 16))(MEMORY[0x263F8EE78], MEMORY[0x263F8EE78], 0, 0, 0, 0, a1, 0.0);
}

uint64_t sub_24D6E0318()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E0370()
{
  return sub_24D6E053C((uint64_t (*)(void, void, void, void, void, void, void))sub_24D64F76C);
}

uint64_t sub_24D6E039C()
{
  return sub_24D650710(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6E03B8()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E03D4()
{
  return sub_24D64D6B0(*(void *)(v0 + 16), *(uint64_t (**)(void))(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_24D6E03F4()
{
  return objectdestroy_294Tm();
}

uint64_t objectdestroy_294Tm()
{
  swift_release();

  return swift_deallocObject();
}

void sub_24D6E0448()
{
  uint64_t v1 = *(void (**)(void, void, void, void, void, id))(v0 + 16);
  id v2 = sub_24D621D5C();
  v1(MEMORY[0x263F8EE78], MEMORY[0x263F8EE78], 0, 0, 0, v2);
}

uint64_t sub_24D6E04B8()
{
  swift_release();
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E0510()
{
  return sub_24D6E053C((uint64_t (*)(void, void, void, void, void, void, void))sub_24D64BF1C);
}

uint64_t sub_24D6E053C(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

uint64_t sub_24D6E056C()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E057C()
{
  return sub_24DAF5A54();
}

uint64_t sub_24D6E0584()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E0594()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E05A4(void *a1)
{
  return sub_24DAF5B00(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_24D6E05AC()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E05BC(uint64_t a1)
{
  id v2 = *(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(v1 + 16);
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  return v2(a1, &v5, &v4);
}

uint64_t sub_24D6E05FC()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6E0614(void *a1, void **a2, void **a3)
{
  sub_24D6ABD98(a1, *a2, *a3, *(void (**)(void))(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_24D6E0628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t *, uint64_t *))(v3 + 16);
  uint64_t v6 = a3;
  uint64_t v7 = a2;
  return v4(a1, &v7, &v6);
}

uint64_t sub_24D6E0664()
{
  return objectdestroy_255Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_255Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return swift_deallocObject();
}

uint64_t sub_24D6E06DC(uint64_t a1)
{
  id v2 = (uint64_t (*)(uint64_t, uint64_t *, uint64_t *))v1[2];
  uint64_t v3 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v3;
  return v2(a1, &v6, &v5);
}

uint64_t sub_24D6E0720()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E0738()
{
  return objectdestroy_3309Tm();
}

uint64_t objectdestroy_3309Tm()
{
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));

  return swift_deallocObject();
}

void sub_24D6E0794(uint64_t a1)
{
  sub_24D649544(a1, *(void (**)(id))(v1 + 16), *(void (**)(id))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24D6E07A4()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v19 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 24));
  uint64_t v2 = v0 + ((v19 + 32) & ~v19);
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  unint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  int64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E0B34()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_24D649A18(*(void *)(v0 + 16), *(void *)(v0 + 24), v0 + v2, *(void *)(v0 + v3), *(void *)(v0 + v3 + 8), *(void (**)(void))(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v0 + ((v3 + 23) & 0xFFFFFFFFFFFFFFF8) + 8));
}

void sub_24D6E0BE0(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_24D646E80(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_24D6E0BFC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_fget_parent_syncroot();
  *a1 = result;
  return result;
}

uint64_t sub_24D6E0C34@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = fpfs_fget_syncroot();
  *a1 = result;
  return result;
}

uint64_t sub_24D6E0C70()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_24DCC8A58();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (v3 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;
  uint64_t v8 = sub_24DCC8FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);

  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);

  return swift_deallocObject();
}

uint64_t sub_24D6E0E04(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(sub_24DCC8A58() - 8);
  uint64_t v7 = *(void (**)(id, char *, void *))(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = v1 + ((v5 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_24D646054(a1, v1 + v4, v7, v8, v9);
}

uint64_t sub_24D6E0EEC()
{
  uint64_t v1 = (int *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = v0 + v2;
  uint64_t v5 = sub_24DCC8FC8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E101C(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Signpost(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void (**)(char *, void *))(v1 + v5);
  uint64_t v8 = *(void *)(v1 + v5 + 8);
  uint64_t v9 = *(void *)(v1 + v6);
  unint64_t v10 = *(void **)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_24D644ECC(a1, v1 + v4, v7, v8, v9, v10);
}

uint64_t sub_24D6E10D4()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_24D6E111C(void *a1)
{
  sub_24D6419B8(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6E1128()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (int *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  unint64_t v7 = (v5 + *(unsigned __int8 *)(*(void *)v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v6 + 80);
  swift_release();

  swift_release();
  uint64_t v8 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v8(v0 + v3, v1);
  sub_24D4170B0(*(void *)(v0 + v4));

  v8(v0 + v7, v1);

  return swift_deallocObject();
}

void sub_24D6E12D0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  sub_24D64216C(a1, *(void (**)(id))(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), v1 + v4, *(void *)(v1 + v5), *(uint64_t **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8)), v1+ ((((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)));
}

uint64_t sub_24D6E13DC()
{
  return sub_24D6E3BF4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24DC5CE2C);
}

uint64_t sub_24D6E13F4()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

void sub_24D6E140C(uint64_t a1)
{
  sub_24D643F20(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_24D6E1414@<X0>(uint64_t (**a1)()@<X8>)
{
  return sub_24DC6A830(*(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), a1);
}

uint64_t sub_24D6E1434()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D6E145C()
{
  uint64_t v1 = (int *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  swift_release();
  swift_release();
  uint64_t v3 = v0 + v2;
  uint64_t v4 = sub_24DCC8A58();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocObject();
}

uint64_t sub_24D6E155C()
{
  uint64_t v1 = *(void *)(type metadata accessor for DownloadProgressMonitor.URLProgressKey(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_24D64401C(v2, v3, v4);
}

uint64_t sub_24D6E15C0()
{
  return objectdestroy_3684Tm();
}

uint64_t objectdestroy_3684Tm()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E161C(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D644184);
}

uint64_t objectdestroy_3898Tm()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v21 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v19 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v20 = (v21 + 24) & ~v21;
  uint64_t v2 = v0 + v20;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v20 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  int64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  sub_24D4170B0(*(void *)(v0 + ((v19 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)));

  return swift_deallocObject();
}

void sub_24D6E19B4()
{
  uint64_t v1 = *(void *)(type metadata accessor for VFSItem(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_24D657B60(*(void *)(v0 + 16), (uint64_t *)(v0 + v2), *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_24D6E1A48@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_24DC881CC(a1, *(void **)(v2 + 16), *(void (**)(uint64_t *__return_ptr, unsigned char *, char *))(v2 + 24), *(void *)(v2 + 32), a2);
}

uint64_t sub_24D6E1A68@<X0>(unsigned char *a1@<X8>)
{
  return sub_24D643DFC(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

void sub_24D6E1A84(void *a1@<X8>)
{
  sub_24D6A9030(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(void *__return_ptr))(v1 + 64));
  if (!v2)
  {
    *a1 = v4;
    a1[1] = v5;
  }
}

uint64_t sub_24D6E1AC4()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E1AD4()
{
  return sub_24D6A8BC4(*(uint64_t **)(v0 + 16), *(void (**)(long long *__return_ptr))(v0 + 24));
}

uint64_t sub_24D6E1AE0()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E1AF0()
{
  sub_24D5B38F0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void **)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void **)(v0 + 88), *(unsigned char *)(v0 + 96));

  return swift_deallocObject();
}

id sub_24D6E1B74(id result, unint64_t a2, unint64_t a3, void *a4, uint64_t a5, unint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10, char a11)
{
  switch(a11)
  {
    case 0:
      id v15 = result;
      sub_24D3F9B98(a2, a3, (uint64_t)a4, a5, a6);
      uint64_t result = a10;
      goto LABEL_6;
    case 1:
      id v16 = result;
      swift_bridgeObjectRetain();
      id v17 = a4;
      sub_24D6E1D34(a5, a6);
      uint64_t result = a7;
      goto LABEL_6;
    case 2:
      swift_bridgeObjectRetain();
      uint64_t result = (id)a3;
      goto LABEL_10;
    case 3:
      id v18 = result;
      uint64_t result = (id)a2;
      goto LABEL_6;
    case 4:
      id v19 = result;
      uint64_t result = (id)a2;
      goto LABEL_10;
    case 6:
    case 9:
LABEL_10:
      goto LABEL_8;
    case 7:
      sub_24D3F9C18((uint64_t)result, a2);
      return (id)sub_24D3F9C18(a3, (unint64_t)a4);
    case 8:
LABEL_6:
LABEL_8:
      uint64_t result = result;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D6E1D34(uint64_t a1, unint64_t a2)
{
  if ((unint64_t)a1 < 0xFFFFFFFF00000000 || (a2 & 0xF000000000000007) != 0) {
    return sub_24D5203A8(a1, a2);
  }
  return a1;
}

uint64_t sub_24D6E1D74()
{
  return sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D5EFAC0);
}

uint64_t sub_24D6E1DE0(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = v1 + v4;
  uint64_t v6 = v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v7 = *(void (**)(uint64_t, void *))v6;
  uint64_t v8 = *(void *)(v6 + 8);

  return sub_24D63E010(a1, v5, v7, v8);
}

uint64_t sub_24D6E1E80()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  sub_24D4170B0(*(void *)(v0 + v4));

  return swift_deallocObject();
}

uint64_t sub_24D6E1F78()
{
  return sub_24DCC9798() & 1;
}

void sub_24D6E2008(int a1)
{
  sub_24D63D56C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_24D6E2024@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

void sub_24D6E2058(void *a1)
{
  unint64_t v3 = *(void (**)(void **))(v1 + 16);
  uint64_t v5 = a1;
  __int16 v6 = 256;
  id v4 = a1;
  v3(&v5);
}

uint64_t sub_24D6E20C0()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E20D8()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v23 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v21 = *(void *)(*((void *)v1 - 1) + 64);
  swift_release();
  uint64_t v22 = (v23 + 24) & ~v23;
  uint64_t v2 = v0 + v22;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v22 + v1[7];
  id v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  int64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  unint64_t v18 = (v21 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;

  sub_24D4170B0(*(void *)(v0 + v19));
  swift_release();

  return swift_deallocObject();
}

void sub_24D6E2478(void *a1)
{
  sub_24D46598C(a1, *(void (**)(void **))(v1 + 16));
}

double sub_24D6E2480(_OWORD *a1)
{
  double result = 0.0;
  a1[29] = 0u;
  a1[30] = 0u;
  a1[27] = 0u;
  a1[28] = 0u;
  a1[25] = 0u;
  a1[26] = 0u;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_24D6E24C8()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E24E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1 + 5;
  uint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *unint64_t v11 = v2;
  v11[1] = sub_24D3D369C;
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, uint64_t))((char *)&dword_26986C6F0 + dword_26986C6F0);
  return v12(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_24D6E25D8()
{
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));

  return swift_deallocObject();
}

uint64_t sub_24D6E262C()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E2644()
{
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E269C()
{
  sub_24D4170B0(*(void *)(v0 + 16));

  swift_release();

  return swift_deallocObject();
}

void sub_24D6E26E4(uint64_t a1)
{
  sub_24D63C3B4(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void (**)(void, void))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6E26F4(uint64_t a1)
{
  return sub_24D41883C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_24D63BD9C);
}

uint64_t objectdestroy_4247Tm()
{
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t objectdestroy_4257Tm()
{
  uint64_t v1 = (int *)type metadata accessor for VFSItem(0);
  uint64_t v21 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v19 = *(void *)(*((void *)v1 - 1) + 64);

  swift_release();
  uint64_t v20 = (v21 + 40) & ~v21;
  uint64_t v2 = v0 + v20;
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + v20 + v1[7];
  uint64_t v4 = (int *)type metadata accessor for ItemMetadata();
  uint64_t v5 = v3 + v4[7];
  uint64_t v6 = sub_24DCC8CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v8(v5, v6);
  v8(v3 + v4[8], v6);
  swift_bridgeObjectRelease();
  uint64_t v9 = v3 + v4[29];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v9, 1, v6)) {
    v8(v9, v6);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v10 = (uint64_t *)(v3 + v4[33]);
  unint64_t v11 = v10[1];
  if (v11 >> 60 != 15) {
    sub_24D400DCC(*v10, v11);
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = v2 + v1[8];
  int64_t v13 = *(void **)(v12 + 16);
  if (v13 != (void *)1)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v12 + 192))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = v2 + v1[12];
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
  {
    uint64_t v16 = sub_24DCC8A58();
    uint64_t v17 = *(void *)(v16 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v16)) {
      (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
    }
  }
  sub_24D4170B0(*(void *)(v0 + ((v19 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)));
  swift_release();

  return swift_deallocObject();
}

void sub_24D6E2B04()
{
}

uint64_t objectdestroy_3355Tm()
{
  swift_unknownObjectRelease();

  sub_24D4170B0(*(void *)(v0 + 48));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E2B98()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E2BB4()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E2BCC()
{
  sub_24D4170B0(*(void *)(v0 + 16));
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_24D6E2C1C()
{
  sub_24D6A0F84(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void (**)(void))(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_24D6E2C40()
{
  sub_24D4170B0(*(void *)(v0 + 16));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E2C90()
{
  return sub_24D6A1578(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void **)(v0 + 64));
}

uint64_t sub_24D6E2CA8()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t sub_24D6E2CC4()
{
  return objectdestroy_2834Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_2834Tm(void (*a1)(void))
{
  swift_release();
  swift_release();
  a1(*(void *)(v1 + 40));

  return swift_deallocObject();
}

uint64_t sub_24D6E2D34(uint64_t a1)
{
  return sub_24D7BFF60(a1, *(void (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_24D6E2D40()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 56));

  return swift_deallocObject();
}

void sub_24D6E2DA0(void *a1)
{
  sub_24D6A19E0(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(uint64_t **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 64), *(unsigned char *)(v1 + 72), *(void **)(v1 + 80));
}

uint64_t objectdestroy_2844Tm()
{
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 24));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E2E2C()
{
  return sub_24D6AB1DC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_24D6E2E4C()
{
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E2E94(uint64_t a1)
{
  return sub_24D6E2EAC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void))sub_24D6AB7FC);
}

uint64_t sub_24D6E2EAC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void))
{
  return a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6]);
}

uint64_t sub_24D6E2EC8(uint64_t a1)
{
  return sub_24D6E2F7C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_24D6A1D28);
}

uint64_t sub_24D6E2EE4()
{
  return sub_24D6B5C14(*(void *)(v0 + 16), v0 + 24, *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), (void **)(v0 + 72));
}

uint64_t objectdestroy_4351Tm()
{
  swift_release();
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 56));

  return swift_deallocObject();
}

uint64_t sub_24D6E2F64(uint64_t a1)
{
  return sub_24D6E2F7C(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void, void, void))sub_24D6A1EAC);
}

uint64_t sub_24D6E2F7C(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void, void, void))
{
  return a2(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(unsigned __int8 *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72));
}

uint64_t sub_24D6E2FBC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E2FF4()
{
  return sub_24D6B5D18(v0[2], v0 + 3, v0[5]);
}

uint64_t objectdestroy_4358Tm()
{
  swift_release();
  sub_24D4170B0(*(void *)(v0 + 40));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E306C()
{
  return sub_24D6A2048(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void **)(v0 + 72));
}

uint64_t sub_24D6E3098()
{
  swift_release();
  swift_release();

  sub_24D4170B0(*(void *)(v0 + 48));

  return swift_deallocObject();
}

void sub_24D6E30E8(void *a1)
{
  sub_24D6A21A8(a1, *(void (**)(void *))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

void *sub_24D6E30F8()
{
  return sub_24D6B5DA8(v0[2], v0 + 3, v0[5]);
}

uint64_t sub_24D6E3120()
{
  return objectdestroy_76Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_76Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E3190(uint64_t a1)
{
  return sub_24DA5A73C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_24D6E319C()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_24D4170B0(*(void *)(v0 + 64));
  swift_release();

  return swift_deallocObject();
}

void sub_24D6E31F4(void *a1)
{
  sub_24D6A9D24(a1, *(NSObject **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned char *)(v1 + 56), *(void *)(v1 + 64), *(void (**)(void *))(v1 + 72), *(void *)(v1 + 80));
}

uint64_t sub_24D6E3230()
{
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_24D4170B0(*(void *)(v0 + 72));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E3298()
{
  return sub_24D6AA438(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(uint64_t (**)(void))(v0 + 104), *(void *)(v0 + 112));
}

unint64_t sub_24D6E32DC(void *a1, char a2, void (*a3)(uint64_t, uint64_t, uint64_t), void (*a4)(uint64_t, void, uint64_t), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  return sub_24D6048F8(a1, a2, *(void *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32), *(void *)(v5 + 40), *(void *)(v5 + 48), a3, a4, a5);
}

uint64_t sub_24D6E3318()
{
  swift_release();
  swift_bridgeObjectRelease();
  sub_24D4170B0(*(void *)(v0 + 40));
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E3370()
{
  return sub_24D6A9380(v0[3], v0[4], v0[5], v0[6], v0[7], v0[8], v0[9], v0[10]);
}

uint64_t sub_24D6E33A8()
{
  swift_release();

  sub_24D4170B0(*(void *)(v0 + 32));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E33F8()
{
  return sub_24D6B5E30(*(void *)(v0 + 16), (void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56));
}

uint64_t sub_24D6E3420()
{
  return objectdestroy_32Tm(MEMORY[0x263F8EED8]);
}

void *sub_24D6E343C()
{
  uint64_t v2 = v0[4];
  uint64_t v3 = v0[2];
  uint64_t v5 = v0[3];
  double result = (void *)(*(uint64_t (**)(uint64_t *, uint64_t))(**(void **)(v3 + 40) + 568))(&v5, v2);
  if (v1) {
    return &unk_26FFA3828;
  }
  return result;
}

uint64_t sub_24D6E34B4()
{
  return sub_24D637CA4(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

void sub_24D6E34D0(uint64_t a1, void *a2)
{
  sub_24D60EA50(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_24D6E34EC@<X0>(_DWORD *a1@<X8>)
{
  uint64_t result = sub_24D412FF0((void *(*)(void *__return_ptr, uint64_t))sub_24D6E3544);
  if (!v1) {
    *a1 = result;
  }
  return result;
}

void *sub_24D6E3544@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D60F888(*(_DWORD *)(v1 + 24), a1);
}

uint64_t sub_24D6E3564()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_24D6E35A4(uint64_t a1)
{
  return sub_24D631A14(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_24D6E35B4()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E35C4()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_24D6E35EC@<X0>(int *a1@<X8>)
{
  return sub_24D633888(a1);
}

uint64_t sub_24D6E3608()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_24D6E36C4(void *a1)
{
  uint64_t v3 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void **)(v1 + v5);
  uint64_t v7 = *(NSObject **)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_24D634BF4(a1, v1 + v4, v6, v7);
}

uint64_t sub_24D6E376C()
{
  return swift_deallocObject();
}

void *sub_24D6E377C()
{
  return sub_24D6A89C0(*(unsigned char **)(v0 + 16), *(void *(**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_24D6E3788()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E3798@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D6A8E84(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void (**)(char *__return_ptr))(v1 + 64));
  if (!v2) {
    *a1 = result & 1;
  }
  return result;
}

uint64_t sub_24D6E37DC()
{
  return swift_deallocObject();
}

void *sub_24D6E37EC()
{
  return sub_24D6A8A3C(*(unsigned char **)(v0 + 16), *(void *(**)(uint64_t *__return_ptr))(v0 + 24));
}

uint64_t sub_24D6E37F8()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E3808@<X0>(uint64_t a1@<X8>)
{
  return sub_24D4F3508(*(void **)(v1 + 24), a1);
}

uint64_t sub_24D6E3824()
{
  return swift_deallocObject();
}

void sub_24D6E3838(void *a1)
{
  sub_24D602358(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

char *keypath_get_selector_iCDPackageExtensions()
{
  return sel_iCDPackageExtensions;
}

uint64_t sub_24D6E3854()
{
  return objectdestroy_2033Tm(MEMORY[0x263F8EEA0]);
}

uint64_t objectdestroy_2033Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E38D4()
{
  return sub_24D418C80((uint64_t (*)(void, void, void, void, void))sub_24D62CFB8);
}

uint64_t sub_24D6E3900()
{
  return objectdestroy_32Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_32Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 16));

  return swift_deallocObject();
}

uint64_t sub_24D6E3970(void *a1)
{
  return sub_24D847E1C(a1);
}

uint64_t sub_24D6E3978()
{
  return swift_deallocObject();
}

uint64_t sub_24D6E3988()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

id sub_24D6E39B4()
{
  return sub_24D62BCE4(*(void *)(v0 + 16));
}

void sub_24D6E39BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_24D62BD58(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_24D6E39C4(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(void *, uint64_t))(v1 + 16);
  v4[0] = 0;
  v4[1] = 0;
  return v2(v4, a1);
}

uint64_t sub_24D6E3A04()
{
  return objectdestroy_367Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_367Tm(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 32));

  return swift_deallocObject();
}

uint64_t sub_24D6E3A6C()
{
  return sub_24D62AD38(*(void (**)(uint64_t, uint64_t, void))(v0 + 16), *(void *)(v0 + 24), *(char **)(v0 + 32));
}

uint64_t sub_24D6E3A8C(uint64_t a1)
{
  return sub_24D5AFB68(a1, *(uint64_t (**)(void *, uint64_t))(v1 + 16));
}

uint64_t sub_24D6E3A94()
{
  swift_release();

  return swift_deallocObject();
}

void sub_24D6E3ACC()
{
  sub_24D62A93C(*(unsigned char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t objectdestroy_4081Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E3BDC()
{
  return sub_24D6E3BF4((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_24D629DF4);
}

uint64_t sub_24D6E3BF4(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + v3;
  uint64_t v6 = (uint64_t *)(v1 + ((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v7 = *v6;
  uint64_t v8 = v6[1];

  return a1(v4, v5, v7, v8);
}

void sub_24D6E3CA0()
{
  sub_24D6150E8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6E3CC0()
{
  return sub_24D615218(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6E3CDC()
{
  return swift_deallocObject();
}

uint64_t objectdestroy_2268Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_24D6E3D38(void *a1)
{
  sub_24D6021F8(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void sub_24D6E3D44(uint64_t a1)
{
  sub_24D60DFFC(a1, v1);
}

uint64_t sub_24D6E3D4C(uint64_t a1)
{
  return sub_24D60E42C(a1, *(void **)(v1 + 16));
}

void sub_24D6E3D5C()
{
  sub_24D60E4FC(*(void *)(v0 + 16));
}

void sub_24D6E3D78()
{
  sub_24D60E5A8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_24D6E3D94@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2) {
    *a1 = 0;
  }
  return result;
}

uint64_t sub_24D6E3DC8()
{
  return objectdestroy_1755Tm(MEMORY[0x263F8EED8]);
}

uint64_t objectdestroy_1755Tm(void (*a1)(void))
{
  a1(*(void *)(v1 + 24));

  return swift_deallocObject();
}

void sub_24D6E3E38(void *a1)
{
  sub_24D60D180(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(NSObject **)(v1 + 32));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v1 = sub_24DCC8A58();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6E3EF0(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(sub_24DCC8A58() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v2 + v5;
  uint64_t v7 = (uint64_t *)(v2 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v8 = *v7;
  uint64_t v9 = v7[1];

  return a2(a1, v6, v8, v9);
}

uint64_t sub_24D6E3FA8@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtC9libfssync20FPDDomainFPFSBackend___fpfs);
  return swift_retain();
}

void sub_24D6E3FD4(uint64_t a1, void *a2, void *a3)
{
  sub_24D60CB80(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t *sub_24D6E3FDC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v23 = *a2;
    uint64_t *v4 = *a2;
    uint64_t v4 = (uint64_t *)(v23 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    uint64_t v7 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
    uint64_t v8 = (char *)v4 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_24DCC8CE8();
    unint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    uint64_t v12 = a3[5];
    int64_t v13 = (char *)v4 + v12;
    uint64_t v14 = (char *)a2 + v12;
    *(uint64_t *)((char *)v4 + v12) = *(uint64_t *)((char *)a2 + v12);
    uint64_t v15 = type metadata accessor for DBCounters();
    v11(&v13[*(int *)(v15 + 20)], &v14[*(int *)(v15 + 20)], v10);
    uint64_t v16 = a3[6];
    uint64_t v17 = (char *)v4 + v16;
    unint64_t v18 = (char *)a2 + v16;
    *(_OWORD *)uint64_t v17 = *(_OWORD *)((char *)a2 + v16);
    *((void *)v17 + 2) = *(uint64_t *)((char *)a2 + v16 + 16);
    uint64_t v19 = type metadata accessor for SnapshotCounters();
    v11(&v17[*(int *)(v19 + 28)], &v18[*(int *)(v19 + 28)], v10);
    uint64_t v20 = a3[7];
    uint64_t v21 = (char *)v4 + v20;
    uint64_t v22 = (char *)a2 + v20;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    *((void *)v21 + 2) = *((void *)v22 + 2);
    v11(&v21[*(int *)(v19 + 28)], &v22[*(int *)(v19 + 28)], v10);
  }
  return v4;
}

uint64_t sub_24D6E4190(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v5 = sub_24DCC8CE8();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v12)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = a1 + a2[5];
  uint64_t v7 = type metadata accessor for DBCounters();
  v12(v6 + *(int *)(v7 + 20), v5);
  uint64_t v8 = a1 + a2[6];
  uint64_t v9 = type metadata accessor for SnapshotCounters();
  v12(v8 + *(int *)(v9 + 28), v5);
  uint64_t v10 = a1 + a2[7] + *(int *)(v9 + 28);

  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v10, v5);
}

uint64_t sub_24D6E42AC(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(void *)(v16 + 16) = *(void *)(a2 + v15 + 16);
  uint64_t v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

void *sub_24D6E4410(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  *(void *)((char *)a1 + v11) = *(void *)((char *)a2 + v11);
  uint64_t v14 = type metadata accessor for DBCounters();
  v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v9);
  uint64_t v15 = a3[6];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  *(void *)uint64_t v16 = *(void *)((char *)a2 + v15);
  *((void *)v16 + 1) = *(void *)((char *)a2 + v15 + 8);
  *((void *)v16 + 2) = *(void *)((char *)a2 + v15 + 16);
  uint64_t v18 = type metadata accessor for SnapshotCounters();
  v10(&v16[*(int *)(v18 + 28)], &v17[*(int *)(v18 + 28)], v9);
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  *(void *)uint64_t v20 = *(void *)v21;
  *((void *)v20 + 1) = *((void *)v21 + 1);
  *((void *)v20 + 2) = *((void *)v21 + 2);
  v10(&v20[*(int *)(v18 + 28)], &v21[*(int *)(v18 + 28)], v9);
  return a1;
}

uint64_t sub_24D6E458C(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(void *)(v16 + 16) = *(void *)(a2 + v15 + 16);
  uint64_t v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

uint64_t sub_24D6E46F0(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v6 = *(int *)(type metadata accessor for VFSCounters(0) + 28);
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = a3[5];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v14 = type metadata accessor for DBCounters();
  v10(v12 + *(int *)(v14 + 20), v13 + *(int *)(v14 + 20), v9);
  uint64_t v15 = a3[6];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(_OWORD *)uint64_t v16 = *(_OWORD *)(a2 + v15);
  *(void *)(v16 + 16) = *(void *)(a2 + v15 + 16);
  uint64_t v18 = type metadata accessor for SnapshotCounters();
  v10(v16 + *(int *)(v18 + 28), v17 + *(int *)(v18 + 28), v9);
  uint64_t v19 = a3[7];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
  *(void *)(v20 + 16) = *(void *)(v21 + 16);
  v10(v20 + *(int *)(v18 + 28), v21 + *(int *)(v18 + 28), v9);
  return a1;
}

uint64_t sub_24D6E4854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_24D6E4868);
}

uint64_t sub_24D6E4868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for VFSCounters(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = type metadata accessor for DBCounters();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  uint64_t v14 = type metadata accessor for SnapshotCounters();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + *(int *)(a3 + 24);

  return v15(v17, a2, v16);
}

uint64_t sub_24D6E49B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_24D6E49C8);
}

uint64_t sub_24D6E49C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for VFSCounters(0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_5:
    return v11(v12, a2, a2, v10);
  }
  uint64_t v13 = type metadata accessor for DBCounters();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_5;
  }
  uint64_t v16 = type metadata accessor for SnapshotCounters();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  uint64_t v18 = v16;
  uint64_t v19 = a1 + *(int *)(a4 + 24);

  return v17(v19, a2, a2, v18);
}

uint64_t sub_24D6E4B20()
{
  uint64_t result = type metadata accessor for VFSCounters(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for DBCounters();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for SnapshotCounters();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

unint64_t sub_24D6E4C24()
{
  unint64_t result = qword_26986C7C8;
  if (!qword_26986C7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C7C8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FileItemKind(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FPDDomainFPFSBackend.Counters.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D6E4DD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FPDDomainFPFSBackend.Counters.CodingKeys()
{
  return &type metadata for FPDDomainFPFSBackend.Counters.CodingKeys;
}

unint64_t sub_24D6E4E10()
{
  unint64_t result = qword_26986C808;
  if (!qword_26986C808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C808);
  }
  return result;
}

unint64_t sub_24D6E4E68()
{
  unint64_t result = qword_26986C810;
  if (!qword_26986C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C810);
  }
  return result;
}

unint64_t sub_24D6E4EC0()
{
  unint64_t result = qword_26986C818;
  if (!qword_26986C818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C818);
  }
  return result;
}

uint64_t sub_24D6E4F14@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D5EFAE8(a1);
}

uint64_t sub_24D6E4FC8()
{
  return sub_24D6D7608();
}

void sub_24D6E5A40()
{
}

void sub_24D6E5A5C(uint64_t a1, void *a2)
{
}

void sub_24D6E5DDC(uint64_t a1@<X8>)
{
}

uint64_t sub_24D6E5DF8()
{
  return sub_24D6D4070();
}

uint64_t sub_24D6E5E10@<X0>(uint64_t a1@<X8>)
{
  return sub_24D6E3808(a1);
}

uint64_t sub_24D6E5E44@<X0>(void *a1@<X8>)
{
  return sub_24D6BD7A4(a1);
}

void sub_24D6E5E80(void *a1@<X8>)
{
}

uint64_t sub_24D6E5E98@<X0>(_DWORD *a1@<X8>)
{
  return sub_24D501418(a1);
}

void sub_24D6E5F14(uint64_t a1@<X0>, void *a2@<X8>)
{
}

uint64_t sub_24D6E5F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v16 = (void *)*v8;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16[10];
  v17[3] = v16[11];
  v17[4] = a8;
  v17[5] = v16[12];
  v17[6] = v16[13];
  v17[7] = a4;
  v17[8] = a5;
  uint64_t v18 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))v16[55];
  swift_retain();
  v18(a1, a2, a3, sub_24D6EA69C, v17, a6, a7);

  return swift_release();
}

uint64_t sub_24D6E6088(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = a5;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a6;
  *(void *)(v17 + 24) = a7;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, void, void, uint64_t (*)(), uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(*(void *)v9 + 408);
  swift_retain();
  swift_retain();
  v18(a1, a2, a3, 0, sub_24D6EAB2C, v16, sub_24D4729FC, v17, a8, a9);
  swift_release();

  return swift_release();
}

uint64_t sub_24D6E61D0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v15 = (void *)*v10;
  uint64_t v16 = (void *)*v10;
  uint64_t v17 = swift_allocObject();
  *(void *)(v17 + 16) = a4;
  *(void *)(v17 + 24) = a5;
  uint64_t v18 = (void *)swift_allocObject();
  _OWORD v18[2] = v15[10];
  v18[3] = v15[11];
  v18[4] = a10;
  v18[5] = v15[12];
  void v18[6] = v15[13];
  v18[7] = a6;
  v18[8] = a7;
  uint64_t v19 = (void (*)(uint64_t, uint64_t, void, void, uint64_t (*)(), uint64_t, uint64_t (*)(), void *, uint64_t, uint64_t))v16[51];
  swift_retain();
  swift_retain();
  v19(a1, a2, a3, 0, sub_24D6EAB2C, v17, sub_24D6EA69C, v18, a8, a9);
  swift_release();

  return swift_release();
}

uint64_t sub_24D6E637C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a4;
  *(void *)(v15 + 24) = a5;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t (*)(), uint64_t, uint64_t, uint64_t))(*(void *)v7 + 440);
  swift_retain();
  v16(a1, a2, a3, sub_24D47571C, v15, a6, a7);

  return swift_release();
}

uint64_t sub_24D6E6464(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)*v2;
  *(void *)&long long v18 = a1;
  uint64_t v6 = v5[10];
  uint64_t v7 = v5[11];
  uint64_t v8 = v5[12];
  uint64_t v9 = v5[13];
  *(void *)&long long v20 = v6;
  *((void *)&v20 + 1) = v7;
  uint64_t v21 = v8;
  uint64_t v22 = v9;
  type metadata accessor for Mutation();
  sub_24DCC9D48();
  swift_getWitnessTable();
  uint64_t result = sub_24DCC9AF8();
  if (!v3)
  {
    uint64_t v16 = v2[2];
    uint64_t v23 = a2;
    *(void *)&long long v20 = v6;
    *((void *)&v20 + 1) = v7;
    uint64_t v21 = v8;
    uint64_t v22 = v9;
    type metadata accessor for ReconciliationMutation();
    uint64_t v11 = sub_24DCC9D48();
    uint64_t WitnessTable = swift_getWitnessTable();
    MEMORY[0x253327B80](&v18, v11, WitnessTable);
    uint64_t v23 = v18;
    sub_24DCCA758();
    swift_retain();
    swift_getWitnessTable();
    sub_24DCCAA48();
    swift_release();
    swift_bridgeObjectRelease();
    long long v18 = v20;
    uint64_t v19 = v21;
    uint64_t v13 = *(void (**)(long long *, uint64_t, uint64_t))(*(void *)v16 + 520);
    uint64_t v14 = sub_24DCCA8B8();
    uint64_t v15 = swift_getWitnessTable();
    v13(&v18, v14, v15);
    swift_release();
    swift_bridgeObjectRelease();
    *(void *)&long long v20 = a1;
    return sub_24DCC9AF8();
  }
  return result;
}

uint64_t sub_24D6E675C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v16 = (void *)*v9;
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = v16[10];
  v17[3] = v16[11];
  v17[4] = a8;
  v17[5] = a9;
  v17[6] = v16[12];
  v17[7] = v16[13];
  v17[8] = a4;
  v17[9] = a5;
  long long v18 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))v16[55];
  swift_retain();
  v18(a1, a2, a3, sub_24D6EA660, v17, a6, a7);

  return swift_release();
}

uint64_t sub_24D6E68B4()
{
  return sub_24DCC9888();
}

unint64_t sub_24D6E68EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
  *(void *)(inited + 32) = sub_24DCC97E8();
  *(void *)(inited + 40) = v1;
  uint64_t v2 = sub_24DCC9868();
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v3;
  return sub_24D428D08(inited);
}

uint64_t sub_24D6E6980(uint64_t a1)
{
  unint64_t v2 = sub_24D6EAAD8();

  return MEMORY[0x270EF2670](a1, v2);
}

uint64_t sub_24D6E69BC(uint64_t a1)
{
  unint64_t v2 = sub_24D6EAAD8();

  return MEMORY[0x270EF2668](a1, v2);
}

uint64_t sub_24D6E69F8()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (v1 < 1)
  {
    if (*(uint64_t *)(v0 + 16) < 1) {
      return 0;
    }
    else {
      return *(unsigned __int8 *)(v0 + 50);
    }
  }
  else
  {
    uint64_t v2 = *(void *)(v0 + 32);
    uint64_t v3 = *(void *)(v0 + 40);
    BOOL v4 = __OFADD__(v2, v3);
    uint64_t v5 = v2 + v3;
    if (v4) {
      __break(1u);
    }
    else {
      return v5 >= v1;
    }
  }
  return result;
}

uint64_t sub_24D6E6A3C()
{
  uint64_t v1 = sub_24DCC8CE8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  BOOL v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  unint64_t v23 = 91;
  unint64_t v24 = 0xE100000000000000;
  sub_24DCC8CD8();
  sub_24DCC8C88();
  double v6 = v5;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  double v8 = v6 * 1000000000.0;
  if ((~COERCE__INT64(v6 * 1000000000.0) & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v8 <= -9.22337204e18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v8 >= 9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v22 = (uint64_t)v8 / 1000000;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  uint64_t v22 = v0[2];
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v10 = v23;
  unint64_t v9 = v24;
  unint64_t v23 = 0x676E696E6E757220;
  unint64_t v24 = 0xE90000000000003ALL;
  uint64_t v22 = v0[3];
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v23 = v10;
  unint64_t v24 = v9;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v12 = v23;
  unint64_t v11 = v24;
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v23 = 0xD000000000000013;
  unint64_t v24 = 0x800000024DD04C30;
  uint64_t v13 = v0[4];
  uint64_t v14 = v0[5];
  BOOL v15 = __OFADD__(v13, v14);
  uint64_t v16 = v13 + v14;
  if (v15)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v22 = v16;
  sub_24DCCAD78();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v23 = v12;
  unint64_t v24 = v11;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v18 = v23;
  unint64_t v17 = v24;
  unint64_t v23 = 0x6E69767261747320;
  unint64_t v24 = 0xEA00000000003A67;
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  unint64_t v23 = v18;
  unint64_t v24 = v17;
  swift_bridgeObjectRetain();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v20 = v23;
  unint64_t v19 = v24;
  unint64_t v23 = 0;
  unint64_t v24 = 0xE000000000000000;
  sub_24DCCA728();
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v23 = 0xD000000000000010;
  unint64_t v24 = 0x800000024DD04C50;
  if ((uint64_t)v0[3] < 1 || !__OFADD__(v0[4], v0[5]))
  {
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    unint64_t v23 = v20;
    unint64_t v24 = v19;
    swift_bridgeObjectRetain();
    sub_24DCC9968();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23;
  }
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_24D6E6EBC()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PersistenceCounters()
{
  return self;
}

uint64_t sub_24D6E6EF0()
{
  return swift_initClassMetadata2();
}

uint64_t sub_24D6E6F48()
{
  return sub_24D6E6A3C();
}

void sub_24D6E6F6C()
{
}

void sub_24D6E6FD0()
{
}

void sub_24D6E7034()
{
}

void sub_24D6E7098()
{
}

void sub_24D6E70FC()
{
}

void sub_24D6E7160()
{
}

void sub_24D6E71C4()
{
}

void sub_24D6E7228()
{
}

void sub_24D6E728C()
{
}

void sub_24D6E72F0()
{
}

void sub_24D6E7354()
{
}

void sub_24D6E73B8()
{
}

void sub_24D6E741C()
{
}

void sub_24D6E7480()
{
}

void sub_24D6E74E4()
{
}

void sub_24D6E7548()
{
}

void sub_24D6E75AC()
{
}

void sub_24D6E7610()
{
}

void sub_24D6E7674()
{
}

void sub_24D6E76D8()
{
}

void sub_24D6E773C()
{
}

void sub_24D6E77A0()
{
}

void sub_24D6E7804()
{
}

void sub_24D6E7868()
{
}

void sub_24D6E78CC()
{
}

void sub_24D6E7930()
{
}

void sub_24D6E7994()
{
}

void sub_24D6E79F8()
{
}

void sub_24D6E7A5C()
{
}

void sub_24D6E7AC0()
{
}

void sub_24D6E7B24()
{
}

void sub_24D6E7B88()
{
}

void sub_24D6E7BEC()
{
}

void sub_24D6E7C50()
{
}

void sub_24D6E7CB4()
{
}

void sub_24D6E7D18()
{
}

void sub_24D6E7D7C()
{
}

void sub_24D6E7DE0()
{
}

void sub_24D6E7E44()
{
}

void sub_24D6E7EA8()
{
}

void sub_24D6E7F0C()
{
}

void sub_24D6E7F70()
{
}

void sub_24D6E7FD4()
{
}

void sub_24D6E8038()
{
}

uint64_t sub_24D6E809C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  return v0;
}

uint64_t sub_24D6E80DC()
{
  sub_24D6E809C();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Database()
{
  return swift_getGenericMetadata();
}

uint64_t sub_24D6E8128()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v3 = (*(uint64_t (**)(void))(**(void **)(v0 + 24) + 256))();
  if (v1) {
    return v2;
  }
  if (!v3) {
    return 0;
  }
  type metadata accessor for Propagation.UpdateItem();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v2 = *(void *)(v4 + *(void *)(*(void *)v4 + 640));
LABEL_12:
    swift_release();
    return v2;
  }
  type metadata accessor for Propagation.CreateItem();
  if (swift_dynamicCastClass())
  {
    if (qword_26B199AA0 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_26B1A24C8;
    goto LABEL_12;
  }
  type metadata accessor for Propagation.DeleteItem();
  if (swift_dynamicCastClass())
  {
    uint64_t v2 = 0;
    goto LABEL_12;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

void sub_24D6E8314(uint64_t a1)
{
  sub_24D6E94B8(a1, v1, (void (*)(uint64_t, uint64_t))sub_24D6E8344);
}

uint64_t sub_24D6E8344(uint64_t a1, uint64_t *a2)
{
  uint64_t v49 = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a2 + 88);
  uint64_t v5 = *(void *)(*a2 + 104);
  uint64_t v6 = type metadata accessor for SnapshotMutation();
  uint64_t v43 = *(void *)(v6 - 8);
  uint64_t v44 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  unint64_t v42 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)&v42 - v9;
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v45 = a2;
  unint64_t v12 = *(ValueMetadata **)(v3 + 96);
  uint64_t v13 = type metadata accessor for SnapshotMutation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  unint64_t v19 = (char *)&v42 - v18;
  uint64_t v46 = v11;
  uint64_t v47 = v5;
  uint64_t v50 = v11;
  uint64_t v51 = v4;
  uint64_t v48 = v4;
  uint64_t v52 = v12;
  uint64_t v53 = v5;
  uint64_t v20 = type metadata accessor for Mutation();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v42 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v42 - v21, v49, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v24 = v43;
    uint64_t v25 = v22;
    uint64_t v26 = v44;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v10, v25, v44);
    unint64_t v17 = v42;
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v42, v10, v26);
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v28 = (uint64_t)v10;
    switch((int)EnumCaseMultiPayload)
    {
      case 1:
        MEMORY[0x270FA5388](EnumCaseMultiPayload);
        strcpy((char *)&v42 - 32, "from to  reason ");
        uint64_t v50 = type metadata accessor for SnapshotItem();
        uint64_t v51 = v50;
        uint64_t v52 = &type metadata for Fields;
        uint64_t v53 = MEMORY[0x263F8D310];
        uint64_t v32 = &v17[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_bridgeObjectRelease();
        uint64_t v33 = type metadata accessor for SnapshotItem();
        uint64_t v34 = *(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8);
        v34(v32, v33);
        v34(v17, v33);
        goto LABEL_12;
      case 2:
        (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v26);
        goto LABEL_15;
      case 3:
        (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v26);
        goto LABEL_17;
      case 4:
        (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v26);
        goto LABEL_19;
      case 5:
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        goto LABEL_11;
      default:
        uint64_t AssociatedTypeWitness = type metadata accessor for SnapshotItem();
LABEL_11:
        uint64_t v35 = AssociatedTypeWitness;
        swift_getTupleTypeMetadata2();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v17, v35);
LABEL_12:
        sub_24DBB2B9C(v28);
        uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v28, v26);
        break;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v22, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    uint64_t v30 = swift_getEnumCaseMultiPayload();
    switch((int)v30)
    {
      case 1:
        MEMORY[0x270FA5388](v30);
        strcpy((char *)&v42 - 32, "from to  reason ");
        uint64_t v50 = type metadata accessor for SnapshotItem();
        uint64_t v51 = v50;
        uint64_t v52 = &type metadata for Fields;
        uint64_t v53 = MEMORY[0x263F8D310];
        uint64_t v37 = &v17[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_bridgeObjectRelease();
        uint64_t v38 = type metadata accessor for SnapshotItem();
        uint64_t v39 = *(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8);
        v39(v37, v38);
        v39(v17, v38);
        goto LABEL_24;
      case 2:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
LABEL_15:
        uint64_t v40 = swift_getAssociatedTypeWitness();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
        goto LABEL_20;
      case 3:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
LABEL_17:
        uint64_t v40 = swift_getAssociatedTypeWitness();
        swift_getTupleTypeMetadata2();
        goto LABEL_21;
      case 4:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
LABEL_19:
        uint64_t v40 = swift_getAssociatedTypeWitness();
LABEL_20:
        swift_getTupleTypeMetadata3();
LABEL_21:
        swift_bridgeObjectRelease();
        return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v17, v40);
      case 5:
        uint64_t v31 = swift_getAssociatedTypeWitness();
        goto LABEL_23;
      default:
        uint64_t v31 = type metadata accessor for SnapshotItem();
LABEL_23:
        uint64_t v41 = v31;
        swift_getTupleTypeMetadata2();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v17, v41);
LABEL_24:
        sub_24DBB2B9C((uint64_t)v19);
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        break;
    }
  }
  return result;
}

uint64_t sub_24D6E8CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for ReconciliationMutation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  if (qword_26B190338 != -1) {
    swift_once();
  }
  return sub_24D6E8DD0(a2, qword_26B1A22B8);
}

uint64_t sub_24D6E8DC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24D6E8CE4(a1, a2);
}

uint64_t sub_24D6E8DD0(uint64_t a1, uint64_t a2)
{
  uint64_t v62 = a2;
  uint64_t v69 = a1;
  uint64_t v3 = *(void *)(*(void *)v2 + 80);
  uint64_t v4 = *(void *)(*(void *)v2 + 88);
  uint64_t v5 = *(void *)(*(void *)v2 + 96);
  uint64_t v6 = *(void *)(*(void *)v2 + 104);
  uint64_t v70 = v3;
  uint64_t v71 = v4;
  uint64_t v72 = v5;
  uint64_t v73 = v6;
  uint64_t v7 = type metadata accessor for ReconciliationMutation();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v67 = v7;
  uint64_t v68 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v66 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v61 = (char *)&v57 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v57 - v13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = swift_getAssociatedTypeWitness();
  uint64_t v63 = v3;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v64 = v6;
  uint64_t v65 = v4;
  uint64_t v18 = swift_getAssociatedConformanceWitness();
  uint64_t v70 = AssociatedTypeWitness;
  uint64_t v71 = v16;
  uint64_t v72 = AssociatedConformanceWitness;
  uint64_t v73 = v18;
  uint64_t v19 = type metadata accessor for ReconciliationID();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v57 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v57 - v24;
  uint64_t v26 = v68;
  unint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v68 + 16);
  uint64_t v28 = v67;
  v27(v14, v69, v67);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    uint64_t v59 = v27;
    uint64_t v60 = v23;
    uint64_t v29 = type metadata accessor for ReconciliationSideMutation();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    uint64_t v31 = &v14[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v25, v14, v19);
    if (swift_getEnumCaseMultiPayload())
    {
      (*(void (**)(char *, uint64_t))(v20 + 8))(v25, v19);
      (*(void (**)(char *, uint64_t))(*(void *)(v29 - 8) + 8))(v31, v29);
      uint64_t v26 = v68;
      uint64_t v32 = v69;
    }
    else
    {
      uint64_t v58 = v20;
      uint64_t v34 = *((void *)v31 + 1);
      uint64_t v63 = *(void *)v31;
      uint64_t v35 = *((void *)v31 + 2);
      BOOL v36 = sub_24D8903D0();
      uint64_t v26 = v68;
      if (v36 && (v63 & v62) != 0)
      {
        uint64_t v37 = v69;
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v69, v28);
        uint64_t v38 = *(int *)(TupleTypeMetadata2 + 48);
        uint64_t v57 = v35;
        uint64_t v39 = v61;
        uint64_t v40 = v34;
        uint64_t v41 = &v61[v38];
        uint64_t v42 = v58;
        (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v61, v25, v19);
        uint64_t v43 = v63 & ~v62;
        (*(void (**)(char *, uint64_t))(v42 + 8))(v25, v19);
        *(void *)uint64_t v41 = v43;
        *((void *)v41 + 1) = v40;
        *((void *)v41 + 2) = v57;
        uint64_t v32 = v37;
        uint64_t v28 = v67;
        uint64_t v26 = v68;
        swift_storeEnumTagMultiPayload();
        swift_storeEnumTagMultiPayload();
        uint64_t v44 = v39;
        uint64_t v20 = v42;
        (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v32, v44, v28);
      }
      else
      {
        uint64_t v20 = v58;
        (*(void (**)(char *, uint64_t))(v58 + 8))(v25, v19);
        uint64_t v32 = v69;
      }
    }
    uint64_t v33 = v66;
    unint64_t v27 = v59;
    uint64_t v23 = v60;
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v14, v28);
    uint64_t v32 = v69;
    uint64_t v33 = v66;
  }
  v27(v33, v32, v28);
  if (swift_getEnumCaseMultiPayload() != 8) {
    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v33, v28);
  }
  uint64_t v45 = type metadata accessor for ReconciliationSideMutation();
  uint64_t v46 = swift_getTupleTypeMetadata2();
  uint64_t v47 = &v33[*(int *)(v46 + 48)];
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v33, v19);
  if (swift_getEnumCaseMultiPayload())
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
    return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v47, v45);
  }
  else
  {
    uint64_t v49 = v23;
    uint64_t v51 = *(void *)v47;
    uint64_t v50 = (char *)*((void *)v47 + 1);
    uint64_t v68 = *((void *)v47 + 2);
    if (sub_24D8903D0() && (v51 & v62) != 0)
    {
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v69, v28);
      uint64_t v52 = *(int *)(v46 + 48);
      uint64_t v66 = v50;
      uint64_t v53 = v61;
      unint64_t v54 = &v61[v52];
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v61, v49, v19);
      uint64_t v55 = v51 & ~v62;
      (*(void (**)(char *, uint64_t))(v20 + 8))(v49, v19);
      uint64_t v56 = v66;
      *(void *)unint64_t v54 = v55;
      *((void *)v54 + 1) = v56;
      *((void *)v54 + 2) = v68;
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v26 + 32))(v69, v53, v28);
    }
    else
    {
      return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v49, v19);
    }
  }
}

void sub_24D6E94B8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = (void *)MEMORY[0x253329610]();
  a3(a1, a2);
}

void sub_24D6E9520(uint64_t a1)
{
  sub_24D6E94B8(a1, v1, (void (*)(uint64_t, uint64_t))sub_24D6E9550);
}

uint64_t sub_24D6E9550(uint64_t a1, uint64_t *a2)
{
  uint64_t v48 = a1;
  uint64_t v3 = *a2;
  uint64_t v4 = *(void *)(*a2 + 88);
  uint64_t v5 = *(void *)(*a2 + 104);
  uint64_t v6 = type metadata accessor for SnapshotMutation();
  uint64_t v42 = *(void *)(v6 - 8);
  uint64_t v43 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v41 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v41 - v9;
  uint64_t v11 = *(void *)(v3 + 80);
  uint64_t v44 = a2;
  uint64_t v12 = *(ValueMetadata **)(v3 + 96);
  uint64_t v13 = type metadata accessor for SnapshotMutation();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  unint64_t v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v41 - v18;
  uint64_t v45 = v11;
  uint64_t v46 = v5;
  uint64_t v49 = v11;
  uint64_t v50 = v4;
  uint64_t v47 = v4;
  uint64_t v51 = v12;
  uint64_t v52 = v5;
  uint64_t v20 = type metadata accessor for Mutation();
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v41 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))((char *)&v41 - v21, v48, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = v42;
    uint64_t v24 = v43;
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v10, v22, v43);
    uint64_t v26 = v41;
    (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v41, v10, v24);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v29 = (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v24);
        MEMORY[0x270FA5388](v29);
        strcpy((char *)&v41 - 32, "from to  reason ");
        uint64_t v49 = type metadata accessor for SnapshotItem();
        uint64_t v50 = v49;
        uint64_t v51 = &type metadata for Fields;
        uint64_t v52 = MEMORY[0x263F8D310];
        uint64_t v30 = &v26[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_bridgeObjectRelease();
        uint64_t v31 = type metadata accessor for SnapshotItem();
        uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8);
        v32(v30, v31);
        uint64_t v33 = v26;
        return ((uint64_t (*)(char *, uint64_t))v32)(v33, v31);
      case 2u:
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
        goto LABEL_10;
      case 3u:
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
        swift_getTupleTypeMetadata2();
        goto LABEL_11;
      case 4u:
        uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
LABEL_10:
        swift_getTupleTypeMetadata3();
LABEL_11:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v26, AssociatedTypeWitness);
        sub_24DBB2B9C((uint64_t)v10);
        return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v10, v24);
      case 5u:
        (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
        uint64_t v27 = swift_getAssociatedTypeWitness();
        goto LABEL_13;
      default:
        (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v24);
        uint64_t v27 = type metadata accessor for SnapshotItem();
LABEL_13:
        uint64_t v36 = v27;
        swift_getTupleTypeMetadata2();
        swift_bridgeObjectRelease();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v26, v36);
        break;
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v22, v13);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v37 = (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        MEMORY[0x270FA5388](v37);
        strcpy((char *)&v41 - 32, "from to  reason ");
        uint64_t v49 = type metadata accessor for SnapshotItem();
        uint64_t v50 = v49;
        uint64_t v51 = &type metadata for Fields;
        uint64_t v52 = MEMORY[0x263F8D310];
        uint64_t v38 = &v17[*(int *)(swift_getTupleTypeMetadata() + 48)];
        swift_bridgeObjectRelease();
        uint64_t v31 = type metadata accessor for SnapshotItem();
        uint64_t v32 = *(void (**)(char *, uint64_t))(*(void *)(v31 - 8) + 8);
        v32(v38, v31);
        uint64_t v33 = v17;
        return ((uint64_t (*)(char *, uint64_t))v32)(v33, v31);
      case 2u:
        uint64_t v39 = swift_getAssociatedTypeWitness();
        __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26B199DF0);
        goto LABEL_19;
      case 3u:
        uint64_t v39 = swift_getAssociatedTypeWitness();
        swift_getTupleTypeMetadata2();
        goto LABEL_20;
      case 4u:
        uint64_t v39 = swift_getAssociatedTypeWitness();
LABEL_19:
        swift_getTupleTypeMetadata3();
LABEL_20:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v17, v39);
        sub_24DBB2B9C((uint64_t)v19);
        return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
      case 5u:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        uint64_t v28 = swift_getAssociatedTypeWitness();
        goto LABEL_22;
      default:
        (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
        uint64_t v28 = type metadata accessor for SnapshotItem();
LABEL_22:
        uint64_t v40 = v28;
        swift_getTupleTypeMetadata2();
        swift_bridgeObjectRelease();
        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v40 - 8) + 8))(v17, v40);
        break;
    }
  }
  return result;
}

uint64_t sub_24D6E9F88(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v16 = (void *)*v11;
  unint64_t v17 = (void *)*v11;
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = a4;
  *(void *)(v18 + 24) = a5;
  uint64_t v19 = (void *)swift_allocObject();
  void v19[2] = v16[10];
  v19[3] = v16[11];
  v19[4] = a10;
  v19[5] = a11;
  v19[6] = v16[12];
  v19[7] = v16[13];
  v19[8] = a6;
  v19[9] = a7;
  uint64_t v20 = (void (*)(uint64_t, uint64_t, void, void, uint64_t (*)(), uint64_t, uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))v17[51];
  swift_retain();
  swift_retain();
  v20(a1, a2, a3, 0, sub_24D6EA5FC, v18, sub_24D6EA660, v19, a8, a9);
  swift_release();

  return swift_release();
}

uint64_t sub_24D6EA144(void *a1, void (*a2)(char *))
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_26B197F30);
  uint64_t v4 = sub_24DCCB058();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v10 - v6;
  *(uint64_t *)((char *)&v10 - v6) = (uint64_t)a1;
  swift_storeEnumTagMultiPayload();
  id v8 = a1;
  a2(v7);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_24D6EA254(uint64_t a1, void (*a2)(char *, char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a2;
  uint64_t v10 = sub_24DCCA3F8();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v19 - v12;
  uint64_t v14 = sub_24DCCA3F8();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (char *)&v19 - v16;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 56))((char *)&v19 - v16, 1, 1, a6);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(a7 - 8) + 56))(v13, 1, 1, a7);
  v20(v17, v13, a1);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

void sub_24D6EA454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)v4 + 464))(a1, 1, a2, a3, a4);
  sub_24DCCA728();
  swift_bridgeObjectRelease();
  sub_24DCCA768();
  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCC9968();
  swift_getErrorValue();
  id v5 = sub_24DBA2828(v7);
  id v6 = objc_msgSend(v5, sel_description);
  sub_24DCC97E8();

  sub_24DCC9968();
  swift_bridgeObjectRelease();
  sub_24DCCA978();
  __break(1u);
}

uint64_t sub_24D6EA5C4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6EA5FC()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_24D6EA628()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6EA664()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_24D6EA6A0(void *a1)
{
  return sub_24D6EA144(a1, *(void (**)(char *))(v1 + 56));
}

uint64_t sub_24D6EA6C8(uint64_t a1)
{
  return sub_24D6EA254(a1, *(void (**)(char *, char *, uint64_t))(v1 + 64), *(void *)(v1 + 72), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void *sub_24D6EA6FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  v6[5] = a4;
  v6[6] = a5;
  v6[7] = a6;
  swift_weakAssign();
  swift_weakAssign();
  uint64_t v7 = *(void (**)(uint64_t))(*v6 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v8 = swift_unknownObjectRetain();
  v7(v8);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_weakAssign();
  swift_release();
  return v6;
}

void *sub_24D6EA7F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  a6[2] = a1;
  a6[3] = a2;
  a6[4] = a3;
  a6[5] = a4;
  a6[6] = a5;
  a6[7] = a8;
  swift_weakAssign();
  swift_weakAssign();
  uint64_t v9 = *(void (**)(uint64_t))(*a6 + 176);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v10 = swift_unknownObjectRetain();
  v9(v10);
  swift_release();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_weakAssign();
  swift_release();
  return a6;
}

uint64_t getEnumTagSinglePayload for EvictionUrgency(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for MaterializationError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D6EAA44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MaterializationError()
{
  return &type metadata for MaterializationError;
}

unint64_t sub_24D6EAA84()
{
  unint64_t result = qword_26986C820;
  if (!qword_26986C820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C820);
  }
  return result;
}

unint64_t sub_24D6EAAD8()
{
  unint64_t result = qword_26986C828;
  if (!qword_26986C828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26986C828);
  }
  return result;
}

uint64_t sub_24D6EAB4C()
{
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(unsigned __int8 *)(v0 + 8);
  char v3 = *(unsigned char *)(v0 + 9);
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v9 = *(_OWORD *)(v0 + 16);
  long long v10 = v4;
  __int16 v11 = *(_WORD *)(v0 + 48);
  sub_24D6D0A84((uint64_t)&v10 + 8, (uint64_t)v12);
  int v5 = SHIBYTE(v11);
  if (v3)
  {
    sub_24DCCB008();
    sub_24DCC97E8();
    id v6 = v1;
    sub_24DCC98F8();
    swift_bridgeObjectRelease();
    sub_24D40160C(v1, v2, 1);
  }
  else
  {
    sub_24DCCB008();
    if (v2)
    {
      sub_24DCCB008();
      if (v2 == 1) {
        sub_24DCCB038();
      }
    }
    else
    {
      sub_24DCCB008();
      sub_24DCCB028();
    }
  }
  swift_bridgeObjectRetain();
  sub_24DCC98F8();
  sub_24DCCB008();
  sub_24D6D0A84((uint64_t)v12, (uint64_t)&v13);
  int v7 = v14;
  switch(v14)
  {
    case 0xFAu:
    case 0xFBu:
    case 0xFCu:
    case 0xFDu:
    case 0xFEu:
      goto LABEL_17;
    default:
      sub_24DCCB008();
      if (v7 == 255)
      {
        sub_24DCCB018();
        if (v5 == 70) {
          goto LABEL_18;
        }
LABEL_16:
        sub_24DCCB018();
        sub_24DCCB008();
        return sub_24D58F9DC((uint64_t)&v9);
      }
      sub_24DCCB018();
      if (v7)
      {
        if (v7 == 1)
        {
          sub_24DCCB008();
          sub_24DCCB038();
          if (v5 == 70) {
            goto LABEL_18;
          }
          goto LABEL_16;
        }
LABEL_17:
        sub_24DCCB008();
        if (v5 != 70) {
          goto LABEL_16;
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
        if (v5 != 70) {
          goto LABEL_16;
        }
      }
LABEL_18:
      sub_24DCCB018();
      return sub_24D58F9DC((uint64_t)&v9);
  }
}

uint64_t sub_24D6EADB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_24D3F7E7C((_OWORD *)a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *char v3 = 0x8000000000000000;
    sub_24D706588(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *char v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24D415F74(a1, qword_26B197F50);
    sub_24DC731E0(a2, a3, v9);
    swift_bridgeObjectRelease();
    return sub_24D415F74((uint64_t)v9, qword_26B197F50);
  }
}

uint64_t sub_24D6EAE8C(uint64_t a1, uint64_t a2, char a3)
{
  long long v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196F40);
  MEMORY[0x270FA5388](v8 - 8);
  long long v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199410);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  unsigned __int8 v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_24D415F74(a1, (uint64_t *)&unk_26B196F40);
    unint64_t v15 = sub_24D6AD5F8(a2, a3);
    if (v16)
    {
      unint64_t v17 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v4;
      uint64_t v23 = *v4;
      uint64_t *v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24DC78174();
        uint64_t v19 = v23;
      }
      sub_24D3F0BA0(*(void *)(v19 + 56) + *(void *)(v12 + 72) * v17, (uint64_t)v10, (uint64_t *)&unk_26B199410);
      sub_24DC74998(v17, v19);
      uint64_t *v4 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    return sub_24D415F74((uint64_t)v10, (uint64_t *)&unk_26B196F40);
  }
  else
  {
    sub_24D3F0BA0(a1, (uint64_t)v14, (uint64_t *)&unk_26B199410);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_24D714234((uint64_t)v14, a2, a3, v20, (void (*)(void))sub_24DC78174, (uint64_t *)&unk_26B199410, (uint64_t *)&unk_26B195DF0);
    uint64_t *v4 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24D6EB108(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199310);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199300);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_24D415F74(a1, (uint64_t *)&unk_26B199310);
    unint64_t v13 = sub_24D6AD6B8(a2);
    if (v14)
    {
      unint64_t v15 = v13;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v17 = *v3;
      uint64_t v21 = *v3;
      *char v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24DC78764();
        uint64_t v17 = v21;
      }
      sub_24D3F0BA0(*(void *)(v17 + 56) + *(void *)(v10 + 72) * v15, (uint64_t)v8, (uint64_t *)&unk_26B199300);
      sub_24DC749B0(v15, v17);
      *char v3 = v17;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v9);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
    }
    return sub_24D415F74((uint64_t)v8, (uint64_t *)&unk_26B199310);
  }
  else
  {
    sub_24D3F0BA0(a1, (uint64_t)v12, (uint64_t *)&unk_26B199300);
    char v18 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v3;
    *char v3 = 0x8000000000000000;
    sub_24D714394((uint64_t)v12, a2, v18);
    *char v3 = v21;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24D6EB354(uint64_t a1, uint64_t a2, char a3)
{
  long long v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(qword_26B18FEA0);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199598);
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_24D415F74(a1, qword_26B18FEA0);
    unint64_t v15 = sub_24D6AD5F8(a2, a3);
    if (v16)
    {
      unint64_t v17 = v15;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v19 = *v4;
      uint64_t v23 = *v4;
      uint64_t *v4 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24DC784E8();
        uint64_t v19 = v23;
      }
      sub_24D3F0BA0(*(void *)(v19 + 56) + *(void *)(v12 + 72) * v17, (uint64_t)v10, (uint64_t *)&unk_26B199598);
      sub_24DC749A4(v17, v19);
      uint64_t *v4 = v19;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, 0, 1, v11);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    }
    return sub_24D415F74((uint64_t)v10, qword_26B18FEA0);
  }
  else
  {
    sub_24D3F0BA0(a1, (uint64_t)v14, (uint64_t *)&unk_26B199598);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_24D714234((uint64_t)v14, a2, a3, v20, (void (*)(void))sub_24DC784E8, (uint64_t *)&unk_26B199598, &qword_26B1948C0);
    uint64_t *v4 = v23;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24D6EB5D0(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_24DCC8CE8();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_24D415F74(a1, (uint64_t *)&unk_26B196B10);
    sub_24DC737E4(a2, (uint64_t)v8);
    sub_24D718F90(a2);
    return sub_24D415F74((uint64_t)v8, (uint64_t *)&unk_26B196B10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *char v3 = 0x8000000000000000;
    sub_24D714DC0((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *char v3 = v16;
    swift_bridgeObjectRelease();
    return sub_24D718F90(a2);
  }
}

uint64_t sub_24D6EB79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B196B10);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  char v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_24D415F74(a1, (uint64_t *)&unk_26B196B10);
    sub_24DC737C0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_24D415F74((uint64_t)v10, (uint64_t *)&unk_26B196B10);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_24D716298((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_24DC79A4C, MEMORY[0x263F07490], &qword_26986AFB0, MEMORY[0x263F07490]);
    uint64_t *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24D6EB9AC(uint64_t a1, uint64_t a2)
{
  char v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1907B8);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SyncState();
  MEMORY[0x270FA5388](v9);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_24D415F74(a1, &qword_26B1907B8);
    sub_24DC73AA8(a2, (uint64_t)v8);
    return sub_24D415F74((uint64_t)v8, &qword_26B1907B8);
  }
  else
  {
    sub_24D7190A4(a1, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for SyncState);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v3;
    *char v3 = 0x8000000000000000;
    sub_24D71585C((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *char v3 = v16;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24D6EBB5C(void *a1, uint64_t a2)
{
  char v3 = v2;
  if (*a1) {
    BOOL v5 = 0;
  }
  else {
    BOOL v5 = a1[1] == 1;
  }
  if (v5)
  {
    sub_24D415F74((uint64_t)a1, qword_26B18FD08);
    unint64_t v8 = sub_24D6AD6B8(a2);
    if (v9)
    {
      unint64_t v10 = v8;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v12 = *v2;
      uint64_t v14 = *v3;
      *char v3 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_24DC7BBC4();
        uint64_t v12 = v14;
      }
      sub_24D433924(*(void *)(v12 + 56) + 16 * v10, (uint64_t)&v15);
      sub_24DC76EF4(v10, v12);
      *char v3 = v12;
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v15 = xmmword_24DCD46F0;
    }
    return sub_24D415F74((uint64_t)&v15, qword_26B18FD08);
  }
  else
  {
    sub_24D433924((uint64_t)a1, (uint64_t)&v15);
    char v6 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_24D715F58((uint64_t)&v15, a2, v6);
    uint64_t *v2 = v13;
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24D6EBC7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199050);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_24DCC8A58();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(a1, 1, v11) == 1)
  {
    sub_24D415F74(a1, (uint64_t *)&unk_26B199050);
    sub_24DC73FE0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_24D415F74((uint64_t)v10, (uint64_t *)&unk_26B199050);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 32))(v14, a1, v11);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_24D716298((uint64_t)v14, a2, a3, isUniquelyReferenced_nonNull_native, (void (*)(void))sub_24DC7BDA0, MEMORY[0x263F06EA8], &qword_26986B0D8, MEMORY[0x263F06EA8]);
    uint64_t *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_24D6EBE8C(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_24D6EBF1C(a1, a2, a3, a4, (uint64_t (*)(void))sub_24DC7D04C, &qword_26B191490, (void (*)(void))sub_24DC7D04C, (void (*)(unint64_t, uint64_t))sub_24DC77698);
}

uint64_t sub_24D6EBED4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return sub_24D6EBF1C(a1, a2, a3, a4, (uint64_t (*)(void))sub_24DC7D040, &qword_26986D5A8, (void (*)(void))sub_24DC7D040, (void (*)(unint64_t, uint64_t))sub_24DC77698);
}

uint64_t sub_24D6EBF1C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t *a6, void (*a7)(void), void (*a8)(unint64_t, uint64_t))
{
  uint64_t v9 = v8;
  if (a2)
  {
    swift_bridgeObjectRetain();
    unint64_t v18 = sub_24D4053BC(a3, a4);
    char v20 = v19;
    swift_bridgeObjectRelease();
    if (v20)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v22 = *v8;
      uint64_t v25 = *v9;
      uint64_t *v9 = 0x8000000000000000;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        a7();
        uint64_t v22 = v25;
      }
      swift_bridgeObjectRelease();
      a8(v18, v22);
      uint64_t *v9 = v22;
      swift_bridgeObjectRelease();
    }
    else if (((vars8 ^ (2 * vars8)) & 0x4000000000000000) != 0)
    {
      __break(0xC471u);
    }
  }
  else
  {
    char v15 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = *v8;
    *uint64_t v8 = 0x8000000000000000;
    sub_24D716E14(a1, a3, a4, v15, a5, a6);
    *uint64_t v8 = v24;
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_24D6EC0A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a1 + 24))
  {
    sub_24D57EC10((long long *)a1, (uint64_t)v9);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v8 = *v3;
    *char v3 = 0x8000000000000000;
    sub_24D716C80(v9, a2, a3, isUniquelyReferenced_nonNull_native);
    *char v3 = v8;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24D415F74(a1, &qword_26986D5B0);
    sub_24DC74314(a2, a3, (uint64_t)v9);
    swift_bridgeObjectRelease();
    return sub_24D415F74((uint64_t)v9, &qword_26986D5B0);
  }
}

uint64_t sub_24D6EC178(uint64_t a1, void *a2)
{
  if (*(void *)(a1 + 24))
  {
    sub_24D3F7E7C((_OWORD *)a1, v7);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v6 = *v2;
    uint64_t *v2 = 0x8000000000000000;
    sub_24D716118(v7, a2, isUniquelyReferenced_nonNull_native, (uint64_t (*)(void *))sub_24D4060A4, (void (*)(void))sub_24DC7D218, &qword_26986D598, type metadata accessor for FPDiagnosticAttributeKey);
    uint64_t *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_24D415F74(a1, qword_26B197F50);
    sub_24DC74524((uint64_t)a2, v7);

    return sub_24D415F74((uint64_t)v7, qword_26B197F50);
  }
}

uint64_t sub_24D6EC278(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  long long v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch((int)EnumCaseMultiPayload)
  {
    case 0:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v7 = swift_getAssociatedTypeWitness();
      uint64_t v8 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v10 = swift_getAssociatedConformanceWitness();
      uint64_t v20 = v7;
      uint64_t v21 = (ValueMetadata *)v8;
      uint64_t v22 = AssociatedConformanceWitness;
      uint64_t v23 = v10;
      type metadata accessor for FileItemVersion();
      uint64_t v11 = sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v13 = *(void *)&v4[*(int *)(TupleTypeMetadata3 + 64)];
      (*(void (**)(char *, uint64_t))(*(void *)(v11 - 8) + 8))(&v4[*(int *)(TupleTypeMetadata3 + 48)], v11);
      goto LABEL_6;
    case 1:
      MEMORY[0x270FA5388](EnumCaseMultiPayload);
      strcpy((char *)&v19 - 48, " filename below syncability originalError ");
      uint64_t v20 = swift_getAssociatedTypeWitness();
      uint64_t v21 = &type metadata for Filename;
      uint64_t v22 = v20;
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26986BB30);
      uint64_t v24 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      swift_bridgeObjectRelease();
      char v15 = &v4[TupleTypeMetadata[16]];
      sub_24D4A479C(*(void *)&v4[TupleTypeMetadata[20]], *(void *)&v4[TupleTypeMetadata[20] + 8]);
      uint64_t v13 = *(void *)&v4[TupleTypeMetadata[24]];
      uint64_t v16 = swift_getAssociatedTypeWitness();
      uint64_t v17 = *(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8);
      v17(v15, v16);
      v17(v4, v16);
      break;
    case 3:
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      uint64_t v13 = *(void *)&v4[*(int *)(swift_getTupleTypeMetadata2() + 48)];
LABEL_6:
      (*(void (**)(char *, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(v4, AssociatedTypeWitness);
      break;
    case 8:
      uint64_t v13 = *(void *)v4;
      break;
    default:
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
      uint64_t v13 = 0;
      break;
  }
  return v13;
}

uint64_t sub_24D6EC718()
{
  return sub_24DCC9888();
}

uint64_t type metadata accessor for FileTreeError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D6EC770(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1);
  long long v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(unsigned char *))(v2 + 16))(v4);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t result = 7;
  switch(EnumCaseMultiPayload)
  {
    case 1:
      MEMORY[0x270FA5388](7);
      strcpy((char *)&v28 - 48, " filename below syncability originalError ");
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      uint64_t v30 = &type metadata for Filename;
      uint64_t v31 = AssociatedTypeWitness;
      uint64_t v32 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26986BB30);
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      swift_bridgeObjectRelease();
      uint64_t v16 = &v4[TupleTypeMetadata[16]];
      sub_24D4A479C(*(void *)&v4[TupleTypeMetadata[20]], *(void *)&v4[TupleTypeMetadata[20] + 8]);

      uint64_t v17 = swift_getAssociatedTypeWitness();
      unint64_t v18 = *(void (**)(unsigned char *, uint64_t))(*(void *)(v17 - 8) + 8);
      v18(v16, v17);
      v18(v4, v17);
      uint64_t result = 1;
      break;
    case 2:
      swift_bridgeObjectRelease();
      uint64_t v19 = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v19 - 8) + 8))(&v4[*(int *)(TupleTypeMetadata2 + 48)], v19);
      uint64_t result = 2;
      break;
    case 3:
      uint64_t v21 = swift_getAssociatedTypeWitness();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);

      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v21 - 8) + 8))(v4, v21);
      uint64_t result = 3;
      break;
    case 4:
      uint64_t v22 = swift_getAssociatedTypeWitness();
      uint64_t v23 = sub_24DCCA3F8();
      uint64_t v24 = swift_getTupleTypeMetadata2();
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v22 - 8) + 8))(&v4[*(int *)(v24 + 48)], v22);
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v23 - 8) + 8))(v4, v23);
      uint64_t result = 4;
      break;
    case 5:
      if (*v4) {
        uint64_t result = 11;
      }
      else {
        uint64_t result = 22;
      }
      break;
    case 6:
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, a1);
      uint64_t result = 5;
      break;
    case 7:
      uint64_t v25 = swift_getAssociatedTypeWitness();
      uint64_t v26 = swift_getTupleTypeMetadata2();
      uint64_t v27 = *(void (**)(unsigned char *, uint64_t))(*(void *)(v25 - 8) + 8);
      v27(&v4[*(int *)(v26 + 48)], v25);
      v27(v4, v25);
      uint64_t result = 6;
      break;
    case 8:
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, a1);
      uint64_t result = 15;
      break;
    case 9:
      (*(void (**)(unsigned char *, uint64_t))(v2 + 8))(v4, a1);
      uint64_t result = 23;
      break;
    case 10:
      return result;
    case 11:
      uint64_t result = 8;
      break;
    case 12:
      uint64_t result = 9;
      break;
    case 13:
      uint64_t result = 10;
      break;
    case 14:
      uint64_t result = 12;
      break;
    case 15:
      uint64_t result = 13;
      break;
    case 16:
      uint64_t result = 14;
      break;
    case 17:
      uint64_t result = 16;
      break;
    case 18:
      uint64_t result = 17;
      break;
    case 19:
      uint64_t result = 18;
      break;
    case 20:
      uint64_t result = 19;
      break;
    case 21:
      uint64_t result = 20;
      break;
    case 22:
      uint64_t result = 24;
      break;
    default:
      uint64_t v7 = swift_getAssociatedTypeWitness();
      uint64_t v8 = swift_getAssociatedTypeWitness();
      uint64_t v9 = swift_getAssociatedTypeWitness();
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      uint64_t v11 = swift_getAssociatedConformanceWitness();
      uint64_t AssociatedTypeWitness = v8;
      uint64_t v30 = (ValueMetadata *)v9;
      uint64_t v31 = AssociatedConformanceWitness;
      uint64_t v32 = v11;
      type metadata accessor for FileItemVersion();
      uint64_t v12 = sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v14 = &v4[*(int *)(TupleTypeMetadata3 + 48)];

      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v12 - 8) + 8))(v14, v12);
      (*(void (**)(unsigned char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t sub_24D6ECF04(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_24D6EC278(v4);
  if (v7
    && (*(void *)&long long v27 = v7,
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197F30),
        sub_24D501328(),
        (swift_dynamicCast() & 1) != 0))
  {
    uint64_t v8 = *(void **)&v26[0];
    id v9 = objc_msgSend(*(id *)&v26[0], sel_userInfo);
    uint64_t v10 = MEMORY[0x263F8D310];
    uint64_t v11 = sub_24DCC9578();

    uint64_t v12 = sub_24DCC97E8();
    uint64_t v14 = v13;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
    uint64_t v15 = sub_24DCC9868();
    uint64_t v28 = v10;
    *(void *)&long long v27 = v15;
    *((void *)&v27 + 1) = v16;
    sub_24D3F7E7C(&v27, v26);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v25 = v11;
    sub_24D706588(v26, v12, v14, isUniquelyReferenced_nonNull_native);
    uint64_t v18 = v25;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26B197EF0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_24DCCECE0;
    *(void *)(inited + 32) = sub_24DCC97E8();
    *(void *)(inited + 40) = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v1, a1);
    uint64_t v21 = sub_24DCC9868();
    *(void *)(inited + 72) = MEMORY[0x263F8D310];
    *(void *)(inited + 48) = v21;
    *(void *)(inited + 56) = v22;
    return sub_24D428D08(inited);
  }
  return v18;
}

uint64_t sub_24D6ED158()
{
  unint64_t v0 = sub_24DCCAEA8();
  swift_bridgeObjectRelease();
  if (v0 >= 0x1A) {
    return 26;
  }
  else {
    return v0;
  }
}

unint64_t sub_24D6ED1B0(char a1)
{
  unint64_t result = 0x46746F4E6D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6C6F436D657469;
      break;
    case 2:
      unint64_t result = 0x6F42746F6E6E6163;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x436E6F6973726576;
      break;
    case 6:
      unint64_t result = 0xD000000000000016;
      break;
    case 7:
    case 12:
    case 25:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6D73694D6D657469;
      break;
    case 9:
      unint64_t result = 0xD000000000000020;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0xD000000000000012;
      break;
    case 13:
      unint64_t result = 0x657079546D657469;
      break;
    case 14:
      unint64_t result = 0xD000000000000020;
      break;
    case 15:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000018;
      break;
    case 17:
      unint64_t result = 0x614364616F6C7075;
      break;
    case 18:
      unint64_t result = 0xD000000000000011;
      break;
    case 19:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 20:
      unint64_t result = 0x756B6F6F4C78616DLL;
      break;
    case 21:
      unint64_t result = 0xD000000000000018;
      break;
    case 22:
      unint64_t result = 0xD00000000000002CLL;
      break;
    case 23:
      unint64_t result = 0x54746F4E6D657469;
      break;
    case 24:
      unint64_t result = 0xD000000000000012;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D6ED4FC()
{
  return sub_24D6EC718();
}

uint64_t sub_24D6ED510(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270EF2670](a1, WitnessTable);
}

uint64_t sub_24D6ED564(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270EF2668](a1, WitnessTable);
}

uint64_t sub_24D6ED5B8()
{
  swift_getWitnessTable();

  return sub_24DCCAE98();
}

uint64_t sub_24D6ED62C(uint64_t a1, uint64_t a2)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v5 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAE8](a1, a2, WitnessTable, v5);
}

uint64_t sub_24D6ED698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF8](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24D6ED708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v7 = MEMORY[0x263F8D320];

  return MEMORY[0x270F9DAF0](a1, a2, a3, WitnessTable, v7);
}

uint64_t sub_24D6ED778@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D6ED158();
  *a1 = result;
  return result;
}

unint64_t sub_24D6ED7B0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_24D6ED1B0(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_24D6ED7E0()
{
  return sub_24D6ED4F8(*v0);
}

uint64_t sub_24D6ED7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned char *a4@<X8>)
{
  uint64_t result = sub_24D6ED1AC(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  *a4 = result;
  return result;
}

uint64_t sub_24D6ED81C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D718A40();
  *a1 = result;
  return result;
}

uint64_t sub_24D6ED848(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6ED89C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6ED8F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v51 = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v46 = (char *)&v42 - v10;
  uint64_t v45 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v43 = (char *)&v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v42 = (char *)&v42 - v13;
  uint64_t v49 = v6;
  uint64_t v50 = v5;
  uint64_t v14 = swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v42 - v18;
  uint64_t v20 = *(void *)(v14 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v17);
  uint64_t v44 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v42 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v19, v3 + *(int *)(a1 + 36), v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v19, 1, v14) == 1)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v19, v15);
LABEL_5:
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v32 = swift_getAssociatedConformanceWitness();
    uint64_t v52 = v14;
    uint64_t v53 = AssociatedTypeWitness;
    uint64_t v54 = AssociatedConformanceWitness;
    uint64_t v55 = v32;
    uint64_t v33 = type metadata accessor for FileItemVersion();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v51, 1, 1, v33);
  }
  uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v25(v24, v19, v14);
  uint64_t v26 = v3 + *(int *)(a1 + 40);
  long long v27 = v46;
  uint64_t v28 = v47;
  uint64_t v29 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v26, v48);
  uint64_t v30 = v45;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v27, 1, AssociatedTypeWitness) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v14);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v27, v29);
    goto LABEL_5;
  }
  uint64_t v35 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
  uint64_t v36 = v42;
  v35(v42, v27, AssociatedTypeWitness);
  v25(v44, v24, v14);
  uint64_t v37 = (uint64_t)v43;
  v35(v43, v36, AssociatedTypeWitness);
  uint64_t v40 = swift_getAssociatedConformanceWitness();
  uint64_t v41 = swift_getAssociatedConformanceWitness();
  uint64_t v38 = v51;
  sub_24DB33528((uint64_t)v44, 0, v37, 0, 0, 0, v14, AssociatedTypeWitness, v51);
  uint64_t v52 = v14;
  uint64_t v53 = AssociatedTypeWitness;
  uint64_t v54 = v40;
  uint64_t v55 = v41;
  uint64_t v39 = type metadata accessor for FileItemVersion();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
}

uint64_t sub_24D6EDE60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v31 = a1;
  uint64_t v30 = AssociatedTypeWitness;
  (*(void (**)(uint64_t, uint64_t))(v9 + 16))(a5, a1);
  found = (int *)type metadata accessor for FileTreeError.ItemNotFoundStruct();
  uint64_t v11 = a5 + found[9];
  swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_24DCCA3F8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v27 = v11;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v11, a2, v12);
  uint64_t v29 = a5;
  uint64_t v14 = a5 + found[10];
  swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_24DCCA3F8();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v26 = v14;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, a3, v15);
  uint64_t v17 = a4;
  if (a4)
  {
    swift_getErrorValue();
    uint64_t v18 = sub_24D735884(v35, v36);
    if (v34)
    {

      uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v16 + 8);
      v20(a3, v15);
      uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
      v21(a2, v12);
      uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
      v22(v31, v30);
      v22(v29, v30);
      v21(v27, v12);
      return ((uint64_t (*)(uint64_t, uint64_t))v20)(v26, v15);
    }
    unint64_t v24 = v19;
    uint64_t v28 = v18;

    uint64_t v17 = v28;
  }
  else
  {
    unint64_t v24 = 0xF000000000000000;
  }
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a3, v15);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(a2, v12);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v31, v30);
  uint64_t v25 = (void *)(v29 + found[11]);
  *uint64_t v25 = v17;
  v25[1] = v24;
  return result;
}

uint64_t sub_24D6EE1A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x56746E65746E6F63 && a2 == 0xEE006E6F69737265 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x800000024DD04CF0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024DD04D10)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_24D6EE370(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x56746E65746E6F63;
      break;
    case 2:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D6EE418(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v12 = a2;
  type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v4 = sub_24DCCAD58();
  uint64_t v13 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  char v6 = (char *)v11 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  LOBYTE(v16) = 0;
  swift_getAssociatedTypeWitness();
  v11[1] = v3;
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = v14;
  uint64_t v8 = v4;
  sub_24DCCACF8();
  if (v7) {
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v6, v4);
  }
  uint64_t v10 = v13;
  LOBYTE(v16) = 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCAC58();
  LOBYTE(v16) = 2;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCAC58();
  long long v16 = *(_OWORD *)(v15 + *(int *)(v12 + 44));
  char v17 = 3;
  sub_24D4ED7E4();
  sub_24DCCAC58();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v8);
}

uint64_t sub_24D6EE754@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v31 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v34 = sub_24DCCA3F8();
  uint64_t v36 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  uint64_t v32 = (char *)&v29 - v7;
  uint64_t v41 = swift_getAssociatedTypeWitness();
  uint64_t v38 = sub_24DCCA3F8();
  uint64_t v35 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v37 = (char *)&v29 - v8;
  uint64_t v42 = swift_getAssociatedTypeWitness();
  uint64_t v39 = *(void *)(v42 - 8);
  MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)&v29 - v9;
  type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v45 = sub_24DCCAC08();
  uint64_t v40 = *(void *)(v45 - 8);
  MEMORY[0x270FA5388](v45);
  uint64_t v11 = (char *)&v29 - v10;
  uint64_t v43 = a2;
  uint64_t v44 = a3;
  uint64_t found = type metadata accessor for FileTreeError.ItemNotFoundStruct();
  uint64_t v13 = *(void *)(found - 8);
  MEMORY[0x270FA5388](found);
  uint64_t v15 = (char *)&v29 - v14;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v47 = v11;
  uint64_t v16 = (uint64_t)v48;
  sub_24DCCB0B8();
  if (v16) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v30 = v13;
  uint64_t v17 = found;
  uint64_t v48 = a1;
  LOBYTE(v49) = 0;
  uint64_t v18 = v42;
  swift_getAssociatedConformanceWitness();
  sub_24DCCAB98();
  unint64_t v19 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
  uint64_t v29 = v15;
  v19(v15, v46, v18);
  LOBYTE(v49) = 1;
  swift_getAssociatedConformanceWitness();
  uint64_t v20 = v37;
  sub_24DCCAB08();
  uint64_t v21 = v17;
  uint64_t v22 = *(int *)(v17 + 36);
  uint64_t v23 = v29;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(&v29[v22], v20, v38);
  LOBYTE(v49) = 2;
  swift_getAssociatedConformanceWitness();
  unint64_t v24 = v32;
  sub_24DCCAB08();
  (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v23[*(int *)(v21 + 40)], v24, v34);
  char v50 = 3;
  sub_24D4EDA58();
  uint64_t v25 = v45;
  sub_24DCCAB08();
  (*(void (**)(char *, uint64_t))(v40 + 8))(v47, v25);
  uint64_t v26 = v29;
  *(_OWORD *)&v29[*(int *)(v21 + 44)] = v49;
  uint64_t v27 = v30;
  (*(void (**)(uint64_t, char *, uint64_t))(v30 + 16))(v31, v26, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v26, v21);
}

BOOL sub_24D6EEE7C(char *a1, char *a2)
{
  return sub_24D3F0D84(*a1, *a2);
}

uint64_t sub_24D6EEE90()
{
  return sub_24D586754();
}

uint64_t sub_24D6EEEB0()
{
  return sub_24D58672C();
}

uint64_t sub_24D6EEEBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D6F30AC(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_24D58672C);
}

unint64_t sub_24D6EEED4()
{
  return sub_24D6EE370(*v0);
}

uint64_t sub_24D6EEEE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6EE1A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D6EEF10@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D718B68();
  *a1 = result;
  return result;
}

uint64_t sub_24D6EEF3C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6EEF90(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6EEFE4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6EE754(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_24D6EF004(void *a1, uint64_t a2)
{
  return sub_24D6EE418(a1, a2);
}

uint64_t sub_24D6EF01C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v24 = a1;
  v11(a6, a1, AssociatedTypeWitness);
  uint64_t v12 = (int *)type metadata accessor for FileTreeError.ItemCollisionStruct();
  uint64_t v13 = (void *)(a6 + v12[9]);
  void *v13 = a2;
  v13[1] = a3;
  uint64_t v26 = a6;
  uint64_t v14 = a6 + v12[10];
  v11(v14, a4, AssociatedTypeWitness);
  if (a5)
  {
    swift_getErrorValue();
    uint64_t v15 = sub_24D735884(v29, v30);
    if (v23)
    {

      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
      v17(a4, AssociatedTypeWitness);
      v17(v24, AssociatedTypeWitness);
      v17(v26, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      return ((uint64_t (*)(uint64_t, uint64_t))v17)(v14, AssociatedTypeWitness);
    }
    unint64_t v19 = v15;
    unint64_t v20 = v16;
  }
  else
  {
    unint64_t v19 = 0;
    unint64_t v20 = 0xF000000000000000;
  }
  uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v10 + 8);
  v21(a4, AssociatedTypeWitness);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t))v21)(v24, AssociatedTypeWitness);
  uint64_t v22 = (void *)(v26 + v12[11]);
  void *v22 = v19;
  v22[1] = v20;
  return result;
}

uint64_t sub_24D6EF238(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449746E65726170 && a2 == 0xE800000000000000 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024DD04D10)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_24D6EF3E8(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656D616E656C6966;
      break;
    case 2:
      unint64_t result = 0x4449746E65726170;
      break;
    case 3:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D6EF47C(void *a1, uint64_t a2)
{
  uint64_t v15 = a2;
  type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_24DCCAD58();
  uint64_t v16 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v15 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = v3;
  uint64_t v7 = v17;
  sub_24DCCB0D8();
  LOBYTE(v19) = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = v18;
  sub_24DCCACF8();
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v5, v6);
  }
  uint64_t v11 = v15;
  uint64_t v10 = v16;
  uint64_t v12 = (uint64_t *)(v7 + *(int *)(v15 + 36));
  uint64_t v14 = *v12;
  uint64_t v13 = v12[1];
  *(void *)&long long v19 = v14;
  *((void *)&v19 + 1) = v13;
  char v20 = 1;
  sub_24D4ED694();
  sub_24DCCACF8();
  LOBYTE(v19) = 2;
  sub_24DCCACF8();
  long long v19 = *(_OWORD *)(v7 + *(int *)(v11 + 44));
  char v20 = 3;
  sub_24D4ED7E4();
  sub_24DCCAC58();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v6);
}

uint64_t sub_24D6EF728@<X0>(void *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v33 = AssociatedTypeWitness;
  uint64_t v34 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v30 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v35 = (char *)&v27 - v9;
  type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v36 = sub_24DCCAC08();
  uint64_t v31 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v32 = a2;
  uint64_t v12 = (int *)type metadata accessor for FileTreeError.ItemCollisionStruct();
  uint64_t v28 = *((void *)v12 - 1);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v27 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v37 = v11;
  uint64_t v15 = (uint64_t)v38;
  sub_24DCCB0B8();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v14;
  uint64_t v38 = a1;
  LOBYTE(v39) = 0;
  uint64_t v18 = v33;
  uint64_t v17 = v34;
  swift_getAssociatedConformanceWitness();
  sub_24DCCAB98();
  long long v19 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v19(v16, v35, v18);
  char v40 = 1;
  sub_24D4ED88C();
  sub_24DCCAB98();
  uint64_t v32 = v19;
  uint64_t v20 = *((void *)&v39 + 1);
  uint64_t v21 = v12[9];
  uint64_t v35 = v16;
  uint64_t v22 = &v16[v21];
  *(void *)uint64_t v22 = v39;
  *((void *)v22 + 1) = v20;
  LOBYTE(v39) = 2;
  uint64_t v23 = v30;
  sub_24DCCAB98();
  v32(&v35[v12[10]], v23, v18);
  char v40 = 3;
  sub_24D4EDA58();
  sub_24DCCAB08();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v37, v36);
  uint64_t v24 = v35;
  *(_OWORD *)&v35[v12[11]] = v39;
  uint64_t v25 = v28;
  (*(void (**)(uint64_t, char *, int *))(v28 + 16))(v29, v24, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
  return (*(uint64_t (**)(char *, int *))(v25 + 8))(v24, v12);
}

uint64_t sub_24D6EFC70(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656D616E656C6966 && a2 == 0xE800000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x776F6C6562 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D6EFD5C(char a1)
{
  if (a1) {
    return 0x776F6C6562;
  }
  else {
    return 0x656D616E656C6966;
  }
}

uint64_t sub_24D6EFD90(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  v13[0] = *(void *)(a2 + 24);
  v13[1] = v4;
  type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_24DCCAD58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v9 = (uint64_t *)v13[2];
  sub_24DCCB0D8();
  uint64_t v10 = v9[1];
  uint64_t v14 = *v9;
  uint64_t v15 = v10;
  char v16 = 0;
  sub_24D4ED694();
  uint64_t v11 = v13[3];
  sub_24DCCACF8();
  if (!v11)
  {
    LOBYTE(v14) = 1;
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_24DCCACF8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_24D6EFF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  uint64_t v5 = (char *)a4 + *(int *)(type metadata accessor for FileTreeError.CannotBounceStruct() + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v7(v5, a3, AssociatedTypeWitness);
}

uint64_t sub_24D6F004C@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v23 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v25 = (char *)&v20 - v5;
  type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_24DCCAC08();
  uint64_t v26 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v7 = (char *)&v20 - v6;
  uint64_t v28 = a2;
  uint64_t v8 = type metadata accessor for FileTreeError.CannotBounceStruct();
  uint64_t v22 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v20 - v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v29 = v7;
  uint64_t v11 = (uint64_t)v31;
  sub_24DCCB0B8();
  if (v11) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v31 = a1;
  uint64_t v21 = v8;
  uint64_t v12 = v26;
  uint64_t v13 = AssociatedTypeWitness;
  char v34 = 0;
  sub_24D4ED88C();
  sub_24DCCAB98();
  uint64_t v14 = v33;
  uint64_t v15 = v10;
  *(void *)uint64_t v10 = v32;
  *((void *)v10 + 1) = v14;
  LOBYTE(v32) = 1;
  swift_getAssociatedConformanceWitness();
  char v16 = v25;
  sub_24DCCAB98();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v29, v30);
  uint64_t v17 = v21;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v15[*(int *)(v21 + 36)], v16, v13);
  uint64_t v18 = v22;
  (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))(v24, v15, v17);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v15, v17);
}

uint64_t sub_24D6F0420(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024DD04D30 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x800000024DD04D50 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000024DD04D70 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000024DD04D90)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_24D6F0608(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D6F06B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D6F30AC(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_24D719BA0);
}

unint64_t sub_24D6F06CC()
{
  return sub_24D6EF3E8(*v0);
}

uint64_t sub_24D6F06D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6EF238(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D6F0708(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F075C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F07B0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6EF728(a1, *(void (**)(char *, char *, uint64_t))(a2 + 16), a3);
}

uint64_t sub_24D6F07D0(void *a1, uint64_t a2)
{
  return sub_24D6EF47C(a1, a2);
}

BOOL sub_24D6F07E8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24D4357B4(*a1, *a2);
}

uint64_t sub_24D6F07FC()
{
  return sub_24D4358D4();
}

uint64_t sub_24D6F0820()
{
  return sub_24D4357C4();
}

uint64_t sub_24D6F0830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D6F50FC(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_24D4357C4);
}

uint64_t sub_24D6F0848()
{
  return sub_24D6EFD5C(*v0);
}

uint64_t sub_24D6F0858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6EFC70(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D6F0888@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D42CEDC();
  *a1 = result;
  return result;
}

uint64_t sub_24D6F08B4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F0908(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F095C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F004C(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_24D6F097C(void *a1, uint64_t a2)
{
  return sub_24D6EFD90(a1, a2);
}

uint64_t sub_24D6F0994()
{
  return 0;
}

uint64_t sub_24D6F09A0@<X0>(uint64_t a1@<X2>, unsigned char *a2@<X8>)
{
  return sub_24D6F57FC(a1, (uint64_t (*)(void, void))sub_24D42D714, a2);
}

uint64_t sub_24D6F09B8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F0A0C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F0A60(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct.CodingKeys);
}

unint64_t sub_24D6F0AA8()
{
  return sub_24D6F0608(*v0);
}

uint64_t sub_24D6F0AB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6F0420(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D6F0AE4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F0B38(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F0B8C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F1AF4(a1, *(void *)(a2 + 16), *(void (**)(char *, char *, uint64_t))(a2 + 24), (void (*)(uint64_t, uint64_t, void))type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys, (uint64_t (*)(void, uint64_t, void))type metadata accessor for FileTreeError.ContentUnavailableStruct, a3);
}

uint64_t sub_24D6F0BE8(void *a1, uint64_t a2)
{
  return sub_24D6F178C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys);
}

uint64_t sub_24D6F0C28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a3, a1, AssociatedTypeWitness);
  if (a2)
  {
    swift_getErrorValue();
    uint64_t v9 = sub_24D735884(v16, v17);
    if (v3)
    {

      uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
      v11(a1, AssociatedTypeWitness);
      return ((uint64_t (*)(uint64_t, uint64_t))v11)(a3, AssociatedTypeWitness);
    }
    uint64_t v13 = v9;
    unint64_t v14 = v10;
  }
  else
  {
    uint64_t v13 = 0;
    unint64_t v14 = 0xF000000000000000;
  }
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct();
  uint64_t v15 = (void *)(a3 + *(int *)(result + 36));
  *uint64_t v15 = v13;
  v15[1] = v14;
  return result;
}

uint64_t sub_24D6F0DAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000024DD04D10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D6F0E94(char a1)
{
  if (a1) {
    return 0xD000000000000014;
  }
  else {
    return 0x44496D657469;
  }
}

uint64_t sub_24D6F0ECC(void *a1, uint64_t a2)
{
  v11[0] = a2;
  type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_24DCCAD58();
  uint64_t v12 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v11 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v6 = v3;
  uint64_t v7 = v11[1];
  sub_24DCCB0D8();
  LOBYTE(v14) = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v8 = v13;
  sub_24DCCACF8();
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v5, v6);
  }
  uint64_t v10 = v12;
  long long v14 = *(_OWORD *)(v7 + *(int *)(v11[0] + 36));
  char v15 = 1;
  sub_24D4ED7E4();
  sub_24DCCAC58();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v6);
}

uint64_t sub_24D6F10FC@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v24 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v25 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v27 = (char *)&v23 - v5;
  type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v6 = sub_24DCCAC08();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v29 = v6;
  uint64_t v30 = v7;
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v23 - v8;
  uint64_t v26 = a2;
  uint64_t v10 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct();
  uint64_t v23 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v12 = (char *)&v23 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v28 = v9;
  uint64_t v13 = v32;
  sub_24DCCB0B8();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v32 = v12;
  uint64_t v14 = v25;
  LOBYTE(v33) = 0;
  uint64_t v15 = AssociatedTypeWitness;
  swift_getAssociatedConformanceWitness();
  uint64_t v17 = v27;
  uint64_t v16 = v28;
  uint64_t v18 = v29;
  sub_24DCCAB98();
  long long v19 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  uint64_t v20 = v32;
  v19(v32, v17, v15);
  char v34 = 1;
  sub_24D4EDA58();
  sub_24DCCAB08();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v16, v18);
  *(_OWORD *)&v20[*(int *)(v10 + 36)] = v33;
  uint64_t v21 = v23;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 16))(v24, v20, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v20, v10);
}

uint64_t sub_24D6F14E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x44496D657469 && a2 == 0xE600000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024DD04DB0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000024DD04DD0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000024DD04DF0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x800000024DD04E10)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_24D6F16D4(char a1)
{
  unint64_t result = 0x44496D657469;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000016;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24D6F178C(void *a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t v12 = *(void *)(a2 + 16);
  v11[0] = a2;
  a3(255, v12, v4);
  swift_getWitnessTable();
  uint64_t v5 = sub_24DCCAD58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v11 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  char v19 = 0;
  swift_getAssociatedTypeWitness();
  v11[1] = v4;
  swift_getAssociatedConformanceWitness();
  uint64_t v9 = v13;
  uint64_t v14 = v8;
  sub_24DCCACF8();
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v14, v5);
  }
  uint64_t v13 = v6;
  char v18 = 1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCACF8();
  char v17 = 2;
  sub_24DCCACF8();
  char v16 = 3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCACF8();
  char v15 = 4;
  sub_24DCCACF8();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v14, v5);
}

uint64_t sub_24D6F1AF4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, char *, uint64_t)@<X2>, void (*a4)(uint64_t, uint64_t, void)@<X3>, uint64_t (*a5)(void, uint64_t, void)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v46 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v50 = AssociatedTypeWitness;
  uint64_t v51 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v47 = (char *)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v48 = (char *)&v44 - v14;
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v52 = v15;
  uint64_t v53 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  long long v49 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v55 = (char *)&v44 - v19;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(v60 - 8);
  MEMORY[0x270FA5388](v60);
  uint64_t v56 = (char *)&v44 - v20;
  a4(255, a2, a3);
  swift_getWitnessTable();
  uint64_t v62 = sub_24DCCAC08();
  uint64_t v59 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v22 = (char *)&v44 - v21;
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v23 = a5(0, a2, a3);
  uint64_t v45 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v44 - v24;
  uint64_t v26 = v64;
  __swift_project_boxed_opaque_existential_1(v64, v64[3]);
  uint64_t v61 = v22;
  uint64_t v27 = v63;
  sub_24DCCB0B8();
  if (v27) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  }
  uint64_t v28 = v55;
  char v69 = 0;
  uint64_t v29 = v60;
  swift_getAssociatedConformanceWitness();
  uint64_t v30 = v56;
  sub_24DCCAB98();
  uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  uint64_t v63 = v25;
  v31(v25, v30, v29);
  char v68 = 1;
  uint64_t v32 = v52;
  swift_getAssociatedConformanceWitness();
  sub_24DCCAB98();
  uint64_t v56 = (char *)v23;
  long long v33 = v28;
  char v34 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
  v34(&v63[*(int *)(v23 + 36)], v33, v32);
  char v67 = 2;
  uint64_t v35 = v49;
  uint64_t v55 = 0;
  sub_24DCCAB98();
  v34(&v63[*((int *)v56 + 10)], v35, v32);
  char v66 = 3;
  uint64_t v36 = v50;
  swift_getAssociatedConformanceWitness();
  uint64_t v37 = v48;
  sub_24DCCAB98();
  uint64_t v38 = v56;
  long long v39 = &v63[*((int *)v56 + 11)];
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v51 + 32);
  v58(v39, v37, v36);
  char v65 = 4;
  char v40 = v47;
  sub_24DCCAB98();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v61, v62);
  uint64_t v41 = v63;
  v58(&v63[*((int *)v38 + 12)], v40, v36);
  uint64_t v42 = v45;
  (*(void (**)(uint64_t, char *, char *))(v45 + 16))(v46, v41, v38);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v64);
  return (*(uint64_t (**)(char *, char *))(v42 + 8))(v41, v38);
}

uint64_t sub_24D6F22F8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6465746365707865 && a2 == 0xEE0044496D657449;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465766965636572 && a2 == 0xEE0044496D657449)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D6F242C(char a1)
{
  if (a1) {
    return 0x6465766965636572;
  }
  else {
    return 0x6465746365707865;
  }
}

uint64_t sub_24D6F2468(void *a1, uint64_t a2)
{
  uint64_t v9 = a2;
  type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_24DCCAD58();
  uint64_t v10 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  char v13 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = v11;
  sub_24DCCAC58();
  if (v6) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v3);
  }
  uint64_t v8 = v10;
  char v12 = 1;
  sub_24DCCACF8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v3);
}

uint64_t sub_24D6F268C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_24DCCA3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a3, a1, v7);
  uint64_t v8 = a3 + *(int *)(type metadata accessor for FileTreeError.ItemMismatchStruct() + 36);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v9(v8, a2, AssociatedTypeWitness);
}

uint64_t sub_24D6F2780@<X0>(void *a1@<X0>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v29 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v28 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v30 = (char *)&v26 - v6;
  uint64_t v35 = v7;
  uint64_t v8 = sub_24DCCA3F8();
  uint64_t v31 = *(void *)(v8 - 8);
  uint64_t v32 = v8;
  MEMORY[0x270FA5388](v8);
  char v34 = (char *)&v26 - v9;
  type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v38 = sub_24DCCAC08();
  uint64_t v36 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  uint64_t v11 = (char *)&v26 - v10;
  long long v33 = a2;
  uint64_t v12 = type metadata accessor for FileTreeError.ItemMismatchStruct();
  uint64_t v27 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)&v26 - v13;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v37 = v11;
  uint64_t v15 = (uint64_t)v39;
  sub_24DCCB0B8();
  if (v15) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v16 = v14;
  long long v39 = a1;
  uint64_t v18 = v31;
  uint64_t v17 = v32;
  char v41 = 0;
  uint64_t v19 = v35;
  swift_getAssociatedConformanceWitness();
  uint64_t v20 = v34;
  sub_24DCCAB08();
  uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v18 + 32);
  long long v33 = v16;
  v21(v16, v20, v17);
  char v40 = 1;
  uint64_t v22 = v30;
  sub_24DCCAB98();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  uint64_t v23 = v33;
  (*(void (**)(char *, char *, uint64_t))(v28 + 32))(&v33[*(int *)(v12 + 36)], v22, v19);
  uint64_t v24 = v27;
  (*(void (**)(uint64_t, char *, uint64_t))(v27 + 16))(v29, v23, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v39);
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v23, v12);
}

uint64_t sub_24D6F2BFC(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x726573557962 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24D6F2C7C(void *a1)
{
  type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys();
  swift_getWitnessTable();
  uint64_t v2 = sub_24DCCAD58();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  sub_24DCCAC48();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24D6F2DDC(void *a1)
{
  type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_24DCCAC08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = (uint64_t)__swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0B8();
  if (!v1)
  {
    uint64_t v7 = sub_24DCCAAD8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_24D6F2F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_24D6F50FC(a1, a2, a3, (void (*)(unsigned char *, void, void, void))sub_24D719B90);
}

uint64_t sub_24D6F2F8C()
{
  return sub_24D6F0E94(*v0);
}

uint64_t sub_24D6F2F9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6F0DAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D6F2FCC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F3020(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3074@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F10FC(a1, *(void *)(a2 + 24), a3);
}

uint64_t sub_24D6F3094(void *a1, uint64_t a2)
{
  return sub_24D6F0ECC(a1, a2);
}

uint64_t sub_24D6F30AC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void))
{
  sub_24DCCAFF8();
  a4(v8, *v4, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_24DCCB048();
}

unint64_t sub_24D6F3104()
{
  return sub_24D6F16D4(*v0);
}

uint64_t sub_24D6F3110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6F14E0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D6F3140@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D718B70();
  *a1 = result;
  return result;
}

uint64_t sub_24D6F316C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F31C0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3214@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F1AF4(a1, *(void *)(a2 + 16), *(void (**)(char *, char *, uint64_t))(a2 + 24), (void (*)(uint64_t, uint64_t, void))type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys, (uint64_t (*)(void, uint64_t, void))type metadata accessor for FileTreeError.VersionConflictStruct, a3);
}

uint64_t sub_24D6F3270(void *a1, uint64_t a2)
{
  return sub_24D6F178C(a1, a2, (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys);
}

uint64_t sub_24D6F32B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F3304(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3358(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.CapturedContentMissingStruct.CodingKeys);
}

uint64_t sub_24D6F33A0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F33F4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3448(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemNotEvictableStruct.CodingKeys);
}

uint64_t sub_24D6F3490(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F34E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3538(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemIsFlockedStruct.CodingKeys);
}

uint64_t sub_24D6F3580(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F35D4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3628(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct.CodingKeys);
}

uint64_t sub_24D6F3670()
{
  return sub_24D6F242C(*v0);
}

uint64_t sub_24D6F3680@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6F22F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D6F36B0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F3704(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3758@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F2780(a1, *(char **)(a2 + 24), a3);
}

uint64_t sub_24D6F3778(void *a1, uint64_t a2)
{
  return sub_24D6F2468(a1, a2);
}

uint64_t sub_24D6F3790(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F37E4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3838(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.DirectoryChangedStruct.CodingKeys);
}

uint64_t sub_24D6F3880()
{
  return 0x726573557962;
}

uint64_t sub_24D6F3894@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6F2BFC(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24D6F38C8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F391C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F3970@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_24D6F2DDC(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_24D6F39A4(void *a1)
{
  return sub_24D6F2C7C(a1);
}

void *sub_24D6F39C4(void *a1)
{
  if (!a1) {
    return 0;
  }
  swift_getErrorValue();
  uint64_t v3 = v6;
  uint64_t v4 = sub_24D735884(v7, v8);
  if (!v1) {
    uint64_t v3 = v4;
  }

  return v3;
}

uint64_t sub_24D6F3A54(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000014 && a2 == 0x800000024DD04D10)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_24D6F3ADC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v11 = a3;
  type metadata accessor for FileTreeError.UploadCancelled.CodingKeys();
  swift_getWitnessTable();
  uint64_t v5 = sub_24DCCAD58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  uint64_t v12 = a2;
  uint64_t v13 = v11;
  sub_24D4ED7E4();
  sub_24DCCAC58();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

void *sub_24D6F3C5C(void *a1)
{
  type metadata accessor for FileTreeError.UploadCancelled.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_24DCCAC08();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v9 - v5;
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0B8();
  if (!v1)
  {
    sub_24D4EDA58();
    sub_24DCCAB08();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = v9;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v7;
}

uint64_t sub_24D6F3E14(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000016 && a2 == 0x800000024DD04DB0 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x800000024DD04E30)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_24D6F3F00()
{
  return 0xD000000000000016;
}

uint64_t sub_24D6F3F34(void *a1, uint64_t a2)
{
  uint64_t v9 = a2;
  type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v3 = sub_24DCCAD58();
  uint64_t v10 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  char v5 = (char *)&v9 - v4;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  char v13 = 0;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v6 = v11;
  sub_24DCCACF8();
  if (v6) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v5, v3);
  }
  uint64_t v8 = v10;
  char v12 = 1;
  sub_24DCCACF8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v5, v3);
}

uint64_t sub_24D6F4158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t, uint64_t))v9)((void *)(AssociatedTypeWitness - 8), a3, a1, AssociatedTypeWitness);
  uint64_t v7 = a3 + *(int *)(type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct() + 36);

  return v9(v7, a2, AssociatedTypeWitness);
}

uint64_t sub_24D6F4238@<X0>(void *a1@<X0>, void (*a2)(char *, char *, uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v22 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v24 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v23 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v25 = (char *)&v20 - v7;
  type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys();
  swift_getWitnessTable();
  uint64_t v30 = sub_24DCCAC08();
  uint64_t v27 = *(void *)(v30 - 8);
  MEMORY[0x270FA5388](v30);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v26 = a2;
  uint64_t v10 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct();
  uint64_t v21 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  char v12 = (char *)&v20 - v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v29 = v9;
  char v13 = v31;
  sub_24DCCB0B8();
  if (v13) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v31 = v12;
  uint64_t v14 = v23;
  uint64_t v15 = v24;
  char v33 = 0;
  swift_getAssociatedConformanceWitness();
  uint64_t v16 = v25;
  sub_24DCCAB98();
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
  v26(v31, v16, AssociatedTypeWitness);
  char v32 = 1;
  sub_24DCCAB98();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v30);
  uint64_t v17 = v31;
  v26(&v31[*(int *)(v10 + 36)], v14, AssociatedTypeWitness);
  uint64_t v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v22, v17, v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v17, v10);
}

uint64_t sub_24D6F4658(uint64_t a1)
{
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

uint64_t sub_24D6F4680(uint64_t a1, uint64_t a2)
{
  if (a1 == 0x44496D657469 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    char v4 = 0;
  }
  else
  {
    char v3 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    char v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24D6F4700(void *a1, uint64_t a2, void (*a3)(uint64_t, void, void))
{
  a3(255, *(void *)(a2 + 16), *(void *)(a2 + 24));
  swift_getWitnessTable();
  uint64_t v4 = sub_24DCCAD58();
  uint64_t v8 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_24DCCACF8();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v6, v4);
}

uint64_t sub_24D6F48B4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t (*a5)(void, uint64_t, uint64_t)@<X5>, uint64_t a6@<X8>)
{
  uint64_t v30 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v36 = (char *)&v26 - v11;
  a4(255, a2, a3);
  swift_getWitnessTable();
  uint64_t v35 = sub_24DCCAC08();
  uint64_t v31 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  char v13 = (char *)&v26 - v12;
  uint64_t v34 = a2;
  uint64_t v32 = a3;
  uint64_t v14 = a5(0, a2, a3);
  uint64_t v29 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - v15;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  uint64_t v17 = v38;
  sub_24DCCB0B8();
  if (v17)
  {
    uint64_t v25 = (uint64_t)a1;
  }
  else
  {
    uint64_t v27 = v16;
    uint64_t v28 = v14;
    uint64_t v38 = a1;
    uint64_t v18 = v31;
    uint64_t v19 = v33;
    uint64_t v20 = AssociatedTypeWitness;
    swift_getAssociatedConformanceWitness();
    uint64_t v22 = v35;
    uint64_t v21 = v36;
    sub_24DCCAB98();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v13, v22);
    uint64_t v24 = v27;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v27, v21, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(v29 + 32))(v30, v24, v28);
    uint64_t v25 = (uint64_t)v38;
  }
  return __swift_destroy_boxed_opaque_existential_1(v25);
}

uint64_t sub_24D6F4BEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);

  return v5(a2, a1, AssociatedTypeWitness);
}

unint64_t sub_24D6F4C74()
{
  return 0xD000000000000014;
}

uint64_t sub_24D6F4C90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6F3A54(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24D6F4CC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F4D18(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

void *sub_24D6F4D6C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_24D6F3C5C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_24D6F4DA0(void *a1)
{
  return sub_24D6F3ADC(a1, *v1, v1[1]);
}

uint64_t sub_24D6F4DC4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F4E18(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F4E6C(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.UploadInterrupted.CodingKeys);
}

uint64_t sub_24D6F4EB4()
{
  return 0x44496D657469;
}

uint64_t sub_24D6F4EC8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F4F1C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F4F70@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F48B4(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FileTreeError.LookupNotPermittedStruct, a3);
}

uint64_t sub_24D6F4FCC(void *a1, uint64_t a2)
{
  return sub_24D6F4700(a1, a2, (void (*)(uint64_t, void, void))type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys);
}

uint64_t sub_24D6F500C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F5060(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F50B4(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemKindMismatchStruct.CodingKeys);
}

uint64_t sub_24D6F50FC(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, void, void, void))
{
  sub_24DCCAFF8();
  a4(v8, *v4, *(void *)(a2 + 16), *(void *)(a2 + 24));
  return sub_24DCCB048();
}

unint64_t sub_24D6F5154()
{
  return sub_24D6F3F00();
}

uint64_t sub_24D6F5164@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6F3E14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D6F5194(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F51E8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F523C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F4238(a1, *(void (**)(char *, char *, uint64_t))(a2 + 16), a3);
}

uint64_t sub_24D6F525C(void *a1, uint64_t a2)
{
  return sub_24D6F3F34(a1, a2);
}

uint64_t sub_24D6F5274(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F52C8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F531C(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.MaxLookupDepthStruct.CodingKeys);
}

uint64_t sub_24D6F5364@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_24D42D714();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24D6F5394(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F53E8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F543C(uint64_t a1)
{
  return sub_24D6F4658(a1);
}

uint64_t sub_24D6F545C(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.CompressedFileReadFailedStruct.CodingKeys);
}

uint64_t sub_24D6F54A4(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F54F8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F554C(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct.CodingKeys);
}

uint64_t sub_24D6F5594(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F55E8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F563C(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.ItemNotTracked.CodingKeys);
}

uint64_t sub_24D6F5684@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D6F4680(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24D6F56B8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F570C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F5760@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F48B4(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct, a3);
}

uint64_t sub_24D6F57BC(void *a1, uint64_t a2)
{
  return sub_24D6F4700(a1, a2, (void (*)(uint64_t, void, void))type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys);
}

uint64_t sub_24D6F57FC@<X0>(uint64_t a1@<X2>, uint64_t (*a2)(void, void)@<X4>, unsigned char *a3@<X8>)
{
  char v4 = a2(*(void *)(a1 + 16), *(void *)(a1 + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v4 & 1;
  return result;
}

uint64_t sub_24D6F5848(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D6F589C(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D6F58F0(void *a1, uint64_t a2)
{
  return sub_24D718B78(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), (void (*)(uint64_t))type metadata accessor for FileTreeError.NoContentToFetch.CodingKeys);
}

uint64_t sub_24D6F5938@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v260 = a4;
  uint64_t IsDetachedRootStruct = type metadata accessor for FileTreeError.ItemIsDetachedRootStruct();
  uint64_t v226 = sub_24DCCA3F8();
  uint64_t v223 = *(void *)(v226 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v226);
  uint64_t v225 = (char *)&v198 - v9;
  uint64_t v227 = IsDetachedRootStruct;
  uint64_t v222 = *(void *)(IsDetachedRootStruct - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v224 = (char *)&v198 - v10;
  uint64_t v11 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct();
  uint64_t v219 = sub_24DCCA3F8();
  uint64_t v217 = *(void *)(v219 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v219);
  uint64_t v218 = (char *)&v198 - v13;
  uint64_t v221 = v11;
  uint64_t v216 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v220 = (char *)&v198 - v14;
  uint64_t v15 = type metadata accessor for FileTreeError.LookupNotPermittedStruct();
  uint64_t v214 = sub_24DCCA3F8();
  uint64_t v211 = *(void *)(v214 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v214);
  uint64_t v213 = (char *)&v198 - v17;
  uint64_t v215 = v15;
  uint64_t v210 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v212 = (char *)&v198 - v18;
  uint64_t v19 = type metadata accessor for FileTreeError.ItemMismatchStruct();
  uint64_t v207 = sub_24DCCA3F8();
  uint64_t v205 = *(void *)(v207 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v207);
  uint64_t v206 = (char *)&v198 - v21;
  uint64_t v209 = v19;
  uint64_t v204 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v20);
  unint64_t v208 = (char *)&v198 - v22;
  uint64_t v23 = type metadata accessor for FileTreeError.VersionConflictStruct();
  uint64_t v229 = sub_24DCCA3F8();
  uint64_t v228 = *(void *)(v229 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v229);
  v234 = (char *)&v198 - v25;
  uint64_t v235 = v23;
  uint64_t v231 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v24);
  v230 = (char *)&v198 - v26;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v243 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness);
  v244 = (char *)&v198 - v27;
  uint64_t v267 = swift_getAssociatedTypeWitness();
  uint64_t v245 = *(void *)(v267 - 8);
  MEMORY[0x270FA5388](v267);
  v242 = (char *)&v198 - v28;
  uint64_t v29 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct();
  uint64_t v233 = sub_24DCCA3F8();
  uint64_t v232 = *(void *)(v233 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v233);
  v246 = (char *)&v198 - v31;
  uint64_t v247 = v29;
  uint64_t v238 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v30);
  v237 = (char *)&v198 - v32;
  uint64_t v33 = type metadata accessor for FileTreeError.ContentUnavailableStruct();
  uint64_t v240 = sub_24DCCA3F8();
  uint64_t v239 = *(void *)(v240 - 8);
  uint64_t v34 = MEMORY[0x270FA5388](v240);
  v250 = (char *)&v198 - v35;
  uint64_t v249 = v33;
  uint64_t v248 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v34);
  v241 = (char *)&v198 - v36;
  uint64_t v37 = type metadata accessor for FileTreeError.CannotBounceStruct();
  uint64_t v252 = sub_24DCCA3F8();
  uint64_t v251 = *(void *)(v252 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v252);
  v257 = (char *)&v198 - v39;
  uint64_t v258 = v37;
  uint64_t v254 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v38);
  v253 = (char *)&v198 - v40;
  uint64_t v41 = type metadata accessor for FileTreeError.ItemCollisionStruct();
  uint64_t v256 = sub_24DCCA3F8();
  uint64_t v255 = *(void *)(v256 - 8);
  uint64_t v42 = MEMORY[0x270FA5388](v256);
  v265 = (char *)&v198 - v43;
  v268 = (int *)v41;
  uint64_t v262 = *(void *)(v41 - 8);
  MEMORY[0x270FA5388](v42);
  v261 = (char *)&v198 - v44;
  uint64_t found = type metadata accessor for FileTreeError.ItemNotFoundStruct();
  uint64_t v264 = sub_24DCCA3F8();
  uint64_t v263 = *(void *)(v264 - 8);
  uint64_t v46 = MEMORY[0x270FA5388](v264);
  v273 = (char *)&v198 - v47;
  uint64_t v274 = found;
  uint64_t v272 = *(void *)(found - 8);
  MEMORY[0x270FA5388](v46);
  v270 = (char *)&v198 - v48;
  uint64_t v49 = type metadata accessor for FileTreeError.CodingKeys();
  uint64_t WitnessTable = (char *)swift_getWitnessTable();
  uint64_t v50 = sub_24DCCAC08();
  uint64_t v276 = *(void *)(v50 - 8);
  v277 = (char *)v50;
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = (char *)&v198 - v51;
  uint64_t v275 = a2;
  uint64_t v269 = a3;
  uint64_t v271 = type metadata accessor for FileTreeError();
  uint64_t v259 = *(void *)(v271 - 8);
  uint64_t v53 = MEMORY[0x270FA5388](v271);
  id v203 = (uint64_t *)((char *)&v198 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v202 = (char *)&v198 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  v236 = (char *)&v198 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v61 = (char *)&v198 - v60;
  uint64_t v62 = MEMORY[0x270FA5388](v59);
  uint64_t v64 = (char *)&v198 - v63;
  uint64_t v65 = MEMORY[0x270FA5388](v62);
  char v67 = (char *)&v198 - v66;
  MEMORY[0x270FA5388](v65);
  char v69 = (char *)&v198 - v68;
  uint64_t v70 = a1[3];
  v280 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v70);
  v278 = v52;
  uint64_t v71 = v279;
  sub_24DCCB0B8();
  if (!v71)
  {
    uint64_t v279 = (uint64_t)v67;
    uint64_t v200 = v64;
    uint64_t v199 = v61;
    uint64_t v201 = v69;
    LOBYTE(v282) = 13;
    uint64_t v72 = sub_24DCCAB58();
    uint64_t v74 = v73;
    uint64_t v198 = 0;
    uint64_t v282 = v275;
    swift_getMetatypeMetadata();
    uint64_t v75 = sub_24DCC9868();
    if (v72 == v75 && v74 == v76)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v77 = sub_24DCCAE28();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v77 & 1) == 0)
      {
        uint64_t v91 = sub_24DCCA7D8();
        swift_allocError();
        unint64_t v93 = v92;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26986B9D8);
        *unint64_t v93 = v271;
        __swift_instantiateConcreteTypeFromMangledName(qword_26986C838);
        uint64_t v94 = swift_allocObject();
        *(_OWORD *)(v94 + 16) = xmmword_24DCCECE0;
        id v95 = WitnessTable;
        *(void *)(v94 + 56) = v49;
        *(void *)(v94 + 64) = v95;
        *(unsigned char *)(v94 + 32) = 13;
        sub_24DCCA7B8();
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v91 - 8) + 104))(v93, *MEMORY[0x263F8DCB0], v91);
        swift_willThrow();
LABEL_3:
        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v280);
      }
    }
    LOBYTE(v282) = 0;
    uint64_t v78 = v274;
    swift_getWitnessTable();
    unint64_t v79 = v273;
    uint64_t v80 = (uint64_t)v277;
    uint64_t v81 = v278;
    uint64_t v82 = v198;
    sub_24DCCAB08();
    if (v82)
    {
      (*(void (**)(char *, uint64_t))(v276 + 8))(v81, v80);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v280);
    }
    uint64_t v84 = v272;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v272 + 48))(v79, 1, v78) != 1)
    {
      uint64_t v96 = v270;
      (*(void (**)(char *, char *, uint64_t))(v84 + 32))(v270, v79, v78);
      uint64_t v97 = swift_getAssociatedTypeWitness();
      uint64_t v98 = v267;
      uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
      unint64_t v100 = AssociatedTypeWitness;
      uint64_t v101 = swift_getAssociatedConformanceWitness();
      uint64_t v282 = v98;
      unint64_t v283 = v100;
      uint64_t v284 = AssociatedConformanceWitness;
      uint64_t v285 = v101;
      type metadata accessor for FileItemVersion();
      sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
      uint64_t v103 = v279 + *(int *)(TupleTypeMetadata3 + 48);
      (*(void (**)(void))(*(void *)(v97 - 8) + 16))();
      sub_24D6ED8F0(v78, v103);
      uint64_t v104 = (uint64_t *)&v96[*(int *)(v78 + 44)];
      unint64_t v105 = v104[1];
      if (v105 >> 60 == 15) {
        uint64_t v106 = 0;
      }
      else {
        uint64_t v106 = sub_24D73544C(*v104, v105);
      }
      uint64_t v107 = *(int *)(TupleTypeMetadata3 + 64);
      (*(void (**)(char *, uint64_t))(v272 + 8))(v270, v274);
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      uint64_t v108 = v279;
      *(void *)(v279 + v107) = v106;
      goto LABEL_20;
    }
    (*(void (**)(char *, uint64_t))(v263 + 8))(v79, v264);
    LOBYTE(v282) = 1;
    uint64_t v85 = v268;
    swift_getWitnessTable();
    uint64_t v86 = v265;
    sub_24DCCAB08();
    uint64_t v87 = v262;
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v262 + 48))(v86, 1, v85) != 1)
    {
      uint64_t v198 = 0;
      uint64_t v112 = (*(uint64_t (**)(char *, char *, int *))(v87 + 32))(v261, v86, v85);
      MEMORY[0x270FA5388](v112);
      qmemcpy(&v198 - 6, " filename below syncability original", 36);
      strcpy((char *)v197 + 2, "alError ");
      uint64_t v282 = swift_getAssociatedTypeWitness();
      unint64_t v283 = (unint64_t)&type metadata for Filename;
      uint64_t v284 = v282;
      uint64_t v285 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26986BB30);
      uint64_t v286 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
      uint64_t v114 = v200;
      uint64_t v115 = &v200[TupleTypeMetadata[12]];
      uint64_t v116 = &v200[TupleTypeMetadata[16]];
      uint64_t WitnessTable = &v200[TupleTypeMetadata[20]];
      uint64_t v117 = swift_getAssociatedTypeWitness();
      uint64_t v279 = *(void *)(v117 - 8);
      uint64_t v118 = *(void (**)(char *, char *, uint64_t))(v279 + 16);
      uint64_t v119 = v114;
      uint64_t v120 = v116;
      uint64_t v121 = v115;
      uint64_t v122 = v261;
      v118(v119, v261, v117);
      uint64_t v123 = &v122[v85[9]];
      uint64_t v124 = *((void *)v123 + 1);
      *(void *)uint64_t v121 = *(void *)v123;
      *((void *)v121 + 1) = v124;
      v118(v120, &v122[v85[10]], v117);
      uint64_t v125 = WitnessTable;
      *(_OWORD *)uint64_t WitnessTable = xmmword_24DCD7760;
      swift_bridgeObjectRetain();
      uint64_t v126 = (uint64_t *)&v122[v85[11]];
      unint64_t v127 = v126[1];
      if (v127 >> 60 == 15)
      {
        uint64_t v128 = 0;
        uint64_t v129 = v198;
      }
      else
      {
        uint64_t v129 = v198;
        uint64_t v128 = sub_24D73544C(*v126, v127);
      }
      if (v129)
      {
        (*(void (**)(char *, int *))(v262 + 8))(v261, v268);
        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
        sub_24D4A479C(*(void *)v125, *((void *)v125 + 1));
        uint64_t v130 = *(void (**)(char *, uint64_t))(v279 + 8);
        v130(v120, v117);
        swift_bridgeObjectRelease();
        v130(v200, v117);
        return __swift_destroy_boxed_opaque_existential_1((uint64_t)v280);
      }
      uint64_t v131 = TupleTypeMetadata[24];
      (*(void (**)(char *, int *))(v262 + 8))(v261, v268);
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      uint64_t v132 = v200;
      *(void *)&v200[v131] = v128;
      uint64_t v109 = v271;
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v259;
      uint64_t v111 = v201;
      (*(void (**)(void *, char *, uint64_t))(v259 + 32))(v201, v132, v109);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v255 + 8))(v86, v256);
    LOBYTE(v282) = 2;
    uint64_t v88 = v258;
    swift_getWitnessTable();
    uint64_t v89 = v257;
    sub_24DCCAB08();
    uint64_t v90 = v254;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v254 + 48))(v89, 1, v88) != 1)
    {
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      uint64_t v133 = v253;
      (*(void (**)(char *, char *, uint64_t))(v90 + 32))(v253, v89, v88);
      uint64_t v134 = swift_getAssociatedTypeWitness();
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      uint64_t v111 = v201;
      unint64_t v136 = (char *)v201 + *(int *)(TupleTypeMetadata2 + 48);
      uint64_t v137 = *((void *)v133 + 1);
      *uint64_t v201 = *(void *)v133;
      v111[1] = v137;
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 32))(v136, &v133[*(int *)(v88 + 36)], v134);
      uint64_t v109 = v271;
LABEL_29:
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v259;
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v251 + 8))(v89, v252);
    type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct();
    char v287 = 14;
    swift_getWitnessTable();
    sub_24DCCAB08();
    if ((v282 & 1) == 0) {
      goto LABEL_63;
    }
    LOBYTE(v282) = 3;
    uint64_t v138 = v249;
    swift_getWitnessTable();
    uint64_t v139 = v250;
    sub_24DCCAB08();
    uint64_t v198 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48))(v139, 1, v138) != 1)
    {
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      uint64_t v141 = v241;
      uint64_t v142 = v249;
      (*(void (**)(char *, char *))(v248 + 32))(v241, v250);
      uint64_t v143 = swift_getAssociatedTypeWitness();
      uint64_t v144 = v267;
      uint64_t v145 = swift_getAssociatedConformanceWitness();
      uint64_t WitnessTable = (char *)v145;
      uint64_t v146 = AssociatedTypeWitness;
      uint64_t v279 = swift_getAssociatedConformanceWitness();
      uint64_t v282 = v144;
      unint64_t v283 = v146;
      uint64_t v284 = v145;
      uint64_t v285 = v279;
      uint64_t v147 = type metadata accessor for FileItemVersion();
      sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      uint64_t v148 = swift_getTupleTypeMetadata3();
      uint64_t v149 = v199;
      uint64_t v150 = (uint64_t)&v199[*(int *)(v148 + 48)];
      v278 = (char *)*(int *)(v148 + 64);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v199, v141, v143);
      uint64_t v151 = v142;
      uint64_t v152 = &v141[*(int *)(v142 + 36)];
      uint64_t v153 = (uint64_t)v242;
      (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v242, v152, v144);
      uint64_t v154 = (uint64_t)v244;
      (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v244, &v141[*(int *)(v151 + 44)], v146);
      (*(void (**)(char *, uint64_t))(v248 + 8))(v141, v151);
      v197[1] = v279;
      v197[0] = WitnessTable;
      sub_24DB33528(v153, 0, v154, 0, 0, 0, v144, v146, v150);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v147 - 8) + 56))(v150, 0, 1, v147);
      *(void *)&v278[(void)v149] = 0;
      uint64_t v109 = v271;
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v259;
      uint64_t v111 = v201;
      (*(void (**)(void *, char *, uint64_t))(v259 + 32))(v201, v149, v109);
      goto LABEL_21;
    }
    (*(void (**)(char *, uint64_t))(v239 + 8))(v250, v240);
    LOBYTE(v282) = 4;
    swift_getWitnessTable();
    uint64_t v140 = v198;
    sub_24DCCAB08();
    if (!v140)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v238 + 48))(v246, 1, v247) != 1)
      {
        uint64_t v155 = v237;
        uint64_t v156 = v247;
        (*(void (**)(char *, char *, uint64_t))(v238 + 32))(v237, v246, v247);
        uint64_t v157 = swift_getAssociatedTypeWitness();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v157 - 8) + 16))(v236, v155, v157);
        uint64_t v158 = (uint64_t *)&v155[*(int *)(v156 + 36)];
        unint64_t v159 = v158[1];
        if (v159 >> 60 == 15) {
          uint64_t v160 = 0;
        }
        else {
          uint64_t v160 = sub_24D73544C(*v158, v159);
        }
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
        uint64_t v165 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        (*(void (**)(char *, uint64_t))(v238 + 8))(v237, v247);
        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
        uint64_t v166 = v236;
        *(void *)&v236[v165] = v160;
        uint64_t v109 = v271;
        goto LABEL_61;
      }
      (*(void (**)(char *, uint64_t))(v232 + 8))(v246, v233);
      LOBYTE(v282) = 5;
      swift_getWitnessTable();
      sub_24DCCAB08();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v231 + 48))(v234, 1, v235) == 1)
      {
        (*(void (**)(char *, uint64_t))(v228 + 8))(v234, v229);
        type metadata accessor for FileTreeError.CapturedContentMissingStruct();
        char v287 = 6;
        swift_getWitnessTable();
        sub_24DCCAB08();
        if (v282)
        {
          type metadata accessor for FileTreeError.ItemNotEvictableStruct();
          char v287 = 7;
          swift_getWitnessTable();
          sub_24DCCAB08();
          if (v282)
          {
            type metadata accessor for FileTreeError.DirectoryChangedStruct();
            char v287 = 9;
            swift_getWitnessTable();
            sub_24DCCAB08();
            if (v282)
            {
              type metadata accessor for FileTreeError.DownloadCancelled();
              char v287 = 10;
              swift_getWitnessTable();
              sub_24DCCAB08();
              char v161 = v282;
              if (v282 == 3)
              {
                LOBYTE(v282) = 8;
                swift_getWitnessTable();
                sub_24DCCAB08();
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v204 + 48))(v206, 1, v209) != 1)
                {
                  (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                  uint64_t v178 = v208;
                  uint64_t v179 = v209;
                  (*(void (**)(char *, char *, uint64_t))(v204 + 32))(v208, v206, v209);
                  uint64_t v180 = swift_getAssociatedTypeWitness();
                  uint64_t v181 = sub_24DCCA3F8();
                  uint64_t v182 = swift_getTupleTypeMetadata2();
                  uint64_t v111 = v201;
                  v183 = (char *)v201 + *(int *)(v182 + 48);
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v181 - 8) + 32))(v201, v178, v181);
                  (*(void (**)(char *, char *, uint64_t))(*(void *)(v180 - 8) + 32))(v183, &v178[*(int *)(v179 + 36)], v180);
                  uint64_t v109 = v271;
                  goto LABEL_29;
                }
                (*(void (**)(char *, uint64_t))(v205 + 8))(v206, v207);
                LOBYTE(v282) = 11;
                swift_getWitnessTable();
                sub_24DCCAB08();
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v210 + 48))(v213, 1, v215) != 1)
                {
                  (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                  uint64_t v184 = v212;
                  (*(void (**)(char *, char *, uint64_t))(v210 + 32))(v212, v213, v215);
                  uint64_t v185 = swift_getAssociatedTypeWitness();
                  uint64_t v111 = v201;
                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v185 - 8) + 32))(v201, v184, v185);
                  uint64_t v109 = v271;
                  goto LABEL_29;
                }
                (*(void (**)(char *, uint64_t))(v211 + 8))(v213, v214);
                type metadata accessor for FileTreeError.ItemKindMismatchStruct();
                char v287 = 12;
                swift_getWitnessTable();
                sub_24DCCAB08();
                if (v282)
                {
                  type metadata accessor for FileTreeError.ItemIsFlockedStruct();
                  char v287 = 15;
                  swift_getWitnessTable();
                  sub_24DCCAB08();
                  if (v282)
                  {
                    type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct();
                    char v287 = 16;
                    swift_getWitnessTable();
                    sub_24DCCAB08();
                    if (v282)
                    {
                      type metadata accessor for FileTreeError.UploadCancelled();
                      char v287 = 17;
                      swift_getWitnessTable();
                      sub_24DCCAB08();
                      unint64_t v162 = v283;
                      if (v283 >> 60 != 11)
                      {
                        uint64_t v186 = v282;
                        if (v283 >> 60 == 15) {
                          uint64_t v187 = 0;
                        }
                        else {
                          uint64_t v187 = sub_24D73544C(v282, v283);
                        }
                        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                        sub_24D70694C(v186, v162);
                        uint64_t v188 = v203;
                        *id v203 = v187;
                        uint64_t v109 = v271;
                        swift_storeEnumTagMultiPayload();
                        uint64_t v110 = v259;
                        uint64_t v111 = v201;
                        (*(void (**)(void *, uint64_t *, uint64_t))(v259 + 32))(v201, v188, v109);
                        goto LABEL_21;
                      }
                      type metadata accessor for FileTreeError.UploadInterrupted();
                      char v287 = 18;
                      swift_getWitnessTable();
                      sub_24DCCAB08();
                      if (v282)
                      {
                        LOBYTE(v282) = 19;
                        swift_getWitnessTable();
                        sub_24DCCAB08();
                        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v216 + 48))(v218, 1, v221) != 1)
                        {
                          (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                          unint64_t v189 = v220;
                          uint64_t v190 = v221;
                          (*(void (**)(char *, char *, uint64_t))(v216 + 32))(v220, v218, v221);
                          uint64_t v191 = v267;
                          uint64_t v192 = swift_getTupleTypeMetadata2();
                          uint64_t v111 = v201;
                          uint64_t v193 = (char *)v201 + *(int *)(v192 + 48);
                          uint64_t v194 = *(void (**)(char *, char *, uint64_t))(v245 + 32);
                          v194((char *)v201, v189, v191);
                          v194(v193, &v189[*(int *)(v190 + 36)], v191);
                          uint64_t v109 = v271;
                          goto LABEL_29;
                        }
                        (*(void (**)(char *, uint64_t))(v217 + 8))(v218, v219);
                        type metadata accessor for FileTreeError.MaxLookupDepthStruct();
                        char v287 = 20;
                        swift_getWitnessTable();
                        sub_24DCCAB08();
                        if (v282)
                        {
                          type metadata accessor for FileTreeError.CompressedFileReadFailedStruct();
                          char v287 = 21;
                          swift_getWitnessTable();
                          sub_24DCCAB08();
                          if (v282)
                          {
                            type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct();
                            char v287 = 22;
                            swift_getWitnessTable();
                            sub_24DCCAB08();
                            if (v282)
                            {
                              type metadata accessor for FileTreeError.ItemNotTracked();
                              char v287 = 23;
                              swift_getWitnessTable();
                              sub_24DCCAB08();
                              if (v282)
                              {
                                LOBYTE(v282) = 24;
                                swift_getWitnessTable();
                                sub_24DCCAB08();
                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v222 + 48))(v225, 1, v227) != 1)
                                {
                                  (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
                                  v195 = v224;
                                  (*(void (**)(char *, char *, uint64_t))(v222 + 32))(v224, v225, v227);
                                  uint64_t v196 = swift_getAssociatedTypeWitness();
                                  uint64_t v111 = v201;
                                  (*(void (**)(void *, char *, uint64_t))(*(void *)(v196 - 8) + 32))(v201, v195, v196);
                                  uint64_t v109 = v271;
                                  goto LABEL_29;
                                }
                                (*(void (**)(char *, uint64_t))(v223 + 8))(v225, v226);
                                type metadata accessor for FileTreeError.NoContentToFetch();
                                char v287 = 25;
                                swift_getWitnessTable();
                                sub_24DCCAB08();
                                if (v282)
                                {
                                  LOBYTE(v282) = 13;
                                  sub_24DCCA7D8();
                                  swift_allocError();
                                  uint64_t v163 = (uint64_t)v277;
                                  swift_getWitnessTable();
                                  uint64_t v164 = v278;
                                  sub_24DCCA7A8();
                                  swift_willThrow();
                                  (*(void (**)(char *, uint64_t))(v276 + 8))(v164, v163);
                                  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v280);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
                goto LABEL_63;
              }
              (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
              uint64_t v166 = v202;
              *uint64_t v202 = v161 & 1;
              uint64_t v109 = v271;
LABEL_61:
              swift_storeEnumTagMultiPayload();
              uint64_t v110 = v259;
              uint64_t v111 = v201;
              (*(void (**)(void *, char *, uint64_t))(v259 + 32))(v201, v166, v109);
              goto LABEL_21;
            }
          }
        }
LABEL_63:
        (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
        uint64_t v111 = v201;
        uint64_t v109 = v271;
        goto LABEL_29;
      }
      (*(void (**)(char *, char *))(v276 + 8))(v278, v277);
      uint64_t v167 = v230;
      (*(void (**)(char *, char *, uint64_t))(v231 + 32))(v230, v234, v235);
      uint64_t v168 = swift_getAssociatedTypeWitness();
      uint64_t v169 = v267;
      uint64_t v170 = swift_getAssociatedConformanceWitness();
      uint64_t WitnessTable = (char *)v170;
      uint64_t v171 = AssociatedTypeWitness;
      uint64_t v279 = swift_getAssociatedConformanceWitness();
      uint64_t v282 = v169;
      unint64_t v283 = v171;
      uint64_t v284 = v170;
      uint64_t v285 = v279;
      uint64_t v172 = type metadata accessor for FileItemVersion();
      sub_24DCCA3F8();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
      uint64_t v173 = swift_getTupleTypeMetadata3();
      uint64_t v108 = (uint64_t)v199;
      v277 = &v199[*(int *)(v173 + 48)];
      v278 = (char *)*(int *)(v173 + 64);
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v168 - 8) + 16))(v199, v167, v168);
      uint64_t v174 = v235;
      uint64_t v175 = (uint64_t)v242;
      (*(void (**)(char *, char *, uint64_t))(v245 + 16))(v242, &v167[*(int *)(v235 + 36)], v169);
      uint64_t v176 = (uint64_t)v244;
      (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v244, &v167[*(int *)(v174 + 44)], v171);
      (*(void (**)(char *, uint64_t))(v231 + 8))(v167, v174);
      v197[1] = v279;
      v197[0] = WitnessTable;
      uint64_t v177 = (uint64_t)v277;
      sub_24DB33528(v175, 0, v176, 0, 0, 0, v169, v171, (uint64_t)v277);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v172 - 8) + 56))(v177, 0, 1, v172);
      *(void *)&v278[v108] = 0;
LABEL_20:
      uint64_t v109 = v271;
      swift_storeEnumTagMultiPayload();
      uint64_t v110 = v259;
      uint64_t v111 = v201;
      (*(void (**)(void *, uint64_t, uint64_t))(v259 + 32))(v201, v108, v109);
LABEL_21:
      (*(void (**)(uint64_t, void *, uint64_t))(v110 + 32))(v260, v111, v109);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v280);
    }
    goto LABEL_3;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v280);
}

void sub_24D6F8CF0(void *a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 24);
  uint64_t IsDetachedRootStruct = type metadata accessor for FileTreeError.ItemIsDetachedRootStruct();
  unint64_t v283 = *(void (***)(uint64_t, uint64_t))(IsDetachedRootStruct - 8);
  MEMORY[0x270FA5388](IsDetachedRootStruct);
  uint64_t v282 = (void (**)(char *, uint64_t))((char *)&v220 - v6);
  uint64_t v261 = type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct();
  uint64_t v262 = *(void *)(v261 - 8);
  MEMORY[0x270FA5388](v261);
  uint64_t v254 = (uint64_t)&v220 - v7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v266 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  uint64_t v260 = (char *)&v220 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v258 = (char *)&v220 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v256 = (char *)&v220 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v286 = (char *)&v220 - v15;
  uint64_t v255 = type metadata accessor for FileTreeError.LookupNotPermittedStruct();
  uint64_t v253 = *(void *)(v255 - 8);
  MEMORY[0x270FA5388](v255);
  uint64_t v251 = (uint64_t)&v220 - v16;
  uint64_t v259 = type metadata accessor for FileTreeError.ItemMismatchStruct();
  uint64_t v257 = *(void *)(v259 - 8);
  MEMORY[0x270FA5388](v259);
  uint64_t v252 = (uint64_t)&v220 - v17;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v268 = sub_24DCCA3F8();
  uint64_t v241 = *(void *)(v268 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v268);
  uint64_t v247 = (char *)&v220 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v19);
  v270 = (char *)&v220 - v21;
  uint64_t v225 = type metadata accessor for FileTreeError.DirectoryNotEmptyStruct();
  uint64_t v224 = *(void *)(v225 - 8);
  MEMORY[0x270FA5388](v225);
  uint64_t v248 = (uint64_t)&v220 - v22;
  uint64_t v246 = type metadata accessor for FileTreeError.CannotBounceStruct();
  uint64_t v245 = *(void *)(v246 - 8);
  MEMORY[0x270FA5388](v246);
  v244 = (uint64_t *)((char *)&v220 - v23);
  uint64_t v227 = type metadata accessor for FileTreeError.ItemCollisionStruct();
  uint64_t v226 = *(void *)(v227 - 8);
  MEMORY[0x270FA5388](v227);
  uint64_t v250 = (uint64_t)&v220 - v24;
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v26 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v228 = (char *)&v220 - v27;
  uint64_t v28 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v264 = (uint64_t)&v220 - v29;
  uint64_t found = type metadata accessor for FileTreeError.ItemNotFoundStruct();
  uint64_t v231 = *(void *)(found - 8);
  MEMORY[0x270FA5388](found);
  v230 = (char *)&v220 - v30;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v32 = swift_getAssociatedConformanceWitness();
  uint64_t v265 = AssociatedTypeWitness;
  uint64_t v288 = AssociatedTypeWitness;
  v289 = (ValueMetadata *)v25;
  uint64_t v229 = v25;
  uint64_t v290 = AssociatedConformanceWitness;
  uint64_t v291 = v32;
  uint64_t v243 = type metadata accessor for FileItemVersion();
  uint64_t v272 = sub_24DCCA3F8();
  uint64_t v271 = *(void (***)(char *, char *, uint64_t))(v272 - 8);
  uint64_t v33 = MEMORY[0x270FA5388](v272);
  v242 = (char *)&v220 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v239 = (char *)&v220 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v273 = (char *)&v220 - v38;
  uint64_t v275 = v18;
  uint64_t v276 = *(void *)(v18 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v281 = (char *)&v220 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  v280 = (char *)&v220 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  v237 = (char *)&v220 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v233 = (char *)&v220 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  uint64_t v238 = (char *)&v220 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  uint64_t v274 = (char *)&v220 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v234 = (char *)&v220 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  v236 = (char *)&v220 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v235 = (char *)&v220 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  uint64_t v263 = (char *)&v220 - v58;
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v240 = (char *)&v220 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v267 = (uint64_t)&v220 - v62;
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  uint64_t v269 = (char *)&v220 - v64;
  uint64_t v285 = a2;
  uint64_t v279 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v63);
  uint64_t v277 = v4;
  v278 = (uint64_t *)((char *)&v220 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for FileTreeError.CodingKeys();
  swift_getWitnessTable();
  uint64_t v66 = sub_24DCCAD58();
  uint64_t v67 = *(void *)(v66 - 8);
  MEMORY[0x270FA5388](v66);
  char v69 = (char *)&v220 - v68;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  uint64_t v288 = v5;
  swift_getMetatypeMetadata();
  sub_24DCC9868();
  LOBYTE(v288) = 13;
  uint64_t v70 = v287;
  sub_24DCCACA8();
  if (v70)
  {
    (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v66);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v71 = v280;
    uint64_t v72 = v281;
    char v287 = v69;
    uint64_t v73 = v286;
    uint64_t v222 = v66;
    uint64_t v75 = (uint64_t)v282;
    uint64_t v74 = v283;
    uint64_t v223 = 0;
    uint64_t v221 = v67;
    swift_bridgeObjectRelease();
    uint64_t v76 = v278;
    (*(void (**)(uint64_t *, void, uint64_t))(v279 + 16))(v278, v284, v285);
    char v77 = v76;
    uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch((int)EnumCaseMultiPayload)
    {
      case 1:
        MEMORY[0x270FA5388](EnumCaseMultiPayload);
        uint64_t v285 = v5;
        strcpy((char *)&v220 - 48, " filename below syncability originalError ");
        uint64_t v99 = v275;
        uint64_t v288 = v275;
        v289 = &type metadata for Filename;
        uint64_t v290 = v275;
        uint64_t v291 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26986BB30);
        uint64_t v292 = __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
        TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
        uint64_t v101 = v76;
        uint64_t v102 = (char *)v76 + TupleTypeMetadata[12];
        uint64_t v104 = *(char **)v102;
        uint64_t v103 = (void (*)(char *, char *, uint64_t))*((void *)v102 + 1);
        uint64_t v286 = v104;
        uint64_t v284 = v103;
        unint64_t v105 = (char *)v76 + TupleTypeMetadata[16];
        sub_24D4A479C(*(uint64_t *)((char *)v76 + TupleTypeMetadata[20]), *(uint64_t *)((char *)v76 + TupleTypeMetadata[20] + 8));
        uint64_t v106 = *(void **)((char *)v76 + TupleTypeMetadata[24]);
        uint64_t v107 = v276;
        uint64_t v108 = *(void (**)(char *, uint64_t *, uint64_t))(v276 + 32);
        uint64_t v109 = v240;
        v108(v240, v101, v99);
        uint64_t v110 = v263;
        v108(v263, (uint64_t *)v105, v99);
        uint64_t v111 = v109;
        uint64_t v112 = *(void (**)(char *, char *, uint64_t))(v107 + 16);
        uint64_t v113 = (uint64_t)v235;
        v112(v235, v109, v99);
        uint64_t v114 = (uint64_t)v236;
        v112(v236, v110, v99);
        id v115 = v106;
        uint64_t v116 = v250;
        uint64_t v117 = v223;
        sub_24D6EF01C(v113, (uint64_t)v286, (uint64_t)v284, v114, v106, v250);
        if (v117)
        {

          uint64_t v118 = *(void (**)(char *, uint64_t))(v107 + 8);
          v118(v110, v99);
          v118(v111, v99);
          goto LABEL_11;
        }
        uint64_t v204 = v111;
        LOBYTE(v288) = 1;
        uint64_t v205 = v227;
        swift_getWitnessTable();
        uint64_t v206 = v222;
        uint64_t v207 = v287;
        sub_24DCCACF8();
        uint64_t v208 = v221;

        (*(void (**)(uint64_t, uint64_t))(v226 + 8))(v116, v205);
        uint64_t v209 = *(void (**)(char *, uint64_t))(v276 + 8);
        v209(v263, v99);
        v209(v204, v99);
        (*(void (**)(char *, uint64_t))(v208 + 8))(v207, v206);
        return;
      case 2:
        uint64_t v120 = *v76;
        uint64_t v119 = v77[1];
        uint64_t v121 = v275;
        TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
        uint64_t v123 = v276;
        uint64_t v124 = v234;
        (*(void (**)(char *, char *, uint64_t))(v276 + 32))(v234, (char *)v77 + *(int *)(TupleTypeMetadata2 + 48), v121);
        uint64_t v125 = (uint64_t)v274;
        (*(void (**)(char *, char *, uint64_t))(v123 + 16))(v274, v124, v121);
        uint64_t v126 = v244;
        sub_24D6EFF9C(v120, v119, v125, v244);
        LOBYTE(v288) = 2;
        uint64_t v127 = v246;
        swift_getWitnessTable();
        uint64_t v128 = v222;
        uint64_t v129 = v287;
        sub_24DCCACF8();
        (*(void (**)(void *, uint64_t))(v245 + 8))(v126, v127);
        (*(void (**)(char *, uint64_t))(v123 + 8))(v124, v121);
        goto LABEL_15;
      case 3:
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
        uint64_t v130 = v275;
        uint64_t v131 = *(void **)((char *)v76 + *(int *)(swift_getTupleTypeMetadata2() + 48));
        uint64_t v132 = v276;
        uint64_t v133 = v238;
        (*(void (**)(char *, uint64_t *, uint64_t))(v276 + 32))(v238, v77, v130);
        uint64_t v134 = (uint64_t)v233;
        (*(void (**)(char *, char *, uint64_t))(v132 + 16))(v233, v133, v130);
        id v135 = v131;
        uint64_t v136 = v248;
        uint64_t v137 = v223;
        sub_24D6F0C28(v134, v131, v248);
        if (v137)
        {

          (*(void (**)(char *, uint64_t))(v132 + 8))(v133, v130);
LABEL_11:
          (*(void (**)(char *, uint64_t))(v221 + 8))(v287, v222);
        }
        else
        {
          LOBYTE(v288) = 4;
          uint64_t v210 = v225;
          swift_getWitnessTable();
          uint64_t v211 = v222;
          uint64_t v212 = v287;
          sub_24DCCACF8();
          uint64_t v213 = v221;

          (*(void (**)(uint64_t, uint64_t))(v224 + 8))(v136, v210);
          (*(void (**)(char *, uint64_t))(v276 + 8))(v133, v275);
          (*(void (**)(char *, uint64_t))(v213 + 8))(v212, v211);
        }
        return;
      case 4:
        uint64_t v138 = v268;
        uint64_t v139 = v275;
        uint64_t v140 = swift_getTupleTypeMetadata2();
        uint64_t v141 = v76;
        uint64_t v142 = (char *)v76 + *(int *)(v140 + 48);
        uint64_t v143 = v241;
        uint64_t v144 = v270;
        (*(void (**)(char *, uint64_t *, uint64_t))(v241 + 32))(v270, v141, v138);
        uint64_t v145 = v237;
        uint64_t v146 = v142;
        uint64_t v147 = v276;
        (*(void (**)(char *, char *, uint64_t))(v276 + 32))(v237, v146, v139);
        uint64_t v148 = (uint64_t)v247;
        (*(void (**)(char *, char *, uint64_t))(v143 + 16))(v247, v144, v138);
        uint64_t v149 = (uint64_t)v274;
        (*(void (**)(char *, char *, uint64_t))(v147 + 16))(v274, v145, v139);
        uint64_t v150 = v252;
        sub_24D6F268C(v148, v149, v252);
        LOBYTE(v288) = 8;
        uint64_t v151 = v259;
        swift_getWitnessTable();
        uint64_t v128 = v222;
        uint64_t v129 = v287;
        sub_24DCCACF8();
        (*(void (**)(uint64_t, uint64_t))(v257 + 8))(v150, v151);
        (*(void (**)(char *, uint64_t))(v147 + 8))(v145, v139);
        (*(void (**)(char *, uint64_t))(v143 + 8))(v270, v268);
        goto LABEL_15;
      case 5:
        LOBYTE(v288) = *(unsigned char *)v76;
        char v293 = 10;
        type metadata accessor for FileTreeError.DownloadCancelled();
        swift_getWitnessTable();
        uint64_t v152 = v222;
        goto LABEL_35;
      case 6:
        uint64_t v153 = v276;
        uint64_t v154 = v71;
        uint64_t v155 = v71;
        uint64_t v156 = v275;
        (*(void (**)(char *, uint64_t *, uint64_t))(v276 + 32))(v155, v77, v275);
        uint64_t v157 = (uint64_t)v274;
        (*(void (**)(char *, char *, uint64_t))(v153 + 16))(v274, v154, v156);
        uint64_t v158 = v251;
        sub_24D6F4BEC(v157, v251);
        LOBYTE(v288) = 11;
        uint64_t v159 = v255;
        swift_getWitnessTable();
        uint64_t v128 = v222;
        uint64_t v129 = v287;
        sub_24DCCACF8();
        (*(void (**)(uint64_t, uint64_t))(v253 + 8))(v158, v159);
        (*(void (**)(char *, uint64_t))(v153 + 8))(v154, v156);
LABEL_15:
        (*(void (**)(char *, uint64_t))(v221 + 8))(v129, v128);
        return;
      case 7:
        uint64_t v160 = v265;
        uint64_t v161 = *(int *)(swift_getTupleTypeMetadata2() + 48);
        uint64_t v285 = v5;
        unint64_t v162 = v76;
        uint64_t v163 = (char *)v76 + v161;
        uint64_t v164 = v266;
        uint64_t v165 = *(void (**)(char *, uint64_t *, uint64_t))(v266 + 32);
        v165(v73, v162, v160);
        uint64_t v166 = v256;
        v165(v256, (uint64_t *)v163, v160);
        uint64_t v167 = *(void (**)(char *, char *, uint64_t))(v164 + 16);
        uint64_t v168 = (uint64_t)v258;
        v167(v258, v73, v160);
        uint64_t v169 = (uint64_t)v260;
        v167(v260, v166, v160);
        uint64_t v170 = v254;
        sub_24D6F4158(v168, v169, v254);
        LOBYTE(v288) = 19;
        uint64_t v171 = v261;
        swift_getWitnessTable();
        uint64_t v172 = v222;
        sub_24DCCACF8();
        (*(void (**)(uint64_t, uint64_t))(v262 + 8))(v170, v171);
        uint64_t v173 = *(void (**)(char *, uint64_t))(v164 + 8);
        v173(v166, v160);
        v173(v286, v160);
        (*(void (**)(char *, uint64_t))(v221 + 8))(v287, v172);
        return;
      case 8:
        uint64_t v174 = v287;
        id v175 = (id)*v77;
        id v176 = (id)*v77;
        uint64_t v177 = v223;
        uint64_t v178 = sub_24D6F39C4(v175);
        if (v177)
        {
          (*(void (**)(char *, uint64_t))(v221 + 8))(v174, v222);
        }
        else
        {
          uint64_t v214 = (uint64_t)v178;
          unint64_t v215 = (unint64_t)v179;
          uint64_t v288 = (uint64_t)v178;
          v289 = v179;
          char v293 = 17;
          type metadata accessor for FileTreeError.UploadCancelled();
          swift_getWitnessTable();
          uint64_t v216 = v222;
          sub_24DCCACF8();

          sub_24D416034(v214, v215);
          (*(void (**)(char *, uint64_t))(v221 + 8))(v174, v216);
        }
        return;
      case 9:
        uint64_t v180 = v74;
        uint64_t v182 = v275;
        uint64_t v181 = v276;
        (*(void (**)(char *, uint64_t *, uint64_t))(v276 + 32))(v72, v77, v275);
        uint64_t v183 = (uint64_t)v274;
        (*(void (**)(char *, char *, uint64_t))(v181 + 16))(v274, v72, v182);
        uint64_t v184 = v75;
        sub_24D6F4BEC(v183, v75);
        LOBYTE(v288) = 24;
        uint64_t v185 = IsDetachedRootStruct;
        swift_getWitnessTable();
        uint64_t v186 = v222;
        uint64_t v187 = v287;
        sub_24DCCACF8();
        v180[1](v184, v185);
        (*(void (**)(char *, uint64_t))(v181 + 8))(v72, v182);
        (*(void (**)(char *, uint64_t))(v221 + 8))(v187, v186);
        return;
      case 10:
        char v188 = 14;
        goto LABEL_25;
      case 11:
        LOBYTE(v288) = 6;
        type metadata accessor for FileTreeError.CapturedContentMissingStruct();
        goto LABEL_34;
      case 12:
        LOBYTE(v288) = 7;
        type metadata accessor for FileTreeError.ItemNotEvictableStruct();
        goto LABEL_34;
      case 13:
        LOBYTE(v288) = 9;
        type metadata accessor for FileTreeError.DirectoryChangedStruct();
        goto LABEL_34;
      case 14:
        char v188 = 12;
LABEL_25:
        LOBYTE(v288) = v188;
        type metadata accessor for FileTreeError.ItemKindMismatchStruct();
        goto LABEL_34;
      case 15:
        LOBYTE(v288) = 15;
        type metadata accessor for FileTreeError.ItemIsFlockedStruct();
        goto LABEL_34;
      case 16:
        LOBYTE(v288) = 16;
        type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct();
        goto LABEL_34;
      case 17:
        LOBYTE(v288) = 18;
        type metadata accessor for FileTreeError.UploadInterrupted();
        goto LABEL_34;
      case 18:
        LOBYTE(v288) = 20;
        type metadata accessor for FileTreeError.MaxLookupDepthStruct();
        goto LABEL_34;
      case 19:
        LOBYTE(v288) = 21;
        type metadata accessor for FileTreeError.CompressedFileReadFailedStruct();
        goto LABEL_34;
      case 20:
        LOBYTE(v288) = 22;
        type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct();
        goto LABEL_34;
      case 21:
        LOBYTE(v288) = 23;
        type metadata accessor for FileTreeError.ItemNotTracked();
        goto LABEL_34;
      case 22:
        LOBYTE(v288) = 25;
        type metadata accessor for FileTreeError.NoContentToFetch();
LABEL_34:
        swift_getWitnessTable();
        uint64_t v152 = v222;
LABEL_35:
        unint64_t v189 = v287;
        sub_24DCCACF8();
        (*(void (**)(char *, uint64_t))(v221 + 8))(v189, v152);
        break;
      default:
        uint64_t v285 = v5;
        __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26B19A060);
        uint64_t v79 = v275;
        uint64_t v80 = v272;
        TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
        uint64_t v82 = (char *)v76 + *(int *)(TupleTypeMetadata3 + 48);
        uint64_t v286 = *(char **)((char *)v76 + *(int *)(TupleTypeMetadata3 + 64));
        uint64_t v83 = v276;
        uint64_t v84 = v269;
        (*(void (**)(char *))(v276 + 32))(v269);
        uint64_t v85 = v271;
        uint64_t v86 = v273;
        v271[4](v273, v82, v80);
        (*(void (**)(uint64_t, char *, uint64_t))(v83 + 16))(v267, v84, v79);
        uint64_t v87 = v239;
        uint64_t v284 = v85[2];
        v284(v239, v86, v80);
        uint64_t v88 = v243;
        uint64_t v89 = *(char **)(v243 - 8);
        uint64_t v90 = 1;
        unint64_t v283 = (void (**)(uint64_t, uint64_t))*((void *)v89 + 6);
        int v91 = ((uint64_t (*)(char *, uint64_t, uint64_t))v283)(v87, 1, v243);
        uint64_t v282 = (void (**)(char *, uint64_t))v89;
        if (v91 == 1)
        {
          unint64_t v92 = (void (**)(char *, uint64_t))v85;
          uint64_t v93 = v272;
          uint64_t v94 = v272;
          id v95 = v87;
          uint64_t v96 = v265;
          uint64_t v97 = v266;
          uint64_t v98 = v264;
        }
        else
        {
          uint64_t v97 = v266;
          uint64_t v98 = v264;
          uint64_t v190 = v87;
          id v95 = v87;
          uint64_t v96 = v265;
          (*(void (**)(uint64_t, char *, uint64_t))(v266 + 16))(v264, v190, v265);
          uint64_t v90 = 0;
          unint64_t v92 = (void (**)(char *, uint64_t))v89;
          uint64_t v94 = v88;
          uint64_t v93 = v272;
        }
        v92[1](v95, v94);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v98, v90, 1, v96);
        uint64_t v191 = v242;
        v284(v242, v273, v93);
        if (((unsigned int (*)(char *, uint64_t, uint64_t))v283)(v191, 1, v88) == 1)
        {
          ((void (*)(char *, uint64_t))v271[1])(v191, v93);
          uint64_t v192 = v229;
          uint64_t v193 = *(void *)(v229 - 8);
          uint64_t v194 = 1;
          uint64_t v195 = v223;
          uint64_t v196 = v222;
          uint64_t v197 = v275;
          uint64_t v198 = found;
          uint64_t v199 = v231;
          uint64_t v200 = (uint64_t)v230;
          uint64_t v201 = (uint64_t)v228;
        }
        else
        {
          uint64_t v192 = v229;
          uint64_t v193 = *(void *)(v229 - 8);
          uint64_t v201 = (uint64_t)v228;
          (*(void (**)(char *, char *, uint64_t))(v193 + 16))(v228, &v191[*(int *)(v88 + 56)], v229);
          v282[1](v191, v88);
          uint64_t v194 = 0;
          uint64_t v195 = v223;
          uint64_t v196 = v222;
          uint64_t v197 = v275;
          uint64_t v198 = found;
          uint64_t v199 = v231;
          uint64_t v200 = (uint64_t)v230;
        }
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v193 + 56))(v201, v194, 1, v192);
        id v202 = v286;
        id v203 = v286;
        sub_24D6EDE60(v267, v264, v201, v202, v200);
        if (v195)
        {

          ((void (*)(char *, uint64_t))v271[1])(v273, v272);
          (*(void (**)(char *, uint64_t))(v276 + 8))(v269, v197);
          (*(void (**)(char *, uint64_t))(v221 + 8))(v287, v196);
        }
        else
        {
          LOBYTE(v288) = 0;
          swift_getWitnessTable();
          uint64_t v217 = v287;
          sub_24DCCACF8();
          uint64_t v218 = v221;
          uint64_t v219 = v273;

          (*(void (**)(uint64_t, uint64_t))(v199 + 8))(v200, v198);
          ((void (*)(char *, uint64_t))v271[1])(v219, v272);
          (*(void (**)(char *, uint64_t))(v276 + 8))(v269, v197);
          (*(void (**)(char *, uint64_t))(v218 + 8))(v217, v196);
        }
        break;
    }
  }
}

uint64_t sub_24D6FAEDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_24D6F5938(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

void sub_24D6FAEFC(void *a1, uint64_t a2)
{
}

void sub_24D6FAF14()
{
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(unsigned __int8 *)(v0 + 24);
  if (*(unsigned char *)(v0 + 25))
  {
    sub_24DCCB008();
    sub_24DCC97E8();
    id v3 = v1;
    sub_24DCC98F8();
    swift_bridgeObjectRelease();
    sub_24D40160C(v1, v2, 1);
  }
  else
  {
    sub_24DCCB008();
    if (v2)
    {
      sub_24DCCB008();
      if (v2 == 1) {
        sub_24DCCB038();
      }
    }
    else
    {
      sub_24DCCB008();
      sub_24DCCB028();
    }
  }
}

uint64_t sub_24D6FB00C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

void sub_24D6FB01C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D590);
  char v30 = a2;
  uint64_t v31 = (void *)sub_24DCCA9E8();
  if (*(void *)(v5 + 16))
  {
    uint64_t v6 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v27 = v2;
    uint64_t v28 = (void *)(v5 + 64);
    uint64_t v7 = -1;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    unint64_t v8 = v7 & *(void *)(v5 + 64);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v11 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        if (__OFADD__(v10++, 1)) {
          goto LABEL_27;
        }
        if (v10 >= v9)
        {
LABEL_20:
          swift_release();
          id v3 = v27;
          if (v30)
          {
            uint64_t v26 = 1 << *(unsigned char *)(v5 + 32);
            if (v26 > 63) {
              bzero(v28, ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
            }
            else {
              *uint64_t v28 = -1 << v26;
            }
            *(void *)(v5 + 16) = 0;
          }
          break;
        }
        unint64_t v14 = v28[v10];
        if (!v14)
        {
          int64_t v15 = v10 + 1;
          if (v10 + 1 >= v9) {
            goto LABEL_20;
          }
          unint64_t v14 = v28[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v10 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                break;
              }
              if (v10 >= v9) {
                goto LABEL_20;
              }
              unint64_t v14 = v28[v10];
              ++v15;
              if (v14) {
                goto LABEL_17;
              }
            }
            __break(1u);
LABEL_27:
            __break(1u);
            return;
          }
          ++v10;
        }
LABEL_17:
        unint64_t v8 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      uint64_t v16 = *(void *)(v5 + 48) + 40 * v12;
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      long long v19 = *(_OWORD *)(v16 + 16);
      char v20 = *(unsigned char *)(v16 + 32);
      char v21 = *(unsigned char *)(v16 + 33);
      uint64_t v22 = (uint64_t *)(*(void *)(v5 + 56) + 24 * v12);
      uint64_t v24 = *v22;
      uint64_t v23 = v22[1];
      double v25 = *((double *)v22 + 2);
      if ((v30 & 1) == 0)
      {
        long long v29 = *(_OWORD *)(v16 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v19 = v29;
      }
      v32[0] = v17;
      v32[1] = v18;
      long long v33 = v19;
      char v34 = v20;
      char v35 = v21;
      sub_24D717594((uint64_t)v32, v24, v23, v31, v25);
    }
  }
  swift_release();
  *id v3 = v31;
}

uint64_t sub_24D6FB260(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E78);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              id v3 = v2;
              if (a2)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      char v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
      if (a2)
      {
        sub_24D3F7E7C(v24, v35);
      }
      else
      {
        sub_24D3F7E8C((uint64_t)v24, (uint64_t)v35);
        swift_bridgeObjectRetain();
      }
      sub_24DCCAFF8();
      sub_24DCC98F8();
      uint64_t result = sub_24DCCB048();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      int64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *int64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = (uint64_t)sub_24D3F7E7C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FB560(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D560);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  int64_t v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v19 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v20 = v19 | (v13 << 6);
    goto LABEL_31;
  }
  int64_t v21 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_43;
  }
  if (v21 >= v11)
  {
    swift_release();
    id v3 = v33;
    uint64_t v22 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_38:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v22 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (v23) {
      goto LABEL_30;
    }
    int64_t v13 = v21 + 1;
    if (v21 + 1 >= v11) {
      goto LABEL_35;
    }
    unint64_t v23 = *(void *)(v34 + 8 * v13);
    if (v23)
    {
LABEL_30:
      unint64_t v10 = (v23 - 1) & v23;
      unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
      char v29 = *(unsigned char *)(*(void *)(v5 + 48) + v20);
      BOOL v30 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v20);
      if (a2) {
        sub_24D3F7E7C(v30, v35);
      }
      else {
        sub_24D3F7E8C((uint64_t)v30, (uint64_t)v35);
      }
      sub_24DCCAFF8();
      sub_24DCC98F8();
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_24DCCB048();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v15) >> 6;
      while (++v17 != v26 || (v25 & 1) == 0)
      {
        BOOL v27 = v17 == v26;
        if (v17 == v26) {
          unint64_t v17 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v17);
        if (v28 != -1)
        {
          unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
LABEL_8:
          *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
          *(unsigned char *)(*(void *)(v7 + 48) + v18) = v29;
          sub_24D3F7E7C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v18));
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x24D6FB978);
    }
    int64_t v24 = v21 + 2;
    if (v24 < v11)
    {
      unint64_t v23 = *(void *)(v34 + 8 * v24);
      if (!v23)
      {
        while (1)
        {
          int64_t v13 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            goto LABEL_44;
          }
          if (v13 >= v11) {
            goto LABEL_35;
          }
          unint64_t v23 = *(void *)(v34 + 8 * v13);
          ++v24;
          if (v23) {
            goto LABEL_30;
          }
        }
      }
      int64_t v13 = v24;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    id v3 = v33;
    if (a2) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FB998(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D578);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v2;
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          id v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    unint64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2) {
      sub_24D3F7E7C(v23, v34);
    }
    else {
      sub_24D3F7E8C((uint64_t)v23, (uint64_t)v34);
    }
    sub_24DCCAFF8();
    sub_24D409148(v22);
    sub_24DCC98F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24DCCB048();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    uint64_t result = (uint64_t)sub_24D3F7E7C(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v32;
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FBCA4(uint64_t a1, int a2)
{
  return sub_24D6FBFF8(a1, a2, (uint64_t *)&unk_26B199410, (uint64_t *)&unk_26B195DF0);
}

uint64_t sub_24D6FBCB8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B194120);
  char v35 = a2;
  uint64_t result = sub_24DCCA9E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_37:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_44;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v34 = -1 << v32;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_46;
                }
                if (v8 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      uint64_t v21 = *(void *)v20;
      int v22 = *(unsigned __int8 *)(v20 + 8);
      unint64_t v23 = *(void **)(*(void *)(v5 + 56) + 8 * v16);
      if ((v35 & 1) == 0) {
        id v24 = v23;
      }
      sub_24DCCAFF8();
      if (v22)
      {
        sub_24DCCB008();
        if (v22 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v21;
      *(unsigned char *)(v14 + 8) = v22;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_44:
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FBFE4(uint64_t a1, int a2)
{
  return sub_24D6FBFF8(a1, a2, (uint64_t *)&unk_26B199598, &qword_26B1948C0);
}

uint64_t sub_24D6FBFF8(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v46 = a3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v44 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v45 = a2;
  uint64_t result = sub_24DCCA9E8();
  uint64_t v13 = result;
  if (*(void *)(v11 + 16))
  {
    int64_t v14 = 0;
    uint64_t v15 = *(void *)(v11 + 64);
    uint64_t v43 = (void *)(v11 + 64);
    uint64_t v16 = 1 << *(unsigned char *)(v11 + 32);
    if (v16 < 64) {
      uint64_t v17 = ~(-1 << v16);
    }
    else {
      uint64_t v17 = -1;
    }
    unint64_t v18 = v17 & v15;
    uint64_t v41 = v4;
    int64_t v42 = (unint64_t)(v16 + 63) >> 6;
    uint64_t v19 = result + 64;
    while (1)
    {
      if (v18)
      {
        unint64_t v22 = __clz(__rbit64(v18));
        v18 &= v18 - 1;
        unint64_t v23 = v22 | (v14 << 6);
      }
      else
      {
        int64_t v24 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v43;
        if (v24 >= v42) {
          goto LABEL_38;
        }
        unint64_t v25 = v43[v24];
        ++v14;
        if (!v25)
        {
          int64_t v14 = v24 + 1;
          if (v24 + 1 >= v42) {
            goto LABEL_38;
          }
          unint64_t v25 = v43[v14];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v42)
            {
LABEL_38:
              if ((v45 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v6 = v41;
                goto LABEL_45;
              }
              uint64_t v39 = 1 << *(unsigned char *)(v11 + 32);
              if (v39 >= 64) {
                bzero(v43, ((unint64_t)(v39 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v43 = -1 << v39;
              }
              uint64_t v6 = v41;
              *(void *)(v11 + 16) = 0;
              break;
            }
            unint64_t v25 = v43[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v14 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_47;
                }
                if (v14 >= v42) {
                  goto LABEL_38;
                }
                unint64_t v25 = v43[v14];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v14 = v26;
          }
        }
LABEL_21:
        unint64_t v18 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v14 << 6);
      }
      uint64_t v27 = *(void *)(v11 + 48) + 16 * v23;
      uint64_t v28 = *(void *)v27;
      int v29 = *(unsigned __int8 *)(v27 + 8);
      uint64_t v30 = *(void *)(v44 + 72);
      uint64_t v31 = *(void *)(v11 + 56) + v30 * v23;
      if (v45) {
        sub_24D3F0BA0(v31, (uint64_t)v10, v46);
      }
      else {
        sub_24D415FD0(v31, (uint64_t)v10, v46);
      }
      sub_24DCCAFF8();
      if (v29)
      {
        sub_24DCCB008();
        if (v29 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v32 = -1 << *(unsigned char *)(v13 + 32);
      unint64_t v33 = result & ~v32;
      unint64_t v34 = v33 >> 6;
      if (((-1 << v33) & ~*(void *)(v19 + 8 * (v33 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v33) & ~*(void *)(v19 + 8 * (v33 >> 6)))) | v33 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v35 = 0;
        unint64_t v36 = (unint64_t)(63 - v32) >> 6;
        do
        {
          if (++v34 == v36 && (v35 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          BOOL v37 = v34 == v36;
          if (v34 == v36) {
            unint64_t v34 = 0;
          }
          v35 |= v37;
          uint64_t v38 = *(void *)(v19 + 8 * v34);
        }
        while (v38 == -1);
        unint64_t v20 = __clz(__rbit64(~v38)) + (v34 << 6);
      }
      *(void *)(v19 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t v21 = *(void *)(v13 + 48) + 16 * v20;
      *(void *)uint64_t v21 = v28;
      *(unsigned char *)(v21 + 8) = v29;
      uint64_t result = sub_24D3F0BA0((uint64_t)v10, *(void *)(v13 + 56) + v30 * v20, v46);
      ++*(void *)(v13 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_45:
  *uint64_t v6 = v13;
  return result;
}

uint64_t sub_24D6FC3C0(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199300);
  uint64_t v38 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1948D8);
  int v39 = a2;
  uint64_t result = sub_24DCCA9E8();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    char v35 = v3;
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    BOOL v37 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    int64_t v36 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v18 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v19 = v18 | (v11 << 6);
      }
      else
      {
        int64_t v20 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v20 >= v36) {
          goto LABEL_34;
        }
        unint64_t v21 = v37[v20];
        ++v11;
        if (!v21)
        {
          int64_t v11 = v20 + 1;
          if (v20 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v21 = v37[v11];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_34:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v35;
                goto LABEL_41;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v8 + 32);
              if (v33 >= 64) {
                bzero(v37, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v37 = -1 << v33;
              }
              id v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v11 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_43;
                }
                if (v11 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v21 = v37[v11];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v22;
          }
        }
LABEL_21:
        unint64_t v15 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v11 << 6);
      }
      uint64_t v23 = *(void *)(*(void *)(v8 + 48) + 8 * v19);
      uint64_t v24 = *(void *)(v38 + 72);
      uint64_t v25 = *(void *)(v8 + 56) + v24 * v19;
      if (v39) {
        sub_24D3F0BA0(v25, (uint64_t)v7, (uint64_t *)&unk_26B199300);
      }
      else {
        sub_24D415FD0(v25, (uint64_t)v7, (uint64_t *)&unk_26B199300);
      }
      uint64_t result = sub_24DCCAFE8();
      uint64_t v26 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v16 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      *(void *)(*(void *)(v10 + 48) + 8 * v17) = v23;
      uint64_t result = sub_24D3F0BA0((uint64_t)v7, *(void *)(v10 + 56) + v24 * v17, (uint64_t *)&unk_26B199300);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *id v3 = v10;
  return result;
}

uint64_t sub_24D6FC730(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B197E60);
  char v42 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    uint64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          id v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    char v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t result = sub_24DCCB048();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    *unint64_t v19 = v34;
    v19[1] = v33;
    int64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    void *v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v39;
  uint64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FCA58(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D548);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v32 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    unint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v33 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v33 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_34:
          swift_release();
          id v3 = v32;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v33 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v33 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    int64_t v23 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v17);
    if (a2) {
      sub_24D3F7E7C(v23, v34);
    }
    else {
      sub_24D3F7E8C((uint64_t)v23, (uint64_t)v34);
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24DCCB048();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    uint64_t result = (uint64_t)sub_24D3F7E7C(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v32;
  unint64_t v19 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FCDBC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197E80);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v11) {
      break;
    }
    char v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v14;
    if (!v23)
    {
      int64_t v14 = v21 + 1;
      if (v21 + 1 >= v11) {
        goto LABEL_34;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v14);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v11)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v14 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v11) {
              goto LABEL_34;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v14);
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v24;
      }
    }
LABEL_21:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v14 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v20;
    if (a2)
    {
      long long v26 = *(_OWORD *)v25;
      long long v27 = *(_OWORD *)(v25 + 16);
      uint64_t v40 = *(void *)(v25 + 32);
      long long v38 = v26;
      long long v39 = v27;
      sub_24D3F7E7C((_OWORD *)(*(void *)(v5 + 56) + 32 * v20), v37);
    }
    else
    {
      sub_24D6D0AE0(v25, (uint64_t)&v38);
      sub_24D3F7E8C(*(void *)(v5 + 56) + 32 * v20, (uint64_t)v37);
    }
    uint64_t result = sub_24DCCA668();
    uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v15 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = *(void *)(v7 + 48) + 40 * v15;
    long long v17 = v38;
    long long v18 = v39;
    *(void *)(v16 + 32) = v40;
    *(_OWORD *)uint64_t v16 = v17;
    *(_OWORD *)(v16 + 16) = v18;
    uint64_t result = (uint64_t)sub_24D3F7E7C(v37, (_OWORD *)(*(void *)(v7 + 56) + 32 * v15));
    ++*(void *)(v7 + 16);
  }
  swift_release();
  char v22 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FD0D4(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B048);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          id v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    char v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_bridgeObjectRetain();
    }
    uint64_t result = sub_24DCCA388();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v35;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FD3AC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1948F0);
  char v37 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v34 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v35 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v35) {
          goto LABEL_33;
        }
        unint64_t v23 = v36[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v35) {
            goto LABEL_33;
          }
          unint64_t v23 = v36[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v35)
            {
LABEL_33:
              swift_release();
              id v3 = v34;
              if (v37)
              {
                uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
                if (v33 >= 64) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v36 = -1 << v33;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v36[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v35) {
                  goto LABEL_33;
                }
                unint64_t v23 = v36[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v5 + 56) + v29);
      if ((v37 & 1) == 0)
      {
        id v32 = v30;
        swift_bridgeObjectRetain();
      }
      sub_24DCC97E8();
      sub_24DCCAFF8();
      sub_24DCC98F8();
      uint64_t v14 = sub_24DCCB048();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FD6CC(uint64_t a1, char a2)
{
  return sub_24D705F34(a1, a2, &qword_26986AF58);
}

uint64_t sub_24D6FD6D8(uint64_t a1, char a2)
{
  return sub_24D6FDD10(a1, a2, (uint64_t *)&unk_26986B168);
}

uint64_t sub_24D6FD6E4(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986B058);
  char v38 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    int64_t v35 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              id v3 = v35;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v37 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v37[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void **)(*(void *)(v5 + 48) + v29);
      uint64_t v31 = *(void **)(*(void *)(v5 + 56) + v29);
      if ((v38 & 1) == 0)
      {
        id v32 = v30;
        id v33 = v31;
      }
      sub_24DCC97E8();
      sub_24DCCAFF8();
      sub_24DCC98F8();
      uint64_t v14 = sub_24DCCB048();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v7 + 48) + v19) = v30;
      *(void *)(*(void *)(v7 + 56) + v19) = v31;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FDA04(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B197E68);
  char v37 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          id v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t result = sub_24DCCB048();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v34;
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FDD10(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v40 = a2;
  uint64_t v7 = sub_24DCCA9E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v39 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  char v37 = v3;
  int64_t v38 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v21 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v22 = v21 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38) {
      break;
    }
    int64_t v24 = (void *)(v6 + 64);
    unint64_t v25 = *(void *)(v39 + 8 * v23);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v23 + 1;
      if (v23 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v39 + 8 * v14);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v14 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v38) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v39 + 8 * v14);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v26;
      }
    }
LABEL_30:
    unint64_t v11 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_31:
    uint64_t v31 = 8 * v22;
    uint64_t v32 = *(void **)(*(void *)(v6 + 48) + v31);
    uint64_t v33 = *(void **)(*(void *)(v6 + 56) + v31);
    if ((v40 & 1) == 0)
    {
      id v34 = v32;
      id v35 = v33;
    }
    sub_24DCC97E8();
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t v15 = sub_24DCCB048();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v17 = v15 & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    uint64_t v20 = 8 * v19;
    *(void *)(*(void *)(v8 + 48) + v20) = v32;
    *(void *)(*(void *)(v8 + 56) + v20) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v37;
  int64_t v24 = (void *)(v6 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v6 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v24 = -1 << v36;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_24D6FE03C(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  uint64_t v40 = *(void *)(v5 - 8);
  uint64_t v41 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B194118);
  int v42 = a2;
  uint64_t v9 = sub_24DCCA9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  uint64_t v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v37 = v2;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v19 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v38) {
      break;
    }
    unint64_t v22 = v39;
    unint64_t v23 = v39[v21];
    ++v17;
    if (!v23)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v38) {
        goto LABEL_34;
      }
      unint64_t v23 = v39[v17];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v38)
        {
LABEL_34:
          swift_release();
          id v3 = v37;
          if ((v42 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v39[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v17 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v38) {
              goto LABEL_34;
            }
            unint64_t v23 = v39[v17];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v24;
      }
    }
LABEL_21:
    unint64_t v14 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v17 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v40 + 72);
    uint64_t v26 = *(void *)(v8 + 48) + v25 * v20;
    if (v42)
    {
      sub_24D7190A4(v26, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
    }
    else
    {
      sub_24D71903C(v26, (uint64_t)v7, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
      uint64_t v27 = *(void *)(*(void *)(v8 + 56) + 8 * v20);
      swift_retain();
    }
    sub_24DCCAFF8();
    sub_24DCC8A58();
    sub_24D718E44();
    sub_24DCC9688();
    sub_24DCCA3A8();
    uint64_t result = sub_24DCCB048();
    uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v29 = result & ~v28;
    unint64_t v30 = v29 >> 6;
    if (((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v29) & ~*(void *)(v15 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v28) >> 6;
      do
      {
        if (++v30 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v33 = v30 == v32;
        if (v30 == v32) {
          unint64_t v30 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v15 + 8 * v30);
      }
      while (v34 == -1);
      unint64_t v18 = __clz(__rbit64(~v34)) + (v30 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t result = sub_24D7190A4((uint64_t)v7, *(void *)(v10 + 48) + v25 * v18, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
    *(void *)(*(void *)(v10 + 56) + 8 * v18) = v27;
    ++*(void *)(v10 + 16);
  }
  swift_release();
  id v3 = v37;
  unint64_t v22 = v39;
  if ((v42 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
  if (v35 >= 64) {
    bzero(v22, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v35;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v10;
  return result;
}

uint64_t sub_24D6FE44C(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v53 = sub_24DCC8CE8();
  uint64_t v5 = *(void *)(v53 - 8);
  MEMORY[0x270FA5388](v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  uint64_t v49 = *(void *)(v7 - 8);
  uint64_t v50 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986B178);
  int v51 = a2;
  uint64_t v11 = v10;
  uint64_t v12 = sub_24DCCA9E8();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  int v45 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v43 = v2;
  int64_t v44 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v46 = v5 + 16;
  uint64_t v48 = v5;
  unint64_t v18 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v44) {
      break;
    }
    uint64_t v26 = v45;
    unint64_t v27 = v45[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v44) {
        goto LABEL_34;
      }
      unint64_t v27 = v45[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v44)
        {
LABEL_34:
          swift_release();
          id v3 = v43;
          if ((v51 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v45[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v44) {
              goto LABEL_34;
            }
            unint64_t v27 = v45[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    uint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v51)
    {
      sub_24D7190A4(v30, (uint64_t)v9, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      sub_24D71903C(v30, (uint64_t)v9, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_24DCCAFF8();
    sub_24DCC8A58();
    sub_24D718E44();
    sub_24DCC9688();
    sub_24DCC98F8();
    uint64_t result = sub_24DCCB048();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    sub_24D7190A4((uint64_t)v9, *(void *)(v13 + 48) + v29 * v22, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
    uint64_t result = (*v18)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  id v3 = v43;
  uint64_t v26 = v45;
  if ((v51 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *id v3 = v13;
  return result;
}

uint64_t sub_24D6FE940(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B0C8);
  char v39 = a2;
  uint64_t result = sub_24DCCA9E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v37 = (void *)(v5 + 64);
    uint64_t v38 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v18 >= v36) {
          goto LABEL_37;
        }
        unint64_t v19 = v37[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v36) {
            goto LABEL_37;
          }
          unint64_t v19 = v37[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v36)
            {
LABEL_37:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_44;
              }
              uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
              if (v35 >= 64) {
                bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v37 = -1 << v35;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v37[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_46;
                }
                if (v8 >= v36) {
                  goto LABEL_37;
                }
                unint64_t v19 = v37[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 48) + 16 * v17;
      uint64_t v22 = *(void *)v21;
      int v23 = *(unsigned __int8 *)(v21 + 8);
      uint64_t v24 = *(void *)(v5 + 56) + 32 * v17;
      uint64_t v25 = *(void *)v24;
      char v40 = *(unsigned char *)(v24 + 8);
      uint64_t v27 = *(void *)(v24 + 16);
      uint64_t v26 = *(void *)(v24 + 24);
      if ((v39 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_24DCCAFF8();
      if (v23)
      {
        sub_24DCCB008();
        if (v23 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v28 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v29) & ~*(void *)(v12 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v12 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v13 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v22;
      *(unsigned char *)(v14 + 8) = v23;
      uint64_t v15 = *(void *)(v7 + 56) + 32 * v13;
      *(void *)uint64_t v15 = v25;
      *(unsigned char *)(v15 + 8) = v40;
      *(void *)(v15 + 16) = v27;
      *(void *)(v15 + 24) = v26;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v38;
    }
  }
  uint64_t result = swift_release();
LABEL_44:
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FEC9C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986AFA0);
  char v48 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v44 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v46 = v5;
  uint64_t v47 = v7;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      int64_t v49 = v13;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v43) {
      break;
    }
    uint64_t v22 = v44;
    unint64_t v23 = v44[v21];
    int64_t v24 = v13 + 1;
    if (!v23)
    {
      int64_t v24 = v13 + 2;
      if (v13 + 2 >= v43) {
        goto LABEL_33;
      }
      unint64_t v23 = v44[v24];
      if (!v23)
      {
        uint64_t v25 = v13 + 3;
        if (v13 + 3 >= v43)
        {
LABEL_33:
          swift_release();
          id v3 = v42;
          uint64_t v7 = v47;
          if ((v48 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = v44[v25];
        if (!v23)
        {
          while (1)
          {
            int64_t v24 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v24 >= v43) {
              goto LABEL_33;
            }
            unint64_t v23 = v44[v24];
            ++v25;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v24 = v13 + 3;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    int64_t v49 = v24;
    unint64_t v20 = __clz(__rbit64(v23)) + (v24 << 6);
LABEL_31:
    uint64_t v30 = *(void *)(v5 + 56);
    uint64_t v31 = *(void *)(v5 + 48) + 56 * v20;
    id v32 = *(id *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    char v34 = *(unsigned char *)(v31 + 9);
    uint64_t v36 = *(void *)(v31 + 16);
    uint64_t v35 = *(void *)(v31 + 24);
    long long v37 = *(_OWORD *)(v31 + 32);
    char v38 = *(unsigned char *)(v31 + 48);
    char v39 = *(unsigned char *)(v31 + 49);
    uint64_t v40 = *(void *)(v30 + 8 * v20);
    if ((v48 & 1) == 0)
    {
      long long v45 = *(_OWORD *)(v31 + 32);
      sub_24D4018B8(*(id *)v31, *(unsigned __int8 *)(v31 + 8), *(unsigned char *)(v31 + 9));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      long long v37 = v45;
    }
    *(void *)&long long v50 = v32;
    BYTE8(v50) = v33;
    BYTE9(v50) = v34;
    *(void *)&long long v51 = v36;
    *((void *)&v51 + 1) = v35;
    long long v52 = v37;
    LOBYTE(v53) = v38;
    HIBYTE(v53) = v39;
    uint64_t v7 = v47;
    sub_24DCCAFF8();
    sub_24D6EAB4C();
    uint64_t result = sub_24DCCB048();
    uint64_t v14 = -1 << *(unsigned char *)(v47 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v16 == v27;
        if (v16 == v27) {
          unint64_t v16 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v16);
      }
      while (v29 == -1);
      unint64_t v17 = __clz(__rbit64(~v29)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v47 + 48) + 56 * v17;
    *(_OWORD *)uint64_t v18 = v50;
    *(_OWORD *)(v18 + 16) = v51;
    *(_OWORD *)(v18 + 32) = v52;
    *(_WORD *)(v18 + 48) = v53;
    *(void *)(*(void *)(v47 + 56) + 8 * v17) = v40;
    ++*(void *)(v47 + 16);
    uint64_t v5 = v46;
    int64_t v13 = v49;
  }
  swift_release();
  id v3 = v42;
  uint64_t v22 = v44;
  if ((v48 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v41 = 1 << *(unsigned char *)(v5 + 32);
  if (v41 >= 64) {
    bzero(v22, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v41;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

void sub_24D6FF034(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986AE58);
  char v6 = a2;
  uint64_t v30 = (void *)sub_24DCCA9E8();
  if (*(void *)(v5 + 16))
  {
    char v26 = v2;
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v28 = (void *)(v5 + 64);
    uint64_t v8 = -1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    unint64_t v9 = v8 & *(void *)(v5 + 64);
    int64_t v27 = (unint64_t)(v7 + 63) >> 6;
    swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v11 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v12 = v11 | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return;
        }
        if (v13 >= v27) {
          goto LABEL_22;
        }
        unint64_t v14 = v28[v13];
        ++v10;
        if (!v14)
        {
          int64_t v10 = v13 + 1;
          if (v13 + 1 >= v27) {
            goto LABEL_22;
          }
          unint64_t v14 = v28[v10];
          if (!v14)
          {
            int64_t v15 = v13 + 2;
            if (v15 >= v27)
            {
LABEL_22:
              swift_release();
              id v3 = v26;
              if (v6)
              {
                uint64_t v25 = 1 << *(unsigned char *)(v5 + 32);
                if (v25 > 63) {
                  bzero(v28, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v28 = -1 << v25;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v14 = v28[v15];
            if (!v14)
            {
              while (1)
              {
                int64_t v10 = v15 + 1;
                if (__OFADD__(v15, 1)) {
                  goto LABEL_29;
                }
                if (v10 >= v27) {
                  goto LABEL_22;
                }
                unint64_t v14 = v28[v10];
                ++v15;
                if (v14) {
                  goto LABEL_19;
                }
              }
            }
            int64_t v10 = v15;
          }
        }
LABEL_19:
        unint64_t v9 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
      }
      uint64_t v16 = *(void *)(v5 + 48) + 56 * v12;
      uint64_t v17 = *(void *)v16;
      uint64_t v18 = *(void *)(v16 + 8);
      long long v19 = *(_OWORD *)(v16 + 16);
      char v20 = *(unsigned char *)(v16 + 32);
      char v21 = *(unsigned char *)(v16 + 33);
      uint64_t v23 = *(void *)(v16 + 40);
      uint64_t v22 = *(void *)(v16 + 48);
      double v24 = *(double *)(*(void *)(v5 + 56) + 8 * v12);
      if ((v6 & 1) == 0)
      {
        long long v29 = *(_OWORD *)(v16 + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        long long v19 = v29;
      }
      v31[0] = v17;
      v31[1] = v18;
      long long v32 = v19;
      char v33 = v20;
      char v34 = v21;
      uint64_t v35 = v23;
      uint64_t v36 = v22;
      sub_24D7177F4((uint64_t)v31, v30, v24);
    }
  }
  swift_release();
  *id v3 = v30;
}

uint64_t sub_24D6FF284(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986AF98);
  uint64_t result = sub_24DCCA9E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v37 = a2;
    int64_t v8 = 0;
    char v39 = (void *)(v5 + 64);
    uint64_t v40 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v18 >= v38) {
          goto LABEL_35;
        }
        unint64_t v19 = v39[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v38) {
            goto LABEL_35;
          }
          unint64_t v19 = v39[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v38)
            {
LABEL_35:
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_42;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v39 = -1 << v36;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v39[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_44;
                }
                if (v8 >= v38) {
                  goto LABEL_35;
                }
                unint64_t v19 = v39[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(v5 + 56);
      uint64_t v22 = *(void *)(v5 + 48) + 16 * v17;
      int v23 = *(unsigned __int8 *)(v22 + 8);
      uint64_t v24 = *(void *)v22;
      uint64_t v25 = (uint64_t *)(v21 + 24 * v17);
      uint64_t v26 = v25[2];
      char v27 = *((unsigned char *)v25 + 8);
      uint64_t v28 = *v25;
      sub_24DCCAFF8();
      if (v23)
      {
        sub_24DCCB008();
        if (v23 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v12 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v13 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v24;
      *(unsigned char *)(v14 + 8) = v23;
      uint64_t v15 = *(void *)(v7 + 56) + 24 * v13;
      *(void *)uint64_t v15 = v28;
      *(unsigned char *)(v15 + 8) = v27;
      *(void *)(v15 + 16) = v26;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v40;
    }
  }
  uint64_t result = swift_release();
LABEL_42:
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FF5D0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986AF90);
  char v39 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v35 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    char v37 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v36 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v37[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v37[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              swift_release();
              id v3 = v35;
              if (v39)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
                if (v34 >= 64) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v37 = -1 << v34;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v37[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v37[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      uint64_t v30 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v31 = *(void *)v30;
      char v32 = *(unsigned char *)(v30 + 8);
      uint64_t v40 = *(void *)(v30 + 16);
      if ((v39 & 1) == 0) {
        id v33 = v29;
      }
      sub_24DCC97E8();
      sub_24DCCAFF8();
      sub_24DCC98F8();
      uint64_t v14 = sub_24DCCB048();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v18;
      *(void *)uint64_t v19 = v31;
      *(unsigned char *)(v19 + 8) = v32;
      *(void *)(v19 + 16) = v40;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D6FF914(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for SyncState();
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1908C8);
  int v41 = a2;
  uint64_t v9 = sub_24DCCA9E8();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_42;
  }
  v37[0] = v2;
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  char v39 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  int64_t v38 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  swift_retain();
  int64_t v16 = 0;
  v37[1] = "";
  _OWORD v37[2] = "is_detached_root";
LABEL_9:
  if (v14)
  {
    unint64_t v22 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v23 = v22 | (v16 << 6);
    goto LABEL_31;
  }
  int64_t v24 = v16 + 1;
  if (__OFADD__(v16, 1)) {
    goto LABEL_43;
  }
  if (v24 >= v38)
  {
    swift_release();
    id v3 = (uint64_t *)v37[0];
    char v25 = v39;
    if (v41)
    {
LABEL_38:
      uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
      if (v35 >= 64) {
        bzero(v25, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *char v25 = -1 << v35;
      }
      *(void *)(v8 + 16) = 0;
    }
  }
  else
  {
    char v25 = v39;
    unint64_t v26 = v39[v24];
    ++v16;
    if (v26) {
      goto LABEL_30;
    }
    int64_t v16 = v24 + 1;
    if (v24 + 1 >= v38) {
      goto LABEL_35;
    }
    unint64_t v26 = v39[v16];
    if (v26)
    {
LABEL_30:
      unint64_t v14 = (v26 - 1) & v26;
      unint64_t v23 = __clz(__rbit64(v26)) + (v16 << 6);
LABEL_31:
      char v32 = *(unsigned char *)(*(void *)(v8 + 48) + v23);
      uint64_t v33 = *(void *)(v40 + 72);
      uint64_t v34 = *(void *)(v8 + 56) + v33 * v23;
      if (v41) {
        sub_24D7190A4(v34, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SyncState);
      }
      else {
        sub_24D71903C(v34, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for SyncState);
      }
      sub_24DCCAFF8();
      sub_24DCC98F8();
      swift_bridgeObjectRelease();
      uint64_t v17 = sub_24DCCB048();
      uint64_t v18 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v19 = v17 & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v19) & ~*(void *)(v15 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v29 || (v28 & 1) == 0)
      {
        BOOL v30 = v20 == v29;
        if (v20 == v29) {
          unint64_t v20 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v20);
        if (v31 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v31)) + (v20 << 6);
LABEL_8:
          *(void *)(v15 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
          *(unsigned char *)(*(void *)(v10 + 48) + v21) = v32;
          sub_24D7190A4((uint64_t)v7, *(void *)(v10 + 56) + v33 * v21, (uint64_t (*)(void))type metadata accessor for SyncState);
          ++*(void *)(v10 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x24D6FFE20);
    }
    int64_t v27 = v24 + 2;
    if (v27 < v38)
    {
      unint64_t v26 = v39[v27];
      if (!v26)
      {
        while (1)
        {
          int64_t v16 = v27 + 1;
          if (__OFADD__(v27, 1)) {
            goto LABEL_44;
          }
          if (v16 >= v38) {
            goto LABEL_35;
          }
          unint64_t v26 = v39[v16];
          ++v27;
          if (v26) {
            goto LABEL_30;
          }
        }
      }
      int64_t v16 = v27;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    id v3 = (uint64_t *)v37[0];
    if (v41) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *id v3 = v10;
  return result;
}

uint64_t sub_24D6FFE44(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986AF28);
  char v40 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  int64_t v38 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  for (i = v5; ; uint64_t v5 = i)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = v38;
    unint64_t v24 = v38[v22];
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = v38[v13];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          id v3 = v36;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = v38[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = v38[v13];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    BOOL v30 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
    uint64_t v31 = *(void *)(v5 + 56) + 16 * v21;
    uint64_t v32 = *(void *)v31;
    char v33 = *(unsigned char *)(v31 + 8);
    if ((v40 & 1) == 0) {
      id v34 = v30;
    }
    sub_24DCC97E8();
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t v14 = sub_24DCCB048();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v7 + 48) + 8 * v18) = v30;
    uint64_t v19 = *(void *)(v7 + 56) + 16 * v18;
    *(void *)uint64_t v19 = v32;
    *(unsigned char *)(v19 + 8) = v33;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v36;
  unint64_t v23 = v38;
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D700180(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986AF30);
  char v39 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    int64_t v36 = v2;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              id v3 = v36;
              if (v39)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
                if (v35 >= 64) {
                  bzero(v38, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v38 = -1 << v35;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = *(void **)(*(void *)(v5 + 48) + 8 * v21);
      uint64_t v30 = *(void *)(v5 + 56) + 24 * v21;
      uint64_t v31 = *(void **)v30;
      long long v40 = *(_OWORD *)(v30 + 8);
      if ((v39 & 1) == 0)
      {
        swift_retain();
        id v32 = v29;
        id v33 = v31;
        id v34 = (id)v40;
      }
      sub_24DCC97E8();
      sub_24DCCAFF8();
      sub_24DCC98F8();
      uint64_t v14 = sub_24DCCB048();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v16 = v14 & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v7 + 48) + 8 * v18) = v29;
      uint64_t v19 = *(void *)(v7 + 56) + 24 * v18;
      *(void *)uint64_t v19 = v31;
      *(_OWORD *)(v19 + 8) = v40;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D7004CC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986AF38);
  uint64_t result = sub_24DCCA9E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v37 = a2;
    int64_t v8 = 0;
    char v39 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v17 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v19 >= v38) {
          goto LABEL_35;
        }
        unint64_t v20 = v39[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v38) {
            goto LABEL_35;
          }
          unint64_t v20 = v39[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v38)
            {
LABEL_35:
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_42;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v39 = -1 << v36;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v39[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_44;
                }
                if (v8 >= v38) {
                  goto LABEL_35;
                }
                unint64_t v20 = v39[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v11 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 16 * v18;
      uint64_t v23 = *(void *)(v5 + 48) + v22;
      uint64_t v24 = *(void *)(v5 + 56) + v22;
      int v25 = *(unsigned __int8 *)(v23 + 8);
      uint64_t v26 = *(void *)v23;
      char v27 = *(unsigned char *)(v24 + 8);
      uint64_t v28 = *(void *)v24;
      sub_24DCCAFF8();
      if (v25)
      {
        sub_24DCCB008();
        if (v25 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v12 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v13 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = 16 * v13;
      uint64_t v15 = *(void *)(v7 + 48) + v14;
      *(void *)uint64_t v15 = v26;
      *(unsigned char *)(v15 + 8) = v25;
      uint64_t v16 = *(void *)(v7 + 56) + v14;
      *(void *)uint64_t v16 = v28;
      *(unsigned char *)(v16 + 8) = v27;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_42:
  *id v3 = v7;
  return result;
}

uint64_t sub_24D70080C(uint64_t a1, int a2)
{
  return sub_24D6FBFF8(a1, a2, &qword_26B193630, (uint64_t *)&unk_26B1908D8);
}

uint64_t sub_24D700820(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D540);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_44;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v5 + 64);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      goto LABEL_45;
    }
    if (v17 >= v32) {
      break;
    }
    unint64_t v18 = v9[v17];
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v32) {
        break;
      }
      unint64_t v18 = v9[v13];
      if (!v18)
      {
        int64_t v19 = v17 + 2;
        if (v19 >= v32) {
          break;
        }
        unint64_t v18 = v9[v19];
        if (!v18)
        {
          while (1)
          {
            int64_t v13 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_46;
            }
            if (v13 >= v32) {
              goto LABEL_39;
            }
            unint64_t v18 = v9[v13];
            ++v19;
            if (v18) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v19;
      }
    }
LABEL_21:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_22:
    unsigned int v20 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v16);
    int64_t v21 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
    if (a2) {
      sub_24D3F7E7C(v21, v34);
    }
    else {
      sub_24D3F7E8C((uint64_t)v21, (uint64_t)v34);
    }
    sub_24DCCAFF8();
    switch((v20 >> 4) & 3)
    {
      case 1u:
        sub_24DCCB008();
        sub_24D3F8984((uint64_t)v33, v20 & 0xCF);
        break;
      case 2u:
        sub_24DCCB008();
        sub_24DCC98F8();
        swift_bridgeObjectRelease();
        break;
      case 3u:
        sub_24DCCB008();
        break;
      default:
        sub_24DCCB008();
        sub_24D3F8984((uint64_t)v33, v20);
        break;
    }
    uint64_t v22 = sub_24DCCB048();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = v22 & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v26 = 0;
    unint64_t v27 = (unint64_t)(63 - v23) >> 6;
    do
    {
      if (++v25 == v27 && (v26 & 1) != 0)
      {
        __break(1u);
LABEL_45:
        __break(1u);
LABEL_46:
        __break(1u);
        JUMPOUT(0x24D700C30);
      }
      BOOL v28 = v25 == v27;
      if (v25 == v27) {
        unint64_t v25 = 0;
      }
      v26 |= v28;
      uint64_t v29 = *(void *)(v12 + 8 * v25);
    }
    while (v29 == -1);
    unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
    *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v20;
    sub_24D3F7E7C(v34, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
    ++*(void *)(v7 + 16);
  }
LABEL_39:
  swift_release();
  id v3 = v2;
  if (a2)
  {
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    if (v30 >= 64) {
      bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      void *v9 = -1 << v30;
    }
    *(void *)(v5 + 16) = 0;
  }
LABEL_44:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D700C58(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D550);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_48;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_49;
  }
  if (v17 >= v11)
  {
    swift_release();
    id v3 = v33;
    unint64_t v18 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_44:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v18 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v11) {
      goto LABEL_41;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      unsigned int v21 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v16);
      uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
      if (a2) {
        sub_24D3F7E7C(v22, v35);
      }
      else {
        sub_24D3F7E8C((uint64_t)v22, (uint64_t)v35);
      }
      sub_24DCCAFF8();
      if (v21 >> 2 == 55 || v21 >> 2 == 63)
      {
LABEL_31:
        sub_24DCCB008();
      }
      else
      {
        sub_24DCCB008();
        switch(v21 >> 5)
        {
          case 2u:
          case 3u:
          case 4u:
            goto LABEL_31;
          default:
            sub_24DCCB008();
            sub_24DCC98F8();
            swift_bridgeObjectRelease();
            break;
        }
      }
      uint64_t v23 = sub_24DCCB048();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
          sub_24D3F7E7C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      JUMPOUT(0x24D701148);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v11)
    {
      unint64_t v19 = *(void *)(v34 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_50;
          }
          if (v13 >= v11) {
            goto LABEL_41;
          }
          unint64_t v19 = *(void *)(v34 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_41:
    swift_release();
    id v3 = v33;
    if (a2) {
      goto LABEL_44;
    }
  }
LABEL_48:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D70117C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D558);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_44;
  }
  unint64_t v33 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  swift_retain();
  int64_t v13 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v13 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v13 + 1;
  if (__OFADD__(v13, 1)) {
    goto LABEL_45;
  }
  if (v17 >= v11)
  {
    swift_release();
    id v3 = v33;
    unint64_t v18 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_40:
      uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
      if (v31 >= 64) {
        bzero(v18, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *unint64_t v18 = -1 << v31;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v34 + 8 * v17);
    ++v13;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v13 = v17 + 1;
    if (v17 + 1 >= v11) {
      goto LABEL_37;
    }
    unint64_t v19 = *(void *)(v34 + 8 * v13);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
      unsigned int v21 = *(unsigned __int8 *)(*(void *)(v5 + 48) + v16);
      uint64_t v22 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v16);
      if (a2) {
        sub_24D3F7E7C(v22, v35);
      }
      else {
        sub_24D3F7E8C((uint64_t)v22, (uint64_t)v35);
      }
      sub_24DCCAFF8();
      switch(v21 >> 5)
      {
        case 2u:
        case 3u:
        case 4u:
          sub_24DCCB008();
          break;
        default:
          sub_24DCCB008();
          sub_24DCC98F8();
          swift_bridgeObjectRelease();
          break;
      }
      uint64_t v23 = sub_24DCCB048();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = v23 & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      while (++v26 != v28 || (v27 & 1) == 0)
      {
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
        if (v30 != -1)
        {
          unint64_t v14 = __clz(__rbit64(~v30)) + (v26 << 6);
LABEL_7:
          *(void *)(v12 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
          *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
          sub_24D3F7E7C(v35, (_OWORD *)(*(void *)(v7 + 56) + 32 * v14));
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_45:
      __break(1u);
LABEL_46:
      __break(1u);
      JUMPOUT(0x24D701620);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v11)
    {
      unint64_t v19 = *(void *)(v34 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v13 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_46;
          }
          if (v13 >= v11) {
            goto LABEL_37;
          }
          unint64_t v19 = *(void *)(v34 + 8 * v13);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v13 = v20;
      goto LABEL_21;
    }
LABEL_37:
    swift_release();
    id v3 = v33;
    if (a2) {
      goto LABEL_40;
    }
  }
LABEL_44:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D701654(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986AF40);
  unint64_t v10 = (void *)sub_24DCCA9E8();
  if (*(void *)(v9 + 16))
  {
    char v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              id v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_24D3F0BA0(v24, (uint64_t)v8, &qword_26B18FF40);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_24D415FD0(v24, (uint64_t)v8, &qword_26B18FF40);
        uint64_t v18 = *(void *)(*(void *)(v9 + 56) + 8 * v20);
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_24D717A5C((uint64_t)v8, v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *id v3 = v10;
  return result;
}

uint64_t sub_24D7018F4(uint64_t a1, char a2)
{
  return sub_24D705F34(a1, a2, &qword_26986AF50);
}

uint64_t sub_24D701900(uint64_t a1, char a2)
{
  return sub_24D701918(a1, a2, &qword_26986D568);
}

uint64_t sub_24D70190C(uint64_t a1, char a2)
{
  return sub_24D701918(a1, a2, &qword_26986D570);
}

uint64_t sub_24D701918(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v7 = sub_24DCCA9E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  unint64_t v33 = v3;
  uint64_t v34 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v17 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v18 = v17 | (v15 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v19 >= v12) {
      break;
    }
    unint64_t v20 = (void *)(v6 + 64);
    unint64_t v21 = *(void *)(v34 + 8 * v19);
    ++v15;
    if (!v21)
    {
      int64_t v15 = v19 + 1;
      if (v19 + 1 >= v12) {
        goto LABEL_34;
      }
      unint64_t v21 = *(void *)(v34 + 8 * v15);
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v12)
        {
LABEL_34:
          swift_release();
          uint64_t v4 = v33;
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v21 = *(void *)(v34 + 8 * v22);
        if (!v21)
        {
          while (1)
          {
            int64_t v15 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_43;
            }
            if (v15 >= v12) {
              goto LABEL_34;
            }
            unint64_t v21 = *(void *)(v34 + 8 * v15);
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v15 = v22;
      }
    }
LABEL_21:
    unint64_t v11 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v15 << 6);
LABEL_22:
    char v23 = *(unsigned char *)(*(void *)(v6 + 48) + v18);
    uint64_t v24 = (_OWORD *)(*(void *)(v6 + 56) + 32 * v18);
    if (a2) {
      sub_24D3F7E7C(v24, v35);
    }
    else {
      sub_24D3F7E8C((uint64_t)v24, (uint64_t)v35);
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    swift_bridgeObjectRelease();
    uint64_t result = sub_24DCCB048();
    uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v13 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v16 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v13 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v8 + 48) + v16) = v23;
    uint64_t result = (uint64_t)sub_24D3F7E7C(v35, (_OWORD *)(*(void *)(v8 + 56) + 32 * v16));
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v33;
  unint64_t v20 = (void *)(v6 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v32 = 1 << *(unsigned char *)(v6 + 32);
  if (v32 >= 64) {
    bzero(v20, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v20 = -1 << v32;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_24D701C54(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986AF68);
  char v40 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v38 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    for (i = v5; ; uint64_t v5 = i)
    {
      if (v10)
      {
        unint64_t v20 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v21 = v20 | (v13 << 6);
      }
      else
      {
        int64_t v22 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v22 >= v37) {
          goto LABEL_33;
        }
        unint64_t v23 = v38[v22];
        ++v13;
        if (!v23)
        {
          int64_t v13 = v22 + 1;
          if (v22 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v23 = v38[v13];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v37)
            {
LABEL_33:
              swift_release();
              id v3 = v2;
              if (v40)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
                if (v36 >= 64) {
                  bzero(v38, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v38 = -1 << v36;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v38[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v13 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_40;
                }
                if (v13 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v23 = v38[v13];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v13 = v24;
          }
        }
LABEL_30:
        unint64_t v10 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v13 << 6);
      }
      uint64_t v29 = *(void *)(v5 + 48) + 32 * v21;
      BOOL v30 = *(void **)v29;
      uint64_t v31 = *(void **)(v29 + 8);
      uint64_t v32 = *(void **)(v29 + 16);
      char v33 = *(unsigned char *)(v29 + 24);
      uint64_t v34 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v21);
      uint64_t v35 = *v34;
      uint64_t v41 = v34[1];
      if ((v40 & 1) == 0)
      {
        sub_24D433278(v30, v31, v32, v33);
        swift_bridgeObjectRetain();
      }
      sub_24DCCAFF8();
      sub_24D607CBC((uint64_t)v42, v30, v31, v32, v33);
      uint64_t result = sub_24DCCB048();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = result & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v14) >> 6;
        do
        {
          if (++v16 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v16 == v26;
          if (v16 == v26) {
            unint64_t v16 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v11 + 8 * v16);
        }
        while (v28 == -1);
        unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
      }
      *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v7 + 48) + 32 * v17;
      *(void *)uint64_t v18 = v30;
      *(void *)(v18 + 8) = v31;
      *(void *)(v18 + 16) = v32;
      *(unsigned char *)(v18 + 24) = v33;
      int64_t v19 = (void *)(*(void *)(v7 + 56) + 16 * v17);
      *int64_t v19 = v35;
      v19[1] = v41;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D701F90(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26986AF70);
  char v42 = a2;
  uint64_t result = sub_24DCCA9E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v37 = v2;
    int64_t v8 = 0;
    char v39 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v38) {
          goto LABEL_33;
        }
        unint64_t v21 = v39[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v21 = v39[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v38)
            {
LABEL_33:
              if ((v42 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v37;
                goto LABEL_40;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v39 = -1 << v36;
              }
              id v3 = v37;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v39[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v21 = v39[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(v5 + 48) + 48 * v19;
      long long v29 = *(_OWORD *)v27;
      long long v28 = *(_OWORD *)(v27 + 16);
      uint64_t v30 = *(void *)(v27 + 32);
      char v31 = *(unsigned char *)(v27 + 40);
      char v32 = *(unsigned char *)(v27 + 41);
      char v33 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v35 = *v33;
      uint64_t v34 = v33[1];
      if ((v42 & 1) == 0)
      {
        long long v40 = *(_OWORD *)v27;
        long long v41 = *(_OWORD *)(v27 + 16);
        swift_bridgeObjectRetain();
        long long v29 = v40;
        long long v28 = v41;
      }
      v43[0] = v29;
      v43[1] = v28;
      uint64_t v44 = v30;
      char v45 = v31;
      char v46 = v32;
      sub_24DCCAFF8();
      sub_24D608028();
      uint64_t result = sub_24DCCB048();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = sub_24D3F0BA0((uint64_t)v43, *(void *)(v7 + 48) + 48 * v16, (uint64_t *)&unk_26B1926A0);
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      void *v17 = v35;
      v17[1] = v34;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *id v3 = v7;
  return result;
}

uint64_t sub_24D7022C0(uint64_t a1, char a2)
{
  return sub_24D704534(a1, a2, (uint64_t *)&unk_26B1948E0, (void (*)(uint64_t, unsigned char *))sub_24D57EC10);
}

uint64_t sub_24D7022E0(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B040);
  char v41 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_47;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v39 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v37 = v2;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v14 = v5;
  uint64_t v40 = v5;
  while (1)
  {
    if (v10)
    {
      unint64_t v17 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v18 = v17 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v19 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_48:
      __break(1u);
LABEL_49:
      __break(1u);
      return result;
    }
    if (v19 >= v38) {
      break;
    }
    int64_t v20 = v39;
    unint64_t v21 = v39[v19];
    ++v13;
    if (!v21)
    {
      int64_t v13 = v19 + 1;
      if (v19 + 1 >= v38) {
        goto LABEL_40;
      }
      unint64_t v21 = v39[v13];
      if (!v21)
      {
        int64_t v22 = v19 + 2;
        if (v22 >= v38)
        {
LABEL_40:
          swift_release();
          id v3 = v37;
          if ((v41 & 1) == 0) {
            goto LABEL_47;
          }
          goto LABEL_41;
        }
        unint64_t v21 = v39[v22];
        if (!v21)
        {
          while (1)
          {
            int64_t v13 = v22 + 1;
            if (__OFADD__(v22, 1)) {
              goto LABEL_49;
            }
            if (v13 >= v38) {
              goto LABEL_40;
            }
            unint64_t v21 = v39[v13];
            ++v22;
            if (v21) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v22;
      }
    }
LABEL_21:
    unint64_t v10 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v13 << 6);
LABEL_22:
    uint64_t v23 = 8 * v18;
    uint64_t v24 = *(void *)(*(void *)(v14 + 48) + v23);
    uint64_t v25 = *(void *)(*(void *)(v14 + 56) + v23);
    if ((v41 & 1) == 0)
    {
      swift_retain();
      swift_bridgeObjectRetain();
    }
    sub_24DCCAFF8();
    uint64_t v26 = *(void **)(v24 + 16);
    uint64_t v27 = *(unsigned __int8 *)(v24 + 24);
    if (*(unsigned char *)(v24 + 25))
    {
      sub_24DCCB008();
      sub_24DCC97E8();
      id v28 = v26;
      sub_24DCC98F8();
      uint64_t v14 = v40;
      swift_bridgeObjectRelease();
      sub_24D40160C(v26, v27, 1);
    }
    else
    {
      sub_24DCCB008();
      if (v27)
      {
        sub_24DCCB008();
        if (v27 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
    }
    uint64_t result = sub_24DCCB048();
    uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v30 = result & ~v29;
    unint64_t v31 = v30 >> 6;
    if (((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v30) & ~*(void *)(v11 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_48;
        }
        BOOL v34 = v31 == v33;
        if (v31 == v33) {
          unint64_t v31 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v11 + 8 * v31);
      }
      while (v35 == -1);
      unint64_t v15 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(void *)(v11 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t v16 = 8 * v15;
    *(void *)(*(void *)(v7 + 48) + v16) = v24;
    *(void *)(*(void *)(v7 + 56) + v16) = v25;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v37;
  int64_t v20 = v39;
  if ((v41 & 1) == 0) {
    goto LABEL_47;
  }
LABEL_41:
  uint64_t v36 = 1 << *(unsigned char *)(v40 + 32);
  if (v36 >= 64) {
    bzero(v20, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v20 = -1 << v36;
  }
  *(void *)(v40 + 16) = 0;
LABEL_47:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D7026BC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B038);
  char v39 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v36 = v2;
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    uint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v13;
    if (!v24)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v13);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          id v3 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v13 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v13);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v13 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    char v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((v39 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    sub_24DCC97E8();
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t v14 = sub_24DCCB048();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v11 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v11 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v36;
  uint64_t v23 = (void *)(v5 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D7029EC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B194130);
  uint64_t result = sub_24DCCA9E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    unint64_t v31 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (void *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_34;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_34;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_34:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v31;
                goto LABEL_41;
              }
              uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v9 = -1 << v30;
              }
              id v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v13) {
                  goto LABEL_34;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      uint64_t v22 = *(void *)(v5 + 56) + 16 * v17;
      if (a2) {
        sub_24D433924(v22, (uint64_t)v32);
      }
      else {
        sub_24D6D30BC(v22, (uint64_t)v32);
      }
      uint64_t result = sub_24DCCAFE8();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      uint64_t result = sub_24D433924((uint64_t)v32, *(void *)(v7 + 56) + 16 * v15);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *id v3 = v7;
  return result;
}

uint64_t sub_24D702CB0(uint64_t a1, int a2, uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v52 = a3(0);
  uint64_t v8 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  long long v51 = (char *)&v44 - v9;
  uint64_t v10 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  int v50 = a2;
  uint64_t v11 = sub_24DCCA9E8();
  uint64_t v12 = v11;
  if (!*(void *)(v10 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 64);
  uint64_t v47 = (void *)(v10 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  char v45 = v4;
  int64_t v46 = (unint64_t)(v13 + 63) >> 6;
  char v48 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v49 = v8;
  unint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
  uint64_t v18 = v11 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  while (1)
  {
    if (v16)
    {
      unint64_t v23 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v24 = v23 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v46) {
      break;
    }
    char v26 = v47;
    unint64_t v27 = v47[v25];
    ++v20;
    if (!v27)
    {
      int64_t v20 = v25 + 1;
      if (v25 + 1 >= v46) {
        goto LABEL_34;
      }
      unint64_t v27 = v47[v20];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v46)
        {
LABEL_34:
          swift_release();
          uint64_t v6 = v45;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v47[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v20 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v46) {
              goto LABEL_34;
            }
            unint64_t v27 = v47[v20];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v28;
      }
    }
LABEL_21:
    unint64_t v16 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v20 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v10 + 56);
    uint64_t v30 = v10;
    unint64_t v31 = (uint64_t *)(*(void *)(v10 + 48) + 16 * v24);
    uint64_t v32 = *v31;
    uint64_t v33 = v31[1];
    uint64_t v34 = *(void *)(v49 + 72);
    uint64_t v35 = v29 + v34 * v24;
    if (v50)
    {
      (*v17)(v51, v35, v52);
    }
    else
    {
      (*v48)(v51, v35, v52);
      swift_bridgeObjectRetain();
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t result = sub_24DCCB048();
    uint64_t v36 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v37 = result & ~v36;
    unint64_t v38 = v37 >> 6;
    if (((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v37) & ~*(void *)(v18 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v39 = 0;
      unint64_t v40 = (unint64_t)(63 - v36) >> 6;
      do
      {
        if (++v38 == v40 && (v39 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v41 = v38 == v40;
        if (v38 == v40) {
          unint64_t v38 = 0;
        }
        v39 |= v41;
        uint64_t v42 = *(void *)(v18 + 8 * v38);
      }
      while (v42 == -1);
      unint64_t v21 = __clz(__rbit64(~v42)) + (v38 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t v22 = (void *)(*(void *)(v12 + 48) + 16 * v21);
    void *v22 = v32;
    v22[1] = v33;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 56) + v34 * v21, v51, v52);
    ++*(void *)(v12 + 16);
    uint64_t v10 = v30;
  }
  swift_release();
  uint64_t v6 = v45;
  char v26 = v47;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v43 = 1 << *(unsigned char *)(v10 + 32);
  if (v43 >= 64) {
    bzero(v26, ((unint64_t)(v43 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *char v26 = -1 << v43;
  }
  *(void *)(v10 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v6 = v12;
  return result;
}

uint64_t sub_24D70309C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B140);
  uint64_t v10 = (void *)sub_24DCCA9E8();
  if (*(void *)(v9 + 16))
  {
    unint64_t v27 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v19 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v21 >= v15) {
          goto LABEL_23;
        }
        unint64_t v22 = v12[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v22 = v12[v17];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v27;
                goto LABEL_30;
              }
              uint64_t v25 = 1 << *(unsigned char *)(v9 + 32);
              if (v25 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v25;
              }
              id v3 = v27;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v22 = v12[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v17 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v22 = v12[v17];
                ++v23;
                if (v22) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v23;
          }
        }
LABEL_20:
        unint64_t v14 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v20;
      if (a2)
      {
        sub_24D3F0BA0(v24, (uint64_t)v8, &qword_26B18FF40);
        id v18 = *(id *)(*(void *)(v9 + 56) + 8 * v20);
      }
      else
      {
        sub_24D415FD0(v24, (uint64_t)v8, &qword_26B18FF40);
        id v18 = *(id *)(*(void *)(v9 + 56) + 8 * v20);
      }
      uint64_t result = sub_24D717A5C((uint64_t)v8, (uint64_t)v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *id v3 = v10;
  return result;
}

uint64_t sub_24D703338(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B128);
  uint64_t v10 = (void *)sub_24DCCA9E8();
  if (*(void *)(v9 + 16))
  {
    int64_t v28 = v3;
    uint64_t v11 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v12 = (void *)(v9 + 64);
    uint64_t v13 = -1;
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    unint64_t v14 = v13 & *(void *)(v9 + 64);
    int64_t v15 = (unint64_t)(v11 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v21 = v20 | (v17 << 6);
      }
      else
      {
        int64_t v22 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v22 >= v15) {
          goto LABEL_23;
        }
        unint64_t v23 = v12[v22];
        ++v17;
        if (!v23)
        {
          int64_t v17 = v22 + 1;
          if (v22 + 1 >= v15) {
            goto LABEL_23;
          }
          unint64_t v23 = v12[v17];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v15)
            {
LABEL_23:
              swift_release();
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v28;
                goto LABEL_30;
              }
              uint64_t v26 = 1 << *(unsigned char *)(v9 + 32);
              if (v26 >= 64) {
                bzero((void *)(v9 + 64), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v12 = -1 << v26;
              }
              id v3 = v28;
              *(void *)(v9 + 16) = 0;
              break;
            }
            unint64_t v23 = v12[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v17 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_32;
                }
                if (v17 >= v15) {
                  goto LABEL_23;
                }
                unint64_t v23 = v12[v17];
                ++v24;
                if (v23) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v17 = v24;
          }
        }
LABEL_20:
        unint64_t v14 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v17 << 6);
      }
      uint64_t v25 = *(void *)(v9 + 48) + *(void *)(v6 + 72) * v21;
      if (a2)
      {
        sub_24D3F0BA0(v25, (uint64_t)v8, &qword_26B18FF40);
        id v18 = *(void **)(*(void *)(v9 + 56) + 8 * v21);
      }
      else
      {
        sub_24D415FD0(v25, (uint64_t)v8, &qword_26B18FF40);
        id v18 = *(void **)(*(void *)(v9 + 56) + 8 * v21);
        id v19 = v18;
      }
      uint64_t result = sub_24D717A5C((uint64_t)v8, (uint64_t)v18, v10);
    }
  }
  uint64_t result = swift_release();
LABEL_30:
  *id v3 = v10;
  return result;
}

uint64_t sub_24D7035D8(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B130);
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v2;
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    unint64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          id v3 = v36;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    unint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      id v34 = v32;
    }
    uint64_t result = sub_24DCCA388();
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  id v3 = v36;
  unint64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D7038B0(uint64_t a1, char a2)
{
  return sub_24D703BD4(a1, a2, &qword_26B194380);
}

uint64_t sub_24D7038BC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B0F0);
  char v37 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v35) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v36 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v35) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v36 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v35)
        {
LABEL_33:
          swift_release();
          if ((v37 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v36 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v35) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v36 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v37 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t result = sub_24DCCB048();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D703BD4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v39 = a2;
  uint64_t v7 = sub_24DCCA9E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v38 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v36 = v3;
  int64_t v37 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v37) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v38 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v37) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v38 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v37)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v36;
          if ((v39 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v38 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v37) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v38 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    id v33 = *(void **)(*(void *)(v6 + 56) + 8 * v21);
    if ((v39 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v34 = v33;
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t result = sub_24DCCB048();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v36;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v35 = 1 << *(unsigned char *)(v6 + 32);
  if (v35 >= 64) {
    bzero(v23, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v23 = -1 << v35;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_24D703EE0(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v7 = sub_24DCCA9E8();
  uint64_t v8 = v7;
  if (*(void *)(v6 + 16))
  {
    uint64_t v35 = v3;
    uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
    int64_t v37 = (void *)(v6 + 64);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v6 + 64);
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = v7 + 64;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v21 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v22 = v21 | (v14 << 6);
      }
      else
      {
        int64_t v23 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v23 >= v36) {
          goto LABEL_33;
        }
        unint64_t v24 = v37[v23];
        ++v14;
        if (!v24)
        {
          int64_t v14 = v23 + 1;
          if (v23 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v24 = v37[v14];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v36)
            {
LABEL_33:
              swift_release();
              uint64_t v4 = v35;
              if (v38)
              {
                uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
                if (v34 >= 64) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v37 = -1 << v34;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v37[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v14 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_40;
                }
                if (v14 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v24 = v37[v14];
                ++v25;
                if (v24) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v14 = v25;
          }
        }
LABEL_30:
        unint64_t v11 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v14 << 6);
      }
      uint64_t v30 = 8 * v22;
      uint64_t v31 = *(void **)(*(void *)(v6 + 48) + v30);
      uint64_t v32 = *(void *)(*(void *)(v6 + 56) + v30);
      if ((v38 & 1) == 0)
      {
        id v33 = v31;
        swift_retain();
      }
      sub_24DCC97E8();
      sub_24DCCAFF8();
      sub_24DCC98F8();
      uint64_t v15 = sub_24DCCB048();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v16 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      if (((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v12 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v16) >> 6;
        do
        {
          if (++v18 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v18 == v27;
          if (v18 == v27) {
            unint64_t v18 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v12 + 8 * v18);
        }
        while (v29 == -1);
        unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
      }
      *(void *)(v12 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t v20 = 8 * v19;
      *(void *)(*(void *)(v8 + 48) + v20) = v31;
      *(void *)(*(void *)(v8 + 56) + v20) = v32;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_24D7041FC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B194378);
  char v36 = a2;
  uint64_t v6 = sub_24DCCA9E8();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t result = sub_24DCCB048();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    unint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *unint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *id v3 = v7;
  return result;
}

uint64_t sub_24D704514(uint64_t a1, char a2)
{
  return sub_24D704534(a1, a2, &qword_26B191488, (void (*)(uint64_t, unsigned char *))sub_24D57EC10);
}

uint64_t sub_24D704534(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v9 = sub_24DCCA9E8();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    int64_t v37 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v8 + 64);
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v16 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v16 << 6);
      }
      else
      {
        int64_t v21 = v16 + 1;
        if (__OFADD__(v16, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v16;
        if (!v22)
        {
          int64_t v16 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v16];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              swift_release();
              uint64_t v6 = v4;
              if (v38)
              {
                uint64_t v35 = 1 << *(unsigned char *)(v8 + 32);
                if (v35 >= 64) {
                  bzero(v37, ((unint64_t)(v35 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v37 = -1 << v35;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v16 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_41;
                }
                if (v16 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v16];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v16 = v23;
          }
        }
LABEL_21:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v16 << 6);
      }
      int64_t v24 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v20);
      uint64_t v26 = *v24;
      uint64_t v25 = v24[1];
      uint64_t v27 = *(void *)(v8 + 56) + 40 * v20;
      if (v38)
      {
        a4(v27, v39);
      }
      else
      {
        sub_24D433858(v27, (uint64_t)v39);
        swift_bridgeObjectRetain();
      }
      sub_24DCCAFF8();
      sub_24DCC98F8();
      uint64_t result = sub_24DCCB048();
      uint64_t v28 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v29) & ~*(void *)(v14 + 8 * (v29 >> 6)))) | v29 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v28) >> 6;
        do
        {
          if (++v30 == v32 && (v31 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v33 = v30 == v32;
          if (v30 == v32) {
            unint64_t v30 = 0;
          }
          v31 |= v33;
          uint64_t v34 = *(void *)(v14 + 8 * v30);
        }
        while (v34 == -1);
        unint64_t v17 = __clz(__rbit64(~v34)) + (v30 << 6);
      }
      *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      unint64_t v18 = (void *)(*(void *)(v10 + 48) + 16 * v17);
      *unint64_t v18 = v26;
      v18[1] = v25;
      uint64_t result = ((uint64_t (*)(unsigned char *, unint64_t))a4)(v39, *(void *)(v10 + 56) + 40 * v17);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v10;
  return result;
}

uint64_t sub_24D704854(uint64_t a1, char a2)
{
  return sub_24D70486C(a1, a2, &qword_26986D5A8);
}

uint64_t sub_24D704860(uint64_t a1, char a2)
{
  return sub_24D70486C(a1, a2, &qword_26B191490);
}

uint64_t sub_24D70486C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v38 = a2;
  uint64_t v7 = sub_24DCCA9E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v37 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  uint64_t v35 = v3;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v20 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v36) {
      break;
    }
    int64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v37 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v37 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v36) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v37 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v11 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    unint64_t v30 = (uint64_t *)(*(void *)(v6 + 48) + 16 * v21);
    uint64_t v32 = *v30;
    uint64_t v31 = v30[1];
    uint64_t v33 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v38 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t result = sub_24DCCB048();
    uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v8 + 48) + 16 * v18);
    *unint64_t v19 = v32;
    v19[1] = v31;
    *(void *)(*(void *)(v8 + 56) + 8 * v18) = v33;
    ++*(void *)(v8 + 16);
  }
  swift_release();
  uint64_t v4 = v35;
  int64_t v23 = (void *)(v6 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v23 = -1 << v34;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_24D704B74(uint64_t a1, char a2)
{
  return sub_24D705530(a1, a2, (uint64_t *)&unk_26986B110, MEMORY[0x263F8E7D0]);
}

uint64_t sub_24D704B94(uint64_t a1, char a2)
{
  return sub_24D705530(a1, a2, &qword_26B191498, MEMORY[0x263F8E7C8]);
}

uint64_t sub_24D704BB4(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v36 = a2;
  uint64_t v7 = sub_24DCCA9E8();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_41;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v6 + 64);
  int64_t v34 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = v7 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v34) {
      break;
    }
    unint64_t v19 = (void *)(v6 + 64);
    unint64_t v20 = *(void *)(v35 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v34) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v35 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v34)
        {
LABEL_34:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v35 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v14 >= v34) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v35 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v11 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    int64_t v22 = *(void **)(*(void *)(v6 + 48) + 8 * v17);
    int64_t v23 = (_OWORD *)(*(void *)(v6 + 56) + 32 * v17);
    if (v36)
    {
      sub_24D3F7E7C(v23, v37);
    }
    else
    {
      sub_24D3F7E8C((uint64_t)v23, (uint64_t)v37);
      id v24 = v22;
    }
    sub_24DCC97E8();
    sub_24DCCAFF8();
    sub_24DCC98F8();
    uint64_t v25 = sub_24DCCB048();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = v25 & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v12 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v15 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(void *)(*(void *)(v8 + 48) + 8 * v15) = v22;
    uint64_t result = (uint64_t)sub_24D3F7E7C(v37, (_OWORD *)(*(void *)(v8 + 56) + 32 * v15));
    ++*(void *)(v8 + 16);
  }
  swift_release();
  unint64_t v19 = (void *)(v6 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v6 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v19 = -1 << v33;
  }
  *(void *)(v6 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_24D704EEC(uint64_t a1, char a2)
{
  return sub_24D705530(a1, a2, &qword_26986B100, MEMORY[0x263F8E7C8]);
}

uint64_t sub_24D704F0C(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D580);
  uint64_t v6 = (void *)sub_24DCCA9E8();
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v8 = (void *)(v5 + 64);
    uint64_t v9 = -1;
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v11 = (unint64_t)(v7 + 63) >> 6;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v14 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v15 = v14 | (v13 << 6);
      }
      else
      {
        int64_t v16 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
          __break(1u);
LABEL_30:
          __break(1u);
          return result;
        }
        if (v16 >= v11) {
          goto LABEL_23;
        }
        unint64_t v17 = v8[v16];
        ++v13;
        if (!v17)
        {
          int64_t v13 = v16 + 1;
          if (v16 + 1 >= v11) {
            goto LABEL_23;
          }
          unint64_t v17 = v8[v13];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v11)
            {
LABEL_23:
              swift_release();
              if (a2)
              {
                uint64_t v21 = 1 << *(unsigned char *)(v5 + 32);
                if (v21 >= 64) {
                  bzero((void *)(v5 + 64), ((unint64_t)(v21 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v8 = -1 << v21;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v17 = v8[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v13 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_30;
                }
                if (v13 >= v11) {
                  goto LABEL_23;
                }
                unint64_t v17 = v8[v13];
                ++v18;
                if (v17) {
                  goto LABEL_20;
                }
              }
            }
            int64_t v13 = v18;
          }
        }
LABEL_20:
        unint64_t v10 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      unint64_t v20 = (_OWORD *)(*(void *)(v5 + 56) + 32 * v15);
      if (a2) {
        sub_24D3F7E7C(v20, v22);
      }
      else {
        sub_24D3F7E8C((uint64_t)v20, (uint64_t)v22);
      }
      uint64_t result = (uint64_t)sub_24D717CDC(v19, v22, v6);
    }
  }
  uint64_t result = swift_release();
  *id v3 = v6;
  return result;
}

uint64_t sub_24D7050FC(uint64_t a1, char a2)
{
  return sub_24D705530(a1, a2, &qword_26986B108, MEMORY[0x263F8E7D0]);
}

uint64_t sub_24D70511C(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = type metadata accessor for VFSItem(0);
  uint64_t v40 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986D5A0);
  int v41 = a2;
  uint64_t result = sub_24DCCA9E8();
  uint64_t v10 = result;
  if (*(void *)(v8 + 16))
  {
    int64_t v11 = 0;
    uint64_t v12 = *(void *)(v8 + 64);
    char v39 = (void *)(v8 + 64);
    uint64_t v13 = 1 << *(unsigned char *)(v8 + 32);
    if (v13 < 64) {
      uint64_t v14 = ~(-1 << v13);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v12;
    uint64_t v37 = v2;
    int64_t v38 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v16 = result + 64;
    while (1)
    {
      if (v15)
      {
        unint64_t v19 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v20 = v19 | (v11 << 6);
      }
      else
      {
        int64_t v21 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v21 >= v38) {
          goto LABEL_38;
        }
        unint64_t v22 = v39[v21];
        ++v11;
        if (!v22)
        {
          int64_t v11 = v21 + 1;
          if (v21 + 1 >= v38) {
            goto LABEL_38;
          }
          unint64_t v22 = v39[v11];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v38)
            {
LABEL_38:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v37;
                goto LABEL_45;
              }
              uint64_t v36 = 1 << *(unsigned char *)(v8 + 32);
              if (v36 >= 64) {
                bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v39 = -1 << v36;
              }
              id v3 = v37;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v39[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v11 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_47;
                }
                if (v11 >= v38) {
                  goto LABEL_38;
                }
                unint64_t v22 = v39[v11];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v23;
          }
        }
LABEL_21:
        unint64_t v15 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v11 << 6);
      }
      uint64_t v24 = *(void *)(v8 + 48) + 16 * v20;
      uint64_t v25 = *(void *)v24;
      int v26 = *(unsigned __int8 *)(v24 + 8);
      uint64_t v27 = *(void *)(v40 + 72);
      uint64_t v28 = *(void *)(v8 + 56) + v27 * v20;
      if (v41) {
        sub_24D7190A4(v28, (uint64_t)v7, type metadata accessor for VFSItem);
      }
      else {
        sub_24D71903C(v28, (uint64_t)v7, type metadata accessor for VFSItem);
      }
      sub_24DCCAFF8();
      if (v26)
      {
        sub_24DCCB008();
        if (v26 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v29 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_46;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v17 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
      uint64_t v18 = *(void *)(v10 + 48) + 16 * v17;
      *(void *)uint64_t v18 = v25;
      *(unsigned char *)(v18 + 8) = v26;
      uint64_t result = sub_24D7190A4((uint64_t)v7, *(void *)(v10 + 56) + v27 * v17, type metadata accessor for VFSItem);
      ++*(void *)(v10 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_45:
  *id v3 = v10;
  return result;
}

uint64_t sub_24D705510(uint64_t a1, char a2)
{
  return sub_24D705530(a1, a2, &qword_26986B0F8, MEMORY[0x263F8E7D0]);
}

uint64_t sub_24D705530(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t))
{
  uint64_t v5 = v4;
  uint64_t v7 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t result = sub_24DCCA9E8();
  uint64_t v9 = result;
  if (*(void *)(v7 + 16))
  {
    char v34 = a2;
    int64_t v10 = 0;
    uint64_t v35 = (void *)(v7 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v7 + 32);
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v10 << 6);
      }
      else
      {
        int64_t v20 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = v7 + 64;
        if (v20 >= v14) {
          goto LABEL_31;
        }
        unint64_t v21 = v35[v20];
        ++v10;
        if (!v21)
        {
          int64_t v10 = v20 + 1;
          if (v20 + 1 >= v14) {
            goto LABEL_31;
          }
          unint64_t v21 = v35[v10];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_31:
              if ((v34 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v5 = v4;
                goto LABEL_38;
              }
              uint64_t v33 = 1 << *(unsigned char *)(v7 + 32);
              if (v33 >= 64) {
                bzero(v35, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *uint64_t v35 = -1 << v33;
              }
              uint64_t v5 = v4;
              *(void *)(v7 + 16) = 0;
              break;
            }
            unint64_t v21 = v35[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v10 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_40;
                }
                if (v10 >= v14) {
                  goto LABEL_31;
                }
                unint64_t v21 = v35[v10];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v10 = v22;
          }
        }
LABEL_21:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v10 << 6);
      }
      uint64_t v23 = 8 * v19;
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + v23);
      uint64_t v25 = *(void *)(*(void *)(v7 + 56) + v23);
      sub_24DCCAFF8();
      a4(v24);
      uint64_t result = sub_24DCCB048();
      uint64_t v26 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v15 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v27) & ~*(void *)(v15 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v15 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v9 + 48) + v17) = v24;
      *(void *)(*(void *)(v9 + 56) + v17) = v25;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v5 = v9;
  return result;
}

uint64_t sub_24D705808(uint64_t a1, int a2)
{
  id v3 = v2;
  uint64_t v5 = sub_24DCC8A58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26B1948B8);
  int v42 = a2;
  uint64_t v10 = sub_24DCCA9E8();
  uint64_t v11 = v10;
  if (*(void *)(v9 + 16))
  {
    uint64_t v37 = v2;
    uint64_t v12 = 1 << *(unsigned char *)(v9 + 32);
    uint64_t v13 = *(void *)(v9 + 64);
    char v39 = (void *)(v9 + 64);
    if (v12 < 64) {
      uint64_t v14 = ~(-1 << v12);
    }
    else {
      uint64_t v14 = -1;
    }
    unint64_t v15 = v14 & v13;
    int64_t v38 = (unint64_t)(v12 + 63) >> 6;
    uint64_t v40 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
    uint64_t v16 = v10 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    uint64_t v44 = v5;
    for (i = v6; ; uint64_t v6 = i)
    {
      if (v15)
      {
        unint64_t v20 = __clz(__rbit64(v15));
        v15 &= v15 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v38) {
          goto LABEL_34;
        }
        unint64_t v23 = v39[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v38) {
            goto LABEL_34;
          }
          unint64_t v23 = v39[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v38)
            {
LABEL_34:
              swift_release();
              id v3 = v37;
              if (v42)
              {
                uint64_t v36 = 1 << *(unsigned char *)(v9 + 32);
                if (v36 >= 64) {
                  bzero(v39, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v39 = -1 << v36;
                }
                *(void *)(v9 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v39[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v38) {
                  goto LABEL_34;
                }
                unint64_t v23 = v39[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v15 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      uint64_t v25 = *(void *)(v6 + 72);
      unint64_t v26 = *(void *)(v9 + 48) + v25 * v21;
      if (v42) {
        (*v43)(v8, v26, v44);
      }
      else {
        (*v40)(v8, v26, v44);
      }
      uint64_t v27 = v9;
      uint64_t v28 = *(void *)(*(void *)(v9 + 56) + 8 * v21);
      sub_24D718E44();
      uint64_t result = sub_24DCC9678();
      uint64_t v29 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v30) & ~*(void *)(v16 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v16 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v19 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v43)(*(void *)(v11 + 48) + v25 * v19, v8, v44);
      *(void *)(*(void *)(v11 + 56) + 8 * v19) = v28;
      ++*(void *)(v11 + 16);
      uint64_t v9 = v27;
    }
  }
  uint64_t result = swift_release();
  *id v3 = v11;
  return result;
}

uint64_t sub_24D705BFC(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B0B8);
  char v35 = a2;
  uint64_t result = sub_24DCCA9E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    BOOL v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v33) {
          goto LABEL_37;
        }
        unint64_t v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v33) {
            goto LABEL_37;
          }
          unint64_t v18 = v34[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_37:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_44;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v34 = -1 << v32;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_46;
                }
                if (v8 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v18 = v34[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      uint64_t v21 = *(void *)v20;
      int v22 = *(unsigned __int8 *)(v20 + 8);
      unint64_t v23 = *(void **)(*(void *)(v5 + 56) + 8 * v16);
      if ((v35 & 1) == 0) {
        id v24 = v23;
      }
      sub_24DCCAFF8();
      if (v22)
      {
        sub_24DCCB008();
        if (v22 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v26) & ~*(void *)(v12 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v12 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v13 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v21;
      *(unsigned char *)(v14 + 8) = v22;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_44:
  *id v3 = v7;
  return result;
}

uint64_t sub_24D705F28(uint64_t a1, char a2)
{
  return sub_24D705F34(a1, a2, (uint64_t *)&unk_26B1948C8);
}

uint64_t sub_24D705F34(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  char v35 = a2;
  uint64_t result = sub_24DCCA9E8();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    BOOL v34 = (void *)(v6 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v6 + 64);
    int64_t v33 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v13 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v9 << 6);
      }
      else
      {
        int64_t v18 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
          return result;
        }
        uint64_t result = v6 + 64;
        if (v18 >= v33) {
          goto LABEL_37;
        }
        unint64_t v19 = v34[v18];
        ++v9;
        if (!v19)
        {
          int64_t v9 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_37;
          }
          unint64_t v19 = v34[v9];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_37:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v3;
                goto LABEL_44;
              }
              uint64_t v32 = 1 << *(unsigned char *)(v6 + 32);
              if (v32 >= 64) {
                bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v34 = -1 << v32;
              }
              uint64_t v4 = v3;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v9 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_46;
                }
                if (v9 >= v33) {
                  goto LABEL_37;
                }
                unint64_t v19 = v34[v9];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v9 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v9 << 6);
      }
      uint64_t v21 = *(void *)(v6 + 48) + 16 * v17;
      uint64_t v22 = *(void *)v21;
      int v23 = *(unsigned __int8 *)(v21 + 8);
      uint64_t v24 = *(void *)(*(void *)(v6 + 56) + 8 * v17);
      if ((v35 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_24DCCAFF8();
      if (v23)
      {
        sub_24DCCB008();
        if (v23 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v25 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v13 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_45;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v13 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      uint64_t v15 = *(void *)(v8 + 48) + 16 * v14;
      *(void *)uint64_t v15 = v22;
      *(unsigned char *)(v15 + 8) = v23;
      *(void *)(*(void *)(v8 + 56) + 8 * v14) = v24;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_44:
  uint64_t *v4 = v8;
  return result;
}

uint64_t sub_24D706264(uint64_t a1, char a2)
{
  id v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26986B0C0);
  uint64_t result = sub_24DCCA9E8();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    int64_t v8 = 0;
    BOOL v34 = (void *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v17 >= v33) {
          goto LABEL_35;
        }
        unint64_t v18 = v34[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v33) {
            goto LABEL_35;
          }
          unint64_t v18 = v34[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v33)
            {
LABEL_35:
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                id v3 = v2;
                goto LABEL_42;
              }
              uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
              if (v31 >= 64) {
                bzero(v34, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *BOOL v34 = -1 << v31;
              }
              id v3 = v2;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v34[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_44;
                }
                if (v8 >= v33) {
                  goto LABEL_35;
                }
                unint64_t v18 = v34[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 48) + 16 * v16;
      int v21 = *(unsigned __int8 *)(v20 + 8);
      uint64_t v22 = *(void *)v20;
      uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v16);
      sub_24DCCAFF8();
      if (v21)
      {
        sub_24DCCB008();
        if (v21 == 1) {
          sub_24DCCB038();
        }
      }
      else
      {
        sub_24DCCB008();
        sub_24DCCB028();
      }
      uint64_t result = sub_24DCCB048();
      uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v25 = result & ~v24;
      unint64_t v26 = v25 >> 6;
      if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v27 = 0;
        unint64_t v28 = (unint64_t)(63 - v24) >> 6;
        do
        {
          if (++v26 == v28 && (v27 & 1) != 0)
          {
            __break(1u);
            goto LABEL_43;
          }
          BOOL v29 = v26 == v28;
          if (v26 == v28) {
            unint64_t v26 = 0;
          }
          v27 |= v29;
          uint64_t v30 = *(void *)(v12 + 8 * v26);
        }
        while (v30 == -1);
        unint64_t v13 = __clz(__rbit64(~v30)) + (v26 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      uint64_t v14 = *(void *)(v7 + 48) + 16 * v13;
      *(void *)uint64_t v14 = v22;
      *(unsigned char *)(v14 + 8) = v21;
      *(void *)(*(void *)(v7 + 56) + 8 * v13) = v23;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_42:
  *id v3 = v7;
  return result;
}

_OWORD *sub_24D706588(_OWORD *a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24D4053BC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24DC77F74();
      goto LABEL_7;
    }
    sub_24D6FB260(v15, a4 & 1);
    unint64_t v21 = sub_24D4053BC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      unint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (_OWORD *)sub_24DCCAF18();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    int64_t v19 = (_OWORD *)(v18[7] + 32 * v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    return sub_24D3F7E7C(a1, v19);
  }
LABEL_13:
  sub_24D717E60(v12, a2, a3, a1, v18);

  return (_OWORD *)swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FileTreeError.ItemIsDetachedRootStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.LookupNotPermittedStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemMismatchStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.VersionConflictStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.DirectoryNotEmptyStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ContentUnavailableStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CannotBounceStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemCollisionStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemNotFoundStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CapturedContentMissingStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemNotEvictableStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.DirectoryChangedStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.DownloadCancelled()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemKindMismatchStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemIsFlockedStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.UploadCancelled()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.UploadInterrupted()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.MaxLookupDepthStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CompressedFileReadFailedStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemNotTracked()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.NoContentToFetch()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D70694C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_24D416034(a1, a2);
  }
  return a1;
}

uint64_t sub_24D706960()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D70697C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v1 = AssociatedTypeWitness;
  if (v2 <= 0x3F)
  {
    uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
    uint64_t v4 = swift_getAssociatedTypeWitness();
    unint64_t v6 = v5;
    uint64_t v16 = v4;
    uint64_t v17 = (void *)swift_getAssociatedTypeWitness();
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    int64_t v19 = (void *)swift_getAssociatedConformanceWitness();
    type metadata accessor for FileItemVersion();
    uint64_t v7 = sub_24DCCA3F8();
    if (v8 > 0x3F)
    {
      return v7;
    }
    else
    {
      uint64_t v9 = v3 + 64;
      swift_getTupleTypeLayout3();
      uint64_t v23 = &v22;
      uint64_t v16 = v9;
      uint64_t v17 = &unk_24DCD7878;
      uint64_t AssociatedConformanceWitness = v9;
      int64_t v19 = &unk_24DCD7890;
      uint64_t v20 = "\b";
      swift_getTupleTypeLayout();
      uint64_t v24 = &v21;
      swift_getTupleTypeLayout2();
      unint64_t v25 = &v15;
      swift_getTupleTypeLayout2();
      unint64_t v26 = &v14;
      uint64_t v1 = sub_24DCCA3F8();
      if (v10 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        char v27 = &v13;
        unint64_t v28 = &unk_24DCD78A8;
        uint64_t v29 = v9;
        if (v6 > 0x3F)
        {
          return v4;
        }
        else
        {
          swift_getTupleTypeLayout2();
          uint64_t v30 = &v12;
          uint64_t v31 = "\b";
          uint64_t v32 = v9;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return v1;
}

char *sub_24D706C6C(char *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v117 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v117 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v5;
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = v2;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(_DWORD *)(v9 + 80);
  uint64_t v12 = v11 | v5 | 7;
  unint64_t v112 = v12 + v3;
  uint64_t v116 = v4;
  uint64_t v13 = *(unsigned int *)(v4 + 84);
  if (v13 <= v10) {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v4 + 84);
  }
  if (v14 <= 0x7FFFFFFE) {
    int v15 = 2147483646;
  }
  else {
    int v15 = v14;
  }
  int v115 = v15;
  uint64_t v16 = *(void *)(v4 + 64);
  uint64_t v17 = v16 + 7;
  unint64_t v18 = ((((*(void *)(*(void *)(v7 - 8) + 64) + 7 + ((v11 + 8 + ((v16 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v11)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v19 = ((v12 + v3) & ~v12) + v18 + 8;
  unint64_t v20 = v3 + 7;
  unint64_t v21 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v22 = *(_DWORD *)(v8 + 80);
  unint64_t v23 = ((((v3 + 7 + ((v22 + 16 + v21) & ~v22)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v24 = v21 + 8;
  if (*(_DWORD *)(v8 + 84)) {
    size_t v25 = v3;
  }
  else {
    size_t v25 = v3 + 1;
  }
  uint64_t v26 = v16 + v5;
  unint64_t v27 = (v26 & ~(unint64_t)v5) + v16;
  if (v3 > v19) {
    unint64_t v19 = v3;
  }
  if (v23 <= ((v22 + 16) & ~v22) + v3) {
    unint64_t v28 = ((v22 + 16) & ~v22) + v3;
  }
  else {
    unint64_t v28 = v23;
  }
  size_t v113 = v25 + v22;
  if (v24 <= ((v25 + v22) & ~v22) + v3) {
    unint64_t v24 = ((v25 + v22) & ~v22) + v3;
  }
  if (v19 <= v28) {
    unint64_t v19 = v28;
  }
  if (v27 > v24) {
    unint64_t v24 = v27;
  }
  if (v24 > v19) {
    unint64_t v19 = v24;
  }
  if (v19 <= 8) {
    uint64_t v29 = 8;
  }
  else {
    uint64_t v29 = v19;
  }
  if (v29 > 3) {
    goto LABEL_30;
  }
  unsigned int v30 = ((1 << (8 * v29)) | 0xCu) >> (8 * v29);
  uint64_t v31 = 2;
  if (v30 > 0xFFF5) {
    uint64_t v31 = 4;
  }
  if (v30 <= 0xF5) {
LABEL_30:
  }
    uint64_t v31 = 1;
  unint64_t v32 = v11 | v5 | v22;
  if (v32 > 7
    || ((*(_DWORD *)(v9 + 80) | v5 | *(_DWORD *)(v8 + 80)) & 0x100000) != 0
    || (unint64_t)(v31 + v29) > 0x18)
  {
    uint64_t v36 = *(char **)a2;
    *(void *)a1 = *(void *)a2;
    uint64_t v37 = &v36[(v32 + 16) & (v32 & 0xF8 ^ 0xFFFFFFFFFFFFFFF8)];
    swift_retain();
    return v37;
  }
  if (v29 > 3) {
    goto LABEL_37;
  }
  unsigned int v33 = ((1 << (8 * v29)) | 0xCu) >> (8 * v29);
  if (v33 > 0xFFF5)
  {
    unsigned int v34 = *(_DWORD *)&a2[v29];
    unsigned int v35 = v34 - 10;
    if (v34 < 0xA) {
      goto LABEL_57;
    }
    goto LABEL_44;
  }
  if (v33 <= 0xF5)
  {
LABEL_37:
    unsigned int v34 = a2[v29];
    unsigned int v35 = v34 - 10;
    if (v34 < 0xA) {
      goto LABEL_57;
    }
LABEL_44:
    if (v29 <= 3) {
      uint64_t v39 = v29;
    }
    else {
      uint64_t v39 = 4;
    }
    switch(v39)
    {
      case 1:
        int v40 = *a2;
        if (v29 < 4) {
          goto LABEL_55;
        }
        goto LABEL_56;
      case 2:
        int v40 = *(unsigned __int16 *)a2;
        if (v29 >= 4) {
          goto LABEL_56;
        }
        goto LABEL_55;
      case 3:
        int v40 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v29 >= 4) {
          goto LABEL_56;
        }
        goto LABEL_55;
      case 4:
        int v40 = *(_DWORD *)a2;
        if (v29 < 4) {
LABEL_55:
        }
          v40 |= v35 << (8 * v29);
LABEL_56:
        unsigned int v34 = v40 + 10;
        break;
      default:
        goto LABEL_57;
    }
    goto LABEL_57;
  }
  unsigned int v34 = *(unsigned __int16 *)&a2[v29];
  unsigned int v35 = v34 - 10;
  if (v34 >= 0xA) {
    goto LABEL_44;
  }
LABEL_57:
  uint64_t v41 = ~v22;
  switch(v34)
  {
    case 0u:
      uint64_t v42 = v17;
      uint64_t v107 = *(void *)(*(void *)(v7 - 8) + 64) + 7;
      uint64_t v108 = v11 + 8;
      uint64_t v109 = *(void *)(v7 - 8);
      uint64_t v110 = v7;
      size_t __n = v18;
      uint64_t v114 = v29;
      uint64_t v43 = ~v12;
      uint64_t v44 = ~v11;
      uint64_t v37 = a1;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, AssociatedTypeWitness);
      char v45 = (char *)((unint64_t)&a1[v112] & v43);
      int64_t v46 = (char *)((unint64_t)&a2[v112] & v43);
      if (v13 == v115)
      {
        int v47 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v116 + 48))(v46, v13, v117);
      }
      else
      {
        uint64_t v85 = (uint64_t *)((unint64_t)&v46[v42] & 0xFFFFFFFFFFFFFFF8);
        if (v14 <= 0x7FFFFFFE)
        {
          uint64_t v86 = v42;
          uint64_t v87 = *v85;
          if ((unint64_t)*v85 >= 0xFFFFFFFF) {
            LODWORD(v87) = -1;
          }
          if ((v87 + 1) >= 2) {
            goto LABEL_122;
          }
          goto LABEL_124;
        }
        int v47 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v109 + 48))(((unint64_t)v85 + v108) & v44, v10, v110);
      }
      if (v47)
      {
LABEL_122:
        size_t v94 = __n;
        memcpy(v45, v46, __n);
        goto LABEL_125;
      }
      uint64_t v86 = v42;
      uint64_t v85 = (uint64_t *)((unint64_t)&v46[v42] & 0xFFFFFFFFFFFFFFF8);
LABEL_124:
      uint64_t v95 = v86;
      (*(void (**)(char *, char *, uint64_t))(v116 + 16))(v45, v46, v117);
      uint64_t v96 = (void *)((unint64_t)&v45[v95] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v96 = *v85;
      unint64_t v97 = ((unint64_t)v96 + v108) & v44;
      unint64_t v98 = ((unint64_t)v85 + v108) & v44;
      uint64_t v99 = *(void (**)(unint64_t, unint64_t, uint64_t))(v109 + 16);
      swift_bridgeObjectRetain();
      v99(v97, v98, v110);
      unint64_t v100 = (void *)((v107 + v97) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v101 = (void *)((v107 + v98) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v100 = *v101;
      uint64_t v102 = (void *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v103 = (void *)(((unint64_t)v101 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v102 = *v103;
      v102[1] = v103[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v94 = __n;
LABEL_125:
      uint64_t v104 = *(void **)&v46[v94];
      id v105 = v104;
      *(void *)&v45[v94] = v104;
      if (v114 <= 3)
      {
        unsigned int v106 = ((1 << (8 * v114)) | 0xCu) >> (8 * v114);
        if (v106 > 0xFFF5)
        {
          *(_DWORD *)&a1[v114] = 0;
          return v37;
        }
        if (v106 > 0xF5)
        {
          *(_WORD *)&a1[v114] = 0;
          return v37;
        }
      }
      a1[v114] = 0;
      return v37;
    case 1u:
      uint64_t v50 = v29;
      long long v51 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 16);
      uint64_t v37 = a1;
      v51(a1, a2, AssociatedTypeWitness);
      uint64_t v52 = (void *)((unint64_t)&a1[v3 + 7] & 0xFFFFFFFFFFFFFFF8);
      __int16 v53 = (void *)((unint64_t)&a2[v3 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v52 = *v53;
      v52[1] = v53[1];
      uint64_t v54 = ((unint64_t)v52 + v22 + 16) & v41;
      uint64_t v55 = ((unint64_t)v53 + v22 + 16) & v41;
      swift_bridgeObjectRetain();
      v51((char *)v54, (unsigned __int8 *)v55, AssociatedTypeWitness);
      unint64_t v56 = (v20 + v54) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v57 = (uint64_t *)((v20 + v55) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v58 = *v57;
      if (HIDWORD(*v57) > 0x80000000)
      {
        *(_OWORD *)unint64_t v56 = *(_OWORD *)v57;
      }
      else
      {
        unint64_t v59 = v57[1];
        sub_24D5203A8(*v57, v59);
        *(void *)unint64_t v56 = v58;
        *(void *)(v56 + 8) = v59;
      }
      uint64_t v88 = *(void **)(((unint64_t)v57 + 23) & 0xFFFFFFFFFFFFFFF8);
      id v89 = v88;
      *(void *)((v56 + 23) & 0xFFFFFFFFFFFFFFF8) = v88;
      if (v50 <= 3)
      {
        unsigned int v90 = ((1 << (8 * v50)) | 0xCu) >> (8 * v50);
        if (v90 > 0xFFF5)
        {
          *(_DWORD *)&a1[v50] = 1;
          return v37;
        }
        if (v90 > 0xF5)
        {
          *(_WORD *)&a1[v50] = 1;
          return v37;
        }
      }
      a1[v50] = 1;
      return v37;
    case 2u:
      uint64_t v60 = *((void *)a2 + 1);
      uint64_t v61 = v29;
      uint64_t v37 = a1;
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v60;
      uint64_t v62 = (unint64_t)&a1[v22 + 16] & v41;
      uint64_t v63 = (unint64_t)&a2[v22 + 16] & v41;
      uint64_t v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
      swift_bridgeObjectRetain();
      v64(v62, v63, AssociatedTypeWitness);
      if (v61 <= 3)
      {
        unsigned int v65 = ((1 << (8 * v61)) | 0xCu) >> (8 * v61);
        if (v65 > 0xFFF5)
        {
          *(_DWORD *)&a1[v61] = 2;
          return v37;
        }
        if (v65 > 0xF5)
        {
          *(_WORD *)&a1[v61] = 2;
          return v37;
        }
      }
      a1[v61] = 2;
      return v37;
    case 3u:
      uint64_t v37 = a1;
      uint64_t v66 = v29;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, AssociatedTypeWitness);
      uint64_t v67 = *(void **)((unint64_t)&a2[v3 + 7] & 0xFFFFFFFFFFFFFFF8);
      id v68 = v67;
      *(void *)((unint64_t)&a1[v3 + 7] & 0xFFFFFFFFFFFFFFF8) = v67;
      if (v66 <= 3)
      {
        unsigned int v69 = ((1 << (8 * v66)) | 0xCu) >> (8 * v66);
        if (v69 > 0xFFF5)
        {
          *(_DWORD *)&a1[v66] = 3;
          return v37;
        }
        if (v69 > 0xF5)
        {
          *(_WORD *)&a1[v66] = 3;
          return v37;
        }
      }
      a1[v66] = 3;
      return v37;
    case 4u:
      uint64_t v70 = v29;
      uint64_t v71 = v8;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v8 + 48))(a2, 1, AssociatedTypeWitness))
      {
        size_t v72 = v25;
        uint64_t v37 = a1;
        memcpy(a1, a2, v72);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v71 + 16))((unint64_t)&a1[v113] & v41, (unint64_t)&a2[v113] & v41, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v92 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v71 + 16);
        uint64_t v37 = a1;
        v92(a1, a2, AssociatedTypeWitness);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v71 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v92((char *)((unint64_t)&a1[v113] & v41), (unsigned __int8 *)((unint64_t)&a2[v113] & v41), AssociatedTypeWitness);
      }
      if (v70 <= 3)
      {
        unsigned int v93 = ((1 << (8 * v70)) | 0xCu) >> (8 * v70);
        if (v93 > 0xFFF5)
        {
          *(_DWORD *)&v37[v70] = 4;
          return v37;
        }
        if (v93 > 0xF5)
        {
          *(_WORD *)&v37[v70] = 4;
          return v37;
        }
      }
      v37[v70] = 4;
      return v37;
    case 5u:
      uint64_t v37 = a1;
      *a1 = *a2;
      if (v29 <= 3)
      {
        unsigned int v73 = ((1 << (8 * v29)) | 0xCu) >> (8 * v29);
        if (v73 > 0xFFF5)
        {
          *(_DWORD *)&a1[v29] = 5;
          return v37;
        }
        if (v73 > 0xF5)
        {
          *(_WORD *)&a1[v29] = 5;
          return v37;
        }
      }
      a1[v29] = 5;
      return v37;
    case 6u:
      uint64_t v37 = a1;
      uint64_t v74 = v29;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, AssociatedTypeWitness);
      if (v74 <= 3)
      {
        unsigned int v75 = ((1 << (8 * v74)) | 0xCu) >> (8 * v74);
        if (v75 > 0xFFF5)
        {
          *(_DWORD *)&a1[v74] = 6;
          return v37;
        }
        if (v75 > 0xF5)
        {
          *(_WORD *)&a1[v74] = 6;
          return v37;
        }
      }
      a1[v74] = 6;
      return v37;
    case 7u:
      uint64_t v76 = ~v6;
      char v77 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v116 + 16);
      uint64_t v37 = a1;
      uint64_t v78 = v29;
      v77(a1, a2, v117);
      v77((char *)((unint64_t)&a1[v26] & v76), (unsigned __int8 *)((unint64_t)&a2[v26] & v76), v117);
      if (v78 <= 3)
      {
        unsigned int v79 = ((1 << (8 * v78)) | 0xCu) >> (8 * v78);
        if (v79 > 0xFFF5)
        {
          *(_DWORD *)&a1[v78] = 7;
          return v37;
        }
        if (v79 > 0xF5)
        {
          *(_WORD *)&a1[v78] = 7;
          return v37;
        }
      }
      a1[v78] = 7;
      return v37;
    case 8u:
      uint64_t v82 = *(void *)a2;
      uint64_t v83 = v29;
      id v84 = *(id *)a2;
      uint64_t v37 = a1;
      *(void *)a1 = v82;
      if (v83 > 3) {
        goto LABEL_95;
      }
      unsigned int v91 = ((1 << (8 * v83)) | 0xCu) >> (8 * v83);
      if (v91 > 0xFFF5)
      {
        *(_DWORD *)&a1[v83] = 8;
        return v37;
      }
      if (v91 <= 0xF5) {
LABEL_95:
      }
        a1[v83] = 8;
      else {
        *(_WORD *)&a1[v83] = 8;
      }
      return v37;
    case 9u:
      uint64_t v37 = a1;
      uint64_t v80 = v29;
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(v8 + 16))(a1, a2, AssociatedTypeWitness);
      if (v80 <= 3)
      {
        unsigned int v81 = ((1 << (8 * v80)) | 0xCu) >> (8 * v80);
        if (v81 > 0xFFF5)
        {
          *(_DWORD *)&a1[v80] = 9;
          return v37;
        }
        if (v81 > 0xF5)
        {
          *(_WORD *)&a1[v80] = 9;
          return v37;
        }
      }
      a1[v80] = 9;
      return v37;
    default:
      if (v29 > 3) {
        goto LABEL_64;
      }
      unsigned int v48 = ((1 << (8 * v29)) | 0xCu) >> (8 * v29);
      uint64_t v49 = 2;
      if (v48 > 0xFFF5) {
        uint64_t v49 = 4;
      }
      if (v48 <= 0xF5) {
LABEL_64:
      }
        uint64_t v49 = 1;
      uint64_t v37 = a1;
      memcpy(a1, a2, v49 + v29);
      return v37;
  }
}

void sub_24D707934(unsigned __int8 *a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v2 = *(void *)(v63 + 64);
  uint64_t v59 = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(v59 - 8);
  uint64_t v61 = v3;
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = v4 | v7 | 7;
  unint64_t v9 = v8 + v2;
  uint64_t v10 = *(unsigned int *)(v3 + 84);
  uint64_t v11 = *(unsigned int *)(v6 + 84);
  if (v10 <= v11) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v3 + 84);
  }
  if (v12 <= 0x7FFFFFFE) {
    int v13 = 2147483646;
  }
  else {
    int v13 = v12;
  }
  uint64_t v14 = *(void *)(v3 + 64);
  uint64_t v15 = v14 + 7;
  unint64_t v16 = ((((*(void *)(*(void *)(v5 - 8) + 64) + 7 + ((v7 + 8 + ((v14 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v7)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v17 = ((v8 + v2) & ~v8) + v16 + 8;
  unint64_t v18 = (v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v19 = *(unsigned __int8 *)(v63 + 80);
  unint64_t v20 = ((((v2 + 7 + ((v19 + 16 + v18) & ~v19)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v21 = ((v19 + 16) & ~v19) + v2;
  unint64_t v22 = v18 + 8;
  if (*(_DWORD *)(v63 + 84)) {
    unint64_t v23 = v2;
  }
  else {
    unint64_t v23 = v2 + 1;
  }
  uint64_t v24 = v23 + v19;
  unint64_t v25 = ((v23 + v19) & ~v19) + v2;
  uint64_t v26 = v14 + v4;
  unint64_t v27 = ((v14 + v4) & ~v4) + v14;
  if (v2 > v17) {
    unint64_t v17 = v2;
  }
  if (v20 > v21) {
    unint64_t v21 = v20;
  }
  if (v22 <= v25) {
    unint64_t v22 = v25;
  }
  if (v17 <= v21) {
    unint64_t v17 = v21;
  }
  if (v27 > v22) {
    unint64_t v22 = v27;
  }
  if (v22 > v17) {
    unint64_t v17 = v22;
  }
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  if (v17 > 3) {
    goto LABEL_27;
  }
  unsigned int v28 = ((1 << (8 * v17)) | 0xCu) >> (8 * v17);
  if (v28 > 0xFFF5)
  {
    unsigned int v29 = *(_DWORD *)&a1[v17];
  }
  else
  {
    if (v28 <= 0xF5)
    {
LABEL_27:
      unsigned int v29 = a1[v17];
      goto LABEL_30;
    }
    unsigned int v29 = *(unsigned __int16 *)&a1[v17];
  }
LABEL_30:
  unsigned int v30 = v29 - 10;
  uint64_t v57 = v24;
  if (v29 < 0xA)
  {
LABEL_41:
    uint64_t v33 = ~v19;
    switch(v29)
    {
      case 0u:
        uint64_t v37 = v15;
        uint64_t v55 = v7 + 8;
        unint64_t v38 = v16;
        uint64_t v56 = *(void *)(v5 - 8);
        uint64_t v58 = v5;
        uint64_t v39 = ~v8;
        uint64_t v40 = ~v7;
        unint64_t v41 = v9;
        (*(void (**)(unsigned __int8 *, uint64_t))(v63 + 8))(a1, AssociatedTypeWitness);
        unint64_t v42 = (unint64_t)&a1[v41] & v39;
        if (v10 == v13)
        {
          int v43 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v61 + 48))(v42, v10, v59);
        }
        else
        {
          long long v51 = (uint64_t *)((v37 + v42) & 0xFFFFFFFFFFFFFFF8);
          if (v12 <= 0x7FFFFFFE)
          {
            uint64_t v52 = *v51;
            if ((unint64_t)*v51 >= 0xFFFFFFFF) {
              LODWORD(v52) = -1;
            }
            BOOL v53 = (v52 + 1) >= 2;
            unint64_t v54 = v38;
            if (v53) {
              goto LABEL_75;
            }
            goto LABEL_74;
          }
          int v43 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v56 + 48))(((unint64_t)v51 + v55) & v40, v11, v58);
        }
        unint64_t v54 = v38;
        if (v43)
        {
LABEL_75:
          unsigned int v48 = *(void **)(v54 + v42);
          goto LABEL_76;
        }
        long long v51 = (uint64_t *)((v37 + v42) & 0xFFFFFFFFFFFFFFF8);
LABEL_74:
        (*(void (**)(unint64_t, uint64_t))(v61 + 8))(v42, v59);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v56 + 8))(((unint64_t)v51 + v55) & v40, v58);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v54 = v38;
        goto LABEL_75;
      case 1u:
        uint64_t v44 = *(void (**)(unsigned __int8 *, uint64_t))(v63 + 8);
        v44(a1, AssociatedTypeWitness);
        swift_bridgeObjectRelease();
        unint64_t v45 = (((unint64_t)&a1[v2 + 7] & 0xFFFFFFFFFFFFFFF8) + v19 + 16) & v33;
        v44((unsigned __int8 *)v45, AssociatedTypeWitness);
        unint64_t v46 = (v2 + 7 + v45) & 0xFFFFFFFFFFFFFFF8;
        if (HIDWORD(*(void *)v46) <= 0x80000000) {
          sub_24D466534(*(void *)v46, *(void *)(v46 + 8));
        }
        uint64_t v47 = v46 + 23;
        goto LABEL_54;
      case 2u:
        swift_bridgeObjectRelease();
        uint64_t v35 = (unint64_t)&a1[v19 + 16] & v33;
        unsigned int v34 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
        goto LABEL_44;
      case 3u:
        (*(void (**)(unsigned __int8 *, uint64_t))(v63 + 8))(a1, AssociatedTypeWitness);
        uint64_t v47 = (uint64_t)&a1[v2 + 7];
LABEL_54:
        unsigned int v48 = *(void **)(v47 & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_76;
      case 4u:
        int v49 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v63 + 48))(a1, 1, AssociatedTypeWitness);
        uint64_t v50 = *(void (**)(unsigned __int8 *, uint64_t))(v63 + 8);
        if (!v49)
        {
          uint64_t v62 = *(void (**)(unsigned __int8 *, uint64_t))(v63 + 8);
          v50(a1, AssociatedTypeWitness);
          uint64_t v50 = v62;
        }
        v50((unsigned __int8 *)((unint64_t)&a1[v57] & v33), AssociatedTypeWitness);
        return;
      case 6u:
      case 9u:
        unsigned int v34 = *(void (**)(uint64_t, uint64_t))(v63 + 8);
        uint64_t v35 = (uint64_t)a1;
LABEL_44:
        uint64_t v36 = AssociatedTypeWitness;
        goto LABEL_61;
      case 7u:
        uint64_t v64 = *(void (**)(unsigned __int8 *, uint64_t))(v3 + 8);
        v64(a1, v59);
        uint64_t v35 = (unint64_t)&a1[v26] & ~v4;
        uint64_t v36 = v59;
        unsigned int v34 = (void (*)(uint64_t, uint64_t))v64;
LABEL_61:
        v34(v35, v36);
        return;
      case 8u:
        unsigned int v48 = *(void **)a1;
LABEL_76:

        return;
      default:
        return;
    }
  }
  if (v17 <= 3) {
    uint64_t v31 = v17;
  }
  else {
    uint64_t v31 = 4;
  }
  switch(v31)
  {
    case 1:
      int v32 = *a1;
      if (v17 >= 4) {
        goto LABEL_46;
      }
      goto LABEL_40;
    case 2:
      int v32 = *(unsigned __int16 *)a1;
      if (v17 >= 4) {
        goto LABEL_46;
      }
      goto LABEL_40;
    case 3:
      int v32 = *(unsigned __int16 *)a1 | (a1[2] << 16);
      if (v17 < 4) {
        goto LABEL_40;
      }
      goto LABEL_46;
    case 4:
      int v32 = *(_DWORD *)a1;
      if (v17 < 4)
      {
LABEL_40:
        unsigned int v29 = (v32 | (v30 << (8 * v17))) + 10;
        goto LABEL_41;
      }
LABEL_46:
      unsigned int v29 = v32 + 10;
      if (v29 <= 9) {
        goto LABEL_41;
      }
      return;
    default:
      goto LABEL_41;
  }
}

void *sub_24D70805C(void *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v118 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v118 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 | v9 | 7;
  uint64_t v117 = v5;
  uint64_t v11 = *(unsigned int *)(v5 + 84);
  uint64_t v12 = *(unsigned int *)(v8 + 84);
  if (v11 <= v12) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v5 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  int v116 = v14;
  uint64_t v15 = *(void *)(v5 + 64);
  uint64_t v16 = v15 + 7;
  unint64_t v17 = ((((*(void *)(*(void *)(v7 - 8) + 64) + 7 + ((v9 + 8 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v18 = ((v10 + v4) & ~v10) + v17 + 8;
  unint64_t v19 = v4 + 7;
  unint64_t v20 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v22 = ((((v4 + 7 + ((v21 + 16 + v20) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v23 = ((v21 + 16) & ~v21) + v4;
  unint64_t v24 = v20 + 8;
  if (*(_DWORD *)(v3 + 84)) {
    size_t v25 = v4;
  }
  else {
    size_t v25 = v4 + 1;
  }
  size_t __n = v25;
  size_t v26 = v25 + v21;
  unint64_t v27 = ((v25 + v21) & ~v21) + v4;
  uint64_t v28 = v15 + v6;
  unint64_t v29 = ((v15 + v6) & ~v6) + v15;
  if (v4 > v18) {
    unint64_t v18 = v4;
  }
  if (v22 > v23) {
    unint64_t v23 = v22;
  }
  if (v24 <= v27) {
    unint64_t v24 = v27;
  }
  if (v18 <= v23) {
    unint64_t v18 = v23;
  }
  if (v29 > v24) {
    unint64_t v24 = v29;
  }
  if (v24 > v18) {
    unint64_t v18 = v24;
  }
  if (v18 <= 8) {
    uint64_t v30 = 8;
  }
  else {
    uint64_t v30 = v18;
  }
  if (v30 > 3) {
    goto LABEL_28;
  }
  unsigned int v31 = ((1 << (8 * v30)) | 0xCu) >> (8 * v30);
  if (v31 <= 0xFFF5)
  {
    if (v31 > 0xF5)
    {
      unsigned int v32 = *(unsigned __int16 *)&a2[v30];
LABEL_29:
      uint64_t v33 = a2;
      unsigned int v34 = v32 - 10;
      if (v32 >= 0xA) {
        goto LABEL_32;
      }
      goto LABEL_46;
    }
LABEL_28:
    unsigned int v32 = a2[v30];
    goto LABEL_29;
  }
  uint64_t v33 = a2;
  unsigned int v32 = *(_DWORD *)&a2[v30];
  unsigned int v34 = v32 - 10;
  if (v32 >= 0xA)
  {
LABEL_32:
    if (v30 <= 3) {
      uint64_t v35 = v30;
    }
    else {
      uint64_t v35 = 4;
    }
    switch(v35)
    {
      case 1:
        int v36 = *v33;
        if (v30 < 4) {
          goto LABEL_44;
        }
        goto LABEL_45;
      case 2:
        int v36 = *(unsigned __int16 *)v33;
        if (v30 >= 4) {
          goto LABEL_45;
        }
        goto LABEL_44;
      case 3:
        int v36 = *(unsigned __int16 *)v33 | (v33[2] << 16);
        if (v30 >= 4) {
          goto LABEL_45;
        }
        goto LABEL_44;
      case 4:
        int v36 = *(_DWORD *)v33;
        if (v30 < 4) {
LABEL_44:
        }
          v36 |= v34 << (8 * v30);
LABEL_45:
        unsigned int v32 = v36 + 10;
        break;
      default:
        break;
    }
  }
LABEL_46:
  uint64_t v37 = ~v21;
  switch(v32)
  {
    case 0u:
      uint64_t v38 = v16;
      uint64_t v110 = v9 + 8;
      uint64_t v111 = *(void *)(v7 - 8);
      uint64_t v112 = v7;
      size_t v113 = v17;
      size_t __na = v30;
      uint64_t v39 = ~v10;
      uint64_t v108 = *(void *)(v111 + 64) + 7;
      uint64_t v109 = ~v9;
      uint64_t v40 = a1;
      unint64_t v41 = v33;
      unint64_t v42 = v10 + v4;
      (*(void (**)(void *))(v3 + 16))(a1);
      int v43 = (char *)(((unint64_t)a1 + v42) & v39);
      uint64_t v44 = (char *)((unint64_t)&v41[v42] & v39);
      if (v11 == v116)
      {
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v117 + 48))(v44, v11, v118)) {
          goto LABEL_112;
        }
LABEL_111:
        size_t v94 = v113;
        memcpy(v43, v44, v113);
        goto LABEL_114;
      }
      uint64_t v86 = (uint64_t *)((unint64_t)&v44[v38] & 0xFFFFFFFFFFFFFFF8);
      if (v13 <= 0x7FFFFFFE)
      {
        uint64_t v87 = v38;
        uint64_t v88 = *v86;
        if ((unint64_t)*v86 >= 0xFFFFFFFF) {
          LODWORD(v88) = -1;
        }
        if ((v88 + 1) < 2) {
          goto LABEL_113;
        }
        goto LABEL_111;
      }
      if ((*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v111 + 48))(((unint64_t)v86 + v110) & v109, v12, v112))
      {
        goto LABEL_111;
      }
LABEL_112:
      uint64_t v87 = v38;
      uint64_t v86 = (uint64_t *)((unint64_t)&v44[v38] & 0xFFFFFFFFFFFFFFF8);
LABEL_113:
      uint64_t v95 = v87;
      (*(void (**)(char *, char *, uint64_t))(v117 + 16))(v43, v44, v118);
      uint64_t v96 = (void *)((unint64_t)&v43[v95] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v96 = *v86;
      unint64_t v97 = ((unint64_t)v96 + v110) & v109;
      unint64_t v98 = ((unint64_t)v86 + v110) & v109;
      uint64_t v99 = *(void (**)(unint64_t, unint64_t, uint64_t))(v111 + 16);
      swift_bridgeObjectRetain();
      v99(v97, v98, v112);
      unint64_t v100 = (void *)((v108 + v97) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v101 = (void *)((v108 + v98) & 0xFFFFFFFFFFFFFFF8);
      *unint64_t v100 = *v101;
      uint64_t v102 = (void *)(((unint64_t)v100 + 15) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v103 = (void *)(((unint64_t)v101 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v102 = *v103;
      v102[1] = v103[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v94 = v113;
LABEL_114:
      uint64_t v104 = *(void **)&v44[v94];
      id v105 = v104;
      *(void *)&v43[v94] = v104;
      if (__na <= 3)
      {
        unsigned int v106 = ((1 << (8 * __na)) | 0xCu) >> (8 * __na);
        if (v106 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + __na) = 0;
          return v40;
        }
        if (v106 > 0xF5)
        {
          *(_WORD *)((char *)a1 + __na) = 0;
          return v40;
        }
      }
      *((unsigned char *)a1 + __na) = 0;
      return v40;
    case 1u:
      uint64_t v47 = v30;
      unsigned int v48 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      uint64_t v40 = a1;
      int v49 = v33;
      ((void (*)(void *))v48)(a1);
      uint64_t v50 = (void *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      long long v51 = (void *)((unint64_t)&v49[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      uint64_t v52 = ((unint64_t)v50 + v21 + 16) & ~v21;
      uint64_t v53 = ((unint64_t)v51 + v21 + 16) & ~v21;
      swift_bridgeObjectRetain();
      v48(v52, v53, AssociatedTypeWitness);
      unint64_t v54 = (v19 + v52) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v55 = (uint64_t *)((v19 + v53) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v56 = *v55;
      if (HIDWORD(*v55) > 0x80000000)
      {
        *(_OWORD *)unint64_t v54 = *(_OWORD *)v55;
      }
      else
      {
        unint64_t v57 = v55[1];
        sub_24D5203A8(*v55, v57);
        *(void *)unint64_t v54 = v56;
        *(void *)(v54 + 8) = v57;
      }
      id v89 = *(void **)(((unint64_t)v55 + 23) & 0xFFFFFFFFFFFFFFF8);
      id v90 = v89;
      *(void *)((v54 + 23) & 0xFFFFFFFFFFFFFFF8) = v89;
      if (v47 <= 3)
      {
        unsigned int v91 = ((1 << (8 * v47)) | 0xCu) >> (8 * v47);
        if (v91 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v47) = 1;
          return v40;
        }
        if (v91 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v47) = 1;
          return v40;
        }
      }
      *((unsigned char *)a1 + v47) = 1;
      return v40;
    case 2u:
      uint64_t v58 = *((void *)v33 + 1);
      uint64_t v40 = a1;
      *a1 = *(void *)v33;
      a1[1] = v58;
      uint64_t v59 = ((unint64_t)a1 + v21 + 16) & v37;
      uint64_t v60 = (unint64_t)&v33[v21 + 16] & v37;
      uint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
      uint64_t v62 = v30;
      swift_bridgeObjectRetain();
      v61(v59, v60, AssociatedTypeWitness);
      if (v62 <= 3)
      {
        unsigned int v63 = ((1 << (8 * v62)) | 0xCu) >> (8 * v62);
        if (v63 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v62) = 2;
          return v40;
        }
        if (v63 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v62) = 2;
          return v40;
        }
      }
      *((unsigned char *)a1 + v62) = 2;
      return v40;
    case 3u:
      uint64_t v40 = a1;
      uint64_t v64 = v33;
      uint64_t v65 = v30;
      (*(void (**)(void *))(v3 + 16))(a1);
      uint64_t v66 = *(void **)((unint64_t)&v64[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
      id v67 = v66;
      *(void *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) = v66;
      if (v65 <= 3)
      {
        unsigned int v68 = ((1 << (8 * v65)) | 0xCu) >> (8 * v65);
        if (v68 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v65) = 3;
          return v40;
        }
        if (v68 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v65) = 3;
          return v40;
        }
      }
      *((unsigned char *)a1 + v65) = 3;
      return v40;
    case 4u:
      uint64_t v69 = ~v21;
      uint64_t v70 = v30;
      uint64_t v71 = v33;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t, uint64_t))(v3 + 48))(v33, 1, AssociatedTypeWitness, v8))
      {
        uint64_t v40 = a1;
        memcpy(a1, v71, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 16))(((unint64_t)a1 + v26) & v69, (unint64_t)&v71[v26] & v69, AssociatedTypeWitness);
      }
      else
      {
        unint64_t v92 = *(void (**)(void *, unsigned __int8 *, uint64_t))(v3 + 16);
        uint64_t v40 = a1;
        v92(a1, v71, AssociatedTypeWitness);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v92((void *)(((unint64_t)a1 + v26) & v69), (unsigned __int8 *)((unint64_t)&v71[v26] & v69), AssociatedTypeWitness);
      }
      if (v70 <= 3)
      {
        unsigned int v93 = ((1 << (8 * v70)) | 0xCu) >> (8 * v70);
        if (v93 > 0xFFF5)
        {
          *(_DWORD *)((char *)v40 + v70) = 4;
          return v40;
        }
        if (v93 > 0xF5)
        {
          *(_WORD *)((char *)v40 + v70) = 4;
          return v40;
        }
      }
      *((unsigned char *)v40 + v70) = 4;
      return v40;
    case 5u:
      uint64_t v40 = a1;
      *(unsigned char *)a1 = *v33;
      if (v30 <= 3)
      {
        unsigned int v72 = ((1 << (8 * v30)) | 0xCu) >> (8 * v30);
        if (v72 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v30) = 5;
          return v40;
        }
        if (v72 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v30) = 5;
          return v40;
        }
      }
      *((unsigned char *)a1 + v30) = 5;
      return v40;
    case 6u:
      uint64_t v40 = a1;
      uint64_t v73 = v30;
      (*(void (**)(void *, unsigned __int8 *, uint64_t, uint64_t))(v3 + 16))(a1, v33, AssociatedTypeWitness, v8);
      if (v73 <= 3)
      {
        unsigned int v74 = ((1 << (8 * v73)) | 0xCu) >> (8 * v73);
        if (v74 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v73) = 6;
          return v40;
        }
        if (v74 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v73) = 6;
          return v40;
        }
      }
      *((unsigned char *)a1 + v73) = 6;
      return v40;
    case 7u:
      uint64_t v75 = ~v6;
      uint64_t v76 = *(void (**)(unint64_t, unint64_t, uint64_t))(v117 + 16);
      uint64_t v40 = a1;
      char v77 = v33;
      uint64_t v78 = v30;
      ((void (*)(void *))v76)(a1);
      v76(((unint64_t)a1 + v28) & v75, (unint64_t)&v77[v28] & v75, v118);
      if (v78 <= 3)
      {
        unsigned int v79 = ((1 << (8 * v78)) | 0xCu) >> (8 * v78);
        if (v79 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v78) = 7;
          return v40;
        }
        if (v79 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v78) = 7;
          return v40;
        }
      }
      *((unsigned char *)a1 + v78) = 7;
      return v40;
    case 8u:
      uint64_t v82 = *(void *)v33;
      uint64_t v83 = v30;
      id v84 = *(id *)v33;
      uint64_t v40 = a1;
      *a1 = v82;
      if (v83 <= 3)
      {
        unsigned int v85 = ((1 << (8 * v83)) | 0xCu) >> (8 * v83);
        if (v85 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v83) = 8;
          return v40;
        }
        if (v85 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v83) = 8;
          return v40;
        }
      }
      *((unsigned char *)a1 + v83) = 8;
      return v40;
    case 9u:
      uint64_t v40 = a1;
      uint64_t v80 = v30;
      (*(void (**)(void *, unsigned __int8 *, uint64_t, uint64_t))(v3 + 16))(a1, v33, AssociatedTypeWitness, v8);
      if (v80 <= 3)
      {
        unsigned int v81 = ((1 << (8 * v80)) | 0xCu) >> (8 * v80);
        if (v81 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v80) = 9;
          return v40;
        }
        if (v81 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v80) = 9;
          return v40;
        }
      }
      *((unsigned char *)a1 + v80) = 9;
      return v40;
    default:
      if (v30 > 3) {
        goto LABEL_54;
      }
      unsigned int v45 = ((1 << (8 * v30)) | 0xCu) >> (8 * v30);
      uint64_t v46 = 2;
      if (v45 > 0xFFF5) {
        uint64_t v46 = 4;
      }
      if (v45 <= 0xF5) {
LABEL_54:
      }
        uint64_t v46 = 1;
      uint64_t v40 = a1;
      memcpy(a1, v33, v46 + v30);
      return v40;
  }
}

void *sub_24D708C6C(void *a1, void *a2)
{
  unint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v114 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v114 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v104 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v104 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v110 = v10 + v5;
  uint64_t v113 = v6;
  unsigned int v11 = *(_DWORD *)(v6 + 84);
  uint64_t v103 = v8;
  unsigned int v97 = *(_DWORD *)(v8 + 84);
  unsigned int v112 = v11;
  if (v11 <= v97) {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v100 = v11;
  if (v11 <= 0x7FFFFFFE) {
    int v12 = 2147483646;
  }
  else {
    int v12 = v11;
  }
  int v109 = v12;
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v105 = v13 + 7;
  uint64_t v102 = v9 + 8;
  uint64_t v99 = *(void *)(*(void *)(v104 - 8) + 64) + 7;
  size_t v14 = ((((v99 + ((v9 + 8 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v15 = ((v10 + v5) & ~v10) + v14 + 8;
  unint64_t v16 = v5 + 7;
  unint64_t v17 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v19 = ((((v5 + 7 + ((v18 + 16 + v17) & ~v18)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v20 = ((v18 + 16) & ~v18) + v5;
  unint64_t v21 = v17 + 8;
  if (*(_DWORD *)(v4 + 84)) {
    size_t v22 = v5;
  }
  else {
    size_t v22 = v5 + 1;
  }
  size_t __n = v22;
  size_t v111 = v22 + v18;
  unint64_t v23 = ((v22 + v18) & ~v18) + v5;
  uint64_t v108 = v13 + v7;
  unint64_t v24 = ((v13 + v7) & ~v7) + v13;
  if (v5 > v15) {
    unint64_t v15 = v5;
  }
  if (v19 > v20) {
    unint64_t v20 = v19;
  }
  if (v21 <= v23) {
    unint64_t v21 = v23;
  }
  if (v15 <= v20) {
    unint64_t v15 = v20;
  }
  if (v24 > v21) {
    unint64_t v21 = v24;
  }
  if (v21 > v15) {
    unint64_t v15 = v21;
  }
  if (v15 <= 8) {
    uint64_t v25 = 8;
  }
  else {
    uint64_t v25 = v15;
  }
  char v26 = 8 * v25;
  if (v25 > 3) {
    goto LABEL_28;
  }
  unsigned int v27 = ((1 << v26) | 0xCu) >> v26;
  if (v27 > 0xFFF5)
  {
    unsigned int v28 = *(_DWORD *)((char *)v2 + v25);
    unsigned int v29 = v28 - 10;
    if (v28 < 0xA) {
      goto LABEL_46;
    }
    goto LABEL_33;
  }
  if (v27 > 0xF5)
  {
    unsigned int v28 = *(unsigned __int16 *)((char *)v2 + v25);
    unsigned int v29 = v28 - 10;
    if (v28 < 0xA) {
      goto LABEL_46;
    }
  }
  else
  {
LABEL_28:
    unsigned int v28 = *((unsigned __int8 *)v2 + v25);
    unsigned int v29 = v28 - 10;
    if (v28 < 0xA) {
      goto LABEL_46;
    }
  }
LABEL_33:
  if (v25 <= 3) {
    uint64_t v30 = v25;
  }
  else {
    uint64_t v30 = 4;
  }
  switch(v30)
  {
    case 1:
      int v31 = *(unsigned __int8 *)v2;
      if (v25 < 4) {
        goto LABEL_44;
      }
      goto LABEL_45;
    case 2:
      int v31 = *(unsigned __int16 *)v2;
      if (v25 >= 4) {
        goto LABEL_45;
      }
      goto LABEL_44;
    case 3:
      int v31 = *(unsigned __int16 *)v2 | (*((unsigned __int8 *)v2 + 2) << 16);
      if (v25 >= 4) {
        goto LABEL_45;
      }
      goto LABEL_44;
    case 4:
      int v31 = *(_DWORD *)v2;
      if (v25 < 4) {
LABEL_44:
      }
        v31 |= v29 << v26;
LABEL_45:
      unsigned int v28 = v31 + 10;
      break;
    default:
      break;
  }
LABEL_46:
  uint64_t v107 = ~v10;
  uint64_t v101 = ~v9;
  uint64_t v115 = ~v18;
  uint64_t v106 = ~v7;
  uint64_t v32 = AssociatedTypeWitness;
  switch(v28)
  {
    case 0u:
      (*(void (**)(void *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
      unint64_t v33 = ((unint64_t)v2 + v110) & v107;
      if (v112 == v109)
      {
        int v34 = (*(uint64_t (**)(unint64_t))(v113 + 48))(((unint64_t)v2 + v110) & v107);
LABEL_78:
        unint64_t v33 = ((unint64_t)v2 + v110) & v107;
        if (v34) {
          goto LABEL_81;
        }
        uint64_t v44 = (uint64_t *)((v105 + (((unint64_t)v2 + v110) & v107)) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_80;
      }
      uint64_t v44 = (uint64_t *)((v105 + v33) & 0xFFFFFFFFFFFFFFF8);
      if (v100 > 0x7FFFFFFE)
      {
        int v34 = (*(uint64_t (**)(unint64_t))(v103 + 48))(((unint64_t)v44 + v102) & v101);
        goto LABEL_78;
      }
      uint64_t v45 = *v44;
      if ((unint64_t)*v44 >= 0xFFFFFFFF) {
        LODWORD(v45) = -1;
      }
      if ((v45 + 1) < 2)
      {
LABEL_80:
        (*(void (**)(unint64_t, uint64_t))(v113 + 8))(v33, v114);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v103 + 8))(((unint64_t)v44 + v102) & v101, v104);
        swift_bridgeObjectRelease();
        char v26 = 8 * v25;
        swift_bridgeObjectRelease();
        unint64_t v33 = ((unint64_t)v2 + v110) & v107;
      }
LABEL_81:

LABEL_82:
      uint64_t v32 = AssociatedTypeWitness;
      if (v25 > 3) {
        goto LABEL_83;
      }
LABEL_66:
      unsigned int v41 = ((1 << v26) | 0xCu) >> v26;
      if (v41 > 0xFFF5)
      {
        unsigned int v42 = *(_DWORD *)((char *)a2 + v25);
        unsigned int v43 = v42 - 10;
        if (v42 < 0xA) {
          break;
        }
      }
      else if (v41 <= 0xF5)
      {
LABEL_83:
        unsigned int v42 = *((unsigned __int8 *)a2 + v25);
        unsigned int v43 = v42 - 10;
        if (v42 < 0xA) {
          break;
        }
      }
      else
      {
        unsigned int v42 = *(unsigned __int16 *)((char *)a2 + v25);
        unsigned int v43 = v42 - 10;
        if (v42 < 0xA) {
          break;
        }
      }
      if (v25 <= 3) {
        uint64_t v46 = v25;
      }
      else {
        uint64_t v46 = 4;
      }
      switch(v46)
      {
        case 1:
          int v47 = *(unsigned __int8 *)a2;
          if (v25 >= 4) {
            goto LABEL_99;
          }
          goto LABEL_91;
        case 2:
          int v47 = *(unsigned __int16 *)a2;
          if (v25 < 4) {
            goto LABEL_91;
          }
          goto LABEL_99;
        case 3:
          int v47 = *(unsigned __int16 *)a2 | (*((unsigned __int8 *)a2 + 2) << 16);
          if (v25 < 4) {
            goto LABEL_91;
          }
          goto LABEL_99;
        case 4:
          int v47 = *(_DWORD *)a2;
          if (v25 < 4)
          {
LABEL_91:
            unsigned int v42 = (v47 | (v43 << v26)) + 10;
          }
          else
          {
LABEL_99:
            unsigned int v42 = v47 + 10;
            if (v42 > 9)
            {
LABEL_100:
              if (v25 > 3) {
                goto LABEL_104;
              }
              unsigned int v50 = ((1 << v26) | 0xCu) >> v26;
              uint64_t v51 = 2;
              if (v50 > 0xFFF5) {
                uint64_t v51 = 4;
              }
              if (v50 <= 0xF5) {
LABEL_104:
              }
                uint64_t v51 = 1;
              memcpy(v2, a2, v51 + v25);
              return v2;
            }
          }
          break;
        default:
          goto LABEL_92;
      }
      break;
    case 1u:
      size_t v96 = v14;
      uint64_t v35 = *(void (**)(void *, uint64_t))(v4 + 8);
      v35(v2, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      unint64_t v36 = ((((unint64_t)v2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + v18 + 16) & v115;
      v35((void *)v36, AssociatedTypeWitness);
      unint64_t v37 = (v16 + v36) & 0xFFFFFFFFFFFFFFF8;
      if (HIDWORD(*(void *)v37) <= 0x80000000) {
        sub_24D466534(*(void *)v37, *(void *)(v37 + 8));
      }

      uint64_t v32 = AssociatedTypeWitness;
      goto LABEL_61;
    case 2u:
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))(((unint64_t)v2 + v18 + 16) & v115, AssociatedTypeWitness);
      goto LABEL_54;
    case 3u:
      (*(void (**)(void *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);

      if (v25 > 3) {
        goto LABEL_83;
      }
      goto LABEL_66;
    case 4u:
      size_t v96 = v14;
      int v38 = (*(uint64_t (**)(void *, uint64_t, uint64_t))(v4 + 48))(v2, 1, AssociatedTypeWitness);
      uint64_t v39 = *(void (**)(void *, uint64_t))(v4 + 8);
      if (!v38) {
        v39(v2, AssociatedTypeWitness);
      }
      v39((void *)(((unint64_t)v2 + v111) & v115), AssociatedTypeWitness);
      char v26 = 8 * v25;
      uint64_t v32 = AssociatedTypeWitness;
LABEL_61:
      size_t v14 = v96;
      if (v25 > 3) {
        goto LABEL_83;
      }
      goto LABEL_66;
    case 6u:
    case 9u:
      (*(void (**)(void *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
LABEL_54:
      if (v25 > 3) {
        goto LABEL_83;
      }
      goto LABEL_66;
    case 7u:
      uint64_t v40 = *(void (**)(void *, uint64_t))(v113 + 8);
      v40(v2, v114);
      v40((void *)(((unint64_t)v2 + v108) & v106), v114);
      char v26 = 8 * v25;
      goto LABEL_82;
    case 8u:

      goto LABEL_65;
    default:
LABEL_65:
      if (v25 <= 3) {
        goto LABEL_66;
      }
      goto LABEL_83;
  }
LABEL_92:
  switch(v42)
  {
    case 0u:
      (*(void (**)(void *, void *, uint64_t))(v4 + 16))(v2, a2, v32);
      unsigned int v48 = (char *)(((unint64_t)v2 + v110) & v107);
      int v49 = (char *)(((unint64_t)a2 + v110) & v107);
      if (v112 == v109)
      {
        if (!(*(unsigned int (**)(char *))(v113 + 48))(v49)) {
          goto LABEL_161;
        }
        goto LABEL_160;
      }
      uint64_t v75 = (uint64_t *)((unint64_t)&v49[v105] & 0xFFFFFFFFFFFFFFF8);
      if (v100 > 0x7FFFFFFE)
      {
        if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v103 + 48))(((unint64_t)v75 + v102) & v101, v97, v104))
        {
LABEL_161:
          uint64_t v75 = (uint64_t *)((unint64_t)&v49[v105] & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_162;
        }
LABEL_160:
        memcpy(v48, v49, v14);
        goto LABEL_163;
      }
      uint64_t v76 = *v75;
      if ((unint64_t)*v75 >= 0xFFFFFFFF) {
        LODWORD(v76) = -1;
      }
      if ((v76 + 1) >= 2) {
        goto LABEL_160;
      }
LABEL_162:
      (*(void (**)(char *, char *, uint64_t))(v113 + 16))(v48, v49, v114);
      uint64_t v83 = (void *)((unint64_t)&v48[v105] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v83 = *v75;
      unint64_t v84 = ((unint64_t)v83 + v102) & v101;
      unint64_t v85 = ((unint64_t)v75 + v102) & v101;
      size_t v86 = v14;
      uint64_t v87 = *(void (**)(unint64_t, unint64_t, uint64_t))(v103 + 16);
      swift_bridgeObjectRetain();
      v87(v84, v85, v104);
      size_t v14 = v86;
      uint64_t v88 = (void *)((v99 + v84) & 0xFFFFFFFFFFFFFFF8);
      id v89 = (void *)((v99 + v85) & 0xFFFFFFFFFFFFFFF8);
      void *v88 = *v89;
      id v90 = (void *)(((unint64_t)v88 + 15) & 0xFFFFFFFFFFFFFFF8);
      unsigned int v91 = (void *)(((unint64_t)v89 + 15) & 0xFFFFFFFFFFFFFFF8);
      void *v90 = *v91;
      v90[1] = v91[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_163:
      unint64_t v92 = *(void **)&v49[v14];
      id v93 = v92;
      *(void *)&v48[v14] = v92;
      if (v25 <= 3)
      {
        unsigned int v94 = ((1 << v26) | 0xCu) >> v26;
        if (v94 > 0xFFF5)
        {
          *(_DWORD *)((char *)v2 + v25) = 0;
          return v2;
        }
        if (v94 > 0xF5)
        {
          *(_WORD *)((char *)v2 + v25) = 0;
          return v2;
        }
      }
      *((unsigned char *)v2 + v25) = 0;
      return v2;
    case 1u:
      uint64_t v52 = *(void (**)(void *, void *, uint64_t))(v4 + 16);
      v52(v2, a2, v32);
      uint64_t v53 = (void *)(((unint64_t)v2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v54 = (void *)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      void *v53 = *v54;
      v53[1] = v54[1];
      uint64_t v55 = ((unint64_t)v53 + v18 + 16) & v115;
      uint64_t v56 = ((unint64_t)v54 + v18 + 16) & v115;
      swift_bridgeObjectRetain();
      v52((void *)v55, (void *)v56, v32);
      unint64_t v57 = (v16 + v55) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v58 = (uint64_t *)((v16 + v56) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v59 = *v58;
      if (HIDWORD(*v58) > 0x80000000)
      {
        *(_OWORD *)unint64_t v57 = *(_OWORD *)v58;
      }
      else
      {
        unint64_t v60 = v58[1];
        sub_24D5203A8(*v58, v60);
        *(void *)unint64_t v57 = v59;
        *(void *)(v57 + 8) = v60;
      }
      char v77 = *(void **)(((unint64_t)v58 + 23) & 0xFFFFFFFFFFFFFFF8);
      id v78 = v77;
      *(void *)((v57 + 23) & 0xFFFFFFFFFFFFFFF8) = v77;
      if (v25 > 3) {
        goto LABEL_147;
      }
      __int16 v79 = 1;
      unsigned int v80 = ((1 << v26) | 0xCu) >> v26;
      if (v80 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 1;
      }
      else
      {
        if (v80 > 0xF5) {
          goto LABEL_178;
        }
LABEL_147:
        *((unsigned char *)v2 + v25) = 1;
      }
      return v2;
    case 2u:
      void *v2 = *a2;
      v2[1] = a2[1];
      uint64_t v61 = *(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16);
      swift_bridgeObjectRetain();
      v61(((unint64_t)v2 + v18 + 16) & v115, ((unint64_t)a2 + v18 + 16) & v115, v32);
      if (v25 > 3) {
        goto LABEL_111;
      }
      unsigned int v62 = ((1 << v26) | 0xCu) >> v26;
      if (v62 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 2;
      }
      else if (v62 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 2;
      }
      else
      {
LABEL_111:
        *((unsigned char *)v2 + v25) = 2;
      }
      return v2;
    case 3u:
      (*(void (**)(void *, void *, uint64_t))(v4 + 16))(v2, a2, v32);
      unsigned int v63 = *(void **)(((unint64_t)a2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
      id v64 = v63;
      *(void *)(((unint64_t)v2 + v5 + 7) & 0xFFFFFFFFFFFFFFF8) = v63;
      if (v25 > 3) {
        goto LABEL_115;
      }
      unsigned int v65 = ((1 << v26) | 0xCu) >> v26;
      if (v65 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 3;
      }
      else if (v65 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 3;
      }
      else
      {
LABEL_115:
        *((unsigned char *)v2 + v25) = 3;
      }
      return v2;
    case 4u:
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v4 + 48))(a2, 1, v32))
      {
        memcpy(v2, a2, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 16))(((unint64_t)v2 + v111) & v115, ((unint64_t)a2 + v111) & v115, v32);
      }
      else
      {
        unsigned int v81 = *(void (**)(void *, void *, uint64_t))(v4 + 16);
        v81(v2, a2, v32);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v32);
        v81((void *)(((unint64_t)v2 + v111) & v115), (void *)(((unint64_t)a2 + v111) & v115), v32);
      }
      if (v25 > 3) {
        goto LABEL_152;
      }
      unsigned int v82 = ((1 << v26) | 0xCu) >> v26;
      if (v82 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 4;
      }
      else if (v82 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 4;
      }
      else
      {
LABEL_152:
        *((unsigned char *)v2 + v25) = 4;
      }
      return v2;
    case 5u:
      *(unsigned char *)unint64_t v2 = *(unsigned char *)a2;
      if (v25 > 3) {
        goto LABEL_121;
      }
      unsigned int v66 = ((1 << v26) | 0xCu) >> v26;
      if (v66 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 5;
      }
      else if (v66 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 5;
      }
      else
      {
LABEL_121:
        *((unsigned char *)v2 + v25) = 5;
      }
      return v2;
    case 6u:
      (*(void (**)(void *, void *, uint64_t))(v4 + 16))(v2, a2, v32);
      if (v25 > 3) {
        goto LABEL_125;
      }
      unsigned int v67 = ((1 << v26) | 0xCu) >> v26;
      if (v67 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 6;
      }
      else if (v67 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 6;
      }
      else
      {
LABEL_125:
        *((unsigned char *)v2 + v25) = 6;
      }
      return v2;
    case 7u:
      unsigned int v68 = v2;
      uint64_t v69 = *(void (**)(void *, void *, uint64_t))(v113 + 16);
      v69(v2, a2, v114);
      v69((void *)(((unint64_t)v2 + v108) & v106), (void *)(((unint64_t)a2 + v108) & v106), v114);
      if (v25 > 3) {
        goto LABEL_129;
      }
      unsigned int v70 = ((1 << v26) | 0xCu) >> v26;
      if (v70 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 7;
      }
      else
      {
        unsigned int v68 = v2;
        if (v70 > 0xF5)
        {
          *(_WORD *)((char *)v2 + v25) = 7;
        }
        else
        {
LABEL_129:
          *((unsigned char *)v68 + v25) = 7;
          return v68;
        }
      }
      return v2;
    case 8u:
      unsigned int v72 = (void *)*a2;
      id v73 = v72;
      void *v2 = v72;
      if (v25 > 3) {
        goto LABEL_137;
      }
      unsigned int v74 = ((1 << v26) | 0xCu) >> v26;
      if (v74 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 8;
      }
      else if (v74 > 0xF5)
      {
        __int16 v79 = 8;
LABEL_178:
        *(_WORD *)((char *)v2 + v25) = v79;
      }
      else
      {
LABEL_137:
        *((unsigned char *)v2 + v25) = 8;
      }
      return v2;
    case 9u:
      (*(void (**)(void *, void *, uint64_t))(v4 + 16))(v2, a2, v32);
      if (v25 > 3) {
        goto LABEL_133;
      }
      unsigned int v71 = ((1 << v26) | 0xCu) >> v26;
      if (v71 > 0xFFF5)
      {
        *(_DWORD *)((char *)v2 + v25) = 9;
      }
      else if (v71 > 0xF5)
      {
        *(_WORD *)((char *)v2 + v25) = 9;
      }
      else
      {
LABEL_133:
        *((unsigned char *)v2 + v25) = 9;
      }
      return v2;
    default:
      goto LABEL_100;
  }
}

_OWORD *sub_24D709CF0(_OWORD *a1, unsigned __int8 *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v4 = *(void *)(v3 + 64);
  uint64_t v96 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v96 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v6 | v9 | 7;
  uint64_t v95 = v5;
  uint64_t v12 = *(unsigned int *)(v5 + 84);
  if (v12 <= *(_DWORD *)(v8 + 84)) {
    unsigned int v13 = *(_DWORD *)(v8 + 84);
  }
  else {
    unsigned int v13 = *(_DWORD *)(v5 + 84);
  }
  if (v13 <= 0x7FFFFFFE) {
    int v14 = 2147483646;
  }
  else {
    int v14 = v13;
  }
  int v92 = v14;
  uint64_t v15 = *(void *)(v5 + 64);
  uint64_t v16 = v15 + 7;
  unint64_t v17 = ((((*(void *)(*(void *)(v7 - 8) + 64) + 7 + ((v9 + 8 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v18 = ((v10 + v4) & ~v10) + v17 + 8;
  unint64_t v19 = v4 + 7;
  unint64_t v20 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v22 = ((((v4 + 7 + ((v21 + 16 + v20) & ~v21)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v23 = ((v21 + 16) & ~v21) + v4;
  unint64_t v24 = v20 + 8;
  if (*(_DWORD *)(v3 + 84)) {
    size_t v25 = v4;
  }
  else {
    size_t v25 = v4 + 1;
  }
  size_t v93 = v25 + v21;
  uint64_t v26 = v15 + v6;
  unint64_t v27 = ((v15 + v6) & ~v6) + v15;
  if (v4 > v18) {
    unint64_t v18 = v4;
  }
  if (v22 > v23) {
    unint64_t v23 = v22;
  }
  if (v24 <= ((v25 + v21) & ~v21) + v4) {
    unint64_t v24 = ((v25 + v21) & ~v21) + v4;
  }
  if (v18 <= v23) {
    unint64_t v18 = v23;
  }
  if (v27 > v24) {
    unint64_t v24 = v27;
  }
  if (v24 > v18) {
    unint64_t v18 = v24;
  }
  if (v18 <= 8) {
    uint64_t v28 = 8;
  }
  else {
    uint64_t v28 = v18;
  }
  if (v28 > 3) {
    goto LABEL_28;
  }
  unsigned int v29 = ((1 << (8 * v28)) | 0xCu) >> (8 * v28);
  if (v29 <= 0xFFF5)
  {
    if (v29 > 0xF5)
    {
      unsigned int v30 = *(unsigned __int16 *)&a2[v28];
LABEL_29:
      int v31 = a2;
      unsigned int v32 = v30 - 10;
      if (v30 >= 0xA) {
        goto LABEL_32;
      }
      goto LABEL_46;
    }
LABEL_28:
    unsigned int v30 = a2[v28];
    goto LABEL_29;
  }
  int v31 = a2;
  unsigned int v30 = *(_DWORD *)&a2[v28];
  unsigned int v32 = v30 - 10;
  if (v30 >= 0xA)
  {
LABEL_32:
    if (v28 <= 3) {
      uint64_t v33 = v28;
    }
    else {
      uint64_t v33 = 4;
    }
    switch(v33)
    {
      case 1:
        int v34 = *v31;
        if (v28 < 4) {
          goto LABEL_44;
        }
        goto LABEL_45;
      case 2:
        int v34 = *(unsigned __int16 *)v31;
        if (v28 >= 4) {
          goto LABEL_45;
        }
        goto LABEL_44;
      case 3:
        int v34 = *(unsigned __int16 *)v31 | (v31[2] << 16);
        if (v28 >= 4) {
          goto LABEL_45;
        }
        goto LABEL_44;
      case 4:
        int v34 = *(_DWORD *)v31;
        if (v28 < 4) {
LABEL_44:
        }
          v34 |= v32 << (8 * v28);
LABEL_45:
        unsigned int v30 = v34 + 10;
        break;
      default:
        break;
    }
  }
LABEL_46:
  uint64_t v35 = ~v21;
  switch(v30)
  {
    case 0u:
      unsigned int v86 = *(_DWORD *)(v8 + 84);
      uint64_t v36 = v16;
      uint64_t v89 = v9 + 8;
      uint64_t v90 = *(void *)(v7 - 8);
      size_t v37 = v17;
      uint64_t v91 = v7;
      uint64_t v94 = v28;
      uint64_t v38 = ~v10;
      uint64_t v87 = *(void *)(v90 + 64) + 7;
      uint64_t v88 = ~v9;
      uint64_t v39 = a1;
      uint64_t v40 = v31;
      unint64_t v11 = v10 + v4;
      (*(void (**)(_OWORD *))(v3 + 32))(a1);
      unsigned int v41 = (char *)(((unint64_t)a1 + v11) & v38);
      unsigned int v42 = (char *)((unint64_t)&v40[v11] & v38);
      if (v12 == v92)
      {
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v95 + 48))(v42, v12, v96)) {
          goto LABEL_110;
        }
LABEL_109:
        memcpy(v41, v42, v37);
        goto LABEL_112;
      }
      unsigned int v74 = (uint64_t *)((unint64_t)&v42[v36] & 0xFFFFFFFFFFFFFFF8);
      if (v13 <= 0x7FFFFFFE)
      {
        uint64_t v75 = v36;
        uint64_t v76 = *v74;
        if ((unint64_t)*v74 >= 0xFFFFFFFF) {
          LODWORD(v76) = -1;
        }
        if ((v76 + 1) < 2) {
          goto LABEL_111;
        }
        goto LABEL_109;
      }
      if ((*(unsigned int (**)(unint64_t, void, uint64_t))(v90 + 48))(((unint64_t)v74 + v89) & v88, v86, v91))
      {
        goto LABEL_109;
      }
LABEL_110:
      uint64_t v75 = v36;
      unsigned int v74 = (uint64_t *)((unint64_t)&v42[v36] & 0xFFFFFFFFFFFFFFF8);
LABEL_111:
      uint64_t v79 = v75;
      (*(void (**)(char *, char *, uint64_t))(v95 + 32))(v41, v42, v96);
      unsigned int v80 = (void *)((unint64_t)&v41[v79] & 0xFFFFFFFFFFFFFFF8);
      void *v80 = *v74;
      unint64_t v81 = ((unint64_t)v80 + v89) & v88;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v90 + 32))(v81, ((unint64_t)v74 + v89) & v88, v91);
      unsigned int v82 = (void *)((v87 + v81) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v83 = (void *)((v87 + (((unint64_t)v74 + v89) & v88)) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v82 = *v83;
      *(_OWORD *)(((unint64_t)v82 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v83 + 15) & 0xFFFFFFFFFFFFFFF8);
LABEL_112:
      *(void *)&v41[v37] = *(void *)&v42[v37];
      if (v94 <= 3)
      {
        unsigned int v84 = ((1 << (8 * v94)) | 0xCu) >> (8 * v94);
        if (v84 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v94) = 0;
          return v39;
        }
        if (v84 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v94) = 0;
          return v39;
        }
      }
      *((unsigned char *)a1 + v94) = 0;
      return v39;
    case 1u:
      uint64_t v45 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
      uint64_t v39 = a1;
      uint64_t v46 = v31;
      uint64_t v47 = v28;
      ((void (*)(_OWORD *))v45)(a1);
      unsigned int v48 = (_OWORD *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
      int v49 = (_OWORD *)((unint64_t)&v46[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v48 = *v49;
      uint64_t v50 = ((unint64_t)v48 + v21 + 16) & ~v21;
      uint64_t v51 = ((unint64_t)v49 + v21 + 16) & ~v21;
      v45(v50, v51, AssociatedTypeWitness);
      uint64_t v52 = (_OWORD *)((v19 + v50) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v53 = (_OWORD *)((v19 + v51) & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v52 = *v53;
      *(void *)(((unint64_t)v52 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v53 + 23) & 0xFFFFFFFFFFFFFFF8);
      if (v47 <= 3)
      {
        unsigned int v54 = ((1 << (8 * v47)) | 0xCu) >> (8 * v47);
        if (v54 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v47) = 1;
          return v39;
        }
        if (v54 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v47) = 1;
          return v39;
        }
      }
      *((unsigned char *)a1 + v47) = 1;
      return v39;
    case 2u:
      uint64_t v39 = a1;
      *a1 = *(_OWORD *)v31;
      uint64_t v55 = v28;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 32))(((unint64_t)a1 + v21 + 16) & v35, (unint64_t)&v31[v21 + 16] & v35, AssociatedTypeWitness);
      if (v55 <= 3)
      {
        unsigned int v56 = ((1 << (8 * v55)) | 0xCu) >> (8 * v55);
        if (v56 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v55) = 2;
          return v39;
        }
        if (v56 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v55) = 2;
          return v39;
        }
      }
      *((unsigned char *)a1 + v55) = 2;
      return v39;
    case 3u:
      uint64_t v39 = a1;
      unint64_t v57 = v31;
      uint64_t v58 = v28;
      (*(void (**)(_OWORD *))(v3 + 32))(a1);
      *(void *)(((unint64_t)a1 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v57[v4 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v58 <= 3)
      {
        unsigned int v59 = ((1 << (8 * v58)) | 0xCu) >> (8 * v58);
        if (v59 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v58) = 3;
          return v39;
        }
        if (v59 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v58) = 3;
          return v39;
        }
      }
      *((unsigned char *)a1 + v58) = 3;
      return v39;
    case 4u:
      uint64_t v60 = v28;
      uint64_t v61 = v31;
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v3 + 48))(v31, 1, AssociatedTypeWitness))
      {
        size_t v62 = v25;
        uint64_t v39 = a1;
        memcpy(a1, v61, v62);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v3 + 32))(((unint64_t)a1 + v93) & v35, (unint64_t)&v61[v93] & v35, AssociatedTypeWitness);
      }
      else
      {
        char v77 = *(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v3 + 32);
        uint64_t v39 = a1;
        v77(a1, v61, AssociatedTypeWitness);
        (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v3 + 56))(a1, 0, 1, AssociatedTypeWitness);
        v77((_OWORD *)(((unint64_t)a1 + v93) & v35), (unsigned __int8 *)((unint64_t)&v61[v93] & v35), AssociatedTypeWitness);
      }
      if (v60 <= 3)
      {
        unsigned int v78 = ((1 << (8 * v60)) | 0xCu) >> (8 * v60);
        if (v78 > 0xFFF5)
        {
          *(_DWORD *)((char *)v39 + v60) = 4;
          return v39;
        }
        if (v78 > 0xF5)
        {
          *(_WORD *)((char *)v39 + v60) = 4;
          return v39;
        }
      }
      *((unsigned char *)v39 + v60) = 4;
      return v39;
    case 5u:
      uint64_t v39 = a1;
      *(unsigned char *)a1 = *v31;
      if (v28 <= 3)
      {
        unsigned int v63 = ((1 << (8 * v28)) | 0xCu) >> (8 * v28);
        if (v63 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v28) = 5;
          return v39;
        }
        if (v63 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v28) = 5;
          return v39;
        }
      }
      *((unsigned char *)a1 + v28) = 5;
      return v39;
    case 6u:
      uint64_t v39 = a1;
      uint64_t v64 = v28;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v3 + 32))(a1, v31, AssociatedTypeWitness);
      if (v64 <= 3)
      {
        unsigned int v65 = ((1 << (8 * v64)) | 0xCu) >> (8 * v64);
        if (v65 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v64) = 6;
          return v39;
        }
        if (v65 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v64) = 6;
          return v39;
        }
      }
      *((unsigned char *)a1 + v64) = 6;
      return v39;
    case 7u:
      uint64_t v66 = ~v6;
      unsigned int v67 = *(void (**)(unint64_t, unint64_t, uint64_t))(v95 + 32);
      uint64_t v39 = a1;
      unsigned int v68 = v31;
      uint64_t v69 = v28;
      ((void (*)(_OWORD *))v67)(a1);
      v67(((unint64_t)a1 + v26) & v66, (unint64_t)&v68[v26] & v66, v96);
      if (v69 <= 3)
      {
        unsigned int v70 = ((1 << (8 * v69)) | 0xCu) >> (8 * v69);
        if (v70 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v69) = 7;
          return v39;
        }
        if (v70 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v69) = 7;
          return v39;
        }
      }
      *((unsigned char *)a1 + v69) = 7;
      return v39;
    case 8u:
      uint64_t v39 = a1;
      *(void *)a1 = *(void *)v31;
      if (v28 <= 3)
      {
        unsigned int v73 = ((1 << (8 * v28)) | 0xCu) >> (8 * v28);
        if (v73 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v28) = 8;
          return v39;
        }
        if (v73 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v28) = 8;
          return v39;
        }
      }
      *((unsigned char *)a1 + v28) = 8;
      return v39;
    case 9u:
      uint64_t v39 = a1;
      uint64_t v71 = v28;
      (*(void (**)(_OWORD *, unsigned __int8 *, uint64_t))(v3 + 32))(a1, v31, AssociatedTypeWitness);
      if (v71 <= 3)
      {
        unsigned int v72 = ((1 << (8 * v71)) | 0xCu) >> (8 * v71);
        if (v72 > 0xFFF5)
        {
          *(_DWORD *)((char *)a1 + v71) = 9;
          return v39;
        }
        if (v72 > 0xF5)
        {
          *(_WORD *)((char *)a1 + v71) = 9;
          return v39;
        }
      }
      *((unsigned char *)a1 + v71) = 9;
      return v39;
    default:
      if (v28 > 3) {
        goto LABEL_54;
      }
      unsigned int v43 = ((1 << (8 * v28)) | 0xCu) >> (8 * v28);
      uint64_t v44 = 2;
      if (v43 > 0xFFF5) {
        uint64_t v44 = 4;
      }
      if (v43 <= 0xF5) {
LABEL_54:
      }
        uint64_t v44 = 1;
      uint64_t v39 = a1;
      memcpy(a1, v31, v44 + v28);
      return v39;
  }
}

unsigned __int8 *sub_24D70A870(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unint64_t v2 = a1;
  if (a1 == a2) {
    return v2;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v101 = swift_getAssociatedTypeWitness();
  uint64_t v104 = v2;
  uint64_t v6 = *(void *)(v101 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v90 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v90 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = v7 | v9 | 7;
  unint64_t v96 = v10 + v5;
  uint64_t v100 = v6;
  unsigned int v11 = *(_DWORD *)(v6 + 84);
  uint64_t v89 = v8;
  unsigned int v84 = *(_DWORD *)(v8 + 84);
  unsigned int v98 = v11;
  if (v11 <= v84) {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  unsigned int v87 = v11;
  if (v11 <= 0x7FFFFFFE) {
    int v12 = 2147483646;
  }
  else {
    int v12 = v11;
  }
  int v95 = v12;
  uint64_t v13 = *(void *)(v6 + 64);
  uint64_t v91 = v13 + 7;
  uint64_t v88 = v9 + 8;
  uint64_t v86 = *(void *)(*(void *)(v90 - 8) + 64) + 7;
  unint64_t v99 = ((((v86 + ((v9 + 8 + ((v13 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  unint64_t v14 = ((v10 + v5) & ~v10) + v99 + 8;
  unint64_t v15 = v5 + 7;
  unint64_t v16 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v18 = ((((v5 + 7 + ((v17 + 16 + v16) & ~v17)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v19 = ((v17 + 16) & ~v17) + v5;
  unint64_t v20 = v16 + 8;
  if (*(_DWORD *)(v4 + 84)) {
    size_t v21 = v5;
  }
  else {
    size_t v21 = v5 + 1;
  }
  size_t __n = v21;
  size_t v97 = v21 + v17;
  unint64_t v22 = ((v21 + v17) & ~v17) + v5;
  uint64_t v94 = v13 + v7;
  unint64_t v23 = ((v13 + v7) & ~v7) + v13;
  if (v5 > v14) {
    unint64_t v14 = v5;
  }
  if (v18 > v19) {
    unint64_t v19 = v18;
  }
  if (v20 <= v22) {
    unint64_t v20 = v22;
  }
  if (v14 <= v19) {
    unint64_t v14 = v19;
  }
  if (v23 > v20) {
    unint64_t v20 = v23;
  }
  if (v20 > v14) {
    unint64_t v14 = v20;
  }
  if (v14 <= 8) {
    uint64_t v24 = 8;
  }
  else {
    uint64_t v24 = v14;
  }
  char v25 = 8 * v24;
  if (v24 <= 3)
  {
    unsigned int v26 = ((1 << v25) | 0xCu) >> v25;
    if (v26 > 0xFFF5)
    {
      unsigned int v27 = *(_DWORD *)&v2[v24];
      goto LABEL_31;
    }
    if (v26 > 0xF5)
    {
      unsigned int v27 = *(unsigned __int16 *)&v2[v24];
      goto LABEL_31;
    }
  }
  unsigned int v27 = v2[v24];
LABEL_31:
  unsigned int v28 = v27 - 10;
  unsigned int v29 = a2;
  if (v27 >= 0xA)
  {
    if (v24 <= 3) {
      uint64_t v30 = v24;
    }
    else {
      uint64_t v30 = 4;
    }
    switch(v30)
    {
      case 1:
        int v31 = *v2;
        if (v24 < 4) {
          goto LABEL_43;
        }
        goto LABEL_44;
      case 2:
        int v31 = *(unsigned __int16 *)v2;
        if (v24 >= 4) {
          goto LABEL_44;
        }
        goto LABEL_43;
      case 3:
        int v31 = *(unsigned __int16 *)v2 | (v2[2] << 16);
        if (v24 >= 4) {
          goto LABEL_44;
        }
        goto LABEL_43;
      case 4:
        int v31 = *(_DWORD *)v2;
        if (v24 < 4) {
LABEL_43:
        }
          v31 |= v28 << v25;
LABEL_44:
        unsigned int v27 = v31 + 10;
        break;
      default:
        break;
    }
  }
  uint64_t v93 = ~v10;
  uint64_t v32 = ~v9;
  uint64_t v102 = ~v17;
  uint64_t v92 = ~v7;
  uint64_t v33 = AssociatedTypeWitness;
  switch(v27)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
      unint64_t v34 = (unint64_t)&v2[v96] & v93;
      if (v98 == v95)
      {
        int v35 = (*(uint64_t (**)(unint64_t))(v100 + 48))((unint64_t)&v2[v96] & v93);
LABEL_78:
        unint64_t v34 = (unint64_t)&v2[v96] & v93;
        if (v35) {
          goto LABEL_81;
        }
        uint64_t v45 = (uint64_t *)((v91 + ((unint64_t)&v2[v96] & v93)) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_80;
      }
      uint64_t v45 = (uint64_t *)((v91 + v34) & 0xFFFFFFFFFFFFFFF8);
      if (v87 > 0x7FFFFFFE)
      {
        int v35 = (*(uint64_t (**)(unint64_t))(v89 + 48))(((unint64_t)v45 + v88) & v32);
        goto LABEL_78;
      }
      uint64_t v46 = *v45;
      if ((unint64_t)*v45 >= 0xFFFFFFFF) {
        LODWORD(v46) = -1;
      }
      if ((v46 + 1) < 2)
      {
LABEL_80:
        (*(void (**)(unint64_t, uint64_t))(v100 + 8))(v34, v101);
        swift_bridgeObjectRelease();
        (*(void (**)(unint64_t, uint64_t))(v89 + 8))(((unint64_t)v45 + v88) & v32, v90);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v34 = (unint64_t)&v2[v96] & v93;
      }
LABEL_81:

      uint64_t v33 = AssociatedTypeWitness;
      if (v24 > 3) {
        goto LABEL_82;
      }
LABEL_66:
      unsigned int v42 = ((1 << v25) | 0xCu) >> v25;
      if (v42 > 0xFFF5)
      {
        unsigned int v43 = *(_DWORD *)&v29[v24];
        unsigned int v44 = v43 - 10;
        if (v43 < 0xA) {
          break;
        }
      }
      else if (v42 <= 0xF5)
      {
LABEL_82:
        unsigned int v43 = v29[v24];
        unsigned int v44 = v43 - 10;
        if (v43 < 0xA) {
          break;
        }
      }
      else
      {
        unsigned int v43 = *(unsigned __int16 *)&v29[v24];
        unsigned int v44 = v43 - 10;
        if (v43 < 0xA) {
          break;
        }
      }
      if (v24 <= 3) {
        uint64_t v47 = v24;
      }
      else {
        uint64_t v47 = 4;
      }
      switch(v47)
      {
        case 1:
          int v48 = *v29;
          if (v24 >= 4) {
            goto LABEL_98;
          }
          goto LABEL_90;
        case 2:
          int v48 = *(unsigned __int16 *)v29;
          if (v24 < 4) {
            goto LABEL_90;
          }
          goto LABEL_98;
        case 3:
          int v48 = *(unsigned __int16 *)v29 | (v29[2] << 16);
          if (v24 < 4) {
            goto LABEL_90;
          }
          goto LABEL_98;
        case 4:
          int v48 = *(_DWORD *)v29;
          if (v24 < 4)
          {
LABEL_90:
            unsigned int v43 = (v48 | (v44 << v25)) + 10;
          }
          else
          {
LABEL_98:
            unsigned int v43 = v48 + 10;
            if (v43 > 9)
            {
LABEL_99:
              if (v24 > 3) {
                goto LABEL_103;
              }
              unsigned int v51 = ((1 << v25) | 0xCu) >> v25;
              uint64_t v52 = 2;
              if (v51 > 0xFFF5) {
                uint64_t v52 = 4;
              }
              if (v51 <= 0xF5) {
LABEL_103:
              }
                uint64_t v52 = 1;
              memcpy(v2, v29, v52 + v24);
              return v2;
            }
          }
          break;
        default:
          goto LABEL_91;
      }
      break;
    case 1u:
      uint64_t v82 = ~v9;
      uint64_t v36 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      v36(v2, AssociatedTypeWitness);
      swift_bridgeObjectRelease();
      unint64_t v37 = (((unint64_t)&v2[v5 + 7] & 0xFFFFFFFFFFFFFFF8) + v17 + 16) & v102;
      v36((unsigned __int8 *)v37, AssociatedTypeWitness);
      unint64_t v38 = (v15 + v37) & 0xFFFFFFFFFFFFFFF8;
      if (HIDWORD(*(void *)v38) <= 0x80000000) {
        sub_24D466534(*(void *)v38, *(void *)(v38 + 8));
      }

      char v25 = 8 * v24;
      uint64_t v33 = AssociatedTypeWitness;
      goto LABEL_60;
    case 2u:
      swift_bridgeObjectRelease();
      (*(void (**)(unint64_t, uint64_t))(v4 + 8))((unint64_t)&v2[v17 + 16] & v102, AssociatedTypeWitness);
      goto LABEL_53;
    case 3u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);

      if (v24 > 3) {
        goto LABEL_82;
      }
      goto LABEL_66;
    case 4u:
      uint64_t v82 = ~v9;
      int v39 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v2, 1, AssociatedTypeWitness);
      uint64_t v40 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
      if (!v39)
      {
        uint64_t v83 = *(void (**)(unsigned __int8 *, uint64_t))(v4 + 8);
        v40(v2, AssociatedTypeWitness);
        uint64_t v40 = v83;
      }
      v40((unsigned __int8 *)((unint64_t)&v2[v97] & v102), AssociatedTypeWitness);
      uint64_t v33 = AssociatedTypeWitness;
LABEL_60:
      uint64_t v32 = v82;
      if (v24 > 3) {
        goto LABEL_82;
      }
      goto LABEL_66;
    case 6u:
    case 9u:
      (*(void (**)(unsigned __int8 *, uint64_t))(v4 + 8))(v2, AssociatedTypeWitness);
LABEL_53:
      if (v24 > 3) {
        goto LABEL_82;
      }
      goto LABEL_66;
    case 7u:
      unsigned int v41 = *(void (**)(unsigned __int8 *, uint64_t))(v100 + 8);
      v41(v104, v101);
      v41((unsigned __int8 *)((unint64_t)&v104[v94] & v92), v101);
      uint64_t v33 = AssociatedTypeWitness;
      unint64_t v2 = v104;
      if (v24 > 3) {
        goto LABEL_82;
      }
      goto LABEL_66;
    case 8u:

      goto LABEL_65;
    default:
LABEL_65:
      if (v24 <= 3) {
        goto LABEL_66;
      }
      goto LABEL_82;
  }
LABEL_91:
  switch(v43)
  {
    case 0u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v2, v29, v33);
      int v49 = (char *)((unint64_t)&v2[v96] & v93);
      uint64_t v50 = (char *)((unint64_t)&v29[v96] & v93);
      if (v98 == v95)
      {
        if (!(*(unsigned int (**)(char *))(v100 + 48))(v50)) {
          goto LABEL_158;
        }
        goto LABEL_157;
      }
      unsigned int v70 = (uint64_t *)((unint64_t)&v50[v91] & 0xFFFFFFFFFFFFFFF8);
      if (v87 > 0x7FFFFFFE)
      {
        if (!(*(unsigned int (**)(unint64_t, void, uint64_t))(v89 + 48))(((unint64_t)v70 + v88) & v32, v84, v90))
        {
LABEL_158:
          unsigned int v70 = (uint64_t *)((unint64_t)&v50[v91] & 0xFFFFFFFFFFFFFFF8);
          goto LABEL_159;
        }
LABEL_157:
        unint64_t v74 = v99;
        memcpy(v49, v50, v99);
        goto LABEL_160;
      }
      uint64_t v71 = *v70;
      if ((unint64_t)*v70 >= 0xFFFFFFFF) {
        LODWORD(v71) = -1;
      }
      if ((v71 + 1) >= 2) {
        goto LABEL_157;
      }
LABEL_159:
      (*(void (**)(char *, char *, uint64_t))(v100 + 32))(v49, v50, v101);
      uint64_t v75 = (void *)((unint64_t)&v49[v91] & 0xFFFFFFFFFFFFFFF8);
      *uint64_t v75 = *v70;
      unint64_t v76 = ((unint64_t)v75 + v88) & v32;
      unint64_t v77 = ((unint64_t)v70 + v88) & v32;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v89 + 32))(v76, v77, v90);
      unsigned int v78 = (void *)((v86 + v76) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v79 = (void *)((v86 + v77) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v78 = *v79;
      *(_OWORD *)(((unint64_t)v78 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v79 + 15) & 0xFFFFFFFFFFFFFFF8);
      unint64_t v74 = v99;
LABEL_160:
      *(void *)&v49[v74] = *(void *)&v50[v74];
      if (v24 <= 3)
      {
        unsigned int v80 = ((1 << v25) | 0xCu) >> v25;
        if (v80 > 0xFFF5)
        {
          *(_DWORD *)&v2[v24] = 0;
          return v2;
        }
        if (v80 > 0xF5)
        {
          *(_WORD *)&v2[v24] = 0;
          return v2;
        }
      }
      v2[v24] = 0;
      return v2;
    case 1u:
      uint64_t v53 = v2;
      unsigned int v54 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32);
      v54(v2, v29, v33);
      uint64_t v55 = (_OWORD *)((unint64_t)&v2[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      unsigned int v56 = (_OWORD *)((unint64_t)&v29[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      _OWORD *v55 = *v56;
      uint64_t v57 = ((unint64_t)v55 + v17 + 16) & v102;
      uint64_t v58 = ((unint64_t)v56 + v17 + 16) & v102;
      v54((unsigned __int8 *)v57, (unsigned __int8 *)v58, v33);
      unsigned int v59 = (_OWORD *)((v15 + v57) & 0xFFFFFFFFFFFFFFF8);
      uint64_t v60 = (_OWORD *)((v15 + v58) & 0xFFFFFFFFFFFFFFF8);
      *unsigned int v59 = *v60;
      *(void *)(((unint64_t)v59 + 23) & 0xFFFFFFFFFFFFFFF8) = *(void *)(((unint64_t)v60 + 23) & 0xFFFFFFFFFFFFFFF8);
      if (v24 > 3) {
        goto LABEL_108;
      }
      unsigned int v61 = ((1 << v25) | 0xCu) >> v25;
      if (v61 > 0xFFF5)
      {
        unint64_t v2 = v104;
        *(_DWORD *)&v104[v24] = 1;
      }
      else
      {
        uint64_t v53 = v104;
        if (v61 > 0xF5)
        {
          *(_WORD *)&v104[v24] = 1;
          return v104;
        }
        else
        {
LABEL_108:
          v53[v24] = 1;
          return v53;
        }
      }
      return v2;
    case 2u:
      *(_OWORD *)unint64_t v2 = *(_OWORD *)v29;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 32))((unint64_t)&v2[v17 + 16] & v102, (unint64_t)&v29[v17 + 16] & v102, v33);
      if (v24 > 3) {
        goto LABEL_112;
      }
      unsigned int v62 = ((1 << v25) | 0xCu) >> v25;
      if (v62 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 2;
      }
      else if (v62 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 2;
      }
      else
      {
LABEL_112:
        v2[v24] = 2;
      }
      return v2;
    case 3u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v2, v29, v33);
      *(void *)((unint64_t)&v2[v5 + 7] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v29[v5 + 7] & 0xFFFFFFFFFFFFFFF8);
      if (v24 > 3) {
        goto LABEL_116;
      }
      unsigned int v63 = ((1 << v25) | 0xCu) >> v25;
      if (v63 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 3;
      }
      else if (v63 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 3;
      }
      else
      {
LABEL_116:
        v2[v24] = 3;
      }
      return v2;
    case 4u:
      if ((*(unsigned int (**)(unsigned __int8 *, uint64_t, uint64_t))(v4 + 48))(v29, 1, v33))
      {
        memcpy(v2, v29, __n);
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v4 + 32))((unint64_t)&v2[v97] & v102, (unint64_t)&v29[v97] & v102, v33);
      }
      else
      {
        unsigned int v72 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32);
        v72(v2, v29, v33);
        (*(void (**)(unsigned __int8 *, void, uint64_t, uint64_t))(v4 + 56))(v2, 0, 1, v33);
        v72((unsigned __int8 *)((unint64_t)&v2[v97] & v102), (unsigned __int8 *)((unint64_t)&v29[v97] & v102), v33);
      }
      if (v24 > 3) {
        goto LABEL_148;
      }
      unsigned int v73 = ((1 << v25) | 0xCu) >> v25;
      if (v73 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 4;
      }
      else if (v73 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 4;
      }
      else
      {
LABEL_148:
        v2[v24] = 4;
      }
      return v2;
    case 5u:
      unsigned __int8 *v2 = *v29;
      if (v24 > 3) {
        goto LABEL_122;
      }
      unsigned int v64 = ((1 << v25) | 0xCu) >> v25;
      if (v64 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 5;
      }
      else if (v64 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 5;
      }
      else
      {
LABEL_122:
        v2[v24] = 5;
      }
      return v2;
    case 6u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v2, v29, v33);
      if (v24 > 3) {
        goto LABEL_126;
      }
      unsigned int v65 = ((1 << v25) | 0xCu) >> v25;
      if (v65 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 6;
      }
      else if (v65 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 6;
      }
      else
      {
LABEL_126:
        v2[v24] = 6;
      }
      return v2;
    case 7u:
      uint64_t v66 = *(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v100 + 32);
      v66(v2, v29, v101);
      v66((unsigned __int8 *)((unint64_t)&v2[v94] & v92), (unsigned __int8 *)((unint64_t)&v29[v94] & v92), v101);
      if (v24 > 3) {
        goto LABEL_130;
      }
      unsigned int v67 = ((1 << v25) | 0xCu) >> v25;
      if (v67 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 7;
      }
      else if (v67 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 7;
      }
      else
      {
LABEL_130:
        v2[v24] = 7;
      }
      return v2;
    case 8u:
      *(void *)unint64_t v2 = *(void *)v29;
      if (v24 > 3) {
        goto LABEL_138;
      }
      unsigned int v69 = ((1 << v25) | 0xCu) >> v25;
      if (v69 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 8;
      }
      else if (v69 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 8;
      }
      else
      {
LABEL_138:
        v2[v24] = 8;
      }
      return v2;
    case 9u:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v4 + 32))(v2, v29, v33);
      if (v24 > 3) {
        goto LABEL_134;
      }
      unsigned int v68 = ((1 << v25) | 0xCu) >> v25;
      if (v68 > 0xFFF5)
      {
        *(_DWORD *)&v2[v24] = 9;
      }
      else if (v68 > 0xF5)
      {
        *(_WORD *)&v2[v24] = 9;
      }
      else
      {
LABEL_134:
        v2[v24] = 9;
      }
      return v2;
    default:
      goto LABEL_99;
  }
}

uint64_t sub_24D70B87C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v6 + 64);
  unint64_t v11 = (((v7 | v9 | 7) + v5) & ~(v7 | v9 | 7))
      + ((((*(void *)(v8 + 64) + ((v9 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 24;
  unint64_t v12 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(unsigned __int8 *)(v4 + 80);
  unint64_t v14 = ((((v5 + 7 + ((v13 + 16 + v12) & ~v13)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v15 = ((v13 + 16) & ~v13) + v5;
  unint64_t v16 = v12 + 8;
  uint64_t v17 = v5 + v13;
  if (!*(_DWORD *)(v4 + 84)) {
    ++v17;
  }
  unint64_t v18 = (v17 & ~v13) + v5;
  unint64_t v19 = ((v10 + v7) & ~v7) + v10;
  if (v5 > v11) {
    unint64_t v11 = v5;
  }
  if (v14 <= v15) {
    unint64_t v14 = v15;
  }
  if (v16 <= v18) {
    unint64_t v16 = v18;
  }
  if (v11 <= v14) {
    unint64_t v11 = v14;
  }
  if (v19 <= v16) {
    unint64_t v20 = v16;
  }
  else {
    unint64_t v20 = v19;
  }
  if (v20 > v11) {
    unint64_t v11 = v20;
  }
  if (v11 <= 8) {
    unint64_t v11 = 8;
  }
  if (v11 > 3)
  {
    int v21 = 11;
LABEL_22:
    char v23 = 8;
    goto LABEL_23;
  }
  unsigned int v22 = ((1 << (8 * v11)) | 0xCu) >> (8 * v11);
  if (v22 > 0xFFF5) {
    goto LABEL_26;
  }
  int v21 = v22 + 10;
  if (v22 <= 0xF5) {
    goto LABEL_22;
  }
  char v23 = 16;
LABEL_23:
  unsigned int v24 = (1 << v23) - v21;
  if ((v24 & 0x80000000) == 0)
  {
    if (v11 > 3) {
      goto LABEL_30;
    }
LABEL_27:
    unsigned int v25 = ((1 << (8 * v11)) | 0xCu) >> (8 * v11);
    uint64_t v26 = 2;
    if (v25 > 0xFFF5) {
      uint64_t v26 = 4;
    }
    if (v25 > 0xF5) {
      goto LABEL_31;
    }
    goto LABEL_30;
  }
LABEL_26:
  unsigned int v24 = 0x7FFFFFFF;
  if (v11 <= 3) {
    goto LABEL_27;
  }
LABEL_30:
  uint64_t v26 = 1;
LABEL_31:
  if (!a2) {
    return 0;
  }
  if (a2 <= v24) {
    goto LABEL_50;
  }
  unint64_t v27 = v26 + v11;
  char v28 = 8 * v27;
  if (v27 <= 3)
  {
    unsigned int v30 = ((a2 - v24 + ~(-1 << v28)) >> v28) + 1;
    if (HIWORD(v30))
    {
      int v29 = *(_DWORD *)((char *)a1 + v27);
      if (!v29) {
        goto LABEL_50;
      }
      goto LABEL_42;
    }
    if (v30 > 0xFF)
    {
      int v29 = *(unsigned __int16 *)((char *)a1 + v27);
      if (!*(unsigned __int16 *)((char *)a1 + v27)) {
        goto LABEL_50;
      }
      goto LABEL_42;
    }
    if (v30 < 2)
    {
LABEL_50:
      if (v24)
      {
        if (v11 <= 3)
        {
          unsigned int v38 = ((1 << (8 * v11)) | 0xCu) >> (8 * v11);
          if (v38 > 0xFFF5)
          {
            unsigned int v33 = *(_DWORD *)((char *)a1 + v11);
            unsigned int v34 = ~v33;
LABEL_60:
            unsigned int v41 = 0x7FFFFFFF;
LABEL_61:
            if (v41 > v34) {
              return -v33;
            }
            else {
              return 0;
            }
          }
          int v36 = v38 + 10;
          if (v38 > 0xF5)
          {
            int v40 = *(unsigned __int16 *)((char *)a1 + v11);
            unsigned int v33 = v40 | 0xFFFF0000;
            unsigned int v34 = v40 ^ 0xFFFF;
            char v35 = 16;
          }
          else
          {
            int v39 = *((unsigned __int8 *)a1 + v11);
            unsigned int v33 = v39 | 0xFFFFFF00;
            unsigned int v34 = v39 ^ 0xFF;
            char v35 = 8;
          }
        }
        else
        {
          int v32 = *((unsigned __int8 *)a1 + v11);
          unsigned int v33 = v32 | 0xFFFFFF00;
          unsigned int v34 = v32 ^ 0xFF;
          char v35 = 8;
          int v36 = 11;
        }
        unsigned int v41 = (1 << v35) - v36;
        if ((v41 & 0x80000000) == 0) {
          goto LABEL_61;
        }
        goto LABEL_60;
      }
      return 0;
    }
  }
  int v29 = *((unsigned __int8 *)a1 + v27);
  if (!*((unsigned char *)a1 + v27)) {
    goto LABEL_50;
  }
LABEL_42:
  int v31 = (v29 - 1) << v28;
  if (v27 > 3) {
    int v31 = 0;
  }
  if (v27)
  {
    if (v27 > 3) {
      LODWORD(v27) = 4;
    }
    switch((int)v27)
    {
      case 2:
        LODWORD(v27) = *a1;
        break;
      case 3:
        LODWORD(v27) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v27) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v27) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v24 + (v27 | v31) + 1;
}

void sub_24D70BCFC(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v10 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v7 + 64);
  unint64_t v12 = (((v8 | v10 | 7) + v6) & ~(v8 | v10 | 7))
      + ((((*(void *)(v9 + 64) + ((v10 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8)
        + 15) & 0xFFFFFFFFFFFFFFF8)
      + 24;
  unint64_t v13 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v15 = ((((v6 + 7 + ((v14 + 16 + v13) & ~v14)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v16 = ((v14 + 16) & ~v14) + v6;
  unint64_t v17 = v13 + 8;
  uint64_t v18 = v6 + v14;
  if (!*(_DWORD *)(v5 + 84)) {
    ++v18;
  }
  unint64_t v19 = (v18 & ~v14) + v6;
  unint64_t v20 = ((v11 + v8) & ~v8) + v11;
  if (v6 > v12) {
    unint64_t v12 = v6;
  }
  if (v15 <= v16) {
    unint64_t v15 = v16;
  }
  if (v17 <= v19) {
    unint64_t v17 = v19;
  }
  if (v12 <= v15) {
    unint64_t v12 = v15;
  }
  if (v20 <= v17) {
    unint64_t v21 = v17;
  }
  else {
    unint64_t v21 = v20;
  }
  if (v21 > v12) {
    unint64_t v12 = v21;
  }
  if (v12 <= 8) {
    unint64_t v12 = 8;
  }
  char v22 = 8 * v12;
  if (v12 > 3)
  {
    int v23 = 11;
    goto LABEL_20;
  }
  unsigned int v30 = ((1 << v22) | 0xCu) >> v22;
  if (v30 <= 0xFFF5)
  {
    int v23 = v30 + 10;
    if (v30 > 0xF5)
    {
      char v26 = 16;
      unsigned int v24 = a1;
      unsigned int v25 = a2;
LABEL_21:
      unsigned int v27 = (1 << v26) - v23;
      if ((v27 & 0x80000000) != 0) {
        unsigned int v27 = 0x7FFFFFFF;
      }
      if (v12 > 3) {
        goto LABEL_32;
      }
      goto LABEL_24;
    }
LABEL_20:
    unsigned int v24 = a1;
    unsigned int v25 = a2;
    char v26 = 8;
    goto LABEL_21;
  }
  unsigned int v27 = 0x7FFFFFFF;
  unsigned int v24 = a1;
  unsigned int v25 = a2;
  if (v12 > 3)
  {
LABEL_32:
    uint64_t v29 = 1;
    goto LABEL_33;
  }
LABEL_24:
  unsigned int v28 = ((1 << v22) | 0xCu) >> v22;
  uint64_t v29 = 2;
  if (v28 > 0xFFF5) {
    uint64_t v29 = 4;
  }
  if (v28 <= 0xF5) {
    goto LABEL_32;
  }
LABEL_33:
  size_t v31 = v29 + v12;
  if (a3 <= v27)
  {
    int v32 = 0;
  }
  else if (v31 <= 3)
  {
    unsigned int v35 = ((a3 - v27 + ~(-1 << (8 * v31))) >> (8 * v31)) + 1;
    if (HIWORD(v35))
    {
      int v32 = 4;
    }
    else if (v35 >= 0x100)
    {
      int v32 = 2;
    }
    else
    {
      int v32 = v35 > 1;
    }
  }
  else
  {
    int v32 = 1;
  }
  if (v27 < v25)
  {
    unsigned int v33 = ~v27 + v25;
    if (v31 < 4)
    {
      int v34 = (v33 >> (8 * v31)) + 1;
      if (v31)
      {
        int v36 = v33 & ~(-1 << (8 * v31));
        bzero(v24, v31);
        if (v31 == 3)
        {
          *(_WORD *)unsigned int v24 = v36;
          v24[2] = BYTE2(v36);
        }
        else if (v31 == 2)
        {
          *(_WORD *)unsigned int v24 = v36;
        }
        else
        {
          unsigned char *v24 = v36;
        }
      }
    }
    else
    {
      bzero(v24, v31);
      *(_DWORD *)unsigned int v24 = v33;
      int v34 = 1;
    }
    switch(v32)
    {
      case 1:
        v24[v31] = v34;
        return;
      case 2:
        *(_WORD *)&v24[v31] = v34;
        return;
      case 3:
        goto LABEL_69;
      case 4:
        *(_DWORD *)&v24[v31] = v34;
        return;
      default:
        return;
    }
  }
  switch(v32)
  {
    case 1:
      v24[v31] = 0;
      if (!v25) {
        return;
      }
      goto LABEL_53;
    case 2:
      *(_WORD *)&v24[v31] = 0;
      if (!v25) {
        return;
      }
      goto LABEL_53;
    case 3:
LABEL_69:
      __break(1u);
      JUMPOUT(0x24D70C1B4);
    case 4:
      *(_DWORD *)&v24[v31] = 0;
      goto LABEL_52;
    default:
LABEL_52:
      if (!v25) {
        return;
      }
LABEL_53:
      int v37 = -v25;
      if (v12 > 3) {
        goto LABEL_54;
      }
      unsigned int v38 = ((1 << v22) | 0xCu) >> v22;
      if (v38 > 0xFFF5)
      {
        *(_DWORD *)&v24[v12] = v37;
      }
      else if (v38 <= 0xF5)
      {
LABEL_54:
        v24[v12] = v37;
      }
      else
      {
        *(_WORD *)&v24[v12] = v37;
      }
      return;
  }
}

uint64_t sub_24D70C1DC(unsigned __int8 *a1)
{
  uint64_t v2 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(v4 + 64);
  unint64_t v9 = (((v5 | v7 | 7) + v3) & ~(v5 | v7 | 7))
     + ((((*(void *)(v6 + 64) + ((v7 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v7) + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
     + 24;
  unint64_t v10 = (v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(unsigned __int8 *)(v2 + 80);
  unint64_t v12 = ((((v3 + 7 + ((v11 + 16 + v10) & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
  unint64_t v13 = ((v11 + 16) & ~v11) + v3;
  unint64_t v14 = v10 + 8;
  uint64_t v15 = v3 + v11;
  if (!*(_DWORD *)(v2 + 84)) {
    ++v15;
  }
  unint64_t v16 = (v15 & ~v11) + v3;
  unint64_t v17 = ((v8 + v5) & ~v5) + v8;
  if (v3 > v9) {
    unint64_t v9 = v3;
  }
  if (v12 <= v13) {
    unint64_t v12 = v13;
  }
  if (v14 <= v16) {
    unint64_t v14 = v16;
  }
  if (v9 <= v12) {
    unint64_t v9 = v12;
  }
  if (v17 <= v14) {
    unint64_t v18 = v14;
  }
  else {
    unint64_t v18 = v17;
  }
  if (v18 > v9) {
    unint64_t v9 = v18;
  }
  if (v9 <= 8) {
    unint64_t v9 = 8;
  }
  if (v9 > 3) {
    goto LABEL_19;
  }
  unsigned int v20 = ((1 << (8 * v9)) | 0xCu) >> (8 * v9);
  if (v20 > 0xFFF5)
  {
    uint64_t result = *(unsigned int *)&a1[v9];
  }
  else
  {
    if (v20 <= 0xF5)
    {
LABEL_19:
      uint64_t result = a1[v9];
      goto LABEL_24;
    }
    uint64_t result = *(unsigned __int16 *)&a1[v9];
  }
LABEL_24:
  if (result >= 0xA)
  {
    if (v9 <= 3) {
      uint64_t v21 = v9;
    }
    else {
      uint64_t v21 = 4;
    }
    switch(v21)
    {
      case 1:
        int v22 = *a1;
        if (v9 < 4) {
          goto LABEL_34;
        }
        goto LABEL_36;
      case 2:
        int v22 = *(unsigned __int16 *)a1;
        if (v9 >= 4) {
          goto LABEL_36;
        }
        goto LABEL_34;
      case 3:
        int v22 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        if (v9 < 4) {
          goto LABEL_34;
        }
        goto LABEL_36;
      case 4:
        int v22 = *(_DWORD *)a1;
        if (v9 < 4) {
LABEL_34:
        }
          uint64_t result = (v22 | ((result - 10) << (8 * v9))) + 10;
        else {
LABEL_36:
        }
          uint64_t result = (v22 + 10);
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_24D70C500(unsigned char *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v5 = *(void *)(v4 + 64);
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  if (a2 > 9)
  {
    uint64_t v16 = *(unsigned __int8 *)(v8 + 80);
    uint64_t v17 = *(void *)(v6 + 64);
    unint64_t v18 = (((v7 | v16 | 7) + v5) & ~(v7 | v16 | 7))
        + ((((*(void *)(v8 + 64) + ((v16 + ((v17 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16) + 7) & 0xFFFFFFFFFFFFFFF8)
          + 15) & 0xFFFFFFFFFFFFFFF8)
        + 24;
    unint64_t v19 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(unsigned __int8 *)(v4 + 80);
    if (((((v5 + 7 + ((v20 + 16 + v19) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v18) {
      unint64_t v18 = ((((v5 + 7 + ((v20 + 16 + v19) & ~v20)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (((v20 + 16) & ~v20) + v5 > v18) {
      unint64_t v18 = ((v20 + 16) & ~v20) + v5;
    }
    if (v19 + 8 > v18) {
      unint64_t v18 = v19 + 8;
    }
    uint64_t v21 = v5 + v20;
    if (!*(_DWORD *)(v4 + 84)) {
      ++v21;
    }
    unint64_t v22 = (v21 & ~v20) + v5;
    if (v22 > v18) {
      unint64_t v18 = v22;
    }
    if (v18 <= v5) {
      unint64_t v18 = v5;
    }
    if (v18 <= ((v17 + v7) & ~v7) + v17) {
      unint64_t v18 = ((v17 + v7) & ~v7) + v17;
    }
    if (v18 <= v5) {
      unint64_t v18 = v5;
    }
    if (v18 <= 8) {
      size_t v23 = 8;
    }
    else {
      size_t v23 = v18;
    }
    unsigned int v24 = a2 - 10;
    if (v23 < 4)
    {
      int v26 = (v24 >> (8 * v23)) + 10;
      v24 &= ~(-1 << (8 * v23));
      unsigned int v27 = (int *)&a1[v23];
      unsigned int v28 = ((1 << (8 * v23)) | 0xCu) >> (8 * v23);
      if (v28 > 0xFFF5)
      {
        *unsigned int v27 = v26;
      }
      else if (v28 > 0xF5)
      {
        *(_WORD *)unsigned int v27 = v26;
      }
      else
      {
        *(unsigned char *)unsigned int v27 = v26;
      }
    }
    else
    {
      a1[v23] = 10;
    }
    if (v23 >= 4) {
      int v29 = 4;
    }
    else {
      int v29 = v23;
    }
    bzero(a1, v23);
    switch(v29)
    {
      case 2:
        *(_WORD *)a1 = v24;
        break;
      case 3:
        *(_WORD *)a1 = v24;
        a1[2] = BYTE2(v24);
        break;
      case 4:
        *(_DWORD *)a1 = v24;
        break;
      default:
        *a1 = v24;
        break;
    }
  }
  else
  {
    uint64_t v9 = *(void *)(v6 + 64);
    unint64_t v10 = (((((*(unsigned __int8 *)(v8 + 80) | v7 | 7) + v5) & ~(*(unsigned __int8 *)(v8 + 80) | v7))
          + ((((*(void *)(v8 + 64)
              + ((((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))
              + 7) & 0xFFFFFFFFFFFFFFF8)
            + 15) & 0xFFFFFFFFFFFFFFF8)
          + 16) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    unint64_t v11 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(unsigned __int8 *)(v4 + 80);
    if (((((v5 + 7 + ((v12 + 16 + v11) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8 > v10) {
      unint64_t v10 = ((((v5 + 7 + ((v12 + 16 + v11) & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 8;
    }
    if (((v12 + 16) & ~v12) + v5 > v10) {
      unint64_t v10 = ((v12 + 16) & ~v12) + v5;
    }
    if (v11 + 8 > v10) {
      unint64_t v10 = v11 + 8;
    }
    uint64_t v13 = v5 + v12;
    if (!*(_DWORD *)(v4 + 84)) {
      ++v13;
    }
    unint64_t v14 = (v13 & ~v12) + v5;
    if (v14 > v10) {
      unint64_t v10 = v14;
    }
    if (v10 <= v5) {
      unint64_t v10 = v5;
    }
    unint64_t v15 = ((v9 + v7) & ~v7) + v9;
    if (v10 > v15) {
      unint64_t v15 = v10;
    }
    if (v15 <= v5) {
      unint64_t v15 = v5;
    }
    if (v15 <= 8) {
      unint64_t v15 = 8;
    }
    if (v15 > 3) {
      goto LABEL_21;
    }
    unsigned int v25 = ((1 << (8 * v15)) | 0xCu) >> (8 * v15);
    if (v25 > 0xFFF5)
    {
      *(_DWORD *)&a1[v15] = a2;
    }
    else
    {
      if (v25 <= 0xF5)
      {
LABEL_21:
        a1[v15] = a2;
        return;
      }
      *(_WORD *)&a1[v15] = a2;
    }
  }
}

uint64_t sub_24D70C940(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t *sub_24D70C94C(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_24D400DCC(*result, v1);
  }
  return result;
}

uint64_t sub_24D70C968(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_24D3F9C18(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *sub_24D70C9C4(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_24D3F9C18(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_24D400DCC(v7, v8);
      return a1;
    }
    sub_24D4B12A0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_24D3F9C18(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *sub_24D70CA68(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_24D400DCC(v6, v4);
      return a1;
    }
    sub_24D4B12A0((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t sub_24D70CAD4(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_24D70CB30(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)uint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(void *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

uint64_t sub_24D70CB7C(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  if (v6 >= 2) {
    int v7 = ((v6 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v7 = -2;
  }
  if (v7 < 0) {
    int v7 = -1;
  }
  return (v7 + 1);
}

unsigned char *sub_24D70CC28(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D70CCF4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t _s9SQLFieldsOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xE7) {
    goto LABEL_17;
  }
  if (a2 + 25 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 25) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 25;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 25;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x1A;
  int v8 = v6 - 26;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_24D70CDAC(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 25 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 25) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xE7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xE6)
  {
    unsigned int v6 = ((a2 - 231) >> 8) + 1;
    *uint64_t result = a2 + 25;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D70CE78);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 25;
        break;
    }
  }
  return result;
}

uint64_t sub_24D70CEA0()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    uint64_t result = sub_24DCCA3F8();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      uint64_t result = sub_24DCCA3F8();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_24D70D018(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v32 = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(v32 - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = v3 + v5;
  if (*(_DWORD *)(v4 + 84)) {
    uint64_t v7 = *(void *)(v4 + 64);
  }
  else {
    uint64_t v7 = *(void *)(v4 + 64) + 1;
  }
  uint64_t v8 = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  size_t __n = v7;
  uint64_t v11 = v7 + v10;
  if (*(_DWORD *)(v9 + 84)) {
    size_t v12 = *(void *)(v9 + 64);
  }
  else {
    size_t v12 = *(void *)(v9 + 64) + 1;
  }
  unsigned int v13 = v10 | *(_DWORD *)(v2 + 80) & 0xF8 | v5;
  if (v13 > 7
    || ((*(_DWORD *)(v9 + 80) | v5 | *(_DWORD *)(v2 + 80)) & 0x100000) != 0
    || ((v12 + ((v11 + (v6 & ~(unint64_t)v5)) & ~v10) + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    unint64_t v18 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    unint64_t v17 = ~(unint64_t)v5;
    uint64_t v28 = ~v10;
    uint64_t v29 = v8;
    unint64_t v18 = a1;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v19 = (void *)(((unint64_t)a1 + v6) & v17);
    uint64_t v20 = (const void *)(((unint64_t)a2 + v6) & v17);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v4 + 48))(v20, 1, v32))
    {
      memcpy(v19, v20, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v4 + 16))(v19, v20, v32);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v4 + 56))(v19, 0, 1, v32);
    }
    uint64_t v21 = (void *)(((unint64_t)v19 + v11) & v28);
    unint64_t v22 = (const void *)(((unint64_t)v20 + v11) & v28);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v22, 1, v29))
    {
      memcpy(v21, v22, v12);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v21, v22, v29);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v21, 0, 1, v29);
    }
    unint64_t v23 = ((unint64_t)v21 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v24 = ((unint64_t)v22 + v12 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = *(void *)(v24 + 8);
    if ((v25 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v23 = *(_OWORD *)v24;
    }
    else
    {
      uint64_t v26 = *(void *)v24;
      sub_24D3F9C18(*(void *)v24, *(void *)(v24 + 8));
      *(void *)unint64_t v23 = v26;
      *(void *)(v23 + 8) = v25;
    }
  }
  return v18;
}

uint64_t sub_24D70D3BC(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v6 + 48))(v7, 1, v5)) {
    (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v7, v5);
  }
  int v8 = *(_DWORD *)(v6 + 84);
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = v11;
  uint64_t v13 = v9 + v7;
  if (!v8) {
    ++v13;
  }
  unint64_t v14 = (v13 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v14, 1, v10);
  if (!result) {
    uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t))(v12 + 8))(v14, v10);
  }
  unint64_t v16 = v14 + *(void *)(v12 + 64);
  if (!*(_DWORD *)(v12 + 84)) {
    ++v16;
  }
  unint64_t v17 = (uint64_t *)((v16 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v18 = v17[1];
  if ((v18 & 0x3000000000000000) == 0)
  {
    uint64_t v19 = *v17;
    return sub_24D400DCC(v19, v18);
  }
  return result;
}

uint64_t sub_24D70D5E4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 16))(v10, v11, v7);
    unint64_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = v8 + 56;
    v16(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  unint64_t v22 = (const void *)(((unint64_t)v11 + v17 + v20) & ~v20);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v22, 1, v18))
  {
    int v23 = *(_DWORD *)(v19 + 84);
    uint64_t v24 = *(void *)(v19 + 64);
    if (v23) {
      size_t v25 = *(void *)(v19 + 64);
    }
    else {
      size_t v25 = v24 + 1;
    }
    memcpy(v21, v22, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v21, v22, v18);
    unsigned int v27 = *(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56);
    uint64_t v26 = v19 + 56;
    v27(v21, 0, 1, v18);
    int v23 = *(_DWORD *)(v26 + 28);
    uint64_t v24 = *(void *)(v26 + 8);
  }
  if (v23) {
    uint64_t v28 = v24;
  }
  else {
    uint64_t v28 = v24 + 1;
  }
  unint64_t v29 = ((unint64_t)v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = ((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v31 = *(void *)(v30 + 8);
  if ((v31 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v29 = *(_OWORD *)v30;
  }
  else
  {
    uint64_t v32 = *(void *)v30;
    sub_24D3F9C18(*(void *)v30, *(void *)(v30 + 8));
    *(void *)unint64_t v29 = v32;
    *(void *)(v29 + 8) = v31;
  }
  return a1;
}

uint64_t sub_24D70D8BC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (void *)((v6 + v9 + a2) & ~v9);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  int v13 = v12(v11, 1, v7);
  if (v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 16))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 24))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v10, v11, v16);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v17 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  unint64_t v22 = (void *)(((unint64_t)v11 + v17 + v20) & ~v20);
  int v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v24 = v23(v21, 1, v18);
  int v25 = v23(v22, 1, v18);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 16))(v21, v22, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v18);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 24))(v21, v22, v18);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  if (v26) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  memcpy(v21, v22, v28);
LABEL_26:
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v29 = *(void *)(v19 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v19 + 64) + 1;
  }
  unint64_t v30 = (uint64_t *)(((unint64_t)v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (uint64_t *)(((unint64_t)v22 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = v30[1];
  unint64_t v33 = v31[1];
  uint64_t v34 = v33 & 0x3000000000000000;
  if ((v32 & 0x3000000000000000) == 0)
  {
    if (!v34)
    {
      uint64_t v37 = *v31;
      sub_24D3F9C18(v37, v33);
      uint64_t v38 = *v30;
      unint64_t v39 = v30[1];
      *unint64_t v30 = v37;
      v30[1] = v33;
      sub_24D400DCC(v38, v39);
      return a1;
    }
    sub_24D400DCC(*v30, v32);
    goto LABEL_34;
  }
  if (v34)
  {
LABEL_34:
    *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
    return a1;
  }
  uint64_t v35 = *v31;
  sub_24D3F9C18(v35, v33);
  *unint64_t v30 = v35;
  v30[1] = v33;
  return a1;
}

uint64_t sub_24D70DCBC(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (const void *)((v6 + v9 + a2) & ~v9);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v11, 1, v7))
  {
    int v12 = *(_DWORD *)(v8 + 84);
    size_t v13 = *(void *)(v8 + 64);
    if (v12) {
      size_t v14 = v13;
    }
    else {
      size_t v14 = v13 + 1;
    }
    memcpy(v10, v11, v14);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v10, v11, v7);
    size_t v16 = *(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56);
    uint64_t v15 = v8 + 56;
    v16(v10, 0, 1, v7);
    int v12 = *(_DWORD *)(v15 + 28);
    size_t v13 = *(void *)(v15 + 8);
  }
  if (v12) {
    size_t v17 = v13;
  }
  else {
    size_t v17 = v13 + 1;
  }
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  unint64_t v22 = (const void *)(((unint64_t)v11 + v17 + v20) & ~v20);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v22, 1, v18))
  {
    int v23 = *(_DWORD *)(v19 + 84);
    uint64_t v24 = *(void *)(v19 + 64);
    if (v23) {
      size_t v25 = *(void *)(v19 + 64);
    }
    else {
      size_t v25 = v24 + 1;
    }
    memcpy(v21, v22, v25);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v21, v22, v18);
    size_t v27 = *(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56);
    uint64_t v26 = v19 + 56;
    v27(v21, 0, 1, v18);
    int v23 = *(_DWORD *)(v26 + 28);
    uint64_t v24 = *(void *)(v26 + 8);
  }
  if (v23) {
    uint64_t v28 = v24;
  }
  else {
    uint64_t v28 = v24 + 1;
  }
  *(_OWORD *)(((unint64_t)v21 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v22 + v28 + 7) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24D70DF70(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (void *)((v6 + v9 + a1) & ~v9);
  uint64_t v11 = (void *)((v6 + v9 + a2) & ~v9);
  int v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  LODWORD(v6) = v12(v10, 1, v7);
  int v13 = v12(v11, 1, v7);
  if (v6)
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 32))(v10, v11, v7);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v10, 0, 1, v7);
      goto LABEL_12;
    }
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  else
  {
    if (!v13)
    {
      (*(void (**)(void *, void *, uint64_t))(v8 + 40))(v10, v11, v7);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
    int v14 = *(_DWORD *)(v8 + 84);
    size_t v15 = *(void *)(v8 + 64);
  }
  if (v14) {
    size_t v16 = v15;
  }
  else {
    size_t v16 = v15 + 1;
  }
  memcpy(v10, v11, v16);
LABEL_12:
  if (*(_DWORD *)(v8 + 84)) {
    uint64_t v17 = *(void *)(v8 + 64);
  }
  else {
    uint64_t v17 = *(void *)(v8 + 64) + 1;
  }
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (void *)(((unint64_t)v10 + v17 + v20) & ~v20);
  unint64_t v22 = (void *)(((unint64_t)v11 + v17 + v20) & ~v20);
  int v23 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v19 + 48);
  int v24 = v23(v21, 1, v18);
  int v25 = v23(v22, 1, v18);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 32))(v21, v22, v18);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v19 + 56))(v21, 0, 1, v18);
      goto LABEL_26;
    }
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  else
  {
    if (!v25)
    {
      (*(void (**)(void *, void *, uint64_t))(v19 + 40))(v21, v22, v18);
      goto LABEL_26;
    }
    (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
    int v26 = *(_DWORD *)(v19 + 84);
    size_t v27 = *(void *)(v19 + 64);
  }
  if (v26) {
    size_t v28 = v27;
  }
  else {
    size_t v28 = v27 + 1;
  }
  memcpy(v21, v22, v28);
LABEL_26:
  if (*(_DWORD *)(v19 + 84)) {
    uint64_t v29 = *(void *)(v19 + 64);
  }
  else {
    uint64_t v29 = *(void *)(v19 + 64) + 1;
  }
  unint64_t v30 = (uint64_t *)(((unint64_t)v21 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v31 = (uint64_t *)(((unint64_t)v22 + v29 + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v32 = v30[1];
  if ((v32 & 0x3000000000000000) == 0)
  {
    uint64_t v33 = v31[1];
    if ((v33 & 0x3000000000000000) == 0)
    {
      uint64_t v35 = *v30;
      *unint64_t v30 = *v31;
      v30[1] = v33;
      sub_24D400DCC(v35, v32);
      return a1;
    }
    sub_24D400DCC(*v30, v32);
  }
  *(_OWORD *)unint64_t v30 = *(_OWORD *)v31;
  return a1;
}

uint64_t sub_24D70E348(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v36 = AssociatedTypeWitness;
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v34 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v34 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  unsigned int v37 = v4;
  unsigned int v35 = v7;
  if (v7 > v4) {
    unsigned int v4 = v7;
  }
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  unsigned int v10 = *(_DWORD *)(v8 + 84);
  if (v10) {
    unsigned int v11 = v10 - 1;
  }
  else {
    unsigned int v11 = 0;
  }
  if (v11 <= v4) {
    unsigned int v12 = v4;
  }
  else {
    unsigned int v12 = v11;
  }
  if (v12 <= 0xB) {
    unsigned int v12 = 11;
  }
  uint64_t v13 = *(void *)(v5 + 64);
  if (!v6) {
    ++v13;
  }
  uint64_t v14 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = *(void *)(v8 + 64);
  if (!v10) {
    ++v16;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = *(void *)(v3 + 64) + v14;
  uint64_t v18 = v16 + 7;
  if (v12 < a2)
  {
    unint64_t v19 = ((v18 + ((v13 + v15 + (v17 & ~v14)) & ~v15)) & 0xFFFFFFFFFFFFFFF8) + 16;
    if ((v19 & 0xFFFFFFF8) != 0) {
      unsigned int v20 = 2;
    }
    else {
      unsigned int v20 = a2 - v12 + 1;
    }
    if (v20 >= 0x10000) {
      unsigned int v21 = 4;
    }
    else {
      unsigned int v21 = 2;
    }
    if (v20 < 0x100) {
      unsigned int v21 = 1;
    }
    if (v20 >= 2) {
      uint64_t v22 = v21;
    }
    else {
      uint64_t v22 = 0;
    }
    switch(v22)
    {
      case 1:
        int v23 = *((unsigned __int8 *)a1 + v19);
        if (!*((unsigned char *)a1 + v19)) {
          break;
        }
        goto LABEL_34;
      case 2:
        int v23 = *(unsigned __int16 *)((char *)a1 + v19);
        if (*(_WORD *)((char *)a1 + v19)) {
          goto LABEL_34;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D70E6ECLL);
      case 4:
        int v23 = *(_DWORD *)((char *)a1 + v19);
        if (!v23) {
          break;
        }
LABEL_34:
        int v24 = v23 - 1;
        if ((v19 & 0xFFFFFFF8) != 0)
        {
          int v24 = 0;
          int v25 = *a1;
        }
        else
        {
          int v25 = 0;
        }
        return v12 + (v25 | v24) + 1;
      default:
        break;
    }
  }
  if (v37 != v12)
  {
    unint64_t v28 = ((unint64_t)a1 + v17) & ~v14;
    if (v35 == v12)
    {
      if (v6 >= 2)
      {
        unsigned int v29 = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v28, v6, v34);
LABEL_53:
        unsigned int v32 = v29 - 1;
        BOOL v33 = v29 >= 2;
LABEL_54:
        if (v33) {
          return v32;
        }
        else {
          return 0;
        }
      }
    }
    else
    {
      unint64_t v30 = (v28 + v13 + v15) & ~v15;
      if (v11 != v12)
      {
        uint64_t v31 = *(void *)(((v18 + v30) & 0xFFFFFFFFFFFFFFF8) + 8) >> 60;
        unsigned int v32 = ((v31 >> 2) & 0xFFFFFFF3 | (4 * (v31 & 3))) ^ 0xF;
        if (v32 >= 0xC) {
          unsigned int v32 = -1;
        }
        BOOL v33 = v32 + 1 >= 2;
        goto LABEL_54;
      }
      if (v10 >= 2)
      {
        unsigned int v29 = (*(uint64_t (**)(unint64_t))(v9 + 48))(v30);
        goto LABEL_53;
      }
    }
    return 0;
  }
  int v26 = *(uint64_t (**)(_DWORD *, void, uint64_t))(v3 + 48);

  return v26(a1, v37, v36);
}

void sub_24D70E700(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v42 = AssociatedTypeWitness;
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  uint64_t v40 = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(v40 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  unsigned int v43 = v6;
  unsigned int v41 = v9;
  if (v9 > v6) {
    unsigned int v6 = v9;
  }
  uint64_t v10 = swift_getAssociatedTypeWitness();
  uint64_t v11 = a2;
  uint64_t v12 = *(void *)(v10 - 8);
  int v13 = *(_DWORD *)(v12 + 84);
  unsigned int v14 = v13 - 1;
  if (!v13) {
    unsigned int v14 = 0;
  }
  if (v14 <= v6) {
    unsigned int v15 = v6;
  }
  else {
    unsigned int v15 = v14;
  }
  uint64_t v16 = *(void *)(v5 + 64);
  uint64_t v17 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v19 = *(void *)(*(void *)(v10 - 8) + 64);
  if (v15 <= 0xB) {
    unsigned int v20 = 11;
  }
  else {
    unsigned int v20 = v15;
  }
  if (v8) {
    uint64_t v21 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v21 = *(void *)(v7 + 64) + 1;
  }
  uint64_t v22 = v16 + v17;
  uint64_t v23 = (v21 + v18 + ((v16 + v17) & ~v17)) & ~v18;
  if (!v13) {
    ++v19;
  }
  uint64_t v24 = v19 + 7;
  size_t v25 = ((v24 + v23) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v24 + v23) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v26 = a3 - v20 + 1;
  }
  else {
    unsigned int v26 = 2;
  }
  if (v26 >= 0x10000) {
    int v27 = 4;
  }
  else {
    int v27 = 2;
  }
  if (v26 < 0x100) {
    int v27 = 1;
  }
  if (v26 >= 2) {
    unsigned int v28 = v27;
  }
  else {
    unsigned int v28 = 0;
  }
  if (v20 < a3) {
    uint64_t v29 = v28;
  }
  else {
    uint64_t v29 = 0;
  }
  if (v11 > v20)
  {
    if (v25) {
      int v30 = 1;
    }
    else {
      int v30 = v11 - v20;
    }
    if (v25)
    {
      int v31 = ~v20 + v11;
      bzero(a1, v25);
      *a1 = v31;
    }
    switch(v29)
    {
      case 1:
        *((unsigned char *)a1 + v25) = v30;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v25) = v30;
        return;
      case 3:
        goto LABEL_64;
      case 4:
        *(_DWORD *)((char *)a1 + v25) = v30;
        return;
      default:
        return;
    }
  }
  unsigned int v32 = a1;
  switch(v29)
  {
    case 1:
      *((unsigned char *)a1 + v25) = 0;
      if (!v11) {
        return;
      }
      goto LABEL_47;
    case 2:
      *(_WORD *)((char *)a1 + v25) = 0;
      if (!v11) {
        return;
      }
      goto LABEL_47;
    case 3:
LABEL_64:
      __break(1u);
      JUMPOUT(0x24D70EB00);
    case 4:
      *(_DWORD *)((char *)a1 + v25) = 0;
      goto LABEL_46;
    default:
LABEL_46:
      if (!v11) {
        return;
      }
LABEL_47:
      if (v43 == v20)
      {
        uint64_t v33 = v42;
        uint64_t v34 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v5 + 56);
        uint64_t v35 = v43;
LABEL_51:
        v34(v32, v11, v35, v33);
        return;
      }
      unsigned int v32 = (_DWORD *)(((unint64_t)a1 + v22) & ~v17);
      if (v41 == v20)
      {
        uint64_t v11 = (v11 + 1);
        uint64_t v34 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v7 + 56);
        uint64_t v35 = v8;
        uint64_t v33 = v40;
        goto LABEL_51;
      }
      uint64_t v36 = ((unint64_t)v32 + v21 + v18) & ~v18;
      if (v14 == v20)
      {
        uint64_t v37 = (v11 + 1);
        uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v12 + 56);
        v38(v36, v37);
      }
      else
      {
        unint64_t v39 = (void *)((v24 + v36) & 0xFFFFFFFFFFFFFFF8);
        *unint64_t v39 = 0;
        if (v11 > 0xB)
        {
          v39[1] = 0;
          *(_DWORD *)unint64_t v39 = v11 - 12;
        }
        else
        {
          v39[1] = (unint64_t)((4 * (v11 ^ 0xF)) | ((v11 ^ 0xF) >> 2)) << 60;
        }
      }
      return;
  }
}

uint64_t sub_24D70EB28()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24D70EBDC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = v6 + 7;
  uint64_t v8 = *(_DWORD *)(v5 + 80);
  if (v8 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 7 + ((v8 + 16 + ((v6 + 7) & 0xFFFFFFFFFFFFFFF8)) & ~v8)) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 & 0xF8 ^ 0x1F8) & (v8 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = AssociatedTypeWitness;
    int v13 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v13(a1, a2, AssociatedTypeWitness);
    unsigned int v14 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    unsigned int v15 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v14 = *v15;
    v14[1] = v15[1];
    uint64_t v16 = ((unint64_t)v14 + v8 + 16) & ~v8;
    uint64_t v17 = ((unint64_t)v15 + v8 + 16) & ~v8;
    swift_bridgeObjectRetain();
    v13((uint64_t *)v16, (uint64_t *)v17, v12);
    unint64_t v18 = (v7 + v16) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v19 = (v7 + v17) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v20 = *(void *)(v19 + 8);
    if ((v20 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v18 = *(_OWORD *)v19;
    }
    else
    {
      uint64_t v21 = *(void *)v19;
      sub_24D3F9C18(*(void *)v19, *(void *)(v19 + 8));
      *(void *)unint64_t v18 = v21;
      *(void *)(v18 + 8) = v20;
    }
  }
  return a1;
}

uint64_t sub_24D70ED9C(unint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = v3 + 8;
  v4(a1, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 56) + 7;
  swift_bridgeObjectRelease();
  unint64_t v7 = (((v6 + a1) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 72) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 72);
  uint64_t result = v4(v7, AssociatedTypeWitness);
  unsigned int v9 = (uint64_t *)((v6 + v7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = v9[1];
  if ((v10 & 0x3000000000000000) == 0)
  {
    uint64_t v11 = *v9;
    return sub_24D400DCC(v11, v10);
  }
  return result;
}

uint64_t sub_24D70EE98(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  unsigned int v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  uint64_t v11 = *(unsigned __int8 *)(v7 + 64);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  swift_bridgeObjectRetain();
  v6(v12, v13, AssociatedTypeWitness);
  unint64_t v14 = (v8 + v12) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (v8 + v13) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)(v15 + 8);
  if ((v16 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  }
  else
  {
    uint64_t v17 = *(void *)v15;
    sub_24D3F9C18(*(void *)v15, *(void *)(v15 + 8));
    *(void *)unint64_t v14 = v17;
    *(void *)(v14 + 8) = v16;
  }
  return a1;
}

uint64_t sub_24D70EFC4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  unsigned int v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v11 = *(unsigned __int8 *)(v7 + 56);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  v6(v12, v13, AssociatedTypeWitness);
  unint64_t v14 = (uint64_t *)((v8 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (uint64_t *)((v8 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = v14[1];
  unint64_t v17 = v15[1];
  uint64_t v18 = v17 & 0x3000000000000000;
  if ((v16 & 0x3000000000000000) == 0)
  {
    if (!v18)
    {
      uint64_t v21 = *v15;
      sub_24D3F9C18(v21, v17);
      uint64_t v22 = *v14;
      unint64_t v23 = v14[1];
      *unint64_t v14 = v21;
      v14[1] = v17;
      sub_24D400DCC(v22, v23);
      return a1;
    }
    sub_24D400DCC(*v14, v16);
    goto LABEL_6;
  }
  if (v18)
  {
LABEL_6:
    *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
    return a1;
  }
  uint64_t v19 = *v15;
  sub_24D3F9C18(v19, v17);
  *unint64_t v14 = v19;
  v14[1] = v17;
  return a1;
}

uint64_t sub_24D70F134(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  unsigned int v9 = (_OWORD *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (_OWORD *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  _OWORD *v9 = *v10;
  uint64_t v11 = *(unsigned __int8 *)(v7 + 48);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  v6(v12, v13, AssociatedTypeWitness);
  *(_OWORD *)((v8 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v8 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24D70F230(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  v6(a1, a2, AssociatedTypeWitness);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  unsigned int v9 = (void *)((v8 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v10 = (void *)((v8 + a2) & 0xFFFFFFFFFFFFFFF8);
  void *v9 = *v10;
  v9[1] = v10[1];
  swift_bridgeObjectRelease();
  uint64_t v11 = *(unsigned __int8 *)(v7 + 40);
  uint64_t v12 = ((unint64_t)v9 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v10 + v11 + 16) & ~v11;
  v6(v12, v13, AssociatedTypeWitness);
  unint64_t v14 = (uint64_t *)((v8 + v12) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v15 = (uint64_t *)((v8 + v13) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v16 = v14[1];
  if ((v16 & 0x3000000000000000) == 0)
  {
    uint64_t v17 = v15[1];
    if ((v17 & 0x3000000000000000) == 0)
    {
      uint64_t v19 = *v14;
      *unint64_t v14 = *v15;
      v14[1] = v17;
      sub_24D400DCC(v19, v16);
      return a1;
    }
    sub_24D400DCC(*v14, v16);
  }
  *(_OWORD *)unint64_t v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t sub_24D70F370(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8
         + 7
         + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))) & 0xFFFFFFFFFFFFFFF8)
       + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D70F528);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_24D70F53C(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8
        + 7
        + ((((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 16;
  if (v9 >= a3)
  {
    int v13 = 0;
    int v14 = a2 - v9;
    if (a2 <= v9)
    {
LABEL_17:
      switch(v13)
      {
        case 1:
          *((unsigned char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)((char *)a1 + v10) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_42;
        case 4:
          *(_DWORD *)((char *)a1 + v10) = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 < 0x7FFFFFFF)
            {
              unint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
              if ((a2 & 0x80000000) != 0)
              {
                *unint64_t v18 = a2 ^ 0x80000000;
                v18[1] = 0;
              }
              else
              {
                v18[1] = (a2 - 1);
              }
            }
            else
            {
              uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
              v17(a1, a2);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v8
         + 7
         + ((((v8 + 7) & 0xFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
      unsigned int v11 = a3 - v9 + 1;
    else {
      unsigned int v11 = 2;
    }
    if (v11 >= 0x10000) {
      int v12 = 4;
    }
    else {
      int v12 = 2;
    }
    if (v11 < 0x100) {
      int v12 = 1;
    }
    if (v11 >= 2) {
      int v13 = v12;
    }
    else {
      int v13 = 0;
    }
    int v14 = a2 - v9;
    if (a2 <= v9) {
      goto LABEL_17;
    }
  }
  if (((v8
       + 7
       + ((((v8 + 7) & 0xFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF0)
    int v15 = v14;
  else {
    int v15 = 1;
  }
  if (((v8
       + 7
       + ((((v8 + 7) & 0xFFFFFFF8) + *(unsigned __int8 *)(v6 + 80) + 16) & ~*(unsigned __int8 *)(v6 + 80))) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v16 = ~v9 + a2;
    bzero(a1, v10);
    *a1 = v16;
  }
  switch(v13)
  {
    case 1:
      *((unsigned char *)a1 + v10) = v15;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v10) = v15;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x24D70F764);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = v15;
      break;
    default:
      return;
  }
}

uint64_t sub_24D70F78C()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24D70F838(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((v6 + 16) & (unint64_t)~v6) + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v10 = AssociatedTypeWitness;
    uint64_t v11 = ~v6;
    uint64_t v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    int v13 = (char *)a1 + v6;
    int v14 = (char *)a2 + v6;
    uint64_t v15 = (unint64_t)(v13 + 16) & v11;
    uint64_t v16 = (unint64_t)(v14 + 16) & v11;
    uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_bridgeObjectRetain();
    v17(v15, v16, v10);
  }
  return a1;
}

uint64_t sub_24D70F960(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = AssociatedTypeWitness;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  return v4(v6, v5);
}

void *sub_24D70F9F4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  swift_bridgeObjectRetain();
  v7(v9, v10, AssociatedTypeWitness);
  return a1;
}

void *sub_24D70FAB0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

_OWORD *sub_24D70FB64(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), AssociatedTypeWitness);
  return a1;
}

void *sub_24D70FBF4(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24D70FC98(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v10 = ((v8 + 16) & ~v8) + v9;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0)
      {
        uint64_t v17 = *(uint64_t (**)(unint64_t))(v5 + 48);
        return v17(((unint64_t)a1 + v8 + 16) & ~v8);
      }
      else
      {
        unint64_t v16 = *((void *)a1 + 1);
        if (v16 >= 0xFFFFFFFF) {
          LODWORD(v16) = -1;
        }
        return (v16 + 1);
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v15) + 1;
}

void sub_24D70FE88(_WORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 16) & ~v8) + *(void *)(v6 + 64);
  if (a3 <= v9)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v12 = ~v9 + a2;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (v10)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *a1 = v15;
          *((unsigned char *)a1 + 2) = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *a1 = v15;
        }
        else
        {
          *(unsigned char *)a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v13;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v13;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x24D71010CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v16 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
          v16(((unint64_t)a1 + v8 + 16) & ~v8, a2);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(void *)a1 = a2 ^ 0x80000000;
          *((void *)a1 + 1) = 0;
        }
        else
        {
          *((void *)a1 + 1) = (a2 - 1);
        }
      }
      return;
  }
}

uint64_t sub_24D710158()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24D710200(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v10 = ((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v11 = ((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v12 = *(void *)(v11 + 8);
    if ((v12 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v10 = *(_OWORD *)v11;
    }
    else
    {
      uint64_t v13 = *(void *)v11;
      sub_24D3F9C18(*(void *)v11, *(void *)(v11 + 8));
      *(void *)unint64_t v10 = v13;
      *(void *)(v10 + 8) = v12;
    }
  }
  return a1;
}

uint64_t sub_24D710338(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v5 = (uint64_t *)((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = v5[1];
  if ((v6 & 0x3000000000000000) == 0)
  {
    uint64_t v7 = *v5;
    return sub_24D400DCC(v7, v6);
  }
  return result;
}

uint64_t sub_24D7103E4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 8);
  if ((v9 & 0x3000000000000000) != 0)
  {
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  }
  else
  {
    uint64_t v10 = *(void *)v8;
    sub_24D3F9C18(*(void *)v8, *(void *)(v8 + 8));
    *(void *)unint64_t v7 = v10;
    *(void *)(v7 + 8) = v9;
  }
  return a1;
}

uint64_t sub_24D7104A8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  unint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = v7[1];
  unint64_t v10 = v8[1];
  uint64_t v11 = v10 & 0x3000000000000000;
  if ((v9 & 0x3000000000000000) == 0)
  {
    if (!v11)
    {
      uint64_t v14 = *v8;
      sub_24D3F9C18(v14, v10);
      uint64_t v15 = *v7;
      unint64_t v16 = v7[1];
      *unint64_t v7 = v14;
      v7[1] = v10;
      sub_24D400DCC(v15, v16);
      return a1;
    }
    sub_24D400DCC(*v7, v9);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
    return a1;
  }
  uint64_t v12 = *v8;
  sub_24D3F9C18(v12, v10);
  *unint64_t v7 = v12;
  v7[1] = v10;
  return a1;
}

uint64_t sub_24D7105A4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_24D710644(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (uint64_t *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (uint64_t *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v9 = v7[1];
  if ((v9 & 0x3000000000000000) == 0)
  {
    uint64_t v10 = v8[1];
    if ((v10 & 0x3000000000000000) == 0)
    {
      uint64_t v12 = *v7;
      *unint64_t v7 = *v8;
      v7[1] = v10;
      sub_24D400DCC(v12, v9);
      return a1;
    }
    sub_24D400DCC(*v7, v9);
  }
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  return a1;
}

uint64_t sub_24D710718(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0xB) {
    unsigned int v7 = 11;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x24D7108C8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0xB)
  {
    uint64_t v18 = *(void *)((((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) >> 60;
    unsigned int v19 = ((v18 >> 2) & 0xFFFFFFF3 | (4 * (v18 & 3))) ^ 0xF;
    if (v19 >= 0xC) {
      unsigned int v19 = -1;
    }
    if (v19 + 1 >= 2) {
      return v19;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_24D7108DC(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0xB) {
    unsigned int v9 = 11;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v9 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v9 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v9)
  {
    if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v9;
    }
    else {
      int v15 = 1;
    }
    if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v9 + a2;
      bzero(a1, v10);
      *a1 = v16;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v15;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x24D710AF0);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0xB)
        {
          uint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
          *uint64_t v18 = 0;
          if (a2 > 0xB)
          {
            v18[1] = 0;
            *(_DWORD *)uint64_t v18 = a2 - 12;
          }
          else
          {
            v18[1] = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
          }
        }
        else
        {
          uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
          v17(a1, a2);
        }
      }
      return;
  }
}

uint64_t sub_24D710B18()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_getAssociatedTypeWitness();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_24D710C70(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(v4 - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v8 = v3 + v6;
  uint64_t v9 = (v3 + v7) & ~v7;
  uint64_t v10 = *(void *)(v5 + 64);
  uint64_t v37 = v10 + v6;
  uint64_t v11 = (v10 + v7 + v9) & ~v7;
  uint64_t v12 = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(_DWORD *)(v13 + 80);
  uint64_t v15 = v10 + v14;
  uint64_t v16 = (v15 + v11) & ~v14;
  uint64_t v17 = *(void *)(v13 + 64);
  uint64_t v18 = v17 + v14;
  unint64_t v19 = ((v17 + v14 + v16) & ~v14) + v17;
  uint64_t v20 = (v6 | *(unsigned char *)(v2 + 80) | *(unsigned char *)(v13 + 80));
  if (v20 > 7 || ((v6 | *(_DWORD *)(v2 + 80) | *(_DWORD *)(v13 + 80)) & 0x100000) != 0 || v19 > 0x18)
  {
    uint64_t v23 = *a2;
    *a1 = *a2;
    uint64_t v34 = v23 + ((v20 + 16) & ~v20);
    swift_retain();
  }
  else
  {
    unint64_t v24 = ~(unint64_t)v6;
    uint64_t v25 = ~v14;
    uint64_t v36 = v12;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v2 + 16))(a1, a2, AssociatedTypeWitness);
    unint64_t v26 = ((unint64_t)a1 + v8) & ~v7;
    unint64_t v27 = ((unint64_t)a2 + v8) & v24;
    unsigned int v28 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
    v28(v26, v27, v4);
    unint64_t v29 = (v37 + v26) & v24;
    unint64_t v30 = (v37 + v27) & v24;
    v28(v29, v30, v4);
    unint64_t v31 = (v29 + v15) & v25;
    unint64_t v32 = (v30 + v15) & v25;
    uint64_t v33 = *(void (**)(unint64_t, unint64_t, uint64_t))(v13 + 16);
    v33(v31, v32, v36);
    v33((v18 + v31) & v25, (v18 + v32) & v25, v36);
    return a1;
  }
  return (uint64_t *)v34;
}

uint64_t sub_24D710F5C(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v3)(a1, AssociatedTypeWitness);
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t v5 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = v6 + 8;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = (v4 + v9) & ~v9;
  v7(v10, v5);
  uint64_t v11 = *(void *)(v8 + 56);
  uint64_t v12 = (v11 + v9 + v10) & ~v9;
  v7(v12, v5);
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v18 = v14 + 8;
  unint64_t v19 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
  uint64_t v15 = *(unsigned __int8 *)(v14 + 80);
  v19((v12 + v11 + v15) & ~v15, v13);
  uint64_t v16 = (*(void *)(v18 + 56) + v15 + ((v12 + v11 + v15) & ~v15)) & ~v15;

  return ((uint64_t (*)(uint64_t, uint64_t))v19)(v16, v13);
}

uint64_t sub_24D71111C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 48);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  uint64_t v21 = v19 + 16;
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v15 + v22 + v16) & ~v22;
  uint64_t v24 = (v15 + v22 + v17) & ~v22;
  v20(v23, v24, v18);
  v20((*(void *)(v21 + 48) + v22 + v23) & ~v22, (*(void *)(v21 + 48) + v22 + v24) & ~v22, v18);
  return a1;
}

uint64_t sub_24D7112F8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 40);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 24);
  uint64_t v21 = v19 + 24;
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v15 + v22 + v16) & ~v22;
  uint64_t v24 = (v15 + v22 + v17) & ~v22;
  v20(v23, v24, v18);
  v20((*(void *)(v21 + 40) + v22 + v23) & ~v22, (*(void *)(v21 + 40) + v22 + v24) & ~v22, v18);
  return a1;
}

uint64_t sub_24D7114D4(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 32);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32);
  uint64_t v21 = v19 + 32;
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v15 + v22 + v16) & ~v22;
  uint64_t v24 = (v15 + v22 + v17) & ~v22;
  v20(v23, v24, v18);
  v20((*(void *)(v21 + 32) + v22 + v23) & ~v22, (*(void *)(v21 + 32) + v22 + v24) & ~v22, v18);
  return a1;
}

uint64_t sub_24D7116B0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  uint64_t v15 = *(void *)(v10 + 24);
  uint64_t v16 = (v15 + v11 + v13) & ~v11;
  uint64_t v17 = (v15 + v11 + v14) & ~v11;
  v9(v16, v17, v7);
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 40);
  uint64_t v21 = v19 + 40;
  uint64_t v22 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v23 = (v15 + v22 + v16) & ~v22;
  uint64_t v24 = (v15 + v22 + v17) & ~v22;
  v20(v23, v24, v18);
  v20((*(void *)(v21 + 24) + v22 + v23) & ~v22, (*(void *)(v21 + 24) + v22 + v24) & ~v22, v18);
  return a1;
}

uint64_t sub_24D71188C(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v33 = AssociatedTypeWitness;
  uint64_t v5 = *(unsigned int *)(v4 + 84);
  uint64_t v31 = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(v31 - 8);
  unsigned int v32 = *(_DWORD *)(v6 + 84);
  if (v32 <= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  if (*(_DWORD *)(v8 + 84) <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v4 + 64) + v9;
  uint64_t v14 = v10 + v9;
  uint64_t v15 = v10 + v11;
  uint64_t v16 = a1;
  if (a2 <= v12) {
    goto LABEL_27;
  }
  uint64_t v17 = ((*(void *)(v8 + 64) + v11 + ((v15 + ((v14 + (v13 & ~v9)) & ~v9)) & ~v11)) & ~v11) + *(void *)(v8 + 64);
  char v18 = 8 * v17;
  if (v17 > 3) {
    goto LABEL_10;
  }
  unsigned int v20 = ((a2 - v12 + ~(-1 << v18)) >> v18) + 1;
  if (HIWORD(v20))
  {
    int v19 = *(_DWORD *)((char *)a1 + v17);
    if (!v19) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v20 > 0xFF)
  {
    int v19 = *(unsigned __int16 *)((char *)a1 + v17);
    if (!*(unsigned __int16 *)((char *)a1 + v17)) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v20 >= 2)
  {
LABEL_10:
    int v19 = *((unsigned __int8 *)a1 + v17);
    if (!*((unsigned char *)a1 + v17)) {
      goto LABEL_27;
    }
LABEL_17:
    int v21 = (v19 - 1) << v18;
    if (v17 > 3) {
      int v21 = 0;
    }
    if (v17)
    {
      if (v17 <= 3) {
        int v22 = v17;
      }
      else {
        int v22 = 4;
      }
      switch(v22)
      {
        case 2:
          int v23 = *a1;
          break;
        case 3:
          int v23 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v23 = *(_DWORD *)a1;
          break;
        default:
          int v23 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v23 = 0;
    }
    return v12 + (v23 | v21) + 1;
  }
LABEL_27:
  if (!v12) {
    return 0;
  }
  if (v5 == v12)
  {
    uint64_t v24 = v33;
    uint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v26 = v5;
LABEL_33:
    return v25(v16, v26, v24);
  }
  uint64_t v28 = ~v9;
  uint64_t v16 = (unsigned __int16 *)(((unint64_t)a1 + v13) & v28);
  if (v32 == v12)
  {
    uint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v26 = v32;
    uint64_t v24 = v31;
    goto LABEL_33;
  }
  unint64_t v29 = (v15 + (((unint64_t)v16 + v14) & v28)) & ~v11;
  unint64_t v30 = *(uint64_t (**)(unint64_t))(v8 + 48);

  return v30(v29);
}

void sub_24D711C34(unsigned char *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v3 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v29 = v3;
  unsigned int v4 = *(_DWORD *)(v3 + 84);
  uint64_t v5 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= v4) {
    unsigned int v7 = v4;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v9 = v8;
  if (*(_DWORD *)(v8 + 84) <= v7) {
    unsigned int v10 = v7;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v12 = *(void *)(v3 + 64) + v11;
  uint64_t v13 = *(void *)(v5 + 64);
  uint64_t v14 = v13 + v11;
  uint64_t v15 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v16 = v13 + v15;
  size_t v17 = ((*(void *)(v8 + 64) + v15 + ((v13 + v15 + ((v13 + v11 + (v12 & ~v11)) & ~v11)) & ~v15)) & ~v15)
      + *(void *)(v8 + 64);
  if (a3 <= v10)
  {
    int v19 = 0;
    char v18 = a1;
  }
  else
  {
    char v18 = a1;
    if (v17 <= 3)
    {
      unsigned int v23 = ((a3 - v10 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
      if (HIWORD(v23))
      {
        int v19 = 4;
      }
      else if (v23 >= 0x100)
      {
        int v19 = 2;
      }
      else
      {
        int v19 = v23 > 1;
      }
    }
    else
    {
      int v19 = 1;
    }
  }
  if (v10 < a2)
  {
    unsigned int v20 = ~v10 + a2;
    if (v17 < 4)
    {
      int v21 = (v20 >> (8 * v17)) + 1;
      if (v17)
      {
        int v24 = v20 & ~(-1 << (8 * v17));
        bzero(v18, v17);
        if (v17 == 3)
        {
          *(_WORD *)char v18 = v24;
          _OWORD v18[2] = BYTE2(v24);
        }
        else if (v17 == 2)
        {
          *(_WORD *)char v18 = v24;
        }
        else
        {
          *char v18 = v24;
        }
      }
    }
    else
    {
      bzero(v18, v17);
      *(_DWORD *)char v18 = v20;
      int v21 = 1;
    }
    switch(v19)
    {
      case 1:
        v18[v17] = v21;
        return;
      case 2:
        *(_WORD *)&v18[v17] = v21;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&v18[v17] = v21;
        return;
      default:
        return;
    }
  }
  uint64_t v22 = ~v11;
  switch(v19)
  {
    case 1:
      v18[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&v18[v17] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x24D712044);
    case 4:
      *(_DWORD *)&v18[v17] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v4 == v10)
      {
        uint64_t v25 = *(void (**)(unsigned char *))(v29 + 56);
        uint64_t v26 = v18;
LABEL_31:
        v25(v26);
        return;
      }
      uint64_t v26 = (unsigned char *)((unint64_t)&v18[v12] & v22);
      if (v6 == v10)
      {
        uint64_t v25 = *(void (**)(unsigned char *))(v5 + 56);
        goto LABEL_31;
      }
      unint64_t v27 = (v16 + ((unint64_t)&v26[v14] & v22)) & ~v15;
      uint64_t v28 = *(void (**)(unint64_t))(v9 + 56);
      v28(v27);
      return;
  }
}

uint64_t sub_24D71206C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v2 = v1;
  uint64_t result = sub_24DCCA3F8();
  if (v4 <= 0x3F)
  {
    if (v2 > 0x3F)
    {
      return AssociatedTypeWitness;
    }
    else
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24D712168(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  if (*(_DWORD *)(v5 + 84)) {
    size_t v7 = *(void *)(v5 + 64);
  }
  else {
    size_t v7 = v6 + 1;
  }
  uint64_t v8 = *(_DWORD *)(v5 + 80);
  uint64_t v9 = ~v8;
  size_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & v9) + v6;
  if (v8 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    uint64_t v15 = AssociatedTypeWitness;
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
    {
      memcpy(a1, a2, v7);
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(((unint64_t)a1 + v10) & v9, ((unint64_t)a2 + v10) & v9, v15);
    }
    else
    {
      uint64_t v16 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
      v16(a1, a2, v15);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v15);
      v16((uint64_t *)(((unint64_t)a1 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v15);
    }
  }
  return a1;
}

uint64_t sub_24D712300(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, AssociatedTypeWitness);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  if (!v4)
  {
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v5(a1, AssociatedTypeWitness);
    uint64_t v5 = v9;
  }
  uint64_t v6 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v7 = *(void *)(v3 + 64) + a1;
  if (!*(_DWORD *)(v3 + 84)) {
    ++v7;
  }

  return ((uint64_t (*)(uint64_t, uint64_t))v5)((v7 + v6) & ~v6, AssociatedTypeWitness);
}

void *sub_24D712404(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    uint64_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = *(void *)(v5 + 64);
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
    uint64_t v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
  }
  else
  {
    uint64_t v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 16);
    v9(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v5 + 84);
    uint64_t v7 = *(void *)(v5 + 64);
  }
  if (v6) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = v7 + 1;
  }
  v9((void *)(((unint64_t)a1 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (const void *)(((unint64_t)a2 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), AssociatedTypeWitness);
  return a1;
}

void *sub_24D71255C(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  uint64_t v14 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  uint64_t v13 = v5 + 24;
  uint64_t v12 = v14;
  if (*(_DWORD *)(v13 + 60)) {
    uint64_t v15 = *(void *)(v13 + 40);
  }
  else {
    uint64_t v15 = *(void *)(v13 + 40) + 1;
  }
  v12(((unint64_t)a1 + v15 + *(unsigned __int8 *)(v13 + 56)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 56), ((unint64_t)a2 + v15 + *(unsigned __int8 *)(v13 + 56)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 56), AssociatedTypeWitness);
  return a1;
}

void *sub_24D71271C(void *a1, const void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v5 + 48))(a2, 1, AssociatedTypeWitness))
  {
    int v6 = *(_DWORD *)(v5 + 84);
    uint64_t v7 = *(void *)(v5 + 64);
    if (v6) {
      size_t v8 = *(void *)(v5 + 64);
    }
    else {
      size_t v8 = v7 + 1;
    }
    memcpy(a1, a2, v8);
    int v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
  }
  else
  {
    int v9 = *(void (**)(void *, const void *, uint64_t))(v5 + 32);
    v9(a1, a2, AssociatedTypeWitness);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
    int v6 = *(_DWORD *)(v5 + 84);
    uint64_t v7 = *(void *)(v5 + 64);
  }
  if (v6) {
    uint64_t v10 = v7;
  }
  else {
    uint64_t v10 = v7 + 1;
  }
  v9((void *)(((unint64_t)a1 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), (const void *)(((unint64_t)a2 + v10 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), AssociatedTypeWitness);
  return a1;
}

void *sub_24D712874(void *a1, void *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v5 + 48);
  int v7 = v6(a1, 1, AssociatedTypeWitness);
  int v8 = v6(a2, 1, AssociatedTypeWitness);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, AssociatedTypeWitness);
      goto LABEL_12;
    }
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  else
  {
    if (!v8)
    {
      (*(void (**)(void *, void *, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    int v9 = *(_DWORD *)(v5 + 84);
    size_t v10 = *(void *)(v5 + 64);
  }
  if (v9) {
    size_t v11 = v10;
  }
  else {
    size_t v11 = v10 + 1;
  }
  memcpy(a1, a2, v11);
LABEL_12:
  uint64_t v14 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  uint64_t v13 = v5 + 40;
  uint64_t v12 = v14;
  if (*(_DWORD *)(v13 + 44)) {
    uint64_t v15 = *(void *)(v13 + 24);
  }
  else {
    uint64_t v15 = *(void *)(v13 + 24) + 1;
  }
  v12(((unint64_t)a1 + v15 + *(unsigned __int8 *)(v13 + 40)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 40), ((unint64_t)a2 + v15 + *(unsigned __int8 *)(v13 + 40)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 40), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24D712A34(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  unsigned int v7 = v6 - 1;
  if (!v6) {
    unsigned int v7 = 0;
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  uint64_t v9 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v10 = v8 + v9;
  if (v6) {
    uint64_t v11 = v8 + v9;
  }
  else {
    uint64_t v11 = v10 + 1;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v6) {
    goto LABEL_26;
  }
  uint64_t v12 = (v11 & ~v9) + v8;
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v15 = ((a2 - v6 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
    if (v15 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_26;
      }
      goto LABEL_16;
    }
    if (v15 < 2)
    {
LABEL_26:
      if (v6)
      {
        if (v7 == v6)
        {
          unsigned int v19 = (*(uint64_t (**)(unsigned __int16 *))(v5 + 48))(a1);
          if (v19 >= 2) {
            return v19 - 1;
          }
          else {
            return 0;
          }
        }
        else
        {
          int v21 = *(uint64_t (**)(unint64_t))(v5 + 48);
          return v21(((unint64_t)a1 + v10) & ~v9);
        }
      }
      return 0;
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_26;
  }
LABEL_16:
  int v16 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v16 = 0;
  }
  if (v12)
  {
    if (v12 <= 3) {
      int v17 = v12;
    }
    else {
      int v17 = 4;
    }
    switch(v17)
    {
      case 2:
        int v18 = *a1;
        break;
      case 3:
        int v18 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v18 = *(_DWORD *)a1;
        break;
      default:
        int v18 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v18 = 0;
  }
  return v6 + (v18 | v16) + 1;
}

void sub_24D712C40(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (!v8) {
    unsigned int v9 = 0;
  }
  uint64_t v10 = *(void *)(v7 + 64);
  if (v8) {
    uint64_t v11 = *(void *)(v7 + 64);
  }
  else {
    uint64_t v11 = v10 + 1;
  }
  uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = v11 + v12;
  size_t v14 = (v13 & ~v12) + v10;
  if (a3 <= v8) {
    goto LABEL_14;
  }
  if (v14 <= 3)
  {
    unsigned int v15 = ((a3 - v8 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v15))
    {
      int v6 = 4;
      if (v8 >= a2) {
        goto LABEL_22;
      }
      goto LABEL_15;
    }
    if (v15 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v15 > 1;
    }
LABEL_14:
    if (v8 >= a2) {
      goto LABEL_22;
    }
    goto LABEL_15;
  }
  int v6 = 1;
  if (v8 >= a2)
  {
LABEL_22:
    uint64_t v19 = ~v12;
    switch(v6)
    {
      case 1:
        a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 2:
        *(_WORD *)&a1[v14] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_27;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v14] = 0;
        goto LABEL_26;
      default:
LABEL_26:
        if (a2)
        {
LABEL_27:
          if (v9 == v8)
          {
            uint64_t v20 = (a2 + 1);
            int v21 = *(void (**)(unsigned char *, uint64_t))(v7 + 56);
            uint64_t v22 = a1;
          }
          else
          {
            uint64_t v22 = (unsigned char *)((unint64_t)&a1[v13] & v19);
            int v21 = *(void (**)(unsigned char *, uint64_t))(v7 + 56);
            uint64_t v20 = a2;
          }
          v21(v22, v20);
        }
        break;
    }
    return;
  }
LABEL_15:
  unsigned int v16 = ~v8 + a2;
  if (v14 < 4)
  {
    int v17 = (v16 >> (8 * v14)) + 1;
    if (v14)
    {
      int v18 = v16 & ~(-1 << (8 * v14));
      bzero(a1, v14);
      if (v14 == 3)
      {
        *(_WORD *)a1 = v18;
        a1[2] = BYTE2(v18);
      }
      else if (v14 == 2)
      {
        *(_WORD *)a1 = v18;
      }
      else
      {
        *a1 = v18;
      }
    }
  }
  else
  {
    bzero(a1, v14);
    *(_DWORD *)a1 = v16;
    int v17 = 1;
  }
  switch(v6)
  {
    case 1:
      a1[v14] = v17;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v17;
      break;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x24D712EC4);
    case 4:
      *(_DWORD *)&a1[v14] = v17;
      break;
    default:
      return;
  }
}

uint64_t sub_24D712F10()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24D712FB0(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  uint64_t v8 = ~v7;
  uint64_t v9 = v6 + v7;
  unint64_t v10 = ((v6 + v7) & ~v7) + v6;
  if (v7 > 7 || (*(_DWORD *)(v5 + 80) & 0x100000) != 0 || v10 > 0x18)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v7 + 16) & v8));
    swift_retain();
  }
  else
  {
    uint64_t v14 = AssociatedTypeWitness;
    unsigned int v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v15(a1, a2, AssociatedTypeWitness);
    v15((uint64_t *)(((unint64_t)a1 + v9) & v8), (uint64_t *)(((unint64_t)a2 + v9) & v8), v14);
  }
  return a1;
}

uint64_t sub_24D7130D8(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 8;
  uint64_t v6 = *(uint64_t (**)(unint64_t, uint64_t))v5;
  (*(void (**)(uint64_t __return_ptr, uint64_t, uint64_t))v5)(AssociatedTypeWitness - 8, a1, AssociatedTypeWitness);
  unint64_t v3 = (*(void *)(v5 + 56) + a1 + *(unsigned __int8 *)(v5 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 72);

  return v6(v3, AssociatedTypeWitness);
}

unint64_t sub_24D713194(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(void *)(v7 + 48) + *(unsigned __int8 *)(v7 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64), (*(void *)(v7 + 48) + *(unsigned __int8 *)(v7 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_24D71324C(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 24);
  uint64_t v7 = v5 + 24;
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(void *)(v7 + 40) + *(unsigned __int8 *)(v7 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 56), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v7 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 56), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_24D713304(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 32);
  uint64_t v7 = v5 + 32;
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(void *)(v7 + 32) + *(unsigned __int8 *)(v7 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 48), (*(void *)(v7 + 32) + *(unsigned __int8 *)(v7 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 48), AssociatedTypeWitness);
  return a1;
}

unint64_t sub_24D7133BC(unint64_t a1, unint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 40);
  uint64_t v7 = v5 + 40;
  v6(a1, a2, AssociatedTypeWitness);
  v6((*(void *)(v7 + 24) + *(unsigned __int8 *)(v7 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 40), (*(void *)(v7 + 24) + *(unsigned __int8 *)(v7 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 40), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24D713474(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (!a2) {
    return 0;
  }
  if (a2 <= v6) {
    goto LABEL_19;
  }
  unint64_t v7 = ((*(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
     + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v8 = 8 * v7;
  if (v7 <= 3)
  {
    unsigned int v10 = ((a2 - v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v7);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v7);
      if (!*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v6)
      {
        uint64_t v12 = *(uint64_t (**)(unsigned __int16 *))(v5 + 48);
        return v12(a1);
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v7);
  if (!*((unsigned char *)a1 + v7)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v7 > 3) {
    int v11 = 0;
  }
  if (v7)
  {
    if (v7 > 3) {
      LODWORD(v7) = 4;
    }
    switch((int)v7)
    {
      case 2:
        LODWORD(v7) = *a1;
        break;
      case 3:
        LODWORD(v7) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v7) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v7) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v6 + (v7 | v11) + 1;
}

void sub_24D713634(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x24D713880);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t sub_24D7138A8()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_24D713948(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  if (v6 <= 7
    && *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return a1;
}

uint64_t sub_24D713A24(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8);

  return v3(a1, AssociatedTypeWitness);
}

uint64_t sub_24D713AA0(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24D713B18(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 24))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24D713B90(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24D713C08(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40))(a1, a2, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_24D713C80(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v7 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v9 = ((a2 - v5 + ~(-1 << v7)) >> v7) + 1;
    if (HIWORD(v9))
    {
      int v8 = *(_DWORD *)((char *)a1 + v6);
      if (!v8) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 > 0xFF)
    {
      int v8 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v9 < 2)
    {
LABEL_19:
      if (v5)
      {
        int v11 = *(uint64_t (**)(unsigned __int16 *))(v4 + 48);
        return v11(a1);
      }
      return 0;
    }
  }
  int v8 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v10 = (v8 - 1) << v7;
  if (v6 > 3) {
    int v10 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v10) + 1;
}

void sub_24D713E30(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  if (a3 <= v7)
  {
    int v9 = 0;
  }
  else if (v8 <= 3)
  {
    unsigned int v12 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
    if (HIWORD(v12))
    {
      int v9 = 4;
    }
    else if (v12 >= 0x100)
    {
      int v9 = 2;
    }
    else
    {
      int v9 = v12 > 1;
    }
  }
  else
  {
    int v9 = 1;
  }
  if (v7 < a2)
  {
    unsigned int v10 = ~v7 + a2;
    if (v8 < 4)
    {
      int v11 = (v10 >> (8 * v8)) + 1;
      if (v8)
      {
        int v13 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v13;
          a1[2] = BYTE2(v13);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v13;
        }
        else
        {
          *a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
      int v11 = 1;
    }
    switch(v9)
    {
      case 1:
        a1[v8] = v11;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v11;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v11;
        return;
      default:
        return;
    }
  }
  switch(v9)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x24D71406CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v14 = *(void (**)(unsigned char *, uint64_t))(v6 + 56);
        v14(a1, a2);
      }
      return;
  }
}

uint64_t sub_24D714094()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7140B0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7140CC()
{
  return swift_getWitnessTable();
}

void sub_24D7140E8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24D6AD5F8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24DC78330();
LABEL_7:
    int v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v22 = v18[6] + 16 * v12;
    *(void *)uint64_t v22 = a2;
    *(unsigned char *)(v22 + 8) = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      _OWORD v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_24D6FBCB8(v15, a4 & 1);
  unint64_t v20 = sub_24D6AD5F8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    int v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_24DCCAF18();
  __break(1u);
}

uint64_t sub_24D714234(uint64_t a1, uint64_t a2, char a3, char a4, void (*a5)(void), uint64_t *a6, uint64_t *a7)
{
  char v11 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = sub_24D6AD5F8(a2, a3);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
  }
  else
  {
    char v21 = v16;
    uint64_t v22 = v15[3];
    if (v22 >= v20 && (a4 & 1) != 0)
    {
LABEL_7:
      uint64_t v23 = *v11;
      if (v21)
      {
LABEL_8:
        uint64_t v24 = v23[7];
        uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(a6);
        return sub_24D3E17AC(a1, v24 + *(void *)(*(void *)(v25 - 8) + 72) * v17, a6);
      }
      return sub_24D717ED8(v17, a2, a3, a1, v23, a6);
    }
    if (v22 >= v20 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_24D6FBFF8(v20, a4 & 1, a6, a7);
    unint64_t v27 = sub_24D6AD5F8(a2, a3);
    if ((v21 & 1) == (v28 & 1))
    {
      unint64_t v17 = v27;
      uint64_t v23 = *v11;
      if (v21) {
        goto LABEL_8;
      }
      return sub_24D717ED8(v17, a2, a3, a1, v23, a6);
    }
  }
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

uint64_t sub_24D714394(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  size_t v8 = (void *)*v3;
  unint64_t v10 = sub_24D6AD6B8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    char v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199300);
      return sub_24D3E17AC(a1, v17 + *(void *)(*(void *)(v18 - 8) + 72) * v10, (uint64_t *)&unk_26B199300);
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_24DC78764();
    goto LABEL_7;
  }
  sub_24D6FC3C0(v13, a3 & 1);
  unint64_t v20 = sub_24D6AD6B8(a2);
  if ((v14 & 1) != (v21 & 1))
  {
LABEL_15:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v10 = v20;
  char v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_24D717F84(v10, a2, a1, v16);
}

uint64_t sub_24D7144E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = v5;
  uint64_t v12 = *v5;
  unint64_t v14 = sub_24D4053BC(a3, a4);
  uint64_t v15 = *(void *)(v12 + 16);
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v18 = v13;
  uint64_t v19 = *(void *)(v12 + 24);
  if (v19 >= v17 && (a5 & 1) != 0) {
    goto LABEL_7;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_24DC78B9C();
LABEL_7:
    unint64_t v20 = (void *)*v6;
    if (v18)
    {
LABEL_8:
      char v21 = (void *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *char v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  sub_24D6FC730(v17, a5 & 1);
  unint64_t v23 = sub_24D4053BC(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  unint64_t v20 = (void *)*v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  v20[(v14 >> 6) + 8] |= 1 << v14;
  uint64_t v25 = (uint64_t *)(v20[6] + 16 * v14);
  *uint64_t v25 = a3;
  v25[1] = a4;
  uint64_t v26 = (void *)(v20[7] + 16 * v14);
  *uint64_t v26 = a1;
  v26[1] = a2;
  uint64_t v27 = v20[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v20[2] = v29;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_24D714668(_OWORD *a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  size_t v8 = (void *)*v3;
  unint64_t v10 = sub_24D6AD6FC(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24DC78D64();
      goto LABEL_7;
    }
    sub_24D6FCDBC(v13, a3 & 1);
    unint64_t v19 = sub_24D6AD6FC(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
LABEL_13:
      sub_24D6D0AE0(a2, (uint64_t)v21);
      return sub_24D71802C(v10, (uint64_t)v21, a1, v16);
    }
LABEL_15:
    uint64_t result = (_OWORD *)sub_24DCCAF18();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if ((v14 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v17 = (_OWORD *)(v16[7] + 32 * v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);

  return sub_24D3F7E7C(a1, v17);
}

id sub_24D7147B4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_24D4060A4(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_24DC790F8();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_bridgeObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24D6FD3AC(v12, a3 & 1);
  uint64_t v18 = sub_24D4060A4(a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id result = (id)sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v15[2] = v23;

  return a2;
}

uint64_t sub_24D714918(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_24D7159C8(a1, a2, a3, a4, (uint64_t (*)(void))sub_24DC792A4, &qword_26986AF58);
}

void sub_24D714938(uint64_t a1, void *a2, char a3)
{
}

void sub_24D714958(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_24D4060A4(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_24DC792BC();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_24D6FD6E4(v12, a3 & 1);
  uint64_t v17 = sub_24D4060A4(a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    sub_24DCCAF18();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v15[2] = v22;

  id v23 = a2;
}

uint64_t sub_24D714ABC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24D4053BC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24DC79468();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24D6FDA04(result, a4 & 1);
  uint64_t result = sub_24D4053BC(a2, a3);
  if ((v16 & 1) != (v19 & 1))
  {
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v12 = result;
  char v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  uint64_t v20 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v20 = a2;
  v20[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v21 = v18[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v23;

  return swift_bridgeObjectRetain();
}

void sub_24D714C20(uint64_t a1, void *a2, char a3)
{
}

void sub_24D714C40(uint64_t a1, void *a2, char a3, void (*a4)(void), uint64_t *a5)
{
  char v8 = v5;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_24D4060A4(a2);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 >= v16 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    char v19 = (void *)*v8;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];

      *(void *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_24D6FDD10(v16, a3 & 1, a5);
  uint64_t v21 = sub_24D4060A4(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    sub_24DCCAF18();
    __break(1u);
    return;
  }
  unint64_t v13 = v21;
  char v19 = (void *)*v8;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v23 = 8 * v13;
  *(void *)(v19[6] + v23) = a2;
  *(void *)(v19[7] + v23) = a1;
  uint64_t v24 = v19[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v19[2] = v26;

  id v27 = a2;
}

uint64_t sub_24D714DC0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_24D6AD858(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 < v16 || (a3 & 1) == 0)
  {
    if (v18 >= v16 && (a3 & 1) == 0)
    {
      sub_24DC79A6C();
      goto LABEL_7;
    }
    sub_24D6FE44C(v16, a3 & 1);
    unint64_t v27 = sub_24D6AD858(a2);
    if ((v17 & 1) == (v28 & 1))
    {
      unint64_t v13 = v27;
      char v19 = *v4;
      if (v17) {
        goto LABEL_8;
      }
LABEL_13:
      sub_24D71903C(a2, (uint64_t)v10, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
      return sub_24D7180F0(v13, (uint64_t)v10, a1, v19);
    }
LABEL_15:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
LABEL_7:
  char v19 = *v4;
  if ((v17 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v20 = v19[7];
  uint64_t v21 = sub_24DCC8CE8();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 40);
  uint64_t v24 = v21;
  uint64_t v25 = v20 + *(void *)(v22 + 72) * v13;

  return v23(v25, a1, v24);
}

uint64_t sub_24D714F9C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_24D6AD928(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    char v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_release();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_24DC797C4();
    goto LABEL_7;
  }
  sub_24D6FE03C(v16, a3 & 1);
  unint64_t v22 = sub_24D6AD928(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  char v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24D71903C(a2, (uint64_t)v10, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  return sub_24D7181E0(v13, (uint64_t)v10, a1, v19);
}

uint64_t sub_24D71511C(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  uint64_t v8 = v7;
  uint64_t v15 = *v7;
  unint64_t v17 = sub_24D6AD5F8(a5, a6);
  uint64_t v18 = *(void *)(v15 + 16);
  BOOL v19 = (v16 & 1) == 0;
  uint64_t result = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = *(void *)(v15 + 24);
  if (v22 >= result && (a7 & 1) != 0) {
    goto LABEL_7;
  }
  if (v22 >= result && (a7 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24DC79DAC();
LABEL_7:
    char v23 = (void *)*v8;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7] + 32 * v17;
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v24 = a1;
      *(unsigned char *)(v24 + 8) = a2;
      *(void *)(v24 + 16) = a3;
      *(void *)(v24 + 24) = a4;
      return result;
    }
LABEL_11:
    v23[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v26 = v23[6] + 16 * v17;
    *(void *)uint64_t v26 = a5;
    *(unsigned char *)(v26 + 8) = a6;
    uint64_t v27 = v23[7] + 32 * v17;
    *(void *)uint64_t v27 = a1;
    *(unsigned char *)(v27 + 8) = a2;
    *(void *)(v27 + 16) = a3;
    *(void *)(v27 + 24) = a4;
    uint64_t v28 = v23[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (!v29)
    {
      v23[2] = v30;
      return result;
    }
    goto LABEL_14;
  }
  sub_24D6FE940(result, a7 & 1);
  uint64_t result = sub_24D6AD5F8(a5, a6);
  if ((v21 & 1) == (v25 & 1))
  {
    unint64_t v17 = result;
    char v23 = (void *)*v8;
    if (v21) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

uint64_t sub_24D7152A0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24D6ADC78(a2);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= v13 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_24DC79F7C();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24D6FEC9C(v13, a3 & 1);
  unint64_t v19 = sub_24D6ADC78(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_16:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986D588);
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24D3F0BA0(a2, (uint64_t)v31, &qword_26B199600);
  long long v21 = *(_OWORD *)(a2 + 32);
  v29[0] = *(_OWORD *)(a2 + 16);
  v29[1] = v21;
  __int16 v30 = *(_WORD *)(a2 + 48);
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v22 = v16[6] + 56 * v10;
  __int16 v23 = *(_WORD *)(a2 + 48);
  long long v25 = *(_OWORD *)(a2 + 16);
  long long v24 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)uint64_t v22 = *(_OWORD *)a2;
  *(_OWORD *)(v22 + 16) = v25;
  *(_OWORD *)(v22 + 32) = v24;
  *(_WORD *)(v22 + 48) = v23;
  *(void *)(v16[7] + 8 * v10) = a1;
  uint64_t v26 = v16[2];
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v16[2] = v28;
  sub_24D718E9C((uint64_t)v31);
  return sub_24D43E368((uint64_t)v29);
}

uint64_t sub_24D715434(uint64_t a1, char a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_24D6AD3B8(a1);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t result = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v14 = v9;
  uint64_t v15 = *(void *)(v8 + 24);
  if (v15 >= result && (a2 & 1) != 0) {
    goto LABEL_7;
  }
  if (v15 >= result && (a2 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24DC7A170();
LABEL_7:
    char v16 = (void *)*v4;
    if (v14)
    {
LABEL_8:
      *(double *)(v16[7] + 8 * v10) = a3;
      return result;
    }
    goto LABEL_11;
  }
  sub_24D6FF034(result, a2 & 1);
  uint64_t result = sub_24D6AD3B8(a1);
  if ((v14 & 1) != (v17 & 1))
  {
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v10 = result;
  char v16 = (void *)*v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:
  v16[(v10 >> 6) + 8] |= 1 << v10;
  uint64_t v18 = v16[6] + 56 * v10;
  long long v19 = *(_OWORD *)a1;
  long long v20 = *(_OWORD *)(a1 + 16);
  long long v21 = *(_OWORD *)(a1 + 32);
  *(void *)(v18 + 48) = *(void *)(a1 + 48);
  *(_OWORD *)(v18 + 16) = v20;
  *(_OWORD *)(v18 + 32) = v21;
  *(_OWORD *)uint64_t v18 = v19;
  *(double *)(v16[7] + 8 * v10) = a3;
  uint64_t v22 = v16[2];
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v16[2] = v24;

  return sub_24D43DD84(a1);
}

uint64_t sub_24D7155A0(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  uint64_t v7 = (void **)v6;
  char v14 = (void *)*v6;
  unint64_t v16 = sub_24D6AD5F8(a4, a5);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = v14[3];
  if (v21 >= result && (a6 & 1) != 0)
  {
LABEL_7:
    uint64_t v22 = *v7;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7] + 24 * v16;
      *(void *)uint64_t v23 = a1;
      *(unsigned char *)(v23 + 8) = a2 & 1;
      *(void *)(v23 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v21 >= result && (a6 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24DC7A344();
    goto LABEL_7;
  }
  sub_24D6FF284(result, a6 & 1);
  uint64_t result = sub_24D6AD5F8(a4, a5);
  if ((v20 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  uint64_t v22 = *v7;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_24D718294(v16, a4, a5, a1, a2 & 1, a3, v22);
}

id sub_24D715708(uint64_t a1, char a2, uint64_t a3, void *a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v11 = (void *)*v5;
  unint64_t v13 = sub_24D4060A4(a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  id result = (id)(v14 + v15);
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= (uint64_t)result && (a5 & 1) != 0)
  {
LABEL_7:
    long long v19 = *v6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7] + 24 * v13;
      *(void *)uint64_t v20 = a1;
      *(unsigned char *)(v20 + 8) = a2 & 1;
      *(void *)(v20 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= (uint64_t)result && (a5 & 1) == 0)
  {
    id result = sub_24DC7A504();
    goto LABEL_7;
  }
  sub_24D6FF5D0((uint64_t)result, a5 & 1);
  id result = (id)sub_24D4060A4(a4);
  if ((v17 & 1) != (v21 & 1))
  {
LABEL_15:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    id result = (id)sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v13 = (unint64_t)result;
  long long v19 = *v6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24D7182F4(v13, (uint64_t)a4, a1, a2 & 1, a3, v19);

  return a4;
}

uint64_t sub_24D71585C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_24D6AD9F4(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24DC7A6C8();
      goto LABEL_7;
    }
    sub_24D6FF914(v13, a3 & 1);
    uint64_t v20 = sub_24D6AD9F4(a2);
    if ((v14 & 1) == (v21 & 1))
    {
      unint64_t v10 = v20;
      unint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7];
    uint64_t v18 = v17 + *(void *)(*(void *)(type metadata accessor for SyncState() - 8) + 72) * v10;
    return sub_24D718ED0(a1, v18);
  }
LABEL_13:

  return sub_24D71834C(v10, a2, a1, v16);
}

uint64_t sub_24D7159A8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_24D7159C8(a1, a2, a3, a4, (uint64_t (*)(void))sub_24DC7B2D8, &qword_26986AF50);
}

uint64_t sub_24D7159C8(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t (*a5)(void), uint64_t *a6)
{
  char v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_24D6AD5F8(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= result && (a4 & 1) == 0)
  {
    uint64_t result = a5();
LABEL_7:
    uint64_t v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v23 + 8 * v16) = a1;
      return result;
    }
LABEL_11:
    v22[(v16 >> 6) + 8] |= 1 << v16;
    uint64_t v25 = v22[6] + 16 * v16;
    *(void *)uint64_t v25 = a2;
    *(unsigned char *)(v25 + 8) = a3;
    *(void *)(v22[7] + 8 * v16) = a1;
    uint64_t v26 = v22[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (!v27)
    {
      _OWORD v22[2] = v28;
      return result;
    }
    goto LABEL_14;
  }
  sub_24D705F34(result, a4 & 1, a6);
  uint64_t result = sub_24D6AD5F8(a2, a3);
  if ((v20 & 1) == (v24 & 1))
  {
    unint64_t v16 = result;
    uint64_t v22 = (void *)*v9;
    if (v20) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

id sub_24D715B2C(uint64_t a1, uint64_t a2, void *a3, void *a4, void *a5, char a6, char a7)
{
  uint64_t v8 = (void **)v7;
  char v15 = (void *)*v7;
  unint64_t v17 = sub_24D6ADDB4(a3, a4, a5, a6);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a7 & 1) != 0)
  {
LABEL_7:
    uint64_t v23 = *v8;
    if (v21)
    {
LABEL_8:
      char v24 = (uint64_t *)(v23[7] + 16 * v17);
      id result = (id)swift_bridgeObjectRelease();
      uint64_t *v24 = a1;
      v24[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a7 & 1) == 0)
  {
    sub_24DC7B4B4();
    goto LABEL_7;
  }
  sub_24D701C54(v20, a7 & 1);
  unint64_t v26 = sub_24D6ADDB4(a3, a4, a5, a6);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName(&qword_26986BDE8);
    id result = (id)sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  uint64_t v23 = *v8;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24D7183F8(v17, (uint64_t)a3, (uint64_t)a4, (uint64_t)a5, a6, a1, a2, v23);

  return sub_24D433278(a3, a4, a5, a6);
}

uint64_t sub_24D715CC0(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24D6ADE4C(a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = *v5;
    if (v16)
    {
LABEL_8:
      BOOL v19 = (uint64_t *)(v18[7] + 16 * v12);
      uint64_t result = swift_bridgeObjectRelease();
      *BOOL v19 = a1;
      v19[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24DC7B684();
    goto LABEL_7;
  }
  sub_24D701F90(v15, a4 & 1);
  unint64_t v21 = sub_24D6ADE4C(a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1926A0);
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_24D71844C(v12, a3, a1, a2, v18);
}

void sub_24D715DF4(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_24D4060A4(a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_24DC7BA1C();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];

      *(void *)(v16 + 8 * v9) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_24D7026BC(v12, a3 & 1);
  uint64_t v17 = sub_24D4060A4(a2);
  if ((v13 & 1) != (v18 & 1))
  {
LABEL_17:
    type metadata accessor for NSFileProviderItemIdentifier(0);
    sub_24DCCAF18();
    __break(1u);
    return;
  }
  unint64_t v9 = v17;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v19 = 8 * v9;
  *(void *)(v15[6] + v19) = a2;
  *(void *)(v15[7] + v19) = a1;
  uint64_t v20 = v15[2];
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (v21)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v15[2] = v22;

  id v23 = a2;
}

uint64_t sub_24D715F58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  char v8 = (void *)*v3;
  unint64_t v10 = sub_24D6AD6B8(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_24DC7BBC4();
      goto LABEL_7;
    }
    sub_24D7029EC(v13, a3 & 1);
    unint64_t v19 = sub_24D6AD6B8(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      uint64_t v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 16 * v10;
    return sub_24D718F34(a1, v17);
  }
LABEL_13:

  return sub_24D7184DC(v10, a2, a1, v16);
}

_OWORD *sub_24D716088(_OWORD *a1, void *a2, char a3)
{
  return sub_24D716118(a1, a2, a3, (uint64_t (*)(void *))sub_24D4060A4, (void (*)(void))sub_24DC7BD88, &qword_26986B148, type metadata accessor for URLResourceKey);
}

_OWORD *sub_24D7160D0(_OWORD *a1, void *a2, char a3)
{
  return sub_24D716118(a1, a2, a3, (uint64_t (*)(void *))sub_24D4060A4, (void (*)(void))sub_24DC7BD94, qword_26986D5B8, type metadata accessor for FileAttributeKey);
}

_OWORD *sub_24D716118(_OWORD *a1, void *a2, char a3, uint64_t (*a4)(void *), void (*a5)(void), uint64_t *a6, void (*a7)(void))
{
  BOOL v12 = (void **)v7;
  uint64_t v15 = (void *)*v7;
  unint64_t v17 = a4(a2);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 < v20 || (a3 & 1) == 0)
  {
    if (v22 >= v20 && (a3 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_24D704BB4(v20, a3 & 1, a6);
    uint64_t v26 = a4(a2);
    if ((v21 & 1) == (v27 & 1))
    {
      unint64_t v17 = v26;
      id v23 = *v12;
      if (v21) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    a7(0);
    uint64_t result = (_OWORD *)sub_24DCCAF18();
    __break(1u);
    return result;
  }
LABEL_7:
  id v23 = *v12;
  if (v21)
  {
LABEL_8:
    char v24 = (_OWORD *)(v23[7] + 32 * v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
    return sub_24D3F7E7C(a1, v24);
  }
LABEL_13:
  sub_24D7187FC(v17, (uint64_t)a2, a1, v23);

  return a2;
}

uint64_t sub_24D716298(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t (*a6)(void), uint64_t *a7, uint64_t (*a8)(void))
{
  uint64_t v11 = (void **)v8;
  char v16 = (void *)*v8;
  unint64_t v18 = sub_24D4053BC(a2, a3);
  uint64_t v19 = v16[2];
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v22 = v17;
  uint64_t v23 = v16[3];
  if (v23 < v21 || (a4 & 1) == 0)
  {
    if (v23 >= v21 && (a4 & 1) == 0)
    {
      a5();
      goto LABEL_7;
    }
    sub_24D702CB0(v21, a4 & 1, a6, a7);
    unint64_t v32 = sub_24D4053BC(a2, a3);
    if ((v22 & 1) == (v33 & 1))
    {
      unint64_t v18 = v32;
      char v24 = *v11;
      if (v22) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
LABEL_7:
  char v24 = *v11;
  if (v22)
  {
LABEL_8:
    uint64_t v25 = v24[7];
    uint64_t v26 = a8(0);
    uint64_t v27 = *(void *)(v26 - 8);
    uint64_t v28 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
    uint64_t v29 = v26;
    uint64_t v30 = v25 + *(void *)(v27 + 72) * v18;
    return v28(v30, a1, v29);
  }
LABEL_13:
  sub_24D718544(v18, a2, a3, a1, v24, a6);

  return swift_bridgeObjectRetain();
}

uint64_t sub_24D716454(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_24D6ADA20(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_24DC7B05C();
    goto LABEL_7;
  }
  sub_24D701654(v16, a3 & 1);
  unint64_t v22 = sub_24D6ADA20(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24D415FD0(a2, (uint64_t)v10, &qword_26B18FF40);
  return sub_24D7185F8(v13, (uint64_t)v10, a1, v19);
}

void sub_24D7165CC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  MEMORY[0x270FA5388](v8);
  unint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)*v3;
  unint64_t v13 = sub_24D6ADA20(a2);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = *v4;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];

      *(void *)(v20 + 8 * v13) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    sub_24DC7C2FC();
    goto LABEL_7;
  }
  sub_24D703338(v16, a3 & 1);
  unint64_t v21 = sub_24D6ADA20(a2);
  if ((v17 & 1) != (v22 & 1))
  {
LABEL_14:
    sub_24DCCAF18();
    __break(1u);
    return;
  }
  unint64_t v13 = v21;
  uint64_t v19 = *v4;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  sub_24D415FD0(a2, (uint64_t)v10, &qword_26B18FF40);
  sub_24D7185F8(v13, (uint64_t)v10, a1, v19);
}

void sub_24D716744(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_24D716764(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
}

void sub_24D716784(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), uint64_t *a6)
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_24D4053BC(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= v19 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= v19 && (a4 & 1) == 0)
  {
    a5();
LABEL_7:
    char v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      uint64_t v23 = v22[7];

      *(void *)(v23 + 8 * v16) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_24D703BD4(v19, a4 & 1, a6);
  unint64_t v24 = sub_24D4053BC(a2, a3);
  if ((v20 & 1) != (v25 & 1))
  {
LABEL_17:
    sub_24DCCAF18();
    __break(1u);
    return;
  }
  unint64_t v16 = v24;
  char v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v26 = (uint64_t *)(v22[6] + 16 * v16);
  *uint64_t v26 = a2;
  v26[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v27 = v22[2];
  BOOL v28 = __OFADD__(v27, 1);
  uint64_t v29 = v27 + 1;
  if (v28)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v22[2] = v29;

  swift_bridgeObjectRetain();
}

id sub_24D716910(uint64_t a1, void *a2, char a3)
{
  return sub_24D716930(a1, a2, a3, (void (*)(void))sub_24DC7CAA0, &qword_26B1914C8);
}

id sub_24D716930(uint64_t a1, void *a2, char a3, void (*a4)(void), uint64_t *a5)
{
  uint64_t v8 = v5;
  uint64_t v11 = *v5;
  unint64_t v13 = sub_24D4060A4(a2);
  uint64_t v14 = *(void *)(v11 + 16);
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v17 = v12;
  uint64_t v18 = *(void *)(v11 + 24);
  if (v18 >= v16 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v18 >= v16 && (a3 & 1) == 0)
  {
    a4();
LABEL_7:
    uint64_t v19 = (void *)*v8;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7];
      id result = (id)swift_release();
      *(void *)(v20 + 8 * v13) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24D703EE0(v16, a3 & 1, a5);
  uint64_t v22 = sub_24D4060A4(a2);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_17:
    type metadata accessor for FPProviderDomainID(0);
    id result = (id)sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = (void *)*v8;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  v19[(v13 >> 6) + 8] |= 1 << v13;
  uint64_t v24 = 8 * v13;
  *(void *)(v19[6] + v24) = a2;
  *(void *)(v19[7] + v24) = a1;
  uint64_t v25 = v19[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v19[2] = v27;

  return a2;
}

id sub_24D716AB0(uint64_t a1, void *a2, char a3)
{
  return sub_24D716930(a1, a2, a3, (void (*)(void))sub_24DC7CAAC, &qword_26B1914B0);
}

id sub_24D716AD0(uint64_t a1, void *a2, char a3)
{
  return sub_24D716930(a1, a2, a3, (void (*)(void))sub_24DC7CAB8, (uint64_t *)&unk_26B1914B8);
}

id sub_24D716AF0(uint64_t a1, void *a2, char a3)
{
  return sub_24D716930(a1, a2, a3, (void (*)(void))sub_24DC7CAC4, (uint64_t *)&unk_26B1914A0);
}

uint64_t sub_24D716B10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24D4053BC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24DC7CC74();
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24D7041FC(v15, a4 & 1);
  unint64_t v21 = sub_24D4053BC(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v23 = (uint64_t *)(v18[6] + 16 * v12);
  *char v23 = a2;
  v23[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v24 = v18[2];
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v26;

  return swift_bridgeObjectRetain();
}

uint64_t sub_24D716C80(long long *a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = (void **)v4;
  uint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_24D4053BC(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 < v15 || (a4 & 1) == 0)
  {
    if (v17 >= v15 && (a4 & 1) == 0)
    {
      sub_24DC7CE2C();
      goto LABEL_7;
    }
    sub_24D704534(v15, a4 & 1, &qword_26B191488, (void (*)(uint64_t, unsigned char *))sub_24D57EC10);
    unint64_t v21 = sub_24D4053BC(a2, a3);
    if ((v16 & 1) == (v22 & 1))
    {
      unint64_t v12 = v21;
      uint64_t v18 = *v5;
      if (v16) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v18 = *v5;
  if (v16)
  {
LABEL_8:
    uint64_t v19 = v18[7] + 40 * v12;
    __swift_destroy_boxed_opaque_existential_1(v19);
    return sub_24D57EC10(a1, v19);
  }
LABEL_13:
  sub_24D7186F0(v12, a2, a3, (uint64_t)a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_24D716DF4(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_24D716E14(a1, a2, a3, a4, (uint64_t (*)(void))sub_24DC7D04C, &qword_26B191490);
}

uint64_t sub_24D716E14(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t (*a5)(void), uint64_t *a6)
{
  uint64_t v9 = v6;
  uint64_t v14 = *v6;
  unint64_t v16 = sub_24D4053BC(a2, a3);
  uint64_t v17 = *(void *)(v14 + 16);
  BOOL v18 = (v15 & 1) == 0;
  uint64_t result = v17 + v18;
  if (__OFADD__(v17, v18))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v20 = v15;
  uint64_t v21 = *(void *)(v14 + 24);
  if (v21 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v21 >= result && (a4 & 1) == 0)
  {
    uint64_t result = a5();
LABEL_7:
    char v22 = (void *)*v9;
    if (v20)
    {
LABEL_8:
      *(void *)(v22[7] + 8 * v16) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_24D70486C(result, a4 & 1, a6);
  uint64_t result = sub_24D4053BC(a2, a3);
  if ((v20 & 1) != (v23 & 1))
  {
LABEL_17:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v16 = result;
  char v22 = (void *)*v9;
  if (v20) {
    goto LABEL_8;
  }
LABEL_11:
  v22[(v16 >> 6) + 8] |= 1 << v16;
  uint64_t v24 = (uint64_t *)(v22[6] + 16 * v16);
  uint64_t *v24 = a2;
  v24[1] = a3;
  *(void *)(v22[7] + 8 * v16) = a1;
  uint64_t v25 = v22[2];
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (v26)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v22[2] = v27;

  return swift_bridgeObjectRetain();
}

_OWORD *sub_24D716F94(_OWORD *a1, void *a2, char a3)
{
  return sub_24D716118(a1, a2, a3, (uint64_t (*)(void *))sub_24D4060A4, (void (*)(void))sub_24DC7D218, &qword_26986D598, type metadata accessor for FPDiagnosticAttributeKey);
}

void sub_24D716FDC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24D4053BC(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24DC7C730();
LABEL_7:
    BOOL v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_24D7038BC(v15, a4 & 1);
  unint64_t v20 = sub_24D4053BC(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_24DCCAF18();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  BOOL v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  char v22 = (uint64_t *)(v18[6] + 16 * v12);
  uint64_t *v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  _OWORD v18[2] = v25;

  swift_bridgeObjectRetain();
}

uint64_t sub_24D71714C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_24DCC8A58();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  char v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_24D6AE20C(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t result = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= result && (a3 & 1) != 0)
  {
LABEL_7:
    unint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      *(void *)(v20[7] + 8 * v14) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= result && (a3 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24DC7DA4C();
    goto LABEL_7;
  }
  sub_24D705808(result, a3 & 1);
  uint64_t result = sub_24D6AE20C(a2);
  if ((v18 & 1) != (v21 & 1))
  {
LABEL_14:
    uint64_t result = sub_24DCCAF18();
    __break(1u);
    return result;
  }
  unint64_t v14 = result;
  unint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  return sub_24D718864(v14, (uint64_t)v11, a1, v20);
}

void sub_24D7172E8(uint64_t a1, uint64_t a2, char a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24D6AD5F8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_24DC7DCE0();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v22 = v18[6] + 16 * v12;
    *(void *)uint64_t v22 = a2;
    *(unsigned char *)(v22 + 8) = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v23 = v18[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (!v24)
    {
      _OWORD v18[2] = v25;
      return;
    }
    goto LABEL_14;
  }
  sub_24D705BFC(v15, a4 & 1);
  unint64_t v20 = sub_24D6AD5F8(a2, a3);
  if ((v16 & 1) == (v21 & 1))
  {
    unint64_t v12 = v20;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  sub_24DCCAF18();
  __break(1u);
}

uint64_t sub_24D717434(uint64_t a1, uint64_t a2, char a3, char a4)
{
  return sub_24D7159C8(a1, a2, a3, a4, (uint64_t (*)(void))sub_24DC7DE98, (uint64_t *)&unk_26B1948C8);
}

uint64_t sub_24D717454(uint64_t a1, uint64_t a2, char a3, char a4)
{
  unsigned int v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_24D6AD5F8(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t result = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= result && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= result && (a4 & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_24DC7E054();
LABEL_7:
    char v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      *(void *)(v18[7] + 8 * v12) = a1;
      return result;
    }
LABEL_11:
    v18[(v12 >> 6) + 8] |= 1 << v12;
    uint64_t v20 = v18[6] + 16 * v12;
    *(void *)uint64_t v20 = a2;
    *(unsigned char *)(v20 + 8) = a3;
    *(void *)(v18[7] + 8 * v12) = a1;
    uint64_t v21 = v18[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (!v22)
    {
      _OWORD v18[2] = v23;
      return result;
    }
    goto LABEL_14;
  }
  sub_24D706264(result, a4 & 1);
  uint64_t result = sub_24D6AD5F8(a2, a3);
  if ((v16 & 1) == (v19 & 1))
  {
    unint64_t v12 = result;
    char v18 = (void *)*v5;
    if (v16) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
LABEL_15:
  uint64_t result = sub_24DCCAF18();
  __break(1u);
  return result;
}

__n128 sub_24D717594(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, double a5)
{
  sub_24D6D0A84(a1 + 24, (uint64_t)v16);
  sub_24DCCAFF8();
  sub_24DCC98F8();
  sub_24DCCB008();
  sub_24D6D0A84((uint64_t)v16, (uint64_t)&v17);
  int v10 = v18;
  switch(v18)
  {
    case 0xFAu:
    case 0xFBu:
    case 0xFCu:
    case 0xFDu:
    case 0xFEu:
      goto LABEL_8;
    default:
      sub_24DCCB008();
      if (v10 == 255)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        if (v10)
        {
          if (v10 == 1)
          {
            sub_24DCCB008();
            sub_24DCCB038();
          }
          else
          {
LABEL_8:
            sub_24DCCB008();
          }
        }
        else
        {
          sub_24DCCB008();
          sub_24DCCB028();
        }
      }
      if (*(unsigned char *)(a1 + 33) == 70)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        sub_24DCCB008();
      }
      sub_24DCCB048();
      unint64_t v11 = sub_24DCCA5E8();
      *(void *)((char *)a4 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v11;
      uint64_t v12 = a4[6] + 40 * v11;
      __int16 v13 = *(_WORD *)(a1 + 32);
      __n128 result = *(__n128 *)(a1 + 16);
      *(_OWORD *)uint64_t v12 = *(_OWORD *)a1;
      *(__n128 *)(v12 + 16) = result;
      *(_WORD *)(v12 + 32) = v13;
      uint64_t v15 = a4[7] + 24 * v11;
      *(void *)uint64_t v15 = a2;
      *(void *)(v15 + 8) = a3;
      *(double *)(v15 + 16) = a5;
      ++a4[2];
      return result;
  }
}

__n128 sub_24D7177F4(uint64_t a1, void *a2, double a3)
{
  sub_24DCCAFF8();
  long long v11 = *(_OWORD *)(a1 + 16);
  __int16 v12 = *(_WORD *)(a1 + 32);
  sub_24D6D0A84((uint64_t)&v11 + 8, (uint64_t)v13);
  sub_24DCC98F8();
  sub_24DCCB008();
  sub_24D6D0A84((uint64_t)v13, (uint64_t)&v14);
  int v6 = v15;
  switch(v15)
  {
    case 0xFAu:
    case 0xFBu:
    case 0xFCu:
    case 0xFDu:
    case 0xFEu:
      goto LABEL_8;
    default:
      sub_24DCCB008();
      if (v6 == 255)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        if (v6)
        {
          if (v6 == 1)
          {
            sub_24DCCB008();
            sub_24DCCB038();
          }
          else
          {
LABEL_8:
            sub_24DCCB008();
          }
        }
        else
        {
          sub_24DCCB008();
          sub_24DCCB028();
        }
      }
      if (SHIBYTE(v12) == 70)
      {
        sub_24DCCB018();
      }
      else
      {
        sub_24DCCB018();
        sub_24DCCB008();
      }
      sub_24DCC98F8();
      sub_24DCCB048();
      unint64_t v7 = sub_24DCCA5E8();
      *(void *)((char *)a2 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v7;
      uint64_t v8 = a2[6] + 56 * v7;
      long long v9 = *(_OWORD *)(a1 + 16);
      *(_OWORD *)uint64_t v8 = *(_OWORD *)a1;
      *(_OWORD *)(v8 + 16) = v9;
      __n128 result = *(__n128 *)(a1 + 32);
      *(__n128 *)(v8 + 32) = result;
      *(void *)(v8 + 48) = *(void *)(a1 + 48);
      *(double *)(a2[7] + 8 * v7) = a3;
      ++a2[2];
      return result;
  }
}

uint64_t sub_24D717A5C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B1936E0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B1936D0);
  MEMORY[0x270FA5388](v9 - 8);
  long long v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  unsigned __int8 v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24DCCAFF8();
  sub_24D415FD0(a1, (uint64_t)v15, &qword_26B18FF40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_24D3F0BA0((uint64_t)v15, (uint64_t)v8, &qword_26B1936E0);
    sub_24DCCB008();
    sub_24DC35CD4();
    uint64_t v16 = (uint64_t)v8;
    uint64_t v17 = &qword_26B1936E0;
  }
  else
  {
    sub_24D3F0BA0((uint64_t)v15, (uint64_t)v11, (uint64_t *)&unk_26B1936D0);
    sub_24DCCB008();
    sub_24DC35834();
    uint64_t v16 = (uint64_t)v11;
    uint64_t v17 = (uint64_t *)&unk_26B1936D0;
  }
  sub_24D415F74(v16, v17);
  sub_24DCCB048();
  unint64_t v18 = sub_24DCCA5E8();
  *(void *)((char *)a3 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v18;
  uint64_t result = sub_24D3F0BA0(a1, a3[6] + *(void *)(v13 + 72) * v18, &qword_26B18FF40);
  *(void *)(a3[7] + 8 * v18) = a2;
  ++a3[2];
  return result;
}

_OWORD *sub_24D717CDC(char a1, _OWORD *a2, void *a3)
{
  sub_24DCCAFF8();
  switch(a1)
  {
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
      sub_24DCCB008();
      break;
    default:
      sub_24DCCB008();
      sub_24DBBA7C4(a1);
      sub_24DCC98F8();
      swift_bridgeObjectRelease();
      break;
  }
  sub_24DCCB048();
  unint64_t v6 = sub_24DCCA5E8();
  *(void *)((char *)a3 + ((v6 >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << v6;
  *(unsigned char *)(a3[6] + v6) = a1;
  uint64_t result = sub_24D3F7E7C(a2, (_OWORD *)(a3[7] + 32 * v6));
  ++a3[2];
  return result;
}

_OWORD *sub_24D717E60(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_24D3F7E7C(a4, (_OWORD *)(a5[7] + 32 * a1));
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_24D717ECC(unint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  return sub_24D717ED8(a1, a2, a3, a4, a5, (uint64_t *)&unk_26B199598);
}

uint64_t sub_24D717ED8(unint64_t a1, uint64_t a2, char a3, uint64_t a4, void *a5, uint64_t *a6)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6] + 16 * a1;
  *(void *)uint64_t v10 = a2;
  *(unsigned char *)(v10 + 8) = a3;
  uint64_t v11 = a5[7];
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(a6);
  uint64_t result = sub_24D3F0BA0(a4, v11 + *(void *)(*(void *)(v12 - 8) + 72) * a1, a6);
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

uint64_t sub_24D717F84(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26B199300);
  uint64_t result = sub_24D3F0BA0(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t *)&unk_26B199300);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

_OWORD *sub_24D71802C(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v5 = a4[6] + 40 * a1;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v5 = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 16) = v6;
  *(void *)(v5 + 32) = *(void *)(a2 + 32);
  uint64_t result = sub_24D3F7E7C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_24D7180A8(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_24D7180F0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  sub_24D7190A4(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for DownloadProgressMonitor.ApplicationRequest);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_24DCC8CE8();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

uint64_t sub_24D7181E0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = type metadata accessor for DownloadProgressMonitor.URLProgressKey(0);
  uint64_t result = sub_24D7190A4(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, type metadata accessor for DownloadProgressMonitor.URLProgressKey);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_24D718294(unint64_t result, uint64_t a2, char a3, uint64_t a4, char a5, uint64_t a6, void *a7)
{
  a7[(result >> 6) + 8] |= 1 << result;
  uint64_t v7 = a7[6] + 16 * result;
  *(void *)uint64_t v7 = a2;
  *(unsigned char *)(v7 + 8) = a3;
  uint64_t v8 = a7[7] + 24 * result;
  *(void *)uint64_t v8 = a4;
  *(unsigned char *)(v8 + 8) = a5 & 1;
  *(void *)(v8 + 16) = a6;
  uint64_t v9 = a7[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a7[2] = v11;
  }
  return result;
}

unint64_t sub_24D7182F4(unint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(void *)uint64_t v6 = a3;
  *(unsigned char *)(v6 + 8) = a4 & 1;
  *(void *)(v6 + 16) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

uint64_t sub_24D71834C(unint64_t a1, char a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(unsigned char *)(a4[6] + a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = type metadata accessor for SyncState();
  uint64_t result = sub_24D7190A4(a3, v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, (uint64_t (*)(void))type metadata accessor for SyncState);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

unint64_t sub_24D7183F8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  a8[(result >> 6) + 8] |= 1 << result;
  uint64_t v8 = a8[6] + 32 * result;
  *(void *)uint64_t v8 = a2;
  *(void *)(v8 + 8) = a3;
  *(void *)(v8 + 16) = a4;
  *(unsigned char *)(v8 + 24) = a5;
  uint64_t v9 = (void *)(a8[7] + 16 * result);
  void *v9 = a6;
  v9[1] = a7;
  uint64_t v10 = a8[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a8[2] = v12;
  }
  return result;
}

uint64_t sub_24D71844C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t result = sub_24D3F0BA0(a2, a5[6] + 48 * a1, (uint64_t *)&unk_26B1926A0);
  uint64_t v10 = (void *)(a5[7] + 16 * a1);
  *uint64_t v10 = a3;
  v10[1] = a4;
  uint64_t v11 = a5[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a5[2] = v13;
  }
  return result;
}

uint64_t sub_24D7184DC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_24D433924(a3, a4[7] + 16 * a1);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_24D718544(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t (*a6)(void))
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = (void *)(a5[6] + 16 * a1);
  void *v9 = a2;
  v9[1] = a3;
  uint64_t v10 = a5[7];
  uint64_t v11 = a6(0);
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a4, v11);
  uint64_t v13 = a5[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a5[2] = v15;
  }
  return result;
}

uint64_t sub_24D7185F8(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26B18FF40);
  uint64_t result = sub_24D3F0BA0(a2, v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, &qword_26B18FF40);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_24D7186A8(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_24D7186F0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10 = *(void *)(a4 + 24);
  uint64_t v11 = *(void *)(a4 + 32);
  uint64_t v12 = __swift_mutable_project_boxed_opaque_existential_1(a4, v10);
  MEMORY[0x270FA5388](v12);
  BOOL v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v15 + 16))(v14);
  sub_24D718968(a1, a2, a3, (uint64_t)v14, a5, v10, v11);
  return __swift_destroy_boxed_opaque_existential_1(a4);
}

_OWORD *sub_24D7187FC(unint64_t a1, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = sub_24D3F7E7C(a3, (_OWORD *)(a4[7] + 32 * a1));
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

uint64_t sub_24D718864(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_24DCC8A58();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

unint64_t sub_24D71891C(unint64_t result, uint64_t a2, char a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = a5[6] + 16 * result;
  *(void *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 8) = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

uint64_t sub_24D718968(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_0, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  BOOL v14 = (void *)(a5[6] + 16 * a1);
  *BOOL v14 = a2;
  v14[1] = a3;
  uint64_t result = sub_24D57EC10(&v19, a5[7] + 40 * a1);
  uint64_t v16 = a5[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a5[2] = v18;
  }
  return result;
}

uint64_t sub_24D718A40()
{
  return 26;
}

uint64_t type metadata accessor for FileTreeError.ItemNotFoundStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemCollisionStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CannotBounceStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ContentUnavailableStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.DirectoryNotEmptyStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.VersionConflictStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.DownloadCancelled.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemMismatchStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.LookupNotPermittedStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.UploadCancelled.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemContentVersionMismatchStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemIsDetachedRootStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D718B68()
{
  return 4;
}

uint64_t sub_24D718B70()
{
  return 5;
}

uint64_t sub_24D718B78(void *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  a4(255);
  swift_getWitnessTable();
  uint64_t v5 = sub_24DCCAD58();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t type metadata accessor for FileTreeError.NoContentToFetch.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemNotTracked.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.SpeculativeDownloadRejectedStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CompressedFileReadFailedStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.MaxLookupDepthStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.UploadInterrupted.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemNeedDelayPropagationStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemIsFlockedStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemKindMismatchStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.DirectoryChangedStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.ItemNotEvictableStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CapturedContentMissingStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for FileTreeError.CollidingItemChangedBeforeBounceStruct.CodingKeys()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_24D718DE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

unint64_t sub_24D718E44()
{
  unint64_t result = qword_26B192330;
  if (!qword_26B192330)
  {
    sub_24DCC8A58();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B192330);
  }
  return result;
}

uint64_t sub_24D718E9C(uint64_t a1)
{
  return a1;
}

uint64_t sub_24D718ED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24D718F34(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_24D718F90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DownloadProgressMonitor.ApplicationRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_24D71903C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_24D7190A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unsigned char *sub_24D719118(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x24D7191B4);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_24D7191E4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D7192B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_24D7192D8(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D7193A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_24D7193D4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x24D7194A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_24D7194C8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7194E4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719500()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71951C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719538()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719554()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719570()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71958C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7195A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7195C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7195E0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7195FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719618()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719634()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719650()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71966C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719688()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7196A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7196C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7196DC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7196F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719714()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719730()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71974C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719768()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719784()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7197A0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7197BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7197D8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7197F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719810()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71982C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719848()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719864()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719880()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71989C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7198B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7198D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7198F0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71990C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719928()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719944()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719960()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D71997C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719998()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7199B4()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7199D0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D7199EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719A08()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719A24()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719A40()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719A5C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719A78()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719A94()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719AB0()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719ACC()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719AE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719B04()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719B20()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719B3C()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719B58()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719B74()
{
  return swift_getWitnessTable();
}

uint64_t sub_24D719BCC(uint64_t a1)
{
  return sub_24D6F543C(a1);
}

uint64_t sub_24D719BE4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    *((void *)&v7 + 1) = MEMORY[0x263F8D310];
    *(void *)&long long v6 = a1;
    *((void *)&v6 + 1) = a2;
  }
  else
  {
    long long v6 = 0u;
    long long v7 = 0u;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = sub_24D3E3EB4((uint64_t)&v6);
  uint64_t v4 = v3;
  sub_24D3E3E54((uint64_t)&v6);
  if (v4) {
    return v2;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24D719CA0(uint64_t a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = 0;
    v7[1] = 0;
    _OWORD v7[2] = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = MEMORY[0x263F8E970];
    uint64_t v2 = __ROR8__(a1, 32);
  }
  v7[0] = v2;
  uint64_t v3 = sub_24D3E3EB4((uint64_t)v7);
  uint64_t v5 = v4;
  sub_24D3E3E54((uint64_t)v7);
  if (v5) {
    return v3;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24D719D5C(uint64_t a1, char a2)
{
  if (a2)
  {
    a1 = 0;
    v6[1] = 0;
    uint64_t v6[2] = 0;
    uint64_t v7 = 0;
  }
  else
  {
    uint64_t v7 = MEMORY[0x263F8D9D0];
  }
  v6[0] = a1;
  uint64_t v2 = sub_24D3E3EB4((uint64_t)v6);
  uint64_t v4 = v3;
  sub_24D3E3E54((uint64_t)v6);
  if (v4) {
    return v2;
  }
  uint64_t result = sub_24DCCA978();
  __break(1u);
  return result;
}

uint64_t sub_24D719E14(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1852399981 && a2 == 0xE400000000000000;
  if (v2 || (sub_24DCCAE28() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_24DCCAE28();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_24D719EF0(char a1)
{
  if (a1) {
    return 0x726568746FLL;
  }
  else {
    return 1852399981;
  }
}

BOOL sub_24D719F1C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24D4357B4(*a1, *a2);
}

uint64_t sub_24D719F28()
{
  return sub_24D4358D4();
}

uint64_t sub_24D719F30()
{
  return sub_24D4357C4();
}

uint64_t sub_24D719F38()
{
  return sub_24DCCB048();
}

uint64_t sub_24D719F78()
{
  return sub_24D719EF0(*v0);
}

uint64_t sub_24D719F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_24D719E14(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24D719FA8(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B0](a1, WitnessTable);
}

uint64_t sub_24D719FFC(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return MEMORY[0x270FA00B8](a1, WitnessTable);
}

uint64_t sub_24D71A050@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v46 = a6;
  uint64_t v44 = sub_24DCCA3F8();
  uint64_t v50 = *(void *)(v44 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v44);
  uint64_t v55 = (char *)&v39 - v12;
  uint64_t v48 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](v11);
  unsigned int v43 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v47 = sub_24DCCAC08();
  uint64_t v54 = *(void *)(v47 - 8);
  MEMORY[0x270FA5388](v47);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v49 = a2;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v58 = a4;
  uint64_t v59 = a5;
  uint64_t v51 = a5;
  uint64_t v16 = type metadata accessor for ReconciliationID();
  uint64_t v45 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  long long v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v39 - v20;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  BOOL v22 = v60;
  sub_24DCCB0B8();
  if (v22)
  {
    uint64_t v27 = (uint64_t)a1;
  }
  else
  {
    uint64_t v40 = v19;
    unsigned int v41 = v21;
    uint64_t v23 = v48;
    uint64_t v24 = v49;
    uint64_t v42 = v16;
    uint64_t v60 = a1;
    uint64_t v25 = v50;
    LOBYTE(v56) = 0;
    uint64_t v26 = v47;
    sub_24DCCAB08();
    uint64_t v29 = v15;
    uint64_t v30 = v26;
    int v31 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v55, 1, v24);
    if (v31 == 1)
    {
      (*(void (**)(char *, uint64_t))(v25 + 8))(v55, v44);
      LOBYTE(v56) = 1;
      unint64_t v32 = v40;
      sub_24DCCAB98();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v29, v30);
      uint64_t v35 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
      uint64_t v37 = v41;
      v36(v41, v32, v35);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v54 + 8))(v29, v26);
      char v33 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
      uint64_t v34 = v43;
      v33(v43, v55, v24);
      uint64_t v37 = v41;
      v33(v41, v34, v24);
      uint64_t v35 = v42;
      swift_storeEnumTagMultiPayload();
      uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v45 + 32);
    }
    uint64_t v38 = (uint64_t)v60;
    v36(v46, v37, v35);
    uint64_t v27 = v38;
  }
  return __swift_destroy_boxed_opaque_existential_1(v27);
}

uint64_t sub_24D71A53C(void *a1, uint64_t a2)
{
  uint64_t v35 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v4 = MEMORY[0x270FA5388](a1);
  uint64_t v34 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = *(void *)(*(void *)(v6 + 16) - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v4);
  int v31 = (char *)v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 32);
  uint64_t v15 = *(void *)(v13 + 40);
  uint64_t v33 = v16;
  uint64_t v40 = v16;
  uint64_t v41 = v17;
  uint64_t v36 = v17;
  v30[1] = v15;
  void v30[2] = v14;
  uint64_t v42 = v14;
  uint64_t v43 = v15;
  _s10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v18 = sub_24DCCAD58();
  uint64_t v38 = *(void *)(v18 - 8);
  uint64_t v39 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)v30 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_24DCCB0D8();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v37, a2);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    BOOL v22 = v34;
    uint64_t v21 = v35;
    uint64_t v23 = v36;
    (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v12, v36);
    LOBYTE(v40) = 1;
    uint64_t v24 = v39;
    sub_24DCCACF8();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v23);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v20, v24);
  }
  else
  {
    uint64_t v27 = v31;
    uint64_t v26 = v32;
    uint64_t v28 = v33;
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v31, v12, v33);
    LOBYTE(v40) = 0;
    uint64_t v29 = v39;
    sub_24DCCACF8();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v20, v29);
  }
}

uint64_t sub_24D71A91C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, char *a3@<X8>)
{
  return sub_24D71A050(a1, a2[2], a2[3], a2[4], a2[5], a3);
}

uint64_t sub_24D71A940(void *a1, uint64_t a2)
{
  return sub_24D71A53C(a1, a2);
}

uint64_t *sub_24D71A958(unsigned __int8 a1, id a2)
{
  uint64_t v5 = *v2;
  int v6 = a1 >> 5;
  if (v6 == 4)
  {
    if (a1 == 129)
    {
      uint64_t v13 = *(void **)((char *)v2 + *(void *)(v5 + 608));
      if (v13) {
        id v14 = objc_msgSend(v13, sel_version);
      }
      else {
        id v14 = 0;
      }
      id v7 = objc_msgSend(a2, sel_bindLongParameter_, v14);
      goto LABEL_21;
    }
    goto LABEL_13;
  }
  if (v6 != 3)
  {
    if (v6 == 2)
    {
      if (a1 != 66)
      {
        if (a1 == 67)
        {
          id v7 = objc_msgSend(a2, sel_bindUnsignedLongParameter_, *(uint64_t *)((char *)v2 + *(void *)(v5 + 584)));
LABEL_21:
          id v23 = v7;
          BOOL v2 = (uint64_t *)sub_24DCC97E8();

          return v2;
        }
        goto LABEL_13;
      }
      swift_getAssociatedTypeWitness();
      uint64_t v20 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
      uint64_t v21 = *(uint64_t (**)(id, uint64_t, uint64_t))(v20 + 32);
      uint64_t v22 = swift_checkMetadataState();
      return (uint64_t *)v21(a2, v22, v20);
    }
    goto LABEL_13;
  }
  if (a1 != 97)
  {
    if (a1 == 98)
    {
      uint64_t v8 = (uint64_t)v2 + *(void *)(v5 + 600);
      long long v9 = *(_OWORD *)(v5 + 560);
      long long v25 = *(_OWORD *)(v5 + 544);
      long long v26 = v9;
      uint64_t v10 = type metadata accessor for Bouncing.BouncingContext();
      uint64_t WitnessTable = swift_getWitnessTable();
      return (uint64_t *)sub_24D7341C0(v8, v10, WitnessTable);
    }
LABEL_13:
    uint64_t v12 = sub_24DB17074(a1, (uint64_t)a2);
    if (v3) {
      return v2;
    }
    return (uint64_t *)v12;
  }
  uint64_t v15 = (uint64_t *)((char *)v2 + *(void *)(v5 + 592));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  *((void *)&v26 + 1) = MEMORY[0x263F8D310];
  *(void *)&long long v25 = v16;
  *((void *)&v25 + 1) = v17;
  swift_bridgeObjectRetain_n();
  BOOL v2 = (uint64_t *)sub_24D3E3EB4((uint64_t)&v25);
  uint64_t v19 = v18;
  sub_24D3E3E54((uint64_t)&v25);
  if (v19)
  {
    swift_bridgeObjectRelease();
    return v2;
  }
  uint64_t result = (uint64_t *)sub_24DCCA978();
  __break(1u);
  return result;
}

void sub_24D71AC28(uint64_t a1@<X0>, void *a2@<X1>, unsigned int a3@<W2>, uint64_t a4@<X8>)
{
  uint64_t v43 = (void *)a4;
  unsigned int v49 = a3;
  uint64_t v7 = v4[68];
  uint64_t v8 = v4[69];
  uint64_t v9 = v4[70];
  uint64_t v10 = v4[71];
  uint64_t v45 = v7;
  uint64_t v46 = v8;
  uint64_t v47 = v9;
  uint64_t v48 = v10;
  uint64_t v11 = (ValueMetadata *)type metadata accessor for Bouncing.BouncingContext();
  uint64_t v12 = sub_24DCCA3F8();
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v43 - v14;
  int v16 = a1 >> 5;
  if (v16 == 4)
  {
    if (a1 == 129)
    {
      id v19 = a2;
      uint64_t v20 = v49;
      if ((objc_msgSend(v19, sel_isNullAtIndex_, v49) & 1) != 0
        || (id v21 = objc_msgSend(v19, sel_integerAtIndex_, v20)) == 0)
      {

        uint64_t v30 = (uint64_t)v43;
        *(_OWORD *)uint64_t v43 = 0u;
        *(_OWORD *)(v30 + 16) = 0u;
      }
      else
      {
        id v22 = objc_msgSend(self, sel_domainVersionWithVersion_, v21);

        unint64_t v23 = sub_24D71C2F4();
        uint64_t v24 = v43;
        v43[3] = v23;
        void *v24 = v22;
      }
      return;
    }
LABEL_16:
    uint64_t v45 = v7;
    uint64_t v46 = v8;
    uint64_t v47 = v9;
    uint64_t v48 = v10;
    type metadata accessor for Job();
    sub_24DB172E0(a2, a1, v49, (uint64_t)v43);
    return;
  }
  if (v16 == 3)
  {
    if (a1 == 97)
    {
      uint64_t v37 = v43;
      v43[3] = &type metadata for Filename;
      id v38 = objc_msgSend(a2, sel_stringAtIndex_, v49);
      uint64_t v39 = sub_24DCC97E8();
      uint64_t v41 = v40;

      *uint64_t v37 = v39;
      v37[1] = v41;
      return;
    }
    if (a1 == 98)
    {
      uint64_t v25 = v13;
      swift_getWitnessTable();
      uint64_t v26 = v44;
      sub_24D735E08(v49, v11, (uint64_t)v15);
      if (!v26)
      {
        Description = (uint64_t (**)(char *, uint64_t, ValueMetadata *))v11[-1].Description;
        int v28 = Description[6](v15, 1, v11);
        uint64_t v29 = (uint64_t)v43;
        if (v28 == 1)
        {
          (*(void (**)(char *, uint64_t))(v25 + 8))(v15, v12);
          *(_OWORD *)uint64_t v29 = 0u;
          *(_OWORD *)(v29 + 16) = 0u;
        }
        else
        {
          v43[3] = v11;
          boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)v29);
          Description[4]((char *)boxed_opaque_existential_0, (uint64_t)v15, v11);
        }
      }
      return;
    }
    goto LABEL_16;
  }
  if (v16 != 2) {
    goto LABEL_16;
  }
  if (a1 != 66)
  {
    if (a1 == 67)
    {
      id v17 = objc_msgSend(a2, sel_unsignedLongAtIndex_, v49);
      uint64_t v18 = v43;
      v43[3] = MEMORY[0x263F8D9D0];
      *uint64_t v18 = v17;
      return;
    }
    goto LABEL_16;
  }
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(swift_getAssociatedConformanceWitness() + 40);
  uint64_t v33 = *(void (**)(id, void, uint64_t, uint64_t))(v32 + 16);
  uint64_t v34 = v43;
  v43[3] = AssociatedTypeWitness;
  __swift_allocate_boxed_opaque_existential_0(v34);
  id v35 = a2;
  uint64_t v36 = v44;
  v33(v35, v49, AssociatedTypeWitness, v32);
  if (v36) {
    __swift_deallocate_boxed_opaque_existential_0((uint64_t)v34);
  }
}